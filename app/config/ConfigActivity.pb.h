// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ConfigActivity.proto

#ifndef PROTOBUF_ConfigActivity_2eproto__INCLUDED
#define PROTOBUF_ConfigActivity_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "CommonGiftConfig.pb.h"
// @@protoc_insertion_point(includes)

namespace ConfigActivity {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_ConfigActivity_2eproto();
void protobuf_AssignDesc_ConfigActivity_2eproto();
void protobuf_ShutdownFile_ConfigActivity_2eproto();

class DailyFundCPP;
class NewShareCPP;
class Recharge4399CPP;
class Daily4399CPP;
class ActivityCfg;

// ===================================================================

class DailyFundCPP : public ::google::protobuf::Message {
 public:
  DailyFundCPP();
  virtual ~DailyFundCPP();

  DailyFundCPP(const DailyFundCPP& from);

  inline DailyFundCPP& operator=(const DailyFundCPP& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DailyFundCPP& default_instance();

  void Swap(DailyFundCPP* other);

  // implements Message ----------------------------------------------

  DailyFundCPP* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DailyFundCPP& from);
  void MergeFrom(const DailyFundCPP& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .CommonGiftConfig.CommonModifyItem diamond = 1;
  inline bool has_diamond() const;
  inline void clear_diamond();
  static const int kDiamondFieldNumber = 1;
  inline const ::CommonGiftConfig::CommonModifyItem& diamond() const;
  inline ::CommonGiftConfig::CommonModifyItem* mutable_diamond();
  inline ::CommonGiftConfig::CommonModifyItem* release_diamond();
  inline void set_allocated_diamond(::CommonGiftConfig::CommonModifyItem* diamond);

  // repeated .CommonGiftConfig.CommonModifyItem reward = 2;
  inline int reward_size() const;
  inline void clear_reward();
  static const int kRewardFieldNumber = 2;
  inline const ::CommonGiftConfig::CommonModifyItem& reward(int index) const;
  inline ::CommonGiftConfig::CommonModifyItem* mutable_reward(int index);
  inline ::CommonGiftConfig::CommonModifyItem* add_reward();
  inline const ::google::protobuf::RepeatedPtrField< ::CommonGiftConfig::CommonModifyItem >&
      reward() const;
  inline ::google::protobuf::RepeatedPtrField< ::CommonGiftConfig::CommonModifyItem >*
      mutable_reward();

  // @@protoc_insertion_point(class_scope:ConfigActivity.DailyFundCPP)
 private:
  inline void set_has_diamond();
  inline void clear_has_diamond();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::CommonGiftConfig::CommonModifyItem* diamond_;
  ::google::protobuf::RepeatedPtrField< ::CommonGiftConfig::CommonModifyItem > reward_;
  friend void  protobuf_AddDesc_ConfigActivity_2eproto();
  friend void protobuf_AssignDesc_ConfigActivity_2eproto();
  friend void protobuf_ShutdownFile_ConfigActivity_2eproto();

  void InitAsDefaultInstance();
  static DailyFundCPP* default_instance_;
};
// -------------------------------------------------------------------

class NewShareCPP : public ::google::protobuf::Message {
 public:
  NewShareCPP();
  virtual ~NewShareCPP();

  NewShareCPP(const NewShareCPP& from);

  inline NewShareCPP& operator=(const NewShareCPP& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NewShareCPP& default_instance();

  void Swap(NewShareCPP* other);

  // implements Message ----------------------------------------------

  NewShareCPP* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NewShareCPP& from);
  void MergeFrom(const NewShareCPP& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 share_cd_time = 1;
  inline int share_cd_time_size() const;
  inline void clear_share_cd_time();
  static const int kShareCdTimeFieldNumber = 1;
  inline ::google::protobuf::uint32 share_cd_time(int index) const;
  inline void set_share_cd_time(int index, ::google::protobuf::uint32 value);
  inline void add_share_cd_time(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      share_cd_time() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_share_cd_time();

  // repeated .CommonGiftConfig.CommonModifyItem share_reward = 2;
  inline int share_reward_size() const;
  inline void clear_share_reward();
  static const int kShareRewardFieldNumber = 2;
  inline const ::CommonGiftConfig::CommonModifyItem& share_reward(int index) const;
  inline ::CommonGiftConfig::CommonModifyItem* mutable_share_reward(int index);
  inline ::CommonGiftConfig::CommonModifyItem* add_share_reward();
  inline const ::google::protobuf::RepeatedPtrField< ::CommonGiftConfig::CommonModifyItem >&
      share_reward() const;
  inline ::google::protobuf::RepeatedPtrField< ::CommonGiftConfig::CommonModifyItem >*
      mutable_share_reward();

  // repeated .CommonGiftConfig.CommonModifyItem reward = 3;
  inline int reward_size() const;
  inline void clear_reward();
  static const int kRewardFieldNumber = 3;
  inline const ::CommonGiftConfig::CommonModifyItem& reward(int index) const;
  inline ::CommonGiftConfig::CommonModifyItem* mutable_reward(int index);
  inline ::CommonGiftConfig::CommonModifyItem* add_reward();
  inline const ::google::protobuf::RepeatedPtrField< ::CommonGiftConfig::CommonModifyItem >&
      reward() const;
  inline ::google::protobuf::RepeatedPtrField< ::CommonGiftConfig::CommonModifyItem >*
      mutable_reward();

  // @@protoc_insertion_point(class_scope:ConfigActivity.NewShareCPP)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > share_cd_time_;
  ::google::protobuf::RepeatedPtrField< ::CommonGiftConfig::CommonModifyItem > share_reward_;
  ::google::protobuf::RepeatedPtrField< ::CommonGiftConfig::CommonModifyItem > reward_;
  friend void  protobuf_AddDesc_ConfigActivity_2eproto();
  friend void protobuf_AssignDesc_ConfigActivity_2eproto();
  friend void protobuf_ShutdownFile_ConfigActivity_2eproto();

  void InitAsDefaultInstance();
  static NewShareCPP* default_instance_;
};
// -------------------------------------------------------------------

class Recharge4399CPP : public ::google::protobuf::Message {
 public:
  Recharge4399CPP();
  virtual ~Recharge4399CPP();

  Recharge4399CPP(const Recharge4399CPP& from);

  inline Recharge4399CPP& operator=(const Recharge4399CPP& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Recharge4399CPP& default_instance();

  void Swap(Recharge4399CPP* other);

  // implements Message ----------------------------------------------

  Recharge4399CPP* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Recharge4399CPP& from);
  void MergeFrom(const Recharge4399CPP& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 limit = 1;
  inline int limit_size() const;
  inline void clear_limit();
  static const int kLimitFieldNumber = 1;
  inline ::google::protobuf::uint32 limit(int index) const;
  inline void set_limit(int index, ::google::protobuf::uint32 value);
  inline void add_limit(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      limit() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_limit();

  // repeated .CommonGiftConfig.CommonModifyItem reward = 3;
  inline int reward_size() const;
  inline void clear_reward();
  static const int kRewardFieldNumber = 3;
  inline const ::CommonGiftConfig::CommonModifyItem& reward(int index) const;
  inline ::CommonGiftConfig::CommonModifyItem* mutable_reward(int index);
  inline ::CommonGiftConfig::CommonModifyItem* add_reward();
  inline const ::google::protobuf::RepeatedPtrField< ::CommonGiftConfig::CommonModifyItem >&
      reward() const;
  inline ::google::protobuf::RepeatedPtrField< ::CommonGiftConfig::CommonModifyItem >*
      mutable_reward();

  // @@protoc_insertion_point(class_scope:ConfigActivity.Recharge4399CPP)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > limit_;
  ::google::protobuf::RepeatedPtrField< ::CommonGiftConfig::CommonModifyItem > reward_;
  friend void  protobuf_AddDesc_ConfigActivity_2eproto();
  friend void protobuf_AssignDesc_ConfigActivity_2eproto();
  friend void protobuf_ShutdownFile_ConfigActivity_2eproto();

  void InitAsDefaultInstance();
  static Recharge4399CPP* default_instance_;
};
// -------------------------------------------------------------------

class Daily4399CPP : public ::google::protobuf::Message {
 public:
  Daily4399CPP();
  virtual ~Daily4399CPP();

  Daily4399CPP(const Daily4399CPP& from);

  inline Daily4399CPP& operator=(const Daily4399CPP& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Daily4399CPP& default_instance();

  void Swap(Daily4399CPP* other);

  // implements Message ----------------------------------------------

  Daily4399CPP* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Daily4399CPP& from);
  void MergeFrom(const Daily4399CPP& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 limit = 1;
  inline int limit_size() const;
  inline void clear_limit();
  static const int kLimitFieldNumber = 1;
  inline ::google::protobuf::uint32 limit(int index) const;
  inline void set_limit(int index, ::google::protobuf::uint32 value);
  inline void add_limit(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      limit() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_limit();

  // repeated .CommonGiftConfig.CommonModifyItem reward = 2;
  inline int reward_size() const;
  inline void clear_reward();
  static const int kRewardFieldNumber = 2;
  inline const ::CommonGiftConfig::CommonModifyItem& reward(int index) const;
  inline ::CommonGiftConfig::CommonModifyItem* mutable_reward(int index);
  inline ::CommonGiftConfig::CommonModifyItem* add_reward();
  inline const ::google::protobuf::RepeatedPtrField< ::CommonGiftConfig::CommonModifyItem >&
      reward() const;
  inline ::google::protobuf::RepeatedPtrField< ::CommonGiftConfig::CommonModifyItem >*
      mutable_reward();

  // required .CommonGiftConfig.CommonModifyItem month_card = 3;
  inline bool has_month_card() const;
  inline void clear_month_card();
  static const int kMonthCardFieldNumber = 3;
  inline const ::CommonGiftConfig::CommonModifyItem& month_card() const;
  inline ::CommonGiftConfig::CommonModifyItem* mutable_month_card();
  inline ::CommonGiftConfig::CommonModifyItem* release_month_card();
  inline void set_allocated_month_card(::CommonGiftConfig::CommonModifyItem* month_card);

  // required .CommonGiftConfig.CommonModifyItem life_card = 4;
  inline bool has_life_card() const;
  inline void clear_life_card();
  static const int kLifeCardFieldNumber = 4;
  inline const ::CommonGiftConfig::CommonModifyItem& life_card() const;
  inline ::CommonGiftConfig::CommonModifyItem* mutable_life_card();
  inline ::CommonGiftConfig::CommonModifyItem* release_life_card();
  inline void set_allocated_life_card(::CommonGiftConfig::CommonModifyItem* life_card);

  // @@protoc_insertion_point(class_scope:ConfigActivity.Daily4399CPP)
 private:
  inline void set_has_month_card();
  inline void clear_has_month_card();
  inline void set_has_life_card();
  inline void clear_has_life_card();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > limit_;
  ::google::protobuf::RepeatedPtrField< ::CommonGiftConfig::CommonModifyItem > reward_;
  ::CommonGiftConfig::CommonModifyItem* month_card_;
  ::CommonGiftConfig::CommonModifyItem* life_card_;
  friend void  protobuf_AddDesc_ConfigActivity_2eproto();
  friend void protobuf_AssignDesc_ConfigActivity_2eproto();
  friend void protobuf_ShutdownFile_ConfigActivity_2eproto();

  void InitAsDefaultInstance();
  static Daily4399CPP* default_instance_;
};
// -------------------------------------------------------------------

class ActivityCfg : public ::google::protobuf::Message {
 public:
  ActivityCfg();
  virtual ~ActivityCfg();

  ActivityCfg(const ActivityCfg& from);

  inline ActivityCfg& operator=(const ActivityCfg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ActivityCfg& default_instance();

  void Swap(ActivityCfg* other);

  // implements Message ----------------------------------------------

  ActivityCfg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ActivityCfg& from);
  void MergeFrom(const ActivityCfg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .ConfigActivity.DailyFundCPP daily_fund = 1;
  inline bool has_daily_fund() const;
  inline void clear_daily_fund();
  static const int kDailyFundFieldNumber = 1;
  inline const ::ConfigActivity::DailyFundCPP& daily_fund() const;
  inline ::ConfigActivity::DailyFundCPP* mutable_daily_fund();
  inline ::ConfigActivity::DailyFundCPP* release_daily_fund();
  inline void set_allocated_daily_fund(::ConfigActivity::DailyFundCPP* daily_fund);

  // required .ConfigActivity.NewShareCPP new_share = 2;
  inline bool has_new_share() const;
  inline void clear_new_share();
  static const int kNewShareFieldNumber = 2;
  inline const ::ConfigActivity::NewShareCPP& new_share() const;
  inline ::ConfigActivity::NewShareCPP* mutable_new_share();
  inline ::ConfigActivity::NewShareCPP* release_new_share();
  inline void set_allocated_new_share(::ConfigActivity::NewShareCPP* new_share);

  // required .ConfigActivity.Recharge4399CPP charge_4399 = 3;
  inline bool has_charge_4399() const;
  inline void clear_charge_4399();
  static const int kCharge4399FieldNumber = 3;
  inline const ::ConfigActivity::Recharge4399CPP& charge_4399() const;
  inline ::ConfigActivity::Recharge4399CPP* mutable_charge_4399();
  inline ::ConfigActivity::Recharge4399CPP* release_charge_4399();
  inline void set_allocated_charge_4399(::ConfigActivity::Recharge4399CPP* charge_4399);

  // required .ConfigActivity.Daily4399CPP daily_4399 = 4;
  inline bool has_daily_4399() const;
  inline void clear_daily_4399();
  static const int kDaily4399FieldNumber = 4;
  inline const ::ConfigActivity::Daily4399CPP& daily_4399() const;
  inline ::ConfigActivity::Daily4399CPP* mutable_daily_4399();
  inline ::ConfigActivity::Daily4399CPP* release_daily_4399();
  inline void set_allocated_daily_4399(::ConfigActivity::Daily4399CPP* daily_4399);

  // @@protoc_insertion_point(class_scope:ConfigActivity.ActivityCfg)
 private:
  inline void set_has_daily_fund();
  inline void clear_has_daily_fund();
  inline void set_has_new_share();
  inline void clear_has_new_share();
  inline void set_has_charge_4399();
  inline void clear_has_charge_4399();
  inline void set_has_daily_4399();
  inline void clear_has_daily_4399();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::ConfigActivity::DailyFundCPP* daily_fund_;
  ::ConfigActivity::NewShareCPP* new_share_;
  ::ConfigActivity::Recharge4399CPP* charge_4399_;
  ::ConfigActivity::Daily4399CPP* daily_4399_;
  friend void  protobuf_AddDesc_ConfigActivity_2eproto();
  friend void protobuf_AssignDesc_ConfigActivity_2eproto();
  friend void protobuf_ShutdownFile_ConfigActivity_2eproto();

  void InitAsDefaultInstance();
  static ActivityCfg* default_instance_;
};
// ===================================================================


// ===================================================================

// DailyFundCPP

// required .CommonGiftConfig.CommonModifyItem diamond = 1;
inline bool DailyFundCPP::has_diamond() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DailyFundCPP::set_has_diamond() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DailyFundCPP::clear_has_diamond() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DailyFundCPP::clear_diamond() {
  if (diamond_ != NULL) diamond_->::CommonGiftConfig::CommonModifyItem::Clear();
  clear_has_diamond();
}
inline const ::CommonGiftConfig::CommonModifyItem& DailyFundCPP::diamond() const {
  // @@protoc_insertion_point(field_get:ConfigActivity.DailyFundCPP.diamond)
  return diamond_ != NULL ? *diamond_ : *default_instance_->diamond_;
}
inline ::CommonGiftConfig::CommonModifyItem* DailyFundCPP::mutable_diamond() {
  set_has_diamond();
  if (diamond_ == NULL) diamond_ = new ::CommonGiftConfig::CommonModifyItem;
  // @@protoc_insertion_point(field_mutable:ConfigActivity.DailyFundCPP.diamond)
  return diamond_;
}
inline ::CommonGiftConfig::CommonModifyItem* DailyFundCPP::release_diamond() {
  clear_has_diamond();
  ::CommonGiftConfig::CommonModifyItem* temp = diamond_;
  diamond_ = NULL;
  return temp;
}
inline void DailyFundCPP::set_allocated_diamond(::CommonGiftConfig::CommonModifyItem* diamond) {
  delete diamond_;
  diamond_ = diamond;
  if (diamond) {
    set_has_diamond();
  } else {
    clear_has_diamond();
  }
  // @@protoc_insertion_point(field_set_allocated:ConfigActivity.DailyFundCPP.diamond)
}

// repeated .CommonGiftConfig.CommonModifyItem reward = 2;
inline int DailyFundCPP::reward_size() const {
  return reward_.size();
}
inline void DailyFundCPP::clear_reward() {
  reward_.Clear();
}
inline const ::CommonGiftConfig::CommonModifyItem& DailyFundCPP::reward(int index) const {
  // @@protoc_insertion_point(field_get:ConfigActivity.DailyFundCPP.reward)
  return reward_.Get(index);
}
inline ::CommonGiftConfig::CommonModifyItem* DailyFundCPP::mutable_reward(int index) {
  // @@protoc_insertion_point(field_mutable:ConfigActivity.DailyFundCPP.reward)
  return reward_.Mutable(index);
}
inline ::CommonGiftConfig::CommonModifyItem* DailyFundCPP::add_reward() {
  // @@protoc_insertion_point(field_add:ConfigActivity.DailyFundCPP.reward)
  return reward_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CommonGiftConfig::CommonModifyItem >&
DailyFundCPP::reward() const {
  // @@protoc_insertion_point(field_list:ConfigActivity.DailyFundCPP.reward)
  return reward_;
}
inline ::google::protobuf::RepeatedPtrField< ::CommonGiftConfig::CommonModifyItem >*
DailyFundCPP::mutable_reward() {
  // @@protoc_insertion_point(field_mutable_list:ConfigActivity.DailyFundCPP.reward)
  return &reward_;
}

// -------------------------------------------------------------------

// NewShareCPP

// repeated uint32 share_cd_time = 1;
inline int NewShareCPP::share_cd_time_size() const {
  return share_cd_time_.size();
}
inline void NewShareCPP::clear_share_cd_time() {
  share_cd_time_.Clear();
}
inline ::google::protobuf::uint32 NewShareCPP::share_cd_time(int index) const {
  // @@protoc_insertion_point(field_get:ConfigActivity.NewShareCPP.share_cd_time)
  return share_cd_time_.Get(index);
}
inline void NewShareCPP::set_share_cd_time(int index, ::google::protobuf::uint32 value) {
  share_cd_time_.Set(index, value);
  // @@protoc_insertion_point(field_set:ConfigActivity.NewShareCPP.share_cd_time)
}
inline void NewShareCPP::add_share_cd_time(::google::protobuf::uint32 value) {
  share_cd_time_.Add(value);
  // @@protoc_insertion_point(field_add:ConfigActivity.NewShareCPP.share_cd_time)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
NewShareCPP::share_cd_time() const {
  // @@protoc_insertion_point(field_list:ConfigActivity.NewShareCPP.share_cd_time)
  return share_cd_time_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
NewShareCPP::mutable_share_cd_time() {
  // @@protoc_insertion_point(field_mutable_list:ConfigActivity.NewShareCPP.share_cd_time)
  return &share_cd_time_;
}

// repeated .CommonGiftConfig.CommonModifyItem share_reward = 2;
inline int NewShareCPP::share_reward_size() const {
  return share_reward_.size();
}
inline void NewShareCPP::clear_share_reward() {
  share_reward_.Clear();
}
inline const ::CommonGiftConfig::CommonModifyItem& NewShareCPP::share_reward(int index) const {
  // @@protoc_insertion_point(field_get:ConfigActivity.NewShareCPP.share_reward)
  return share_reward_.Get(index);
}
inline ::CommonGiftConfig::CommonModifyItem* NewShareCPP::mutable_share_reward(int index) {
  // @@protoc_insertion_point(field_mutable:ConfigActivity.NewShareCPP.share_reward)
  return share_reward_.Mutable(index);
}
inline ::CommonGiftConfig::CommonModifyItem* NewShareCPP::add_share_reward() {
  // @@protoc_insertion_point(field_add:ConfigActivity.NewShareCPP.share_reward)
  return share_reward_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CommonGiftConfig::CommonModifyItem >&
NewShareCPP::share_reward() const {
  // @@protoc_insertion_point(field_list:ConfigActivity.NewShareCPP.share_reward)
  return share_reward_;
}
inline ::google::protobuf::RepeatedPtrField< ::CommonGiftConfig::CommonModifyItem >*
NewShareCPP::mutable_share_reward() {
  // @@protoc_insertion_point(field_mutable_list:ConfigActivity.NewShareCPP.share_reward)
  return &share_reward_;
}

// repeated .CommonGiftConfig.CommonModifyItem reward = 3;
inline int NewShareCPP::reward_size() const {
  return reward_.size();
}
inline void NewShareCPP::clear_reward() {
  reward_.Clear();
}
inline const ::CommonGiftConfig::CommonModifyItem& NewShareCPP::reward(int index) const {
  // @@protoc_insertion_point(field_get:ConfigActivity.NewShareCPP.reward)
  return reward_.Get(index);
}
inline ::CommonGiftConfig::CommonModifyItem* NewShareCPP::mutable_reward(int index) {
  // @@protoc_insertion_point(field_mutable:ConfigActivity.NewShareCPP.reward)
  return reward_.Mutable(index);
}
inline ::CommonGiftConfig::CommonModifyItem* NewShareCPP::add_reward() {
  // @@protoc_insertion_point(field_add:ConfigActivity.NewShareCPP.reward)
  return reward_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CommonGiftConfig::CommonModifyItem >&
NewShareCPP::reward() const {
  // @@protoc_insertion_point(field_list:ConfigActivity.NewShareCPP.reward)
  return reward_;
}
inline ::google::protobuf::RepeatedPtrField< ::CommonGiftConfig::CommonModifyItem >*
NewShareCPP::mutable_reward() {
  // @@protoc_insertion_point(field_mutable_list:ConfigActivity.NewShareCPP.reward)
  return &reward_;
}

// -------------------------------------------------------------------

// Recharge4399CPP

// repeated uint32 limit = 1;
inline int Recharge4399CPP::limit_size() const {
  return limit_.size();
}
inline void Recharge4399CPP::clear_limit() {
  limit_.Clear();
}
inline ::google::protobuf::uint32 Recharge4399CPP::limit(int index) const {
  // @@protoc_insertion_point(field_get:ConfigActivity.Recharge4399CPP.limit)
  return limit_.Get(index);
}
inline void Recharge4399CPP::set_limit(int index, ::google::protobuf::uint32 value) {
  limit_.Set(index, value);
  // @@protoc_insertion_point(field_set:ConfigActivity.Recharge4399CPP.limit)
}
inline void Recharge4399CPP::add_limit(::google::protobuf::uint32 value) {
  limit_.Add(value);
  // @@protoc_insertion_point(field_add:ConfigActivity.Recharge4399CPP.limit)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
Recharge4399CPP::limit() const {
  // @@protoc_insertion_point(field_list:ConfigActivity.Recharge4399CPP.limit)
  return limit_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
Recharge4399CPP::mutable_limit() {
  // @@protoc_insertion_point(field_mutable_list:ConfigActivity.Recharge4399CPP.limit)
  return &limit_;
}

// repeated .CommonGiftConfig.CommonModifyItem reward = 3;
inline int Recharge4399CPP::reward_size() const {
  return reward_.size();
}
inline void Recharge4399CPP::clear_reward() {
  reward_.Clear();
}
inline const ::CommonGiftConfig::CommonModifyItem& Recharge4399CPP::reward(int index) const {
  // @@protoc_insertion_point(field_get:ConfigActivity.Recharge4399CPP.reward)
  return reward_.Get(index);
}
inline ::CommonGiftConfig::CommonModifyItem* Recharge4399CPP::mutable_reward(int index) {
  // @@protoc_insertion_point(field_mutable:ConfigActivity.Recharge4399CPP.reward)
  return reward_.Mutable(index);
}
inline ::CommonGiftConfig::CommonModifyItem* Recharge4399CPP::add_reward() {
  // @@protoc_insertion_point(field_add:ConfigActivity.Recharge4399CPP.reward)
  return reward_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CommonGiftConfig::CommonModifyItem >&
Recharge4399CPP::reward() const {
  // @@protoc_insertion_point(field_list:ConfigActivity.Recharge4399CPP.reward)
  return reward_;
}
inline ::google::protobuf::RepeatedPtrField< ::CommonGiftConfig::CommonModifyItem >*
Recharge4399CPP::mutable_reward() {
  // @@protoc_insertion_point(field_mutable_list:ConfigActivity.Recharge4399CPP.reward)
  return &reward_;
}

// -------------------------------------------------------------------

// Daily4399CPP

// repeated uint32 limit = 1;
inline int Daily4399CPP::limit_size() const {
  return limit_.size();
}
inline void Daily4399CPP::clear_limit() {
  limit_.Clear();
}
inline ::google::protobuf::uint32 Daily4399CPP::limit(int index) const {
  // @@protoc_insertion_point(field_get:ConfigActivity.Daily4399CPP.limit)
  return limit_.Get(index);
}
inline void Daily4399CPP::set_limit(int index, ::google::protobuf::uint32 value) {
  limit_.Set(index, value);
  // @@protoc_insertion_point(field_set:ConfigActivity.Daily4399CPP.limit)
}
inline void Daily4399CPP::add_limit(::google::protobuf::uint32 value) {
  limit_.Add(value);
  // @@protoc_insertion_point(field_add:ConfigActivity.Daily4399CPP.limit)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
Daily4399CPP::limit() const {
  // @@protoc_insertion_point(field_list:ConfigActivity.Daily4399CPP.limit)
  return limit_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
Daily4399CPP::mutable_limit() {
  // @@protoc_insertion_point(field_mutable_list:ConfigActivity.Daily4399CPP.limit)
  return &limit_;
}

// repeated .CommonGiftConfig.CommonModifyItem reward = 2;
inline int Daily4399CPP::reward_size() const {
  return reward_.size();
}
inline void Daily4399CPP::clear_reward() {
  reward_.Clear();
}
inline const ::CommonGiftConfig::CommonModifyItem& Daily4399CPP::reward(int index) const {
  // @@protoc_insertion_point(field_get:ConfigActivity.Daily4399CPP.reward)
  return reward_.Get(index);
}
inline ::CommonGiftConfig::CommonModifyItem* Daily4399CPP::mutable_reward(int index) {
  // @@protoc_insertion_point(field_mutable:ConfigActivity.Daily4399CPP.reward)
  return reward_.Mutable(index);
}
inline ::CommonGiftConfig::CommonModifyItem* Daily4399CPP::add_reward() {
  // @@protoc_insertion_point(field_add:ConfigActivity.Daily4399CPP.reward)
  return reward_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CommonGiftConfig::CommonModifyItem >&
Daily4399CPP::reward() const {
  // @@protoc_insertion_point(field_list:ConfigActivity.Daily4399CPP.reward)
  return reward_;
}
inline ::google::protobuf::RepeatedPtrField< ::CommonGiftConfig::CommonModifyItem >*
Daily4399CPP::mutable_reward() {
  // @@protoc_insertion_point(field_mutable_list:ConfigActivity.Daily4399CPP.reward)
  return &reward_;
}

// required .CommonGiftConfig.CommonModifyItem month_card = 3;
inline bool Daily4399CPP::has_month_card() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Daily4399CPP::set_has_month_card() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Daily4399CPP::clear_has_month_card() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Daily4399CPP::clear_month_card() {
  if (month_card_ != NULL) month_card_->::CommonGiftConfig::CommonModifyItem::Clear();
  clear_has_month_card();
}
inline const ::CommonGiftConfig::CommonModifyItem& Daily4399CPP::month_card() const {
  // @@protoc_insertion_point(field_get:ConfigActivity.Daily4399CPP.month_card)
  return month_card_ != NULL ? *month_card_ : *default_instance_->month_card_;
}
inline ::CommonGiftConfig::CommonModifyItem* Daily4399CPP::mutable_month_card() {
  set_has_month_card();
  if (month_card_ == NULL) month_card_ = new ::CommonGiftConfig::CommonModifyItem;
  // @@protoc_insertion_point(field_mutable:ConfigActivity.Daily4399CPP.month_card)
  return month_card_;
}
inline ::CommonGiftConfig::CommonModifyItem* Daily4399CPP::release_month_card() {
  clear_has_month_card();
  ::CommonGiftConfig::CommonModifyItem* temp = month_card_;
  month_card_ = NULL;
  return temp;
}
inline void Daily4399CPP::set_allocated_month_card(::CommonGiftConfig::CommonModifyItem* month_card) {
  delete month_card_;
  month_card_ = month_card;
  if (month_card) {
    set_has_month_card();
  } else {
    clear_has_month_card();
  }
  // @@protoc_insertion_point(field_set_allocated:ConfigActivity.Daily4399CPP.month_card)
}

// required .CommonGiftConfig.CommonModifyItem life_card = 4;
inline bool Daily4399CPP::has_life_card() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Daily4399CPP::set_has_life_card() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Daily4399CPP::clear_has_life_card() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Daily4399CPP::clear_life_card() {
  if (life_card_ != NULL) life_card_->::CommonGiftConfig::CommonModifyItem::Clear();
  clear_has_life_card();
}
inline const ::CommonGiftConfig::CommonModifyItem& Daily4399CPP::life_card() const {
  // @@protoc_insertion_point(field_get:ConfigActivity.Daily4399CPP.life_card)
  return life_card_ != NULL ? *life_card_ : *default_instance_->life_card_;
}
inline ::CommonGiftConfig::CommonModifyItem* Daily4399CPP::mutable_life_card() {
  set_has_life_card();
  if (life_card_ == NULL) life_card_ = new ::CommonGiftConfig::CommonModifyItem;
  // @@protoc_insertion_point(field_mutable:ConfigActivity.Daily4399CPP.life_card)
  return life_card_;
}
inline ::CommonGiftConfig::CommonModifyItem* Daily4399CPP::release_life_card() {
  clear_has_life_card();
  ::CommonGiftConfig::CommonModifyItem* temp = life_card_;
  life_card_ = NULL;
  return temp;
}
inline void Daily4399CPP::set_allocated_life_card(::CommonGiftConfig::CommonModifyItem* life_card) {
  delete life_card_;
  life_card_ = life_card;
  if (life_card) {
    set_has_life_card();
  } else {
    clear_has_life_card();
  }
  // @@protoc_insertion_point(field_set_allocated:ConfigActivity.Daily4399CPP.life_card)
}

// -------------------------------------------------------------------

// ActivityCfg

// required .ConfigActivity.DailyFundCPP daily_fund = 1;
inline bool ActivityCfg::has_daily_fund() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ActivityCfg::set_has_daily_fund() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ActivityCfg::clear_has_daily_fund() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ActivityCfg::clear_daily_fund() {
  if (daily_fund_ != NULL) daily_fund_->::ConfigActivity::DailyFundCPP::Clear();
  clear_has_daily_fund();
}
inline const ::ConfigActivity::DailyFundCPP& ActivityCfg::daily_fund() const {
  // @@protoc_insertion_point(field_get:ConfigActivity.ActivityCfg.daily_fund)
  return daily_fund_ != NULL ? *daily_fund_ : *default_instance_->daily_fund_;
}
inline ::ConfigActivity::DailyFundCPP* ActivityCfg::mutable_daily_fund() {
  set_has_daily_fund();
  if (daily_fund_ == NULL) daily_fund_ = new ::ConfigActivity::DailyFundCPP;
  // @@protoc_insertion_point(field_mutable:ConfigActivity.ActivityCfg.daily_fund)
  return daily_fund_;
}
inline ::ConfigActivity::DailyFundCPP* ActivityCfg::release_daily_fund() {
  clear_has_daily_fund();
  ::ConfigActivity::DailyFundCPP* temp = daily_fund_;
  daily_fund_ = NULL;
  return temp;
}
inline void ActivityCfg::set_allocated_daily_fund(::ConfigActivity::DailyFundCPP* daily_fund) {
  delete daily_fund_;
  daily_fund_ = daily_fund;
  if (daily_fund) {
    set_has_daily_fund();
  } else {
    clear_has_daily_fund();
  }
  // @@protoc_insertion_point(field_set_allocated:ConfigActivity.ActivityCfg.daily_fund)
}

// required .ConfigActivity.NewShareCPP new_share = 2;
inline bool ActivityCfg::has_new_share() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ActivityCfg::set_has_new_share() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ActivityCfg::clear_has_new_share() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ActivityCfg::clear_new_share() {
  if (new_share_ != NULL) new_share_->::ConfigActivity::NewShareCPP::Clear();
  clear_has_new_share();
}
inline const ::ConfigActivity::NewShareCPP& ActivityCfg::new_share() const {
  // @@protoc_insertion_point(field_get:ConfigActivity.ActivityCfg.new_share)
  return new_share_ != NULL ? *new_share_ : *default_instance_->new_share_;
}
inline ::ConfigActivity::NewShareCPP* ActivityCfg::mutable_new_share() {
  set_has_new_share();
  if (new_share_ == NULL) new_share_ = new ::ConfigActivity::NewShareCPP;
  // @@protoc_insertion_point(field_mutable:ConfigActivity.ActivityCfg.new_share)
  return new_share_;
}
inline ::ConfigActivity::NewShareCPP* ActivityCfg::release_new_share() {
  clear_has_new_share();
  ::ConfigActivity::NewShareCPP* temp = new_share_;
  new_share_ = NULL;
  return temp;
}
inline void ActivityCfg::set_allocated_new_share(::ConfigActivity::NewShareCPP* new_share) {
  delete new_share_;
  new_share_ = new_share;
  if (new_share) {
    set_has_new_share();
  } else {
    clear_has_new_share();
  }
  // @@protoc_insertion_point(field_set_allocated:ConfigActivity.ActivityCfg.new_share)
}

// required .ConfigActivity.Recharge4399CPP charge_4399 = 3;
inline bool ActivityCfg::has_charge_4399() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ActivityCfg::set_has_charge_4399() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ActivityCfg::clear_has_charge_4399() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ActivityCfg::clear_charge_4399() {
  if (charge_4399_ != NULL) charge_4399_->::ConfigActivity::Recharge4399CPP::Clear();
  clear_has_charge_4399();
}
inline const ::ConfigActivity::Recharge4399CPP& ActivityCfg::charge_4399() const {
  // @@protoc_insertion_point(field_get:ConfigActivity.ActivityCfg.charge_4399)
  return charge_4399_ != NULL ? *charge_4399_ : *default_instance_->charge_4399_;
}
inline ::ConfigActivity::Recharge4399CPP* ActivityCfg::mutable_charge_4399() {
  set_has_charge_4399();
  if (charge_4399_ == NULL) charge_4399_ = new ::ConfigActivity::Recharge4399CPP;
  // @@protoc_insertion_point(field_mutable:ConfigActivity.ActivityCfg.charge_4399)
  return charge_4399_;
}
inline ::ConfigActivity::Recharge4399CPP* ActivityCfg::release_charge_4399() {
  clear_has_charge_4399();
  ::ConfigActivity::Recharge4399CPP* temp = charge_4399_;
  charge_4399_ = NULL;
  return temp;
}
inline void ActivityCfg::set_allocated_charge_4399(::ConfigActivity::Recharge4399CPP* charge_4399) {
  delete charge_4399_;
  charge_4399_ = charge_4399;
  if (charge_4399) {
    set_has_charge_4399();
  } else {
    clear_has_charge_4399();
  }
  // @@protoc_insertion_point(field_set_allocated:ConfigActivity.ActivityCfg.charge_4399)
}

// required .ConfigActivity.Daily4399CPP daily_4399 = 4;
inline bool ActivityCfg::has_daily_4399() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ActivityCfg::set_has_daily_4399() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ActivityCfg::clear_has_daily_4399() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ActivityCfg::clear_daily_4399() {
  if (daily_4399_ != NULL) daily_4399_->::ConfigActivity::Daily4399CPP::Clear();
  clear_has_daily_4399();
}
inline const ::ConfigActivity::Daily4399CPP& ActivityCfg::daily_4399() const {
  // @@protoc_insertion_point(field_get:ConfigActivity.ActivityCfg.daily_4399)
  return daily_4399_ != NULL ? *daily_4399_ : *default_instance_->daily_4399_;
}
inline ::ConfigActivity::Daily4399CPP* ActivityCfg::mutable_daily_4399() {
  set_has_daily_4399();
  if (daily_4399_ == NULL) daily_4399_ = new ::ConfigActivity::Daily4399CPP;
  // @@protoc_insertion_point(field_mutable:ConfigActivity.ActivityCfg.daily_4399)
  return daily_4399_;
}
inline ::ConfigActivity::Daily4399CPP* ActivityCfg::release_daily_4399() {
  clear_has_daily_4399();
  ::ConfigActivity::Daily4399CPP* temp = daily_4399_;
  daily_4399_ = NULL;
  return temp;
}
inline void ActivityCfg::set_allocated_daily_4399(::ConfigActivity::Daily4399CPP* daily_4399) {
  delete daily_4399_;
  daily_4399_ = daily_4399;
  if (daily_4399) {
    set_has_daily_4399();
  } else {
    clear_has_daily_4399();
  }
  // @@protoc_insertion_point(field_set_allocated:ConfigActivity.ActivityCfg.daily_4399)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace ConfigActivity

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_ConfigActivity_2eproto__INCLUDED
