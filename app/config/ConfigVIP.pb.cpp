// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ConfigVIP.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "ConfigVIP.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace ConfigVIP {

namespace {

const ::google::protobuf::Descriptor* VIPGiftCPP_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  VIPGiftCPP_reflection_ = NULL;
const ::google::protobuf::Descriptor* VIPOrderBonus_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  VIPOrderBonus_reflection_ = NULL;
const ::google::protobuf::Descriptor* VIPShipRewardBonus_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  VIPShipRewardBonus_reflection_ = NULL;
const ::google::protobuf::Descriptor* VIPBase_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  VIPBase_reflection_ = NULL;
const ::google::protobuf::Descriptor* VIPCfgInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  VIPCfgInfo_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_ConfigVIP_2eproto() {
  protobuf_AddDesc_ConfigVIP_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "ConfigVIP.proto");
  GOOGLE_CHECK(file != NULL);
  VIPGiftCPP_descriptor_ = file->message_type(0);
  static const int VIPGiftCPP_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VIPGiftCPP, viplevel_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VIPGiftCPP, material_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VIPGiftCPP, reward_),
  };
  VIPGiftCPP_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      VIPGiftCPP_descriptor_,
      VIPGiftCPP::default_instance_,
      VIPGiftCPP_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VIPGiftCPP, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VIPGiftCPP, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(VIPGiftCPP));
  VIPOrderBonus_descriptor_ = file->message_type(1);
  static const int VIPOrderBonus_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VIPOrderBonus, bonuscnt_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VIPOrderBonus, orderbonus_),
  };
  VIPOrderBonus_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      VIPOrderBonus_descriptor_,
      VIPOrderBonus::default_instance_,
      VIPOrderBonus_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VIPOrderBonus, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VIPOrderBonus, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(VIPOrderBonus));
  VIPShipRewardBonus_descriptor_ = file->message_type(2);
  static const int VIPShipRewardBonus_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VIPShipRewardBonus, bonuscnt_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VIPShipRewardBonus, shiprewardbonus_),
  };
  VIPShipRewardBonus_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      VIPShipRewardBonus_descriptor_,
      VIPShipRewardBonus::default_instance_,
      VIPShipRewardBonus_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VIPShipRewardBonus, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VIPShipRewardBonus, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(VIPShipRewardBonus));
  VIPBase_descriptor_ = file->message_type(3);
  static const int VIPBase_offsets_[15] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VIPBase, vipchargelevel_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VIPBase, vipgift_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VIPBase, productfreediamond_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VIPBase, shipwaittime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VIPBase, orderfreewaitcnt_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VIPBase, shopaddshelfcnt_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VIPBase, storageaddcnt_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VIPBase, productaddboxcnt_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VIPBase, vipplatcropsspeedup_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VIPBase, vipproducespeedup_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VIPBase, viporderbonus_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VIPBase, vipshiprewardbonus_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VIPBase, vipalliancetaskaddcnt_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VIPBase, vipanimalspeedup_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VIPBase, vipcompetitionintegral_),
  };
  VIPBase_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      VIPBase_descriptor_,
      VIPBase::default_instance_,
      VIPBase_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VIPBase, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VIPBase, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(VIPBase));
  VIPCfgInfo_descriptor_ = file->message_type(4);
  static const int VIPCfgInfo_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VIPCfgInfo, vipinfo_),
  };
  VIPCfgInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      VIPCfgInfo_descriptor_,
      VIPCfgInfo::default_instance_,
      VIPCfgInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VIPCfgInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VIPCfgInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(VIPCfgInfo));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_ConfigVIP_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    VIPGiftCPP_descriptor_, &VIPGiftCPP::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    VIPOrderBonus_descriptor_, &VIPOrderBonus::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    VIPShipRewardBonus_descriptor_, &VIPShipRewardBonus::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    VIPBase_descriptor_, &VIPBase::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    VIPCfgInfo_descriptor_, &VIPCfgInfo::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_ConfigVIP_2eproto() {
  delete VIPGiftCPP::default_instance_;
  delete VIPGiftCPP_reflection_;
  delete VIPOrderBonus::default_instance_;
  delete VIPOrderBonus_reflection_;
  delete VIPShipRewardBonus::default_instance_;
  delete VIPShipRewardBonus_reflection_;
  delete VIPBase::default_instance_;
  delete VIPBase_reflection_;
  delete VIPCfgInfo::default_instance_;
  delete VIPCfgInfo_reflection_;
}

void protobuf_AddDesc_ConfigVIP_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::CommonGiftConfig::protobuf_AddDesc_CommonGiftConfig_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\017ConfigVIP.proto\022\tConfigVIP\032\026CommonGift"
    "Config.proto\"\210\001\n\nVIPGiftCPP\022\020\n\010viplevel\030"
    "\001 \002(\r\0224\n\010material\030\002 \003(\0132\".CommonGiftConf"
    "ig.CommonModifyItem\0222\n\006reward\030\003 \002(\0132\".Co"
    "mmonGiftConfig.CommonModifyItem\"5\n\rVIPOr"
    "derBonus\022\020\n\010bonusCnt\030\001 \003(\r\022\022\n\norderBonus"
    "\030\002 \003(\r\"\?\n\022VIPShipRewardBonus\022\020\n\010bonusCnt"
    "\030\001 \003(\r\022\027\n\017shipRewardBonus\030\003 \003(\r\"\334\003\n\007VIPB"
    "ase\022\026\n\016vipChargeLevel\030\001 \003(\r\022&\n\007vipGift\030\002"
    " \003(\0132\025.ConfigVIP.VIPGiftCPP\022\032\n\022productFr"
    "eeDiamond\030\003 \003(\r\022\024\n\014shipWaitTime\030\004 \003(\002\022\030\n"
    "\020orderFreeWaitCnt\030\005 \003(\r\022\027\n\017shopAddShelfC"
    "nt\030\006 \003(\r\022\025\n\rstorageAddCnt\030\007 \003(\r\022\030\n\020produ"
    "ctAddBoxCnt\030\010 \003(\r\022\033\n\023vipPlatCropsSpeedUp"
    "\030\t \003(\r\022\031\n\021vipProduceSpeedUp\030\n \003(\r\022/\n\rvip"
    "OrderBonus\030\013 \002(\0132\030.ConfigVIP.VIPOrderBon"
    "us\0229\n\022vipShipRewardBonus\030\014 \002(\0132\035.ConfigV"
    "IP.VIPShipRewardBonus\022\035\n\025vipAllianceTask"
    "AddCnt\030\r \003(\r\022\030\n\020vipAnimalSpeedUp\030\016 \003(\r\022\036"
    "\n\026vipCompetitionIntegral\030\017 \003(\r\"1\n\nVIPCfg"
    "Info\022#\n\007vipInfo\030\001 \002(\0132\022.ConfigVIP.VIPBas"
    "e", 841);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "ConfigVIP.proto", &protobuf_RegisterTypes);
  VIPGiftCPP::default_instance_ = new VIPGiftCPP();
  VIPOrderBonus::default_instance_ = new VIPOrderBonus();
  VIPShipRewardBonus::default_instance_ = new VIPShipRewardBonus();
  VIPBase::default_instance_ = new VIPBase();
  VIPCfgInfo::default_instance_ = new VIPCfgInfo();
  VIPGiftCPP::default_instance_->InitAsDefaultInstance();
  VIPOrderBonus::default_instance_->InitAsDefaultInstance();
  VIPShipRewardBonus::default_instance_->InitAsDefaultInstance();
  VIPBase::default_instance_->InitAsDefaultInstance();
  VIPCfgInfo::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_ConfigVIP_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_ConfigVIP_2eproto {
  StaticDescriptorInitializer_ConfigVIP_2eproto() {
    protobuf_AddDesc_ConfigVIP_2eproto();
  }
} static_descriptor_initializer_ConfigVIP_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int VIPGiftCPP::kViplevelFieldNumber;
const int VIPGiftCPP::kMaterialFieldNumber;
const int VIPGiftCPP::kRewardFieldNumber;
#endif  // !_MSC_VER

VIPGiftCPP::VIPGiftCPP()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ConfigVIP.VIPGiftCPP)
}

void VIPGiftCPP::InitAsDefaultInstance() {
  reward_ = const_cast< ::CommonGiftConfig::CommonModifyItem*>(&::CommonGiftConfig::CommonModifyItem::default_instance());
}

VIPGiftCPP::VIPGiftCPP(const VIPGiftCPP& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ConfigVIP.VIPGiftCPP)
}

void VIPGiftCPP::SharedCtor() {
  _cached_size_ = 0;
  viplevel_ = 0u;
  reward_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

VIPGiftCPP::~VIPGiftCPP() {
  // @@protoc_insertion_point(destructor:ConfigVIP.VIPGiftCPP)
  SharedDtor();
}

void VIPGiftCPP::SharedDtor() {
  if (this != default_instance_) {
    delete reward_;
  }
}

void VIPGiftCPP::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* VIPGiftCPP::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return VIPGiftCPP_descriptor_;
}

const VIPGiftCPP& VIPGiftCPP::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ConfigVIP_2eproto();
  return *default_instance_;
}

VIPGiftCPP* VIPGiftCPP::default_instance_ = NULL;

VIPGiftCPP* VIPGiftCPP::New() const {
  return new VIPGiftCPP;
}

void VIPGiftCPP::Clear() {
  if (_has_bits_[0 / 32] & 5) {
    viplevel_ = 0u;
    if (has_reward()) {
      if (reward_ != NULL) reward_->::CommonGiftConfig::CommonModifyItem::Clear();
    }
  }
  material_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool VIPGiftCPP::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ConfigVIP.VIPGiftCPP)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 viplevel = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &viplevel_)));
          set_has_viplevel();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_material;
        break;
      }

      // repeated .CommonGiftConfig.CommonModifyItem material = 2;
      case 2: {
        if (tag == 18) {
         parse_material:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_material()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_material;
        if (input->ExpectTag(26)) goto parse_reward;
        break;
      }

      // required .CommonGiftConfig.CommonModifyItem reward = 3;
      case 3: {
        if (tag == 26) {
         parse_reward:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_reward()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ConfigVIP.VIPGiftCPP)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ConfigVIP.VIPGiftCPP)
  return false;
#undef DO_
}

void VIPGiftCPP::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ConfigVIP.VIPGiftCPP)
  // required uint32 viplevel = 1;
  if (has_viplevel()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->viplevel(), output);
  }

  // repeated .CommonGiftConfig.CommonModifyItem material = 2;
  for (int i = 0; i < this->material_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->material(i), output);
  }

  // required .CommonGiftConfig.CommonModifyItem reward = 3;
  if (has_reward()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->reward(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ConfigVIP.VIPGiftCPP)
}

::google::protobuf::uint8* VIPGiftCPP::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ConfigVIP.VIPGiftCPP)
  // required uint32 viplevel = 1;
  if (has_viplevel()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->viplevel(), target);
  }

  // repeated .CommonGiftConfig.CommonModifyItem material = 2;
  for (int i = 0; i < this->material_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->material(i), target);
  }

  // required .CommonGiftConfig.CommonModifyItem reward = 3;
  if (has_reward()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->reward(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ConfigVIP.VIPGiftCPP)
  return target;
}

int VIPGiftCPP::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 viplevel = 1;
    if (has_viplevel()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->viplevel());
    }

    // required .CommonGiftConfig.CommonModifyItem reward = 3;
    if (has_reward()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->reward());
    }

  }
  // repeated .CommonGiftConfig.CommonModifyItem material = 2;
  total_size += 1 * this->material_size();
  for (int i = 0; i < this->material_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->material(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void VIPGiftCPP::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const VIPGiftCPP* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const VIPGiftCPP*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void VIPGiftCPP::MergeFrom(const VIPGiftCPP& from) {
  GOOGLE_CHECK_NE(&from, this);
  material_.MergeFrom(from.material_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_viplevel()) {
      set_viplevel(from.viplevel());
    }
    if (from.has_reward()) {
      mutable_reward()->::CommonGiftConfig::CommonModifyItem::MergeFrom(from.reward());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void VIPGiftCPP::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VIPGiftCPP::CopyFrom(const VIPGiftCPP& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VIPGiftCPP::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000005) != 0x00000005) return false;

  if (!::google::protobuf::internal::AllAreInitialized(this->material())) return false;
  if (has_reward()) {
    if (!this->reward().IsInitialized()) return false;
  }
  return true;
}

void VIPGiftCPP::Swap(VIPGiftCPP* other) {
  if (other != this) {
    std::swap(viplevel_, other->viplevel_);
    material_.Swap(&other->material_);
    std::swap(reward_, other->reward_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata VIPGiftCPP::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = VIPGiftCPP_descriptor_;
  metadata.reflection = VIPGiftCPP_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int VIPOrderBonus::kBonusCntFieldNumber;
const int VIPOrderBonus::kOrderBonusFieldNumber;
#endif  // !_MSC_VER

VIPOrderBonus::VIPOrderBonus()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ConfigVIP.VIPOrderBonus)
}

void VIPOrderBonus::InitAsDefaultInstance() {
}

VIPOrderBonus::VIPOrderBonus(const VIPOrderBonus& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ConfigVIP.VIPOrderBonus)
}

void VIPOrderBonus::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

VIPOrderBonus::~VIPOrderBonus() {
  // @@protoc_insertion_point(destructor:ConfigVIP.VIPOrderBonus)
  SharedDtor();
}

void VIPOrderBonus::SharedDtor() {
  if (this != default_instance_) {
  }
}

void VIPOrderBonus::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* VIPOrderBonus::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return VIPOrderBonus_descriptor_;
}

const VIPOrderBonus& VIPOrderBonus::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ConfigVIP_2eproto();
  return *default_instance_;
}

VIPOrderBonus* VIPOrderBonus::default_instance_ = NULL;

VIPOrderBonus* VIPOrderBonus::New() const {
  return new VIPOrderBonus;
}

void VIPOrderBonus::Clear() {
  bonuscnt_.Clear();
  orderbonus_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool VIPOrderBonus::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ConfigVIP.VIPOrderBonus)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint32 bonusCnt = 1;
      case 1: {
        if (tag == 8) {
         parse_bonusCnt:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 8, input, this->mutable_bonuscnt())));
        } else if (tag == 10) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_bonuscnt())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(8)) goto parse_bonusCnt;
        if (input->ExpectTag(16)) goto parse_orderBonus;
        break;
      }

      // repeated uint32 orderBonus = 2;
      case 2: {
        if (tag == 16) {
         parse_orderBonus:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 16, input, this->mutable_orderbonus())));
        } else if (tag == 18) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_orderbonus())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_orderBonus;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ConfigVIP.VIPOrderBonus)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ConfigVIP.VIPOrderBonus)
  return false;
#undef DO_
}

void VIPOrderBonus::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ConfigVIP.VIPOrderBonus)
  // repeated uint32 bonusCnt = 1;
  for (int i = 0; i < this->bonuscnt_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      1, this->bonuscnt(i), output);
  }

  // repeated uint32 orderBonus = 2;
  for (int i = 0; i < this->orderbonus_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      2, this->orderbonus(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ConfigVIP.VIPOrderBonus)
}

::google::protobuf::uint8* VIPOrderBonus::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ConfigVIP.VIPOrderBonus)
  // repeated uint32 bonusCnt = 1;
  for (int i = 0; i < this->bonuscnt_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(1, this->bonuscnt(i), target);
  }

  // repeated uint32 orderBonus = 2;
  for (int i = 0; i < this->orderbonus_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(2, this->orderbonus(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ConfigVIP.VIPOrderBonus)
  return target;
}

int VIPOrderBonus::ByteSize() const {
  int total_size = 0;

  // repeated uint32 bonusCnt = 1;
  {
    int data_size = 0;
    for (int i = 0; i < this->bonuscnt_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->bonuscnt(i));
    }
    total_size += 1 * this->bonuscnt_size() + data_size;
  }

  // repeated uint32 orderBonus = 2;
  {
    int data_size = 0;
    for (int i = 0; i < this->orderbonus_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->orderbonus(i));
    }
    total_size += 1 * this->orderbonus_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void VIPOrderBonus::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const VIPOrderBonus* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const VIPOrderBonus*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void VIPOrderBonus::MergeFrom(const VIPOrderBonus& from) {
  GOOGLE_CHECK_NE(&from, this);
  bonuscnt_.MergeFrom(from.bonuscnt_);
  orderbonus_.MergeFrom(from.orderbonus_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void VIPOrderBonus::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VIPOrderBonus::CopyFrom(const VIPOrderBonus& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VIPOrderBonus::IsInitialized() const {

  return true;
}

void VIPOrderBonus::Swap(VIPOrderBonus* other) {
  if (other != this) {
    bonuscnt_.Swap(&other->bonuscnt_);
    orderbonus_.Swap(&other->orderbonus_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata VIPOrderBonus::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = VIPOrderBonus_descriptor_;
  metadata.reflection = VIPOrderBonus_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int VIPShipRewardBonus::kBonusCntFieldNumber;
const int VIPShipRewardBonus::kShipRewardBonusFieldNumber;
#endif  // !_MSC_VER

VIPShipRewardBonus::VIPShipRewardBonus()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ConfigVIP.VIPShipRewardBonus)
}

void VIPShipRewardBonus::InitAsDefaultInstance() {
}

VIPShipRewardBonus::VIPShipRewardBonus(const VIPShipRewardBonus& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ConfigVIP.VIPShipRewardBonus)
}

void VIPShipRewardBonus::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

VIPShipRewardBonus::~VIPShipRewardBonus() {
  // @@protoc_insertion_point(destructor:ConfigVIP.VIPShipRewardBonus)
  SharedDtor();
}

void VIPShipRewardBonus::SharedDtor() {
  if (this != default_instance_) {
  }
}

void VIPShipRewardBonus::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* VIPShipRewardBonus::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return VIPShipRewardBonus_descriptor_;
}

const VIPShipRewardBonus& VIPShipRewardBonus::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ConfigVIP_2eproto();
  return *default_instance_;
}

VIPShipRewardBonus* VIPShipRewardBonus::default_instance_ = NULL;

VIPShipRewardBonus* VIPShipRewardBonus::New() const {
  return new VIPShipRewardBonus;
}

void VIPShipRewardBonus::Clear() {
  bonuscnt_.Clear();
  shiprewardbonus_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool VIPShipRewardBonus::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ConfigVIP.VIPShipRewardBonus)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint32 bonusCnt = 1;
      case 1: {
        if (tag == 8) {
         parse_bonusCnt:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 8, input, this->mutable_bonuscnt())));
        } else if (tag == 10) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_bonuscnt())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(8)) goto parse_bonusCnt;
        if (input->ExpectTag(24)) goto parse_shipRewardBonus;
        break;
      }

      // repeated uint32 shipRewardBonus = 3;
      case 3: {
        if (tag == 24) {
         parse_shipRewardBonus:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 24, input, this->mutable_shiprewardbonus())));
        } else if (tag == 26) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_shiprewardbonus())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_shipRewardBonus;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ConfigVIP.VIPShipRewardBonus)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ConfigVIP.VIPShipRewardBonus)
  return false;
#undef DO_
}

void VIPShipRewardBonus::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ConfigVIP.VIPShipRewardBonus)
  // repeated uint32 bonusCnt = 1;
  for (int i = 0; i < this->bonuscnt_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      1, this->bonuscnt(i), output);
  }

  // repeated uint32 shipRewardBonus = 3;
  for (int i = 0; i < this->shiprewardbonus_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      3, this->shiprewardbonus(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ConfigVIP.VIPShipRewardBonus)
}

::google::protobuf::uint8* VIPShipRewardBonus::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ConfigVIP.VIPShipRewardBonus)
  // repeated uint32 bonusCnt = 1;
  for (int i = 0; i < this->bonuscnt_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(1, this->bonuscnt(i), target);
  }

  // repeated uint32 shipRewardBonus = 3;
  for (int i = 0; i < this->shiprewardbonus_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(3, this->shiprewardbonus(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ConfigVIP.VIPShipRewardBonus)
  return target;
}

int VIPShipRewardBonus::ByteSize() const {
  int total_size = 0;

  // repeated uint32 bonusCnt = 1;
  {
    int data_size = 0;
    for (int i = 0; i < this->bonuscnt_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->bonuscnt(i));
    }
    total_size += 1 * this->bonuscnt_size() + data_size;
  }

  // repeated uint32 shipRewardBonus = 3;
  {
    int data_size = 0;
    for (int i = 0; i < this->shiprewardbonus_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->shiprewardbonus(i));
    }
    total_size += 1 * this->shiprewardbonus_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void VIPShipRewardBonus::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const VIPShipRewardBonus* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const VIPShipRewardBonus*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void VIPShipRewardBonus::MergeFrom(const VIPShipRewardBonus& from) {
  GOOGLE_CHECK_NE(&from, this);
  bonuscnt_.MergeFrom(from.bonuscnt_);
  shiprewardbonus_.MergeFrom(from.shiprewardbonus_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void VIPShipRewardBonus::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VIPShipRewardBonus::CopyFrom(const VIPShipRewardBonus& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VIPShipRewardBonus::IsInitialized() const {

  return true;
}

void VIPShipRewardBonus::Swap(VIPShipRewardBonus* other) {
  if (other != this) {
    bonuscnt_.Swap(&other->bonuscnt_);
    shiprewardbonus_.Swap(&other->shiprewardbonus_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata VIPShipRewardBonus::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = VIPShipRewardBonus_descriptor_;
  metadata.reflection = VIPShipRewardBonus_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int VIPBase::kVipChargeLevelFieldNumber;
const int VIPBase::kVipGiftFieldNumber;
const int VIPBase::kProductFreeDiamondFieldNumber;
const int VIPBase::kShipWaitTimeFieldNumber;
const int VIPBase::kOrderFreeWaitCntFieldNumber;
const int VIPBase::kShopAddShelfCntFieldNumber;
const int VIPBase::kStorageAddCntFieldNumber;
const int VIPBase::kProductAddBoxCntFieldNumber;
const int VIPBase::kVipPlatCropsSpeedUpFieldNumber;
const int VIPBase::kVipProduceSpeedUpFieldNumber;
const int VIPBase::kVipOrderBonusFieldNumber;
const int VIPBase::kVipShipRewardBonusFieldNumber;
const int VIPBase::kVipAllianceTaskAddCntFieldNumber;
const int VIPBase::kVipAnimalSpeedUpFieldNumber;
const int VIPBase::kVipCompetitionIntegralFieldNumber;
#endif  // !_MSC_VER

VIPBase::VIPBase()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ConfigVIP.VIPBase)
}

void VIPBase::InitAsDefaultInstance() {
  viporderbonus_ = const_cast< ::ConfigVIP::VIPOrderBonus*>(&::ConfigVIP::VIPOrderBonus::default_instance());
  vipshiprewardbonus_ = const_cast< ::ConfigVIP::VIPShipRewardBonus*>(&::ConfigVIP::VIPShipRewardBonus::default_instance());
}

VIPBase::VIPBase(const VIPBase& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ConfigVIP.VIPBase)
}

void VIPBase::SharedCtor() {
  _cached_size_ = 0;
  viporderbonus_ = NULL;
  vipshiprewardbonus_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

VIPBase::~VIPBase() {
  // @@protoc_insertion_point(destructor:ConfigVIP.VIPBase)
  SharedDtor();
}

void VIPBase::SharedDtor() {
  if (this != default_instance_) {
    delete viporderbonus_;
    delete vipshiprewardbonus_;
  }
}

void VIPBase::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* VIPBase::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return VIPBase_descriptor_;
}

const VIPBase& VIPBase::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ConfigVIP_2eproto();
  return *default_instance_;
}

VIPBase* VIPBase::default_instance_ = NULL;

VIPBase* VIPBase::New() const {
  return new VIPBase;
}

void VIPBase::Clear() {
  if (_has_bits_[8 / 32] & 3072) {
    if (has_viporderbonus()) {
      if (viporderbonus_ != NULL) viporderbonus_->::ConfigVIP::VIPOrderBonus::Clear();
    }
    if (has_vipshiprewardbonus()) {
      if (vipshiprewardbonus_ != NULL) vipshiprewardbonus_->::ConfigVIP::VIPShipRewardBonus::Clear();
    }
  }
  vipchargelevel_.Clear();
  vipgift_.Clear();
  productfreediamond_.Clear();
  shipwaittime_.Clear();
  orderfreewaitcnt_.Clear();
  shopaddshelfcnt_.Clear();
  storageaddcnt_.Clear();
  productaddboxcnt_.Clear();
  vipplatcropsspeedup_.Clear();
  vipproducespeedup_.Clear();
  vipalliancetaskaddcnt_.Clear();
  vipanimalspeedup_.Clear();
  vipcompetitionintegral_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool VIPBase::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ConfigVIP.VIPBase)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint32 vipChargeLevel = 1;
      case 1: {
        if (tag == 8) {
         parse_vipChargeLevel:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 8, input, this->mutable_vipchargelevel())));
        } else if (tag == 10) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_vipchargelevel())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(8)) goto parse_vipChargeLevel;
        if (input->ExpectTag(18)) goto parse_vipGift;
        break;
      }

      // repeated .ConfigVIP.VIPGiftCPP vipGift = 2;
      case 2: {
        if (tag == 18) {
         parse_vipGift:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_vipgift()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_vipGift;
        if (input->ExpectTag(24)) goto parse_productFreeDiamond;
        break;
      }

      // repeated uint32 productFreeDiamond = 3;
      case 3: {
        if (tag == 24) {
         parse_productFreeDiamond:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 24, input, this->mutable_productfreediamond())));
        } else if (tag == 26) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_productfreediamond())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_productFreeDiamond;
        if (input->ExpectTag(37)) goto parse_shipWaitTime;
        break;
      }

      // repeated float shipWaitTime = 4;
      case 4: {
        if (tag == 37) {
         parse_shipWaitTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 37, input, this->mutable_shipwaittime())));
        } else if (tag == 34) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_shipwaittime())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(37)) goto parse_shipWaitTime;
        if (input->ExpectTag(40)) goto parse_orderFreeWaitCnt;
        break;
      }

      // repeated uint32 orderFreeWaitCnt = 5;
      case 5: {
        if (tag == 40) {
         parse_orderFreeWaitCnt:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 40, input, this->mutable_orderfreewaitcnt())));
        } else if (tag == 42) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_orderfreewaitcnt())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_orderFreeWaitCnt;
        if (input->ExpectTag(48)) goto parse_shopAddShelfCnt;
        break;
      }

      // repeated uint32 shopAddShelfCnt = 6;
      case 6: {
        if (tag == 48) {
         parse_shopAddShelfCnt:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 48, input, this->mutable_shopaddshelfcnt())));
        } else if (tag == 50) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_shopaddshelfcnt())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_shopAddShelfCnt;
        if (input->ExpectTag(56)) goto parse_storageAddCnt;
        break;
      }

      // repeated uint32 storageAddCnt = 7;
      case 7: {
        if (tag == 56) {
         parse_storageAddCnt:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 56, input, this->mutable_storageaddcnt())));
        } else if (tag == 58) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_storageaddcnt())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_storageAddCnt;
        if (input->ExpectTag(64)) goto parse_productAddBoxCnt;
        break;
      }

      // repeated uint32 productAddBoxCnt = 8;
      case 8: {
        if (tag == 64) {
         parse_productAddBoxCnt:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 64, input, this->mutable_productaddboxcnt())));
        } else if (tag == 66) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_productaddboxcnt())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_productAddBoxCnt;
        if (input->ExpectTag(72)) goto parse_vipPlatCropsSpeedUp;
        break;
      }

      // repeated uint32 vipPlatCropsSpeedUp = 9;
      case 9: {
        if (tag == 72) {
         parse_vipPlatCropsSpeedUp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 72, input, this->mutable_vipplatcropsspeedup())));
        } else if (tag == 74) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_vipplatcropsspeedup())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_vipPlatCropsSpeedUp;
        if (input->ExpectTag(80)) goto parse_vipProduceSpeedUp;
        break;
      }

      // repeated uint32 vipProduceSpeedUp = 10;
      case 10: {
        if (tag == 80) {
         parse_vipProduceSpeedUp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 80, input, this->mutable_vipproducespeedup())));
        } else if (tag == 82) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_vipproducespeedup())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(80)) goto parse_vipProduceSpeedUp;
        if (input->ExpectTag(90)) goto parse_vipOrderBonus;
        break;
      }

      // required .ConfigVIP.VIPOrderBonus vipOrderBonus = 11;
      case 11: {
        if (tag == 90) {
         parse_vipOrderBonus:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_viporderbonus()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(98)) goto parse_vipShipRewardBonus;
        break;
      }

      // required .ConfigVIP.VIPShipRewardBonus vipShipRewardBonus = 12;
      case 12: {
        if (tag == 98) {
         parse_vipShipRewardBonus:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_vipshiprewardbonus()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(104)) goto parse_vipAllianceTaskAddCnt;
        break;
      }

      // repeated uint32 vipAllianceTaskAddCnt = 13;
      case 13: {
        if (tag == 104) {
         parse_vipAllianceTaskAddCnt:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 104, input, this->mutable_vipalliancetaskaddcnt())));
        } else if (tag == 106) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_vipalliancetaskaddcnt())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(104)) goto parse_vipAllianceTaskAddCnt;
        if (input->ExpectTag(112)) goto parse_vipAnimalSpeedUp;
        break;
      }

      // repeated uint32 vipAnimalSpeedUp = 14;
      case 14: {
        if (tag == 112) {
         parse_vipAnimalSpeedUp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 112, input, this->mutable_vipanimalspeedup())));
        } else if (tag == 114) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_vipanimalspeedup())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(112)) goto parse_vipAnimalSpeedUp;
        if (input->ExpectTag(120)) goto parse_vipCompetitionIntegral;
        break;
      }

      // repeated uint32 vipCompetitionIntegral = 15;
      case 15: {
        if (tag == 120) {
         parse_vipCompetitionIntegral:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 120, input, this->mutable_vipcompetitionintegral())));
        } else if (tag == 122) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_vipcompetitionintegral())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(120)) goto parse_vipCompetitionIntegral;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ConfigVIP.VIPBase)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ConfigVIP.VIPBase)
  return false;
#undef DO_
}

void VIPBase::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ConfigVIP.VIPBase)
  // repeated uint32 vipChargeLevel = 1;
  for (int i = 0; i < this->vipchargelevel_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      1, this->vipchargelevel(i), output);
  }

  // repeated .ConfigVIP.VIPGiftCPP vipGift = 2;
  for (int i = 0; i < this->vipgift_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->vipgift(i), output);
  }

  // repeated uint32 productFreeDiamond = 3;
  for (int i = 0; i < this->productfreediamond_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      3, this->productfreediamond(i), output);
  }

  // repeated float shipWaitTime = 4;
  for (int i = 0; i < this->shipwaittime_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(
      4, this->shipwaittime(i), output);
  }

  // repeated uint32 orderFreeWaitCnt = 5;
  for (int i = 0; i < this->orderfreewaitcnt_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      5, this->orderfreewaitcnt(i), output);
  }

  // repeated uint32 shopAddShelfCnt = 6;
  for (int i = 0; i < this->shopaddshelfcnt_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      6, this->shopaddshelfcnt(i), output);
  }

  // repeated uint32 storageAddCnt = 7;
  for (int i = 0; i < this->storageaddcnt_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      7, this->storageaddcnt(i), output);
  }

  // repeated uint32 productAddBoxCnt = 8;
  for (int i = 0; i < this->productaddboxcnt_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      8, this->productaddboxcnt(i), output);
  }

  // repeated uint32 vipPlatCropsSpeedUp = 9;
  for (int i = 0; i < this->vipplatcropsspeedup_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      9, this->vipplatcropsspeedup(i), output);
  }

  // repeated uint32 vipProduceSpeedUp = 10;
  for (int i = 0; i < this->vipproducespeedup_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      10, this->vipproducespeedup(i), output);
  }

  // required .ConfigVIP.VIPOrderBonus vipOrderBonus = 11;
  if (has_viporderbonus()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, this->viporderbonus(), output);
  }

  // required .ConfigVIP.VIPShipRewardBonus vipShipRewardBonus = 12;
  if (has_vipshiprewardbonus()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, this->vipshiprewardbonus(), output);
  }

  // repeated uint32 vipAllianceTaskAddCnt = 13;
  for (int i = 0; i < this->vipalliancetaskaddcnt_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      13, this->vipalliancetaskaddcnt(i), output);
  }

  // repeated uint32 vipAnimalSpeedUp = 14;
  for (int i = 0; i < this->vipanimalspeedup_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      14, this->vipanimalspeedup(i), output);
  }

  // repeated uint32 vipCompetitionIntegral = 15;
  for (int i = 0; i < this->vipcompetitionintegral_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      15, this->vipcompetitionintegral(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ConfigVIP.VIPBase)
}

::google::protobuf::uint8* VIPBase::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ConfigVIP.VIPBase)
  // repeated uint32 vipChargeLevel = 1;
  for (int i = 0; i < this->vipchargelevel_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(1, this->vipchargelevel(i), target);
  }

  // repeated .ConfigVIP.VIPGiftCPP vipGift = 2;
  for (int i = 0; i < this->vipgift_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->vipgift(i), target);
  }

  // repeated uint32 productFreeDiamond = 3;
  for (int i = 0; i < this->productfreediamond_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(3, this->productfreediamond(i), target);
  }

  // repeated float shipWaitTime = 4;
  for (int i = 0; i < this->shipwaittime_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFloatToArray(4, this->shipwaittime(i), target);
  }

  // repeated uint32 orderFreeWaitCnt = 5;
  for (int i = 0; i < this->orderfreewaitcnt_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(5, this->orderfreewaitcnt(i), target);
  }

  // repeated uint32 shopAddShelfCnt = 6;
  for (int i = 0; i < this->shopaddshelfcnt_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(6, this->shopaddshelfcnt(i), target);
  }

  // repeated uint32 storageAddCnt = 7;
  for (int i = 0; i < this->storageaddcnt_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(7, this->storageaddcnt(i), target);
  }

  // repeated uint32 productAddBoxCnt = 8;
  for (int i = 0; i < this->productaddboxcnt_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(8, this->productaddboxcnt(i), target);
  }

  // repeated uint32 vipPlatCropsSpeedUp = 9;
  for (int i = 0; i < this->vipplatcropsspeedup_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(9, this->vipplatcropsspeedup(i), target);
  }

  // repeated uint32 vipProduceSpeedUp = 10;
  for (int i = 0; i < this->vipproducespeedup_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(10, this->vipproducespeedup(i), target);
  }

  // required .ConfigVIP.VIPOrderBonus vipOrderBonus = 11;
  if (has_viporderbonus()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        11, this->viporderbonus(), target);
  }

  // required .ConfigVIP.VIPShipRewardBonus vipShipRewardBonus = 12;
  if (has_vipshiprewardbonus()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        12, this->vipshiprewardbonus(), target);
  }

  // repeated uint32 vipAllianceTaskAddCnt = 13;
  for (int i = 0; i < this->vipalliancetaskaddcnt_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(13, this->vipalliancetaskaddcnt(i), target);
  }

  // repeated uint32 vipAnimalSpeedUp = 14;
  for (int i = 0; i < this->vipanimalspeedup_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(14, this->vipanimalspeedup(i), target);
  }

  // repeated uint32 vipCompetitionIntegral = 15;
  for (int i = 0; i < this->vipcompetitionintegral_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(15, this->vipcompetitionintegral(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ConfigVIP.VIPBase)
  return target;
}

int VIPBase::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[10 / 32] & (0xffu << (10 % 32))) {
    // required .ConfigVIP.VIPOrderBonus vipOrderBonus = 11;
    if (has_viporderbonus()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->viporderbonus());
    }

    // required .ConfigVIP.VIPShipRewardBonus vipShipRewardBonus = 12;
    if (has_vipshiprewardbonus()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->vipshiprewardbonus());
    }

  }
  // repeated uint32 vipChargeLevel = 1;
  {
    int data_size = 0;
    for (int i = 0; i < this->vipchargelevel_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->vipchargelevel(i));
    }
    total_size += 1 * this->vipchargelevel_size() + data_size;
  }

  // repeated .ConfigVIP.VIPGiftCPP vipGift = 2;
  total_size += 1 * this->vipgift_size();
  for (int i = 0; i < this->vipgift_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->vipgift(i));
  }

  // repeated uint32 productFreeDiamond = 3;
  {
    int data_size = 0;
    for (int i = 0; i < this->productfreediamond_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->productfreediamond(i));
    }
    total_size += 1 * this->productfreediamond_size() + data_size;
  }

  // repeated float shipWaitTime = 4;
  {
    int data_size = 0;
    data_size = 4 * this->shipwaittime_size();
    total_size += 1 * this->shipwaittime_size() + data_size;
  }

  // repeated uint32 orderFreeWaitCnt = 5;
  {
    int data_size = 0;
    for (int i = 0; i < this->orderfreewaitcnt_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->orderfreewaitcnt(i));
    }
    total_size += 1 * this->orderfreewaitcnt_size() + data_size;
  }

  // repeated uint32 shopAddShelfCnt = 6;
  {
    int data_size = 0;
    for (int i = 0; i < this->shopaddshelfcnt_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->shopaddshelfcnt(i));
    }
    total_size += 1 * this->shopaddshelfcnt_size() + data_size;
  }

  // repeated uint32 storageAddCnt = 7;
  {
    int data_size = 0;
    for (int i = 0; i < this->storageaddcnt_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->storageaddcnt(i));
    }
    total_size += 1 * this->storageaddcnt_size() + data_size;
  }

  // repeated uint32 productAddBoxCnt = 8;
  {
    int data_size = 0;
    for (int i = 0; i < this->productaddboxcnt_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->productaddboxcnt(i));
    }
    total_size += 1 * this->productaddboxcnt_size() + data_size;
  }

  // repeated uint32 vipPlatCropsSpeedUp = 9;
  {
    int data_size = 0;
    for (int i = 0; i < this->vipplatcropsspeedup_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->vipplatcropsspeedup(i));
    }
    total_size += 1 * this->vipplatcropsspeedup_size() + data_size;
  }

  // repeated uint32 vipProduceSpeedUp = 10;
  {
    int data_size = 0;
    for (int i = 0; i < this->vipproducespeedup_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->vipproducespeedup(i));
    }
    total_size += 1 * this->vipproducespeedup_size() + data_size;
  }

  // repeated uint32 vipAllianceTaskAddCnt = 13;
  {
    int data_size = 0;
    for (int i = 0; i < this->vipalliancetaskaddcnt_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->vipalliancetaskaddcnt(i));
    }
    total_size += 1 * this->vipalliancetaskaddcnt_size() + data_size;
  }

  // repeated uint32 vipAnimalSpeedUp = 14;
  {
    int data_size = 0;
    for (int i = 0; i < this->vipanimalspeedup_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->vipanimalspeedup(i));
    }
    total_size += 1 * this->vipanimalspeedup_size() + data_size;
  }

  // repeated uint32 vipCompetitionIntegral = 15;
  {
    int data_size = 0;
    for (int i = 0; i < this->vipcompetitionintegral_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->vipcompetitionintegral(i));
    }
    total_size += 1 * this->vipcompetitionintegral_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void VIPBase::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const VIPBase* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const VIPBase*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void VIPBase::MergeFrom(const VIPBase& from) {
  GOOGLE_CHECK_NE(&from, this);
  vipchargelevel_.MergeFrom(from.vipchargelevel_);
  vipgift_.MergeFrom(from.vipgift_);
  productfreediamond_.MergeFrom(from.productfreediamond_);
  shipwaittime_.MergeFrom(from.shipwaittime_);
  orderfreewaitcnt_.MergeFrom(from.orderfreewaitcnt_);
  shopaddshelfcnt_.MergeFrom(from.shopaddshelfcnt_);
  storageaddcnt_.MergeFrom(from.storageaddcnt_);
  productaddboxcnt_.MergeFrom(from.productaddboxcnt_);
  vipplatcropsspeedup_.MergeFrom(from.vipplatcropsspeedup_);
  vipproducespeedup_.MergeFrom(from.vipproducespeedup_);
  vipalliancetaskaddcnt_.MergeFrom(from.vipalliancetaskaddcnt_);
  vipanimalspeedup_.MergeFrom(from.vipanimalspeedup_);
  vipcompetitionintegral_.MergeFrom(from.vipcompetitionintegral_);
  if (from._has_bits_[10 / 32] & (0xffu << (10 % 32))) {
    if (from.has_viporderbonus()) {
      mutable_viporderbonus()->::ConfigVIP::VIPOrderBonus::MergeFrom(from.viporderbonus());
    }
    if (from.has_vipshiprewardbonus()) {
      mutable_vipshiprewardbonus()->::ConfigVIP::VIPShipRewardBonus::MergeFrom(from.vipshiprewardbonus());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void VIPBase::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VIPBase::CopyFrom(const VIPBase& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VIPBase::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000c00) != 0x00000c00) return false;

  if (!::google::protobuf::internal::AllAreInitialized(this->vipgift())) return false;
  return true;
}

void VIPBase::Swap(VIPBase* other) {
  if (other != this) {
    vipchargelevel_.Swap(&other->vipchargelevel_);
    vipgift_.Swap(&other->vipgift_);
    productfreediamond_.Swap(&other->productfreediamond_);
    shipwaittime_.Swap(&other->shipwaittime_);
    orderfreewaitcnt_.Swap(&other->orderfreewaitcnt_);
    shopaddshelfcnt_.Swap(&other->shopaddshelfcnt_);
    storageaddcnt_.Swap(&other->storageaddcnt_);
    productaddboxcnt_.Swap(&other->productaddboxcnt_);
    vipplatcropsspeedup_.Swap(&other->vipplatcropsspeedup_);
    vipproducespeedup_.Swap(&other->vipproducespeedup_);
    std::swap(viporderbonus_, other->viporderbonus_);
    std::swap(vipshiprewardbonus_, other->vipshiprewardbonus_);
    vipalliancetaskaddcnt_.Swap(&other->vipalliancetaskaddcnt_);
    vipanimalspeedup_.Swap(&other->vipanimalspeedup_);
    vipcompetitionintegral_.Swap(&other->vipcompetitionintegral_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata VIPBase::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = VIPBase_descriptor_;
  metadata.reflection = VIPBase_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int VIPCfgInfo::kVipInfoFieldNumber;
#endif  // !_MSC_VER

VIPCfgInfo::VIPCfgInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ConfigVIP.VIPCfgInfo)
}

void VIPCfgInfo::InitAsDefaultInstance() {
  vipinfo_ = const_cast< ::ConfigVIP::VIPBase*>(&::ConfigVIP::VIPBase::default_instance());
}

VIPCfgInfo::VIPCfgInfo(const VIPCfgInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ConfigVIP.VIPCfgInfo)
}

void VIPCfgInfo::SharedCtor() {
  _cached_size_ = 0;
  vipinfo_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

VIPCfgInfo::~VIPCfgInfo() {
  // @@protoc_insertion_point(destructor:ConfigVIP.VIPCfgInfo)
  SharedDtor();
}

void VIPCfgInfo::SharedDtor() {
  if (this != default_instance_) {
    delete vipinfo_;
  }
}

void VIPCfgInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* VIPCfgInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return VIPCfgInfo_descriptor_;
}

const VIPCfgInfo& VIPCfgInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ConfigVIP_2eproto();
  return *default_instance_;
}

VIPCfgInfo* VIPCfgInfo::default_instance_ = NULL;

VIPCfgInfo* VIPCfgInfo::New() const {
  return new VIPCfgInfo;
}

void VIPCfgInfo::Clear() {
  if (has_vipinfo()) {
    if (vipinfo_ != NULL) vipinfo_->::ConfigVIP::VIPBase::Clear();
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool VIPCfgInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ConfigVIP.VIPCfgInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .ConfigVIP.VIPBase vipInfo = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_vipinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ConfigVIP.VIPCfgInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ConfigVIP.VIPCfgInfo)
  return false;
#undef DO_
}

void VIPCfgInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ConfigVIP.VIPCfgInfo)
  // required .ConfigVIP.VIPBase vipInfo = 1;
  if (has_vipinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->vipinfo(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ConfigVIP.VIPCfgInfo)
}

::google::protobuf::uint8* VIPCfgInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ConfigVIP.VIPCfgInfo)
  // required .ConfigVIP.VIPBase vipInfo = 1;
  if (has_vipinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->vipinfo(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ConfigVIP.VIPCfgInfo)
  return target;
}

int VIPCfgInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .ConfigVIP.VIPBase vipInfo = 1;
    if (has_vipinfo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->vipinfo());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void VIPCfgInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const VIPCfgInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const VIPCfgInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void VIPCfgInfo::MergeFrom(const VIPCfgInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_vipinfo()) {
      mutable_vipinfo()->::ConfigVIP::VIPBase::MergeFrom(from.vipinfo());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void VIPCfgInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VIPCfgInfo::CopyFrom(const VIPCfgInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VIPCfgInfo::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (has_vipinfo()) {
    if (!this->vipinfo().IsInitialized()) return false;
  }
  return true;
}

void VIPCfgInfo::Swap(VIPCfgInfo* other) {
  if (other != this) {
    std::swap(vipinfo_, other->vipinfo_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata VIPCfgInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = VIPCfgInfo_descriptor_;
  metadata.reflection = VIPCfgInfo_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace ConfigVIP

// @@protoc_insertion_point(global_scope)
