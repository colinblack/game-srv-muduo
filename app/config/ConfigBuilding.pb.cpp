// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ConfigBuilding.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "ConfigBuilding.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace ConfigBuilding {

namespace {

const ::google::protobuf::Descriptor* BuildFoot_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BuildFoot_reflection_ = NULL;
const ::google::protobuf::Descriptor* House_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  House_reflection_ = NULL;
const ::google::protobuf::Descriptor* StorageHouse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  StorageHouse_reflection_ = NULL;
const ::google::protobuf::Descriptor* CropLand_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CropLand_reflection_ = NULL;
const ::google::protobuf::Descriptor* AnimalResidence_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AnimalResidence_reflection_ = NULL;
const ::google::protobuf::Descriptor* Animal_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Animal_reflection_ = NULL;
const ::google::protobuf::Descriptor* UpgradeStar_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UpgradeStar_reflection_ = NULL;
const ::google::protobuf::Descriptor* ProduceEquipment_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ProduceEquipment_reflection_ = NULL;
const ::google::protobuf::Descriptor* FruitTree_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  FruitTree_reflection_ = NULL;
const ::google::protobuf::Descriptor* Decoration_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Decoration_reflection_ = NULL;
const ::google::protobuf::Descriptor* ViewAdReduceTimeCPP_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ViewAdReduceTimeCPP_reflection_ = NULL;
const ::google::protobuf::Descriptor* Buildings_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Buildings_reflection_ = NULL;
const ::google::protobuf::Descriptor* Barrier_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Barrier_reflection_ = NULL;
const ::google::protobuf::Descriptor* DestoryBarrier_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DestoryBarrier_reflection_ = NULL;
const ::google::protobuf::Descriptor* Barriers_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Barriers_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_ConfigBuilding_2eproto() {
  protobuf_AddDesc_ConfigBuilding_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "ConfigBuilding.proto");
  GOOGLE_CHECK(file != NULL);
  BuildFoot_descriptor_ = file->message_type(0);
  static const int BuildFoot_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuildFoot, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuildFoot, footprint_),
  };
  BuildFoot_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      BuildFoot_descriptor_,
      BuildFoot::default_instance_,
      BuildFoot_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuildFoot, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuildFoot, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(BuildFoot));
  House_descriptor_ = file->message_type(1);
  static const int House_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(House, id_),
  };
  House_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      House_descriptor_,
      House::default_instance_,
      House_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(House, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(House, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(House));
  StorageHouse_descriptor_ = file->message_type(2);
  static const int StorageHouse_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StorageHouse, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StorageHouse, need_cost_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StorageHouse, level_storage_),
  };
  StorageHouse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      StorageHouse_descriptor_,
      StorageHouse::default_instance_,
      StorageHouse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StorageHouse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StorageHouse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(StorageHouse));
  CropLand_descriptor_ = file->message_type(3);
  static const int CropLand_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CropLand, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CropLand, need_cost_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CropLand, need_level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CropLand, gain_num_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CropLand, wait_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CropLand, build_reward_),
  };
  CropLand_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CropLand_descriptor_,
      CropLand::default_instance_,
      CropLand_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CropLand, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CropLand, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CropLand));
  AnimalResidence_descriptor_ = file->message_type(4);
  static const int AnimalResidence_offsets_[9] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AnimalResidence, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AnimalResidence, need_cost_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AnimalResidence, need_level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AnimalResidence, gain_num_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AnimalResidence, wait_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AnimalResidence, animal_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AnimalResidence, capacity_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AnimalResidence, speed_price_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AnimalResidence, build_reward_),
  };
  AnimalResidence_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      AnimalResidence_descriptor_,
      AnimalResidence::default_instance_,
      AnimalResidence_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AnimalResidence, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AnimalResidence, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(AnimalResidence));
  Animal_descriptor_ = file->message_type(5);
  static const int Animal_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Animal, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Animal, need_cost_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Animal, need_level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Animal, gain_num_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Animal, build_reward_),
  };
  Animal_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Animal_descriptor_,
      Animal::default_instance_,
      Animal_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Animal, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Animal, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Animal));
  UpgradeStar_descriptor_ = file->message_type(6);
  static const int UpgradeStar_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpgradeStar, need_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpgradeStar, need_price_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpgradeStar, ptype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpgradeStar, value_),
  };
  UpgradeStar_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      UpgradeStar_descriptor_,
      UpgradeStar::default_instance_,
      UpgradeStar_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpgradeStar, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpgradeStar, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(UpgradeStar));
  ProduceEquipment_descriptor_ = file->message_type(7);
  static const int ProduceEquipment_offsets_[9] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProduceEquipment, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProduceEquipment, need_cost_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProduceEquipment, need_level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProduceEquipment, gain_num_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProduceEquipment, wait_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProduceEquipment, upgrade_star_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProduceEquipment, init_queue_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProduceEquipment, speed_price_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProduceEquipment, build_reward_),
  };
  ProduceEquipment_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ProduceEquipment_descriptor_,
      ProduceEquipment::default_instance_,
      ProduceEquipment_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProduceEquipment, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProduceEquipment, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ProduceEquipment));
  FruitTree_descriptor_ = file->message_type(8);
  static const int FruitTree_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FruitTree, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FruitTree, need_cost_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FruitTree, need_level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FruitTree, gain_num_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FruitTree, wait_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FruitTree, cut_tree_props_),
  };
  FruitTree_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      FruitTree_descriptor_,
      FruitTree::default_instance_,
      FruitTree_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FruitTree, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FruitTree, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(FruitTree));
  Decoration_descriptor_ = file->message_type(9);
  static const int Decoration_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Decoration, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Decoration, need_cost_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Decoration, need_level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Decoration, wait_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Decoration, gain_num_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Decoration, factor_),
  };
  Decoration_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Decoration_descriptor_,
      Decoration::default_instance_,
      Decoration_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Decoration, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Decoration, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Decoration));
  ViewAdReduceTimeCPP_descriptor_ = file->message_type(10);
  static const int ViewAdReduceTimeCPP_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ViewAdReduceTimeCPP, base_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ViewAdReduceTimeCPP, reduce_percent_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ViewAdReduceTimeCPP, view_ad_max_cnt_),
  };
  ViewAdReduceTimeCPP_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ViewAdReduceTimeCPP_descriptor_,
      ViewAdReduceTimeCPP::default_instance_,
      ViewAdReduceTimeCPP_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ViewAdReduceTimeCPP, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ViewAdReduceTimeCPP, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ViewAdReduceTimeCPP));
  Buildings_descriptor_ = file->message_type(11);
  static const int Buildings_offsets_[11] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Buildings, house_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Buildings, storagehouse_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Buildings, cropland_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Buildings, animal_residence_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Buildings, produce_equipment_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Buildings, fruit_tree_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Buildings, decorate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Buildings, build_print_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Buildings, animal_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Buildings, unlock_upgardestar_level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Buildings, view_ad_cfg_),
  };
  Buildings_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Buildings_descriptor_,
      Buildings::default_instance_,
      Buildings_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Buildings, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Buildings, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Buildings));
  Barrier_descriptor_ = file->message_type(12);
  static const int Barrier_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Barrier, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Barrier, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Barrier, pos_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Barrier, footprint_),
  };
  Barrier_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Barrier_descriptor_,
      Barrier::default_instance_,
      Barrier_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Barrier, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Barrier, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Barrier));
  DestoryBarrier_descriptor_ = file->message_type(13);
  static const int DestoryBarrier_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DestoryBarrier, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DestoryBarrier, need_props_),
  };
  DestoryBarrier_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DestoryBarrier_descriptor_,
      DestoryBarrier::default_instance_,
      DestoryBarrier_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DestoryBarrier, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DestoryBarrier, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(DestoryBarrier));
  Barriers_descriptor_ = file->message_type(14);
  static const int Barriers_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Barriers, barriers_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Barriers, barriers_destory_),
  };
  Barriers_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Barriers_descriptor_,
      Barriers::default_instance_,
      Barriers_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Barriers, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Barriers, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Barriers));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_ConfigBuilding_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    BuildFoot_descriptor_, &BuildFoot::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    House_descriptor_, &House::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    StorageHouse_descriptor_, &StorageHouse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CropLand_descriptor_, &CropLand::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    AnimalResidence_descriptor_, &AnimalResidence::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Animal_descriptor_, &Animal::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    UpgradeStar_descriptor_, &UpgradeStar::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ProduceEquipment_descriptor_, &ProduceEquipment::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    FruitTree_descriptor_, &FruitTree::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Decoration_descriptor_, &Decoration::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ViewAdReduceTimeCPP_descriptor_, &ViewAdReduceTimeCPP::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Buildings_descriptor_, &Buildings::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Barrier_descriptor_, &Barrier::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DestoryBarrier_descriptor_, &DestoryBarrier::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Barriers_descriptor_, &Barriers::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_ConfigBuilding_2eproto() {
  delete BuildFoot::default_instance_;
  delete BuildFoot_reflection_;
  delete House::default_instance_;
  delete House_reflection_;
  delete StorageHouse::default_instance_;
  delete StorageHouse_reflection_;
  delete CropLand::default_instance_;
  delete CropLand_reflection_;
  delete AnimalResidence::default_instance_;
  delete AnimalResidence_reflection_;
  delete Animal::default_instance_;
  delete Animal_reflection_;
  delete UpgradeStar::default_instance_;
  delete UpgradeStar_reflection_;
  delete ProduceEquipment::default_instance_;
  delete ProduceEquipment_reflection_;
  delete FruitTree::default_instance_;
  delete FruitTree_reflection_;
  delete Decoration::default_instance_;
  delete Decoration_reflection_;
  delete ViewAdReduceTimeCPP::default_instance_;
  delete ViewAdReduceTimeCPP_reflection_;
  delete Buildings::default_instance_;
  delete Buildings_reflection_;
  delete Barrier::default_instance_;
  delete Barrier_reflection_;
  delete DestoryBarrier::default_instance_;
  delete DestoryBarrier_reflection_;
  delete Barriers::default_instance_;
  delete Barriers_reflection_;
}

void protobuf_AddDesc_ConfigBuilding_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::CommonGiftConfig::protobuf_AddDesc_CommonGiftConfig_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\024ConfigBuilding.proto\022\016ConfigBuilding\032\026"
    "CommonGiftConfig.proto\"*\n\tBuildFoot\022\n\n\002i"
    "d\030\001 \002(\r\022\021\n\tfootprint\030\002 \003(\r\"\023\n\005House\022\n\n\002i"
    "d\030\001 \002(\r\"h\n\014StorageHouse\022\n\n\002id\030\001 \002(\r\0225\n\tn"
    "eed_cost\030\002 \003(\0132\".CommonGiftConfig.Common"
    "ModifyItem\022\025\n\rlevel_storage\030\003 \003(\r\"\300\001\n\010Cr"
    "opLand\022\n\n\002id\030\001 \002(\r\0225\n\tneed_cost\030\002 \003(\0132\"."
    "CommonGiftConfig.CommonModifyItem\022\022\n\nnee"
    "d_level\030\003 \003(\r\022\020\n\010gain_num\030\004 \003(\r\022\021\n\twait_"
    "time\030\005 \003(\r\0228\n\014build_reward\030\006 \002(\0132\".Commo"
    "nGiftConfig.CommonModifyItem\"\201\002\n\017AnimalR"
    "esidence\022\n\n\002id\030\001 \002(\r\0225\n\tneed_cost\030\002 \003(\0132"
    "\".CommonGiftConfig.CommonModifyItem\022\022\n\nn"
    "eed_level\030\003 \003(\r\022\020\n\010gain_num\030\004 \003(\r\022\021\n\twai"
    "t_time\030\005 \003(\r\022\021\n\tanimal_id\030\006 \002(\r\022\020\n\010capac"
    "ity\030\007 \002(\r\022\023\n\013speed_price\030\010 \002(\r\0228\n\014build_"
    "reward\030\t \002(\0132\".CommonGiftConfig.CommonMo"
    "difyItem\"\253\001\n\006Animal\022\n\n\002id\030\001 \002(\r\0225\n\tneed_"
    "cost\030\002 \003(\0132\".CommonGiftConfig.CommonModi"
    "fyItem\022\022\n\nneed_level\030\003 \003(\r\022\020\n\010gain_num\030\004"
    " \003(\r\0228\n\014build_reward\030\005 \002(\0132\".CommonGiftC"
    "onfig.CommonModifyItem\"R\n\013UpgradeStar\022\021\n"
    "\tneed_time\030\001 \002(\r\022\022\n\nneed_price\030\002 \002(\r\022\r\n\005"
    "ptype\030\003 \002(\r\022\r\n\005value\030\004 \002(\r\"\244\002\n\020ProduceEq"
    "uipment\022\n\n\002id\030\001 \002(\r\0225\n\tneed_cost\030\003 \003(\0132\""
    ".CommonGiftConfig.CommonModifyItem\022\022\n\nne"
    "ed_level\030\004 \003(\r\022\020\n\010gain_num\030\005 \003(\r\022\021\n\twait"
    "_time\030\006 \003(\r\0221\n\014upgrade_star\030\007 \003(\0132\033.Conf"
    "igBuilding.UpgradeStar\022\022\n\ninit_queue\030\010 \002"
    "(\r\022\023\n\013speed_price\030\t \002(\r\0228\n\014build_reward\030"
    "\n \002(\0132\".CommonGiftConfig.CommonModifyIte"
    "m\"\303\001\n\tFruitTree\022\n\n\002id\030\001 \002(\r\0225\n\tneed_cost"
    "\030\002 \003(\0132\".CommonGiftConfig.CommonModifyIt"
    "em\022\022\n\nneed_level\030\003 \003(\r\022\020\n\010gain_num\030\004 \003(\r"
    "\022\021\n\twait_time\030\005 \003(\r\022:\n\016cut_tree_props\030\006 "
    "\002(\0132\".CommonGiftConfig.CommonModifyItem\""
    "\230\001\n\nDecoration\022\n\n\002id\030\001 \002(\r\0225\n\tneed_cost\030"
    "\002 \003(\0132\".CommonGiftConfig.CommonModifyIte"
    "m\022\022\n\nneed_level\030\003 \003(\r\022\021\n\twait_time\030\004 \003(\r"
    "\022\020\n\010gain_num\030\005 \003(\r\022\016\n\006factor\030\006 \002(\r\"Y\n\023Vi"
    "ewAdReduceTimeCPP\022\021\n\tbase_time\030\001 \002(\r\022\026\n\016"
    "reduce_percent\030\002 \002(\r\022\027\n\017view_ad_max_cnt\030"
    "\003 \002(\r\"\232\004\n\tBuildings\022$\n\005house\030\001 \002(\0132\025.Con"
    "figBuilding.House\0222\n\014storagehouse\030\002 \003(\0132"
    "\034.ConfigBuilding.StorageHouse\022*\n\010croplan"
    "d\030\003 \003(\0132\030.ConfigBuilding.CropLand\0229\n\020ani"
    "mal_residence\030\004 \003(\0132\037.ConfigBuilding.Ani"
    "malResidence\022;\n\021produce_equipment\030\005 \003(\0132"
    " .ConfigBuilding.ProduceEquipment\022-\n\nfru"
    "it_tree\030\006 \003(\0132\031.ConfigBuilding.FruitTree"
    "\022,\n\010decorate\030\007 \003(\0132\032.ConfigBuilding.Deco"
    "ration\022.\n\013build_print\030\010 \003(\0132\031.ConfigBuil"
    "ding.BuildFoot\022&\n\006animal\030\t \003(\0132\026.ConfigB"
    "uilding.Animal\022 \n\030unlock_upgardestar_lev"
    "el\030\n \002(\r\0228\n\013view_ad_cfg\030\013 \002(\0132#.ConfigBu"
    "ilding.ViewAdReduceTimeCPP\"C\n\007Barrier\022\n\n"
    "\002id\030\001 \002(\r\022\014\n\004type\030\002 \002(\r\022\013\n\003pos\030\003 \003(\r\022\021\n\t"
    "footprint\030\004 \003(\r\"V\n\016DestoryBarrier\022\014\n\004typ"
    "e\030\001 \002(\r\0226\n\nneed_props\030\002 \002(\0132\".CommonGift"
    "Config.CommonModifyItem\"o\n\010Barriers\022)\n\010b"
    "arriers\030\001 \003(\0132\027.ConfigBuilding.Barrier\0228"
    "\n\020barriers_destory\030\002 \003(\0132\036.ConfigBuildin"
    "g.DestoryBarrier", 2496);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "ConfigBuilding.proto", &protobuf_RegisterTypes);
  BuildFoot::default_instance_ = new BuildFoot();
  House::default_instance_ = new House();
  StorageHouse::default_instance_ = new StorageHouse();
  CropLand::default_instance_ = new CropLand();
  AnimalResidence::default_instance_ = new AnimalResidence();
  Animal::default_instance_ = new Animal();
  UpgradeStar::default_instance_ = new UpgradeStar();
  ProduceEquipment::default_instance_ = new ProduceEquipment();
  FruitTree::default_instance_ = new FruitTree();
  Decoration::default_instance_ = new Decoration();
  ViewAdReduceTimeCPP::default_instance_ = new ViewAdReduceTimeCPP();
  Buildings::default_instance_ = new Buildings();
  Barrier::default_instance_ = new Barrier();
  DestoryBarrier::default_instance_ = new DestoryBarrier();
  Barriers::default_instance_ = new Barriers();
  BuildFoot::default_instance_->InitAsDefaultInstance();
  House::default_instance_->InitAsDefaultInstance();
  StorageHouse::default_instance_->InitAsDefaultInstance();
  CropLand::default_instance_->InitAsDefaultInstance();
  AnimalResidence::default_instance_->InitAsDefaultInstance();
  Animal::default_instance_->InitAsDefaultInstance();
  UpgradeStar::default_instance_->InitAsDefaultInstance();
  ProduceEquipment::default_instance_->InitAsDefaultInstance();
  FruitTree::default_instance_->InitAsDefaultInstance();
  Decoration::default_instance_->InitAsDefaultInstance();
  ViewAdReduceTimeCPP::default_instance_->InitAsDefaultInstance();
  Buildings::default_instance_->InitAsDefaultInstance();
  Barrier::default_instance_->InitAsDefaultInstance();
  DestoryBarrier::default_instance_->InitAsDefaultInstance();
  Barriers::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_ConfigBuilding_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_ConfigBuilding_2eproto {
  StaticDescriptorInitializer_ConfigBuilding_2eproto() {
    protobuf_AddDesc_ConfigBuilding_2eproto();
  }
} static_descriptor_initializer_ConfigBuilding_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int BuildFoot::kIdFieldNumber;
const int BuildFoot::kFootprintFieldNumber;
#endif  // !_MSC_VER

BuildFoot::BuildFoot()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ConfigBuilding.BuildFoot)
}

void BuildFoot::InitAsDefaultInstance() {
}

BuildFoot::BuildFoot(const BuildFoot& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ConfigBuilding.BuildFoot)
}

void BuildFoot::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BuildFoot::~BuildFoot() {
  // @@protoc_insertion_point(destructor:ConfigBuilding.BuildFoot)
  SharedDtor();
}

void BuildFoot::SharedDtor() {
  if (this != default_instance_) {
  }
}

void BuildFoot::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BuildFoot::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BuildFoot_descriptor_;
}

const BuildFoot& BuildFoot::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ConfigBuilding_2eproto();
  return *default_instance_;
}

BuildFoot* BuildFoot::default_instance_ = NULL;

BuildFoot* BuildFoot::New() const {
  return new BuildFoot;
}

void BuildFoot::Clear() {
  id_ = 0u;
  footprint_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool BuildFoot::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ConfigBuilding.BuildFoot)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_footprint;
        break;
      }

      // repeated uint32 footprint = 2;
      case 2: {
        if (tag == 16) {
         parse_footprint:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 16, input, this->mutable_footprint())));
        } else if (tag == 18) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_footprint())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_footprint;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ConfigBuilding.BuildFoot)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ConfigBuilding.BuildFoot)
  return false;
#undef DO_
}

void BuildFoot::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ConfigBuilding.BuildFoot)
  // required uint32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  // repeated uint32 footprint = 2;
  for (int i = 0; i < this->footprint_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      2, this->footprint(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ConfigBuilding.BuildFoot)
}

::google::protobuf::uint8* BuildFoot::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ConfigBuilding.BuildFoot)
  // required uint32 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  // repeated uint32 footprint = 2;
  for (int i = 0; i < this->footprint_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(2, this->footprint(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ConfigBuilding.BuildFoot)
  return target;
}

int BuildFoot::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->id());
    }

  }
  // repeated uint32 footprint = 2;
  {
    int data_size = 0;
    for (int i = 0; i < this->footprint_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->footprint(i));
    }
    total_size += 1 * this->footprint_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BuildFoot::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const BuildFoot* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const BuildFoot*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void BuildFoot::MergeFrom(const BuildFoot& from) {
  GOOGLE_CHECK_NE(&from, this);
  footprint_.MergeFrom(from.footprint_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void BuildFoot::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BuildFoot::CopyFrom(const BuildFoot& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BuildFoot::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void BuildFoot::Swap(BuildFoot* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    footprint_.Swap(&other->footprint_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata BuildFoot::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BuildFoot_descriptor_;
  metadata.reflection = BuildFoot_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int House::kIdFieldNumber;
#endif  // !_MSC_VER

House::House()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ConfigBuilding.House)
}

void House::InitAsDefaultInstance() {
}

House::House(const House& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ConfigBuilding.House)
}

void House::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

House::~House() {
  // @@protoc_insertion_point(destructor:ConfigBuilding.House)
  SharedDtor();
}

void House::SharedDtor() {
  if (this != default_instance_) {
  }
}

void House::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* House::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return House_descriptor_;
}

const House& House::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ConfigBuilding_2eproto();
  return *default_instance_;
}

House* House::default_instance_ = NULL;

House* House::New() const {
  return new House;
}

void House::Clear() {
  id_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool House::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ConfigBuilding.House)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ConfigBuilding.House)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ConfigBuilding.House)
  return false;
#undef DO_
}

void House::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ConfigBuilding.House)
  // required uint32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ConfigBuilding.House)
}

::google::protobuf::uint8* House::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ConfigBuilding.House)
  // required uint32 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ConfigBuilding.House)
  return target;
}

int House::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->id());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void House::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const House* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const House*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void House::MergeFrom(const House& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void House::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void House::CopyFrom(const House& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool House::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void House::Swap(House* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata House::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = House_descriptor_;
  metadata.reflection = House_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int StorageHouse::kIdFieldNumber;
const int StorageHouse::kNeedCostFieldNumber;
const int StorageHouse::kLevelStorageFieldNumber;
#endif  // !_MSC_VER

StorageHouse::StorageHouse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ConfigBuilding.StorageHouse)
}

void StorageHouse::InitAsDefaultInstance() {
}

StorageHouse::StorageHouse(const StorageHouse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ConfigBuilding.StorageHouse)
}

void StorageHouse::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

StorageHouse::~StorageHouse() {
  // @@protoc_insertion_point(destructor:ConfigBuilding.StorageHouse)
  SharedDtor();
}

void StorageHouse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void StorageHouse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* StorageHouse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return StorageHouse_descriptor_;
}

const StorageHouse& StorageHouse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ConfigBuilding_2eproto();
  return *default_instance_;
}

StorageHouse* StorageHouse::default_instance_ = NULL;

StorageHouse* StorageHouse::New() const {
  return new StorageHouse;
}

void StorageHouse::Clear() {
  id_ = 0u;
  need_cost_.Clear();
  level_storage_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool StorageHouse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ConfigBuilding.StorageHouse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_need_cost;
        break;
      }

      // repeated .CommonGiftConfig.CommonModifyItem need_cost = 2;
      case 2: {
        if (tag == 18) {
         parse_need_cost:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_need_cost()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_need_cost;
        if (input->ExpectTag(24)) goto parse_level_storage;
        break;
      }

      // repeated uint32 level_storage = 3;
      case 3: {
        if (tag == 24) {
         parse_level_storage:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 24, input, this->mutable_level_storage())));
        } else if (tag == 26) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_level_storage())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_level_storage;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ConfigBuilding.StorageHouse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ConfigBuilding.StorageHouse)
  return false;
#undef DO_
}

void StorageHouse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ConfigBuilding.StorageHouse)
  // required uint32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  // repeated .CommonGiftConfig.CommonModifyItem need_cost = 2;
  for (int i = 0; i < this->need_cost_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->need_cost(i), output);
  }

  // repeated uint32 level_storage = 3;
  for (int i = 0; i < this->level_storage_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      3, this->level_storage(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ConfigBuilding.StorageHouse)
}

::google::protobuf::uint8* StorageHouse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ConfigBuilding.StorageHouse)
  // required uint32 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  // repeated .CommonGiftConfig.CommonModifyItem need_cost = 2;
  for (int i = 0; i < this->need_cost_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->need_cost(i), target);
  }

  // repeated uint32 level_storage = 3;
  for (int i = 0; i < this->level_storage_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(3, this->level_storage(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ConfigBuilding.StorageHouse)
  return target;
}

int StorageHouse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->id());
    }

  }
  // repeated .CommonGiftConfig.CommonModifyItem need_cost = 2;
  total_size += 1 * this->need_cost_size();
  for (int i = 0; i < this->need_cost_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->need_cost(i));
  }

  // repeated uint32 level_storage = 3;
  {
    int data_size = 0;
    for (int i = 0; i < this->level_storage_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->level_storage(i));
    }
    total_size += 1 * this->level_storage_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void StorageHouse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const StorageHouse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const StorageHouse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void StorageHouse::MergeFrom(const StorageHouse& from) {
  GOOGLE_CHECK_NE(&from, this);
  need_cost_.MergeFrom(from.need_cost_);
  level_storage_.MergeFrom(from.level_storage_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void StorageHouse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StorageHouse::CopyFrom(const StorageHouse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StorageHouse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (!::google::protobuf::internal::AllAreInitialized(this->need_cost())) return false;
  return true;
}

void StorageHouse::Swap(StorageHouse* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    need_cost_.Swap(&other->need_cost_);
    level_storage_.Swap(&other->level_storage_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata StorageHouse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = StorageHouse_descriptor_;
  metadata.reflection = StorageHouse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CropLand::kIdFieldNumber;
const int CropLand::kNeedCostFieldNumber;
const int CropLand::kNeedLevelFieldNumber;
const int CropLand::kGainNumFieldNumber;
const int CropLand::kWaitTimeFieldNumber;
const int CropLand::kBuildRewardFieldNumber;
#endif  // !_MSC_VER

CropLand::CropLand()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ConfigBuilding.CropLand)
}

void CropLand::InitAsDefaultInstance() {
  build_reward_ = const_cast< ::CommonGiftConfig::CommonModifyItem*>(&::CommonGiftConfig::CommonModifyItem::default_instance());
}

CropLand::CropLand(const CropLand& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ConfigBuilding.CropLand)
}

void CropLand::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0u;
  build_reward_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CropLand::~CropLand() {
  // @@protoc_insertion_point(destructor:ConfigBuilding.CropLand)
  SharedDtor();
}

void CropLand::SharedDtor() {
  if (this != default_instance_) {
    delete build_reward_;
  }
}

void CropLand::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CropLand::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CropLand_descriptor_;
}

const CropLand& CropLand::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ConfigBuilding_2eproto();
  return *default_instance_;
}

CropLand* CropLand::default_instance_ = NULL;

CropLand* CropLand::New() const {
  return new CropLand;
}

void CropLand::Clear() {
  if (_has_bits_[0 / 32] & 33) {
    id_ = 0u;
    if (has_build_reward()) {
      if (build_reward_ != NULL) build_reward_->::CommonGiftConfig::CommonModifyItem::Clear();
    }
  }
  need_cost_.Clear();
  need_level_.Clear();
  gain_num_.Clear();
  wait_time_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CropLand::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ConfigBuilding.CropLand)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_need_cost;
        break;
      }

      // repeated .CommonGiftConfig.CommonModifyItem need_cost = 2;
      case 2: {
        if (tag == 18) {
         parse_need_cost:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_need_cost()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_need_cost;
        if (input->ExpectTag(24)) goto parse_need_level;
        break;
      }

      // repeated uint32 need_level = 3;
      case 3: {
        if (tag == 24) {
         parse_need_level:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 24, input, this->mutable_need_level())));
        } else if (tag == 26) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_need_level())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_need_level;
        if (input->ExpectTag(32)) goto parse_gain_num;
        break;
      }

      // repeated uint32 gain_num = 4;
      case 4: {
        if (tag == 32) {
         parse_gain_num:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 32, input, this->mutable_gain_num())));
        } else if (tag == 34) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_gain_num())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_gain_num;
        if (input->ExpectTag(40)) goto parse_wait_time;
        break;
      }

      // repeated uint32 wait_time = 5;
      case 5: {
        if (tag == 40) {
         parse_wait_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 40, input, this->mutable_wait_time())));
        } else if (tag == 42) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_wait_time())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_wait_time;
        if (input->ExpectTag(50)) goto parse_build_reward;
        break;
      }

      // required .CommonGiftConfig.CommonModifyItem build_reward = 6;
      case 6: {
        if (tag == 50) {
         parse_build_reward:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_build_reward()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ConfigBuilding.CropLand)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ConfigBuilding.CropLand)
  return false;
#undef DO_
}

void CropLand::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ConfigBuilding.CropLand)
  // required uint32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  // repeated .CommonGiftConfig.CommonModifyItem need_cost = 2;
  for (int i = 0; i < this->need_cost_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->need_cost(i), output);
  }

  // repeated uint32 need_level = 3;
  for (int i = 0; i < this->need_level_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      3, this->need_level(i), output);
  }

  // repeated uint32 gain_num = 4;
  for (int i = 0; i < this->gain_num_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      4, this->gain_num(i), output);
  }

  // repeated uint32 wait_time = 5;
  for (int i = 0; i < this->wait_time_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      5, this->wait_time(i), output);
  }

  // required .CommonGiftConfig.CommonModifyItem build_reward = 6;
  if (has_build_reward()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->build_reward(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ConfigBuilding.CropLand)
}

::google::protobuf::uint8* CropLand::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ConfigBuilding.CropLand)
  // required uint32 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  // repeated .CommonGiftConfig.CommonModifyItem need_cost = 2;
  for (int i = 0; i < this->need_cost_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->need_cost(i), target);
  }

  // repeated uint32 need_level = 3;
  for (int i = 0; i < this->need_level_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(3, this->need_level(i), target);
  }

  // repeated uint32 gain_num = 4;
  for (int i = 0; i < this->gain_num_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(4, this->gain_num(i), target);
  }

  // repeated uint32 wait_time = 5;
  for (int i = 0; i < this->wait_time_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(5, this->wait_time(i), target);
  }

  // required .CommonGiftConfig.CommonModifyItem build_reward = 6;
  if (has_build_reward()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        6, this->build_reward(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ConfigBuilding.CropLand)
  return target;
}

int CropLand::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->id());
    }

    // required .CommonGiftConfig.CommonModifyItem build_reward = 6;
    if (has_build_reward()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->build_reward());
    }

  }
  // repeated .CommonGiftConfig.CommonModifyItem need_cost = 2;
  total_size += 1 * this->need_cost_size();
  for (int i = 0; i < this->need_cost_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->need_cost(i));
  }

  // repeated uint32 need_level = 3;
  {
    int data_size = 0;
    for (int i = 0; i < this->need_level_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->need_level(i));
    }
    total_size += 1 * this->need_level_size() + data_size;
  }

  // repeated uint32 gain_num = 4;
  {
    int data_size = 0;
    for (int i = 0; i < this->gain_num_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->gain_num(i));
    }
    total_size += 1 * this->gain_num_size() + data_size;
  }

  // repeated uint32 wait_time = 5;
  {
    int data_size = 0;
    for (int i = 0; i < this->wait_time_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->wait_time(i));
    }
    total_size += 1 * this->wait_time_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CropLand::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CropLand* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CropLand*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CropLand::MergeFrom(const CropLand& from) {
  GOOGLE_CHECK_NE(&from, this);
  need_cost_.MergeFrom(from.need_cost_);
  need_level_.MergeFrom(from.need_level_);
  gain_num_.MergeFrom(from.gain_num_);
  wait_time_.MergeFrom(from.wait_time_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_build_reward()) {
      mutable_build_reward()->::CommonGiftConfig::CommonModifyItem::MergeFrom(from.build_reward());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CropLand::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CropLand::CopyFrom(const CropLand& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CropLand::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000021) != 0x00000021) return false;

  if (!::google::protobuf::internal::AllAreInitialized(this->need_cost())) return false;
  if (has_build_reward()) {
    if (!this->build_reward().IsInitialized()) return false;
  }
  return true;
}

void CropLand::Swap(CropLand* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    need_cost_.Swap(&other->need_cost_);
    need_level_.Swap(&other->need_level_);
    gain_num_.Swap(&other->gain_num_);
    wait_time_.Swap(&other->wait_time_);
    std::swap(build_reward_, other->build_reward_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CropLand::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CropLand_descriptor_;
  metadata.reflection = CropLand_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int AnimalResidence::kIdFieldNumber;
const int AnimalResidence::kNeedCostFieldNumber;
const int AnimalResidence::kNeedLevelFieldNumber;
const int AnimalResidence::kGainNumFieldNumber;
const int AnimalResidence::kWaitTimeFieldNumber;
const int AnimalResidence::kAnimalIdFieldNumber;
const int AnimalResidence::kCapacityFieldNumber;
const int AnimalResidence::kSpeedPriceFieldNumber;
const int AnimalResidence::kBuildRewardFieldNumber;
#endif  // !_MSC_VER

AnimalResidence::AnimalResidence()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ConfigBuilding.AnimalResidence)
}

void AnimalResidence::InitAsDefaultInstance() {
  build_reward_ = const_cast< ::CommonGiftConfig::CommonModifyItem*>(&::CommonGiftConfig::CommonModifyItem::default_instance());
}

AnimalResidence::AnimalResidence(const AnimalResidence& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ConfigBuilding.AnimalResidence)
}

void AnimalResidence::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0u;
  animal_id_ = 0u;
  capacity_ = 0u;
  speed_price_ = 0u;
  build_reward_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

AnimalResidence::~AnimalResidence() {
  // @@protoc_insertion_point(destructor:ConfigBuilding.AnimalResidence)
  SharedDtor();
}

void AnimalResidence::SharedDtor() {
  if (this != default_instance_) {
    delete build_reward_;
  }
}

void AnimalResidence::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AnimalResidence::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AnimalResidence_descriptor_;
}

const AnimalResidence& AnimalResidence::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ConfigBuilding_2eproto();
  return *default_instance_;
}

AnimalResidence* AnimalResidence::default_instance_ = NULL;

AnimalResidence* AnimalResidence::New() const {
  return new AnimalResidence;
}

void AnimalResidence::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<AnimalResidence*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(id_, animal_id_);
  ZR_(capacity_, speed_price_);
  if (has_build_reward()) {
    if (build_reward_ != NULL) build_reward_->::CommonGiftConfig::CommonModifyItem::Clear();
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  need_cost_.Clear();
  need_level_.Clear();
  gain_num_.Clear();
  wait_time_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool AnimalResidence::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ConfigBuilding.AnimalResidence)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_need_cost;
        break;
      }

      // repeated .CommonGiftConfig.CommonModifyItem need_cost = 2;
      case 2: {
        if (tag == 18) {
         parse_need_cost:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_need_cost()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_need_cost;
        if (input->ExpectTag(24)) goto parse_need_level;
        break;
      }

      // repeated uint32 need_level = 3;
      case 3: {
        if (tag == 24) {
         parse_need_level:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 24, input, this->mutable_need_level())));
        } else if (tag == 26) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_need_level())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_need_level;
        if (input->ExpectTag(32)) goto parse_gain_num;
        break;
      }

      // repeated uint32 gain_num = 4;
      case 4: {
        if (tag == 32) {
         parse_gain_num:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 32, input, this->mutable_gain_num())));
        } else if (tag == 34) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_gain_num())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_gain_num;
        if (input->ExpectTag(40)) goto parse_wait_time;
        break;
      }

      // repeated uint32 wait_time = 5;
      case 5: {
        if (tag == 40) {
         parse_wait_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 40, input, this->mutable_wait_time())));
        } else if (tag == 42) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_wait_time())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_wait_time;
        if (input->ExpectTag(48)) goto parse_animal_id;
        break;
      }

      // required uint32 animal_id = 6;
      case 6: {
        if (tag == 48) {
         parse_animal_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &animal_id_)));
          set_has_animal_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_capacity;
        break;
      }

      // required uint32 capacity = 7;
      case 7: {
        if (tag == 56) {
         parse_capacity:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &capacity_)));
          set_has_capacity();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_speed_price;
        break;
      }

      // required uint32 speed_price = 8;
      case 8: {
        if (tag == 64) {
         parse_speed_price:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &speed_price_)));
          set_has_speed_price();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_build_reward;
        break;
      }

      // required .CommonGiftConfig.CommonModifyItem build_reward = 9;
      case 9: {
        if (tag == 74) {
         parse_build_reward:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_build_reward()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ConfigBuilding.AnimalResidence)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ConfigBuilding.AnimalResidence)
  return false;
#undef DO_
}

void AnimalResidence::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ConfigBuilding.AnimalResidence)
  // required uint32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  // repeated .CommonGiftConfig.CommonModifyItem need_cost = 2;
  for (int i = 0; i < this->need_cost_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->need_cost(i), output);
  }

  // repeated uint32 need_level = 3;
  for (int i = 0; i < this->need_level_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      3, this->need_level(i), output);
  }

  // repeated uint32 gain_num = 4;
  for (int i = 0; i < this->gain_num_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      4, this->gain_num(i), output);
  }

  // repeated uint32 wait_time = 5;
  for (int i = 0; i < this->wait_time_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      5, this->wait_time(i), output);
  }

  // required uint32 animal_id = 6;
  if (has_animal_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->animal_id(), output);
  }

  // required uint32 capacity = 7;
  if (has_capacity()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->capacity(), output);
  }

  // required uint32 speed_price = 8;
  if (has_speed_price()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->speed_price(), output);
  }

  // required .CommonGiftConfig.CommonModifyItem build_reward = 9;
  if (has_build_reward()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->build_reward(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ConfigBuilding.AnimalResidence)
}

::google::protobuf::uint8* AnimalResidence::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ConfigBuilding.AnimalResidence)
  // required uint32 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  // repeated .CommonGiftConfig.CommonModifyItem need_cost = 2;
  for (int i = 0; i < this->need_cost_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->need_cost(i), target);
  }

  // repeated uint32 need_level = 3;
  for (int i = 0; i < this->need_level_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(3, this->need_level(i), target);
  }

  // repeated uint32 gain_num = 4;
  for (int i = 0; i < this->gain_num_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(4, this->gain_num(i), target);
  }

  // repeated uint32 wait_time = 5;
  for (int i = 0; i < this->wait_time_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(5, this->wait_time(i), target);
  }

  // required uint32 animal_id = 6;
  if (has_animal_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->animal_id(), target);
  }

  // required uint32 capacity = 7;
  if (has_capacity()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->capacity(), target);
  }

  // required uint32 speed_price = 8;
  if (has_speed_price()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->speed_price(), target);
  }

  // required .CommonGiftConfig.CommonModifyItem build_reward = 9;
  if (has_build_reward()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        9, this->build_reward(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ConfigBuilding.AnimalResidence)
  return target;
}

int AnimalResidence::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->id());
    }

    // required uint32 animal_id = 6;
    if (has_animal_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->animal_id());
    }

    // required uint32 capacity = 7;
    if (has_capacity()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->capacity());
    }

    // required uint32 speed_price = 8;
    if (has_speed_price()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->speed_price());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // required .CommonGiftConfig.CommonModifyItem build_reward = 9;
    if (has_build_reward()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->build_reward());
    }

  }
  // repeated .CommonGiftConfig.CommonModifyItem need_cost = 2;
  total_size += 1 * this->need_cost_size();
  for (int i = 0; i < this->need_cost_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->need_cost(i));
  }

  // repeated uint32 need_level = 3;
  {
    int data_size = 0;
    for (int i = 0; i < this->need_level_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->need_level(i));
    }
    total_size += 1 * this->need_level_size() + data_size;
  }

  // repeated uint32 gain_num = 4;
  {
    int data_size = 0;
    for (int i = 0; i < this->gain_num_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->gain_num(i));
    }
    total_size += 1 * this->gain_num_size() + data_size;
  }

  // repeated uint32 wait_time = 5;
  {
    int data_size = 0;
    for (int i = 0; i < this->wait_time_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->wait_time(i));
    }
    total_size += 1 * this->wait_time_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AnimalResidence::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const AnimalResidence* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const AnimalResidence*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void AnimalResidence::MergeFrom(const AnimalResidence& from) {
  GOOGLE_CHECK_NE(&from, this);
  need_cost_.MergeFrom(from.need_cost_);
  need_level_.MergeFrom(from.need_level_);
  gain_num_.MergeFrom(from.gain_num_);
  wait_time_.MergeFrom(from.wait_time_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_animal_id()) {
      set_animal_id(from.animal_id());
    }
    if (from.has_capacity()) {
      set_capacity(from.capacity());
    }
    if (from.has_speed_price()) {
      set_speed_price(from.speed_price());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_build_reward()) {
      mutable_build_reward()->::CommonGiftConfig::CommonModifyItem::MergeFrom(from.build_reward());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void AnimalResidence::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AnimalResidence::CopyFrom(const AnimalResidence& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AnimalResidence::IsInitialized() const {
  if ((_has_bits_[0] & 0x000001e1) != 0x000001e1) return false;

  if (!::google::protobuf::internal::AllAreInitialized(this->need_cost())) return false;
  if (has_build_reward()) {
    if (!this->build_reward().IsInitialized()) return false;
  }
  return true;
}

void AnimalResidence::Swap(AnimalResidence* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    need_cost_.Swap(&other->need_cost_);
    need_level_.Swap(&other->need_level_);
    gain_num_.Swap(&other->gain_num_);
    wait_time_.Swap(&other->wait_time_);
    std::swap(animal_id_, other->animal_id_);
    std::swap(capacity_, other->capacity_);
    std::swap(speed_price_, other->speed_price_);
    std::swap(build_reward_, other->build_reward_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata AnimalResidence::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AnimalResidence_descriptor_;
  metadata.reflection = AnimalResidence_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Animal::kIdFieldNumber;
const int Animal::kNeedCostFieldNumber;
const int Animal::kNeedLevelFieldNumber;
const int Animal::kGainNumFieldNumber;
const int Animal::kBuildRewardFieldNumber;
#endif  // !_MSC_VER

Animal::Animal()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ConfigBuilding.Animal)
}

void Animal::InitAsDefaultInstance() {
  build_reward_ = const_cast< ::CommonGiftConfig::CommonModifyItem*>(&::CommonGiftConfig::CommonModifyItem::default_instance());
}

Animal::Animal(const Animal& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ConfigBuilding.Animal)
}

void Animal::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0u;
  build_reward_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Animal::~Animal() {
  // @@protoc_insertion_point(destructor:ConfigBuilding.Animal)
  SharedDtor();
}

void Animal::SharedDtor() {
  if (this != default_instance_) {
    delete build_reward_;
  }
}

void Animal::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Animal::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Animal_descriptor_;
}

const Animal& Animal::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ConfigBuilding_2eproto();
  return *default_instance_;
}

Animal* Animal::default_instance_ = NULL;

Animal* Animal::New() const {
  return new Animal;
}

void Animal::Clear() {
  if (_has_bits_[0 / 32] & 17) {
    id_ = 0u;
    if (has_build_reward()) {
      if (build_reward_ != NULL) build_reward_->::CommonGiftConfig::CommonModifyItem::Clear();
    }
  }
  need_cost_.Clear();
  need_level_.Clear();
  gain_num_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Animal::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ConfigBuilding.Animal)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_need_cost;
        break;
      }

      // repeated .CommonGiftConfig.CommonModifyItem need_cost = 2;
      case 2: {
        if (tag == 18) {
         parse_need_cost:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_need_cost()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_need_cost;
        if (input->ExpectTag(24)) goto parse_need_level;
        break;
      }

      // repeated uint32 need_level = 3;
      case 3: {
        if (tag == 24) {
         parse_need_level:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 24, input, this->mutable_need_level())));
        } else if (tag == 26) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_need_level())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_need_level;
        if (input->ExpectTag(32)) goto parse_gain_num;
        break;
      }

      // repeated uint32 gain_num = 4;
      case 4: {
        if (tag == 32) {
         parse_gain_num:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 32, input, this->mutable_gain_num())));
        } else if (tag == 34) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_gain_num())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_gain_num;
        if (input->ExpectTag(42)) goto parse_build_reward;
        break;
      }

      // required .CommonGiftConfig.CommonModifyItem build_reward = 5;
      case 5: {
        if (tag == 42) {
         parse_build_reward:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_build_reward()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ConfigBuilding.Animal)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ConfigBuilding.Animal)
  return false;
#undef DO_
}

void Animal::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ConfigBuilding.Animal)
  // required uint32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  // repeated .CommonGiftConfig.CommonModifyItem need_cost = 2;
  for (int i = 0; i < this->need_cost_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->need_cost(i), output);
  }

  // repeated uint32 need_level = 3;
  for (int i = 0; i < this->need_level_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      3, this->need_level(i), output);
  }

  // repeated uint32 gain_num = 4;
  for (int i = 0; i < this->gain_num_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      4, this->gain_num(i), output);
  }

  // required .CommonGiftConfig.CommonModifyItem build_reward = 5;
  if (has_build_reward()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->build_reward(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ConfigBuilding.Animal)
}

::google::protobuf::uint8* Animal::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ConfigBuilding.Animal)
  // required uint32 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  // repeated .CommonGiftConfig.CommonModifyItem need_cost = 2;
  for (int i = 0; i < this->need_cost_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->need_cost(i), target);
  }

  // repeated uint32 need_level = 3;
  for (int i = 0; i < this->need_level_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(3, this->need_level(i), target);
  }

  // repeated uint32 gain_num = 4;
  for (int i = 0; i < this->gain_num_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(4, this->gain_num(i), target);
  }

  // required .CommonGiftConfig.CommonModifyItem build_reward = 5;
  if (has_build_reward()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->build_reward(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ConfigBuilding.Animal)
  return target;
}

int Animal::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->id());
    }

    // required .CommonGiftConfig.CommonModifyItem build_reward = 5;
    if (has_build_reward()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->build_reward());
    }

  }
  // repeated .CommonGiftConfig.CommonModifyItem need_cost = 2;
  total_size += 1 * this->need_cost_size();
  for (int i = 0; i < this->need_cost_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->need_cost(i));
  }

  // repeated uint32 need_level = 3;
  {
    int data_size = 0;
    for (int i = 0; i < this->need_level_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->need_level(i));
    }
    total_size += 1 * this->need_level_size() + data_size;
  }

  // repeated uint32 gain_num = 4;
  {
    int data_size = 0;
    for (int i = 0; i < this->gain_num_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->gain_num(i));
    }
    total_size += 1 * this->gain_num_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Animal::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Animal* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Animal*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Animal::MergeFrom(const Animal& from) {
  GOOGLE_CHECK_NE(&from, this);
  need_cost_.MergeFrom(from.need_cost_);
  need_level_.MergeFrom(from.need_level_);
  gain_num_.MergeFrom(from.gain_num_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_build_reward()) {
      mutable_build_reward()->::CommonGiftConfig::CommonModifyItem::MergeFrom(from.build_reward());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Animal::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Animal::CopyFrom(const Animal& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Animal::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000011) != 0x00000011) return false;

  if (!::google::protobuf::internal::AllAreInitialized(this->need_cost())) return false;
  if (has_build_reward()) {
    if (!this->build_reward().IsInitialized()) return false;
  }
  return true;
}

void Animal::Swap(Animal* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    need_cost_.Swap(&other->need_cost_);
    need_level_.Swap(&other->need_level_);
    gain_num_.Swap(&other->gain_num_);
    std::swap(build_reward_, other->build_reward_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Animal::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Animal_descriptor_;
  metadata.reflection = Animal_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int UpgradeStar::kNeedTimeFieldNumber;
const int UpgradeStar::kNeedPriceFieldNumber;
const int UpgradeStar::kPtypeFieldNumber;
const int UpgradeStar::kValueFieldNumber;
#endif  // !_MSC_VER

UpgradeStar::UpgradeStar()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ConfigBuilding.UpgradeStar)
}

void UpgradeStar::InitAsDefaultInstance() {
}

UpgradeStar::UpgradeStar(const UpgradeStar& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ConfigBuilding.UpgradeStar)
}

void UpgradeStar::SharedCtor() {
  _cached_size_ = 0;
  need_time_ = 0u;
  need_price_ = 0u;
  ptype_ = 0u;
  value_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

UpgradeStar::~UpgradeStar() {
  // @@protoc_insertion_point(destructor:ConfigBuilding.UpgradeStar)
  SharedDtor();
}

void UpgradeStar::SharedDtor() {
  if (this != default_instance_) {
  }
}

void UpgradeStar::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UpgradeStar::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UpgradeStar_descriptor_;
}

const UpgradeStar& UpgradeStar::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ConfigBuilding_2eproto();
  return *default_instance_;
}

UpgradeStar* UpgradeStar::default_instance_ = NULL;

UpgradeStar* UpgradeStar::New() const {
  return new UpgradeStar;
}

void UpgradeStar::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<UpgradeStar*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(need_time_, value_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool UpgradeStar::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ConfigBuilding.UpgradeStar)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 need_time = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &need_time_)));
          set_has_need_time();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_need_price;
        break;
      }

      // required uint32 need_price = 2;
      case 2: {
        if (tag == 16) {
         parse_need_price:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &need_price_)));
          set_has_need_price();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_ptype;
        break;
      }

      // required uint32 ptype = 3;
      case 3: {
        if (tag == 24) {
         parse_ptype:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ptype_)));
          set_has_ptype();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_value;
        break;
      }

      // required uint32 value = 4;
      case 4: {
        if (tag == 32) {
         parse_value:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &value_)));
          set_has_value();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ConfigBuilding.UpgradeStar)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ConfigBuilding.UpgradeStar)
  return false;
#undef DO_
}

void UpgradeStar::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ConfigBuilding.UpgradeStar)
  // required uint32 need_time = 1;
  if (has_need_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->need_time(), output);
  }

  // required uint32 need_price = 2;
  if (has_need_price()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->need_price(), output);
  }

  // required uint32 ptype = 3;
  if (has_ptype()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->ptype(), output);
  }

  // required uint32 value = 4;
  if (has_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->value(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ConfigBuilding.UpgradeStar)
}

::google::protobuf::uint8* UpgradeStar::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ConfigBuilding.UpgradeStar)
  // required uint32 need_time = 1;
  if (has_need_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->need_time(), target);
  }

  // required uint32 need_price = 2;
  if (has_need_price()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->need_price(), target);
  }

  // required uint32 ptype = 3;
  if (has_ptype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->ptype(), target);
  }

  // required uint32 value = 4;
  if (has_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->value(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ConfigBuilding.UpgradeStar)
  return target;
}

int UpgradeStar::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 need_time = 1;
    if (has_need_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->need_time());
    }

    // required uint32 need_price = 2;
    if (has_need_price()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->need_price());
    }

    // required uint32 ptype = 3;
    if (has_ptype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->ptype());
    }

    // required uint32 value = 4;
    if (has_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->value());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UpgradeStar::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const UpgradeStar* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const UpgradeStar*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void UpgradeStar::MergeFrom(const UpgradeStar& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_need_time()) {
      set_need_time(from.need_time());
    }
    if (from.has_need_price()) {
      set_need_price(from.need_price());
    }
    if (from.has_ptype()) {
      set_ptype(from.ptype());
    }
    if (from.has_value()) {
      set_value(from.value());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void UpgradeStar::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpgradeStar::CopyFrom(const UpgradeStar& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpgradeStar::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;

  return true;
}

void UpgradeStar::Swap(UpgradeStar* other) {
  if (other != this) {
    std::swap(need_time_, other->need_time_);
    std::swap(need_price_, other->need_price_);
    std::swap(ptype_, other->ptype_);
    std::swap(value_, other->value_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata UpgradeStar::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UpgradeStar_descriptor_;
  metadata.reflection = UpgradeStar_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ProduceEquipment::kIdFieldNumber;
const int ProduceEquipment::kNeedCostFieldNumber;
const int ProduceEquipment::kNeedLevelFieldNumber;
const int ProduceEquipment::kGainNumFieldNumber;
const int ProduceEquipment::kWaitTimeFieldNumber;
const int ProduceEquipment::kUpgradeStarFieldNumber;
const int ProduceEquipment::kInitQueueFieldNumber;
const int ProduceEquipment::kSpeedPriceFieldNumber;
const int ProduceEquipment::kBuildRewardFieldNumber;
#endif  // !_MSC_VER

ProduceEquipment::ProduceEquipment()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ConfigBuilding.ProduceEquipment)
}

void ProduceEquipment::InitAsDefaultInstance() {
  build_reward_ = const_cast< ::CommonGiftConfig::CommonModifyItem*>(&::CommonGiftConfig::CommonModifyItem::default_instance());
}

ProduceEquipment::ProduceEquipment(const ProduceEquipment& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ConfigBuilding.ProduceEquipment)
}

void ProduceEquipment::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0u;
  init_queue_ = 0u;
  speed_price_ = 0u;
  build_reward_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ProduceEquipment::~ProduceEquipment() {
  // @@protoc_insertion_point(destructor:ConfigBuilding.ProduceEquipment)
  SharedDtor();
}

void ProduceEquipment::SharedDtor() {
  if (this != default_instance_) {
    delete build_reward_;
  }
}

void ProduceEquipment::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ProduceEquipment::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ProduceEquipment_descriptor_;
}

const ProduceEquipment& ProduceEquipment::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ConfigBuilding_2eproto();
  return *default_instance_;
}

ProduceEquipment* ProduceEquipment::default_instance_ = NULL;

ProduceEquipment* ProduceEquipment::New() const {
  return new ProduceEquipment;
}

void ProduceEquipment::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<ProduceEquipment*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 193) {
    ZR_(id_, init_queue_);
    speed_price_ = 0u;
  }
  if (has_build_reward()) {
    if (build_reward_ != NULL) build_reward_->::CommonGiftConfig::CommonModifyItem::Clear();
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  need_cost_.Clear();
  need_level_.Clear();
  gain_num_.Clear();
  wait_time_.Clear();
  upgrade_star_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ProduceEquipment::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ConfigBuilding.ProduceEquipment)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_need_cost;
        break;
      }

      // repeated .CommonGiftConfig.CommonModifyItem need_cost = 3;
      case 3: {
        if (tag == 26) {
         parse_need_cost:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_need_cost()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_need_cost;
        if (input->ExpectTag(32)) goto parse_need_level;
        break;
      }

      // repeated uint32 need_level = 4;
      case 4: {
        if (tag == 32) {
         parse_need_level:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 32, input, this->mutable_need_level())));
        } else if (tag == 34) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_need_level())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_need_level;
        if (input->ExpectTag(40)) goto parse_gain_num;
        break;
      }

      // repeated uint32 gain_num = 5;
      case 5: {
        if (tag == 40) {
         parse_gain_num:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 40, input, this->mutable_gain_num())));
        } else if (tag == 42) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_gain_num())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_gain_num;
        if (input->ExpectTag(48)) goto parse_wait_time;
        break;
      }

      // repeated uint32 wait_time = 6;
      case 6: {
        if (tag == 48) {
         parse_wait_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 48, input, this->mutable_wait_time())));
        } else if (tag == 50) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_wait_time())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_wait_time;
        if (input->ExpectTag(58)) goto parse_upgrade_star;
        break;
      }

      // repeated .ConfigBuilding.UpgradeStar upgrade_star = 7;
      case 7: {
        if (tag == 58) {
         parse_upgrade_star:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_upgrade_star()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_upgrade_star;
        if (input->ExpectTag(64)) goto parse_init_queue;
        break;
      }

      // required uint32 init_queue = 8;
      case 8: {
        if (tag == 64) {
         parse_init_queue:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &init_queue_)));
          set_has_init_queue();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_speed_price;
        break;
      }

      // required uint32 speed_price = 9;
      case 9: {
        if (tag == 72) {
         parse_speed_price:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &speed_price_)));
          set_has_speed_price();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_build_reward;
        break;
      }

      // required .CommonGiftConfig.CommonModifyItem build_reward = 10;
      case 10: {
        if (tag == 82) {
         parse_build_reward:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_build_reward()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ConfigBuilding.ProduceEquipment)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ConfigBuilding.ProduceEquipment)
  return false;
#undef DO_
}

void ProduceEquipment::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ConfigBuilding.ProduceEquipment)
  // required uint32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  // repeated .CommonGiftConfig.CommonModifyItem need_cost = 3;
  for (int i = 0; i < this->need_cost_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->need_cost(i), output);
  }

  // repeated uint32 need_level = 4;
  for (int i = 0; i < this->need_level_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      4, this->need_level(i), output);
  }

  // repeated uint32 gain_num = 5;
  for (int i = 0; i < this->gain_num_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      5, this->gain_num(i), output);
  }

  // repeated uint32 wait_time = 6;
  for (int i = 0; i < this->wait_time_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      6, this->wait_time(i), output);
  }

  // repeated .ConfigBuilding.UpgradeStar upgrade_star = 7;
  for (int i = 0; i < this->upgrade_star_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->upgrade_star(i), output);
  }

  // required uint32 init_queue = 8;
  if (has_init_queue()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->init_queue(), output);
  }

  // required uint32 speed_price = 9;
  if (has_speed_price()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->speed_price(), output);
  }

  // required .CommonGiftConfig.CommonModifyItem build_reward = 10;
  if (has_build_reward()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->build_reward(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ConfigBuilding.ProduceEquipment)
}

::google::protobuf::uint8* ProduceEquipment::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ConfigBuilding.ProduceEquipment)
  // required uint32 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  // repeated .CommonGiftConfig.CommonModifyItem need_cost = 3;
  for (int i = 0; i < this->need_cost_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->need_cost(i), target);
  }

  // repeated uint32 need_level = 4;
  for (int i = 0; i < this->need_level_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(4, this->need_level(i), target);
  }

  // repeated uint32 gain_num = 5;
  for (int i = 0; i < this->gain_num_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(5, this->gain_num(i), target);
  }

  // repeated uint32 wait_time = 6;
  for (int i = 0; i < this->wait_time_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(6, this->wait_time(i), target);
  }

  // repeated .ConfigBuilding.UpgradeStar upgrade_star = 7;
  for (int i = 0; i < this->upgrade_star_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        7, this->upgrade_star(i), target);
  }

  // required uint32 init_queue = 8;
  if (has_init_queue()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->init_queue(), target);
  }

  // required uint32 speed_price = 9;
  if (has_speed_price()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->speed_price(), target);
  }

  // required .CommonGiftConfig.CommonModifyItem build_reward = 10;
  if (has_build_reward()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        10, this->build_reward(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ConfigBuilding.ProduceEquipment)
  return target;
}

int ProduceEquipment::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->id());
    }

    // required uint32 init_queue = 8;
    if (has_init_queue()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->init_queue());
    }

    // required uint32 speed_price = 9;
    if (has_speed_price()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->speed_price());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // required .CommonGiftConfig.CommonModifyItem build_reward = 10;
    if (has_build_reward()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->build_reward());
    }

  }
  // repeated .CommonGiftConfig.CommonModifyItem need_cost = 3;
  total_size += 1 * this->need_cost_size();
  for (int i = 0; i < this->need_cost_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->need_cost(i));
  }

  // repeated uint32 need_level = 4;
  {
    int data_size = 0;
    for (int i = 0; i < this->need_level_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->need_level(i));
    }
    total_size += 1 * this->need_level_size() + data_size;
  }

  // repeated uint32 gain_num = 5;
  {
    int data_size = 0;
    for (int i = 0; i < this->gain_num_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->gain_num(i));
    }
    total_size += 1 * this->gain_num_size() + data_size;
  }

  // repeated uint32 wait_time = 6;
  {
    int data_size = 0;
    for (int i = 0; i < this->wait_time_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->wait_time(i));
    }
    total_size += 1 * this->wait_time_size() + data_size;
  }

  // repeated .ConfigBuilding.UpgradeStar upgrade_star = 7;
  total_size += 1 * this->upgrade_star_size();
  for (int i = 0; i < this->upgrade_star_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->upgrade_star(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ProduceEquipment::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ProduceEquipment* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ProduceEquipment*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ProduceEquipment::MergeFrom(const ProduceEquipment& from) {
  GOOGLE_CHECK_NE(&from, this);
  need_cost_.MergeFrom(from.need_cost_);
  need_level_.MergeFrom(from.need_level_);
  gain_num_.MergeFrom(from.gain_num_);
  wait_time_.MergeFrom(from.wait_time_);
  upgrade_star_.MergeFrom(from.upgrade_star_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_init_queue()) {
      set_init_queue(from.init_queue());
    }
    if (from.has_speed_price()) {
      set_speed_price(from.speed_price());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_build_reward()) {
      mutable_build_reward()->::CommonGiftConfig::CommonModifyItem::MergeFrom(from.build_reward());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ProduceEquipment::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProduceEquipment::CopyFrom(const ProduceEquipment& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProduceEquipment::IsInitialized() const {
  if ((_has_bits_[0] & 0x000001c1) != 0x000001c1) return false;

  if (!::google::protobuf::internal::AllAreInitialized(this->need_cost())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->upgrade_star())) return false;
  if (has_build_reward()) {
    if (!this->build_reward().IsInitialized()) return false;
  }
  return true;
}

void ProduceEquipment::Swap(ProduceEquipment* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    need_cost_.Swap(&other->need_cost_);
    need_level_.Swap(&other->need_level_);
    gain_num_.Swap(&other->gain_num_);
    wait_time_.Swap(&other->wait_time_);
    upgrade_star_.Swap(&other->upgrade_star_);
    std::swap(init_queue_, other->init_queue_);
    std::swap(speed_price_, other->speed_price_);
    std::swap(build_reward_, other->build_reward_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ProduceEquipment::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ProduceEquipment_descriptor_;
  metadata.reflection = ProduceEquipment_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int FruitTree::kIdFieldNumber;
const int FruitTree::kNeedCostFieldNumber;
const int FruitTree::kNeedLevelFieldNumber;
const int FruitTree::kGainNumFieldNumber;
const int FruitTree::kWaitTimeFieldNumber;
const int FruitTree::kCutTreePropsFieldNumber;
#endif  // !_MSC_VER

FruitTree::FruitTree()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ConfigBuilding.FruitTree)
}

void FruitTree::InitAsDefaultInstance() {
  cut_tree_props_ = const_cast< ::CommonGiftConfig::CommonModifyItem*>(&::CommonGiftConfig::CommonModifyItem::default_instance());
}

FruitTree::FruitTree(const FruitTree& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ConfigBuilding.FruitTree)
}

void FruitTree::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0u;
  cut_tree_props_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

FruitTree::~FruitTree() {
  // @@protoc_insertion_point(destructor:ConfigBuilding.FruitTree)
  SharedDtor();
}

void FruitTree::SharedDtor() {
  if (this != default_instance_) {
    delete cut_tree_props_;
  }
}

void FruitTree::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FruitTree::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return FruitTree_descriptor_;
}

const FruitTree& FruitTree::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ConfigBuilding_2eproto();
  return *default_instance_;
}

FruitTree* FruitTree::default_instance_ = NULL;

FruitTree* FruitTree::New() const {
  return new FruitTree;
}

void FruitTree::Clear() {
  if (_has_bits_[0 / 32] & 33) {
    id_ = 0u;
    if (has_cut_tree_props()) {
      if (cut_tree_props_ != NULL) cut_tree_props_->::CommonGiftConfig::CommonModifyItem::Clear();
    }
  }
  need_cost_.Clear();
  need_level_.Clear();
  gain_num_.Clear();
  wait_time_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool FruitTree::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ConfigBuilding.FruitTree)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_need_cost;
        break;
      }

      // repeated .CommonGiftConfig.CommonModifyItem need_cost = 2;
      case 2: {
        if (tag == 18) {
         parse_need_cost:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_need_cost()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_need_cost;
        if (input->ExpectTag(24)) goto parse_need_level;
        break;
      }

      // repeated uint32 need_level = 3;
      case 3: {
        if (tag == 24) {
         parse_need_level:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 24, input, this->mutable_need_level())));
        } else if (tag == 26) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_need_level())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_need_level;
        if (input->ExpectTag(32)) goto parse_gain_num;
        break;
      }

      // repeated uint32 gain_num = 4;
      case 4: {
        if (tag == 32) {
         parse_gain_num:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 32, input, this->mutable_gain_num())));
        } else if (tag == 34) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_gain_num())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_gain_num;
        if (input->ExpectTag(40)) goto parse_wait_time;
        break;
      }

      // repeated uint32 wait_time = 5;
      case 5: {
        if (tag == 40) {
         parse_wait_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 40, input, this->mutable_wait_time())));
        } else if (tag == 42) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_wait_time())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_wait_time;
        if (input->ExpectTag(50)) goto parse_cut_tree_props;
        break;
      }

      // required .CommonGiftConfig.CommonModifyItem cut_tree_props = 6;
      case 6: {
        if (tag == 50) {
         parse_cut_tree_props:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_cut_tree_props()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ConfigBuilding.FruitTree)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ConfigBuilding.FruitTree)
  return false;
#undef DO_
}

void FruitTree::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ConfigBuilding.FruitTree)
  // required uint32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  // repeated .CommonGiftConfig.CommonModifyItem need_cost = 2;
  for (int i = 0; i < this->need_cost_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->need_cost(i), output);
  }

  // repeated uint32 need_level = 3;
  for (int i = 0; i < this->need_level_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      3, this->need_level(i), output);
  }

  // repeated uint32 gain_num = 4;
  for (int i = 0; i < this->gain_num_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      4, this->gain_num(i), output);
  }

  // repeated uint32 wait_time = 5;
  for (int i = 0; i < this->wait_time_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      5, this->wait_time(i), output);
  }

  // required .CommonGiftConfig.CommonModifyItem cut_tree_props = 6;
  if (has_cut_tree_props()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->cut_tree_props(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ConfigBuilding.FruitTree)
}

::google::protobuf::uint8* FruitTree::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ConfigBuilding.FruitTree)
  // required uint32 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  // repeated .CommonGiftConfig.CommonModifyItem need_cost = 2;
  for (int i = 0; i < this->need_cost_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->need_cost(i), target);
  }

  // repeated uint32 need_level = 3;
  for (int i = 0; i < this->need_level_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(3, this->need_level(i), target);
  }

  // repeated uint32 gain_num = 4;
  for (int i = 0; i < this->gain_num_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(4, this->gain_num(i), target);
  }

  // repeated uint32 wait_time = 5;
  for (int i = 0; i < this->wait_time_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(5, this->wait_time(i), target);
  }

  // required .CommonGiftConfig.CommonModifyItem cut_tree_props = 6;
  if (has_cut_tree_props()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        6, this->cut_tree_props(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ConfigBuilding.FruitTree)
  return target;
}

int FruitTree::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->id());
    }

    // required .CommonGiftConfig.CommonModifyItem cut_tree_props = 6;
    if (has_cut_tree_props()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->cut_tree_props());
    }

  }
  // repeated .CommonGiftConfig.CommonModifyItem need_cost = 2;
  total_size += 1 * this->need_cost_size();
  for (int i = 0; i < this->need_cost_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->need_cost(i));
  }

  // repeated uint32 need_level = 3;
  {
    int data_size = 0;
    for (int i = 0; i < this->need_level_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->need_level(i));
    }
    total_size += 1 * this->need_level_size() + data_size;
  }

  // repeated uint32 gain_num = 4;
  {
    int data_size = 0;
    for (int i = 0; i < this->gain_num_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->gain_num(i));
    }
    total_size += 1 * this->gain_num_size() + data_size;
  }

  // repeated uint32 wait_time = 5;
  {
    int data_size = 0;
    for (int i = 0; i < this->wait_time_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->wait_time(i));
    }
    total_size += 1 * this->wait_time_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FruitTree::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const FruitTree* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const FruitTree*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void FruitTree::MergeFrom(const FruitTree& from) {
  GOOGLE_CHECK_NE(&from, this);
  need_cost_.MergeFrom(from.need_cost_);
  need_level_.MergeFrom(from.need_level_);
  gain_num_.MergeFrom(from.gain_num_);
  wait_time_.MergeFrom(from.wait_time_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_cut_tree_props()) {
      mutable_cut_tree_props()->::CommonGiftConfig::CommonModifyItem::MergeFrom(from.cut_tree_props());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void FruitTree::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FruitTree::CopyFrom(const FruitTree& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FruitTree::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000021) != 0x00000021) return false;

  if (!::google::protobuf::internal::AllAreInitialized(this->need_cost())) return false;
  if (has_cut_tree_props()) {
    if (!this->cut_tree_props().IsInitialized()) return false;
  }
  return true;
}

void FruitTree::Swap(FruitTree* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    need_cost_.Swap(&other->need_cost_);
    need_level_.Swap(&other->need_level_);
    gain_num_.Swap(&other->gain_num_);
    wait_time_.Swap(&other->wait_time_);
    std::swap(cut_tree_props_, other->cut_tree_props_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata FruitTree::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = FruitTree_descriptor_;
  metadata.reflection = FruitTree_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Decoration::kIdFieldNumber;
const int Decoration::kNeedCostFieldNumber;
const int Decoration::kNeedLevelFieldNumber;
const int Decoration::kWaitTimeFieldNumber;
const int Decoration::kGainNumFieldNumber;
const int Decoration::kFactorFieldNumber;
#endif  // !_MSC_VER

Decoration::Decoration()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ConfigBuilding.Decoration)
}

void Decoration::InitAsDefaultInstance() {
}

Decoration::Decoration(const Decoration& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ConfigBuilding.Decoration)
}

void Decoration::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0u;
  factor_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Decoration::~Decoration() {
  // @@protoc_insertion_point(destructor:ConfigBuilding.Decoration)
  SharedDtor();
}

void Decoration::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Decoration::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Decoration::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Decoration_descriptor_;
}

const Decoration& Decoration::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ConfigBuilding_2eproto();
  return *default_instance_;
}

Decoration* Decoration::default_instance_ = NULL;

Decoration* Decoration::New() const {
  return new Decoration;
}

void Decoration::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<Decoration*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(id_, factor_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  need_cost_.Clear();
  need_level_.Clear();
  wait_time_.Clear();
  gain_num_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Decoration::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ConfigBuilding.Decoration)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_need_cost;
        break;
      }

      // repeated .CommonGiftConfig.CommonModifyItem need_cost = 2;
      case 2: {
        if (tag == 18) {
         parse_need_cost:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_need_cost()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_need_cost;
        if (input->ExpectTag(24)) goto parse_need_level;
        break;
      }

      // repeated uint32 need_level = 3;
      case 3: {
        if (tag == 24) {
         parse_need_level:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 24, input, this->mutable_need_level())));
        } else if (tag == 26) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_need_level())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_need_level;
        if (input->ExpectTag(32)) goto parse_wait_time;
        break;
      }

      // repeated uint32 wait_time = 4;
      case 4: {
        if (tag == 32) {
         parse_wait_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 32, input, this->mutable_wait_time())));
        } else if (tag == 34) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_wait_time())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_wait_time;
        if (input->ExpectTag(40)) goto parse_gain_num;
        break;
      }

      // repeated uint32 gain_num = 5;
      case 5: {
        if (tag == 40) {
         parse_gain_num:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 40, input, this->mutable_gain_num())));
        } else if (tag == 42) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_gain_num())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_gain_num;
        if (input->ExpectTag(48)) goto parse_factor;
        break;
      }

      // required uint32 factor = 6;
      case 6: {
        if (tag == 48) {
         parse_factor:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &factor_)));
          set_has_factor();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ConfigBuilding.Decoration)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ConfigBuilding.Decoration)
  return false;
#undef DO_
}

void Decoration::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ConfigBuilding.Decoration)
  // required uint32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  // repeated .CommonGiftConfig.CommonModifyItem need_cost = 2;
  for (int i = 0; i < this->need_cost_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->need_cost(i), output);
  }

  // repeated uint32 need_level = 3;
  for (int i = 0; i < this->need_level_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      3, this->need_level(i), output);
  }

  // repeated uint32 wait_time = 4;
  for (int i = 0; i < this->wait_time_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      4, this->wait_time(i), output);
  }

  // repeated uint32 gain_num = 5;
  for (int i = 0; i < this->gain_num_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      5, this->gain_num(i), output);
  }

  // required uint32 factor = 6;
  if (has_factor()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->factor(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ConfigBuilding.Decoration)
}

::google::protobuf::uint8* Decoration::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ConfigBuilding.Decoration)
  // required uint32 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  // repeated .CommonGiftConfig.CommonModifyItem need_cost = 2;
  for (int i = 0; i < this->need_cost_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->need_cost(i), target);
  }

  // repeated uint32 need_level = 3;
  for (int i = 0; i < this->need_level_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(3, this->need_level(i), target);
  }

  // repeated uint32 wait_time = 4;
  for (int i = 0; i < this->wait_time_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(4, this->wait_time(i), target);
  }

  // repeated uint32 gain_num = 5;
  for (int i = 0; i < this->gain_num_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(5, this->gain_num(i), target);
  }

  // required uint32 factor = 6;
  if (has_factor()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->factor(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ConfigBuilding.Decoration)
  return target;
}

int Decoration::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->id());
    }

    // required uint32 factor = 6;
    if (has_factor()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->factor());
    }

  }
  // repeated .CommonGiftConfig.CommonModifyItem need_cost = 2;
  total_size += 1 * this->need_cost_size();
  for (int i = 0; i < this->need_cost_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->need_cost(i));
  }

  // repeated uint32 need_level = 3;
  {
    int data_size = 0;
    for (int i = 0; i < this->need_level_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->need_level(i));
    }
    total_size += 1 * this->need_level_size() + data_size;
  }

  // repeated uint32 wait_time = 4;
  {
    int data_size = 0;
    for (int i = 0; i < this->wait_time_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->wait_time(i));
    }
    total_size += 1 * this->wait_time_size() + data_size;
  }

  // repeated uint32 gain_num = 5;
  {
    int data_size = 0;
    for (int i = 0; i < this->gain_num_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->gain_num(i));
    }
    total_size += 1 * this->gain_num_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Decoration::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Decoration* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Decoration*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Decoration::MergeFrom(const Decoration& from) {
  GOOGLE_CHECK_NE(&from, this);
  need_cost_.MergeFrom(from.need_cost_);
  need_level_.MergeFrom(from.need_level_);
  wait_time_.MergeFrom(from.wait_time_);
  gain_num_.MergeFrom(from.gain_num_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_factor()) {
      set_factor(from.factor());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Decoration::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Decoration::CopyFrom(const Decoration& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Decoration::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000021) != 0x00000021) return false;

  if (!::google::protobuf::internal::AllAreInitialized(this->need_cost())) return false;
  return true;
}

void Decoration::Swap(Decoration* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    need_cost_.Swap(&other->need_cost_);
    need_level_.Swap(&other->need_level_);
    wait_time_.Swap(&other->wait_time_);
    gain_num_.Swap(&other->gain_num_);
    std::swap(factor_, other->factor_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Decoration::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Decoration_descriptor_;
  metadata.reflection = Decoration_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ViewAdReduceTimeCPP::kBaseTimeFieldNumber;
const int ViewAdReduceTimeCPP::kReducePercentFieldNumber;
const int ViewAdReduceTimeCPP::kViewAdMaxCntFieldNumber;
#endif  // !_MSC_VER

ViewAdReduceTimeCPP::ViewAdReduceTimeCPP()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ConfigBuilding.ViewAdReduceTimeCPP)
}

void ViewAdReduceTimeCPP::InitAsDefaultInstance() {
}

ViewAdReduceTimeCPP::ViewAdReduceTimeCPP(const ViewAdReduceTimeCPP& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ConfigBuilding.ViewAdReduceTimeCPP)
}

void ViewAdReduceTimeCPP::SharedCtor() {
  _cached_size_ = 0;
  base_time_ = 0u;
  reduce_percent_ = 0u;
  view_ad_max_cnt_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ViewAdReduceTimeCPP::~ViewAdReduceTimeCPP() {
  // @@protoc_insertion_point(destructor:ConfigBuilding.ViewAdReduceTimeCPP)
  SharedDtor();
}

void ViewAdReduceTimeCPP::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ViewAdReduceTimeCPP::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ViewAdReduceTimeCPP::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ViewAdReduceTimeCPP_descriptor_;
}

const ViewAdReduceTimeCPP& ViewAdReduceTimeCPP::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ConfigBuilding_2eproto();
  return *default_instance_;
}

ViewAdReduceTimeCPP* ViewAdReduceTimeCPP::default_instance_ = NULL;

ViewAdReduceTimeCPP* ViewAdReduceTimeCPP::New() const {
  return new ViewAdReduceTimeCPP;
}

void ViewAdReduceTimeCPP::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<ViewAdReduceTimeCPP*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(base_time_, view_ad_max_cnt_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ViewAdReduceTimeCPP::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ConfigBuilding.ViewAdReduceTimeCPP)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 base_time = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &base_time_)));
          set_has_base_time();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_reduce_percent;
        break;
      }

      // required uint32 reduce_percent = 2;
      case 2: {
        if (tag == 16) {
         parse_reduce_percent:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &reduce_percent_)));
          set_has_reduce_percent();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_view_ad_max_cnt;
        break;
      }

      // required uint32 view_ad_max_cnt = 3;
      case 3: {
        if (tag == 24) {
         parse_view_ad_max_cnt:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &view_ad_max_cnt_)));
          set_has_view_ad_max_cnt();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ConfigBuilding.ViewAdReduceTimeCPP)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ConfigBuilding.ViewAdReduceTimeCPP)
  return false;
#undef DO_
}

void ViewAdReduceTimeCPP::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ConfigBuilding.ViewAdReduceTimeCPP)
  // required uint32 base_time = 1;
  if (has_base_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->base_time(), output);
  }

  // required uint32 reduce_percent = 2;
  if (has_reduce_percent()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->reduce_percent(), output);
  }

  // required uint32 view_ad_max_cnt = 3;
  if (has_view_ad_max_cnt()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->view_ad_max_cnt(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ConfigBuilding.ViewAdReduceTimeCPP)
}

::google::protobuf::uint8* ViewAdReduceTimeCPP::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ConfigBuilding.ViewAdReduceTimeCPP)
  // required uint32 base_time = 1;
  if (has_base_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->base_time(), target);
  }

  // required uint32 reduce_percent = 2;
  if (has_reduce_percent()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->reduce_percent(), target);
  }

  // required uint32 view_ad_max_cnt = 3;
  if (has_view_ad_max_cnt()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->view_ad_max_cnt(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ConfigBuilding.ViewAdReduceTimeCPP)
  return target;
}

int ViewAdReduceTimeCPP::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 base_time = 1;
    if (has_base_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->base_time());
    }

    // required uint32 reduce_percent = 2;
    if (has_reduce_percent()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->reduce_percent());
    }

    // required uint32 view_ad_max_cnt = 3;
    if (has_view_ad_max_cnt()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->view_ad_max_cnt());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ViewAdReduceTimeCPP::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ViewAdReduceTimeCPP* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ViewAdReduceTimeCPP*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ViewAdReduceTimeCPP::MergeFrom(const ViewAdReduceTimeCPP& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_base_time()) {
      set_base_time(from.base_time());
    }
    if (from.has_reduce_percent()) {
      set_reduce_percent(from.reduce_percent());
    }
    if (from.has_view_ad_max_cnt()) {
      set_view_ad_max_cnt(from.view_ad_max_cnt());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ViewAdReduceTimeCPP::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ViewAdReduceTimeCPP::CopyFrom(const ViewAdReduceTimeCPP& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ViewAdReduceTimeCPP::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  return true;
}

void ViewAdReduceTimeCPP::Swap(ViewAdReduceTimeCPP* other) {
  if (other != this) {
    std::swap(base_time_, other->base_time_);
    std::swap(reduce_percent_, other->reduce_percent_);
    std::swap(view_ad_max_cnt_, other->view_ad_max_cnt_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ViewAdReduceTimeCPP::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ViewAdReduceTimeCPP_descriptor_;
  metadata.reflection = ViewAdReduceTimeCPP_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Buildings::kHouseFieldNumber;
const int Buildings::kStoragehouseFieldNumber;
const int Buildings::kCroplandFieldNumber;
const int Buildings::kAnimalResidenceFieldNumber;
const int Buildings::kProduceEquipmentFieldNumber;
const int Buildings::kFruitTreeFieldNumber;
const int Buildings::kDecorateFieldNumber;
const int Buildings::kBuildPrintFieldNumber;
const int Buildings::kAnimalFieldNumber;
const int Buildings::kUnlockUpgardestarLevelFieldNumber;
const int Buildings::kViewAdCfgFieldNumber;
#endif  // !_MSC_VER

Buildings::Buildings()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ConfigBuilding.Buildings)
}

void Buildings::InitAsDefaultInstance() {
  house_ = const_cast< ::ConfigBuilding::House*>(&::ConfigBuilding::House::default_instance());
  view_ad_cfg_ = const_cast< ::ConfigBuilding::ViewAdReduceTimeCPP*>(&::ConfigBuilding::ViewAdReduceTimeCPP::default_instance());
}

Buildings::Buildings(const Buildings& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ConfigBuilding.Buildings)
}

void Buildings::SharedCtor() {
  _cached_size_ = 0;
  house_ = NULL;
  unlock_upgardestar_level_ = 0u;
  view_ad_cfg_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Buildings::~Buildings() {
  // @@protoc_insertion_point(destructor:ConfigBuilding.Buildings)
  SharedDtor();
}

void Buildings::SharedDtor() {
  if (this != default_instance_) {
    delete house_;
    delete view_ad_cfg_;
  }
}

void Buildings::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Buildings::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Buildings_descriptor_;
}

const Buildings& Buildings::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ConfigBuilding_2eproto();
  return *default_instance_;
}

Buildings* Buildings::default_instance_ = NULL;

Buildings* Buildings::New() const {
  return new Buildings;
}

void Buildings::Clear() {
  if (has_house()) {
    if (house_ != NULL) house_->::ConfigBuilding::House::Clear();
  }
  if (_has_bits_[8 / 32] & 1536) {
    unlock_upgardestar_level_ = 0u;
    if (has_view_ad_cfg()) {
      if (view_ad_cfg_ != NULL) view_ad_cfg_->::ConfigBuilding::ViewAdReduceTimeCPP::Clear();
    }
  }
  storagehouse_.Clear();
  cropland_.Clear();
  animal_residence_.Clear();
  produce_equipment_.Clear();
  fruit_tree_.Clear();
  decorate_.Clear();
  build_print_.Clear();
  animal_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Buildings::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ConfigBuilding.Buildings)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .ConfigBuilding.House house = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_house()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_storagehouse;
        break;
      }

      // repeated .ConfigBuilding.StorageHouse storagehouse = 2;
      case 2: {
        if (tag == 18) {
         parse_storagehouse:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_storagehouse()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_storagehouse;
        if (input->ExpectTag(26)) goto parse_cropland;
        break;
      }

      // repeated .ConfigBuilding.CropLand cropland = 3;
      case 3: {
        if (tag == 26) {
         parse_cropland:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_cropland()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_cropland;
        if (input->ExpectTag(34)) goto parse_animal_residence;
        break;
      }

      // repeated .ConfigBuilding.AnimalResidence animal_residence = 4;
      case 4: {
        if (tag == 34) {
         parse_animal_residence:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_animal_residence()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_animal_residence;
        if (input->ExpectTag(42)) goto parse_produce_equipment;
        break;
      }

      // repeated .ConfigBuilding.ProduceEquipment produce_equipment = 5;
      case 5: {
        if (tag == 42) {
         parse_produce_equipment:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_produce_equipment()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_produce_equipment;
        if (input->ExpectTag(50)) goto parse_fruit_tree;
        break;
      }

      // repeated .ConfigBuilding.FruitTree fruit_tree = 6;
      case 6: {
        if (tag == 50) {
         parse_fruit_tree:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_fruit_tree()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_fruit_tree;
        if (input->ExpectTag(58)) goto parse_decorate;
        break;
      }

      // repeated .ConfigBuilding.Decoration decorate = 7;
      case 7: {
        if (tag == 58) {
         parse_decorate:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_decorate()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_decorate;
        if (input->ExpectTag(66)) goto parse_build_print;
        break;
      }

      // repeated .ConfigBuilding.BuildFoot build_print = 8;
      case 8: {
        if (tag == 66) {
         parse_build_print:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_build_print()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_build_print;
        if (input->ExpectTag(74)) goto parse_animal;
        break;
      }

      // repeated .ConfigBuilding.Animal animal = 9;
      case 9: {
        if (tag == 74) {
         parse_animal:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_animal()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_animal;
        if (input->ExpectTag(80)) goto parse_unlock_upgardestar_level;
        break;
      }

      // required uint32 unlock_upgardestar_level = 10;
      case 10: {
        if (tag == 80) {
         parse_unlock_upgardestar_level:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &unlock_upgardestar_level_)));
          set_has_unlock_upgardestar_level();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(90)) goto parse_view_ad_cfg;
        break;
      }

      // required .ConfigBuilding.ViewAdReduceTimeCPP view_ad_cfg = 11;
      case 11: {
        if (tag == 90) {
         parse_view_ad_cfg:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_view_ad_cfg()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ConfigBuilding.Buildings)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ConfigBuilding.Buildings)
  return false;
#undef DO_
}

void Buildings::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ConfigBuilding.Buildings)
  // required .ConfigBuilding.House house = 1;
  if (has_house()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->house(), output);
  }

  // repeated .ConfigBuilding.StorageHouse storagehouse = 2;
  for (int i = 0; i < this->storagehouse_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->storagehouse(i), output);
  }

  // repeated .ConfigBuilding.CropLand cropland = 3;
  for (int i = 0; i < this->cropland_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->cropland(i), output);
  }

  // repeated .ConfigBuilding.AnimalResidence animal_residence = 4;
  for (int i = 0; i < this->animal_residence_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->animal_residence(i), output);
  }

  // repeated .ConfigBuilding.ProduceEquipment produce_equipment = 5;
  for (int i = 0; i < this->produce_equipment_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->produce_equipment(i), output);
  }

  // repeated .ConfigBuilding.FruitTree fruit_tree = 6;
  for (int i = 0; i < this->fruit_tree_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->fruit_tree(i), output);
  }

  // repeated .ConfigBuilding.Decoration decorate = 7;
  for (int i = 0; i < this->decorate_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->decorate(i), output);
  }

  // repeated .ConfigBuilding.BuildFoot build_print = 8;
  for (int i = 0; i < this->build_print_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->build_print(i), output);
  }

  // repeated .ConfigBuilding.Animal animal = 9;
  for (int i = 0; i < this->animal_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->animal(i), output);
  }

  // required uint32 unlock_upgardestar_level = 10;
  if (has_unlock_upgardestar_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(10, this->unlock_upgardestar_level(), output);
  }

  // required .ConfigBuilding.ViewAdReduceTimeCPP view_ad_cfg = 11;
  if (has_view_ad_cfg()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, this->view_ad_cfg(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ConfigBuilding.Buildings)
}

::google::protobuf::uint8* Buildings::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ConfigBuilding.Buildings)
  // required .ConfigBuilding.House house = 1;
  if (has_house()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->house(), target);
  }

  // repeated .ConfigBuilding.StorageHouse storagehouse = 2;
  for (int i = 0; i < this->storagehouse_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->storagehouse(i), target);
  }

  // repeated .ConfigBuilding.CropLand cropland = 3;
  for (int i = 0; i < this->cropland_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->cropland(i), target);
  }

  // repeated .ConfigBuilding.AnimalResidence animal_residence = 4;
  for (int i = 0; i < this->animal_residence_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->animal_residence(i), target);
  }

  // repeated .ConfigBuilding.ProduceEquipment produce_equipment = 5;
  for (int i = 0; i < this->produce_equipment_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->produce_equipment(i), target);
  }

  // repeated .ConfigBuilding.FruitTree fruit_tree = 6;
  for (int i = 0; i < this->fruit_tree_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        6, this->fruit_tree(i), target);
  }

  // repeated .ConfigBuilding.Decoration decorate = 7;
  for (int i = 0; i < this->decorate_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        7, this->decorate(i), target);
  }

  // repeated .ConfigBuilding.BuildFoot build_print = 8;
  for (int i = 0; i < this->build_print_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        8, this->build_print(i), target);
  }

  // repeated .ConfigBuilding.Animal animal = 9;
  for (int i = 0; i < this->animal_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        9, this->animal(i), target);
  }

  // required uint32 unlock_upgardestar_level = 10;
  if (has_unlock_upgardestar_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(10, this->unlock_upgardestar_level(), target);
  }

  // required .ConfigBuilding.ViewAdReduceTimeCPP view_ad_cfg = 11;
  if (has_view_ad_cfg()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        11, this->view_ad_cfg(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ConfigBuilding.Buildings)
  return target;
}

int Buildings::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .ConfigBuilding.House house = 1;
    if (has_house()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->house());
    }

  }
  if (_has_bits_[9 / 32] & (0xffu << (9 % 32))) {
    // required uint32 unlock_upgardestar_level = 10;
    if (has_unlock_upgardestar_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->unlock_upgardestar_level());
    }

    // required .ConfigBuilding.ViewAdReduceTimeCPP view_ad_cfg = 11;
    if (has_view_ad_cfg()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->view_ad_cfg());
    }

  }
  // repeated .ConfigBuilding.StorageHouse storagehouse = 2;
  total_size += 1 * this->storagehouse_size();
  for (int i = 0; i < this->storagehouse_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->storagehouse(i));
  }

  // repeated .ConfigBuilding.CropLand cropland = 3;
  total_size += 1 * this->cropland_size();
  for (int i = 0; i < this->cropland_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->cropland(i));
  }

  // repeated .ConfigBuilding.AnimalResidence animal_residence = 4;
  total_size += 1 * this->animal_residence_size();
  for (int i = 0; i < this->animal_residence_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->animal_residence(i));
  }

  // repeated .ConfigBuilding.ProduceEquipment produce_equipment = 5;
  total_size += 1 * this->produce_equipment_size();
  for (int i = 0; i < this->produce_equipment_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->produce_equipment(i));
  }

  // repeated .ConfigBuilding.FruitTree fruit_tree = 6;
  total_size += 1 * this->fruit_tree_size();
  for (int i = 0; i < this->fruit_tree_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->fruit_tree(i));
  }

  // repeated .ConfigBuilding.Decoration decorate = 7;
  total_size += 1 * this->decorate_size();
  for (int i = 0; i < this->decorate_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->decorate(i));
  }

  // repeated .ConfigBuilding.BuildFoot build_print = 8;
  total_size += 1 * this->build_print_size();
  for (int i = 0; i < this->build_print_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->build_print(i));
  }

  // repeated .ConfigBuilding.Animal animal = 9;
  total_size += 1 * this->animal_size();
  for (int i = 0; i < this->animal_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->animal(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Buildings::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Buildings* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Buildings*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Buildings::MergeFrom(const Buildings& from) {
  GOOGLE_CHECK_NE(&from, this);
  storagehouse_.MergeFrom(from.storagehouse_);
  cropland_.MergeFrom(from.cropland_);
  animal_residence_.MergeFrom(from.animal_residence_);
  produce_equipment_.MergeFrom(from.produce_equipment_);
  fruit_tree_.MergeFrom(from.fruit_tree_);
  decorate_.MergeFrom(from.decorate_);
  build_print_.MergeFrom(from.build_print_);
  animal_.MergeFrom(from.animal_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_house()) {
      mutable_house()->::ConfigBuilding::House::MergeFrom(from.house());
    }
  }
  if (from._has_bits_[9 / 32] & (0xffu << (9 % 32))) {
    if (from.has_unlock_upgardestar_level()) {
      set_unlock_upgardestar_level(from.unlock_upgardestar_level());
    }
    if (from.has_view_ad_cfg()) {
      mutable_view_ad_cfg()->::ConfigBuilding::ViewAdReduceTimeCPP::MergeFrom(from.view_ad_cfg());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Buildings::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Buildings::CopyFrom(const Buildings& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Buildings::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000601) != 0x00000601) return false;

  if (has_house()) {
    if (!this->house().IsInitialized()) return false;
  }
  if (!::google::protobuf::internal::AllAreInitialized(this->storagehouse())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->cropland())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->animal_residence())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->produce_equipment())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->fruit_tree())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->decorate())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->build_print())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->animal())) return false;
  if (has_view_ad_cfg()) {
    if (!this->view_ad_cfg().IsInitialized()) return false;
  }
  return true;
}

void Buildings::Swap(Buildings* other) {
  if (other != this) {
    std::swap(house_, other->house_);
    storagehouse_.Swap(&other->storagehouse_);
    cropland_.Swap(&other->cropland_);
    animal_residence_.Swap(&other->animal_residence_);
    produce_equipment_.Swap(&other->produce_equipment_);
    fruit_tree_.Swap(&other->fruit_tree_);
    decorate_.Swap(&other->decorate_);
    build_print_.Swap(&other->build_print_);
    animal_.Swap(&other->animal_);
    std::swap(unlock_upgardestar_level_, other->unlock_upgardestar_level_);
    std::swap(view_ad_cfg_, other->view_ad_cfg_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Buildings::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Buildings_descriptor_;
  metadata.reflection = Buildings_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Barrier::kIdFieldNumber;
const int Barrier::kTypeFieldNumber;
const int Barrier::kPosFieldNumber;
const int Barrier::kFootprintFieldNumber;
#endif  // !_MSC_VER

Barrier::Barrier()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ConfigBuilding.Barrier)
}

void Barrier::InitAsDefaultInstance() {
}

Barrier::Barrier(const Barrier& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ConfigBuilding.Barrier)
}

void Barrier::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0u;
  type_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Barrier::~Barrier() {
  // @@protoc_insertion_point(destructor:ConfigBuilding.Barrier)
  SharedDtor();
}

void Barrier::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Barrier::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Barrier::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Barrier_descriptor_;
}

const Barrier& Barrier::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ConfigBuilding_2eproto();
  return *default_instance_;
}

Barrier* Barrier::default_instance_ = NULL;

Barrier* Barrier::New() const {
  return new Barrier;
}

void Barrier::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<Barrier*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(id_, type_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  pos_.Clear();
  footprint_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Barrier::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ConfigBuilding.Barrier)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_type;
        break;
      }

      // required uint32 type = 2;
      case 2: {
        if (tag == 16) {
         parse_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_pos;
        break;
      }

      // repeated uint32 pos = 3;
      case 3: {
        if (tag == 24) {
         parse_pos:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 24, input, this->mutable_pos())));
        } else if (tag == 26) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_pos())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_pos;
        if (input->ExpectTag(32)) goto parse_footprint;
        break;
      }

      // repeated uint32 footprint = 4;
      case 4: {
        if (tag == 32) {
         parse_footprint:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 32, input, this->mutable_footprint())));
        } else if (tag == 34) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_footprint())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_footprint;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ConfigBuilding.Barrier)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ConfigBuilding.Barrier)
  return false;
#undef DO_
}

void Barrier::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ConfigBuilding.Barrier)
  // required uint32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  // required uint32 type = 2;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->type(), output);
  }

  // repeated uint32 pos = 3;
  for (int i = 0; i < this->pos_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      3, this->pos(i), output);
  }

  // repeated uint32 footprint = 4;
  for (int i = 0; i < this->footprint_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      4, this->footprint(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ConfigBuilding.Barrier)
}

::google::protobuf::uint8* Barrier::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ConfigBuilding.Barrier)
  // required uint32 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  // required uint32 type = 2;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->type(), target);
  }

  // repeated uint32 pos = 3;
  for (int i = 0; i < this->pos_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(3, this->pos(i), target);
  }

  // repeated uint32 footprint = 4;
  for (int i = 0; i < this->footprint_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(4, this->footprint(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ConfigBuilding.Barrier)
  return target;
}

int Barrier::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->id());
    }

    // required uint32 type = 2;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->type());
    }

  }
  // repeated uint32 pos = 3;
  {
    int data_size = 0;
    for (int i = 0; i < this->pos_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->pos(i));
    }
    total_size += 1 * this->pos_size() + data_size;
  }

  // repeated uint32 footprint = 4;
  {
    int data_size = 0;
    for (int i = 0; i < this->footprint_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->footprint(i));
    }
    total_size += 1 * this->footprint_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Barrier::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Barrier* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Barrier*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Barrier::MergeFrom(const Barrier& from) {
  GOOGLE_CHECK_NE(&from, this);
  pos_.MergeFrom(from.pos_);
  footprint_.MergeFrom(from.footprint_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_type()) {
      set_type(from.type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Barrier::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Barrier::CopyFrom(const Barrier& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Barrier::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void Barrier::Swap(Barrier* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(type_, other->type_);
    pos_.Swap(&other->pos_);
    footprint_.Swap(&other->footprint_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Barrier::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Barrier_descriptor_;
  metadata.reflection = Barrier_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int DestoryBarrier::kTypeFieldNumber;
const int DestoryBarrier::kNeedPropsFieldNumber;
#endif  // !_MSC_VER

DestoryBarrier::DestoryBarrier()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ConfigBuilding.DestoryBarrier)
}

void DestoryBarrier::InitAsDefaultInstance() {
  need_props_ = const_cast< ::CommonGiftConfig::CommonModifyItem*>(&::CommonGiftConfig::CommonModifyItem::default_instance());
}

DestoryBarrier::DestoryBarrier(const DestoryBarrier& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ConfigBuilding.DestoryBarrier)
}

void DestoryBarrier::SharedCtor() {
  _cached_size_ = 0;
  type_ = 0u;
  need_props_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DestoryBarrier::~DestoryBarrier() {
  // @@protoc_insertion_point(destructor:ConfigBuilding.DestoryBarrier)
  SharedDtor();
}

void DestoryBarrier::SharedDtor() {
  if (this != default_instance_) {
    delete need_props_;
  }
}

void DestoryBarrier::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DestoryBarrier::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DestoryBarrier_descriptor_;
}

const DestoryBarrier& DestoryBarrier::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ConfigBuilding_2eproto();
  return *default_instance_;
}

DestoryBarrier* DestoryBarrier::default_instance_ = NULL;

DestoryBarrier* DestoryBarrier::New() const {
  return new DestoryBarrier;
}

void DestoryBarrier::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    type_ = 0u;
    if (has_need_props()) {
      if (need_props_ != NULL) need_props_->::CommonGiftConfig::CommonModifyItem::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool DestoryBarrier::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ConfigBuilding.DestoryBarrier)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 type = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_need_props;
        break;
      }

      // required .CommonGiftConfig.CommonModifyItem need_props = 2;
      case 2: {
        if (tag == 18) {
         parse_need_props:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_need_props()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ConfigBuilding.DestoryBarrier)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ConfigBuilding.DestoryBarrier)
  return false;
#undef DO_
}

void DestoryBarrier::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ConfigBuilding.DestoryBarrier)
  // required uint32 type = 1;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->type(), output);
  }

  // required .CommonGiftConfig.CommonModifyItem need_props = 2;
  if (has_need_props()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->need_props(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ConfigBuilding.DestoryBarrier)
}

::google::protobuf::uint8* DestoryBarrier::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ConfigBuilding.DestoryBarrier)
  // required uint32 type = 1;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->type(), target);
  }

  // required .CommonGiftConfig.CommonModifyItem need_props = 2;
  if (has_need_props()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->need_props(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ConfigBuilding.DestoryBarrier)
  return target;
}

int DestoryBarrier::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 type = 1;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->type());
    }

    // required .CommonGiftConfig.CommonModifyItem need_props = 2;
    if (has_need_props()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->need_props());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DestoryBarrier::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const DestoryBarrier* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const DestoryBarrier*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void DestoryBarrier::MergeFrom(const DestoryBarrier& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_need_props()) {
      mutable_need_props()->::CommonGiftConfig::CommonModifyItem::MergeFrom(from.need_props());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void DestoryBarrier::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DestoryBarrier::CopyFrom(const DestoryBarrier& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DestoryBarrier::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  if (has_need_props()) {
    if (!this->need_props().IsInitialized()) return false;
  }
  return true;
}

void DestoryBarrier::Swap(DestoryBarrier* other) {
  if (other != this) {
    std::swap(type_, other->type_);
    std::swap(need_props_, other->need_props_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata DestoryBarrier::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DestoryBarrier_descriptor_;
  metadata.reflection = DestoryBarrier_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Barriers::kBarriersFieldNumber;
const int Barriers::kBarriersDestoryFieldNumber;
#endif  // !_MSC_VER

Barriers::Barriers()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ConfigBuilding.Barriers)
}

void Barriers::InitAsDefaultInstance() {
}

Barriers::Barriers(const Barriers& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ConfigBuilding.Barriers)
}

void Barriers::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Barriers::~Barriers() {
  // @@protoc_insertion_point(destructor:ConfigBuilding.Barriers)
  SharedDtor();
}

void Barriers::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Barriers::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Barriers::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Barriers_descriptor_;
}

const Barriers& Barriers::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ConfigBuilding_2eproto();
  return *default_instance_;
}

Barriers* Barriers::default_instance_ = NULL;

Barriers* Barriers::New() const {
  return new Barriers;
}

void Barriers::Clear() {
  barriers_.Clear();
  barriers_destory_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Barriers::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ConfigBuilding.Barriers)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ConfigBuilding.Barrier barriers = 1;
      case 1: {
        if (tag == 10) {
         parse_barriers:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_barriers()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_barriers;
        if (input->ExpectTag(18)) goto parse_barriers_destory;
        break;
      }

      // repeated .ConfigBuilding.DestoryBarrier barriers_destory = 2;
      case 2: {
        if (tag == 18) {
         parse_barriers_destory:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_barriers_destory()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_barriers_destory;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ConfigBuilding.Barriers)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ConfigBuilding.Barriers)
  return false;
#undef DO_
}

void Barriers::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ConfigBuilding.Barriers)
  // repeated .ConfigBuilding.Barrier barriers = 1;
  for (int i = 0; i < this->barriers_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->barriers(i), output);
  }

  // repeated .ConfigBuilding.DestoryBarrier barriers_destory = 2;
  for (int i = 0; i < this->barriers_destory_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->barriers_destory(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ConfigBuilding.Barriers)
}

::google::protobuf::uint8* Barriers::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ConfigBuilding.Barriers)
  // repeated .ConfigBuilding.Barrier barriers = 1;
  for (int i = 0; i < this->barriers_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->barriers(i), target);
  }

  // repeated .ConfigBuilding.DestoryBarrier barriers_destory = 2;
  for (int i = 0; i < this->barriers_destory_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->barriers_destory(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ConfigBuilding.Barriers)
  return target;
}

int Barriers::ByteSize() const {
  int total_size = 0;

  // repeated .ConfigBuilding.Barrier barriers = 1;
  total_size += 1 * this->barriers_size();
  for (int i = 0; i < this->barriers_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->barriers(i));
  }

  // repeated .ConfigBuilding.DestoryBarrier barriers_destory = 2;
  total_size += 1 * this->barriers_destory_size();
  for (int i = 0; i < this->barriers_destory_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->barriers_destory(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Barriers::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Barriers* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Barriers*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Barriers::MergeFrom(const Barriers& from) {
  GOOGLE_CHECK_NE(&from, this);
  barriers_.MergeFrom(from.barriers_);
  barriers_destory_.MergeFrom(from.barriers_destory_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Barriers::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Barriers::CopyFrom(const Barriers& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Barriers::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->barriers())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->barriers_destory())) return false;
  return true;
}

void Barriers::Swap(Barriers* other) {
  if (other != this) {
    barriers_.Swap(&other->barriers_);
    barriers_destory_.Swap(&other->barriers_destory_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Barriers::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Barriers_descriptor_;
  metadata.reflection = Barriers_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace ConfigBuilding

// @@protoc_insertion_point(global_scope)
