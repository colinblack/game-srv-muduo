// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: UserConfig.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "UserConfig.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace UserCfg {

namespace {

const ::google::protobuf::Descriptor* UserBase_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UserBase_reflection_ = NULL;
const ::google::protobuf::Descriptor* Build_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Build_reflection_ = NULL;
const ::google::protobuf::Descriptor* CriticalInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CriticalInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* DailyRewards_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DailyRewards_reflection_ = NULL;
const ::google::protobuf::Descriptor* ExtraRewards_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ExtraRewards_reflection_ = NULL;
const ::google::protobuf::Descriptor* DailyShareGifts_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DailyShareGifts_reflection_ = NULL;
const ::google::protobuf::Descriptor* SignInGifts_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SignInGifts_reflection_ = NULL;
const ::google::protobuf::Descriptor* CoinPurchase_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CoinPurchase_reflection_ = NULL;
const ::google::protobuf::Descriptor* FairySpeedUp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  FairySpeedUp_reflection_ = NULL;
const ::google::protobuf::Descriptor* NewUserGuideShareCPP_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  NewUserGuideShareCPP_reflection_ = NULL;
const ::google::protobuf::Descriptor* XMUserReward_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  XMUserReward_reflection_ = NULL;
const ::google::protobuf::Descriptor* XMUserRewardCfg_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  XMUserRewardCfg_reflection_ = NULL;
const ::google::protobuf::Descriptor* CostDiamondCfg_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CostDiamondCfg_reflection_ = NULL;
const ::google::protobuf::Descriptor* User_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  User_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_UserConfig_2eproto() {
  protobuf_AddDesc_UserConfig_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "UserConfig.proto");
  GOOGLE_CHECK(file != NULL);
  UserBase_descriptor_ = file->message_type(0);
  static const int UserBase_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserBase, coin_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserBase, cash_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserBase, level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserBase, exp_),
  };
  UserBase_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      UserBase_descriptor_,
      UserBase::default_instance_,
      UserBase_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserBase, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserBase, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(UserBase));
  Build_descriptor_ = file->message_type(1);
  static const int Build_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Build, buildid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Build, pos_),
  };
  Build_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Build_descriptor_,
      Build::default_instance_,
      Build_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Build, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Build, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Build));
  CriticalInfo_descriptor_ = file->message_type(2);
  static const int CriticalInfo_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CriticalInfo, level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CriticalInfo, prize_),
  };
  CriticalInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CriticalInfo_descriptor_,
      CriticalInfo::default_instance_,
      CriticalInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CriticalInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CriticalInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CriticalInfo));
  DailyRewards_descriptor_ = file->message_type(3);
  static const int DailyRewards_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DailyRewards, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DailyRewards, weight_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DailyRewards, prize_),
  };
  DailyRewards_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DailyRewards_descriptor_,
      DailyRewards::default_instance_,
      DailyRewards_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DailyRewards, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DailyRewards, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(DailyRewards));
  ExtraRewards_descriptor_ = file->message_type(4);
  static const int ExtraRewards_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExtraRewards, day_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExtraRewards, prize_),
  };
  ExtraRewards_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ExtraRewards_descriptor_,
      ExtraRewards::default_instance_,
      ExtraRewards_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExtraRewards, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExtraRewards, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ExtraRewards));
  DailyShareGifts_descriptor_ = file->message_type(5);
  static const int DailyShareGifts_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DailyShareGifts, rewards_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DailyShareGifts, extra_),
  };
  DailyShareGifts_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DailyShareGifts_descriptor_,
      DailyShareGifts::default_instance_,
      DailyShareGifts_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DailyShareGifts, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DailyShareGifts, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(DailyShareGifts));
  SignInGifts_descriptor_ = file->message_type(6);
  static const int SignInGifts_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SignInGifts, day_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SignInGifts, prize_),
  };
  SignInGifts_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      SignInGifts_descriptor_,
      SignInGifts::default_instance_,
      SignInGifts_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SignInGifts, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SignInGifts, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(SignInGifts));
  CoinPurchase_descriptor_ = file->message_type(7);
  static const int CoinPurchase_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CoinPurchase, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CoinPurchase, cost_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CoinPurchase, reward_),
  };
  CoinPurchase_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CoinPurchase_descriptor_,
      CoinPurchase::default_instance_,
      CoinPurchase_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CoinPurchase, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CoinPurchase, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CoinPurchase));
  FairySpeedUp_descriptor_ = file->message_type(8);
  static const int FairySpeedUp_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FairySpeedUp, level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FairySpeedUp, croprate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FairySpeedUp, equiprate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FairySpeedUp, farmrate_),
  };
  FairySpeedUp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      FairySpeedUp_descriptor_,
      FairySpeedUp::default_instance_,
      FairySpeedUp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FairySpeedUp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FairySpeedUp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(FairySpeedUp));
  NewUserGuideShareCPP_descriptor_ = file->message_type(9);
  static const int NewUserGuideShareCPP_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NewUserGuideShareCPP, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NewUserGuideShareCPP, reward_),
  };
  NewUserGuideShareCPP_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      NewUserGuideShareCPP_descriptor_,
      NewUserGuideShareCPP::default_instance_,
      NewUserGuideShareCPP_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NewUserGuideShareCPP, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NewUserGuideShareCPP, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(NewUserGuideShareCPP));
  XMUserReward_descriptor_ = file->message_type(10);
  static const int XMUserReward_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(XMUserReward, reward_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(XMUserReward, content_),
  };
  XMUserReward_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      XMUserReward_descriptor_,
      XMUserReward::default_instance_,
      XMUserReward_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(XMUserReward, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(XMUserReward, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(XMUserReward));
  XMUserRewardCfg_descriptor_ = file->message_type(11);
  static const int XMUserRewardCfg_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(XMUserRewardCfg, mailtitle_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(XMUserRewardCfg, firstmailmsg_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(XMUserRewardCfg, firstchargemailmsg_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(XMUserRewardCfg, rewarddiamondcnt_),
  };
  XMUserRewardCfg_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      XMUserRewardCfg_descriptor_,
      XMUserRewardCfg::default_instance_,
      XMUserRewardCfg_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(XMUserRewardCfg, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(XMUserRewardCfg, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(XMUserRewardCfg));
  CostDiamondCfg_descriptor_ = file->message_type(12);
  static const int CostDiamondCfg_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CostDiamondCfg, xianren_open_cost_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CostDiamondCfg, zhushou_open_cost_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CostDiamondCfg, daocaoren_open_cost_),
  };
  CostDiamondCfg_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CostDiamondCfg_descriptor_,
      CostDiamondCfg::default_instance_,
      CostDiamondCfg_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CostDiamondCfg, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CostDiamondCfg, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CostDiamondCfg));
  User_descriptor_ = file->message_type(13);
  static const int User_offsets_[12] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(User, user_init_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(User, user_exp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(User, builds_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(User, initprops_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(User, criticalpoint_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(User, sharegift_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(User, coinpurchase_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(User, signin_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(User, fairyspeedup_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(User, newuserguideshare_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(User, xmuserreward_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(User, diamondcost_),
  };
  User_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      User_descriptor_,
      User::default_instance_,
      User_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(User, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(User, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(User));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_UserConfig_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    UserBase_descriptor_, &UserBase::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Build_descriptor_, &Build::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CriticalInfo_descriptor_, &CriticalInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DailyRewards_descriptor_, &DailyRewards::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ExtraRewards_descriptor_, &ExtraRewards::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DailyShareGifts_descriptor_, &DailyShareGifts::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    SignInGifts_descriptor_, &SignInGifts::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CoinPurchase_descriptor_, &CoinPurchase::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    FairySpeedUp_descriptor_, &FairySpeedUp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    NewUserGuideShareCPP_descriptor_, &NewUserGuideShareCPP::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    XMUserReward_descriptor_, &XMUserReward::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    XMUserRewardCfg_descriptor_, &XMUserRewardCfg::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CostDiamondCfg_descriptor_, &CostDiamondCfg::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    User_descriptor_, &User::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_UserConfig_2eproto() {
  delete UserBase::default_instance_;
  delete UserBase_reflection_;
  delete Build::default_instance_;
  delete Build_reflection_;
  delete CriticalInfo::default_instance_;
  delete CriticalInfo_reflection_;
  delete DailyRewards::default_instance_;
  delete DailyRewards_reflection_;
  delete ExtraRewards::default_instance_;
  delete ExtraRewards_reflection_;
  delete DailyShareGifts::default_instance_;
  delete DailyShareGifts_reflection_;
  delete SignInGifts::default_instance_;
  delete SignInGifts_reflection_;
  delete CoinPurchase::default_instance_;
  delete CoinPurchase_reflection_;
  delete FairySpeedUp::default_instance_;
  delete FairySpeedUp_reflection_;
  delete NewUserGuideShareCPP::default_instance_;
  delete NewUserGuideShareCPP_reflection_;
  delete XMUserReward::default_instance_;
  delete XMUserReward_reflection_;
  delete XMUserRewardCfg::default_instance_;
  delete XMUserRewardCfg_reflection_;
  delete CostDiamondCfg::default_instance_;
  delete CostDiamondCfg_reflection_;
  delete User::default_instance_;
  delete User_reflection_;
}

void protobuf_AddDesc_UserConfig_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::CommonGiftConfig::protobuf_AddDesc_CommonGiftConfig_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\020UserConfig.proto\022\007UserCfg\032\026CommonGiftC"
    "onfig.proto\"B\n\010UserBase\022\014\n\004coin\030\001 \002(\r\022\014\n"
    "\004cash\030\002 \002(\r\022\r\n\005level\030\003 \002(\r\022\013\n\003exp\030\004 \002(\r\""
    "%\n\005Build\022\017\n\007buildid\030\001 \002(\r\022\013\n\003pos\030\002 \003(\r\"P"
    "\n\014CriticalInfo\022\r\n\005level\030\001 \002(\r\0221\n\005prize\030\002"
    " \003(\0132\".CommonGiftConfig.CommonModifyItem"
    "\"]\n\014DailyRewards\022\n\n\002id\030\001 \002(\r\022\016\n\006weight\030\002"
    " \002(\r\0221\n\005prize\030\003 \003(\0132\".CommonGiftConfig.C"
    "ommonModifyItem\"N\n\014ExtraRewards\022\013\n\003day\030\001"
    " \002(\r\0221\n\005prize\030\002 \003(\0132\".CommonGiftConfig.C"
    "ommonModifyItem\"_\n\017DailyShareGifts\022&\n\007re"
    "wards\030\001 \003(\0132\025.UserCfg.DailyRewards\022$\n\005ex"
    "tra\030\002 \003(\0132\025.UserCfg.ExtraRewards\"M\n\013Sign"
    "InGifts\022\013\n\003day\030\001 \002(\r\0221\n\005prize\030\002 \003(\0132\".Co"
    "mmonGiftConfig.CommonModifyItem\"\200\001\n\014Coin"
    "Purchase\022\n\n\002id\030\001 \002(\r\0220\n\004cost\030\002 \002(\0132\".Com"
    "monGiftConfig.CommonModifyItem\0222\n\006reward"
    "\030\003 \002(\0132\".CommonGiftConfig.CommonModifyIt"
    "em\"T\n\014FairySpeedUp\022\r\n\005level\030\001 \002(\r\022\020\n\010cro"
    "pRate\030\002 \002(\002\022\021\n\tequipRate\030\003 \002(\002\022\020\n\010farmRa"
    "te\030\004 \002(\002\"V\n\024NewUserGuideShareCPP\022\n\n\002id\030\001"
    " \002(\r\0222\n\006reward\030\002 \002(\0132\".CommonGiftConfig."
    "CommonModifyItem\"/\n\014XMUserReward\022\016\n\006rewa"
    "rd\030\001 \002(\014\022\017\n\007content\030\002 \001(\014\"\207\001\n\017XMUserRewa"
    "rdCfg\022\021\n\tMailTitle\030\001 \002(\014\022\024\n\014FirstMailMsg"
    "\030\002 \002(\014\022\032\n\022FirstChargeMailMsg\030\003 \002(\014\022/\n\020Re"
    "wardDiamondCnt\030\004 \003(\0132\025.UserCfg.XMUserRew"
    "ard\"\317\001\n\016CostDiamondCfg\022=\n\021xianren_open_c"
    "ost\030\001 \002(\0132\".CommonGiftConfig.CommonModif"
    "yItem\022=\n\021zhushou_open_cost\030\002 \002(\0132\".Commo"
    "nGiftConfig.CommonModifyItem\022\?\n\023daocaore"
    "n_open_cost\030\003 \002(\0132\".CommonGiftConfig.Com"
    "monModifyItem\"\210\004\n\004User\022$\n\tuser_init\030\001 \002("
    "\0132\021.UserCfg.UserBase\022\020\n\010user_exp\030\002 \003(\004\022\036"
    "\n\006builds\030\003 \003(\0132\016.UserCfg.Build\0225\n\tinitpr"
    "ops\030\004 \002(\0132\".CommonGiftConfig.CommonModif"
    "yItem\022,\n\rcriticalPoint\030\005 \003(\0132\025.UserCfg.C"
    "riticalInfo\022+\n\tsharegift\030\006 \002(\0132\030.UserCfg"
    ".DailyShareGifts\022+\n\014coinpurchase\030\007 \003(\0132\025"
    ".UserCfg.CoinPurchase\022$\n\006SignIn\030\010 \003(\0132\024."
    "UserCfg.SignInGifts\022+\n\014fairySpeedUp\030\t \002("
    "\0132\025.UserCfg.FairySpeedUp\0228\n\021newUserGuide"
    "Share\030\n \003(\0132\035.UserCfg.NewUserGuideShareC"
    "PP\022.\n\014xmUserReward\030\013 \002(\0132\030.UserCfg.XMUse"
    "rRewardCfg\022,\n\013diamondCost\030\014 \002(\0132\027.UserCf"
    "g.CostDiamondCfg", 1816);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "UserConfig.proto", &protobuf_RegisterTypes);
  UserBase::default_instance_ = new UserBase();
  Build::default_instance_ = new Build();
  CriticalInfo::default_instance_ = new CriticalInfo();
  DailyRewards::default_instance_ = new DailyRewards();
  ExtraRewards::default_instance_ = new ExtraRewards();
  DailyShareGifts::default_instance_ = new DailyShareGifts();
  SignInGifts::default_instance_ = new SignInGifts();
  CoinPurchase::default_instance_ = new CoinPurchase();
  FairySpeedUp::default_instance_ = new FairySpeedUp();
  NewUserGuideShareCPP::default_instance_ = new NewUserGuideShareCPP();
  XMUserReward::default_instance_ = new XMUserReward();
  XMUserRewardCfg::default_instance_ = new XMUserRewardCfg();
  CostDiamondCfg::default_instance_ = new CostDiamondCfg();
  User::default_instance_ = new User();
  UserBase::default_instance_->InitAsDefaultInstance();
  Build::default_instance_->InitAsDefaultInstance();
  CriticalInfo::default_instance_->InitAsDefaultInstance();
  DailyRewards::default_instance_->InitAsDefaultInstance();
  ExtraRewards::default_instance_->InitAsDefaultInstance();
  DailyShareGifts::default_instance_->InitAsDefaultInstance();
  SignInGifts::default_instance_->InitAsDefaultInstance();
  CoinPurchase::default_instance_->InitAsDefaultInstance();
  FairySpeedUp::default_instance_->InitAsDefaultInstance();
  NewUserGuideShareCPP::default_instance_->InitAsDefaultInstance();
  XMUserReward::default_instance_->InitAsDefaultInstance();
  XMUserRewardCfg::default_instance_->InitAsDefaultInstance();
  CostDiamondCfg::default_instance_->InitAsDefaultInstance();
  User::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_UserConfig_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_UserConfig_2eproto {
  StaticDescriptorInitializer_UserConfig_2eproto() {
    protobuf_AddDesc_UserConfig_2eproto();
  }
} static_descriptor_initializer_UserConfig_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int UserBase::kCoinFieldNumber;
const int UserBase::kCashFieldNumber;
const int UserBase::kLevelFieldNumber;
const int UserBase::kExpFieldNumber;
#endif  // !_MSC_VER

UserBase::UserBase()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:UserCfg.UserBase)
}

void UserBase::InitAsDefaultInstance() {
}

UserBase::UserBase(const UserBase& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:UserCfg.UserBase)
}

void UserBase::SharedCtor() {
  _cached_size_ = 0;
  coin_ = 0u;
  cash_ = 0u;
  level_ = 0u;
  exp_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

UserBase::~UserBase() {
  // @@protoc_insertion_point(destructor:UserCfg.UserBase)
  SharedDtor();
}

void UserBase::SharedDtor() {
  if (this != default_instance_) {
  }
}

void UserBase::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UserBase::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UserBase_descriptor_;
}

const UserBase& UserBase::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_UserConfig_2eproto();
  return *default_instance_;
}

UserBase* UserBase::default_instance_ = NULL;

UserBase* UserBase::New() const {
  return new UserBase;
}

void UserBase::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<UserBase*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(coin_, exp_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool UserBase::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:UserCfg.UserBase)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 coin = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &coin_)));
          set_has_coin();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_cash;
        break;
      }

      // required uint32 cash = 2;
      case 2: {
        if (tag == 16) {
         parse_cash:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &cash_)));
          set_has_cash();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_level;
        break;
      }

      // required uint32 level = 3;
      case 3: {
        if (tag == 24) {
         parse_level:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &level_)));
          set_has_level();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_exp;
        break;
      }

      // required uint32 exp = 4;
      case 4: {
        if (tag == 32) {
         parse_exp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &exp_)));
          set_has_exp();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:UserCfg.UserBase)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:UserCfg.UserBase)
  return false;
#undef DO_
}

void UserBase::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:UserCfg.UserBase)
  // required uint32 coin = 1;
  if (has_coin()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->coin(), output);
  }

  // required uint32 cash = 2;
  if (has_cash()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->cash(), output);
  }

  // required uint32 level = 3;
  if (has_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->level(), output);
  }

  // required uint32 exp = 4;
  if (has_exp()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->exp(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:UserCfg.UserBase)
}

::google::protobuf::uint8* UserBase::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:UserCfg.UserBase)
  // required uint32 coin = 1;
  if (has_coin()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->coin(), target);
  }

  // required uint32 cash = 2;
  if (has_cash()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->cash(), target);
  }

  // required uint32 level = 3;
  if (has_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->level(), target);
  }

  // required uint32 exp = 4;
  if (has_exp()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->exp(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:UserCfg.UserBase)
  return target;
}

int UserBase::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 coin = 1;
    if (has_coin()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->coin());
    }

    // required uint32 cash = 2;
    if (has_cash()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->cash());
    }

    // required uint32 level = 3;
    if (has_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->level());
    }

    // required uint32 exp = 4;
    if (has_exp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->exp());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UserBase::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const UserBase* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const UserBase*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void UserBase::MergeFrom(const UserBase& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_coin()) {
      set_coin(from.coin());
    }
    if (from.has_cash()) {
      set_cash(from.cash());
    }
    if (from.has_level()) {
      set_level(from.level());
    }
    if (from.has_exp()) {
      set_exp(from.exp());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void UserBase::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UserBase::CopyFrom(const UserBase& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserBase::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;

  return true;
}

void UserBase::Swap(UserBase* other) {
  if (other != this) {
    std::swap(coin_, other->coin_);
    std::swap(cash_, other->cash_);
    std::swap(level_, other->level_);
    std::swap(exp_, other->exp_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata UserBase::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UserBase_descriptor_;
  metadata.reflection = UserBase_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Build::kBuildidFieldNumber;
const int Build::kPosFieldNumber;
#endif  // !_MSC_VER

Build::Build()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:UserCfg.Build)
}

void Build::InitAsDefaultInstance() {
}

Build::Build(const Build& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:UserCfg.Build)
}

void Build::SharedCtor() {
  _cached_size_ = 0;
  buildid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Build::~Build() {
  // @@protoc_insertion_point(destructor:UserCfg.Build)
  SharedDtor();
}

void Build::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Build::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Build::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Build_descriptor_;
}

const Build& Build::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_UserConfig_2eproto();
  return *default_instance_;
}

Build* Build::default_instance_ = NULL;

Build* Build::New() const {
  return new Build;
}

void Build::Clear() {
  buildid_ = 0u;
  pos_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Build::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:UserCfg.Build)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 buildid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &buildid_)));
          set_has_buildid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_pos;
        break;
      }

      // repeated uint32 pos = 2;
      case 2: {
        if (tag == 16) {
         parse_pos:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 16, input, this->mutable_pos())));
        } else if (tag == 18) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_pos())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_pos;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:UserCfg.Build)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:UserCfg.Build)
  return false;
#undef DO_
}

void Build::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:UserCfg.Build)
  // required uint32 buildid = 1;
  if (has_buildid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->buildid(), output);
  }

  // repeated uint32 pos = 2;
  for (int i = 0; i < this->pos_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      2, this->pos(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:UserCfg.Build)
}

::google::protobuf::uint8* Build::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:UserCfg.Build)
  // required uint32 buildid = 1;
  if (has_buildid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->buildid(), target);
  }

  // repeated uint32 pos = 2;
  for (int i = 0; i < this->pos_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(2, this->pos(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:UserCfg.Build)
  return target;
}

int Build::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 buildid = 1;
    if (has_buildid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->buildid());
    }

  }
  // repeated uint32 pos = 2;
  {
    int data_size = 0;
    for (int i = 0; i < this->pos_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->pos(i));
    }
    total_size += 1 * this->pos_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Build::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Build* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Build*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Build::MergeFrom(const Build& from) {
  GOOGLE_CHECK_NE(&from, this);
  pos_.MergeFrom(from.pos_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_buildid()) {
      set_buildid(from.buildid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Build::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Build::CopyFrom(const Build& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Build::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void Build::Swap(Build* other) {
  if (other != this) {
    std::swap(buildid_, other->buildid_);
    pos_.Swap(&other->pos_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Build::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Build_descriptor_;
  metadata.reflection = Build_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CriticalInfo::kLevelFieldNumber;
const int CriticalInfo::kPrizeFieldNumber;
#endif  // !_MSC_VER

CriticalInfo::CriticalInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:UserCfg.CriticalInfo)
}

void CriticalInfo::InitAsDefaultInstance() {
}

CriticalInfo::CriticalInfo(const CriticalInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:UserCfg.CriticalInfo)
}

void CriticalInfo::SharedCtor() {
  _cached_size_ = 0;
  level_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CriticalInfo::~CriticalInfo() {
  // @@protoc_insertion_point(destructor:UserCfg.CriticalInfo)
  SharedDtor();
}

void CriticalInfo::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CriticalInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CriticalInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CriticalInfo_descriptor_;
}

const CriticalInfo& CriticalInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_UserConfig_2eproto();
  return *default_instance_;
}

CriticalInfo* CriticalInfo::default_instance_ = NULL;

CriticalInfo* CriticalInfo::New() const {
  return new CriticalInfo;
}

void CriticalInfo::Clear() {
  level_ = 0u;
  prize_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CriticalInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:UserCfg.CriticalInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 level = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &level_)));
          set_has_level();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_prize;
        break;
      }

      // repeated .CommonGiftConfig.CommonModifyItem prize = 2;
      case 2: {
        if (tag == 18) {
         parse_prize:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_prize()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_prize;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:UserCfg.CriticalInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:UserCfg.CriticalInfo)
  return false;
#undef DO_
}

void CriticalInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:UserCfg.CriticalInfo)
  // required uint32 level = 1;
  if (has_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->level(), output);
  }

  // repeated .CommonGiftConfig.CommonModifyItem prize = 2;
  for (int i = 0; i < this->prize_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->prize(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:UserCfg.CriticalInfo)
}

::google::protobuf::uint8* CriticalInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:UserCfg.CriticalInfo)
  // required uint32 level = 1;
  if (has_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->level(), target);
  }

  // repeated .CommonGiftConfig.CommonModifyItem prize = 2;
  for (int i = 0; i < this->prize_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->prize(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:UserCfg.CriticalInfo)
  return target;
}

int CriticalInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 level = 1;
    if (has_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->level());
    }

  }
  // repeated .CommonGiftConfig.CommonModifyItem prize = 2;
  total_size += 1 * this->prize_size();
  for (int i = 0; i < this->prize_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->prize(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CriticalInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CriticalInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CriticalInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CriticalInfo::MergeFrom(const CriticalInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  prize_.MergeFrom(from.prize_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_level()) {
      set_level(from.level());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CriticalInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CriticalInfo::CopyFrom(const CriticalInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CriticalInfo::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (!::google::protobuf::internal::AllAreInitialized(this->prize())) return false;
  return true;
}

void CriticalInfo::Swap(CriticalInfo* other) {
  if (other != this) {
    std::swap(level_, other->level_);
    prize_.Swap(&other->prize_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CriticalInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CriticalInfo_descriptor_;
  metadata.reflection = CriticalInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int DailyRewards::kIdFieldNumber;
const int DailyRewards::kWeightFieldNumber;
const int DailyRewards::kPrizeFieldNumber;
#endif  // !_MSC_VER

DailyRewards::DailyRewards()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:UserCfg.DailyRewards)
}

void DailyRewards::InitAsDefaultInstance() {
}

DailyRewards::DailyRewards(const DailyRewards& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:UserCfg.DailyRewards)
}

void DailyRewards::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0u;
  weight_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DailyRewards::~DailyRewards() {
  // @@protoc_insertion_point(destructor:UserCfg.DailyRewards)
  SharedDtor();
}

void DailyRewards::SharedDtor() {
  if (this != default_instance_) {
  }
}

void DailyRewards::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DailyRewards::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DailyRewards_descriptor_;
}

const DailyRewards& DailyRewards::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_UserConfig_2eproto();
  return *default_instance_;
}

DailyRewards* DailyRewards::default_instance_ = NULL;

DailyRewards* DailyRewards::New() const {
  return new DailyRewards;
}

void DailyRewards::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<DailyRewards*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(id_, weight_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  prize_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool DailyRewards::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:UserCfg.DailyRewards)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_weight;
        break;
      }

      // required uint32 weight = 2;
      case 2: {
        if (tag == 16) {
         parse_weight:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &weight_)));
          set_has_weight();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_prize;
        break;
      }

      // repeated .CommonGiftConfig.CommonModifyItem prize = 3;
      case 3: {
        if (tag == 26) {
         parse_prize:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_prize()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_prize;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:UserCfg.DailyRewards)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:UserCfg.DailyRewards)
  return false;
#undef DO_
}

void DailyRewards::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:UserCfg.DailyRewards)
  // required uint32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  // required uint32 weight = 2;
  if (has_weight()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->weight(), output);
  }

  // repeated .CommonGiftConfig.CommonModifyItem prize = 3;
  for (int i = 0; i < this->prize_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->prize(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:UserCfg.DailyRewards)
}

::google::protobuf::uint8* DailyRewards::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:UserCfg.DailyRewards)
  // required uint32 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  // required uint32 weight = 2;
  if (has_weight()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->weight(), target);
  }

  // repeated .CommonGiftConfig.CommonModifyItem prize = 3;
  for (int i = 0; i < this->prize_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->prize(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:UserCfg.DailyRewards)
  return target;
}

int DailyRewards::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->id());
    }

    // required uint32 weight = 2;
    if (has_weight()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->weight());
    }

  }
  // repeated .CommonGiftConfig.CommonModifyItem prize = 3;
  total_size += 1 * this->prize_size();
  for (int i = 0; i < this->prize_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->prize(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DailyRewards::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const DailyRewards* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const DailyRewards*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void DailyRewards::MergeFrom(const DailyRewards& from) {
  GOOGLE_CHECK_NE(&from, this);
  prize_.MergeFrom(from.prize_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_weight()) {
      set_weight(from.weight());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void DailyRewards::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DailyRewards::CopyFrom(const DailyRewards& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DailyRewards::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  if (!::google::protobuf::internal::AllAreInitialized(this->prize())) return false;
  return true;
}

void DailyRewards::Swap(DailyRewards* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(weight_, other->weight_);
    prize_.Swap(&other->prize_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata DailyRewards::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DailyRewards_descriptor_;
  metadata.reflection = DailyRewards_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ExtraRewards::kDayFieldNumber;
const int ExtraRewards::kPrizeFieldNumber;
#endif  // !_MSC_VER

ExtraRewards::ExtraRewards()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:UserCfg.ExtraRewards)
}

void ExtraRewards::InitAsDefaultInstance() {
}

ExtraRewards::ExtraRewards(const ExtraRewards& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:UserCfg.ExtraRewards)
}

void ExtraRewards::SharedCtor() {
  _cached_size_ = 0;
  day_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ExtraRewards::~ExtraRewards() {
  // @@protoc_insertion_point(destructor:UserCfg.ExtraRewards)
  SharedDtor();
}

void ExtraRewards::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ExtraRewards::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ExtraRewards::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ExtraRewards_descriptor_;
}

const ExtraRewards& ExtraRewards::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_UserConfig_2eproto();
  return *default_instance_;
}

ExtraRewards* ExtraRewards::default_instance_ = NULL;

ExtraRewards* ExtraRewards::New() const {
  return new ExtraRewards;
}

void ExtraRewards::Clear() {
  day_ = 0u;
  prize_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ExtraRewards::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:UserCfg.ExtraRewards)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 day = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &day_)));
          set_has_day();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_prize;
        break;
      }

      // repeated .CommonGiftConfig.CommonModifyItem prize = 2;
      case 2: {
        if (tag == 18) {
         parse_prize:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_prize()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_prize;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:UserCfg.ExtraRewards)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:UserCfg.ExtraRewards)
  return false;
#undef DO_
}

void ExtraRewards::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:UserCfg.ExtraRewards)
  // required uint32 day = 1;
  if (has_day()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->day(), output);
  }

  // repeated .CommonGiftConfig.CommonModifyItem prize = 2;
  for (int i = 0; i < this->prize_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->prize(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:UserCfg.ExtraRewards)
}

::google::protobuf::uint8* ExtraRewards::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:UserCfg.ExtraRewards)
  // required uint32 day = 1;
  if (has_day()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->day(), target);
  }

  // repeated .CommonGiftConfig.CommonModifyItem prize = 2;
  for (int i = 0; i < this->prize_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->prize(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:UserCfg.ExtraRewards)
  return target;
}

int ExtraRewards::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 day = 1;
    if (has_day()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->day());
    }

  }
  // repeated .CommonGiftConfig.CommonModifyItem prize = 2;
  total_size += 1 * this->prize_size();
  for (int i = 0; i < this->prize_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->prize(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ExtraRewards::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ExtraRewards* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ExtraRewards*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ExtraRewards::MergeFrom(const ExtraRewards& from) {
  GOOGLE_CHECK_NE(&from, this);
  prize_.MergeFrom(from.prize_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_day()) {
      set_day(from.day());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ExtraRewards::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ExtraRewards::CopyFrom(const ExtraRewards& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ExtraRewards::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (!::google::protobuf::internal::AllAreInitialized(this->prize())) return false;
  return true;
}

void ExtraRewards::Swap(ExtraRewards* other) {
  if (other != this) {
    std::swap(day_, other->day_);
    prize_.Swap(&other->prize_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ExtraRewards::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ExtraRewards_descriptor_;
  metadata.reflection = ExtraRewards_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int DailyShareGifts::kRewardsFieldNumber;
const int DailyShareGifts::kExtraFieldNumber;
#endif  // !_MSC_VER

DailyShareGifts::DailyShareGifts()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:UserCfg.DailyShareGifts)
}

void DailyShareGifts::InitAsDefaultInstance() {
}

DailyShareGifts::DailyShareGifts(const DailyShareGifts& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:UserCfg.DailyShareGifts)
}

void DailyShareGifts::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DailyShareGifts::~DailyShareGifts() {
  // @@protoc_insertion_point(destructor:UserCfg.DailyShareGifts)
  SharedDtor();
}

void DailyShareGifts::SharedDtor() {
  if (this != default_instance_) {
  }
}

void DailyShareGifts::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DailyShareGifts::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DailyShareGifts_descriptor_;
}

const DailyShareGifts& DailyShareGifts::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_UserConfig_2eproto();
  return *default_instance_;
}

DailyShareGifts* DailyShareGifts::default_instance_ = NULL;

DailyShareGifts* DailyShareGifts::New() const {
  return new DailyShareGifts;
}

void DailyShareGifts::Clear() {
  rewards_.Clear();
  extra_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool DailyShareGifts::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:UserCfg.DailyShareGifts)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .UserCfg.DailyRewards rewards = 1;
      case 1: {
        if (tag == 10) {
         parse_rewards:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_rewards()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_rewards;
        if (input->ExpectTag(18)) goto parse_extra;
        break;
      }

      // repeated .UserCfg.ExtraRewards extra = 2;
      case 2: {
        if (tag == 18) {
         parse_extra:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_extra()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_extra;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:UserCfg.DailyShareGifts)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:UserCfg.DailyShareGifts)
  return false;
#undef DO_
}

void DailyShareGifts::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:UserCfg.DailyShareGifts)
  // repeated .UserCfg.DailyRewards rewards = 1;
  for (int i = 0; i < this->rewards_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->rewards(i), output);
  }

  // repeated .UserCfg.ExtraRewards extra = 2;
  for (int i = 0; i < this->extra_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->extra(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:UserCfg.DailyShareGifts)
}

::google::protobuf::uint8* DailyShareGifts::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:UserCfg.DailyShareGifts)
  // repeated .UserCfg.DailyRewards rewards = 1;
  for (int i = 0; i < this->rewards_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->rewards(i), target);
  }

  // repeated .UserCfg.ExtraRewards extra = 2;
  for (int i = 0; i < this->extra_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->extra(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:UserCfg.DailyShareGifts)
  return target;
}

int DailyShareGifts::ByteSize() const {
  int total_size = 0;

  // repeated .UserCfg.DailyRewards rewards = 1;
  total_size += 1 * this->rewards_size();
  for (int i = 0; i < this->rewards_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->rewards(i));
  }

  // repeated .UserCfg.ExtraRewards extra = 2;
  total_size += 1 * this->extra_size();
  for (int i = 0; i < this->extra_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->extra(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DailyShareGifts::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const DailyShareGifts* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const DailyShareGifts*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void DailyShareGifts::MergeFrom(const DailyShareGifts& from) {
  GOOGLE_CHECK_NE(&from, this);
  rewards_.MergeFrom(from.rewards_);
  extra_.MergeFrom(from.extra_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void DailyShareGifts::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DailyShareGifts::CopyFrom(const DailyShareGifts& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DailyShareGifts::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->rewards())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->extra())) return false;
  return true;
}

void DailyShareGifts::Swap(DailyShareGifts* other) {
  if (other != this) {
    rewards_.Swap(&other->rewards_);
    extra_.Swap(&other->extra_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata DailyShareGifts::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DailyShareGifts_descriptor_;
  metadata.reflection = DailyShareGifts_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int SignInGifts::kDayFieldNumber;
const int SignInGifts::kPrizeFieldNumber;
#endif  // !_MSC_VER

SignInGifts::SignInGifts()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:UserCfg.SignInGifts)
}

void SignInGifts::InitAsDefaultInstance() {
}

SignInGifts::SignInGifts(const SignInGifts& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:UserCfg.SignInGifts)
}

void SignInGifts::SharedCtor() {
  _cached_size_ = 0;
  day_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SignInGifts::~SignInGifts() {
  // @@protoc_insertion_point(destructor:UserCfg.SignInGifts)
  SharedDtor();
}

void SignInGifts::SharedDtor() {
  if (this != default_instance_) {
  }
}

void SignInGifts::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SignInGifts::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SignInGifts_descriptor_;
}

const SignInGifts& SignInGifts::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_UserConfig_2eproto();
  return *default_instance_;
}

SignInGifts* SignInGifts::default_instance_ = NULL;

SignInGifts* SignInGifts::New() const {
  return new SignInGifts;
}

void SignInGifts::Clear() {
  day_ = 0u;
  prize_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool SignInGifts::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:UserCfg.SignInGifts)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 day = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &day_)));
          set_has_day();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_prize;
        break;
      }

      // repeated .CommonGiftConfig.CommonModifyItem prize = 2;
      case 2: {
        if (tag == 18) {
         parse_prize:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_prize()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_prize;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:UserCfg.SignInGifts)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:UserCfg.SignInGifts)
  return false;
#undef DO_
}

void SignInGifts::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:UserCfg.SignInGifts)
  // required uint32 day = 1;
  if (has_day()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->day(), output);
  }

  // repeated .CommonGiftConfig.CommonModifyItem prize = 2;
  for (int i = 0; i < this->prize_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->prize(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:UserCfg.SignInGifts)
}

::google::protobuf::uint8* SignInGifts::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:UserCfg.SignInGifts)
  // required uint32 day = 1;
  if (has_day()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->day(), target);
  }

  // repeated .CommonGiftConfig.CommonModifyItem prize = 2;
  for (int i = 0; i < this->prize_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->prize(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:UserCfg.SignInGifts)
  return target;
}

int SignInGifts::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 day = 1;
    if (has_day()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->day());
    }

  }
  // repeated .CommonGiftConfig.CommonModifyItem prize = 2;
  total_size += 1 * this->prize_size();
  for (int i = 0; i < this->prize_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->prize(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SignInGifts::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const SignInGifts* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const SignInGifts*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SignInGifts::MergeFrom(const SignInGifts& from) {
  GOOGLE_CHECK_NE(&from, this);
  prize_.MergeFrom(from.prize_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_day()) {
      set_day(from.day());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void SignInGifts::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SignInGifts::CopyFrom(const SignInGifts& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SignInGifts::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (!::google::protobuf::internal::AllAreInitialized(this->prize())) return false;
  return true;
}

void SignInGifts::Swap(SignInGifts* other) {
  if (other != this) {
    std::swap(day_, other->day_);
    prize_.Swap(&other->prize_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata SignInGifts::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SignInGifts_descriptor_;
  metadata.reflection = SignInGifts_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CoinPurchase::kIdFieldNumber;
const int CoinPurchase::kCostFieldNumber;
const int CoinPurchase::kRewardFieldNumber;
#endif  // !_MSC_VER

CoinPurchase::CoinPurchase()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:UserCfg.CoinPurchase)
}

void CoinPurchase::InitAsDefaultInstance() {
  cost_ = const_cast< ::CommonGiftConfig::CommonModifyItem*>(&::CommonGiftConfig::CommonModifyItem::default_instance());
  reward_ = const_cast< ::CommonGiftConfig::CommonModifyItem*>(&::CommonGiftConfig::CommonModifyItem::default_instance());
}

CoinPurchase::CoinPurchase(const CoinPurchase& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:UserCfg.CoinPurchase)
}

void CoinPurchase::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0u;
  cost_ = NULL;
  reward_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CoinPurchase::~CoinPurchase() {
  // @@protoc_insertion_point(destructor:UserCfg.CoinPurchase)
  SharedDtor();
}

void CoinPurchase::SharedDtor() {
  if (this != default_instance_) {
    delete cost_;
    delete reward_;
  }
}

void CoinPurchase::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CoinPurchase::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CoinPurchase_descriptor_;
}

const CoinPurchase& CoinPurchase::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_UserConfig_2eproto();
  return *default_instance_;
}

CoinPurchase* CoinPurchase::default_instance_ = NULL;

CoinPurchase* CoinPurchase::New() const {
  return new CoinPurchase;
}

void CoinPurchase::Clear() {
  if (_has_bits_[0 / 32] & 7) {
    id_ = 0u;
    if (has_cost()) {
      if (cost_ != NULL) cost_->::CommonGiftConfig::CommonModifyItem::Clear();
    }
    if (has_reward()) {
      if (reward_ != NULL) reward_->::CommonGiftConfig::CommonModifyItem::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CoinPurchase::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:UserCfg.CoinPurchase)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_cost;
        break;
      }

      // required .CommonGiftConfig.CommonModifyItem cost = 2;
      case 2: {
        if (tag == 18) {
         parse_cost:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_cost()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_reward;
        break;
      }

      // required .CommonGiftConfig.CommonModifyItem reward = 3;
      case 3: {
        if (tag == 26) {
         parse_reward:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_reward()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:UserCfg.CoinPurchase)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:UserCfg.CoinPurchase)
  return false;
#undef DO_
}

void CoinPurchase::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:UserCfg.CoinPurchase)
  // required uint32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  // required .CommonGiftConfig.CommonModifyItem cost = 2;
  if (has_cost()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->cost(), output);
  }

  // required .CommonGiftConfig.CommonModifyItem reward = 3;
  if (has_reward()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->reward(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:UserCfg.CoinPurchase)
}

::google::protobuf::uint8* CoinPurchase::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:UserCfg.CoinPurchase)
  // required uint32 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  // required .CommonGiftConfig.CommonModifyItem cost = 2;
  if (has_cost()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->cost(), target);
  }

  // required .CommonGiftConfig.CommonModifyItem reward = 3;
  if (has_reward()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->reward(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:UserCfg.CoinPurchase)
  return target;
}

int CoinPurchase::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->id());
    }

    // required .CommonGiftConfig.CommonModifyItem cost = 2;
    if (has_cost()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->cost());
    }

    // required .CommonGiftConfig.CommonModifyItem reward = 3;
    if (has_reward()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->reward());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CoinPurchase::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CoinPurchase* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CoinPurchase*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CoinPurchase::MergeFrom(const CoinPurchase& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_cost()) {
      mutable_cost()->::CommonGiftConfig::CommonModifyItem::MergeFrom(from.cost());
    }
    if (from.has_reward()) {
      mutable_reward()->::CommonGiftConfig::CommonModifyItem::MergeFrom(from.reward());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CoinPurchase::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CoinPurchase::CopyFrom(const CoinPurchase& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CoinPurchase::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  if (has_cost()) {
    if (!this->cost().IsInitialized()) return false;
  }
  if (has_reward()) {
    if (!this->reward().IsInitialized()) return false;
  }
  return true;
}

void CoinPurchase::Swap(CoinPurchase* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(cost_, other->cost_);
    std::swap(reward_, other->reward_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CoinPurchase::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CoinPurchase_descriptor_;
  metadata.reflection = CoinPurchase_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int FairySpeedUp::kLevelFieldNumber;
const int FairySpeedUp::kCropRateFieldNumber;
const int FairySpeedUp::kEquipRateFieldNumber;
const int FairySpeedUp::kFarmRateFieldNumber;
#endif  // !_MSC_VER

FairySpeedUp::FairySpeedUp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:UserCfg.FairySpeedUp)
}

void FairySpeedUp::InitAsDefaultInstance() {
}

FairySpeedUp::FairySpeedUp(const FairySpeedUp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:UserCfg.FairySpeedUp)
}

void FairySpeedUp::SharedCtor() {
  _cached_size_ = 0;
  level_ = 0u;
  croprate_ = 0;
  equiprate_ = 0;
  farmrate_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

FairySpeedUp::~FairySpeedUp() {
  // @@protoc_insertion_point(destructor:UserCfg.FairySpeedUp)
  SharedDtor();
}

void FairySpeedUp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void FairySpeedUp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FairySpeedUp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return FairySpeedUp_descriptor_;
}

const FairySpeedUp& FairySpeedUp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_UserConfig_2eproto();
  return *default_instance_;
}

FairySpeedUp* FairySpeedUp::default_instance_ = NULL;

FairySpeedUp* FairySpeedUp::New() const {
  return new FairySpeedUp;
}

void FairySpeedUp::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<FairySpeedUp*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(level_, farmrate_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool FairySpeedUp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:UserCfg.FairySpeedUp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 level = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &level_)));
          set_has_level();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(21)) goto parse_cropRate;
        break;
      }

      // required float cropRate = 2;
      case 2: {
        if (tag == 21) {
         parse_cropRate:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &croprate_)));
          set_has_croprate();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(29)) goto parse_equipRate;
        break;
      }

      // required float equipRate = 3;
      case 3: {
        if (tag == 29) {
         parse_equipRate:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &equiprate_)));
          set_has_equiprate();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(37)) goto parse_farmRate;
        break;
      }

      // required float farmRate = 4;
      case 4: {
        if (tag == 37) {
         parse_farmRate:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &farmrate_)));
          set_has_farmrate();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:UserCfg.FairySpeedUp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:UserCfg.FairySpeedUp)
  return false;
#undef DO_
}

void FairySpeedUp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:UserCfg.FairySpeedUp)
  // required uint32 level = 1;
  if (has_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->level(), output);
  }

  // required float cropRate = 2;
  if (has_croprate()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->croprate(), output);
  }

  // required float equipRate = 3;
  if (has_equiprate()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->equiprate(), output);
  }

  // required float farmRate = 4;
  if (has_farmrate()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->farmrate(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:UserCfg.FairySpeedUp)
}

::google::protobuf::uint8* FairySpeedUp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:UserCfg.FairySpeedUp)
  // required uint32 level = 1;
  if (has_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->level(), target);
  }

  // required float cropRate = 2;
  if (has_croprate()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->croprate(), target);
  }

  // required float equipRate = 3;
  if (has_equiprate()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->equiprate(), target);
  }

  // required float farmRate = 4;
  if (has_farmrate()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->farmrate(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:UserCfg.FairySpeedUp)
  return target;
}

int FairySpeedUp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 level = 1;
    if (has_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->level());
    }

    // required float cropRate = 2;
    if (has_croprate()) {
      total_size += 1 + 4;
    }

    // required float equipRate = 3;
    if (has_equiprate()) {
      total_size += 1 + 4;
    }

    // required float farmRate = 4;
    if (has_farmrate()) {
      total_size += 1 + 4;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FairySpeedUp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const FairySpeedUp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const FairySpeedUp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void FairySpeedUp::MergeFrom(const FairySpeedUp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_level()) {
      set_level(from.level());
    }
    if (from.has_croprate()) {
      set_croprate(from.croprate());
    }
    if (from.has_equiprate()) {
      set_equiprate(from.equiprate());
    }
    if (from.has_farmrate()) {
      set_farmrate(from.farmrate());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void FairySpeedUp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FairySpeedUp::CopyFrom(const FairySpeedUp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FairySpeedUp::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;

  return true;
}

void FairySpeedUp::Swap(FairySpeedUp* other) {
  if (other != this) {
    std::swap(level_, other->level_);
    std::swap(croprate_, other->croprate_);
    std::swap(equiprate_, other->equiprate_);
    std::swap(farmrate_, other->farmrate_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata FairySpeedUp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = FairySpeedUp_descriptor_;
  metadata.reflection = FairySpeedUp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int NewUserGuideShareCPP::kIdFieldNumber;
const int NewUserGuideShareCPP::kRewardFieldNumber;
#endif  // !_MSC_VER

NewUserGuideShareCPP::NewUserGuideShareCPP()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:UserCfg.NewUserGuideShareCPP)
}

void NewUserGuideShareCPP::InitAsDefaultInstance() {
  reward_ = const_cast< ::CommonGiftConfig::CommonModifyItem*>(&::CommonGiftConfig::CommonModifyItem::default_instance());
}

NewUserGuideShareCPP::NewUserGuideShareCPP(const NewUserGuideShareCPP& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:UserCfg.NewUserGuideShareCPP)
}

void NewUserGuideShareCPP::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0u;
  reward_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

NewUserGuideShareCPP::~NewUserGuideShareCPP() {
  // @@protoc_insertion_point(destructor:UserCfg.NewUserGuideShareCPP)
  SharedDtor();
}

void NewUserGuideShareCPP::SharedDtor() {
  if (this != default_instance_) {
    delete reward_;
  }
}

void NewUserGuideShareCPP::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NewUserGuideShareCPP::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return NewUserGuideShareCPP_descriptor_;
}

const NewUserGuideShareCPP& NewUserGuideShareCPP::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_UserConfig_2eproto();
  return *default_instance_;
}

NewUserGuideShareCPP* NewUserGuideShareCPP::default_instance_ = NULL;

NewUserGuideShareCPP* NewUserGuideShareCPP::New() const {
  return new NewUserGuideShareCPP;
}

void NewUserGuideShareCPP::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    id_ = 0u;
    if (has_reward()) {
      if (reward_ != NULL) reward_->::CommonGiftConfig::CommonModifyItem::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool NewUserGuideShareCPP::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:UserCfg.NewUserGuideShareCPP)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_reward;
        break;
      }

      // required .CommonGiftConfig.CommonModifyItem reward = 2;
      case 2: {
        if (tag == 18) {
         parse_reward:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_reward()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:UserCfg.NewUserGuideShareCPP)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:UserCfg.NewUserGuideShareCPP)
  return false;
#undef DO_
}

void NewUserGuideShareCPP::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:UserCfg.NewUserGuideShareCPP)
  // required uint32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  // required .CommonGiftConfig.CommonModifyItem reward = 2;
  if (has_reward()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->reward(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:UserCfg.NewUserGuideShareCPP)
}

::google::protobuf::uint8* NewUserGuideShareCPP::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:UserCfg.NewUserGuideShareCPP)
  // required uint32 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  // required .CommonGiftConfig.CommonModifyItem reward = 2;
  if (has_reward()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->reward(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:UserCfg.NewUserGuideShareCPP)
  return target;
}

int NewUserGuideShareCPP::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->id());
    }

    // required .CommonGiftConfig.CommonModifyItem reward = 2;
    if (has_reward()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->reward());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NewUserGuideShareCPP::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const NewUserGuideShareCPP* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const NewUserGuideShareCPP*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void NewUserGuideShareCPP::MergeFrom(const NewUserGuideShareCPP& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_reward()) {
      mutable_reward()->::CommonGiftConfig::CommonModifyItem::MergeFrom(from.reward());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void NewUserGuideShareCPP::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NewUserGuideShareCPP::CopyFrom(const NewUserGuideShareCPP& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NewUserGuideShareCPP::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  if (has_reward()) {
    if (!this->reward().IsInitialized()) return false;
  }
  return true;
}

void NewUserGuideShareCPP::Swap(NewUserGuideShareCPP* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(reward_, other->reward_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata NewUserGuideShareCPP::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = NewUserGuideShareCPP_descriptor_;
  metadata.reflection = NewUserGuideShareCPP_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int XMUserReward::kRewardFieldNumber;
const int XMUserReward::kContentFieldNumber;
#endif  // !_MSC_VER

XMUserReward::XMUserReward()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:UserCfg.XMUserReward)
}

void XMUserReward::InitAsDefaultInstance() {
}

XMUserReward::XMUserReward(const XMUserReward& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:UserCfg.XMUserReward)
}

void XMUserReward::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  reward_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  content_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

XMUserReward::~XMUserReward() {
  // @@protoc_insertion_point(destructor:UserCfg.XMUserReward)
  SharedDtor();
}

void XMUserReward::SharedDtor() {
  if (reward_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete reward_;
  }
  if (content_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete content_;
  }
  if (this != default_instance_) {
  }
}

void XMUserReward::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* XMUserReward::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return XMUserReward_descriptor_;
}

const XMUserReward& XMUserReward::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_UserConfig_2eproto();
  return *default_instance_;
}

XMUserReward* XMUserReward::default_instance_ = NULL;

XMUserReward* XMUserReward::New() const {
  return new XMUserReward;
}

void XMUserReward::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    if (has_reward()) {
      if (reward_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        reward_->clear();
      }
    }
    if (has_content()) {
      if (content_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        content_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool XMUserReward::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:UserCfg.XMUserReward)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bytes reward = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_reward()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_content;
        break;
      }

      // optional bytes content = 2;
      case 2: {
        if (tag == 18) {
         parse_content:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_content()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:UserCfg.XMUserReward)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:UserCfg.XMUserReward)
  return false;
#undef DO_
}

void XMUserReward::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:UserCfg.XMUserReward)
  // required bytes reward = 1;
  if (has_reward()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->reward(), output);
  }

  // optional bytes content = 2;
  if (has_content()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->content(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:UserCfg.XMUserReward)
}

::google::protobuf::uint8* XMUserReward::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:UserCfg.XMUserReward)
  // required bytes reward = 1;
  if (has_reward()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->reward(), target);
  }

  // optional bytes content = 2;
  if (has_content()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->content(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:UserCfg.XMUserReward)
  return target;
}

int XMUserReward::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required bytes reward = 1;
    if (has_reward()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->reward());
    }

    // optional bytes content = 2;
    if (has_content()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->content());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void XMUserReward::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const XMUserReward* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const XMUserReward*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void XMUserReward::MergeFrom(const XMUserReward& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_reward()) {
      set_reward(from.reward());
    }
    if (from.has_content()) {
      set_content(from.content());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void XMUserReward::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void XMUserReward::CopyFrom(const XMUserReward& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool XMUserReward::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void XMUserReward::Swap(XMUserReward* other) {
  if (other != this) {
    std::swap(reward_, other->reward_);
    std::swap(content_, other->content_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata XMUserReward::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = XMUserReward_descriptor_;
  metadata.reflection = XMUserReward_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int XMUserRewardCfg::kMailTitleFieldNumber;
const int XMUserRewardCfg::kFirstMailMsgFieldNumber;
const int XMUserRewardCfg::kFirstChargeMailMsgFieldNumber;
const int XMUserRewardCfg::kRewardDiamondCntFieldNumber;
#endif  // !_MSC_VER

XMUserRewardCfg::XMUserRewardCfg()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:UserCfg.XMUserRewardCfg)
}

void XMUserRewardCfg::InitAsDefaultInstance() {
}

XMUserRewardCfg::XMUserRewardCfg(const XMUserRewardCfg& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:UserCfg.XMUserRewardCfg)
}

void XMUserRewardCfg::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  mailtitle_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  firstmailmsg_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  firstchargemailmsg_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

XMUserRewardCfg::~XMUserRewardCfg() {
  // @@protoc_insertion_point(destructor:UserCfg.XMUserRewardCfg)
  SharedDtor();
}

void XMUserRewardCfg::SharedDtor() {
  if (mailtitle_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete mailtitle_;
  }
  if (firstmailmsg_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete firstmailmsg_;
  }
  if (firstchargemailmsg_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete firstchargemailmsg_;
  }
  if (this != default_instance_) {
  }
}

void XMUserRewardCfg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* XMUserRewardCfg::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return XMUserRewardCfg_descriptor_;
}

const XMUserRewardCfg& XMUserRewardCfg::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_UserConfig_2eproto();
  return *default_instance_;
}

XMUserRewardCfg* XMUserRewardCfg::default_instance_ = NULL;

XMUserRewardCfg* XMUserRewardCfg::New() const {
  return new XMUserRewardCfg;
}

void XMUserRewardCfg::Clear() {
  if (_has_bits_[0 / 32] & 7) {
    if (has_mailtitle()) {
      if (mailtitle_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        mailtitle_->clear();
      }
    }
    if (has_firstmailmsg()) {
      if (firstmailmsg_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        firstmailmsg_->clear();
      }
    }
    if (has_firstchargemailmsg()) {
      if (firstchargemailmsg_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        firstchargemailmsg_->clear();
      }
    }
  }
  rewarddiamondcnt_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool XMUserRewardCfg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:UserCfg.XMUserRewardCfg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bytes MailTitle = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_mailtitle()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_FirstMailMsg;
        break;
      }

      // required bytes FirstMailMsg = 2;
      case 2: {
        if (tag == 18) {
         parse_FirstMailMsg:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_firstmailmsg()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_FirstChargeMailMsg;
        break;
      }

      // required bytes FirstChargeMailMsg = 3;
      case 3: {
        if (tag == 26) {
         parse_FirstChargeMailMsg:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_firstchargemailmsg()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_RewardDiamondCnt;
        break;
      }

      // repeated .UserCfg.XMUserReward RewardDiamondCnt = 4;
      case 4: {
        if (tag == 34) {
         parse_RewardDiamondCnt:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_rewarddiamondcnt()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_RewardDiamondCnt;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:UserCfg.XMUserRewardCfg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:UserCfg.XMUserRewardCfg)
  return false;
#undef DO_
}

void XMUserRewardCfg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:UserCfg.XMUserRewardCfg)
  // required bytes MailTitle = 1;
  if (has_mailtitle()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->mailtitle(), output);
  }

  // required bytes FirstMailMsg = 2;
  if (has_firstmailmsg()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->firstmailmsg(), output);
  }

  // required bytes FirstChargeMailMsg = 3;
  if (has_firstchargemailmsg()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->firstchargemailmsg(), output);
  }

  // repeated .UserCfg.XMUserReward RewardDiamondCnt = 4;
  for (int i = 0; i < this->rewarddiamondcnt_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->rewarddiamondcnt(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:UserCfg.XMUserRewardCfg)
}

::google::protobuf::uint8* XMUserRewardCfg::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:UserCfg.XMUserRewardCfg)
  // required bytes MailTitle = 1;
  if (has_mailtitle()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->mailtitle(), target);
  }

  // required bytes FirstMailMsg = 2;
  if (has_firstmailmsg()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->firstmailmsg(), target);
  }

  // required bytes FirstChargeMailMsg = 3;
  if (has_firstchargemailmsg()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->firstchargemailmsg(), target);
  }

  // repeated .UserCfg.XMUserReward RewardDiamondCnt = 4;
  for (int i = 0; i < this->rewarddiamondcnt_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->rewarddiamondcnt(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:UserCfg.XMUserRewardCfg)
  return target;
}

int XMUserRewardCfg::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required bytes MailTitle = 1;
    if (has_mailtitle()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->mailtitle());
    }

    // required bytes FirstMailMsg = 2;
    if (has_firstmailmsg()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->firstmailmsg());
    }

    // required bytes FirstChargeMailMsg = 3;
    if (has_firstchargemailmsg()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->firstchargemailmsg());
    }

  }
  // repeated .UserCfg.XMUserReward RewardDiamondCnt = 4;
  total_size += 1 * this->rewarddiamondcnt_size();
  for (int i = 0; i < this->rewarddiamondcnt_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->rewarddiamondcnt(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void XMUserRewardCfg::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const XMUserRewardCfg* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const XMUserRewardCfg*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void XMUserRewardCfg::MergeFrom(const XMUserRewardCfg& from) {
  GOOGLE_CHECK_NE(&from, this);
  rewarddiamondcnt_.MergeFrom(from.rewarddiamondcnt_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_mailtitle()) {
      set_mailtitle(from.mailtitle());
    }
    if (from.has_firstmailmsg()) {
      set_firstmailmsg(from.firstmailmsg());
    }
    if (from.has_firstchargemailmsg()) {
      set_firstchargemailmsg(from.firstchargemailmsg());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void XMUserRewardCfg::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void XMUserRewardCfg::CopyFrom(const XMUserRewardCfg& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool XMUserRewardCfg::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  if (!::google::protobuf::internal::AllAreInitialized(this->rewarddiamondcnt())) return false;
  return true;
}

void XMUserRewardCfg::Swap(XMUserRewardCfg* other) {
  if (other != this) {
    std::swap(mailtitle_, other->mailtitle_);
    std::swap(firstmailmsg_, other->firstmailmsg_);
    std::swap(firstchargemailmsg_, other->firstchargemailmsg_);
    rewarddiamondcnt_.Swap(&other->rewarddiamondcnt_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata XMUserRewardCfg::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = XMUserRewardCfg_descriptor_;
  metadata.reflection = XMUserRewardCfg_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CostDiamondCfg::kXianrenOpenCostFieldNumber;
const int CostDiamondCfg::kZhushouOpenCostFieldNumber;
const int CostDiamondCfg::kDaocaorenOpenCostFieldNumber;
#endif  // !_MSC_VER

CostDiamondCfg::CostDiamondCfg()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:UserCfg.CostDiamondCfg)
}

void CostDiamondCfg::InitAsDefaultInstance() {
  xianren_open_cost_ = const_cast< ::CommonGiftConfig::CommonModifyItem*>(&::CommonGiftConfig::CommonModifyItem::default_instance());
  zhushou_open_cost_ = const_cast< ::CommonGiftConfig::CommonModifyItem*>(&::CommonGiftConfig::CommonModifyItem::default_instance());
  daocaoren_open_cost_ = const_cast< ::CommonGiftConfig::CommonModifyItem*>(&::CommonGiftConfig::CommonModifyItem::default_instance());
}

CostDiamondCfg::CostDiamondCfg(const CostDiamondCfg& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:UserCfg.CostDiamondCfg)
}

void CostDiamondCfg::SharedCtor() {
  _cached_size_ = 0;
  xianren_open_cost_ = NULL;
  zhushou_open_cost_ = NULL;
  daocaoren_open_cost_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CostDiamondCfg::~CostDiamondCfg() {
  // @@protoc_insertion_point(destructor:UserCfg.CostDiamondCfg)
  SharedDtor();
}

void CostDiamondCfg::SharedDtor() {
  if (this != default_instance_) {
    delete xianren_open_cost_;
    delete zhushou_open_cost_;
    delete daocaoren_open_cost_;
  }
}

void CostDiamondCfg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CostDiamondCfg::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CostDiamondCfg_descriptor_;
}

const CostDiamondCfg& CostDiamondCfg::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_UserConfig_2eproto();
  return *default_instance_;
}

CostDiamondCfg* CostDiamondCfg::default_instance_ = NULL;

CostDiamondCfg* CostDiamondCfg::New() const {
  return new CostDiamondCfg;
}

void CostDiamondCfg::Clear() {
  if (_has_bits_[0 / 32] & 7) {
    if (has_xianren_open_cost()) {
      if (xianren_open_cost_ != NULL) xianren_open_cost_->::CommonGiftConfig::CommonModifyItem::Clear();
    }
    if (has_zhushou_open_cost()) {
      if (zhushou_open_cost_ != NULL) zhushou_open_cost_->::CommonGiftConfig::CommonModifyItem::Clear();
    }
    if (has_daocaoren_open_cost()) {
      if (daocaoren_open_cost_ != NULL) daocaoren_open_cost_->::CommonGiftConfig::CommonModifyItem::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CostDiamondCfg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:UserCfg.CostDiamondCfg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .CommonGiftConfig.CommonModifyItem xianren_open_cost = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_xianren_open_cost()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_zhushou_open_cost;
        break;
      }

      // required .CommonGiftConfig.CommonModifyItem zhushou_open_cost = 2;
      case 2: {
        if (tag == 18) {
         parse_zhushou_open_cost:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_zhushou_open_cost()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_daocaoren_open_cost;
        break;
      }

      // required .CommonGiftConfig.CommonModifyItem daocaoren_open_cost = 3;
      case 3: {
        if (tag == 26) {
         parse_daocaoren_open_cost:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_daocaoren_open_cost()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:UserCfg.CostDiamondCfg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:UserCfg.CostDiamondCfg)
  return false;
#undef DO_
}

void CostDiamondCfg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:UserCfg.CostDiamondCfg)
  // required .CommonGiftConfig.CommonModifyItem xianren_open_cost = 1;
  if (has_xianren_open_cost()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->xianren_open_cost(), output);
  }

  // required .CommonGiftConfig.CommonModifyItem zhushou_open_cost = 2;
  if (has_zhushou_open_cost()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->zhushou_open_cost(), output);
  }

  // required .CommonGiftConfig.CommonModifyItem daocaoren_open_cost = 3;
  if (has_daocaoren_open_cost()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->daocaoren_open_cost(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:UserCfg.CostDiamondCfg)
}

::google::protobuf::uint8* CostDiamondCfg::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:UserCfg.CostDiamondCfg)
  // required .CommonGiftConfig.CommonModifyItem xianren_open_cost = 1;
  if (has_xianren_open_cost()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->xianren_open_cost(), target);
  }

  // required .CommonGiftConfig.CommonModifyItem zhushou_open_cost = 2;
  if (has_zhushou_open_cost()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->zhushou_open_cost(), target);
  }

  // required .CommonGiftConfig.CommonModifyItem daocaoren_open_cost = 3;
  if (has_daocaoren_open_cost()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->daocaoren_open_cost(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:UserCfg.CostDiamondCfg)
  return target;
}

int CostDiamondCfg::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .CommonGiftConfig.CommonModifyItem xianren_open_cost = 1;
    if (has_xianren_open_cost()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->xianren_open_cost());
    }

    // required .CommonGiftConfig.CommonModifyItem zhushou_open_cost = 2;
    if (has_zhushou_open_cost()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->zhushou_open_cost());
    }

    // required .CommonGiftConfig.CommonModifyItem daocaoren_open_cost = 3;
    if (has_daocaoren_open_cost()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->daocaoren_open_cost());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CostDiamondCfg::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CostDiamondCfg* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CostDiamondCfg*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CostDiamondCfg::MergeFrom(const CostDiamondCfg& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_xianren_open_cost()) {
      mutable_xianren_open_cost()->::CommonGiftConfig::CommonModifyItem::MergeFrom(from.xianren_open_cost());
    }
    if (from.has_zhushou_open_cost()) {
      mutable_zhushou_open_cost()->::CommonGiftConfig::CommonModifyItem::MergeFrom(from.zhushou_open_cost());
    }
    if (from.has_daocaoren_open_cost()) {
      mutable_daocaoren_open_cost()->::CommonGiftConfig::CommonModifyItem::MergeFrom(from.daocaoren_open_cost());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CostDiamondCfg::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CostDiamondCfg::CopyFrom(const CostDiamondCfg& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CostDiamondCfg::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  if (has_xianren_open_cost()) {
    if (!this->xianren_open_cost().IsInitialized()) return false;
  }
  if (has_zhushou_open_cost()) {
    if (!this->zhushou_open_cost().IsInitialized()) return false;
  }
  if (has_daocaoren_open_cost()) {
    if (!this->daocaoren_open_cost().IsInitialized()) return false;
  }
  return true;
}

void CostDiamondCfg::Swap(CostDiamondCfg* other) {
  if (other != this) {
    std::swap(xianren_open_cost_, other->xianren_open_cost_);
    std::swap(zhushou_open_cost_, other->zhushou_open_cost_);
    std::swap(daocaoren_open_cost_, other->daocaoren_open_cost_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CostDiamondCfg::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CostDiamondCfg_descriptor_;
  metadata.reflection = CostDiamondCfg_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int User::kUserInitFieldNumber;
const int User::kUserExpFieldNumber;
const int User::kBuildsFieldNumber;
const int User::kInitpropsFieldNumber;
const int User::kCriticalPointFieldNumber;
const int User::kSharegiftFieldNumber;
const int User::kCoinpurchaseFieldNumber;
const int User::kSignInFieldNumber;
const int User::kFairySpeedUpFieldNumber;
const int User::kNewUserGuideShareFieldNumber;
const int User::kXmUserRewardFieldNumber;
const int User::kDiamondCostFieldNumber;
#endif  // !_MSC_VER

User::User()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:UserCfg.User)
}

void User::InitAsDefaultInstance() {
  user_init_ = const_cast< ::UserCfg::UserBase*>(&::UserCfg::UserBase::default_instance());
  initprops_ = const_cast< ::CommonGiftConfig::CommonModifyItem*>(&::CommonGiftConfig::CommonModifyItem::default_instance());
  sharegift_ = const_cast< ::UserCfg::DailyShareGifts*>(&::UserCfg::DailyShareGifts::default_instance());
  fairyspeedup_ = const_cast< ::UserCfg::FairySpeedUp*>(&::UserCfg::FairySpeedUp::default_instance());
  xmuserreward_ = const_cast< ::UserCfg::XMUserRewardCfg*>(&::UserCfg::XMUserRewardCfg::default_instance());
  diamondcost_ = const_cast< ::UserCfg::CostDiamondCfg*>(&::UserCfg::CostDiamondCfg::default_instance());
}

User::User(const User& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:UserCfg.User)
}

void User::SharedCtor() {
  _cached_size_ = 0;
  user_init_ = NULL;
  initprops_ = NULL;
  sharegift_ = NULL;
  fairyspeedup_ = NULL;
  xmuserreward_ = NULL;
  diamondcost_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

User::~User() {
  // @@protoc_insertion_point(destructor:UserCfg.User)
  SharedDtor();
}

void User::SharedDtor() {
  if (this != default_instance_) {
    delete user_init_;
    delete initprops_;
    delete sharegift_;
    delete fairyspeedup_;
    delete xmuserreward_;
    delete diamondcost_;
  }
}

void User::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* User::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return User_descriptor_;
}

const User& User::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_UserConfig_2eproto();
  return *default_instance_;
}

User* User::default_instance_ = NULL;

User* User::New() const {
  return new User;
}

void User::Clear() {
  if (_has_bits_[0 / 32] & 41) {
    if (has_user_init()) {
      if (user_init_ != NULL) user_init_->::UserCfg::UserBase::Clear();
    }
    if (has_initprops()) {
      if (initprops_ != NULL) initprops_->::CommonGiftConfig::CommonModifyItem::Clear();
    }
    if (has_sharegift()) {
      if (sharegift_ != NULL) sharegift_->::UserCfg::DailyShareGifts::Clear();
    }
  }
  if (_has_bits_[8 / 32] & 3328) {
    if (has_fairyspeedup()) {
      if (fairyspeedup_ != NULL) fairyspeedup_->::UserCfg::FairySpeedUp::Clear();
    }
    if (has_xmuserreward()) {
      if (xmuserreward_ != NULL) xmuserreward_->::UserCfg::XMUserRewardCfg::Clear();
    }
    if (has_diamondcost()) {
      if (diamondcost_ != NULL) diamondcost_->::UserCfg::CostDiamondCfg::Clear();
    }
  }
  user_exp_.Clear();
  builds_.Clear();
  criticalpoint_.Clear();
  coinpurchase_.Clear();
  signin_.Clear();
  newuserguideshare_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool User::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:UserCfg.User)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .UserCfg.UserBase user_init = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_user_init()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_user_exp;
        break;
      }

      // repeated uint64 user_exp = 2;
      case 2: {
        if (tag == 16) {
         parse_user_exp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 16, input, this->mutable_user_exp())));
        } else if (tag == 18) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_user_exp())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_user_exp;
        if (input->ExpectTag(26)) goto parse_builds;
        break;
      }

      // repeated .UserCfg.Build builds = 3;
      case 3: {
        if (tag == 26) {
         parse_builds:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_builds()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_builds;
        if (input->ExpectTag(34)) goto parse_initprops;
        break;
      }

      // required .CommonGiftConfig.CommonModifyItem initprops = 4;
      case 4: {
        if (tag == 34) {
         parse_initprops:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_initprops()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_criticalPoint;
        break;
      }

      // repeated .UserCfg.CriticalInfo criticalPoint = 5;
      case 5: {
        if (tag == 42) {
         parse_criticalPoint:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_criticalpoint()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_criticalPoint;
        if (input->ExpectTag(50)) goto parse_sharegift;
        break;
      }

      // required .UserCfg.DailyShareGifts sharegift = 6;
      case 6: {
        if (tag == 50) {
         parse_sharegift:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_sharegift()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_coinpurchase;
        break;
      }

      // repeated .UserCfg.CoinPurchase coinpurchase = 7;
      case 7: {
        if (tag == 58) {
         parse_coinpurchase:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_coinpurchase()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_coinpurchase;
        if (input->ExpectTag(66)) goto parse_SignIn;
        break;
      }

      // repeated .UserCfg.SignInGifts SignIn = 8;
      case 8: {
        if (tag == 66) {
         parse_SignIn:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_signin()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_SignIn;
        if (input->ExpectTag(74)) goto parse_fairySpeedUp;
        break;
      }

      // required .UserCfg.FairySpeedUp fairySpeedUp = 9;
      case 9: {
        if (tag == 74) {
         parse_fairySpeedUp:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_fairyspeedup()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_newUserGuideShare;
        break;
      }

      // repeated .UserCfg.NewUserGuideShareCPP newUserGuideShare = 10;
      case 10: {
        if (tag == 82) {
         parse_newUserGuideShare:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_newuserguideshare()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_newUserGuideShare;
        if (input->ExpectTag(90)) goto parse_xmUserReward;
        break;
      }

      // required .UserCfg.XMUserRewardCfg xmUserReward = 11;
      case 11: {
        if (tag == 90) {
         parse_xmUserReward:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_xmuserreward()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(98)) goto parse_diamondCost;
        break;
      }

      // required .UserCfg.CostDiamondCfg diamondCost = 12;
      case 12: {
        if (tag == 98) {
         parse_diamondCost:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_diamondcost()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:UserCfg.User)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:UserCfg.User)
  return false;
#undef DO_
}

void User::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:UserCfg.User)
  // required .UserCfg.UserBase user_init = 1;
  if (has_user_init()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->user_init(), output);
  }

  // repeated uint64 user_exp = 2;
  for (int i = 0; i < this->user_exp_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(
      2, this->user_exp(i), output);
  }

  // repeated .UserCfg.Build builds = 3;
  for (int i = 0; i < this->builds_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->builds(i), output);
  }

  // required .CommonGiftConfig.CommonModifyItem initprops = 4;
  if (has_initprops()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->initprops(), output);
  }

  // repeated .UserCfg.CriticalInfo criticalPoint = 5;
  for (int i = 0; i < this->criticalpoint_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->criticalpoint(i), output);
  }

  // required .UserCfg.DailyShareGifts sharegift = 6;
  if (has_sharegift()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->sharegift(), output);
  }

  // repeated .UserCfg.CoinPurchase coinpurchase = 7;
  for (int i = 0; i < this->coinpurchase_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->coinpurchase(i), output);
  }

  // repeated .UserCfg.SignInGifts SignIn = 8;
  for (int i = 0; i < this->signin_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->signin(i), output);
  }

  // required .UserCfg.FairySpeedUp fairySpeedUp = 9;
  if (has_fairyspeedup()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->fairyspeedup(), output);
  }

  // repeated .UserCfg.NewUserGuideShareCPP newUserGuideShare = 10;
  for (int i = 0; i < this->newuserguideshare_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->newuserguideshare(i), output);
  }

  // required .UserCfg.XMUserRewardCfg xmUserReward = 11;
  if (has_xmuserreward()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, this->xmuserreward(), output);
  }

  // required .UserCfg.CostDiamondCfg diamondCost = 12;
  if (has_diamondcost()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, this->diamondcost(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:UserCfg.User)
}

::google::protobuf::uint8* User::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:UserCfg.User)
  // required .UserCfg.UserBase user_init = 1;
  if (has_user_init()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->user_init(), target);
  }

  // repeated uint64 user_exp = 2;
  for (int i = 0; i < this->user_exp_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64ToArray(2, this->user_exp(i), target);
  }

  // repeated .UserCfg.Build builds = 3;
  for (int i = 0; i < this->builds_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->builds(i), target);
  }

  // required .CommonGiftConfig.CommonModifyItem initprops = 4;
  if (has_initprops()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->initprops(), target);
  }

  // repeated .UserCfg.CriticalInfo criticalPoint = 5;
  for (int i = 0; i < this->criticalpoint_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->criticalpoint(i), target);
  }

  // required .UserCfg.DailyShareGifts sharegift = 6;
  if (has_sharegift()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        6, this->sharegift(), target);
  }

  // repeated .UserCfg.CoinPurchase coinpurchase = 7;
  for (int i = 0; i < this->coinpurchase_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        7, this->coinpurchase(i), target);
  }

  // repeated .UserCfg.SignInGifts SignIn = 8;
  for (int i = 0; i < this->signin_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        8, this->signin(i), target);
  }

  // required .UserCfg.FairySpeedUp fairySpeedUp = 9;
  if (has_fairyspeedup()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        9, this->fairyspeedup(), target);
  }

  // repeated .UserCfg.NewUserGuideShareCPP newUserGuideShare = 10;
  for (int i = 0; i < this->newuserguideshare_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        10, this->newuserguideshare(i), target);
  }

  // required .UserCfg.XMUserRewardCfg xmUserReward = 11;
  if (has_xmuserreward()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        11, this->xmuserreward(), target);
  }

  // required .UserCfg.CostDiamondCfg diamondCost = 12;
  if (has_diamondcost()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        12, this->diamondcost(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:UserCfg.User)
  return target;
}

int User::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .UserCfg.UserBase user_init = 1;
    if (has_user_init()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->user_init());
    }

    // required .CommonGiftConfig.CommonModifyItem initprops = 4;
    if (has_initprops()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->initprops());
    }

    // required .UserCfg.DailyShareGifts sharegift = 6;
    if (has_sharegift()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->sharegift());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // required .UserCfg.FairySpeedUp fairySpeedUp = 9;
    if (has_fairyspeedup()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->fairyspeedup());
    }

    // required .UserCfg.XMUserRewardCfg xmUserReward = 11;
    if (has_xmuserreward()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->xmuserreward());
    }

    // required .UserCfg.CostDiamondCfg diamondCost = 12;
    if (has_diamondcost()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->diamondcost());
    }

  }
  // repeated uint64 user_exp = 2;
  {
    int data_size = 0;
    for (int i = 0; i < this->user_exp_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt64Size(this->user_exp(i));
    }
    total_size += 1 * this->user_exp_size() + data_size;
  }

  // repeated .UserCfg.Build builds = 3;
  total_size += 1 * this->builds_size();
  for (int i = 0; i < this->builds_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->builds(i));
  }

  // repeated .UserCfg.CriticalInfo criticalPoint = 5;
  total_size += 1 * this->criticalpoint_size();
  for (int i = 0; i < this->criticalpoint_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->criticalpoint(i));
  }

  // repeated .UserCfg.CoinPurchase coinpurchase = 7;
  total_size += 1 * this->coinpurchase_size();
  for (int i = 0; i < this->coinpurchase_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->coinpurchase(i));
  }

  // repeated .UserCfg.SignInGifts SignIn = 8;
  total_size += 1 * this->signin_size();
  for (int i = 0; i < this->signin_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->signin(i));
  }

  // repeated .UserCfg.NewUserGuideShareCPP newUserGuideShare = 10;
  total_size += 1 * this->newuserguideshare_size();
  for (int i = 0; i < this->newuserguideshare_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->newuserguideshare(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void User::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const User* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const User*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void User::MergeFrom(const User& from) {
  GOOGLE_CHECK_NE(&from, this);
  user_exp_.MergeFrom(from.user_exp_);
  builds_.MergeFrom(from.builds_);
  criticalpoint_.MergeFrom(from.criticalpoint_);
  coinpurchase_.MergeFrom(from.coinpurchase_);
  signin_.MergeFrom(from.signin_);
  newuserguideshare_.MergeFrom(from.newuserguideshare_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_user_init()) {
      mutable_user_init()->::UserCfg::UserBase::MergeFrom(from.user_init());
    }
    if (from.has_initprops()) {
      mutable_initprops()->::CommonGiftConfig::CommonModifyItem::MergeFrom(from.initprops());
    }
    if (from.has_sharegift()) {
      mutable_sharegift()->::UserCfg::DailyShareGifts::MergeFrom(from.sharegift());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_fairyspeedup()) {
      mutable_fairyspeedup()->::UserCfg::FairySpeedUp::MergeFrom(from.fairyspeedup());
    }
    if (from.has_xmuserreward()) {
      mutable_xmuserreward()->::UserCfg::XMUserRewardCfg::MergeFrom(from.xmuserreward());
    }
    if (from.has_diamondcost()) {
      mutable_diamondcost()->::UserCfg::CostDiamondCfg::MergeFrom(from.diamondcost());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void User::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void User::CopyFrom(const User& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool User::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000d29) != 0x00000d29) return false;

  if (has_user_init()) {
    if (!this->user_init().IsInitialized()) return false;
  }
  if (!::google::protobuf::internal::AllAreInitialized(this->builds())) return false;
  if (has_initprops()) {
    if (!this->initprops().IsInitialized()) return false;
  }
  if (!::google::protobuf::internal::AllAreInitialized(this->criticalpoint())) return false;
  if (has_sharegift()) {
    if (!this->sharegift().IsInitialized()) return false;
  }
  if (!::google::protobuf::internal::AllAreInitialized(this->coinpurchase())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->signin())) return false;
  if (has_fairyspeedup()) {
    if (!this->fairyspeedup().IsInitialized()) return false;
  }
  if (!::google::protobuf::internal::AllAreInitialized(this->newuserguideshare())) return false;
  if (has_xmuserreward()) {
    if (!this->xmuserreward().IsInitialized()) return false;
  }
  if (has_diamondcost()) {
    if (!this->diamondcost().IsInitialized()) return false;
  }
  return true;
}

void User::Swap(User* other) {
  if (other != this) {
    std::swap(user_init_, other->user_init_);
    user_exp_.Swap(&other->user_exp_);
    builds_.Swap(&other->builds_);
    std::swap(initprops_, other->initprops_);
    criticalpoint_.Swap(&other->criticalpoint_);
    std::swap(sharegift_, other->sharegift_);
    coinpurchase_.Swap(&other->coinpurchase_);
    signin_.Swap(&other->signin_);
    std::swap(fairyspeedup_, other->fairyspeedup_);
    newuserguideshare_.Swap(&other->newuserguideshare_);
    std::swap(xmuserreward_, other->xmuserreward_);
    std::swap(diamondcost_, other->diamondcost_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata User::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = User_descriptor_;
  metadata.reflection = User_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace UserCfg

// @@protoc_insertion_point(global_scope)
