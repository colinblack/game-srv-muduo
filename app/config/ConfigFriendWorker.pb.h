// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ConfigFriendWorker.proto

#ifndef PROTOBUF_ConfigFriendWorker_2eproto__INCLUDED
#define PROTOBUF_ConfigFriendWorker_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace ConfigFriendWorker {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_ConfigFriendWorker_2eproto();
void protobuf_AssignDesc_ConfigFriendWorker_2eproto();
void protobuf_ShutdownFile_ConfigFriendWorker_2eproto();

class FriendWorkerCPP;
class FriendWorkerSpeedUpCPP;
class FriendWorkerCfg;

// ===================================================================

class FriendWorkerCPP : public ::google::protobuf::Message {
 public:
  FriendWorkerCPP();
  virtual ~FriendWorkerCPP();

  FriendWorkerCPP(const FriendWorkerCPP& from);

  inline FriendWorkerCPP& operator=(const FriendWorkerCPP& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FriendWorkerCPP& default_instance();

  void Swap(FriendWorkerCPP* other);

  // implements Message ----------------------------------------------

  FriendWorkerCPP* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FriendWorkerCPP& from);
  void MergeFrom(const FriendWorkerCPP& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 speedup_solt_max = 1;
  inline bool has_speedup_solt_max() const;
  inline void clear_speedup_solt_max();
  static const int kSpeedupSoltMaxFieldNumber = 1;
  inline ::google::protobuf::uint32 speedup_solt_max() const;
  inline void set_speedup_solt_max(::google::protobuf::uint32 value);

  // required uint32 worker_time = 2;
  inline bool has_worker_time() const;
  inline void clear_worker_time();
  static const int kWorkerTimeFieldNumber = 2;
  inline ::google::protobuf::uint32 worker_time() const;
  inline void set_worker_time(::google::protobuf::uint32 value);

  // required uint32 effective_login_days = 3;
  inline bool has_effective_login_days() const;
  inline void clear_effective_login_days();
  static const int kEffectiveLoginDaysFieldNumber = 3;
  inline ::google::protobuf::uint32 effective_login_days() const;
  inline void set_effective_login_days(::google::protobuf::uint32 value);

  // required uint32 reward_friendly_value = 4;
  inline bool has_reward_friendly_value() const;
  inline void clear_reward_friendly_value();
  static const int kRewardFriendlyValueFieldNumber = 4;
  inline ::google::protobuf::uint32 reward_friendly_value() const;
  inline void set_reward_friendly_value(::google::protobuf::uint32 value);

  // required uint32 invite_friend_reward_item_cnt = 5;
  inline bool has_invite_friend_reward_item_cnt() const;
  inline void clear_invite_friend_reward_item_cnt();
  static const int kInviteFriendRewardItemCntFieldNumber = 5;
  inline ::google::protobuf::uint32 invite_friend_reward_item_cnt() const;
  inline void set_invite_friend_reward_item_cnt(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ConfigFriendWorker.FriendWorkerCPP)
 private:
  inline void set_has_speedup_solt_max();
  inline void clear_has_speedup_solt_max();
  inline void set_has_worker_time();
  inline void clear_has_worker_time();
  inline void set_has_effective_login_days();
  inline void clear_has_effective_login_days();
  inline void set_has_reward_friendly_value();
  inline void clear_has_reward_friendly_value();
  inline void set_has_invite_friend_reward_item_cnt();
  inline void clear_has_invite_friend_reward_item_cnt();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 speedup_solt_max_;
  ::google::protobuf::uint32 worker_time_;
  ::google::protobuf::uint32 effective_login_days_;
  ::google::protobuf::uint32 reward_friendly_value_;
  ::google::protobuf::uint32 invite_friend_reward_item_cnt_;
  friend void  protobuf_AddDesc_ConfigFriendWorker_2eproto();
  friend void protobuf_AssignDesc_ConfigFriendWorker_2eproto();
  friend void protobuf_ShutdownFile_ConfigFriendWorker_2eproto();

  void InitAsDefaultInstance();
  static FriendWorkerCPP* default_instance_;
};
// -------------------------------------------------------------------

class FriendWorkerSpeedUpCPP : public ::google::protobuf::Message {
 public:
  FriendWorkerSpeedUpCPP();
  virtual ~FriendWorkerSpeedUpCPP();

  FriendWorkerSpeedUpCPP(const FriendWorkerSpeedUpCPP& from);

  inline FriendWorkerSpeedUpCPP& operator=(const FriendWorkerSpeedUpCPP& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FriendWorkerSpeedUpCPP& default_instance();

  void Swap(FriendWorkerSpeedUpCPP* other);

  // implements Message ----------------------------------------------

  FriendWorkerSpeedUpCPP* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FriendWorkerSpeedUpCPP& from);
  void MergeFrom(const FriendWorkerSpeedUpCPP& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 crops_speed_up_percent = 1;
  inline bool has_crops_speed_up_percent() const;
  inline void clear_crops_speed_up_percent();
  static const int kCropsSpeedUpPercentFieldNumber = 1;
  inline ::google::protobuf::uint32 crops_speed_up_percent() const;
  inline void set_crops_speed_up_percent(::google::protobuf::uint32 value);

  // required uint32 order_reward_percent = 2;
  inline bool has_order_reward_percent() const;
  inline void clear_order_reward_percent();
  static const int kOrderRewardPercentFieldNumber = 2;
  inline ::google::protobuf::uint32 order_reward_percent() const;
  inline void set_order_reward_percent(::google::protobuf::uint32 value);

  // required uint32 animal_speed_up_percent = 3;
  inline bool has_animal_speed_up_percent() const;
  inline void clear_animal_speed_up_percent();
  static const int kAnimalSpeedUpPercentFieldNumber = 3;
  inline ::google::protobuf::uint32 animal_speed_up_percent() const;
  inline void set_animal_speed_up_percent(::google::protobuf::uint32 value);

  // required uint32 product_speed_up_percent = 4;
  inline bool has_product_speed_up_percent() const;
  inline void clear_product_speed_up_percent();
  static const int kProductSpeedUpPercentFieldNumber = 4;
  inline ::google::protobuf::uint32 product_speed_up_percent() const;
  inline void set_product_speed_up_percent(::google::protobuf::uint32 value);

  // required uint32 ship_speed_up_percent = 5;
  inline bool has_ship_speed_up_percent() const;
  inline void clear_ship_speed_up_percent();
  static const int kShipSpeedUpPercentFieldNumber = 5;
  inline ::google::protobuf::uint32 ship_speed_up_percent() const;
  inline void set_ship_speed_up_percent(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ConfigFriendWorker.FriendWorkerSpeedUpCPP)
 private:
  inline void set_has_crops_speed_up_percent();
  inline void clear_has_crops_speed_up_percent();
  inline void set_has_order_reward_percent();
  inline void clear_has_order_reward_percent();
  inline void set_has_animal_speed_up_percent();
  inline void clear_has_animal_speed_up_percent();
  inline void set_has_product_speed_up_percent();
  inline void clear_has_product_speed_up_percent();
  inline void set_has_ship_speed_up_percent();
  inline void clear_has_ship_speed_up_percent();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 crops_speed_up_percent_;
  ::google::protobuf::uint32 order_reward_percent_;
  ::google::protobuf::uint32 animal_speed_up_percent_;
  ::google::protobuf::uint32 product_speed_up_percent_;
  ::google::protobuf::uint32 ship_speed_up_percent_;
  friend void  protobuf_AddDesc_ConfigFriendWorker_2eproto();
  friend void protobuf_AssignDesc_ConfigFriendWorker_2eproto();
  friend void protobuf_ShutdownFile_ConfigFriendWorker_2eproto();

  void InitAsDefaultInstance();
  static FriendWorkerSpeedUpCPP* default_instance_;
};
// -------------------------------------------------------------------

class FriendWorkerCfg : public ::google::protobuf::Message {
 public:
  FriendWorkerCfg();
  virtual ~FriendWorkerCfg();

  FriendWorkerCfg(const FriendWorkerCfg& from);

  inline FriendWorkerCfg& operator=(const FriendWorkerCfg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FriendWorkerCfg& default_instance();

  void Swap(FriendWorkerCfg* other);

  // implements Message ----------------------------------------------

  FriendWorkerCfg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FriendWorkerCfg& from);
  void MergeFrom(const FriendWorkerCfg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .ConfigFriendWorker.FriendWorkerCPP worker = 1;
  inline bool has_worker() const;
  inline void clear_worker();
  static const int kWorkerFieldNumber = 1;
  inline const ::ConfigFriendWorker::FriendWorkerCPP& worker() const;
  inline ::ConfigFriendWorker::FriendWorkerCPP* mutable_worker();
  inline ::ConfigFriendWorker::FriendWorkerCPP* release_worker();
  inline void set_allocated_worker(::ConfigFriendWorker::FriendWorkerCPP* worker);

  // required .ConfigFriendWorker.FriendWorkerSpeedUpCPP worker_speed_up = 2;
  inline bool has_worker_speed_up() const;
  inline void clear_worker_speed_up();
  static const int kWorkerSpeedUpFieldNumber = 2;
  inline const ::ConfigFriendWorker::FriendWorkerSpeedUpCPP& worker_speed_up() const;
  inline ::ConfigFriendWorker::FriendWorkerSpeedUpCPP* mutable_worker_speed_up();
  inline ::ConfigFriendWorker::FriendWorkerSpeedUpCPP* release_worker_speed_up();
  inline void set_allocated_worker_speed_up(::ConfigFriendWorker::FriendWorkerSpeedUpCPP* worker_speed_up);

  // @@protoc_insertion_point(class_scope:ConfigFriendWorker.FriendWorkerCfg)
 private:
  inline void set_has_worker();
  inline void clear_has_worker();
  inline void set_has_worker_speed_up();
  inline void clear_has_worker_speed_up();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::ConfigFriendWorker::FriendWorkerCPP* worker_;
  ::ConfigFriendWorker::FriendWorkerSpeedUpCPP* worker_speed_up_;
  friend void  protobuf_AddDesc_ConfigFriendWorker_2eproto();
  friend void protobuf_AssignDesc_ConfigFriendWorker_2eproto();
  friend void protobuf_ShutdownFile_ConfigFriendWorker_2eproto();

  void InitAsDefaultInstance();
  static FriendWorkerCfg* default_instance_;
};
// ===================================================================


// ===================================================================

// FriendWorkerCPP

// required uint32 speedup_solt_max = 1;
inline bool FriendWorkerCPP::has_speedup_solt_max() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FriendWorkerCPP::set_has_speedup_solt_max() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FriendWorkerCPP::clear_has_speedup_solt_max() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FriendWorkerCPP::clear_speedup_solt_max() {
  speedup_solt_max_ = 0u;
  clear_has_speedup_solt_max();
}
inline ::google::protobuf::uint32 FriendWorkerCPP::speedup_solt_max() const {
  // @@protoc_insertion_point(field_get:ConfigFriendWorker.FriendWorkerCPP.speedup_solt_max)
  return speedup_solt_max_;
}
inline void FriendWorkerCPP::set_speedup_solt_max(::google::protobuf::uint32 value) {
  set_has_speedup_solt_max();
  speedup_solt_max_ = value;
  // @@protoc_insertion_point(field_set:ConfigFriendWorker.FriendWorkerCPP.speedup_solt_max)
}

// required uint32 worker_time = 2;
inline bool FriendWorkerCPP::has_worker_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FriendWorkerCPP::set_has_worker_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FriendWorkerCPP::clear_has_worker_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FriendWorkerCPP::clear_worker_time() {
  worker_time_ = 0u;
  clear_has_worker_time();
}
inline ::google::protobuf::uint32 FriendWorkerCPP::worker_time() const {
  // @@protoc_insertion_point(field_get:ConfigFriendWorker.FriendWorkerCPP.worker_time)
  return worker_time_;
}
inline void FriendWorkerCPP::set_worker_time(::google::protobuf::uint32 value) {
  set_has_worker_time();
  worker_time_ = value;
  // @@protoc_insertion_point(field_set:ConfigFriendWorker.FriendWorkerCPP.worker_time)
}

// required uint32 effective_login_days = 3;
inline bool FriendWorkerCPP::has_effective_login_days() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void FriendWorkerCPP::set_has_effective_login_days() {
  _has_bits_[0] |= 0x00000004u;
}
inline void FriendWorkerCPP::clear_has_effective_login_days() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void FriendWorkerCPP::clear_effective_login_days() {
  effective_login_days_ = 0u;
  clear_has_effective_login_days();
}
inline ::google::protobuf::uint32 FriendWorkerCPP::effective_login_days() const {
  // @@protoc_insertion_point(field_get:ConfigFriendWorker.FriendWorkerCPP.effective_login_days)
  return effective_login_days_;
}
inline void FriendWorkerCPP::set_effective_login_days(::google::protobuf::uint32 value) {
  set_has_effective_login_days();
  effective_login_days_ = value;
  // @@protoc_insertion_point(field_set:ConfigFriendWorker.FriendWorkerCPP.effective_login_days)
}

// required uint32 reward_friendly_value = 4;
inline bool FriendWorkerCPP::has_reward_friendly_value() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void FriendWorkerCPP::set_has_reward_friendly_value() {
  _has_bits_[0] |= 0x00000008u;
}
inline void FriendWorkerCPP::clear_has_reward_friendly_value() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void FriendWorkerCPP::clear_reward_friendly_value() {
  reward_friendly_value_ = 0u;
  clear_has_reward_friendly_value();
}
inline ::google::protobuf::uint32 FriendWorkerCPP::reward_friendly_value() const {
  // @@protoc_insertion_point(field_get:ConfigFriendWorker.FriendWorkerCPP.reward_friendly_value)
  return reward_friendly_value_;
}
inline void FriendWorkerCPP::set_reward_friendly_value(::google::protobuf::uint32 value) {
  set_has_reward_friendly_value();
  reward_friendly_value_ = value;
  // @@protoc_insertion_point(field_set:ConfigFriendWorker.FriendWorkerCPP.reward_friendly_value)
}

// required uint32 invite_friend_reward_item_cnt = 5;
inline bool FriendWorkerCPP::has_invite_friend_reward_item_cnt() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void FriendWorkerCPP::set_has_invite_friend_reward_item_cnt() {
  _has_bits_[0] |= 0x00000010u;
}
inline void FriendWorkerCPP::clear_has_invite_friend_reward_item_cnt() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void FriendWorkerCPP::clear_invite_friend_reward_item_cnt() {
  invite_friend_reward_item_cnt_ = 0u;
  clear_has_invite_friend_reward_item_cnt();
}
inline ::google::protobuf::uint32 FriendWorkerCPP::invite_friend_reward_item_cnt() const {
  // @@protoc_insertion_point(field_get:ConfigFriendWorker.FriendWorkerCPP.invite_friend_reward_item_cnt)
  return invite_friend_reward_item_cnt_;
}
inline void FriendWorkerCPP::set_invite_friend_reward_item_cnt(::google::protobuf::uint32 value) {
  set_has_invite_friend_reward_item_cnt();
  invite_friend_reward_item_cnt_ = value;
  // @@protoc_insertion_point(field_set:ConfigFriendWorker.FriendWorkerCPP.invite_friend_reward_item_cnt)
}

// -------------------------------------------------------------------

// FriendWorkerSpeedUpCPP

// required uint32 crops_speed_up_percent = 1;
inline bool FriendWorkerSpeedUpCPP::has_crops_speed_up_percent() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FriendWorkerSpeedUpCPP::set_has_crops_speed_up_percent() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FriendWorkerSpeedUpCPP::clear_has_crops_speed_up_percent() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FriendWorkerSpeedUpCPP::clear_crops_speed_up_percent() {
  crops_speed_up_percent_ = 0u;
  clear_has_crops_speed_up_percent();
}
inline ::google::protobuf::uint32 FriendWorkerSpeedUpCPP::crops_speed_up_percent() const {
  // @@protoc_insertion_point(field_get:ConfigFriendWorker.FriendWorkerSpeedUpCPP.crops_speed_up_percent)
  return crops_speed_up_percent_;
}
inline void FriendWorkerSpeedUpCPP::set_crops_speed_up_percent(::google::protobuf::uint32 value) {
  set_has_crops_speed_up_percent();
  crops_speed_up_percent_ = value;
  // @@protoc_insertion_point(field_set:ConfigFriendWorker.FriendWorkerSpeedUpCPP.crops_speed_up_percent)
}

// required uint32 order_reward_percent = 2;
inline bool FriendWorkerSpeedUpCPP::has_order_reward_percent() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FriendWorkerSpeedUpCPP::set_has_order_reward_percent() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FriendWorkerSpeedUpCPP::clear_has_order_reward_percent() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FriendWorkerSpeedUpCPP::clear_order_reward_percent() {
  order_reward_percent_ = 0u;
  clear_has_order_reward_percent();
}
inline ::google::protobuf::uint32 FriendWorkerSpeedUpCPP::order_reward_percent() const {
  // @@protoc_insertion_point(field_get:ConfigFriendWorker.FriendWorkerSpeedUpCPP.order_reward_percent)
  return order_reward_percent_;
}
inline void FriendWorkerSpeedUpCPP::set_order_reward_percent(::google::protobuf::uint32 value) {
  set_has_order_reward_percent();
  order_reward_percent_ = value;
  // @@protoc_insertion_point(field_set:ConfigFriendWorker.FriendWorkerSpeedUpCPP.order_reward_percent)
}

// required uint32 animal_speed_up_percent = 3;
inline bool FriendWorkerSpeedUpCPP::has_animal_speed_up_percent() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void FriendWorkerSpeedUpCPP::set_has_animal_speed_up_percent() {
  _has_bits_[0] |= 0x00000004u;
}
inline void FriendWorkerSpeedUpCPP::clear_has_animal_speed_up_percent() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void FriendWorkerSpeedUpCPP::clear_animal_speed_up_percent() {
  animal_speed_up_percent_ = 0u;
  clear_has_animal_speed_up_percent();
}
inline ::google::protobuf::uint32 FriendWorkerSpeedUpCPP::animal_speed_up_percent() const {
  // @@protoc_insertion_point(field_get:ConfigFriendWorker.FriendWorkerSpeedUpCPP.animal_speed_up_percent)
  return animal_speed_up_percent_;
}
inline void FriendWorkerSpeedUpCPP::set_animal_speed_up_percent(::google::protobuf::uint32 value) {
  set_has_animal_speed_up_percent();
  animal_speed_up_percent_ = value;
  // @@protoc_insertion_point(field_set:ConfigFriendWorker.FriendWorkerSpeedUpCPP.animal_speed_up_percent)
}

// required uint32 product_speed_up_percent = 4;
inline bool FriendWorkerSpeedUpCPP::has_product_speed_up_percent() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void FriendWorkerSpeedUpCPP::set_has_product_speed_up_percent() {
  _has_bits_[0] |= 0x00000008u;
}
inline void FriendWorkerSpeedUpCPP::clear_has_product_speed_up_percent() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void FriendWorkerSpeedUpCPP::clear_product_speed_up_percent() {
  product_speed_up_percent_ = 0u;
  clear_has_product_speed_up_percent();
}
inline ::google::protobuf::uint32 FriendWorkerSpeedUpCPP::product_speed_up_percent() const {
  // @@protoc_insertion_point(field_get:ConfigFriendWorker.FriendWorkerSpeedUpCPP.product_speed_up_percent)
  return product_speed_up_percent_;
}
inline void FriendWorkerSpeedUpCPP::set_product_speed_up_percent(::google::protobuf::uint32 value) {
  set_has_product_speed_up_percent();
  product_speed_up_percent_ = value;
  // @@protoc_insertion_point(field_set:ConfigFriendWorker.FriendWorkerSpeedUpCPP.product_speed_up_percent)
}

// required uint32 ship_speed_up_percent = 5;
inline bool FriendWorkerSpeedUpCPP::has_ship_speed_up_percent() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void FriendWorkerSpeedUpCPP::set_has_ship_speed_up_percent() {
  _has_bits_[0] |= 0x00000010u;
}
inline void FriendWorkerSpeedUpCPP::clear_has_ship_speed_up_percent() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void FriendWorkerSpeedUpCPP::clear_ship_speed_up_percent() {
  ship_speed_up_percent_ = 0u;
  clear_has_ship_speed_up_percent();
}
inline ::google::protobuf::uint32 FriendWorkerSpeedUpCPP::ship_speed_up_percent() const {
  // @@protoc_insertion_point(field_get:ConfigFriendWorker.FriendWorkerSpeedUpCPP.ship_speed_up_percent)
  return ship_speed_up_percent_;
}
inline void FriendWorkerSpeedUpCPP::set_ship_speed_up_percent(::google::protobuf::uint32 value) {
  set_has_ship_speed_up_percent();
  ship_speed_up_percent_ = value;
  // @@protoc_insertion_point(field_set:ConfigFriendWorker.FriendWorkerSpeedUpCPP.ship_speed_up_percent)
}

// -------------------------------------------------------------------

// FriendWorkerCfg

// required .ConfigFriendWorker.FriendWorkerCPP worker = 1;
inline bool FriendWorkerCfg::has_worker() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FriendWorkerCfg::set_has_worker() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FriendWorkerCfg::clear_has_worker() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FriendWorkerCfg::clear_worker() {
  if (worker_ != NULL) worker_->::ConfigFriendWorker::FriendWorkerCPP::Clear();
  clear_has_worker();
}
inline const ::ConfigFriendWorker::FriendWorkerCPP& FriendWorkerCfg::worker() const {
  // @@protoc_insertion_point(field_get:ConfigFriendWorker.FriendWorkerCfg.worker)
  return worker_ != NULL ? *worker_ : *default_instance_->worker_;
}
inline ::ConfigFriendWorker::FriendWorkerCPP* FriendWorkerCfg::mutable_worker() {
  set_has_worker();
  if (worker_ == NULL) worker_ = new ::ConfigFriendWorker::FriendWorkerCPP;
  // @@protoc_insertion_point(field_mutable:ConfigFriendWorker.FriendWorkerCfg.worker)
  return worker_;
}
inline ::ConfigFriendWorker::FriendWorkerCPP* FriendWorkerCfg::release_worker() {
  clear_has_worker();
  ::ConfigFriendWorker::FriendWorkerCPP* temp = worker_;
  worker_ = NULL;
  return temp;
}
inline void FriendWorkerCfg::set_allocated_worker(::ConfigFriendWorker::FriendWorkerCPP* worker) {
  delete worker_;
  worker_ = worker;
  if (worker) {
    set_has_worker();
  } else {
    clear_has_worker();
  }
  // @@protoc_insertion_point(field_set_allocated:ConfigFriendWorker.FriendWorkerCfg.worker)
}

// required .ConfigFriendWorker.FriendWorkerSpeedUpCPP worker_speed_up = 2;
inline bool FriendWorkerCfg::has_worker_speed_up() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FriendWorkerCfg::set_has_worker_speed_up() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FriendWorkerCfg::clear_has_worker_speed_up() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FriendWorkerCfg::clear_worker_speed_up() {
  if (worker_speed_up_ != NULL) worker_speed_up_->::ConfigFriendWorker::FriendWorkerSpeedUpCPP::Clear();
  clear_has_worker_speed_up();
}
inline const ::ConfigFriendWorker::FriendWorkerSpeedUpCPP& FriendWorkerCfg::worker_speed_up() const {
  // @@protoc_insertion_point(field_get:ConfigFriendWorker.FriendWorkerCfg.worker_speed_up)
  return worker_speed_up_ != NULL ? *worker_speed_up_ : *default_instance_->worker_speed_up_;
}
inline ::ConfigFriendWorker::FriendWorkerSpeedUpCPP* FriendWorkerCfg::mutable_worker_speed_up() {
  set_has_worker_speed_up();
  if (worker_speed_up_ == NULL) worker_speed_up_ = new ::ConfigFriendWorker::FriendWorkerSpeedUpCPP;
  // @@protoc_insertion_point(field_mutable:ConfigFriendWorker.FriendWorkerCfg.worker_speed_up)
  return worker_speed_up_;
}
inline ::ConfigFriendWorker::FriendWorkerSpeedUpCPP* FriendWorkerCfg::release_worker_speed_up() {
  clear_has_worker_speed_up();
  ::ConfigFriendWorker::FriendWorkerSpeedUpCPP* temp = worker_speed_up_;
  worker_speed_up_ = NULL;
  return temp;
}
inline void FriendWorkerCfg::set_allocated_worker_speed_up(::ConfigFriendWorker::FriendWorkerSpeedUpCPP* worker_speed_up) {
  delete worker_speed_up_;
  worker_speed_up_ = worker_speed_up;
  if (worker_speed_up) {
    set_has_worker_speed_up();
  } else {
    clear_has_worker_speed_up();
  }
  // @@protoc_insertion_point(field_set_allocated:ConfigFriendWorker.FriendWorkerCfg.worker_speed_up)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace ConfigFriendWorker

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_ConfigFriendWorker_2eproto__INCLUDED
