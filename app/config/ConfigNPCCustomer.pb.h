// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ConfigNPCCustomer.proto

#ifndef PROTOBUF_ConfigNPCCustomer_2eproto__INCLUDED
#define PROTOBUF_ConfigNPCCustomer_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace ConfigNPCCustomer {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_ConfigNPCCustomer_2eproto();
void protobuf_AssignDesc_ConfigNPCCustomer_2eproto();
void protobuf_ShutdownFile_ConfigNPCCustomer_2eproto();

class LevleTs;
class NPCCustomerCPP;
class NPCCustomerInfo;

// ===================================================================

class LevleTs : public ::google::protobuf::Message {
 public:
  LevleTs();
  virtual ~LevleTs();

  LevleTs(const LevleTs& from);

  inline LevleTs& operator=(const LevleTs& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LevleTs& default_instance();

  void Swap(LevleTs* other);

  // implements Message ----------------------------------------------

  LevleTs* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LevleTs& from);
  void MergeFrom(const LevleTs& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 level = 1;
  inline int level_size() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 1;
  inline ::google::protobuf::uint32 level(int index) const;
  inline void set_level(int index, ::google::protobuf::uint32 value);
  inline void add_level(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      level() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_level();

  // required uint32 ts = 2;
  inline bool has_ts() const;
  inline void clear_ts();
  static const int kTsFieldNumber = 2;
  inline ::google::protobuf::uint32 ts() const;
  inline void set_ts(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ConfigNPCCustomer.LevleTs)
 private:
  inline void set_has_ts();
  inline void clear_has_ts();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > level_;
  ::google::protobuf::uint32 ts_;
  friend void  protobuf_AddDesc_ConfigNPCCustomer_2eproto();
  friend void protobuf_AssignDesc_ConfigNPCCustomer_2eproto();
  friend void protobuf_ShutdownFile_ConfigNPCCustomer_2eproto();

  void InitAsDefaultInstance();
  static LevleTs* default_instance_;
};
// -------------------------------------------------------------------

class NPCCustomerCPP : public ::google::protobuf::Message {
 public:
  NPCCustomerCPP();
  virtual ~NPCCustomerCPP();

  NPCCustomerCPP(const NPCCustomerCPP& from);

  inline NPCCustomerCPP& operator=(const NPCCustomerCPP& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NPCCustomerCPP& default_instance();

  void Swap(NPCCustomerCPP* other);

  // implements Message ----------------------------------------------

  NPCCustomerCPP* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NPCCustomerCPP& from);
  void MergeFrom(const NPCCustomerCPP& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 unlocklevel = 1;
  inline bool has_unlocklevel() const;
  inline void clear_unlocklevel();
  static const int kUnlocklevelFieldNumber = 1;
  inline ::google::protobuf::uint32 unlocklevel() const;
  inline void set_unlocklevel(::google::protobuf::uint32 value);

  // required uint32 npcMaxCnt = 2;
  inline bool has_npcmaxcnt() const;
  inline void clear_npcmaxcnt();
  static const int kNpcMaxCntFieldNumber = 2;
  inline ::google::protobuf::uint32 npcmaxcnt() const;
  inline void set_npcmaxcnt(::google::protobuf::uint32 value);

  // required uint32 npcComeMaxCnt = 3;
  inline bool has_npccomemaxcnt() const;
  inline void clear_npccomemaxcnt();
  static const int kNpcComeMaxCntFieldNumber = 3;
  inline ::google::protobuf::uint32 npccomemaxcnt() const;
  inline void set_npccomemaxcnt(::google::protobuf::uint32 value);

  // repeated uint32 npcItemCntPercnt = 4;
  inline int npcitemcntpercnt_size() const;
  inline void clear_npcitemcntpercnt();
  static const int kNpcItemCntPercntFieldNumber = 4;
  inline ::google::protobuf::uint32 npcitemcntpercnt(int index) const;
  inline void set_npcitemcntpercnt(int index, ::google::protobuf::uint32 value);
  inline void add_npcitemcntpercnt(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      npcitemcntpercnt() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_npcitemcntpercnt();

  // required float priceBase = 5;
  inline bool has_pricebase() const;
  inline void clear_pricebase();
  static const int kPriceBaseFieldNumber = 5;
  inline float pricebase() const;
  inline void set_pricebase(float value);

  // required uint32 exp = 6;
  inline bool has_exp() const;
  inline void clear_exp();
  static const int kExpFieldNumber = 6;
  inline ::google::protobuf::uint32 exp() const;
  inline void set_exp(::google::protobuf::uint32 value);

  // repeated uint32 notIncludeItem = 7;
  inline int notincludeitem_size() const;
  inline void clear_notincludeitem();
  static const int kNotIncludeItemFieldNumber = 7;
  inline ::google::protobuf::uint32 notincludeitem(int index) const;
  inline void set_notincludeitem(int index, ::google::protobuf::uint32 value);
  inline void add_notincludeitem(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      notincludeitem() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_notincludeitem();

  // repeated .ConfigNPCCustomer.LevleTs levelts = 8;
  inline int levelts_size() const;
  inline void clear_levelts();
  static const int kLeveltsFieldNumber = 8;
  inline const ::ConfigNPCCustomer::LevleTs& levelts(int index) const;
  inline ::ConfigNPCCustomer::LevleTs* mutable_levelts(int index);
  inline ::ConfigNPCCustomer::LevleTs* add_levelts();
  inline const ::google::protobuf::RepeatedPtrField< ::ConfigNPCCustomer::LevleTs >&
      levelts() const;
  inline ::google::protobuf::RepeatedPtrField< ::ConfigNPCCustomer::LevleTs >*
      mutable_levelts();

  // @@protoc_insertion_point(class_scope:ConfigNPCCustomer.NPCCustomerCPP)
 private:
  inline void set_has_unlocklevel();
  inline void clear_has_unlocklevel();
  inline void set_has_npcmaxcnt();
  inline void clear_has_npcmaxcnt();
  inline void set_has_npccomemaxcnt();
  inline void clear_has_npccomemaxcnt();
  inline void set_has_pricebase();
  inline void clear_has_pricebase();
  inline void set_has_exp();
  inline void clear_has_exp();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 unlocklevel_;
  ::google::protobuf::uint32 npcmaxcnt_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > npcitemcntpercnt_;
  ::google::protobuf::uint32 npccomemaxcnt_;
  float pricebase_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > notincludeitem_;
  ::google::protobuf::RepeatedPtrField< ::ConfigNPCCustomer::LevleTs > levelts_;
  ::google::protobuf::uint32 exp_;
  friend void  protobuf_AddDesc_ConfigNPCCustomer_2eproto();
  friend void protobuf_AssignDesc_ConfigNPCCustomer_2eproto();
  friend void protobuf_ShutdownFile_ConfigNPCCustomer_2eproto();

  void InitAsDefaultInstance();
  static NPCCustomerCPP* default_instance_;
};
// -------------------------------------------------------------------

class NPCCustomerInfo : public ::google::protobuf::Message {
 public:
  NPCCustomerInfo();
  virtual ~NPCCustomerInfo();

  NPCCustomerInfo(const NPCCustomerInfo& from);

  inline NPCCustomerInfo& operator=(const NPCCustomerInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NPCCustomerInfo& default_instance();

  void Swap(NPCCustomerInfo* other);

  // implements Message ----------------------------------------------

  NPCCustomerInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NPCCustomerInfo& from);
  void MergeFrom(const NPCCustomerInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .ConfigNPCCustomer.NPCCustomerCPP npccustomer = 1;
  inline bool has_npccustomer() const;
  inline void clear_npccustomer();
  static const int kNpccustomerFieldNumber = 1;
  inline const ::ConfigNPCCustomer::NPCCustomerCPP& npccustomer() const;
  inline ::ConfigNPCCustomer::NPCCustomerCPP* mutable_npccustomer();
  inline ::ConfigNPCCustomer::NPCCustomerCPP* release_npccustomer();
  inline void set_allocated_npccustomer(::ConfigNPCCustomer::NPCCustomerCPP* npccustomer);

  // @@protoc_insertion_point(class_scope:ConfigNPCCustomer.NPCCustomerInfo)
 private:
  inline void set_has_npccustomer();
  inline void clear_has_npccustomer();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::ConfigNPCCustomer::NPCCustomerCPP* npccustomer_;
  friend void  protobuf_AddDesc_ConfigNPCCustomer_2eproto();
  friend void protobuf_AssignDesc_ConfigNPCCustomer_2eproto();
  friend void protobuf_ShutdownFile_ConfigNPCCustomer_2eproto();

  void InitAsDefaultInstance();
  static NPCCustomerInfo* default_instance_;
};
// ===================================================================


// ===================================================================

// LevleTs

// repeated uint32 level = 1;
inline int LevleTs::level_size() const {
  return level_.size();
}
inline void LevleTs::clear_level() {
  level_.Clear();
}
inline ::google::protobuf::uint32 LevleTs::level(int index) const {
  // @@protoc_insertion_point(field_get:ConfigNPCCustomer.LevleTs.level)
  return level_.Get(index);
}
inline void LevleTs::set_level(int index, ::google::protobuf::uint32 value) {
  level_.Set(index, value);
  // @@protoc_insertion_point(field_set:ConfigNPCCustomer.LevleTs.level)
}
inline void LevleTs::add_level(::google::protobuf::uint32 value) {
  level_.Add(value);
  // @@protoc_insertion_point(field_add:ConfigNPCCustomer.LevleTs.level)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
LevleTs::level() const {
  // @@protoc_insertion_point(field_list:ConfigNPCCustomer.LevleTs.level)
  return level_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
LevleTs::mutable_level() {
  // @@protoc_insertion_point(field_mutable_list:ConfigNPCCustomer.LevleTs.level)
  return &level_;
}

// required uint32 ts = 2;
inline bool LevleTs::has_ts() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LevleTs::set_has_ts() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LevleTs::clear_has_ts() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LevleTs::clear_ts() {
  ts_ = 0u;
  clear_has_ts();
}
inline ::google::protobuf::uint32 LevleTs::ts() const {
  // @@protoc_insertion_point(field_get:ConfigNPCCustomer.LevleTs.ts)
  return ts_;
}
inline void LevleTs::set_ts(::google::protobuf::uint32 value) {
  set_has_ts();
  ts_ = value;
  // @@protoc_insertion_point(field_set:ConfigNPCCustomer.LevleTs.ts)
}

// -------------------------------------------------------------------

// NPCCustomerCPP

// required uint32 unlocklevel = 1;
inline bool NPCCustomerCPP::has_unlocklevel() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NPCCustomerCPP::set_has_unlocklevel() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NPCCustomerCPP::clear_has_unlocklevel() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NPCCustomerCPP::clear_unlocklevel() {
  unlocklevel_ = 0u;
  clear_has_unlocklevel();
}
inline ::google::protobuf::uint32 NPCCustomerCPP::unlocklevel() const {
  // @@protoc_insertion_point(field_get:ConfigNPCCustomer.NPCCustomerCPP.unlocklevel)
  return unlocklevel_;
}
inline void NPCCustomerCPP::set_unlocklevel(::google::protobuf::uint32 value) {
  set_has_unlocklevel();
  unlocklevel_ = value;
  // @@protoc_insertion_point(field_set:ConfigNPCCustomer.NPCCustomerCPP.unlocklevel)
}

// required uint32 npcMaxCnt = 2;
inline bool NPCCustomerCPP::has_npcmaxcnt() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void NPCCustomerCPP::set_has_npcmaxcnt() {
  _has_bits_[0] |= 0x00000002u;
}
inline void NPCCustomerCPP::clear_has_npcmaxcnt() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void NPCCustomerCPP::clear_npcmaxcnt() {
  npcmaxcnt_ = 0u;
  clear_has_npcmaxcnt();
}
inline ::google::protobuf::uint32 NPCCustomerCPP::npcmaxcnt() const {
  // @@protoc_insertion_point(field_get:ConfigNPCCustomer.NPCCustomerCPP.npcMaxCnt)
  return npcmaxcnt_;
}
inline void NPCCustomerCPP::set_npcmaxcnt(::google::protobuf::uint32 value) {
  set_has_npcmaxcnt();
  npcmaxcnt_ = value;
  // @@protoc_insertion_point(field_set:ConfigNPCCustomer.NPCCustomerCPP.npcMaxCnt)
}

// required uint32 npcComeMaxCnt = 3;
inline bool NPCCustomerCPP::has_npccomemaxcnt() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void NPCCustomerCPP::set_has_npccomemaxcnt() {
  _has_bits_[0] |= 0x00000004u;
}
inline void NPCCustomerCPP::clear_has_npccomemaxcnt() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void NPCCustomerCPP::clear_npccomemaxcnt() {
  npccomemaxcnt_ = 0u;
  clear_has_npccomemaxcnt();
}
inline ::google::protobuf::uint32 NPCCustomerCPP::npccomemaxcnt() const {
  // @@protoc_insertion_point(field_get:ConfigNPCCustomer.NPCCustomerCPP.npcComeMaxCnt)
  return npccomemaxcnt_;
}
inline void NPCCustomerCPP::set_npccomemaxcnt(::google::protobuf::uint32 value) {
  set_has_npccomemaxcnt();
  npccomemaxcnt_ = value;
  // @@protoc_insertion_point(field_set:ConfigNPCCustomer.NPCCustomerCPP.npcComeMaxCnt)
}

// repeated uint32 npcItemCntPercnt = 4;
inline int NPCCustomerCPP::npcitemcntpercnt_size() const {
  return npcitemcntpercnt_.size();
}
inline void NPCCustomerCPP::clear_npcitemcntpercnt() {
  npcitemcntpercnt_.Clear();
}
inline ::google::protobuf::uint32 NPCCustomerCPP::npcitemcntpercnt(int index) const {
  // @@protoc_insertion_point(field_get:ConfigNPCCustomer.NPCCustomerCPP.npcItemCntPercnt)
  return npcitemcntpercnt_.Get(index);
}
inline void NPCCustomerCPP::set_npcitemcntpercnt(int index, ::google::protobuf::uint32 value) {
  npcitemcntpercnt_.Set(index, value);
  // @@protoc_insertion_point(field_set:ConfigNPCCustomer.NPCCustomerCPP.npcItemCntPercnt)
}
inline void NPCCustomerCPP::add_npcitemcntpercnt(::google::protobuf::uint32 value) {
  npcitemcntpercnt_.Add(value);
  // @@protoc_insertion_point(field_add:ConfigNPCCustomer.NPCCustomerCPP.npcItemCntPercnt)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
NPCCustomerCPP::npcitemcntpercnt() const {
  // @@protoc_insertion_point(field_list:ConfigNPCCustomer.NPCCustomerCPP.npcItemCntPercnt)
  return npcitemcntpercnt_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
NPCCustomerCPP::mutable_npcitemcntpercnt() {
  // @@protoc_insertion_point(field_mutable_list:ConfigNPCCustomer.NPCCustomerCPP.npcItemCntPercnt)
  return &npcitemcntpercnt_;
}

// required float priceBase = 5;
inline bool NPCCustomerCPP::has_pricebase() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void NPCCustomerCPP::set_has_pricebase() {
  _has_bits_[0] |= 0x00000010u;
}
inline void NPCCustomerCPP::clear_has_pricebase() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void NPCCustomerCPP::clear_pricebase() {
  pricebase_ = 0;
  clear_has_pricebase();
}
inline float NPCCustomerCPP::pricebase() const {
  // @@protoc_insertion_point(field_get:ConfigNPCCustomer.NPCCustomerCPP.priceBase)
  return pricebase_;
}
inline void NPCCustomerCPP::set_pricebase(float value) {
  set_has_pricebase();
  pricebase_ = value;
  // @@protoc_insertion_point(field_set:ConfigNPCCustomer.NPCCustomerCPP.priceBase)
}

// required uint32 exp = 6;
inline bool NPCCustomerCPP::has_exp() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void NPCCustomerCPP::set_has_exp() {
  _has_bits_[0] |= 0x00000020u;
}
inline void NPCCustomerCPP::clear_has_exp() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void NPCCustomerCPP::clear_exp() {
  exp_ = 0u;
  clear_has_exp();
}
inline ::google::protobuf::uint32 NPCCustomerCPP::exp() const {
  // @@protoc_insertion_point(field_get:ConfigNPCCustomer.NPCCustomerCPP.exp)
  return exp_;
}
inline void NPCCustomerCPP::set_exp(::google::protobuf::uint32 value) {
  set_has_exp();
  exp_ = value;
  // @@protoc_insertion_point(field_set:ConfigNPCCustomer.NPCCustomerCPP.exp)
}

// repeated uint32 notIncludeItem = 7;
inline int NPCCustomerCPP::notincludeitem_size() const {
  return notincludeitem_.size();
}
inline void NPCCustomerCPP::clear_notincludeitem() {
  notincludeitem_.Clear();
}
inline ::google::protobuf::uint32 NPCCustomerCPP::notincludeitem(int index) const {
  // @@protoc_insertion_point(field_get:ConfigNPCCustomer.NPCCustomerCPP.notIncludeItem)
  return notincludeitem_.Get(index);
}
inline void NPCCustomerCPP::set_notincludeitem(int index, ::google::protobuf::uint32 value) {
  notincludeitem_.Set(index, value);
  // @@protoc_insertion_point(field_set:ConfigNPCCustomer.NPCCustomerCPP.notIncludeItem)
}
inline void NPCCustomerCPP::add_notincludeitem(::google::protobuf::uint32 value) {
  notincludeitem_.Add(value);
  // @@protoc_insertion_point(field_add:ConfigNPCCustomer.NPCCustomerCPP.notIncludeItem)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
NPCCustomerCPP::notincludeitem() const {
  // @@protoc_insertion_point(field_list:ConfigNPCCustomer.NPCCustomerCPP.notIncludeItem)
  return notincludeitem_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
NPCCustomerCPP::mutable_notincludeitem() {
  // @@protoc_insertion_point(field_mutable_list:ConfigNPCCustomer.NPCCustomerCPP.notIncludeItem)
  return &notincludeitem_;
}

// repeated .ConfigNPCCustomer.LevleTs levelts = 8;
inline int NPCCustomerCPP::levelts_size() const {
  return levelts_.size();
}
inline void NPCCustomerCPP::clear_levelts() {
  levelts_.Clear();
}
inline const ::ConfigNPCCustomer::LevleTs& NPCCustomerCPP::levelts(int index) const {
  // @@protoc_insertion_point(field_get:ConfigNPCCustomer.NPCCustomerCPP.levelts)
  return levelts_.Get(index);
}
inline ::ConfigNPCCustomer::LevleTs* NPCCustomerCPP::mutable_levelts(int index) {
  // @@protoc_insertion_point(field_mutable:ConfigNPCCustomer.NPCCustomerCPP.levelts)
  return levelts_.Mutable(index);
}
inline ::ConfigNPCCustomer::LevleTs* NPCCustomerCPP::add_levelts() {
  // @@protoc_insertion_point(field_add:ConfigNPCCustomer.NPCCustomerCPP.levelts)
  return levelts_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ConfigNPCCustomer::LevleTs >&
NPCCustomerCPP::levelts() const {
  // @@protoc_insertion_point(field_list:ConfigNPCCustomer.NPCCustomerCPP.levelts)
  return levelts_;
}
inline ::google::protobuf::RepeatedPtrField< ::ConfigNPCCustomer::LevleTs >*
NPCCustomerCPP::mutable_levelts() {
  // @@protoc_insertion_point(field_mutable_list:ConfigNPCCustomer.NPCCustomerCPP.levelts)
  return &levelts_;
}

// -------------------------------------------------------------------

// NPCCustomerInfo

// required .ConfigNPCCustomer.NPCCustomerCPP npccustomer = 1;
inline bool NPCCustomerInfo::has_npccustomer() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NPCCustomerInfo::set_has_npccustomer() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NPCCustomerInfo::clear_has_npccustomer() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NPCCustomerInfo::clear_npccustomer() {
  if (npccustomer_ != NULL) npccustomer_->::ConfigNPCCustomer::NPCCustomerCPP::Clear();
  clear_has_npccustomer();
}
inline const ::ConfigNPCCustomer::NPCCustomerCPP& NPCCustomerInfo::npccustomer() const {
  // @@protoc_insertion_point(field_get:ConfigNPCCustomer.NPCCustomerInfo.npccustomer)
  return npccustomer_ != NULL ? *npccustomer_ : *default_instance_->npccustomer_;
}
inline ::ConfigNPCCustomer::NPCCustomerCPP* NPCCustomerInfo::mutable_npccustomer() {
  set_has_npccustomer();
  if (npccustomer_ == NULL) npccustomer_ = new ::ConfigNPCCustomer::NPCCustomerCPP;
  // @@protoc_insertion_point(field_mutable:ConfigNPCCustomer.NPCCustomerInfo.npccustomer)
  return npccustomer_;
}
inline ::ConfigNPCCustomer::NPCCustomerCPP* NPCCustomerInfo::release_npccustomer() {
  clear_has_npccustomer();
  ::ConfigNPCCustomer::NPCCustomerCPP* temp = npccustomer_;
  npccustomer_ = NULL;
  return temp;
}
inline void NPCCustomerInfo::set_allocated_npccustomer(::ConfigNPCCustomer::NPCCustomerCPP* npccustomer) {
  delete npccustomer_;
  npccustomer_ = npccustomer;
  if (npccustomer) {
    set_has_npccustomer();
  } else {
    clear_has_npccustomer();
  }
  // @@protoc_insertion_point(field_set_allocated:ConfigNPCCustomer.NPCCustomerInfo.npccustomer)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace ConfigNPCCustomer

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_ConfigNPCCustomer_2eproto__INCLUDED
