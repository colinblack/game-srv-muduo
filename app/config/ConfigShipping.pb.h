// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ConfigShipping.proto

#ifndef PROTOBUF_ConfigShipping_2eproto__INCLUDED
#define PROTOBUF_ConfigShipping_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "CommonGiftConfig.pb.h"
// @@protoc_insertion_point(includes)

namespace ConfigShipping {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_ConfigShipping_2eproto();
void protobuf_AssignDesc_ConfigShipping_2eproto();
void protobuf_ShutdownFile_ConfigShipping_2eproto();

class BoxItems;
class RewardCoefficient;
class Item;
class LevelItem;
class ShippingItem;
class FullBoxPointCPP;
class Shipping;

// ===================================================================

class BoxItems : public ::google::protobuf::Message {
 public:
  BoxItems();
  virtual ~BoxItems();

  BoxItems(const BoxItems& from);

  inline BoxItems& operator=(const BoxItems& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BoxItems& default_instance();

  void Swap(BoxItems* other);

  // implements Message ----------------------------------------------

  BoxItems* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BoxItems& from);
  void MergeFrom(const BoxItems& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 badge_cond = 1;
  inline bool has_badge_cond() const;
  inline void clear_badge_cond();
  static const int kBadgeCondFieldNumber = 1;
  inline ::google::protobuf::uint32 badge_cond() const;
  inline void set_badge_cond(::google::protobuf::uint32 value);

  // repeated uint32 num_range = 2;
  inline int num_range_size() const;
  inline void clear_num_range();
  static const int kNumRangeFieldNumber = 2;
  inline ::google::protobuf::uint32 num_range(int index) const;
  inline void set_num_range(int index, ::google::protobuf::uint32 value);
  inline void add_num_range(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      num_range() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_num_range();

  // required uint32 view_ad_cnt = 3;
  inline bool has_view_ad_cnt() const;
  inline void clear_view_ad_cnt();
  static const int kViewAdCntFieldNumber = 3;
  inline ::google::protobuf::uint32 view_ad_cnt() const;
  inline void set_view_ad_cnt(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ConfigShipping.BoxItems)
 private:
  inline void set_has_badge_cond();
  inline void clear_has_badge_cond();
  inline void set_has_view_ad_cnt();
  inline void clear_has_view_ad_cnt();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > num_range_;
  ::google::protobuf::uint32 badge_cond_;
  ::google::protobuf::uint32 view_ad_cnt_;
  friend void  protobuf_AddDesc_ConfigShipping_2eproto();
  friend void protobuf_AssignDesc_ConfigShipping_2eproto();
  friend void protobuf_ShutdownFile_ConfigShipping_2eproto();

  void InitAsDefaultInstance();
  static BoxItems* default_instance_;
};
// -------------------------------------------------------------------

class RewardCoefficient : public ::google::protobuf::Message {
 public:
  RewardCoefficient();
  virtual ~RewardCoefficient();

  RewardCoefficient(const RewardCoefficient& from);

  inline RewardCoefficient& operator=(const RewardCoefficient& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RewardCoefficient& default_instance();

  void Swap(RewardCoefficient* other);

  // implements Message ----------------------------------------------

  RewardCoefficient* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RewardCoefficient& from);
  void MergeFrom(const RewardCoefficient& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required double multiple = 1;
  inline bool has_multiple() const;
  inline void clear_multiple();
  static const int kMultipleFieldNumber = 1;
  inline double multiple() const;
  inline void set_multiple(double value);

  // repeated uint32 randomk_range = 2;
  inline int randomk_range_size() const;
  inline void clear_randomk_range();
  static const int kRandomkRangeFieldNumber = 2;
  inline ::google::protobuf::uint32 randomk_range(int index) const;
  inline void set_randomk_range(int index, ::google::protobuf::uint32 value);
  inline void add_randomk_range(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      randomk_range() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_randomk_range();

  // @@protoc_insertion_point(class_scope:ConfigShipping.RewardCoefficient)
 private:
  inline void set_has_multiple();
  inline void clear_has_multiple();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  double multiple_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > randomk_range_;
  friend void  protobuf_AddDesc_ConfigShipping_2eproto();
  friend void protobuf_AssignDesc_ConfigShipping_2eproto();
  friend void protobuf_ShutdownFile_ConfigShipping_2eproto();

  void InitAsDefaultInstance();
  static RewardCoefficient* default_instance_;
};
// -------------------------------------------------------------------

class Item : public ::google::protobuf::Message {
 public:
  Item();
  virtual ~Item();

  Item(const Item& from);

  inline Item& operator=(const Item& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Item& default_instance();

  void Swap(Item* other);

  // implements Message ----------------------------------------------

  Item* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Item& from);
  void MergeFrom(const Item& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // repeated uint32 count = 2;
  inline int count_size() const;
  inline void clear_count();
  static const int kCountFieldNumber = 2;
  inline ::google::protobuf::uint32 count(int index) const;
  inline void set_count(int index, ::google::protobuf::uint32 value);
  inline void add_count(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      count() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_count();

  // @@protoc_insertion_point(class_scope:ConfigShipping.Item)
 private:
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > count_;
  ::google::protobuf::uint32 id_;
  friend void  protobuf_AddDesc_ConfigShipping_2eproto();
  friend void protobuf_AssignDesc_ConfigShipping_2eproto();
  friend void protobuf_ShutdownFile_ConfigShipping_2eproto();

  void InitAsDefaultInstance();
  static Item* default_instance_;
};
// -------------------------------------------------------------------

class LevelItem : public ::google::protobuf::Message {
 public:
  LevelItem();
  virtual ~LevelItem();

  LevelItem(const LevelItem& from);

  inline LevelItem& operator=(const LevelItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LevelItem& default_instance();

  void Swap(LevelItem* other);

  // implements Message ----------------------------------------------

  LevelItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LevelItem& from);
  void MergeFrom(const LevelItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 level = 1;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 1;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);

  // repeated .ConfigShipping.Item items = 2;
  inline int items_size() const;
  inline void clear_items();
  static const int kItemsFieldNumber = 2;
  inline const ::ConfigShipping::Item& items(int index) const;
  inline ::ConfigShipping::Item* mutable_items(int index);
  inline ::ConfigShipping::Item* add_items();
  inline const ::google::protobuf::RepeatedPtrField< ::ConfigShipping::Item >&
      items() const;
  inline ::google::protobuf::RepeatedPtrField< ::ConfigShipping::Item >*
      mutable_items();

  // @@protoc_insertion_point(class_scope:ConfigShipping.LevelItem)
 private:
  inline void set_has_level();
  inline void clear_has_level();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::ConfigShipping::Item > items_;
  ::google::protobuf::uint32 level_;
  friend void  protobuf_AddDesc_ConfigShipping_2eproto();
  friend void protobuf_AssignDesc_ConfigShipping_2eproto();
  friend void protobuf_ShutdownFile_ConfigShipping_2eproto();

  void InitAsDefaultInstance();
  static LevelItem* default_instance_;
};
// -------------------------------------------------------------------

class ShippingItem : public ::google::protobuf::Message {
 public:
  ShippingItem();
  virtual ~ShippingItem();

  ShippingItem(const ShippingItem& from);

  inline ShippingItem& operator=(const ShippingItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ShippingItem& default_instance();

  void Swap(ShippingItem* other);

  // implements Message ----------------------------------------------

  ShippingItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ShippingItem& from);
  void MergeFrom(const ShippingItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 unlock_level = 1;
  inline bool has_unlock_level() const;
  inline void clear_unlock_level();
  static const int kUnlockLevelFieldNumber = 1;
  inline ::google::protobuf::uint32 unlock_level() const;
  inline void set_unlock_level(::google::protobuf::uint32 value);

  // required uint32 unlock_time = 2;
  inline bool has_unlock_time() const;
  inline void clear_unlock_time();
  static const int kUnlockTimeFieldNumber = 2;
  inline ::google::protobuf::uint32 unlock_time() const;
  inline void set_unlock_time(::google::protobuf::uint32 value);

  // required uint32 unlock_speed_price = 3;
  inline bool has_unlock_speed_price() const;
  inline void clear_unlock_speed_price();
  static const int kUnlockSpeedPriceFieldNumber = 3;
  inline ::google::protobuf::uint32 unlock_speed_price() const;
  inline void set_unlock_speed_price(::google::protobuf::uint32 value);

  // required .CommonGiftConfig.CommonModifyItem unlock_cost = 4;
  inline bool has_unlock_cost() const;
  inline void clear_unlock_cost();
  static const int kUnlockCostFieldNumber = 4;
  inline const ::CommonGiftConfig::CommonModifyItem& unlock_cost() const;
  inline ::CommonGiftConfig::CommonModifyItem* mutable_unlock_cost();
  inline ::CommonGiftConfig::CommonModifyItem* release_unlock_cost();
  inline void set_allocated_unlock_cost(::CommonGiftConfig::CommonModifyItem* unlock_cost);

  // required uint32 prepare_time = 5;
  inline bool has_prepare_time() const;
  inline void clear_prepare_time();
  static const int kPrepareTimeFieldNumber = 5;
  inline ::google::protobuf::uint32 prepare_time() const;
  inline void set_prepare_time(::google::protobuf::uint32 value);

  // required uint32 speed_prepare_price = 6;
  inline bool has_speed_prepare_price() const;
  inline void clear_speed_prepare_price();
  static const int kSpeedPreparePriceFieldNumber = 6;
  inline ::google::protobuf::uint32 speed_prepare_price() const;
  inline void set_speed_prepare_price(::google::protobuf::uint32 value);

  // required uint32 pack_time = 7;
  inline bool has_pack_time() const;
  inline void clear_pack_time();
  static const int kPackTimeFieldNumber = 7;
  inline ::google::protobuf::uint32 pack_time() const;
  inline void set_pack_time(::google::protobuf::uint32 value);

  // required uint32 item_kind_num = 8;
  inline bool has_item_kind_num() const;
  inline void clear_item_kind_num();
  static const int kItemKindNumFieldNumber = 8;
  inline ::google::protobuf::uint32 item_kind_num() const;
  inline void set_item_kind_num(::google::protobuf::uint32 value);

  // repeated .ConfigShipping.BoxItems boxes = 9;
  inline int boxes_size() const;
  inline void clear_boxes();
  static const int kBoxesFieldNumber = 9;
  inline const ::ConfigShipping::BoxItems& boxes(int index) const;
  inline ::ConfigShipping::BoxItems* mutable_boxes(int index);
  inline ::ConfigShipping::BoxItems* add_boxes();
  inline const ::google::protobuf::RepeatedPtrField< ::ConfigShipping::BoxItems >&
      boxes() const;
  inline ::google::protobuf::RepeatedPtrField< ::ConfigShipping::BoxItems >*
      mutable_boxes();

  // required .ConfigShipping.RewardCoefficient reward_coefficient = 10;
  inline bool has_reward_coefficient() const;
  inline void clear_reward_coefficient();
  static const int kRewardCoefficientFieldNumber = 10;
  inline const ::ConfigShipping::RewardCoefficient& reward_coefficient() const;
  inline ::ConfigShipping::RewardCoefficient* mutable_reward_coefficient();
  inline ::ConfigShipping::RewardCoefficient* release_reward_coefficient();
  inline void set_allocated_reward_coefficient(::ConfigShipping::RewardCoefficient* reward_coefficient);

  // required uint32 aid_extra_reward = 11;
  inline bool has_aid_extra_reward() const;
  inline void clear_aid_extra_reward();
  static const int kAidExtraRewardFieldNumber = 11;
  inline ::google::protobuf::uint32 aid_extra_reward() const;
  inline void set_aid_extra_reward(::google::protobuf::uint32 value);

  // required uint32 badge_init = 12;
  inline bool has_badge_init() const;
  inline void clear_badge_init();
  static const int kBadgeInitFieldNumber = 12;
  inline ::google::protobuf::uint32 badge_init() const;
  inline void set_badge_init(::google::protobuf::uint32 value);

  // required uint32 public_aid_limit = 13;
  inline bool has_public_aid_limit() const;
  inline void clear_public_aid_limit();
  static const int kPublicAidLimitFieldNumber = 13;
  inline ::google::protobuf::uint32 public_aid_limit() const;
  inline void set_public_aid_limit(::google::protobuf::uint32 value);

  // required uint32 commercial_aid_limit = 14;
  inline bool has_commercial_aid_limit() const;
  inline void clear_commercial_aid_limit();
  static const int kCommercialAidLimitFieldNumber = 14;
  inline ::google::protobuf::uint32 commercial_aid_limit() const;
  inline void set_commercial_aid_limit(::google::protobuf::uint32 value);

  // repeated .ConfigShipping.LevelItem level_items = 15;
  inline int level_items_size() const;
  inline void clear_level_items();
  static const int kLevelItemsFieldNumber = 15;
  inline const ::ConfigShipping::LevelItem& level_items(int index) const;
  inline ::ConfigShipping::LevelItem* mutable_level_items(int index);
  inline ::ConfigShipping::LevelItem* add_level_items();
  inline const ::google::protobuf::RepeatedPtrField< ::ConfigShipping::LevelItem >&
      level_items() const;
  inline ::google::protobuf::RepeatedPtrField< ::ConfigShipping::LevelItem >*
      mutable_level_items();

  // @@protoc_insertion_point(class_scope:ConfigShipping.ShippingItem)
 private:
  inline void set_has_unlock_level();
  inline void clear_has_unlock_level();
  inline void set_has_unlock_time();
  inline void clear_has_unlock_time();
  inline void set_has_unlock_speed_price();
  inline void clear_has_unlock_speed_price();
  inline void set_has_unlock_cost();
  inline void clear_has_unlock_cost();
  inline void set_has_prepare_time();
  inline void clear_has_prepare_time();
  inline void set_has_speed_prepare_price();
  inline void clear_has_speed_prepare_price();
  inline void set_has_pack_time();
  inline void clear_has_pack_time();
  inline void set_has_item_kind_num();
  inline void clear_has_item_kind_num();
  inline void set_has_reward_coefficient();
  inline void clear_has_reward_coefficient();
  inline void set_has_aid_extra_reward();
  inline void clear_has_aid_extra_reward();
  inline void set_has_badge_init();
  inline void clear_has_badge_init();
  inline void set_has_public_aid_limit();
  inline void clear_has_public_aid_limit();
  inline void set_has_commercial_aid_limit();
  inline void clear_has_commercial_aid_limit();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 unlock_level_;
  ::google::protobuf::uint32 unlock_time_;
  ::CommonGiftConfig::CommonModifyItem* unlock_cost_;
  ::google::protobuf::uint32 unlock_speed_price_;
  ::google::protobuf::uint32 prepare_time_;
  ::google::protobuf::uint32 speed_prepare_price_;
  ::google::protobuf::uint32 pack_time_;
  ::google::protobuf::RepeatedPtrField< ::ConfigShipping::BoxItems > boxes_;
  ::google::protobuf::uint32 item_kind_num_;
  ::google::protobuf::uint32 aid_extra_reward_;
  ::ConfigShipping::RewardCoefficient* reward_coefficient_;
  ::google::protobuf::uint32 badge_init_;
  ::google::protobuf::uint32 public_aid_limit_;
  ::google::protobuf::RepeatedPtrField< ::ConfigShipping::LevelItem > level_items_;
  ::google::protobuf::uint32 commercial_aid_limit_;
  friend void  protobuf_AddDesc_ConfigShipping_2eproto();
  friend void protobuf_AssignDesc_ConfigShipping_2eproto();
  friend void protobuf_ShutdownFile_ConfigShipping_2eproto();

  void InitAsDefaultInstance();
  static ShippingItem* default_instance_;
};
// -------------------------------------------------------------------

class FullBoxPointCPP : public ::google::protobuf::Message {
 public:
  FullBoxPointCPP();
  virtual ~FullBoxPointCPP();

  FullBoxPointCPP(const FullBoxPointCPP& from);

  inline FullBoxPointCPP& operator=(const FullBoxPointCPP& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FullBoxPointCPP& default_instance();

  void Swap(FullBoxPointCPP* other);

  // implements Message ----------------------------------------------

  FullBoxPointCPP* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FullBoxPointCPP& from);
  void MergeFrom(const FullBoxPointCPP& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 weight = 1;
  inline bool has_weight() const;
  inline void clear_weight();
  static const int kWeightFieldNumber = 1;
  inline ::google::protobuf::uint32 weight() const;
  inline void set_weight(::google::protobuf::uint32 value);

  // required .CommonGiftConfig.CommonModifyItem reward = 2;
  inline bool has_reward() const;
  inline void clear_reward();
  static const int kRewardFieldNumber = 2;
  inline const ::CommonGiftConfig::CommonModifyItem& reward() const;
  inline ::CommonGiftConfig::CommonModifyItem* mutable_reward();
  inline ::CommonGiftConfig::CommonModifyItem* release_reward();
  inline void set_allocated_reward(::CommonGiftConfig::CommonModifyItem* reward);

  // @@protoc_insertion_point(class_scope:ConfigShipping.FullBoxPointCPP)
 private:
  inline void set_has_weight();
  inline void clear_has_weight();
  inline void set_has_reward();
  inline void clear_has_reward();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::CommonGiftConfig::CommonModifyItem* reward_;
  ::google::protobuf::uint32 weight_;
  friend void  protobuf_AddDesc_ConfigShipping_2eproto();
  friend void protobuf_AssignDesc_ConfigShipping_2eproto();
  friend void protobuf_ShutdownFile_ConfigShipping_2eproto();

  void InitAsDefaultInstance();
  static FullBoxPointCPP* default_instance_;
};
// -------------------------------------------------------------------

class Shipping : public ::google::protobuf::Message {
 public:
  Shipping();
  virtual ~Shipping();

  Shipping(const Shipping& from);

  inline Shipping& operator=(const Shipping& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Shipping& default_instance();

  void Swap(Shipping* other);

  // implements Message ----------------------------------------------

  Shipping* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Shipping& from);
  void MergeFrom(const Shipping& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .ConfigShipping.ShippingItem shipping = 1;
  inline bool has_shipping() const;
  inline void clear_shipping();
  static const int kShippingFieldNumber = 1;
  inline const ::ConfigShipping::ShippingItem& shipping() const;
  inline ::ConfigShipping::ShippingItem* mutable_shipping();
  inline ::ConfigShipping::ShippingItem* release_shipping();
  inline void set_allocated_shipping(::ConfigShipping::ShippingItem* shipping);

  // repeated .ConfigShipping.FullBoxPointCPP point = 2;
  inline int point_size() const;
  inline void clear_point();
  static const int kPointFieldNumber = 2;
  inline const ::ConfigShipping::FullBoxPointCPP& point(int index) const;
  inline ::ConfigShipping::FullBoxPointCPP* mutable_point(int index);
  inline ::ConfigShipping::FullBoxPointCPP* add_point();
  inline const ::google::protobuf::RepeatedPtrField< ::ConfigShipping::FullBoxPointCPP >&
      point() const;
  inline ::google::protobuf::RepeatedPtrField< ::ConfigShipping::FullBoxPointCPP >*
      mutable_point();

  // @@protoc_insertion_point(class_scope:ConfigShipping.Shipping)
 private:
  inline void set_has_shipping();
  inline void clear_has_shipping();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::ConfigShipping::ShippingItem* shipping_;
  ::google::protobuf::RepeatedPtrField< ::ConfigShipping::FullBoxPointCPP > point_;
  friend void  protobuf_AddDesc_ConfigShipping_2eproto();
  friend void protobuf_AssignDesc_ConfigShipping_2eproto();
  friend void protobuf_ShutdownFile_ConfigShipping_2eproto();

  void InitAsDefaultInstance();
  static Shipping* default_instance_;
};
// ===================================================================


// ===================================================================

// BoxItems

// required uint32 badge_cond = 1;
inline bool BoxItems::has_badge_cond() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BoxItems::set_has_badge_cond() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BoxItems::clear_has_badge_cond() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BoxItems::clear_badge_cond() {
  badge_cond_ = 0u;
  clear_has_badge_cond();
}
inline ::google::protobuf::uint32 BoxItems::badge_cond() const {
  // @@protoc_insertion_point(field_get:ConfigShipping.BoxItems.badge_cond)
  return badge_cond_;
}
inline void BoxItems::set_badge_cond(::google::protobuf::uint32 value) {
  set_has_badge_cond();
  badge_cond_ = value;
  // @@protoc_insertion_point(field_set:ConfigShipping.BoxItems.badge_cond)
}

// repeated uint32 num_range = 2;
inline int BoxItems::num_range_size() const {
  return num_range_.size();
}
inline void BoxItems::clear_num_range() {
  num_range_.Clear();
}
inline ::google::protobuf::uint32 BoxItems::num_range(int index) const {
  // @@protoc_insertion_point(field_get:ConfigShipping.BoxItems.num_range)
  return num_range_.Get(index);
}
inline void BoxItems::set_num_range(int index, ::google::protobuf::uint32 value) {
  num_range_.Set(index, value);
  // @@protoc_insertion_point(field_set:ConfigShipping.BoxItems.num_range)
}
inline void BoxItems::add_num_range(::google::protobuf::uint32 value) {
  num_range_.Add(value);
  // @@protoc_insertion_point(field_add:ConfigShipping.BoxItems.num_range)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
BoxItems::num_range() const {
  // @@protoc_insertion_point(field_list:ConfigShipping.BoxItems.num_range)
  return num_range_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
BoxItems::mutable_num_range() {
  // @@protoc_insertion_point(field_mutable_list:ConfigShipping.BoxItems.num_range)
  return &num_range_;
}

// required uint32 view_ad_cnt = 3;
inline bool BoxItems::has_view_ad_cnt() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BoxItems::set_has_view_ad_cnt() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BoxItems::clear_has_view_ad_cnt() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BoxItems::clear_view_ad_cnt() {
  view_ad_cnt_ = 0u;
  clear_has_view_ad_cnt();
}
inline ::google::protobuf::uint32 BoxItems::view_ad_cnt() const {
  // @@protoc_insertion_point(field_get:ConfigShipping.BoxItems.view_ad_cnt)
  return view_ad_cnt_;
}
inline void BoxItems::set_view_ad_cnt(::google::protobuf::uint32 value) {
  set_has_view_ad_cnt();
  view_ad_cnt_ = value;
  // @@protoc_insertion_point(field_set:ConfigShipping.BoxItems.view_ad_cnt)
}

// -------------------------------------------------------------------

// RewardCoefficient

// required double multiple = 1;
inline bool RewardCoefficient::has_multiple() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RewardCoefficient::set_has_multiple() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RewardCoefficient::clear_has_multiple() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RewardCoefficient::clear_multiple() {
  multiple_ = 0;
  clear_has_multiple();
}
inline double RewardCoefficient::multiple() const {
  // @@protoc_insertion_point(field_get:ConfigShipping.RewardCoefficient.multiple)
  return multiple_;
}
inline void RewardCoefficient::set_multiple(double value) {
  set_has_multiple();
  multiple_ = value;
  // @@protoc_insertion_point(field_set:ConfigShipping.RewardCoefficient.multiple)
}

// repeated uint32 randomk_range = 2;
inline int RewardCoefficient::randomk_range_size() const {
  return randomk_range_.size();
}
inline void RewardCoefficient::clear_randomk_range() {
  randomk_range_.Clear();
}
inline ::google::protobuf::uint32 RewardCoefficient::randomk_range(int index) const {
  // @@protoc_insertion_point(field_get:ConfigShipping.RewardCoefficient.randomk_range)
  return randomk_range_.Get(index);
}
inline void RewardCoefficient::set_randomk_range(int index, ::google::protobuf::uint32 value) {
  randomk_range_.Set(index, value);
  // @@protoc_insertion_point(field_set:ConfigShipping.RewardCoefficient.randomk_range)
}
inline void RewardCoefficient::add_randomk_range(::google::protobuf::uint32 value) {
  randomk_range_.Add(value);
  // @@protoc_insertion_point(field_add:ConfigShipping.RewardCoefficient.randomk_range)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
RewardCoefficient::randomk_range() const {
  // @@protoc_insertion_point(field_list:ConfigShipping.RewardCoefficient.randomk_range)
  return randomk_range_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
RewardCoefficient::mutable_randomk_range() {
  // @@protoc_insertion_point(field_mutable_list:ConfigShipping.RewardCoefficient.randomk_range)
  return &randomk_range_;
}

// -------------------------------------------------------------------

// Item

// required uint32 id = 1;
inline bool Item::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Item::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Item::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Item::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 Item::id() const {
  // @@protoc_insertion_point(field_get:ConfigShipping.Item.id)
  return id_;
}
inline void Item::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:ConfigShipping.Item.id)
}

// repeated uint32 count = 2;
inline int Item::count_size() const {
  return count_.size();
}
inline void Item::clear_count() {
  count_.Clear();
}
inline ::google::protobuf::uint32 Item::count(int index) const {
  // @@protoc_insertion_point(field_get:ConfigShipping.Item.count)
  return count_.Get(index);
}
inline void Item::set_count(int index, ::google::protobuf::uint32 value) {
  count_.Set(index, value);
  // @@protoc_insertion_point(field_set:ConfigShipping.Item.count)
}
inline void Item::add_count(::google::protobuf::uint32 value) {
  count_.Add(value);
  // @@protoc_insertion_point(field_add:ConfigShipping.Item.count)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
Item::count() const {
  // @@protoc_insertion_point(field_list:ConfigShipping.Item.count)
  return count_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
Item::mutable_count() {
  // @@protoc_insertion_point(field_mutable_list:ConfigShipping.Item.count)
  return &count_;
}

// -------------------------------------------------------------------

// LevelItem

// required uint32 level = 1;
inline bool LevelItem::has_level() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LevelItem::set_has_level() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LevelItem::clear_has_level() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LevelItem::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 LevelItem::level() const {
  // @@protoc_insertion_point(field_get:ConfigShipping.LevelItem.level)
  return level_;
}
inline void LevelItem::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:ConfigShipping.LevelItem.level)
}

// repeated .ConfigShipping.Item items = 2;
inline int LevelItem::items_size() const {
  return items_.size();
}
inline void LevelItem::clear_items() {
  items_.Clear();
}
inline const ::ConfigShipping::Item& LevelItem::items(int index) const {
  // @@protoc_insertion_point(field_get:ConfigShipping.LevelItem.items)
  return items_.Get(index);
}
inline ::ConfigShipping::Item* LevelItem::mutable_items(int index) {
  // @@protoc_insertion_point(field_mutable:ConfigShipping.LevelItem.items)
  return items_.Mutable(index);
}
inline ::ConfigShipping::Item* LevelItem::add_items() {
  // @@protoc_insertion_point(field_add:ConfigShipping.LevelItem.items)
  return items_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ConfigShipping::Item >&
LevelItem::items() const {
  // @@protoc_insertion_point(field_list:ConfigShipping.LevelItem.items)
  return items_;
}
inline ::google::protobuf::RepeatedPtrField< ::ConfigShipping::Item >*
LevelItem::mutable_items() {
  // @@protoc_insertion_point(field_mutable_list:ConfigShipping.LevelItem.items)
  return &items_;
}

// -------------------------------------------------------------------

// ShippingItem

// required uint32 unlock_level = 1;
inline bool ShippingItem::has_unlock_level() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ShippingItem::set_has_unlock_level() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ShippingItem::clear_has_unlock_level() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ShippingItem::clear_unlock_level() {
  unlock_level_ = 0u;
  clear_has_unlock_level();
}
inline ::google::protobuf::uint32 ShippingItem::unlock_level() const {
  // @@protoc_insertion_point(field_get:ConfigShipping.ShippingItem.unlock_level)
  return unlock_level_;
}
inline void ShippingItem::set_unlock_level(::google::protobuf::uint32 value) {
  set_has_unlock_level();
  unlock_level_ = value;
  // @@protoc_insertion_point(field_set:ConfigShipping.ShippingItem.unlock_level)
}

// required uint32 unlock_time = 2;
inline bool ShippingItem::has_unlock_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ShippingItem::set_has_unlock_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ShippingItem::clear_has_unlock_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ShippingItem::clear_unlock_time() {
  unlock_time_ = 0u;
  clear_has_unlock_time();
}
inline ::google::protobuf::uint32 ShippingItem::unlock_time() const {
  // @@protoc_insertion_point(field_get:ConfigShipping.ShippingItem.unlock_time)
  return unlock_time_;
}
inline void ShippingItem::set_unlock_time(::google::protobuf::uint32 value) {
  set_has_unlock_time();
  unlock_time_ = value;
  // @@protoc_insertion_point(field_set:ConfigShipping.ShippingItem.unlock_time)
}

// required uint32 unlock_speed_price = 3;
inline bool ShippingItem::has_unlock_speed_price() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ShippingItem::set_has_unlock_speed_price() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ShippingItem::clear_has_unlock_speed_price() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ShippingItem::clear_unlock_speed_price() {
  unlock_speed_price_ = 0u;
  clear_has_unlock_speed_price();
}
inline ::google::protobuf::uint32 ShippingItem::unlock_speed_price() const {
  // @@protoc_insertion_point(field_get:ConfigShipping.ShippingItem.unlock_speed_price)
  return unlock_speed_price_;
}
inline void ShippingItem::set_unlock_speed_price(::google::protobuf::uint32 value) {
  set_has_unlock_speed_price();
  unlock_speed_price_ = value;
  // @@protoc_insertion_point(field_set:ConfigShipping.ShippingItem.unlock_speed_price)
}

// required .CommonGiftConfig.CommonModifyItem unlock_cost = 4;
inline bool ShippingItem::has_unlock_cost() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ShippingItem::set_has_unlock_cost() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ShippingItem::clear_has_unlock_cost() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ShippingItem::clear_unlock_cost() {
  if (unlock_cost_ != NULL) unlock_cost_->::CommonGiftConfig::CommonModifyItem::Clear();
  clear_has_unlock_cost();
}
inline const ::CommonGiftConfig::CommonModifyItem& ShippingItem::unlock_cost() const {
  // @@protoc_insertion_point(field_get:ConfigShipping.ShippingItem.unlock_cost)
  return unlock_cost_ != NULL ? *unlock_cost_ : *default_instance_->unlock_cost_;
}
inline ::CommonGiftConfig::CommonModifyItem* ShippingItem::mutable_unlock_cost() {
  set_has_unlock_cost();
  if (unlock_cost_ == NULL) unlock_cost_ = new ::CommonGiftConfig::CommonModifyItem;
  // @@protoc_insertion_point(field_mutable:ConfigShipping.ShippingItem.unlock_cost)
  return unlock_cost_;
}
inline ::CommonGiftConfig::CommonModifyItem* ShippingItem::release_unlock_cost() {
  clear_has_unlock_cost();
  ::CommonGiftConfig::CommonModifyItem* temp = unlock_cost_;
  unlock_cost_ = NULL;
  return temp;
}
inline void ShippingItem::set_allocated_unlock_cost(::CommonGiftConfig::CommonModifyItem* unlock_cost) {
  delete unlock_cost_;
  unlock_cost_ = unlock_cost;
  if (unlock_cost) {
    set_has_unlock_cost();
  } else {
    clear_has_unlock_cost();
  }
  // @@protoc_insertion_point(field_set_allocated:ConfigShipping.ShippingItem.unlock_cost)
}

// required uint32 prepare_time = 5;
inline bool ShippingItem::has_prepare_time() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ShippingItem::set_has_prepare_time() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ShippingItem::clear_has_prepare_time() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ShippingItem::clear_prepare_time() {
  prepare_time_ = 0u;
  clear_has_prepare_time();
}
inline ::google::protobuf::uint32 ShippingItem::prepare_time() const {
  // @@protoc_insertion_point(field_get:ConfigShipping.ShippingItem.prepare_time)
  return prepare_time_;
}
inline void ShippingItem::set_prepare_time(::google::protobuf::uint32 value) {
  set_has_prepare_time();
  prepare_time_ = value;
  // @@protoc_insertion_point(field_set:ConfigShipping.ShippingItem.prepare_time)
}

// required uint32 speed_prepare_price = 6;
inline bool ShippingItem::has_speed_prepare_price() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ShippingItem::set_has_speed_prepare_price() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ShippingItem::clear_has_speed_prepare_price() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ShippingItem::clear_speed_prepare_price() {
  speed_prepare_price_ = 0u;
  clear_has_speed_prepare_price();
}
inline ::google::protobuf::uint32 ShippingItem::speed_prepare_price() const {
  // @@protoc_insertion_point(field_get:ConfigShipping.ShippingItem.speed_prepare_price)
  return speed_prepare_price_;
}
inline void ShippingItem::set_speed_prepare_price(::google::protobuf::uint32 value) {
  set_has_speed_prepare_price();
  speed_prepare_price_ = value;
  // @@protoc_insertion_point(field_set:ConfigShipping.ShippingItem.speed_prepare_price)
}

// required uint32 pack_time = 7;
inline bool ShippingItem::has_pack_time() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void ShippingItem::set_has_pack_time() {
  _has_bits_[0] |= 0x00000040u;
}
inline void ShippingItem::clear_has_pack_time() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void ShippingItem::clear_pack_time() {
  pack_time_ = 0u;
  clear_has_pack_time();
}
inline ::google::protobuf::uint32 ShippingItem::pack_time() const {
  // @@protoc_insertion_point(field_get:ConfigShipping.ShippingItem.pack_time)
  return pack_time_;
}
inline void ShippingItem::set_pack_time(::google::protobuf::uint32 value) {
  set_has_pack_time();
  pack_time_ = value;
  // @@protoc_insertion_point(field_set:ConfigShipping.ShippingItem.pack_time)
}

// required uint32 item_kind_num = 8;
inline bool ShippingItem::has_item_kind_num() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void ShippingItem::set_has_item_kind_num() {
  _has_bits_[0] |= 0x00000080u;
}
inline void ShippingItem::clear_has_item_kind_num() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void ShippingItem::clear_item_kind_num() {
  item_kind_num_ = 0u;
  clear_has_item_kind_num();
}
inline ::google::protobuf::uint32 ShippingItem::item_kind_num() const {
  // @@protoc_insertion_point(field_get:ConfigShipping.ShippingItem.item_kind_num)
  return item_kind_num_;
}
inline void ShippingItem::set_item_kind_num(::google::protobuf::uint32 value) {
  set_has_item_kind_num();
  item_kind_num_ = value;
  // @@protoc_insertion_point(field_set:ConfigShipping.ShippingItem.item_kind_num)
}

// repeated .ConfigShipping.BoxItems boxes = 9;
inline int ShippingItem::boxes_size() const {
  return boxes_.size();
}
inline void ShippingItem::clear_boxes() {
  boxes_.Clear();
}
inline const ::ConfigShipping::BoxItems& ShippingItem::boxes(int index) const {
  // @@protoc_insertion_point(field_get:ConfigShipping.ShippingItem.boxes)
  return boxes_.Get(index);
}
inline ::ConfigShipping::BoxItems* ShippingItem::mutable_boxes(int index) {
  // @@protoc_insertion_point(field_mutable:ConfigShipping.ShippingItem.boxes)
  return boxes_.Mutable(index);
}
inline ::ConfigShipping::BoxItems* ShippingItem::add_boxes() {
  // @@protoc_insertion_point(field_add:ConfigShipping.ShippingItem.boxes)
  return boxes_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ConfigShipping::BoxItems >&
ShippingItem::boxes() const {
  // @@protoc_insertion_point(field_list:ConfigShipping.ShippingItem.boxes)
  return boxes_;
}
inline ::google::protobuf::RepeatedPtrField< ::ConfigShipping::BoxItems >*
ShippingItem::mutable_boxes() {
  // @@protoc_insertion_point(field_mutable_list:ConfigShipping.ShippingItem.boxes)
  return &boxes_;
}

// required .ConfigShipping.RewardCoefficient reward_coefficient = 10;
inline bool ShippingItem::has_reward_coefficient() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void ShippingItem::set_has_reward_coefficient() {
  _has_bits_[0] |= 0x00000200u;
}
inline void ShippingItem::clear_has_reward_coefficient() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void ShippingItem::clear_reward_coefficient() {
  if (reward_coefficient_ != NULL) reward_coefficient_->::ConfigShipping::RewardCoefficient::Clear();
  clear_has_reward_coefficient();
}
inline const ::ConfigShipping::RewardCoefficient& ShippingItem::reward_coefficient() const {
  // @@protoc_insertion_point(field_get:ConfigShipping.ShippingItem.reward_coefficient)
  return reward_coefficient_ != NULL ? *reward_coefficient_ : *default_instance_->reward_coefficient_;
}
inline ::ConfigShipping::RewardCoefficient* ShippingItem::mutable_reward_coefficient() {
  set_has_reward_coefficient();
  if (reward_coefficient_ == NULL) reward_coefficient_ = new ::ConfigShipping::RewardCoefficient;
  // @@protoc_insertion_point(field_mutable:ConfigShipping.ShippingItem.reward_coefficient)
  return reward_coefficient_;
}
inline ::ConfigShipping::RewardCoefficient* ShippingItem::release_reward_coefficient() {
  clear_has_reward_coefficient();
  ::ConfigShipping::RewardCoefficient* temp = reward_coefficient_;
  reward_coefficient_ = NULL;
  return temp;
}
inline void ShippingItem::set_allocated_reward_coefficient(::ConfigShipping::RewardCoefficient* reward_coefficient) {
  delete reward_coefficient_;
  reward_coefficient_ = reward_coefficient;
  if (reward_coefficient) {
    set_has_reward_coefficient();
  } else {
    clear_has_reward_coefficient();
  }
  // @@protoc_insertion_point(field_set_allocated:ConfigShipping.ShippingItem.reward_coefficient)
}

// required uint32 aid_extra_reward = 11;
inline bool ShippingItem::has_aid_extra_reward() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void ShippingItem::set_has_aid_extra_reward() {
  _has_bits_[0] |= 0x00000400u;
}
inline void ShippingItem::clear_has_aid_extra_reward() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void ShippingItem::clear_aid_extra_reward() {
  aid_extra_reward_ = 0u;
  clear_has_aid_extra_reward();
}
inline ::google::protobuf::uint32 ShippingItem::aid_extra_reward() const {
  // @@protoc_insertion_point(field_get:ConfigShipping.ShippingItem.aid_extra_reward)
  return aid_extra_reward_;
}
inline void ShippingItem::set_aid_extra_reward(::google::protobuf::uint32 value) {
  set_has_aid_extra_reward();
  aid_extra_reward_ = value;
  // @@protoc_insertion_point(field_set:ConfigShipping.ShippingItem.aid_extra_reward)
}

// required uint32 badge_init = 12;
inline bool ShippingItem::has_badge_init() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void ShippingItem::set_has_badge_init() {
  _has_bits_[0] |= 0x00000800u;
}
inline void ShippingItem::clear_has_badge_init() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void ShippingItem::clear_badge_init() {
  badge_init_ = 0u;
  clear_has_badge_init();
}
inline ::google::protobuf::uint32 ShippingItem::badge_init() const {
  // @@protoc_insertion_point(field_get:ConfigShipping.ShippingItem.badge_init)
  return badge_init_;
}
inline void ShippingItem::set_badge_init(::google::protobuf::uint32 value) {
  set_has_badge_init();
  badge_init_ = value;
  // @@protoc_insertion_point(field_set:ConfigShipping.ShippingItem.badge_init)
}

// required uint32 public_aid_limit = 13;
inline bool ShippingItem::has_public_aid_limit() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void ShippingItem::set_has_public_aid_limit() {
  _has_bits_[0] |= 0x00001000u;
}
inline void ShippingItem::clear_has_public_aid_limit() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void ShippingItem::clear_public_aid_limit() {
  public_aid_limit_ = 0u;
  clear_has_public_aid_limit();
}
inline ::google::protobuf::uint32 ShippingItem::public_aid_limit() const {
  // @@protoc_insertion_point(field_get:ConfigShipping.ShippingItem.public_aid_limit)
  return public_aid_limit_;
}
inline void ShippingItem::set_public_aid_limit(::google::protobuf::uint32 value) {
  set_has_public_aid_limit();
  public_aid_limit_ = value;
  // @@protoc_insertion_point(field_set:ConfigShipping.ShippingItem.public_aid_limit)
}

// required uint32 commercial_aid_limit = 14;
inline bool ShippingItem::has_commercial_aid_limit() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void ShippingItem::set_has_commercial_aid_limit() {
  _has_bits_[0] |= 0x00002000u;
}
inline void ShippingItem::clear_has_commercial_aid_limit() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void ShippingItem::clear_commercial_aid_limit() {
  commercial_aid_limit_ = 0u;
  clear_has_commercial_aid_limit();
}
inline ::google::protobuf::uint32 ShippingItem::commercial_aid_limit() const {
  // @@protoc_insertion_point(field_get:ConfigShipping.ShippingItem.commercial_aid_limit)
  return commercial_aid_limit_;
}
inline void ShippingItem::set_commercial_aid_limit(::google::protobuf::uint32 value) {
  set_has_commercial_aid_limit();
  commercial_aid_limit_ = value;
  // @@protoc_insertion_point(field_set:ConfigShipping.ShippingItem.commercial_aid_limit)
}

// repeated .ConfigShipping.LevelItem level_items = 15;
inline int ShippingItem::level_items_size() const {
  return level_items_.size();
}
inline void ShippingItem::clear_level_items() {
  level_items_.Clear();
}
inline const ::ConfigShipping::LevelItem& ShippingItem::level_items(int index) const {
  // @@protoc_insertion_point(field_get:ConfigShipping.ShippingItem.level_items)
  return level_items_.Get(index);
}
inline ::ConfigShipping::LevelItem* ShippingItem::mutable_level_items(int index) {
  // @@protoc_insertion_point(field_mutable:ConfigShipping.ShippingItem.level_items)
  return level_items_.Mutable(index);
}
inline ::ConfigShipping::LevelItem* ShippingItem::add_level_items() {
  // @@protoc_insertion_point(field_add:ConfigShipping.ShippingItem.level_items)
  return level_items_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ConfigShipping::LevelItem >&
ShippingItem::level_items() const {
  // @@protoc_insertion_point(field_list:ConfigShipping.ShippingItem.level_items)
  return level_items_;
}
inline ::google::protobuf::RepeatedPtrField< ::ConfigShipping::LevelItem >*
ShippingItem::mutable_level_items() {
  // @@protoc_insertion_point(field_mutable_list:ConfigShipping.ShippingItem.level_items)
  return &level_items_;
}

// -------------------------------------------------------------------

// FullBoxPointCPP

// required uint32 weight = 1;
inline bool FullBoxPointCPP::has_weight() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FullBoxPointCPP::set_has_weight() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FullBoxPointCPP::clear_has_weight() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FullBoxPointCPP::clear_weight() {
  weight_ = 0u;
  clear_has_weight();
}
inline ::google::protobuf::uint32 FullBoxPointCPP::weight() const {
  // @@protoc_insertion_point(field_get:ConfigShipping.FullBoxPointCPP.weight)
  return weight_;
}
inline void FullBoxPointCPP::set_weight(::google::protobuf::uint32 value) {
  set_has_weight();
  weight_ = value;
  // @@protoc_insertion_point(field_set:ConfigShipping.FullBoxPointCPP.weight)
}

// required .CommonGiftConfig.CommonModifyItem reward = 2;
inline bool FullBoxPointCPP::has_reward() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FullBoxPointCPP::set_has_reward() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FullBoxPointCPP::clear_has_reward() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FullBoxPointCPP::clear_reward() {
  if (reward_ != NULL) reward_->::CommonGiftConfig::CommonModifyItem::Clear();
  clear_has_reward();
}
inline const ::CommonGiftConfig::CommonModifyItem& FullBoxPointCPP::reward() const {
  // @@protoc_insertion_point(field_get:ConfigShipping.FullBoxPointCPP.reward)
  return reward_ != NULL ? *reward_ : *default_instance_->reward_;
}
inline ::CommonGiftConfig::CommonModifyItem* FullBoxPointCPP::mutable_reward() {
  set_has_reward();
  if (reward_ == NULL) reward_ = new ::CommonGiftConfig::CommonModifyItem;
  // @@protoc_insertion_point(field_mutable:ConfigShipping.FullBoxPointCPP.reward)
  return reward_;
}
inline ::CommonGiftConfig::CommonModifyItem* FullBoxPointCPP::release_reward() {
  clear_has_reward();
  ::CommonGiftConfig::CommonModifyItem* temp = reward_;
  reward_ = NULL;
  return temp;
}
inline void FullBoxPointCPP::set_allocated_reward(::CommonGiftConfig::CommonModifyItem* reward) {
  delete reward_;
  reward_ = reward;
  if (reward) {
    set_has_reward();
  } else {
    clear_has_reward();
  }
  // @@protoc_insertion_point(field_set_allocated:ConfigShipping.FullBoxPointCPP.reward)
}

// -------------------------------------------------------------------

// Shipping

// required .ConfigShipping.ShippingItem shipping = 1;
inline bool Shipping::has_shipping() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Shipping::set_has_shipping() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Shipping::clear_has_shipping() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Shipping::clear_shipping() {
  if (shipping_ != NULL) shipping_->::ConfigShipping::ShippingItem::Clear();
  clear_has_shipping();
}
inline const ::ConfigShipping::ShippingItem& Shipping::shipping() const {
  // @@protoc_insertion_point(field_get:ConfigShipping.Shipping.shipping)
  return shipping_ != NULL ? *shipping_ : *default_instance_->shipping_;
}
inline ::ConfigShipping::ShippingItem* Shipping::mutable_shipping() {
  set_has_shipping();
  if (shipping_ == NULL) shipping_ = new ::ConfigShipping::ShippingItem;
  // @@protoc_insertion_point(field_mutable:ConfigShipping.Shipping.shipping)
  return shipping_;
}
inline ::ConfigShipping::ShippingItem* Shipping::release_shipping() {
  clear_has_shipping();
  ::ConfigShipping::ShippingItem* temp = shipping_;
  shipping_ = NULL;
  return temp;
}
inline void Shipping::set_allocated_shipping(::ConfigShipping::ShippingItem* shipping) {
  delete shipping_;
  shipping_ = shipping;
  if (shipping) {
    set_has_shipping();
  } else {
    clear_has_shipping();
  }
  // @@protoc_insertion_point(field_set_allocated:ConfigShipping.Shipping.shipping)
}

// repeated .ConfigShipping.FullBoxPointCPP point = 2;
inline int Shipping::point_size() const {
  return point_.size();
}
inline void Shipping::clear_point() {
  point_.Clear();
}
inline const ::ConfigShipping::FullBoxPointCPP& Shipping::point(int index) const {
  // @@protoc_insertion_point(field_get:ConfigShipping.Shipping.point)
  return point_.Get(index);
}
inline ::ConfigShipping::FullBoxPointCPP* Shipping::mutable_point(int index) {
  // @@protoc_insertion_point(field_mutable:ConfigShipping.Shipping.point)
  return point_.Mutable(index);
}
inline ::ConfigShipping::FullBoxPointCPP* Shipping::add_point() {
  // @@protoc_insertion_point(field_add:ConfigShipping.Shipping.point)
  return point_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ConfigShipping::FullBoxPointCPP >&
Shipping::point() const {
  // @@protoc_insertion_point(field_list:ConfigShipping.Shipping.point)
  return point_;
}
inline ::google::protobuf::RepeatedPtrField< ::ConfigShipping::FullBoxPointCPP >*
Shipping::mutable_point() {
  // @@protoc_insertion_point(field_mutable_list:ConfigShipping.Shipping.point)
  return &point_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace ConfigShipping

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_ConfigShipping_2eproto__INCLUDED
