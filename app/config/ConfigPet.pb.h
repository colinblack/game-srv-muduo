// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ConfigPet.proto

#ifndef PROTOBUF_ConfigPet_2eproto__INCLUDED
#define PROTOBUF_ConfigPet_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "CommonGiftConfig.pb.h"
// @@protoc_insertion_point(includes)

namespace ConfigPet {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_ConfigPet_2eproto();
void protobuf_AssignDesc_ConfigPet_2eproto();
void protobuf_ShutdownFile_ConfigPet_2eproto();

class PetResidenceCPP;
class PetCPP;
class PetRewardCPP;
class PetGardenCfg;

// ===================================================================

class PetResidenceCPP : public ::google::protobuf::Message {
 public:
  PetResidenceCPP();
  virtual ~PetResidenceCPP();

  PetResidenceCPP(const PetResidenceCPP& from);

  inline PetResidenceCPP& operator=(const PetResidenceCPP& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PetResidenceCPP& default_instance();

  void Swap(PetResidenceCPP* other);

  // implements Message ----------------------------------------------

  PetResidenceCPP* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PetResidenceCPP& from);
  void MergeFrom(const PetResidenceCPP& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 unlock_level = 1;
  inline bool has_unlock_level() const;
  inline void clear_unlock_level();
  static const int kUnlockLevelFieldNumber = 1;
  inline ::google::protobuf::uint32 unlock_level() const;
  inline void set_unlock_level(::google::protobuf::uint32 value);

  // required .CommonGiftConfig.CommonModifyItem unlock_cost = 2;
  inline bool has_unlock_cost() const;
  inline void clear_unlock_cost();
  static const int kUnlockCostFieldNumber = 2;
  inline const ::CommonGiftConfig::CommonModifyItem& unlock_cost() const;
  inline ::CommonGiftConfig::CommonModifyItem* mutable_unlock_cost();
  inline ::CommonGiftConfig::CommonModifyItem* release_unlock_cost();
  inline void set_allocated_unlock_cost(::CommonGiftConfig::CommonModifyItem* unlock_cost);

  // @@protoc_insertion_point(class_scope:ConfigPet.PetResidenceCPP)
 private:
  inline void set_has_unlock_level();
  inline void clear_has_unlock_level();
  inline void set_has_unlock_cost();
  inline void clear_has_unlock_cost();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::CommonGiftConfig::CommonModifyItem* unlock_cost_;
  ::google::protobuf::uint32 unlock_level_;
  friend void  protobuf_AddDesc_ConfigPet_2eproto();
  friend void protobuf_AssignDesc_ConfigPet_2eproto();
  friend void protobuf_ShutdownFile_ConfigPet_2eproto();

  void InitAsDefaultInstance();
  static PetResidenceCPP* default_instance_;
};
// -------------------------------------------------------------------

class PetCPP : public ::google::protobuf::Message {
 public:
  PetCPP();
  virtual ~PetCPP();

  PetCPP(const PetCPP& from);

  inline PetCPP& operator=(const PetCPP& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PetCPP& default_instance();

  void Swap(PetCPP* other);

  // implements Message ----------------------------------------------

  PetCPP* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PetCPP& from);
  void MergeFrom(const PetCPP& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 petid = 1;
  inline bool has_petid() const;
  inline void clear_petid();
  static const int kPetidFieldNumber = 1;
  inline ::google::protobuf::uint32 petid() const;
  inline void set_petid(::google::protobuf::uint32 value);

  // required uint32 unlock_level = 2;
  inline bool has_unlock_level() const;
  inline void clear_unlock_level();
  static const int kUnlockLevelFieldNumber = 2;
  inline ::google::protobuf::uint32 unlock_level() const;
  inline void set_unlock_level(::google::protobuf::uint32 value);

  // required uint32 normal_cd = 3;
  inline bool has_normal_cd() const;
  inline void clear_normal_cd();
  static const int kNormalCdFieldNumber = 3;
  inline ::google::protobuf::uint32 normal_cd() const;
  inline void set_normal_cd(::google::protobuf::uint32 value);

  // required .CommonGiftConfig.CommonModifyItem feed_cost = 4;
  inline bool has_feed_cost() const;
  inline void clear_feed_cost();
  static const int kFeedCostFieldNumber = 4;
  inline const ::CommonGiftConfig::CommonModifyItem& feed_cost() const;
  inline ::CommonGiftConfig::CommonModifyItem* mutable_feed_cost();
  inline ::CommonGiftConfig::CommonModifyItem* release_feed_cost();
  inline void set_allocated_feed_cost(::CommonGiftConfig::CommonModifyItem* feed_cost);

  // required uint32 tease_cd = 5;
  inline bool has_tease_cd() const;
  inline void clear_tease_cd();
  static const int kTeaseCdFieldNumber = 5;
  inline ::google::protobuf::uint32 tease_cd() const;
  inline void set_tease_cd(::google::protobuf::uint32 value);

  // required .CommonGiftConfig.CommonModifyItem tease_cost = 6;
  inline bool has_tease_cost() const;
  inline void clear_tease_cost();
  static const int kTeaseCostFieldNumber = 6;
  inline const ::CommonGiftConfig::CommonModifyItem& tease_cost() const;
  inline ::CommonGiftConfig::CommonModifyItem* mutable_tease_cost();
  inline ::CommonGiftConfig::CommonModifyItem* release_tease_cost();
  inline void set_allocated_tease_cost(::CommonGiftConfig::CommonModifyItem* tease_cost);

  // required .CommonGiftConfig.CommonModifyItem unlock_cost = 7;
  inline bool has_unlock_cost() const;
  inline void clear_unlock_cost();
  static const int kUnlockCostFieldNumber = 7;
  inline const ::CommonGiftConfig::CommonModifyItem& unlock_cost() const;
  inline ::CommonGiftConfig::CommonModifyItem* mutable_unlock_cost();
  inline ::CommonGiftConfig::CommonModifyItem* release_unlock_cost();
  inline void set_allocated_unlock_cost(::CommonGiftConfig::CommonModifyItem* unlock_cost);

  // required bytes comment = 8;
  inline bool has_comment() const;
  inline void clear_comment();
  static const int kCommentFieldNumber = 8;
  inline const ::std::string& comment() const;
  inline void set_comment(const ::std::string& value);
  inline void set_comment(const char* value);
  inline void set_comment(const void* value, size_t size);
  inline ::std::string* mutable_comment();
  inline ::std::string* release_comment();
  inline void set_allocated_comment(::std::string* comment);

  // @@protoc_insertion_point(class_scope:ConfigPet.PetCPP)
 private:
  inline void set_has_petid();
  inline void clear_has_petid();
  inline void set_has_unlock_level();
  inline void clear_has_unlock_level();
  inline void set_has_normal_cd();
  inline void clear_has_normal_cd();
  inline void set_has_feed_cost();
  inline void clear_has_feed_cost();
  inline void set_has_tease_cd();
  inline void clear_has_tease_cd();
  inline void set_has_tease_cost();
  inline void clear_has_tease_cost();
  inline void set_has_unlock_cost();
  inline void clear_has_unlock_cost();
  inline void set_has_comment();
  inline void clear_has_comment();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 petid_;
  ::google::protobuf::uint32 unlock_level_;
  ::CommonGiftConfig::CommonModifyItem* feed_cost_;
  ::google::protobuf::uint32 normal_cd_;
  ::google::protobuf::uint32 tease_cd_;
  ::CommonGiftConfig::CommonModifyItem* tease_cost_;
  ::CommonGiftConfig::CommonModifyItem* unlock_cost_;
  ::std::string* comment_;
  friend void  protobuf_AddDesc_ConfigPet_2eproto();
  friend void protobuf_AssignDesc_ConfigPet_2eproto();
  friend void protobuf_ShutdownFile_ConfigPet_2eproto();

  void InitAsDefaultInstance();
  static PetCPP* default_instance_;
};
// -------------------------------------------------------------------

class PetRewardCPP : public ::google::protobuf::Message {
 public:
  PetRewardCPP();
  virtual ~PetRewardCPP();

  PetRewardCPP(const PetRewardCPP& from);

  inline PetRewardCPP& operator=(const PetRewardCPP& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PetRewardCPP& default_instance();

  void Swap(PetRewardCPP* other);

  // implements Message ----------------------------------------------

  PetRewardCPP* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PetRewardCPP& from);
  void MergeFrom(const PetRewardCPP& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 weight = 1;
  inline bool has_weight() const;
  inline void clear_weight();
  static const int kWeightFieldNumber = 1;
  inline ::google::protobuf::uint32 weight() const;
  inline void set_weight(::google::protobuf::uint32 value);

  // optional .CommonGiftConfig.CommonModifyItem reward = 2;
  inline bool has_reward() const;
  inline void clear_reward();
  static const int kRewardFieldNumber = 2;
  inline const ::CommonGiftConfig::CommonModifyItem& reward() const;
  inline ::CommonGiftConfig::CommonModifyItem* mutable_reward();
  inline ::CommonGiftConfig::CommonModifyItem* release_reward();
  inline void set_allocated_reward(::CommonGiftConfig::CommonModifyItem* reward);

  // @@protoc_insertion_point(class_scope:ConfigPet.PetRewardCPP)
 private:
  inline void set_has_weight();
  inline void clear_has_weight();
  inline void set_has_reward();
  inline void clear_has_reward();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::CommonGiftConfig::CommonModifyItem* reward_;
  ::google::protobuf::uint32 weight_;
  friend void  protobuf_AddDesc_ConfigPet_2eproto();
  friend void protobuf_AssignDesc_ConfigPet_2eproto();
  friend void protobuf_ShutdownFile_ConfigPet_2eproto();

  void InitAsDefaultInstance();
  static PetRewardCPP* default_instance_;
};
// -------------------------------------------------------------------

class PetGardenCfg : public ::google::protobuf::Message {
 public:
  PetGardenCfg();
  virtual ~PetGardenCfg();

  PetGardenCfg(const PetGardenCfg& from);

  inline PetGardenCfg& operator=(const PetGardenCfg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PetGardenCfg& default_instance();

  void Swap(PetGardenCfg* other);

  // implements Message ----------------------------------------------

  PetGardenCfg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PetGardenCfg& from);
  void MergeFrom(const PetGardenCfg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .ConfigPet.PetResidenceCPP pet_residence = 1;
  inline bool has_pet_residence() const;
  inline void clear_pet_residence();
  static const int kPetResidenceFieldNumber = 1;
  inline const ::ConfigPet::PetResidenceCPP& pet_residence() const;
  inline ::ConfigPet::PetResidenceCPP* mutable_pet_residence();
  inline ::ConfigPet::PetResidenceCPP* release_pet_residence();
  inline void set_allocated_pet_residence(::ConfigPet::PetResidenceCPP* pet_residence);

  // repeated .ConfigPet.PetCPP pet = 2;
  inline int pet_size() const;
  inline void clear_pet();
  static const int kPetFieldNumber = 2;
  inline const ::ConfigPet::PetCPP& pet(int index) const;
  inline ::ConfigPet::PetCPP* mutable_pet(int index);
  inline ::ConfigPet::PetCPP* add_pet();
  inline const ::google::protobuf::RepeatedPtrField< ::ConfigPet::PetCPP >&
      pet() const;
  inline ::google::protobuf::RepeatedPtrField< ::ConfigPet::PetCPP >*
      mutable_pet();

  // repeated .ConfigPet.PetRewardCPP pet_feed_reward = 3;
  inline int pet_feed_reward_size() const;
  inline void clear_pet_feed_reward();
  static const int kPetFeedRewardFieldNumber = 3;
  inline const ::ConfigPet::PetRewardCPP& pet_feed_reward(int index) const;
  inline ::ConfigPet::PetRewardCPP* mutable_pet_feed_reward(int index);
  inline ::ConfigPet::PetRewardCPP* add_pet_feed_reward();
  inline const ::google::protobuf::RepeatedPtrField< ::ConfigPet::PetRewardCPP >&
      pet_feed_reward() const;
  inline ::google::protobuf::RepeatedPtrField< ::ConfigPet::PetRewardCPP >*
      mutable_pet_feed_reward();

  // repeated .ConfigPet.PetRewardCPP pet_tease_reward = 4;
  inline int pet_tease_reward_size() const;
  inline void clear_pet_tease_reward();
  static const int kPetTeaseRewardFieldNumber = 4;
  inline const ::ConfigPet::PetRewardCPP& pet_tease_reward(int index) const;
  inline ::ConfigPet::PetRewardCPP* mutable_pet_tease_reward(int index);
  inline ::ConfigPet::PetRewardCPP* add_pet_tease_reward();
  inline const ::google::protobuf::RepeatedPtrField< ::ConfigPet::PetRewardCPP >&
      pet_tease_reward() const;
  inline ::google::protobuf::RepeatedPtrField< ::ConfigPet::PetRewardCPP >*
      mutable_pet_tease_reward();

  // @@protoc_insertion_point(class_scope:ConfigPet.PetGardenCfg)
 private:
  inline void set_has_pet_residence();
  inline void clear_has_pet_residence();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::ConfigPet::PetResidenceCPP* pet_residence_;
  ::google::protobuf::RepeatedPtrField< ::ConfigPet::PetCPP > pet_;
  ::google::protobuf::RepeatedPtrField< ::ConfigPet::PetRewardCPP > pet_feed_reward_;
  ::google::protobuf::RepeatedPtrField< ::ConfigPet::PetRewardCPP > pet_tease_reward_;
  friend void  protobuf_AddDesc_ConfigPet_2eproto();
  friend void protobuf_AssignDesc_ConfigPet_2eproto();
  friend void protobuf_ShutdownFile_ConfigPet_2eproto();

  void InitAsDefaultInstance();
  static PetGardenCfg* default_instance_;
};
// ===================================================================


// ===================================================================

// PetResidenceCPP

// required uint32 unlock_level = 1;
inline bool PetResidenceCPP::has_unlock_level() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PetResidenceCPP::set_has_unlock_level() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PetResidenceCPP::clear_has_unlock_level() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PetResidenceCPP::clear_unlock_level() {
  unlock_level_ = 0u;
  clear_has_unlock_level();
}
inline ::google::protobuf::uint32 PetResidenceCPP::unlock_level() const {
  // @@protoc_insertion_point(field_get:ConfigPet.PetResidenceCPP.unlock_level)
  return unlock_level_;
}
inline void PetResidenceCPP::set_unlock_level(::google::protobuf::uint32 value) {
  set_has_unlock_level();
  unlock_level_ = value;
  // @@protoc_insertion_point(field_set:ConfigPet.PetResidenceCPP.unlock_level)
}

// required .CommonGiftConfig.CommonModifyItem unlock_cost = 2;
inline bool PetResidenceCPP::has_unlock_cost() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PetResidenceCPP::set_has_unlock_cost() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PetResidenceCPP::clear_has_unlock_cost() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PetResidenceCPP::clear_unlock_cost() {
  if (unlock_cost_ != NULL) unlock_cost_->::CommonGiftConfig::CommonModifyItem::Clear();
  clear_has_unlock_cost();
}
inline const ::CommonGiftConfig::CommonModifyItem& PetResidenceCPP::unlock_cost() const {
  // @@protoc_insertion_point(field_get:ConfigPet.PetResidenceCPP.unlock_cost)
  return unlock_cost_ != NULL ? *unlock_cost_ : *default_instance_->unlock_cost_;
}
inline ::CommonGiftConfig::CommonModifyItem* PetResidenceCPP::mutable_unlock_cost() {
  set_has_unlock_cost();
  if (unlock_cost_ == NULL) unlock_cost_ = new ::CommonGiftConfig::CommonModifyItem;
  // @@protoc_insertion_point(field_mutable:ConfigPet.PetResidenceCPP.unlock_cost)
  return unlock_cost_;
}
inline ::CommonGiftConfig::CommonModifyItem* PetResidenceCPP::release_unlock_cost() {
  clear_has_unlock_cost();
  ::CommonGiftConfig::CommonModifyItem* temp = unlock_cost_;
  unlock_cost_ = NULL;
  return temp;
}
inline void PetResidenceCPP::set_allocated_unlock_cost(::CommonGiftConfig::CommonModifyItem* unlock_cost) {
  delete unlock_cost_;
  unlock_cost_ = unlock_cost;
  if (unlock_cost) {
    set_has_unlock_cost();
  } else {
    clear_has_unlock_cost();
  }
  // @@protoc_insertion_point(field_set_allocated:ConfigPet.PetResidenceCPP.unlock_cost)
}

// -------------------------------------------------------------------

// PetCPP

// required uint32 petid = 1;
inline bool PetCPP::has_petid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PetCPP::set_has_petid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PetCPP::clear_has_petid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PetCPP::clear_petid() {
  petid_ = 0u;
  clear_has_petid();
}
inline ::google::protobuf::uint32 PetCPP::petid() const {
  // @@protoc_insertion_point(field_get:ConfigPet.PetCPP.petid)
  return petid_;
}
inline void PetCPP::set_petid(::google::protobuf::uint32 value) {
  set_has_petid();
  petid_ = value;
  // @@protoc_insertion_point(field_set:ConfigPet.PetCPP.petid)
}

// required uint32 unlock_level = 2;
inline bool PetCPP::has_unlock_level() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PetCPP::set_has_unlock_level() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PetCPP::clear_has_unlock_level() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PetCPP::clear_unlock_level() {
  unlock_level_ = 0u;
  clear_has_unlock_level();
}
inline ::google::protobuf::uint32 PetCPP::unlock_level() const {
  // @@protoc_insertion_point(field_get:ConfigPet.PetCPP.unlock_level)
  return unlock_level_;
}
inline void PetCPP::set_unlock_level(::google::protobuf::uint32 value) {
  set_has_unlock_level();
  unlock_level_ = value;
  // @@protoc_insertion_point(field_set:ConfigPet.PetCPP.unlock_level)
}

// required uint32 normal_cd = 3;
inline bool PetCPP::has_normal_cd() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PetCPP::set_has_normal_cd() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PetCPP::clear_has_normal_cd() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PetCPP::clear_normal_cd() {
  normal_cd_ = 0u;
  clear_has_normal_cd();
}
inline ::google::protobuf::uint32 PetCPP::normal_cd() const {
  // @@protoc_insertion_point(field_get:ConfigPet.PetCPP.normal_cd)
  return normal_cd_;
}
inline void PetCPP::set_normal_cd(::google::protobuf::uint32 value) {
  set_has_normal_cd();
  normal_cd_ = value;
  // @@protoc_insertion_point(field_set:ConfigPet.PetCPP.normal_cd)
}

// required .CommonGiftConfig.CommonModifyItem feed_cost = 4;
inline bool PetCPP::has_feed_cost() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PetCPP::set_has_feed_cost() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PetCPP::clear_has_feed_cost() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PetCPP::clear_feed_cost() {
  if (feed_cost_ != NULL) feed_cost_->::CommonGiftConfig::CommonModifyItem::Clear();
  clear_has_feed_cost();
}
inline const ::CommonGiftConfig::CommonModifyItem& PetCPP::feed_cost() const {
  // @@protoc_insertion_point(field_get:ConfigPet.PetCPP.feed_cost)
  return feed_cost_ != NULL ? *feed_cost_ : *default_instance_->feed_cost_;
}
inline ::CommonGiftConfig::CommonModifyItem* PetCPP::mutable_feed_cost() {
  set_has_feed_cost();
  if (feed_cost_ == NULL) feed_cost_ = new ::CommonGiftConfig::CommonModifyItem;
  // @@protoc_insertion_point(field_mutable:ConfigPet.PetCPP.feed_cost)
  return feed_cost_;
}
inline ::CommonGiftConfig::CommonModifyItem* PetCPP::release_feed_cost() {
  clear_has_feed_cost();
  ::CommonGiftConfig::CommonModifyItem* temp = feed_cost_;
  feed_cost_ = NULL;
  return temp;
}
inline void PetCPP::set_allocated_feed_cost(::CommonGiftConfig::CommonModifyItem* feed_cost) {
  delete feed_cost_;
  feed_cost_ = feed_cost;
  if (feed_cost) {
    set_has_feed_cost();
  } else {
    clear_has_feed_cost();
  }
  // @@protoc_insertion_point(field_set_allocated:ConfigPet.PetCPP.feed_cost)
}

// required uint32 tease_cd = 5;
inline bool PetCPP::has_tease_cd() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PetCPP::set_has_tease_cd() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PetCPP::clear_has_tease_cd() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PetCPP::clear_tease_cd() {
  tease_cd_ = 0u;
  clear_has_tease_cd();
}
inline ::google::protobuf::uint32 PetCPP::tease_cd() const {
  // @@protoc_insertion_point(field_get:ConfigPet.PetCPP.tease_cd)
  return tease_cd_;
}
inline void PetCPP::set_tease_cd(::google::protobuf::uint32 value) {
  set_has_tease_cd();
  tease_cd_ = value;
  // @@protoc_insertion_point(field_set:ConfigPet.PetCPP.tease_cd)
}

// required .CommonGiftConfig.CommonModifyItem tease_cost = 6;
inline bool PetCPP::has_tease_cost() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void PetCPP::set_has_tease_cost() {
  _has_bits_[0] |= 0x00000020u;
}
inline void PetCPP::clear_has_tease_cost() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void PetCPP::clear_tease_cost() {
  if (tease_cost_ != NULL) tease_cost_->::CommonGiftConfig::CommonModifyItem::Clear();
  clear_has_tease_cost();
}
inline const ::CommonGiftConfig::CommonModifyItem& PetCPP::tease_cost() const {
  // @@protoc_insertion_point(field_get:ConfigPet.PetCPP.tease_cost)
  return tease_cost_ != NULL ? *tease_cost_ : *default_instance_->tease_cost_;
}
inline ::CommonGiftConfig::CommonModifyItem* PetCPP::mutable_tease_cost() {
  set_has_tease_cost();
  if (tease_cost_ == NULL) tease_cost_ = new ::CommonGiftConfig::CommonModifyItem;
  // @@protoc_insertion_point(field_mutable:ConfigPet.PetCPP.tease_cost)
  return tease_cost_;
}
inline ::CommonGiftConfig::CommonModifyItem* PetCPP::release_tease_cost() {
  clear_has_tease_cost();
  ::CommonGiftConfig::CommonModifyItem* temp = tease_cost_;
  tease_cost_ = NULL;
  return temp;
}
inline void PetCPP::set_allocated_tease_cost(::CommonGiftConfig::CommonModifyItem* tease_cost) {
  delete tease_cost_;
  tease_cost_ = tease_cost;
  if (tease_cost) {
    set_has_tease_cost();
  } else {
    clear_has_tease_cost();
  }
  // @@protoc_insertion_point(field_set_allocated:ConfigPet.PetCPP.tease_cost)
}

// required .CommonGiftConfig.CommonModifyItem unlock_cost = 7;
inline bool PetCPP::has_unlock_cost() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void PetCPP::set_has_unlock_cost() {
  _has_bits_[0] |= 0x00000040u;
}
inline void PetCPP::clear_has_unlock_cost() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void PetCPP::clear_unlock_cost() {
  if (unlock_cost_ != NULL) unlock_cost_->::CommonGiftConfig::CommonModifyItem::Clear();
  clear_has_unlock_cost();
}
inline const ::CommonGiftConfig::CommonModifyItem& PetCPP::unlock_cost() const {
  // @@protoc_insertion_point(field_get:ConfigPet.PetCPP.unlock_cost)
  return unlock_cost_ != NULL ? *unlock_cost_ : *default_instance_->unlock_cost_;
}
inline ::CommonGiftConfig::CommonModifyItem* PetCPP::mutable_unlock_cost() {
  set_has_unlock_cost();
  if (unlock_cost_ == NULL) unlock_cost_ = new ::CommonGiftConfig::CommonModifyItem;
  // @@protoc_insertion_point(field_mutable:ConfigPet.PetCPP.unlock_cost)
  return unlock_cost_;
}
inline ::CommonGiftConfig::CommonModifyItem* PetCPP::release_unlock_cost() {
  clear_has_unlock_cost();
  ::CommonGiftConfig::CommonModifyItem* temp = unlock_cost_;
  unlock_cost_ = NULL;
  return temp;
}
inline void PetCPP::set_allocated_unlock_cost(::CommonGiftConfig::CommonModifyItem* unlock_cost) {
  delete unlock_cost_;
  unlock_cost_ = unlock_cost;
  if (unlock_cost) {
    set_has_unlock_cost();
  } else {
    clear_has_unlock_cost();
  }
  // @@protoc_insertion_point(field_set_allocated:ConfigPet.PetCPP.unlock_cost)
}

// required bytes comment = 8;
inline bool PetCPP::has_comment() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void PetCPP::set_has_comment() {
  _has_bits_[0] |= 0x00000080u;
}
inline void PetCPP::clear_has_comment() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void PetCPP::clear_comment() {
  if (comment_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    comment_->clear();
  }
  clear_has_comment();
}
inline const ::std::string& PetCPP::comment() const {
  // @@protoc_insertion_point(field_get:ConfigPet.PetCPP.comment)
  return *comment_;
}
inline void PetCPP::set_comment(const ::std::string& value) {
  set_has_comment();
  if (comment_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    comment_ = new ::std::string;
  }
  comment_->assign(value);
  // @@protoc_insertion_point(field_set:ConfigPet.PetCPP.comment)
}
inline void PetCPP::set_comment(const char* value) {
  set_has_comment();
  if (comment_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    comment_ = new ::std::string;
  }
  comment_->assign(value);
  // @@protoc_insertion_point(field_set_char:ConfigPet.PetCPP.comment)
}
inline void PetCPP::set_comment(const void* value, size_t size) {
  set_has_comment();
  if (comment_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    comment_ = new ::std::string;
  }
  comment_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ConfigPet.PetCPP.comment)
}
inline ::std::string* PetCPP::mutable_comment() {
  set_has_comment();
  if (comment_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    comment_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:ConfigPet.PetCPP.comment)
  return comment_;
}
inline ::std::string* PetCPP::release_comment() {
  clear_has_comment();
  if (comment_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = comment_;
    comment_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void PetCPP::set_allocated_comment(::std::string* comment) {
  if (comment_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete comment_;
  }
  if (comment) {
    set_has_comment();
    comment_ = comment;
  } else {
    clear_has_comment();
    comment_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:ConfigPet.PetCPP.comment)
}

// -------------------------------------------------------------------

// PetRewardCPP

// required uint32 weight = 1;
inline bool PetRewardCPP::has_weight() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PetRewardCPP::set_has_weight() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PetRewardCPP::clear_has_weight() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PetRewardCPP::clear_weight() {
  weight_ = 0u;
  clear_has_weight();
}
inline ::google::protobuf::uint32 PetRewardCPP::weight() const {
  // @@protoc_insertion_point(field_get:ConfigPet.PetRewardCPP.weight)
  return weight_;
}
inline void PetRewardCPP::set_weight(::google::protobuf::uint32 value) {
  set_has_weight();
  weight_ = value;
  // @@protoc_insertion_point(field_set:ConfigPet.PetRewardCPP.weight)
}

// optional .CommonGiftConfig.CommonModifyItem reward = 2;
inline bool PetRewardCPP::has_reward() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PetRewardCPP::set_has_reward() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PetRewardCPP::clear_has_reward() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PetRewardCPP::clear_reward() {
  if (reward_ != NULL) reward_->::CommonGiftConfig::CommonModifyItem::Clear();
  clear_has_reward();
}
inline const ::CommonGiftConfig::CommonModifyItem& PetRewardCPP::reward() const {
  // @@protoc_insertion_point(field_get:ConfigPet.PetRewardCPP.reward)
  return reward_ != NULL ? *reward_ : *default_instance_->reward_;
}
inline ::CommonGiftConfig::CommonModifyItem* PetRewardCPP::mutable_reward() {
  set_has_reward();
  if (reward_ == NULL) reward_ = new ::CommonGiftConfig::CommonModifyItem;
  // @@protoc_insertion_point(field_mutable:ConfigPet.PetRewardCPP.reward)
  return reward_;
}
inline ::CommonGiftConfig::CommonModifyItem* PetRewardCPP::release_reward() {
  clear_has_reward();
  ::CommonGiftConfig::CommonModifyItem* temp = reward_;
  reward_ = NULL;
  return temp;
}
inline void PetRewardCPP::set_allocated_reward(::CommonGiftConfig::CommonModifyItem* reward) {
  delete reward_;
  reward_ = reward;
  if (reward) {
    set_has_reward();
  } else {
    clear_has_reward();
  }
  // @@protoc_insertion_point(field_set_allocated:ConfigPet.PetRewardCPP.reward)
}

// -------------------------------------------------------------------

// PetGardenCfg

// required .ConfigPet.PetResidenceCPP pet_residence = 1;
inline bool PetGardenCfg::has_pet_residence() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PetGardenCfg::set_has_pet_residence() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PetGardenCfg::clear_has_pet_residence() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PetGardenCfg::clear_pet_residence() {
  if (pet_residence_ != NULL) pet_residence_->::ConfigPet::PetResidenceCPP::Clear();
  clear_has_pet_residence();
}
inline const ::ConfigPet::PetResidenceCPP& PetGardenCfg::pet_residence() const {
  // @@protoc_insertion_point(field_get:ConfigPet.PetGardenCfg.pet_residence)
  return pet_residence_ != NULL ? *pet_residence_ : *default_instance_->pet_residence_;
}
inline ::ConfigPet::PetResidenceCPP* PetGardenCfg::mutable_pet_residence() {
  set_has_pet_residence();
  if (pet_residence_ == NULL) pet_residence_ = new ::ConfigPet::PetResidenceCPP;
  // @@protoc_insertion_point(field_mutable:ConfigPet.PetGardenCfg.pet_residence)
  return pet_residence_;
}
inline ::ConfigPet::PetResidenceCPP* PetGardenCfg::release_pet_residence() {
  clear_has_pet_residence();
  ::ConfigPet::PetResidenceCPP* temp = pet_residence_;
  pet_residence_ = NULL;
  return temp;
}
inline void PetGardenCfg::set_allocated_pet_residence(::ConfigPet::PetResidenceCPP* pet_residence) {
  delete pet_residence_;
  pet_residence_ = pet_residence;
  if (pet_residence) {
    set_has_pet_residence();
  } else {
    clear_has_pet_residence();
  }
  // @@protoc_insertion_point(field_set_allocated:ConfigPet.PetGardenCfg.pet_residence)
}

// repeated .ConfigPet.PetCPP pet = 2;
inline int PetGardenCfg::pet_size() const {
  return pet_.size();
}
inline void PetGardenCfg::clear_pet() {
  pet_.Clear();
}
inline const ::ConfigPet::PetCPP& PetGardenCfg::pet(int index) const {
  // @@protoc_insertion_point(field_get:ConfigPet.PetGardenCfg.pet)
  return pet_.Get(index);
}
inline ::ConfigPet::PetCPP* PetGardenCfg::mutable_pet(int index) {
  // @@protoc_insertion_point(field_mutable:ConfigPet.PetGardenCfg.pet)
  return pet_.Mutable(index);
}
inline ::ConfigPet::PetCPP* PetGardenCfg::add_pet() {
  // @@protoc_insertion_point(field_add:ConfigPet.PetGardenCfg.pet)
  return pet_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ConfigPet::PetCPP >&
PetGardenCfg::pet() const {
  // @@protoc_insertion_point(field_list:ConfigPet.PetGardenCfg.pet)
  return pet_;
}
inline ::google::protobuf::RepeatedPtrField< ::ConfigPet::PetCPP >*
PetGardenCfg::mutable_pet() {
  // @@protoc_insertion_point(field_mutable_list:ConfigPet.PetGardenCfg.pet)
  return &pet_;
}

// repeated .ConfigPet.PetRewardCPP pet_feed_reward = 3;
inline int PetGardenCfg::pet_feed_reward_size() const {
  return pet_feed_reward_.size();
}
inline void PetGardenCfg::clear_pet_feed_reward() {
  pet_feed_reward_.Clear();
}
inline const ::ConfigPet::PetRewardCPP& PetGardenCfg::pet_feed_reward(int index) const {
  // @@protoc_insertion_point(field_get:ConfigPet.PetGardenCfg.pet_feed_reward)
  return pet_feed_reward_.Get(index);
}
inline ::ConfigPet::PetRewardCPP* PetGardenCfg::mutable_pet_feed_reward(int index) {
  // @@protoc_insertion_point(field_mutable:ConfigPet.PetGardenCfg.pet_feed_reward)
  return pet_feed_reward_.Mutable(index);
}
inline ::ConfigPet::PetRewardCPP* PetGardenCfg::add_pet_feed_reward() {
  // @@protoc_insertion_point(field_add:ConfigPet.PetGardenCfg.pet_feed_reward)
  return pet_feed_reward_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ConfigPet::PetRewardCPP >&
PetGardenCfg::pet_feed_reward() const {
  // @@protoc_insertion_point(field_list:ConfigPet.PetGardenCfg.pet_feed_reward)
  return pet_feed_reward_;
}
inline ::google::protobuf::RepeatedPtrField< ::ConfigPet::PetRewardCPP >*
PetGardenCfg::mutable_pet_feed_reward() {
  // @@protoc_insertion_point(field_mutable_list:ConfigPet.PetGardenCfg.pet_feed_reward)
  return &pet_feed_reward_;
}

// repeated .ConfigPet.PetRewardCPP pet_tease_reward = 4;
inline int PetGardenCfg::pet_tease_reward_size() const {
  return pet_tease_reward_.size();
}
inline void PetGardenCfg::clear_pet_tease_reward() {
  pet_tease_reward_.Clear();
}
inline const ::ConfigPet::PetRewardCPP& PetGardenCfg::pet_tease_reward(int index) const {
  // @@protoc_insertion_point(field_get:ConfigPet.PetGardenCfg.pet_tease_reward)
  return pet_tease_reward_.Get(index);
}
inline ::ConfigPet::PetRewardCPP* PetGardenCfg::mutable_pet_tease_reward(int index) {
  // @@protoc_insertion_point(field_mutable:ConfigPet.PetGardenCfg.pet_tease_reward)
  return pet_tease_reward_.Mutable(index);
}
inline ::ConfigPet::PetRewardCPP* PetGardenCfg::add_pet_tease_reward() {
  // @@protoc_insertion_point(field_add:ConfigPet.PetGardenCfg.pet_tease_reward)
  return pet_tease_reward_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ConfigPet::PetRewardCPP >&
PetGardenCfg::pet_tease_reward() const {
  // @@protoc_insertion_point(field_list:ConfigPet.PetGardenCfg.pet_tease_reward)
  return pet_tease_reward_;
}
inline ::google::protobuf::RepeatedPtrField< ::ConfigPet::PetRewardCPP >*
PetGardenCfg::mutable_pet_tease_reward() {
  // @@protoc_insertion_point(field_mutable_list:ConfigPet.PetGardenCfg.pet_tease_reward)
  return &pet_tease_reward_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace ConfigPet

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_ConfigPet_2eproto__INCLUDED
