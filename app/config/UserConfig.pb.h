// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: UserConfig.proto

#ifndef PROTOBUF_UserConfig_2eproto__INCLUDED
#define PROTOBUF_UserConfig_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "CommonGiftConfig.pb.h"
// @@protoc_insertion_point(includes)

namespace UserCfg {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_UserConfig_2eproto();
void protobuf_AssignDesc_UserConfig_2eproto();
void protobuf_ShutdownFile_UserConfig_2eproto();

class UserBase;
class Build;
class CriticalInfo;
class DailyRewards;
class ExtraRewards;
class DailyShareGifts;
class SignInGifts;
class CoinPurchase;
class FairySpeedUp;
class NewUserGuideShareCPP;
class XMUserReward;
class XMUserRewardCfg;
class CostDiamondCfg;
class User;

// ===================================================================

class UserBase : public ::google::protobuf::Message {
 public:
  UserBase();
  virtual ~UserBase();

  UserBase(const UserBase& from);

  inline UserBase& operator=(const UserBase& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UserBase& default_instance();

  void Swap(UserBase* other);

  // implements Message ----------------------------------------------

  UserBase* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UserBase& from);
  void MergeFrom(const UserBase& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 coin = 1;
  inline bool has_coin() const;
  inline void clear_coin();
  static const int kCoinFieldNumber = 1;
  inline ::google::protobuf::uint32 coin() const;
  inline void set_coin(::google::protobuf::uint32 value);

  // required uint32 cash = 2;
  inline bool has_cash() const;
  inline void clear_cash();
  static const int kCashFieldNumber = 2;
  inline ::google::protobuf::uint32 cash() const;
  inline void set_cash(::google::protobuf::uint32 value);

  // required uint32 level = 3;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 3;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);

  // required uint32 exp = 4;
  inline bool has_exp() const;
  inline void clear_exp();
  static const int kExpFieldNumber = 4;
  inline ::google::protobuf::uint32 exp() const;
  inline void set_exp(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:UserCfg.UserBase)
 private:
  inline void set_has_coin();
  inline void clear_has_coin();
  inline void set_has_cash();
  inline void clear_has_cash();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_exp();
  inline void clear_has_exp();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 coin_;
  ::google::protobuf::uint32 cash_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint32 exp_;
  friend void  protobuf_AddDesc_UserConfig_2eproto();
  friend void protobuf_AssignDesc_UserConfig_2eproto();
  friend void protobuf_ShutdownFile_UserConfig_2eproto();

  void InitAsDefaultInstance();
  static UserBase* default_instance_;
};
// -------------------------------------------------------------------

class Build : public ::google::protobuf::Message {
 public:
  Build();
  virtual ~Build();

  Build(const Build& from);

  inline Build& operator=(const Build& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Build& default_instance();

  void Swap(Build* other);

  // implements Message ----------------------------------------------

  Build* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Build& from);
  void MergeFrom(const Build& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 buildid = 1;
  inline bool has_buildid() const;
  inline void clear_buildid();
  static const int kBuildidFieldNumber = 1;
  inline ::google::protobuf::uint32 buildid() const;
  inline void set_buildid(::google::protobuf::uint32 value);

  // repeated uint32 pos = 2;
  inline int pos_size() const;
  inline void clear_pos();
  static const int kPosFieldNumber = 2;
  inline ::google::protobuf::uint32 pos(int index) const;
  inline void set_pos(int index, ::google::protobuf::uint32 value);
  inline void add_pos(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      pos() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_pos();

  // @@protoc_insertion_point(class_scope:UserCfg.Build)
 private:
  inline void set_has_buildid();
  inline void clear_has_buildid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > pos_;
  ::google::protobuf::uint32 buildid_;
  friend void  protobuf_AddDesc_UserConfig_2eproto();
  friend void protobuf_AssignDesc_UserConfig_2eproto();
  friend void protobuf_ShutdownFile_UserConfig_2eproto();

  void InitAsDefaultInstance();
  static Build* default_instance_;
};
// -------------------------------------------------------------------

class CriticalInfo : public ::google::protobuf::Message {
 public:
  CriticalInfo();
  virtual ~CriticalInfo();

  CriticalInfo(const CriticalInfo& from);

  inline CriticalInfo& operator=(const CriticalInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CriticalInfo& default_instance();

  void Swap(CriticalInfo* other);

  // implements Message ----------------------------------------------

  CriticalInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CriticalInfo& from);
  void MergeFrom(const CriticalInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 level = 1;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 1;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);

  // repeated .CommonGiftConfig.CommonModifyItem prize = 2;
  inline int prize_size() const;
  inline void clear_prize();
  static const int kPrizeFieldNumber = 2;
  inline const ::CommonGiftConfig::CommonModifyItem& prize(int index) const;
  inline ::CommonGiftConfig::CommonModifyItem* mutable_prize(int index);
  inline ::CommonGiftConfig::CommonModifyItem* add_prize();
  inline const ::google::protobuf::RepeatedPtrField< ::CommonGiftConfig::CommonModifyItem >&
      prize() const;
  inline ::google::protobuf::RepeatedPtrField< ::CommonGiftConfig::CommonModifyItem >*
      mutable_prize();

  // @@protoc_insertion_point(class_scope:UserCfg.CriticalInfo)
 private:
  inline void set_has_level();
  inline void clear_has_level();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CommonGiftConfig::CommonModifyItem > prize_;
  ::google::protobuf::uint32 level_;
  friend void  protobuf_AddDesc_UserConfig_2eproto();
  friend void protobuf_AssignDesc_UserConfig_2eproto();
  friend void protobuf_ShutdownFile_UserConfig_2eproto();

  void InitAsDefaultInstance();
  static CriticalInfo* default_instance_;
};
// -------------------------------------------------------------------

class DailyRewards : public ::google::protobuf::Message {
 public:
  DailyRewards();
  virtual ~DailyRewards();

  DailyRewards(const DailyRewards& from);

  inline DailyRewards& operator=(const DailyRewards& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DailyRewards& default_instance();

  void Swap(DailyRewards* other);

  // implements Message ----------------------------------------------

  DailyRewards* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DailyRewards& from);
  void MergeFrom(const DailyRewards& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // required uint32 weight = 2;
  inline bool has_weight() const;
  inline void clear_weight();
  static const int kWeightFieldNumber = 2;
  inline ::google::protobuf::uint32 weight() const;
  inline void set_weight(::google::protobuf::uint32 value);

  // repeated .CommonGiftConfig.CommonModifyItem prize = 3;
  inline int prize_size() const;
  inline void clear_prize();
  static const int kPrizeFieldNumber = 3;
  inline const ::CommonGiftConfig::CommonModifyItem& prize(int index) const;
  inline ::CommonGiftConfig::CommonModifyItem* mutable_prize(int index);
  inline ::CommonGiftConfig::CommonModifyItem* add_prize();
  inline const ::google::protobuf::RepeatedPtrField< ::CommonGiftConfig::CommonModifyItem >&
      prize() const;
  inline ::google::protobuf::RepeatedPtrField< ::CommonGiftConfig::CommonModifyItem >*
      mutable_prize();

  // @@protoc_insertion_point(class_scope:UserCfg.DailyRewards)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_weight();
  inline void clear_has_weight();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 weight_;
  ::google::protobuf::RepeatedPtrField< ::CommonGiftConfig::CommonModifyItem > prize_;
  friend void  protobuf_AddDesc_UserConfig_2eproto();
  friend void protobuf_AssignDesc_UserConfig_2eproto();
  friend void protobuf_ShutdownFile_UserConfig_2eproto();

  void InitAsDefaultInstance();
  static DailyRewards* default_instance_;
};
// -------------------------------------------------------------------

class ExtraRewards : public ::google::protobuf::Message {
 public:
  ExtraRewards();
  virtual ~ExtraRewards();

  ExtraRewards(const ExtraRewards& from);

  inline ExtraRewards& operator=(const ExtraRewards& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ExtraRewards& default_instance();

  void Swap(ExtraRewards* other);

  // implements Message ----------------------------------------------

  ExtraRewards* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ExtraRewards& from);
  void MergeFrom(const ExtraRewards& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 day = 1;
  inline bool has_day() const;
  inline void clear_day();
  static const int kDayFieldNumber = 1;
  inline ::google::protobuf::uint32 day() const;
  inline void set_day(::google::protobuf::uint32 value);

  // repeated .CommonGiftConfig.CommonModifyItem prize = 2;
  inline int prize_size() const;
  inline void clear_prize();
  static const int kPrizeFieldNumber = 2;
  inline const ::CommonGiftConfig::CommonModifyItem& prize(int index) const;
  inline ::CommonGiftConfig::CommonModifyItem* mutable_prize(int index);
  inline ::CommonGiftConfig::CommonModifyItem* add_prize();
  inline const ::google::protobuf::RepeatedPtrField< ::CommonGiftConfig::CommonModifyItem >&
      prize() const;
  inline ::google::protobuf::RepeatedPtrField< ::CommonGiftConfig::CommonModifyItem >*
      mutable_prize();

  // @@protoc_insertion_point(class_scope:UserCfg.ExtraRewards)
 private:
  inline void set_has_day();
  inline void clear_has_day();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CommonGiftConfig::CommonModifyItem > prize_;
  ::google::protobuf::uint32 day_;
  friend void  protobuf_AddDesc_UserConfig_2eproto();
  friend void protobuf_AssignDesc_UserConfig_2eproto();
  friend void protobuf_ShutdownFile_UserConfig_2eproto();

  void InitAsDefaultInstance();
  static ExtraRewards* default_instance_;
};
// -------------------------------------------------------------------

class DailyShareGifts : public ::google::protobuf::Message {
 public:
  DailyShareGifts();
  virtual ~DailyShareGifts();

  DailyShareGifts(const DailyShareGifts& from);

  inline DailyShareGifts& operator=(const DailyShareGifts& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DailyShareGifts& default_instance();

  void Swap(DailyShareGifts* other);

  // implements Message ----------------------------------------------

  DailyShareGifts* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DailyShareGifts& from);
  void MergeFrom(const DailyShareGifts& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .UserCfg.DailyRewards rewards = 1;
  inline int rewards_size() const;
  inline void clear_rewards();
  static const int kRewardsFieldNumber = 1;
  inline const ::UserCfg::DailyRewards& rewards(int index) const;
  inline ::UserCfg::DailyRewards* mutable_rewards(int index);
  inline ::UserCfg::DailyRewards* add_rewards();
  inline const ::google::protobuf::RepeatedPtrField< ::UserCfg::DailyRewards >&
      rewards() const;
  inline ::google::protobuf::RepeatedPtrField< ::UserCfg::DailyRewards >*
      mutable_rewards();

  // repeated .UserCfg.ExtraRewards extra = 2;
  inline int extra_size() const;
  inline void clear_extra();
  static const int kExtraFieldNumber = 2;
  inline const ::UserCfg::ExtraRewards& extra(int index) const;
  inline ::UserCfg::ExtraRewards* mutable_extra(int index);
  inline ::UserCfg::ExtraRewards* add_extra();
  inline const ::google::protobuf::RepeatedPtrField< ::UserCfg::ExtraRewards >&
      extra() const;
  inline ::google::protobuf::RepeatedPtrField< ::UserCfg::ExtraRewards >*
      mutable_extra();

  // @@protoc_insertion_point(class_scope:UserCfg.DailyShareGifts)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::UserCfg::DailyRewards > rewards_;
  ::google::protobuf::RepeatedPtrField< ::UserCfg::ExtraRewards > extra_;
  friend void  protobuf_AddDesc_UserConfig_2eproto();
  friend void protobuf_AssignDesc_UserConfig_2eproto();
  friend void protobuf_ShutdownFile_UserConfig_2eproto();

  void InitAsDefaultInstance();
  static DailyShareGifts* default_instance_;
};
// -------------------------------------------------------------------

class SignInGifts : public ::google::protobuf::Message {
 public:
  SignInGifts();
  virtual ~SignInGifts();

  SignInGifts(const SignInGifts& from);

  inline SignInGifts& operator=(const SignInGifts& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SignInGifts& default_instance();

  void Swap(SignInGifts* other);

  // implements Message ----------------------------------------------

  SignInGifts* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SignInGifts& from);
  void MergeFrom(const SignInGifts& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 day = 1;
  inline bool has_day() const;
  inline void clear_day();
  static const int kDayFieldNumber = 1;
  inline ::google::protobuf::uint32 day() const;
  inline void set_day(::google::protobuf::uint32 value);

  // repeated .CommonGiftConfig.CommonModifyItem prize = 2;
  inline int prize_size() const;
  inline void clear_prize();
  static const int kPrizeFieldNumber = 2;
  inline const ::CommonGiftConfig::CommonModifyItem& prize(int index) const;
  inline ::CommonGiftConfig::CommonModifyItem* mutable_prize(int index);
  inline ::CommonGiftConfig::CommonModifyItem* add_prize();
  inline const ::google::protobuf::RepeatedPtrField< ::CommonGiftConfig::CommonModifyItem >&
      prize() const;
  inline ::google::protobuf::RepeatedPtrField< ::CommonGiftConfig::CommonModifyItem >*
      mutable_prize();

  // @@protoc_insertion_point(class_scope:UserCfg.SignInGifts)
 private:
  inline void set_has_day();
  inline void clear_has_day();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CommonGiftConfig::CommonModifyItem > prize_;
  ::google::protobuf::uint32 day_;
  friend void  protobuf_AddDesc_UserConfig_2eproto();
  friend void protobuf_AssignDesc_UserConfig_2eproto();
  friend void protobuf_ShutdownFile_UserConfig_2eproto();

  void InitAsDefaultInstance();
  static SignInGifts* default_instance_;
};
// -------------------------------------------------------------------

class CoinPurchase : public ::google::protobuf::Message {
 public:
  CoinPurchase();
  virtual ~CoinPurchase();

  CoinPurchase(const CoinPurchase& from);

  inline CoinPurchase& operator=(const CoinPurchase& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CoinPurchase& default_instance();

  void Swap(CoinPurchase* other);

  // implements Message ----------------------------------------------

  CoinPurchase* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CoinPurchase& from);
  void MergeFrom(const CoinPurchase& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // required .CommonGiftConfig.CommonModifyItem cost = 2;
  inline bool has_cost() const;
  inline void clear_cost();
  static const int kCostFieldNumber = 2;
  inline const ::CommonGiftConfig::CommonModifyItem& cost() const;
  inline ::CommonGiftConfig::CommonModifyItem* mutable_cost();
  inline ::CommonGiftConfig::CommonModifyItem* release_cost();
  inline void set_allocated_cost(::CommonGiftConfig::CommonModifyItem* cost);

  // required .CommonGiftConfig.CommonModifyItem reward = 3;
  inline bool has_reward() const;
  inline void clear_reward();
  static const int kRewardFieldNumber = 3;
  inline const ::CommonGiftConfig::CommonModifyItem& reward() const;
  inline ::CommonGiftConfig::CommonModifyItem* mutable_reward();
  inline ::CommonGiftConfig::CommonModifyItem* release_reward();
  inline void set_allocated_reward(::CommonGiftConfig::CommonModifyItem* reward);

  // @@protoc_insertion_point(class_scope:UserCfg.CoinPurchase)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_cost();
  inline void clear_has_cost();
  inline void set_has_reward();
  inline void clear_has_reward();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::CommonGiftConfig::CommonModifyItem* cost_;
  ::CommonGiftConfig::CommonModifyItem* reward_;
  ::google::protobuf::uint32 id_;
  friend void  protobuf_AddDesc_UserConfig_2eproto();
  friend void protobuf_AssignDesc_UserConfig_2eproto();
  friend void protobuf_ShutdownFile_UserConfig_2eproto();

  void InitAsDefaultInstance();
  static CoinPurchase* default_instance_;
};
// -------------------------------------------------------------------

class FairySpeedUp : public ::google::protobuf::Message {
 public:
  FairySpeedUp();
  virtual ~FairySpeedUp();

  FairySpeedUp(const FairySpeedUp& from);

  inline FairySpeedUp& operator=(const FairySpeedUp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FairySpeedUp& default_instance();

  void Swap(FairySpeedUp* other);

  // implements Message ----------------------------------------------

  FairySpeedUp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FairySpeedUp& from);
  void MergeFrom(const FairySpeedUp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 level = 1;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 1;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);

  // required float cropRate = 2;
  inline bool has_croprate() const;
  inline void clear_croprate();
  static const int kCropRateFieldNumber = 2;
  inline float croprate() const;
  inline void set_croprate(float value);

  // required float equipRate = 3;
  inline bool has_equiprate() const;
  inline void clear_equiprate();
  static const int kEquipRateFieldNumber = 3;
  inline float equiprate() const;
  inline void set_equiprate(float value);

  // required float farmRate = 4;
  inline bool has_farmrate() const;
  inline void clear_farmrate();
  static const int kFarmRateFieldNumber = 4;
  inline float farmrate() const;
  inline void set_farmrate(float value);

  // @@protoc_insertion_point(class_scope:UserCfg.FairySpeedUp)
 private:
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_croprate();
  inline void clear_has_croprate();
  inline void set_has_equiprate();
  inline void clear_has_equiprate();
  inline void set_has_farmrate();
  inline void clear_has_farmrate();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 level_;
  float croprate_;
  float equiprate_;
  float farmrate_;
  friend void  protobuf_AddDesc_UserConfig_2eproto();
  friend void protobuf_AssignDesc_UserConfig_2eproto();
  friend void protobuf_ShutdownFile_UserConfig_2eproto();

  void InitAsDefaultInstance();
  static FairySpeedUp* default_instance_;
};
// -------------------------------------------------------------------

class NewUserGuideShareCPP : public ::google::protobuf::Message {
 public:
  NewUserGuideShareCPP();
  virtual ~NewUserGuideShareCPP();

  NewUserGuideShareCPP(const NewUserGuideShareCPP& from);

  inline NewUserGuideShareCPP& operator=(const NewUserGuideShareCPP& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NewUserGuideShareCPP& default_instance();

  void Swap(NewUserGuideShareCPP* other);

  // implements Message ----------------------------------------------

  NewUserGuideShareCPP* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NewUserGuideShareCPP& from);
  void MergeFrom(const NewUserGuideShareCPP& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // required .CommonGiftConfig.CommonModifyItem reward = 2;
  inline bool has_reward() const;
  inline void clear_reward();
  static const int kRewardFieldNumber = 2;
  inline const ::CommonGiftConfig::CommonModifyItem& reward() const;
  inline ::CommonGiftConfig::CommonModifyItem* mutable_reward();
  inline ::CommonGiftConfig::CommonModifyItem* release_reward();
  inline void set_allocated_reward(::CommonGiftConfig::CommonModifyItem* reward);

  // @@protoc_insertion_point(class_scope:UserCfg.NewUserGuideShareCPP)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_reward();
  inline void clear_has_reward();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::CommonGiftConfig::CommonModifyItem* reward_;
  ::google::protobuf::uint32 id_;
  friend void  protobuf_AddDesc_UserConfig_2eproto();
  friend void protobuf_AssignDesc_UserConfig_2eproto();
  friend void protobuf_ShutdownFile_UserConfig_2eproto();

  void InitAsDefaultInstance();
  static NewUserGuideShareCPP* default_instance_;
};
// -------------------------------------------------------------------

class XMUserReward : public ::google::protobuf::Message {
 public:
  XMUserReward();
  virtual ~XMUserReward();

  XMUserReward(const XMUserReward& from);

  inline XMUserReward& operator=(const XMUserReward& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const XMUserReward& default_instance();

  void Swap(XMUserReward* other);

  // implements Message ----------------------------------------------

  XMUserReward* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const XMUserReward& from);
  void MergeFrom(const XMUserReward& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bytes reward = 1;
  inline bool has_reward() const;
  inline void clear_reward();
  static const int kRewardFieldNumber = 1;
  inline const ::std::string& reward() const;
  inline void set_reward(const ::std::string& value);
  inline void set_reward(const char* value);
  inline void set_reward(const void* value, size_t size);
  inline ::std::string* mutable_reward();
  inline ::std::string* release_reward();
  inline void set_allocated_reward(::std::string* reward);

  // optional bytes content = 2;
  inline bool has_content() const;
  inline void clear_content();
  static const int kContentFieldNumber = 2;
  inline const ::std::string& content() const;
  inline void set_content(const ::std::string& value);
  inline void set_content(const char* value);
  inline void set_content(const void* value, size_t size);
  inline ::std::string* mutable_content();
  inline ::std::string* release_content();
  inline void set_allocated_content(::std::string* content);

  // @@protoc_insertion_point(class_scope:UserCfg.XMUserReward)
 private:
  inline void set_has_reward();
  inline void clear_has_reward();
  inline void set_has_content();
  inline void clear_has_content();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* reward_;
  ::std::string* content_;
  friend void  protobuf_AddDesc_UserConfig_2eproto();
  friend void protobuf_AssignDesc_UserConfig_2eproto();
  friend void protobuf_ShutdownFile_UserConfig_2eproto();

  void InitAsDefaultInstance();
  static XMUserReward* default_instance_;
};
// -------------------------------------------------------------------

class XMUserRewardCfg : public ::google::protobuf::Message {
 public:
  XMUserRewardCfg();
  virtual ~XMUserRewardCfg();

  XMUserRewardCfg(const XMUserRewardCfg& from);

  inline XMUserRewardCfg& operator=(const XMUserRewardCfg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const XMUserRewardCfg& default_instance();

  void Swap(XMUserRewardCfg* other);

  // implements Message ----------------------------------------------

  XMUserRewardCfg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const XMUserRewardCfg& from);
  void MergeFrom(const XMUserRewardCfg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bytes MailTitle = 1;
  inline bool has_mailtitle() const;
  inline void clear_mailtitle();
  static const int kMailTitleFieldNumber = 1;
  inline const ::std::string& mailtitle() const;
  inline void set_mailtitle(const ::std::string& value);
  inline void set_mailtitle(const char* value);
  inline void set_mailtitle(const void* value, size_t size);
  inline ::std::string* mutable_mailtitle();
  inline ::std::string* release_mailtitle();
  inline void set_allocated_mailtitle(::std::string* mailtitle);

  // required bytes FirstMailMsg = 2;
  inline bool has_firstmailmsg() const;
  inline void clear_firstmailmsg();
  static const int kFirstMailMsgFieldNumber = 2;
  inline const ::std::string& firstmailmsg() const;
  inline void set_firstmailmsg(const ::std::string& value);
  inline void set_firstmailmsg(const char* value);
  inline void set_firstmailmsg(const void* value, size_t size);
  inline ::std::string* mutable_firstmailmsg();
  inline ::std::string* release_firstmailmsg();
  inline void set_allocated_firstmailmsg(::std::string* firstmailmsg);

  // required bytes FirstChargeMailMsg = 3;
  inline bool has_firstchargemailmsg() const;
  inline void clear_firstchargemailmsg();
  static const int kFirstChargeMailMsgFieldNumber = 3;
  inline const ::std::string& firstchargemailmsg() const;
  inline void set_firstchargemailmsg(const ::std::string& value);
  inline void set_firstchargemailmsg(const char* value);
  inline void set_firstchargemailmsg(const void* value, size_t size);
  inline ::std::string* mutable_firstchargemailmsg();
  inline ::std::string* release_firstchargemailmsg();
  inline void set_allocated_firstchargemailmsg(::std::string* firstchargemailmsg);

  // repeated .UserCfg.XMUserReward RewardDiamondCnt = 4;
  inline int rewarddiamondcnt_size() const;
  inline void clear_rewarddiamondcnt();
  static const int kRewardDiamondCntFieldNumber = 4;
  inline const ::UserCfg::XMUserReward& rewarddiamondcnt(int index) const;
  inline ::UserCfg::XMUserReward* mutable_rewarddiamondcnt(int index);
  inline ::UserCfg::XMUserReward* add_rewarddiamondcnt();
  inline const ::google::protobuf::RepeatedPtrField< ::UserCfg::XMUserReward >&
      rewarddiamondcnt() const;
  inline ::google::protobuf::RepeatedPtrField< ::UserCfg::XMUserReward >*
      mutable_rewarddiamondcnt();

  // @@protoc_insertion_point(class_scope:UserCfg.XMUserRewardCfg)
 private:
  inline void set_has_mailtitle();
  inline void clear_has_mailtitle();
  inline void set_has_firstmailmsg();
  inline void clear_has_firstmailmsg();
  inline void set_has_firstchargemailmsg();
  inline void clear_has_firstchargemailmsg();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* mailtitle_;
  ::std::string* firstmailmsg_;
  ::std::string* firstchargemailmsg_;
  ::google::protobuf::RepeatedPtrField< ::UserCfg::XMUserReward > rewarddiamondcnt_;
  friend void  protobuf_AddDesc_UserConfig_2eproto();
  friend void protobuf_AssignDesc_UserConfig_2eproto();
  friend void protobuf_ShutdownFile_UserConfig_2eproto();

  void InitAsDefaultInstance();
  static XMUserRewardCfg* default_instance_;
};
// -------------------------------------------------------------------

class CostDiamondCfg : public ::google::protobuf::Message {
 public:
  CostDiamondCfg();
  virtual ~CostDiamondCfg();

  CostDiamondCfg(const CostDiamondCfg& from);

  inline CostDiamondCfg& operator=(const CostDiamondCfg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CostDiamondCfg& default_instance();

  void Swap(CostDiamondCfg* other);

  // implements Message ----------------------------------------------

  CostDiamondCfg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CostDiamondCfg& from);
  void MergeFrom(const CostDiamondCfg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .CommonGiftConfig.CommonModifyItem xianren_open_cost = 1;
  inline bool has_xianren_open_cost() const;
  inline void clear_xianren_open_cost();
  static const int kXianrenOpenCostFieldNumber = 1;
  inline const ::CommonGiftConfig::CommonModifyItem& xianren_open_cost() const;
  inline ::CommonGiftConfig::CommonModifyItem* mutable_xianren_open_cost();
  inline ::CommonGiftConfig::CommonModifyItem* release_xianren_open_cost();
  inline void set_allocated_xianren_open_cost(::CommonGiftConfig::CommonModifyItem* xianren_open_cost);

  // required .CommonGiftConfig.CommonModifyItem zhushou_open_cost = 2;
  inline bool has_zhushou_open_cost() const;
  inline void clear_zhushou_open_cost();
  static const int kZhushouOpenCostFieldNumber = 2;
  inline const ::CommonGiftConfig::CommonModifyItem& zhushou_open_cost() const;
  inline ::CommonGiftConfig::CommonModifyItem* mutable_zhushou_open_cost();
  inline ::CommonGiftConfig::CommonModifyItem* release_zhushou_open_cost();
  inline void set_allocated_zhushou_open_cost(::CommonGiftConfig::CommonModifyItem* zhushou_open_cost);

  // required .CommonGiftConfig.CommonModifyItem daocaoren_open_cost = 3;
  inline bool has_daocaoren_open_cost() const;
  inline void clear_daocaoren_open_cost();
  static const int kDaocaorenOpenCostFieldNumber = 3;
  inline const ::CommonGiftConfig::CommonModifyItem& daocaoren_open_cost() const;
  inline ::CommonGiftConfig::CommonModifyItem* mutable_daocaoren_open_cost();
  inline ::CommonGiftConfig::CommonModifyItem* release_daocaoren_open_cost();
  inline void set_allocated_daocaoren_open_cost(::CommonGiftConfig::CommonModifyItem* daocaoren_open_cost);

  // @@protoc_insertion_point(class_scope:UserCfg.CostDiamondCfg)
 private:
  inline void set_has_xianren_open_cost();
  inline void clear_has_xianren_open_cost();
  inline void set_has_zhushou_open_cost();
  inline void clear_has_zhushou_open_cost();
  inline void set_has_daocaoren_open_cost();
  inline void clear_has_daocaoren_open_cost();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::CommonGiftConfig::CommonModifyItem* xianren_open_cost_;
  ::CommonGiftConfig::CommonModifyItem* zhushou_open_cost_;
  ::CommonGiftConfig::CommonModifyItem* daocaoren_open_cost_;
  friend void  protobuf_AddDesc_UserConfig_2eproto();
  friend void protobuf_AssignDesc_UserConfig_2eproto();
  friend void protobuf_ShutdownFile_UserConfig_2eproto();

  void InitAsDefaultInstance();
  static CostDiamondCfg* default_instance_;
};
// -------------------------------------------------------------------

class User : public ::google::protobuf::Message {
 public:
  User();
  virtual ~User();

  User(const User& from);

  inline User& operator=(const User& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const User& default_instance();

  void Swap(User* other);

  // implements Message ----------------------------------------------

  User* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const User& from);
  void MergeFrom(const User& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .UserCfg.UserBase user_init = 1;
  inline bool has_user_init() const;
  inline void clear_user_init();
  static const int kUserInitFieldNumber = 1;
  inline const ::UserCfg::UserBase& user_init() const;
  inline ::UserCfg::UserBase* mutable_user_init();
  inline ::UserCfg::UserBase* release_user_init();
  inline void set_allocated_user_init(::UserCfg::UserBase* user_init);

  // repeated uint64 user_exp = 2;
  inline int user_exp_size() const;
  inline void clear_user_exp();
  static const int kUserExpFieldNumber = 2;
  inline ::google::protobuf::uint64 user_exp(int index) const;
  inline void set_user_exp(int index, ::google::protobuf::uint64 value);
  inline void add_user_exp(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      user_exp() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_user_exp();

  // repeated .UserCfg.Build builds = 3;
  inline int builds_size() const;
  inline void clear_builds();
  static const int kBuildsFieldNumber = 3;
  inline const ::UserCfg::Build& builds(int index) const;
  inline ::UserCfg::Build* mutable_builds(int index);
  inline ::UserCfg::Build* add_builds();
  inline const ::google::protobuf::RepeatedPtrField< ::UserCfg::Build >&
      builds() const;
  inline ::google::protobuf::RepeatedPtrField< ::UserCfg::Build >*
      mutable_builds();

  // required .CommonGiftConfig.CommonModifyItem initprops = 4;
  inline bool has_initprops() const;
  inline void clear_initprops();
  static const int kInitpropsFieldNumber = 4;
  inline const ::CommonGiftConfig::CommonModifyItem& initprops() const;
  inline ::CommonGiftConfig::CommonModifyItem* mutable_initprops();
  inline ::CommonGiftConfig::CommonModifyItem* release_initprops();
  inline void set_allocated_initprops(::CommonGiftConfig::CommonModifyItem* initprops);

  // repeated .UserCfg.CriticalInfo criticalPoint = 5;
  inline int criticalpoint_size() const;
  inline void clear_criticalpoint();
  static const int kCriticalPointFieldNumber = 5;
  inline const ::UserCfg::CriticalInfo& criticalpoint(int index) const;
  inline ::UserCfg::CriticalInfo* mutable_criticalpoint(int index);
  inline ::UserCfg::CriticalInfo* add_criticalpoint();
  inline const ::google::protobuf::RepeatedPtrField< ::UserCfg::CriticalInfo >&
      criticalpoint() const;
  inline ::google::protobuf::RepeatedPtrField< ::UserCfg::CriticalInfo >*
      mutable_criticalpoint();

  // required .UserCfg.DailyShareGifts sharegift = 6;
  inline bool has_sharegift() const;
  inline void clear_sharegift();
  static const int kSharegiftFieldNumber = 6;
  inline const ::UserCfg::DailyShareGifts& sharegift() const;
  inline ::UserCfg::DailyShareGifts* mutable_sharegift();
  inline ::UserCfg::DailyShareGifts* release_sharegift();
  inline void set_allocated_sharegift(::UserCfg::DailyShareGifts* sharegift);

  // repeated .UserCfg.CoinPurchase coinpurchase = 7;
  inline int coinpurchase_size() const;
  inline void clear_coinpurchase();
  static const int kCoinpurchaseFieldNumber = 7;
  inline const ::UserCfg::CoinPurchase& coinpurchase(int index) const;
  inline ::UserCfg::CoinPurchase* mutable_coinpurchase(int index);
  inline ::UserCfg::CoinPurchase* add_coinpurchase();
  inline const ::google::protobuf::RepeatedPtrField< ::UserCfg::CoinPurchase >&
      coinpurchase() const;
  inline ::google::protobuf::RepeatedPtrField< ::UserCfg::CoinPurchase >*
      mutable_coinpurchase();

  // repeated .UserCfg.SignInGifts SignIn = 8;
  inline int signin_size() const;
  inline void clear_signin();
  static const int kSignInFieldNumber = 8;
  inline const ::UserCfg::SignInGifts& signin(int index) const;
  inline ::UserCfg::SignInGifts* mutable_signin(int index);
  inline ::UserCfg::SignInGifts* add_signin();
  inline const ::google::protobuf::RepeatedPtrField< ::UserCfg::SignInGifts >&
      signin() const;
  inline ::google::protobuf::RepeatedPtrField< ::UserCfg::SignInGifts >*
      mutable_signin();

  // required .UserCfg.FairySpeedUp fairySpeedUp = 9;
  inline bool has_fairyspeedup() const;
  inline void clear_fairyspeedup();
  static const int kFairySpeedUpFieldNumber = 9;
  inline const ::UserCfg::FairySpeedUp& fairyspeedup() const;
  inline ::UserCfg::FairySpeedUp* mutable_fairyspeedup();
  inline ::UserCfg::FairySpeedUp* release_fairyspeedup();
  inline void set_allocated_fairyspeedup(::UserCfg::FairySpeedUp* fairyspeedup);

  // repeated .UserCfg.NewUserGuideShareCPP newUserGuideShare = 10;
  inline int newuserguideshare_size() const;
  inline void clear_newuserguideshare();
  static const int kNewUserGuideShareFieldNumber = 10;
  inline const ::UserCfg::NewUserGuideShareCPP& newuserguideshare(int index) const;
  inline ::UserCfg::NewUserGuideShareCPP* mutable_newuserguideshare(int index);
  inline ::UserCfg::NewUserGuideShareCPP* add_newuserguideshare();
  inline const ::google::protobuf::RepeatedPtrField< ::UserCfg::NewUserGuideShareCPP >&
      newuserguideshare() const;
  inline ::google::protobuf::RepeatedPtrField< ::UserCfg::NewUserGuideShareCPP >*
      mutable_newuserguideshare();

  // required .UserCfg.XMUserRewardCfg xmUserReward = 11;
  inline bool has_xmuserreward() const;
  inline void clear_xmuserreward();
  static const int kXmUserRewardFieldNumber = 11;
  inline const ::UserCfg::XMUserRewardCfg& xmuserreward() const;
  inline ::UserCfg::XMUserRewardCfg* mutable_xmuserreward();
  inline ::UserCfg::XMUserRewardCfg* release_xmuserreward();
  inline void set_allocated_xmuserreward(::UserCfg::XMUserRewardCfg* xmuserreward);

  // required .UserCfg.CostDiamondCfg diamondCost = 12;
  inline bool has_diamondcost() const;
  inline void clear_diamondcost();
  static const int kDiamondCostFieldNumber = 12;
  inline const ::UserCfg::CostDiamondCfg& diamondcost() const;
  inline ::UserCfg::CostDiamondCfg* mutable_diamondcost();
  inline ::UserCfg::CostDiamondCfg* release_diamondcost();
  inline void set_allocated_diamondcost(::UserCfg::CostDiamondCfg* diamondcost);

  // @@protoc_insertion_point(class_scope:UserCfg.User)
 private:
  inline void set_has_user_init();
  inline void clear_has_user_init();
  inline void set_has_initprops();
  inline void clear_has_initprops();
  inline void set_has_sharegift();
  inline void clear_has_sharegift();
  inline void set_has_fairyspeedup();
  inline void clear_has_fairyspeedup();
  inline void set_has_xmuserreward();
  inline void clear_has_xmuserreward();
  inline void set_has_diamondcost();
  inline void clear_has_diamondcost();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::UserCfg::UserBase* user_init_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > user_exp_;
  ::google::protobuf::RepeatedPtrField< ::UserCfg::Build > builds_;
  ::CommonGiftConfig::CommonModifyItem* initprops_;
  ::google::protobuf::RepeatedPtrField< ::UserCfg::CriticalInfo > criticalpoint_;
  ::UserCfg::DailyShareGifts* sharegift_;
  ::google::protobuf::RepeatedPtrField< ::UserCfg::CoinPurchase > coinpurchase_;
  ::google::protobuf::RepeatedPtrField< ::UserCfg::SignInGifts > signin_;
  ::UserCfg::FairySpeedUp* fairyspeedup_;
  ::google::protobuf::RepeatedPtrField< ::UserCfg::NewUserGuideShareCPP > newuserguideshare_;
  ::UserCfg::XMUserRewardCfg* xmuserreward_;
  ::UserCfg::CostDiamondCfg* diamondcost_;
  friend void  protobuf_AddDesc_UserConfig_2eproto();
  friend void protobuf_AssignDesc_UserConfig_2eproto();
  friend void protobuf_ShutdownFile_UserConfig_2eproto();

  void InitAsDefaultInstance();
  static User* default_instance_;
};
// ===================================================================


// ===================================================================

// UserBase

// required uint32 coin = 1;
inline bool UserBase::has_coin() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UserBase::set_has_coin() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UserBase::clear_has_coin() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UserBase::clear_coin() {
  coin_ = 0u;
  clear_has_coin();
}
inline ::google::protobuf::uint32 UserBase::coin() const {
  // @@protoc_insertion_point(field_get:UserCfg.UserBase.coin)
  return coin_;
}
inline void UserBase::set_coin(::google::protobuf::uint32 value) {
  set_has_coin();
  coin_ = value;
  // @@protoc_insertion_point(field_set:UserCfg.UserBase.coin)
}

// required uint32 cash = 2;
inline bool UserBase::has_cash() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UserBase::set_has_cash() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UserBase::clear_has_cash() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UserBase::clear_cash() {
  cash_ = 0u;
  clear_has_cash();
}
inline ::google::protobuf::uint32 UserBase::cash() const {
  // @@protoc_insertion_point(field_get:UserCfg.UserBase.cash)
  return cash_;
}
inline void UserBase::set_cash(::google::protobuf::uint32 value) {
  set_has_cash();
  cash_ = value;
  // @@protoc_insertion_point(field_set:UserCfg.UserBase.cash)
}

// required uint32 level = 3;
inline bool UserBase::has_level() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void UserBase::set_has_level() {
  _has_bits_[0] |= 0x00000004u;
}
inline void UserBase::clear_has_level() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void UserBase::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 UserBase::level() const {
  // @@protoc_insertion_point(field_get:UserCfg.UserBase.level)
  return level_;
}
inline void UserBase::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:UserCfg.UserBase.level)
}

// required uint32 exp = 4;
inline bool UserBase::has_exp() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void UserBase::set_has_exp() {
  _has_bits_[0] |= 0x00000008u;
}
inline void UserBase::clear_has_exp() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void UserBase::clear_exp() {
  exp_ = 0u;
  clear_has_exp();
}
inline ::google::protobuf::uint32 UserBase::exp() const {
  // @@protoc_insertion_point(field_get:UserCfg.UserBase.exp)
  return exp_;
}
inline void UserBase::set_exp(::google::protobuf::uint32 value) {
  set_has_exp();
  exp_ = value;
  // @@protoc_insertion_point(field_set:UserCfg.UserBase.exp)
}

// -------------------------------------------------------------------

// Build

// required uint32 buildid = 1;
inline bool Build::has_buildid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Build::set_has_buildid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Build::clear_has_buildid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Build::clear_buildid() {
  buildid_ = 0u;
  clear_has_buildid();
}
inline ::google::protobuf::uint32 Build::buildid() const {
  // @@protoc_insertion_point(field_get:UserCfg.Build.buildid)
  return buildid_;
}
inline void Build::set_buildid(::google::protobuf::uint32 value) {
  set_has_buildid();
  buildid_ = value;
  // @@protoc_insertion_point(field_set:UserCfg.Build.buildid)
}

// repeated uint32 pos = 2;
inline int Build::pos_size() const {
  return pos_.size();
}
inline void Build::clear_pos() {
  pos_.Clear();
}
inline ::google::protobuf::uint32 Build::pos(int index) const {
  // @@protoc_insertion_point(field_get:UserCfg.Build.pos)
  return pos_.Get(index);
}
inline void Build::set_pos(int index, ::google::protobuf::uint32 value) {
  pos_.Set(index, value);
  // @@protoc_insertion_point(field_set:UserCfg.Build.pos)
}
inline void Build::add_pos(::google::protobuf::uint32 value) {
  pos_.Add(value);
  // @@protoc_insertion_point(field_add:UserCfg.Build.pos)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
Build::pos() const {
  // @@protoc_insertion_point(field_list:UserCfg.Build.pos)
  return pos_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
Build::mutable_pos() {
  // @@protoc_insertion_point(field_mutable_list:UserCfg.Build.pos)
  return &pos_;
}

// -------------------------------------------------------------------

// CriticalInfo

// required uint32 level = 1;
inline bool CriticalInfo::has_level() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CriticalInfo::set_has_level() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CriticalInfo::clear_has_level() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CriticalInfo::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 CriticalInfo::level() const {
  // @@protoc_insertion_point(field_get:UserCfg.CriticalInfo.level)
  return level_;
}
inline void CriticalInfo::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:UserCfg.CriticalInfo.level)
}

// repeated .CommonGiftConfig.CommonModifyItem prize = 2;
inline int CriticalInfo::prize_size() const {
  return prize_.size();
}
inline void CriticalInfo::clear_prize() {
  prize_.Clear();
}
inline const ::CommonGiftConfig::CommonModifyItem& CriticalInfo::prize(int index) const {
  // @@protoc_insertion_point(field_get:UserCfg.CriticalInfo.prize)
  return prize_.Get(index);
}
inline ::CommonGiftConfig::CommonModifyItem* CriticalInfo::mutable_prize(int index) {
  // @@protoc_insertion_point(field_mutable:UserCfg.CriticalInfo.prize)
  return prize_.Mutable(index);
}
inline ::CommonGiftConfig::CommonModifyItem* CriticalInfo::add_prize() {
  // @@protoc_insertion_point(field_add:UserCfg.CriticalInfo.prize)
  return prize_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CommonGiftConfig::CommonModifyItem >&
CriticalInfo::prize() const {
  // @@protoc_insertion_point(field_list:UserCfg.CriticalInfo.prize)
  return prize_;
}
inline ::google::protobuf::RepeatedPtrField< ::CommonGiftConfig::CommonModifyItem >*
CriticalInfo::mutable_prize() {
  // @@protoc_insertion_point(field_mutable_list:UserCfg.CriticalInfo.prize)
  return &prize_;
}

// -------------------------------------------------------------------

// DailyRewards

// required uint32 id = 1;
inline bool DailyRewards::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DailyRewards::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DailyRewards::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DailyRewards::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 DailyRewards::id() const {
  // @@protoc_insertion_point(field_get:UserCfg.DailyRewards.id)
  return id_;
}
inline void DailyRewards::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:UserCfg.DailyRewards.id)
}

// required uint32 weight = 2;
inline bool DailyRewards::has_weight() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DailyRewards::set_has_weight() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DailyRewards::clear_has_weight() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DailyRewards::clear_weight() {
  weight_ = 0u;
  clear_has_weight();
}
inline ::google::protobuf::uint32 DailyRewards::weight() const {
  // @@protoc_insertion_point(field_get:UserCfg.DailyRewards.weight)
  return weight_;
}
inline void DailyRewards::set_weight(::google::protobuf::uint32 value) {
  set_has_weight();
  weight_ = value;
  // @@protoc_insertion_point(field_set:UserCfg.DailyRewards.weight)
}

// repeated .CommonGiftConfig.CommonModifyItem prize = 3;
inline int DailyRewards::prize_size() const {
  return prize_.size();
}
inline void DailyRewards::clear_prize() {
  prize_.Clear();
}
inline const ::CommonGiftConfig::CommonModifyItem& DailyRewards::prize(int index) const {
  // @@protoc_insertion_point(field_get:UserCfg.DailyRewards.prize)
  return prize_.Get(index);
}
inline ::CommonGiftConfig::CommonModifyItem* DailyRewards::mutable_prize(int index) {
  // @@protoc_insertion_point(field_mutable:UserCfg.DailyRewards.prize)
  return prize_.Mutable(index);
}
inline ::CommonGiftConfig::CommonModifyItem* DailyRewards::add_prize() {
  // @@protoc_insertion_point(field_add:UserCfg.DailyRewards.prize)
  return prize_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CommonGiftConfig::CommonModifyItem >&
DailyRewards::prize() const {
  // @@protoc_insertion_point(field_list:UserCfg.DailyRewards.prize)
  return prize_;
}
inline ::google::protobuf::RepeatedPtrField< ::CommonGiftConfig::CommonModifyItem >*
DailyRewards::mutable_prize() {
  // @@protoc_insertion_point(field_mutable_list:UserCfg.DailyRewards.prize)
  return &prize_;
}

// -------------------------------------------------------------------

// ExtraRewards

// required uint32 day = 1;
inline bool ExtraRewards::has_day() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ExtraRewards::set_has_day() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ExtraRewards::clear_has_day() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ExtraRewards::clear_day() {
  day_ = 0u;
  clear_has_day();
}
inline ::google::protobuf::uint32 ExtraRewards::day() const {
  // @@protoc_insertion_point(field_get:UserCfg.ExtraRewards.day)
  return day_;
}
inline void ExtraRewards::set_day(::google::protobuf::uint32 value) {
  set_has_day();
  day_ = value;
  // @@protoc_insertion_point(field_set:UserCfg.ExtraRewards.day)
}

// repeated .CommonGiftConfig.CommonModifyItem prize = 2;
inline int ExtraRewards::prize_size() const {
  return prize_.size();
}
inline void ExtraRewards::clear_prize() {
  prize_.Clear();
}
inline const ::CommonGiftConfig::CommonModifyItem& ExtraRewards::prize(int index) const {
  // @@protoc_insertion_point(field_get:UserCfg.ExtraRewards.prize)
  return prize_.Get(index);
}
inline ::CommonGiftConfig::CommonModifyItem* ExtraRewards::mutable_prize(int index) {
  // @@protoc_insertion_point(field_mutable:UserCfg.ExtraRewards.prize)
  return prize_.Mutable(index);
}
inline ::CommonGiftConfig::CommonModifyItem* ExtraRewards::add_prize() {
  // @@protoc_insertion_point(field_add:UserCfg.ExtraRewards.prize)
  return prize_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CommonGiftConfig::CommonModifyItem >&
ExtraRewards::prize() const {
  // @@protoc_insertion_point(field_list:UserCfg.ExtraRewards.prize)
  return prize_;
}
inline ::google::protobuf::RepeatedPtrField< ::CommonGiftConfig::CommonModifyItem >*
ExtraRewards::mutable_prize() {
  // @@protoc_insertion_point(field_mutable_list:UserCfg.ExtraRewards.prize)
  return &prize_;
}

// -------------------------------------------------------------------

// DailyShareGifts

// repeated .UserCfg.DailyRewards rewards = 1;
inline int DailyShareGifts::rewards_size() const {
  return rewards_.size();
}
inline void DailyShareGifts::clear_rewards() {
  rewards_.Clear();
}
inline const ::UserCfg::DailyRewards& DailyShareGifts::rewards(int index) const {
  // @@protoc_insertion_point(field_get:UserCfg.DailyShareGifts.rewards)
  return rewards_.Get(index);
}
inline ::UserCfg::DailyRewards* DailyShareGifts::mutable_rewards(int index) {
  // @@protoc_insertion_point(field_mutable:UserCfg.DailyShareGifts.rewards)
  return rewards_.Mutable(index);
}
inline ::UserCfg::DailyRewards* DailyShareGifts::add_rewards() {
  // @@protoc_insertion_point(field_add:UserCfg.DailyShareGifts.rewards)
  return rewards_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::UserCfg::DailyRewards >&
DailyShareGifts::rewards() const {
  // @@protoc_insertion_point(field_list:UserCfg.DailyShareGifts.rewards)
  return rewards_;
}
inline ::google::protobuf::RepeatedPtrField< ::UserCfg::DailyRewards >*
DailyShareGifts::mutable_rewards() {
  // @@protoc_insertion_point(field_mutable_list:UserCfg.DailyShareGifts.rewards)
  return &rewards_;
}

// repeated .UserCfg.ExtraRewards extra = 2;
inline int DailyShareGifts::extra_size() const {
  return extra_.size();
}
inline void DailyShareGifts::clear_extra() {
  extra_.Clear();
}
inline const ::UserCfg::ExtraRewards& DailyShareGifts::extra(int index) const {
  // @@protoc_insertion_point(field_get:UserCfg.DailyShareGifts.extra)
  return extra_.Get(index);
}
inline ::UserCfg::ExtraRewards* DailyShareGifts::mutable_extra(int index) {
  // @@protoc_insertion_point(field_mutable:UserCfg.DailyShareGifts.extra)
  return extra_.Mutable(index);
}
inline ::UserCfg::ExtraRewards* DailyShareGifts::add_extra() {
  // @@protoc_insertion_point(field_add:UserCfg.DailyShareGifts.extra)
  return extra_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::UserCfg::ExtraRewards >&
DailyShareGifts::extra() const {
  // @@protoc_insertion_point(field_list:UserCfg.DailyShareGifts.extra)
  return extra_;
}
inline ::google::protobuf::RepeatedPtrField< ::UserCfg::ExtraRewards >*
DailyShareGifts::mutable_extra() {
  // @@protoc_insertion_point(field_mutable_list:UserCfg.DailyShareGifts.extra)
  return &extra_;
}

// -------------------------------------------------------------------

// SignInGifts

// required uint32 day = 1;
inline bool SignInGifts::has_day() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SignInGifts::set_has_day() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SignInGifts::clear_has_day() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SignInGifts::clear_day() {
  day_ = 0u;
  clear_has_day();
}
inline ::google::protobuf::uint32 SignInGifts::day() const {
  // @@protoc_insertion_point(field_get:UserCfg.SignInGifts.day)
  return day_;
}
inline void SignInGifts::set_day(::google::protobuf::uint32 value) {
  set_has_day();
  day_ = value;
  // @@protoc_insertion_point(field_set:UserCfg.SignInGifts.day)
}

// repeated .CommonGiftConfig.CommonModifyItem prize = 2;
inline int SignInGifts::prize_size() const {
  return prize_.size();
}
inline void SignInGifts::clear_prize() {
  prize_.Clear();
}
inline const ::CommonGiftConfig::CommonModifyItem& SignInGifts::prize(int index) const {
  // @@protoc_insertion_point(field_get:UserCfg.SignInGifts.prize)
  return prize_.Get(index);
}
inline ::CommonGiftConfig::CommonModifyItem* SignInGifts::mutable_prize(int index) {
  // @@protoc_insertion_point(field_mutable:UserCfg.SignInGifts.prize)
  return prize_.Mutable(index);
}
inline ::CommonGiftConfig::CommonModifyItem* SignInGifts::add_prize() {
  // @@protoc_insertion_point(field_add:UserCfg.SignInGifts.prize)
  return prize_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CommonGiftConfig::CommonModifyItem >&
SignInGifts::prize() const {
  // @@protoc_insertion_point(field_list:UserCfg.SignInGifts.prize)
  return prize_;
}
inline ::google::protobuf::RepeatedPtrField< ::CommonGiftConfig::CommonModifyItem >*
SignInGifts::mutable_prize() {
  // @@protoc_insertion_point(field_mutable_list:UserCfg.SignInGifts.prize)
  return &prize_;
}

// -------------------------------------------------------------------

// CoinPurchase

// required uint32 id = 1;
inline bool CoinPurchase::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CoinPurchase::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CoinPurchase::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CoinPurchase::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 CoinPurchase::id() const {
  // @@protoc_insertion_point(field_get:UserCfg.CoinPurchase.id)
  return id_;
}
inline void CoinPurchase::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:UserCfg.CoinPurchase.id)
}

// required .CommonGiftConfig.CommonModifyItem cost = 2;
inline bool CoinPurchase::has_cost() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CoinPurchase::set_has_cost() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CoinPurchase::clear_has_cost() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CoinPurchase::clear_cost() {
  if (cost_ != NULL) cost_->::CommonGiftConfig::CommonModifyItem::Clear();
  clear_has_cost();
}
inline const ::CommonGiftConfig::CommonModifyItem& CoinPurchase::cost() const {
  // @@protoc_insertion_point(field_get:UserCfg.CoinPurchase.cost)
  return cost_ != NULL ? *cost_ : *default_instance_->cost_;
}
inline ::CommonGiftConfig::CommonModifyItem* CoinPurchase::mutable_cost() {
  set_has_cost();
  if (cost_ == NULL) cost_ = new ::CommonGiftConfig::CommonModifyItem;
  // @@protoc_insertion_point(field_mutable:UserCfg.CoinPurchase.cost)
  return cost_;
}
inline ::CommonGiftConfig::CommonModifyItem* CoinPurchase::release_cost() {
  clear_has_cost();
  ::CommonGiftConfig::CommonModifyItem* temp = cost_;
  cost_ = NULL;
  return temp;
}
inline void CoinPurchase::set_allocated_cost(::CommonGiftConfig::CommonModifyItem* cost) {
  delete cost_;
  cost_ = cost;
  if (cost) {
    set_has_cost();
  } else {
    clear_has_cost();
  }
  // @@protoc_insertion_point(field_set_allocated:UserCfg.CoinPurchase.cost)
}

// required .CommonGiftConfig.CommonModifyItem reward = 3;
inline bool CoinPurchase::has_reward() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CoinPurchase::set_has_reward() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CoinPurchase::clear_has_reward() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CoinPurchase::clear_reward() {
  if (reward_ != NULL) reward_->::CommonGiftConfig::CommonModifyItem::Clear();
  clear_has_reward();
}
inline const ::CommonGiftConfig::CommonModifyItem& CoinPurchase::reward() const {
  // @@protoc_insertion_point(field_get:UserCfg.CoinPurchase.reward)
  return reward_ != NULL ? *reward_ : *default_instance_->reward_;
}
inline ::CommonGiftConfig::CommonModifyItem* CoinPurchase::mutable_reward() {
  set_has_reward();
  if (reward_ == NULL) reward_ = new ::CommonGiftConfig::CommonModifyItem;
  // @@protoc_insertion_point(field_mutable:UserCfg.CoinPurchase.reward)
  return reward_;
}
inline ::CommonGiftConfig::CommonModifyItem* CoinPurchase::release_reward() {
  clear_has_reward();
  ::CommonGiftConfig::CommonModifyItem* temp = reward_;
  reward_ = NULL;
  return temp;
}
inline void CoinPurchase::set_allocated_reward(::CommonGiftConfig::CommonModifyItem* reward) {
  delete reward_;
  reward_ = reward;
  if (reward) {
    set_has_reward();
  } else {
    clear_has_reward();
  }
  // @@protoc_insertion_point(field_set_allocated:UserCfg.CoinPurchase.reward)
}

// -------------------------------------------------------------------

// FairySpeedUp

// required uint32 level = 1;
inline bool FairySpeedUp::has_level() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FairySpeedUp::set_has_level() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FairySpeedUp::clear_has_level() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FairySpeedUp::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 FairySpeedUp::level() const {
  // @@protoc_insertion_point(field_get:UserCfg.FairySpeedUp.level)
  return level_;
}
inline void FairySpeedUp::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:UserCfg.FairySpeedUp.level)
}

// required float cropRate = 2;
inline bool FairySpeedUp::has_croprate() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FairySpeedUp::set_has_croprate() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FairySpeedUp::clear_has_croprate() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FairySpeedUp::clear_croprate() {
  croprate_ = 0;
  clear_has_croprate();
}
inline float FairySpeedUp::croprate() const {
  // @@protoc_insertion_point(field_get:UserCfg.FairySpeedUp.cropRate)
  return croprate_;
}
inline void FairySpeedUp::set_croprate(float value) {
  set_has_croprate();
  croprate_ = value;
  // @@protoc_insertion_point(field_set:UserCfg.FairySpeedUp.cropRate)
}

// required float equipRate = 3;
inline bool FairySpeedUp::has_equiprate() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void FairySpeedUp::set_has_equiprate() {
  _has_bits_[0] |= 0x00000004u;
}
inline void FairySpeedUp::clear_has_equiprate() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void FairySpeedUp::clear_equiprate() {
  equiprate_ = 0;
  clear_has_equiprate();
}
inline float FairySpeedUp::equiprate() const {
  // @@protoc_insertion_point(field_get:UserCfg.FairySpeedUp.equipRate)
  return equiprate_;
}
inline void FairySpeedUp::set_equiprate(float value) {
  set_has_equiprate();
  equiprate_ = value;
  // @@protoc_insertion_point(field_set:UserCfg.FairySpeedUp.equipRate)
}

// required float farmRate = 4;
inline bool FairySpeedUp::has_farmrate() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void FairySpeedUp::set_has_farmrate() {
  _has_bits_[0] |= 0x00000008u;
}
inline void FairySpeedUp::clear_has_farmrate() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void FairySpeedUp::clear_farmrate() {
  farmrate_ = 0;
  clear_has_farmrate();
}
inline float FairySpeedUp::farmrate() const {
  // @@protoc_insertion_point(field_get:UserCfg.FairySpeedUp.farmRate)
  return farmrate_;
}
inline void FairySpeedUp::set_farmrate(float value) {
  set_has_farmrate();
  farmrate_ = value;
  // @@protoc_insertion_point(field_set:UserCfg.FairySpeedUp.farmRate)
}

// -------------------------------------------------------------------

// NewUserGuideShareCPP

// required uint32 id = 1;
inline bool NewUserGuideShareCPP::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NewUserGuideShareCPP::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NewUserGuideShareCPP::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NewUserGuideShareCPP::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 NewUserGuideShareCPP::id() const {
  // @@protoc_insertion_point(field_get:UserCfg.NewUserGuideShareCPP.id)
  return id_;
}
inline void NewUserGuideShareCPP::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:UserCfg.NewUserGuideShareCPP.id)
}

// required .CommonGiftConfig.CommonModifyItem reward = 2;
inline bool NewUserGuideShareCPP::has_reward() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void NewUserGuideShareCPP::set_has_reward() {
  _has_bits_[0] |= 0x00000002u;
}
inline void NewUserGuideShareCPP::clear_has_reward() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void NewUserGuideShareCPP::clear_reward() {
  if (reward_ != NULL) reward_->::CommonGiftConfig::CommonModifyItem::Clear();
  clear_has_reward();
}
inline const ::CommonGiftConfig::CommonModifyItem& NewUserGuideShareCPP::reward() const {
  // @@protoc_insertion_point(field_get:UserCfg.NewUserGuideShareCPP.reward)
  return reward_ != NULL ? *reward_ : *default_instance_->reward_;
}
inline ::CommonGiftConfig::CommonModifyItem* NewUserGuideShareCPP::mutable_reward() {
  set_has_reward();
  if (reward_ == NULL) reward_ = new ::CommonGiftConfig::CommonModifyItem;
  // @@protoc_insertion_point(field_mutable:UserCfg.NewUserGuideShareCPP.reward)
  return reward_;
}
inline ::CommonGiftConfig::CommonModifyItem* NewUserGuideShareCPP::release_reward() {
  clear_has_reward();
  ::CommonGiftConfig::CommonModifyItem* temp = reward_;
  reward_ = NULL;
  return temp;
}
inline void NewUserGuideShareCPP::set_allocated_reward(::CommonGiftConfig::CommonModifyItem* reward) {
  delete reward_;
  reward_ = reward;
  if (reward) {
    set_has_reward();
  } else {
    clear_has_reward();
  }
  // @@protoc_insertion_point(field_set_allocated:UserCfg.NewUserGuideShareCPP.reward)
}

// -------------------------------------------------------------------

// XMUserReward

// required bytes reward = 1;
inline bool XMUserReward::has_reward() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void XMUserReward::set_has_reward() {
  _has_bits_[0] |= 0x00000001u;
}
inline void XMUserReward::clear_has_reward() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void XMUserReward::clear_reward() {
  if (reward_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    reward_->clear();
  }
  clear_has_reward();
}
inline const ::std::string& XMUserReward::reward() const {
  // @@protoc_insertion_point(field_get:UserCfg.XMUserReward.reward)
  return *reward_;
}
inline void XMUserReward::set_reward(const ::std::string& value) {
  set_has_reward();
  if (reward_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    reward_ = new ::std::string;
  }
  reward_->assign(value);
  // @@protoc_insertion_point(field_set:UserCfg.XMUserReward.reward)
}
inline void XMUserReward::set_reward(const char* value) {
  set_has_reward();
  if (reward_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    reward_ = new ::std::string;
  }
  reward_->assign(value);
  // @@protoc_insertion_point(field_set_char:UserCfg.XMUserReward.reward)
}
inline void XMUserReward::set_reward(const void* value, size_t size) {
  set_has_reward();
  if (reward_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    reward_ = new ::std::string;
  }
  reward_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:UserCfg.XMUserReward.reward)
}
inline ::std::string* XMUserReward::mutable_reward() {
  set_has_reward();
  if (reward_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    reward_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:UserCfg.XMUserReward.reward)
  return reward_;
}
inline ::std::string* XMUserReward::release_reward() {
  clear_has_reward();
  if (reward_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = reward_;
    reward_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void XMUserReward::set_allocated_reward(::std::string* reward) {
  if (reward_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete reward_;
  }
  if (reward) {
    set_has_reward();
    reward_ = reward;
  } else {
    clear_has_reward();
    reward_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:UserCfg.XMUserReward.reward)
}

// optional bytes content = 2;
inline bool XMUserReward::has_content() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void XMUserReward::set_has_content() {
  _has_bits_[0] |= 0x00000002u;
}
inline void XMUserReward::clear_has_content() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void XMUserReward::clear_content() {
  if (content_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    content_->clear();
  }
  clear_has_content();
}
inline const ::std::string& XMUserReward::content() const {
  // @@protoc_insertion_point(field_get:UserCfg.XMUserReward.content)
  return *content_;
}
inline void XMUserReward::set_content(const ::std::string& value) {
  set_has_content();
  if (content_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    content_ = new ::std::string;
  }
  content_->assign(value);
  // @@protoc_insertion_point(field_set:UserCfg.XMUserReward.content)
}
inline void XMUserReward::set_content(const char* value) {
  set_has_content();
  if (content_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    content_ = new ::std::string;
  }
  content_->assign(value);
  // @@protoc_insertion_point(field_set_char:UserCfg.XMUserReward.content)
}
inline void XMUserReward::set_content(const void* value, size_t size) {
  set_has_content();
  if (content_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    content_ = new ::std::string;
  }
  content_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:UserCfg.XMUserReward.content)
}
inline ::std::string* XMUserReward::mutable_content() {
  set_has_content();
  if (content_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    content_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:UserCfg.XMUserReward.content)
  return content_;
}
inline ::std::string* XMUserReward::release_content() {
  clear_has_content();
  if (content_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = content_;
    content_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void XMUserReward::set_allocated_content(::std::string* content) {
  if (content_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete content_;
  }
  if (content) {
    set_has_content();
    content_ = content;
  } else {
    clear_has_content();
    content_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:UserCfg.XMUserReward.content)
}

// -------------------------------------------------------------------

// XMUserRewardCfg

// required bytes MailTitle = 1;
inline bool XMUserRewardCfg::has_mailtitle() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void XMUserRewardCfg::set_has_mailtitle() {
  _has_bits_[0] |= 0x00000001u;
}
inline void XMUserRewardCfg::clear_has_mailtitle() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void XMUserRewardCfg::clear_mailtitle() {
  if (mailtitle_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    mailtitle_->clear();
  }
  clear_has_mailtitle();
}
inline const ::std::string& XMUserRewardCfg::mailtitle() const {
  // @@protoc_insertion_point(field_get:UserCfg.XMUserRewardCfg.MailTitle)
  return *mailtitle_;
}
inline void XMUserRewardCfg::set_mailtitle(const ::std::string& value) {
  set_has_mailtitle();
  if (mailtitle_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    mailtitle_ = new ::std::string;
  }
  mailtitle_->assign(value);
  // @@protoc_insertion_point(field_set:UserCfg.XMUserRewardCfg.MailTitle)
}
inline void XMUserRewardCfg::set_mailtitle(const char* value) {
  set_has_mailtitle();
  if (mailtitle_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    mailtitle_ = new ::std::string;
  }
  mailtitle_->assign(value);
  // @@protoc_insertion_point(field_set_char:UserCfg.XMUserRewardCfg.MailTitle)
}
inline void XMUserRewardCfg::set_mailtitle(const void* value, size_t size) {
  set_has_mailtitle();
  if (mailtitle_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    mailtitle_ = new ::std::string;
  }
  mailtitle_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:UserCfg.XMUserRewardCfg.MailTitle)
}
inline ::std::string* XMUserRewardCfg::mutable_mailtitle() {
  set_has_mailtitle();
  if (mailtitle_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    mailtitle_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:UserCfg.XMUserRewardCfg.MailTitle)
  return mailtitle_;
}
inline ::std::string* XMUserRewardCfg::release_mailtitle() {
  clear_has_mailtitle();
  if (mailtitle_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = mailtitle_;
    mailtitle_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void XMUserRewardCfg::set_allocated_mailtitle(::std::string* mailtitle) {
  if (mailtitle_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete mailtitle_;
  }
  if (mailtitle) {
    set_has_mailtitle();
    mailtitle_ = mailtitle;
  } else {
    clear_has_mailtitle();
    mailtitle_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:UserCfg.XMUserRewardCfg.MailTitle)
}

// required bytes FirstMailMsg = 2;
inline bool XMUserRewardCfg::has_firstmailmsg() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void XMUserRewardCfg::set_has_firstmailmsg() {
  _has_bits_[0] |= 0x00000002u;
}
inline void XMUserRewardCfg::clear_has_firstmailmsg() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void XMUserRewardCfg::clear_firstmailmsg() {
  if (firstmailmsg_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    firstmailmsg_->clear();
  }
  clear_has_firstmailmsg();
}
inline const ::std::string& XMUserRewardCfg::firstmailmsg() const {
  // @@protoc_insertion_point(field_get:UserCfg.XMUserRewardCfg.FirstMailMsg)
  return *firstmailmsg_;
}
inline void XMUserRewardCfg::set_firstmailmsg(const ::std::string& value) {
  set_has_firstmailmsg();
  if (firstmailmsg_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    firstmailmsg_ = new ::std::string;
  }
  firstmailmsg_->assign(value);
  // @@protoc_insertion_point(field_set:UserCfg.XMUserRewardCfg.FirstMailMsg)
}
inline void XMUserRewardCfg::set_firstmailmsg(const char* value) {
  set_has_firstmailmsg();
  if (firstmailmsg_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    firstmailmsg_ = new ::std::string;
  }
  firstmailmsg_->assign(value);
  // @@protoc_insertion_point(field_set_char:UserCfg.XMUserRewardCfg.FirstMailMsg)
}
inline void XMUserRewardCfg::set_firstmailmsg(const void* value, size_t size) {
  set_has_firstmailmsg();
  if (firstmailmsg_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    firstmailmsg_ = new ::std::string;
  }
  firstmailmsg_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:UserCfg.XMUserRewardCfg.FirstMailMsg)
}
inline ::std::string* XMUserRewardCfg::mutable_firstmailmsg() {
  set_has_firstmailmsg();
  if (firstmailmsg_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    firstmailmsg_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:UserCfg.XMUserRewardCfg.FirstMailMsg)
  return firstmailmsg_;
}
inline ::std::string* XMUserRewardCfg::release_firstmailmsg() {
  clear_has_firstmailmsg();
  if (firstmailmsg_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = firstmailmsg_;
    firstmailmsg_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void XMUserRewardCfg::set_allocated_firstmailmsg(::std::string* firstmailmsg) {
  if (firstmailmsg_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete firstmailmsg_;
  }
  if (firstmailmsg) {
    set_has_firstmailmsg();
    firstmailmsg_ = firstmailmsg;
  } else {
    clear_has_firstmailmsg();
    firstmailmsg_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:UserCfg.XMUserRewardCfg.FirstMailMsg)
}

// required bytes FirstChargeMailMsg = 3;
inline bool XMUserRewardCfg::has_firstchargemailmsg() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void XMUserRewardCfg::set_has_firstchargemailmsg() {
  _has_bits_[0] |= 0x00000004u;
}
inline void XMUserRewardCfg::clear_has_firstchargemailmsg() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void XMUserRewardCfg::clear_firstchargemailmsg() {
  if (firstchargemailmsg_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    firstchargemailmsg_->clear();
  }
  clear_has_firstchargemailmsg();
}
inline const ::std::string& XMUserRewardCfg::firstchargemailmsg() const {
  // @@protoc_insertion_point(field_get:UserCfg.XMUserRewardCfg.FirstChargeMailMsg)
  return *firstchargemailmsg_;
}
inline void XMUserRewardCfg::set_firstchargemailmsg(const ::std::string& value) {
  set_has_firstchargemailmsg();
  if (firstchargemailmsg_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    firstchargemailmsg_ = new ::std::string;
  }
  firstchargemailmsg_->assign(value);
  // @@protoc_insertion_point(field_set:UserCfg.XMUserRewardCfg.FirstChargeMailMsg)
}
inline void XMUserRewardCfg::set_firstchargemailmsg(const char* value) {
  set_has_firstchargemailmsg();
  if (firstchargemailmsg_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    firstchargemailmsg_ = new ::std::string;
  }
  firstchargemailmsg_->assign(value);
  // @@protoc_insertion_point(field_set_char:UserCfg.XMUserRewardCfg.FirstChargeMailMsg)
}
inline void XMUserRewardCfg::set_firstchargemailmsg(const void* value, size_t size) {
  set_has_firstchargemailmsg();
  if (firstchargemailmsg_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    firstchargemailmsg_ = new ::std::string;
  }
  firstchargemailmsg_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:UserCfg.XMUserRewardCfg.FirstChargeMailMsg)
}
inline ::std::string* XMUserRewardCfg::mutable_firstchargemailmsg() {
  set_has_firstchargemailmsg();
  if (firstchargemailmsg_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    firstchargemailmsg_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:UserCfg.XMUserRewardCfg.FirstChargeMailMsg)
  return firstchargemailmsg_;
}
inline ::std::string* XMUserRewardCfg::release_firstchargemailmsg() {
  clear_has_firstchargemailmsg();
  if (firstchargemailmsg_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = firstchargemailmsg_;
    firstchargemailmsg_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void XMUserRewardCfg::set_allocated_firstchargemailmsg(::std::string* firstchargemailmsg) {
  if (firstchargemailmsg_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete firstchargemailmsg_;
  }
  if (firstchargemailmsg) {
    set_has_firstchargemailmsg();
    firstchargemailmsg_ = firstchargemailmsg;
  } else {
    clear_has_firstchargemailmsg();
    firstchargemailmsg_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:UserCfg.XMUserRewardCfg.FirstChargeMailMsg)
}

// repeated .UserCfg.XMUserReward RewardDiamondCnt = 4;
inline int XMUserRewardCfg::rewarddiamondcnt_size() const {
  return rewarddiamondcnt_.size();
}
inline void XMUserRewardCfg::clear_rewarddiamondcnt() {
  rewarddiamondcnt_.Clear();
}
inline const ::UserCfg::XMUserReward& XMUserRewardCfg::rewarddiamondcnt(int index) const {
  // @@protoc_insertion_point(field_get:UserCfg.XMUserRewardCfg.RewardDiamondCnt)
  return rewarddiamondcnt_.Get(index);
}
inline ::UserCfg::XMUserReward* XMUserRewardCfg::mutable_rewarddiamondcnt(int index) {
  // @@protoc_insertion_point(field_mutable:UserCfg.XMUserRewardCfg.RewardDiamondCnt)
  return rewarddiamondcnt_.Mutable(index);
}
inline ::UserCfg::XMUserReward* XMUserRewardCfg::add_rewarddiamondcnt() {
  // @@protoc_insertion_point(field_add:UserCfg.XMUserRewardCfg.RewardDiamondCnt)
  return rewarddiamondcnt_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::UserCfg::XMUserReward >&
XMUserRewardCfg::rewarddiamondcnt() const {
  // @@protoc_insertion_point(field_list:UserCfg.XMUserRewardCfg.RewardDiamondCnt)
  return rewarddiamondcnt_;
}
inline ::google::protobuf::RepeatedPtrField< ::UserCfg::XMUserReward >*
XMUserRewardCfg::mutable_rewarddiamondcnt() {
  // @@protoc_insertion_point(field_mutable_list:UserCfg.XMUserRewardCfg.RewardDiamondCnt)
  return &rewarddiamondcnt_;
}

// -------------------------------------------------------------------

// CostDiamondCfg

// required .CommonGiftConfig.CommonModifyItem xianren_open_cost = 1;
inline bool CostDiamondCfg::has_xianren_open_cost() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CostDiamondCfg::set_has_xianren_open_cost() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CostDiamondCfg::clear_has_xianren_open_cost() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CostDiamondCfg::clear_xianren_open_cost() {
  if (xianren_open_cost_ != NULL) xianren_open_cost_->::CommonGiftConfig::CommonModifyItem::Clear();
  clear_has_xianren_open_cost();
}
inline const ::CommonGiftConfig::CommonModifyItem& CostDiamondCfg::xianren_open_cost() const {
  // @@protoc_insertion_point(field_get:UserCfg.CostDiamondCfg.xianren_open_cost)
  return xianren_open_cost_ != NULL ? *xianren_open_cost_ : *default_instance_->xianren_open_cost_;
}
inline ::CommonGiftConfig::CommonModifyItem* CostDiamondCfg::mutable_xianren_open_cost() {
  set_has_xianren_open_cost();
  if (xianren_open_cost_ == NULL) xianren_open_cost_ = new ::CommonGiftConfig::CommonModifyItem;
  // @@protoc_insertion_point(field_mutable:UserCfg.CostDiamondCfg.xianren_open_cost)
  return xianren_open_cost_;
}
inline ::CommonGiftConfig::CommonModifyItem* CostDiamondCfg::release_xianren_open_cost() {
  clear_has_xianren_open_cost();
  ::CommonGiftConfig::CommonModifyItem* temp = xianren_open_cost_;
  xianren_open_cost_ = NULL;
  return temp;
}
inline void CostDiamondCfg::set_allocated_xianren_open_cost(::CommonGiftConfig::CommonModifyItem* xianren_open_cost) {
  delete xianren_open_cost_;
  xianren_open_cost_ = xianren_open_cost;
  if (xianren_open_cost) {
    set_has_xianren_open_cost();
  } else {
    clear_has_xianren_open_cost();
  }
  // @@protoc_insertion_point(field_set_allocated:UserCfg.CostDiamondCfg.xianren_open_cost)
}

// required .CommonGiftConfig.CommonModifyItem zhushou_open_cost = 2;
inline bool CostDiamondCfg::has_zhushou_open_cost() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CostDiamondCfg::set_has_zhushou_open_cost() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CostDiamondCfg::clear_has_zhushou_open_cost() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CostDiamondCfg::clear_zhushou_open_cost() {
  if (zhushou_open_cost_ != NULL) zhushou_open_cost_->::CommonGiftConfig::CommonModifyItem::Clear();
  clear_has_zhushou_open_cost();
}
inline const ::CommonGiftConfig::CommonModifyItem& CostDiamondCfg::zhushou_open_cost() const {
  // @@protoc_insertion_point(field_get:UserCfg.CostDiamondCfg.zhushou_open_cost)
  return zhushou_open_cost_ != NULL ? *zhushou_open_cost_ : *default_instance_->zhushou_open_cost_;
}
inline ::CommonGiftConfig::CommonModifyItem* CostDiamondCfg::mutable_zhushou_open_cost() {
  set_has_zhushou_open_cost();
  if (zhushou_open_cost_ == NULL) zhushou_open_cost_ = new ::CommonGiftConfig::CommonModifyItem;
  // @@protoc_insertion_point(field_mutable:UserCfg.CostDiamondCfg.zhushou_open_cost)
  return zhushou_open_cost_;
}
inline ::CommonGiftConfig::CommonModifyItem* CostDiamondCfg::release_zhushou_open_cost() {
  clear_has_zhushou_open_cost();
  ::CommonGiftConfig::CommonModifyItem* temp = zhushou_open_cost_;
  zhushou_open_cost_ = NULL;
  return temp;
}
inline void CostDiamondCfg::set_allocated_zhushou_open_cost(::CommonGiftConfig::CommonModifyItem* zhushou_open_cost) {
  delete zhushou_open_cost_;
  zhushou_open_cost_ = zhushou_open_cost;
  if (zhushou_open_cost) {
    set_has_zhushou_open_cost();
  } else {
    clear_has_zhushou_open_cost();
  }
  // @@protoc_insertion_point(field_set_allocated:UserCfg.CostDiamondCfg.zhushou_open_cost)
}

// required .CommonGiftConfig.CommonModifyItem daocaoren_open_cost = 3;
inline bool CostDiamondCfg::has_daocaoren_open_cost() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CostDiamondCfg::set_has_daocaoren_open_cost() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CostDiamondCfg::clear_has_daocaoren_open_cost() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CostDiamondCfg::clear_daocaoren_open_cost() {
  if (daocaoren_open_cost_ != NULL) daocaoren_open_cost_->::CommonGiftConfig::CommonModifyItem::Clear();
  clear_has_daocaoren_open_cost();
}
inline const ::CommonGiftConfig::CommonModifyItem& CostDiamondCfg::daocaoren_open_cost() const {
  // @@protoc_insertion_point(field_get:UserCfg.CostDiamondCfg.daocaoren_open_cost)
  return daocaoren_open_cost_ != NULL ? *daocaoren_open_cost_ : *default_instance_->daocaoren_open_cost_;
}
inline ::CommonGiftConfig::CommonModifyItem* CostDiamondCfg::mutable_daocaoren_open_cost() {
  set_has_daocaoren_open_cost();
  if (daocaoren_open_cost_ == NULL) daocaoren_open_cost_ = new ::CommonGiftConfig::CommonModifyItem;
  // @@protoc_insertion_point(field_mutable:UserCfg.CostDiamondCfg.daocaoren_open_cost)
  return daocaoren_open_cost_;
}
inline ::CommonGiftConfig::CommonModifyItem* CostDiamondCfg::release_daocaoren_open_cost() {
  clear_has_daocaoren_open_cost();
  ::CommonGiftConfig::CommonModifyItem* temp = daocaoren_open_cost_;
  daocaoren_open_cost_ = NULL;
  return temp;
}
inline void CostDiamondCfg::set_allocated_daocaoren_open_cost(::CommonGiftConfig::CommonModifyItem* daocaoren_open_cost) {
  delete daocaoren_open_cost_;
  daocaoren_open_cost_ = daocaoren_open_cost;
  if (daocaoren_open_cost) {
    set_has_daocaoren_open_cost();
  } else {
    clear_has_daocaoren_open_cost();
  }
  // @@protoc_insertion_point(field_set_allocated:UserCfg.CostDiamondCfg.daocaoren_open_cost)
}

// -------------------------------------------------------------------

// User

// required .UserCfg.UserBase user_init = 1;
inline bool User::has_user_init() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void User::set_has_user_init() {
  _has_bits_[0] |= 0x00000001u;
}
inline void User::clear_has_user_init() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void User::clear_user_init() {
  if (user_init_ != NULL) user_init_->::UserCfg::UserBase::Clear();
  clear_has_user_init();
}
inline const ::UserCfg::UserBase& User::user_init() const {
  // @@protoc_insertion_point(field_get:UserCfg.User.user_init)
  return user_init_ != NULL ? *user_init_ : *default_instance_->user_init_;
}
inline ::UserCfg::UserBase* User::mutable_user_init() {
  set_has_user_init();
  if (user_init_ == NULL) user_init_ = new ::UserCfg::UserBase;
  // @@protoc_insertion_point(field_mutable:UserCfg.User.user_init)
  return user_init_;
}
inline ::UserCfg::UserBase* User::release_user_init() {
  clear_has_user_init();
  ::UserCfg::UserBase* temp = user_init_;
  user_init_ = NULL;
  return temp;
}
inline void User::set_allocated_user_init(::UserCfg::UserBase* user_init) {
  delete user_init_;
  user_init_ = user_init;
  if (user_init) {
    set_has_user_init();
  } else {
    clear_has_user_init();
  }
  // @@protoc_insertion_point(field_set_allocated:UserCfg.User.user_init)
}

// repeated uint64 user_exp = 2;
inline int User::user_exp_size() const {
  return user_exp_.size();
}
inline void User::clear_user_exp() {
  user_exp_.Clear();
}
inline ::google::protobuf::uint64 User::user_exp(int index) const {
  // @@protoc_insertion_point(field_get:UserCfg.User.user_exp)
  return user_exp_.Get(index);
}
inline void User::set_user_exp(int index, ::google::protobuf::uint64 value) {
  user_exp_.Set(index, value);
  // @@protoc_insertion_point(field_set:UserCfg.User.user_exp)
}
inline void User::add_user_exp(::google::protobuf::uint64 value) {
  user_exp_.Add(value);
  // @@protoc_insertion_point(field_add:UserCfg.User.user_exp)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
User::user_exp() const {
  // @@protoc_insertion_point(field_list:UserCfg.User.user_exp)
  return user_exp_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
User::mutable_user_exp() {
  // @@protoc_insertion_point(field_mutable_list:UserCfg.User.user_exp)
  return &user_exp_;
}

// repeated .UserCfg.Build builds = 3;
inline int User::builds_size() const {
  return builds_.size();
}
inline void User::clear_builds() {
  builds_.Clear();
}
inline const ::UserCfg::Build& User::builds(int index) const {
  // @@protoc_insertion_point(field_get:UserCfg.User.builds)
  return builds_.Get(index);
}
inline ::UserCfg::Build* User::mutable_builds(int index) {
  // @@protoc_insertion_point(field_mutable:UserCfg.User.builds)
  return builds_.Mutable(index);
}
inline ::UserCfg::Build* User::add_builds() {
  // @@protoc_insertion_point(field_add:UserCfg.User.builds)
  return builds_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::UserCfg::Build >&
User::builds() const {
  // @@protoc_insertion_point(field_list:UserCfg.User.builds)
  return builds_;
}
inline ::google::protobuf::RepeatedPtrField< ::UserCfg::Build >*
User::mutable_builds() {
  // @@protoc_insertion_point(field_mutable_list:UserCfg.User.builds)
  return &builds_;
}

// required .CommonGiftConfig.CommonModifyItem initprops = 4;
inline bool User::has_initprops() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void User::set_has_initprops() {
  _has_bits_[0] |= 0x00000008u;
}
inline void User::clear_has_initprops() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void User::clear_initprops() {
  if (initprops_ != NULL) initprops_->::CommonGiftConfig::CommonModifyItem::Clear();
  clear_has_initprops();
}
inline const ::CommonGiftConfig::CommonModifyItem& User::initprops() const {
  // @@protoc_insertion_point(field_get:UserCfg.User.initprops)
  return initprops_ != NULL ? *initprops_ : *default_instance_->initprops_;
}
inline ::CommonGiftConfig::CommonModifyItem* User::mutable_initprops() {
  set_has_initprops();
  if (initprops_ == NULL) initprops_ = new ::CommonGiftConfig::CommonModifyItem;
  // @@protoc_insertion_point(field_mutable:UserCfg.User.initprops)
  return initprops_;
}
inline ::CommonGiftConfig::CommonModifyItem* User::release_initprops() {
  clear_has_initprops();
  ::CommonGiftConfig::CommonModifyItem* temp = initprops_;
  initprops_ = NULL;
  return temp;
}
inline void User::set_allocated_initprops(::CommonGiftConfig::CommonModifyItem* initprops) {
  delete initprops_;
  initprops_ = initprops;
  if (initprops) {
    set_has_initprops();
  } else {
    clear_has_initprops();
  }
  // @@protoc_insertion_point(field_set_allocated:UserCfg.User.initprops)
}

// repeated .UserCfg.CriticalInfo criticalPoint = 5;
inline int User::criticalpoint_size() const {
  return criticalpoint_.size();
}
inline void User::clear_criticalpoint() {
  criticalpoint_.Clear();
}
inline const ::UserCfg::CriticalInfo& User::criticalpoint(int index) const {
  // @@protoc_insertion_point(field_get:UserCfg.User.criticalPoint)
  return criticalpoint_.Get(index);
}
inline ::UserCfg::CriticalInfo* User::mutable_criticalpoint(int index) {
  // @@protoc_insertion_point(field_mutable:UserCfg.User.criticalPoint)
  return criticalpoint_.Mutable(index);
}
inline ::UserCfg::CriticalInfo* User::add_criticalpoint() {
  // @@protoc_insertion_point(field_add:UserCfg.User.criticalPoint)
  return criticalpoint_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::UserCfg::CriticalInfo >&
User::criticalpoint() const {
  // @@protoc_insertion_point(field_list:UserCfg.User.criticalPoint)
  return criticalpoint_;
}
inline ::google::protobuf::RepeatedPtrField< ::UserCfg::CriticalInfo >*
User::mutable_criticalpoint() {
  // @@protoc_insertion_point(field_mutable_list:UserCfg.User.criticalPoint)
  return &criticalpoint_;
}

// required .UserCfg.DailyShareGifts sharegift = 6;
inline bool User::has_sharegift() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void User::set_has_sharegift() {
  _has_bits_[0] |= 0x00000020u;
}
inline void User::clear_has_sharegift() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void User::clear_sharegift() {
  if (sharegift_ != NULL) sharegift_->::UserCfg::DailyShareGifts::Clear();
  clear_has_sharegift();
}
inline const ::UserCfg::DailyShareGifts& User::sharegift() const {
  // @@protoc_insertion_point(field_get:UserCfg.User.sharegift)
  return sharegift_ != NULL ? *sharegift_ : *default_instance_->sharegift_;
}
inline ::UserCfg::DailyShareGifts* User::mutable_sharegift() {
  set_has_sharegift();
  if (sharegift_ == NULL) sharegift_ = new ::UserCfg::DailyShareGifts;
  // @@protoc_insertion_point(field_mutable:UserCfg.User.sharegift)
  return sharegift_;
}
inline ::UserCfg::DailyShareGifts* User::release_sharegift() {
  clear_has_sharegift();
  ::UserCfg::DailyShareGifts* temp = sharegift_;
  sharegift_ = NULL;
  return temp;
}
inline void User::set_allocated_sharegift(::UserCfg::DailyShareGifts* sharegift) {
  delete sharegift_;
  sharegift_ = sharegift;
  if (sharegift) {
    set_has_sharegift();
  } else {
    clear_has_sharegift();
  }
  // @@protoc_insertion_point(field_set_allocated:UserCfg.User.sharegift)
}

// repeated .UserCfg.CoinPurchase coinpurchase = 7;
inline int User::coinpurchase_size() const {
  return coinpurchase_.size();
}
inline void User::clear_coinpurchase() {
  coinpurchase_.Clear();
}
inline const ::UserCfg::CoinPurchase& User::coinpurchase(int index) const {
  // @@protoc_insertion_point(field_get:UserCfg.User.coinpurchase)
  return coinpurchase_.Get(index);
}
inline ::UserCfg::CoinPurchase* User::mutable_coinpurchase(int index) {
  // @@protoc_insertion_point(field_mutable:UserCfg.User.coinpurchase)
  return coinpurchase_.Mutable(index);
}
inline ::UserCfg::CoinPurchase* User::add_coinpurchase() {
  // @@protoc_insertion_point(field_add:UserCfg.User.coinpurchase)
  return coinpurchase_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::UserCfg::CoinPurchase >&
User::coinpurchase() const {
  // @@protoc_insertion_point(field_list:UserCfg.User.coinpurchase)
  return coinpurchase_;
}
inline ::google::protobuf::RepeatedPtrField< ::UserCfg::CoinPurchase >*
User::mutable_coinpurchase() {
  // @@protoc_insertion_point(field_mutable_list:UserCfg.User.coinpurchase)
  return &coinpurchase_;
}

// repeated .UserCfg.SignInGifts SignIn = 8;
inline int User::signin_size() const {
  return signin_.size();
}
inline void User::clear_signin() {
  signin_.Clear();
}
inline const ::UserCfg::SignInGifts& User::signin(int index) const {
  // @@protoc_insertion_point(field_get:UserCfg.User.SignIn)
  return signin_.Get(index);
}
inline ::UserCfg::SignInGifts* User::mutable_signin(int index) {
  // @@protoc_insertion_point(field_mutable:UserCfg.User.SignIn)
  return signin_.Mutable(index);
}
inline ::UserCfg::SignInGifts* User::add_signin() {
  // @@protoc_insertion_point(field_add:UserCfg.User.SignIn)
  return signin_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::UserCfg::SignInGifts >&
User::signin() const {
  // @@protoc_insertion_point(field_list:UserCfg.User.SignIn)
  return signin_;
}
inline ::google::protobuf::RepeatedPtrField< ::UserCfg::SignInGifts >*
User::mutable_signin() {
  // @@protoc_insertion_point(field_mutable_list:UserCfg.User.SignIn)
  return &signin_;
}

// required .UserCfg.FairySpeedUp fairySpeedUp = 9;
inline bool User::has_fairyspeedup() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void User::set_has_fairyspeedup() {
  _has_bits_[0] |= 0x00000100u;
}
inline void User::clear_has_fairyspeedup() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void User::clear_fairyspeedup() {
  if (fairyspeedup_ != NULL) fairyspeedup_->::UserCfg::FairySpeedUp::Clear();
  clear_has_fairyspeedup();
}
inline const ::UserCfg::FairySpeedUp& User::fairyspeedup() const {
  // @@protoc_insertion_point(field_get:UserCfg.User.fairySpeedUp)
  return fairyspeedup_ != NULL ? *fairyspeedup_ : *default_instance_->fairyspeedup_;
}
inline ::UserCfg::FairySpeedUp* User::mutable_fairyspeedup() {
  set_has_fairyspeedup();
  if (fairyspeedup_ == NULL) fairyspeedup_ = new ::UserCfg::FairySpeedUp;
  // @@protoc_insertion_point(field_mutable:UserCfg.User.fairySpeedUp)
  return fairyspeedup_;
}
inline ::UserCfg::FairySpeedUp* User::release_fairyspeedup() {
  clear_has_fairyspeedup();
  ::UserCfg::FairySpeedUp* temp = fairyspeedup_;
  fairyspeedup_ = NULL;
  return temp;
}
inline void User::set_allocated_fairyspeedup(::UserCfg::FairySpeedUp* fairyspeedup) {
  delete fairyspeedup_;
  fairyspeedup_ = fairyspeedup;
  if (fairyspeedup) {
    set_has_fairyspeedup();
  } else {
    clear_has_fairyspeedup();
  }
  // @@protoc_insertion_point(field_set_allocated:UserCfg.User.fairySpeedUp)
}

// repeated .UserCfg.NewUserGuideShareCPP newUserGuideShare = 10;
inline int User::newuserguideshare_size() const {
  return newuserguideshare_.size();
}
inline void User::clear_newuserguideshare() {
  newuserguideshare_.Clear();
}
inline const ::UserCfg::NewUserGuideShareCPP& User::newuserguideshare(int index) const {
  // @@protoc_insertion_point(field_get:UserCfg.User.newUserGuideShare)
  return newuserguideshare_.Get(index);
}
inline ::UserCfg::NewUserGuideShareCPP* User::mutable_newuserguideshare(int index) {
  // @@protoc_insertion_point(field_mutable:UserCfg.User.newUserGuideShare)
  return newuserguideshare_.Mutable(index);
}
inline ::UserCfg::NewUserGuideShareCPP* User::add_newuserguideshare() {
  // @@protoc_insertion_point(field_add:UserCfg.User.newUserGuideShare)
  return newuserguideshare_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::UserCfg::NewUserGuideShareCPP >&
User::newuserguideshare() const {
  // @@protoc_insertion_point(field_list:UserCfg.User.newUserGuideShare)
  return newuserguideshare_;
}
inline ::google::protobuf::RepeatedPtrField< ::UserCfg::NewUserGuideShareCPP >*
User::mutable_newuserguideshare() {
  // @@protoc_insertion_point(field_mutable_list:UserCfg.User.newUserGuideShare)
  return &newuserguideshare_;
}

// required .UserCfg.XMUserRewardCfg xmUserReward = 11;
inline bool User::has_xmuserreward() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void User::set_has_xmuserreward() {
  _has_bits_[0] |= 0x00000400u;
}
inline void User::clear_has_xmuserreward() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void User::clear_xmuserreward() {
  if (xmuserreward_ != NULL) xmuserreward_->::UserCfg::XMUserRewardCfg::Clear();
  clear_has_xmuserreward();
}
inline const ::UserCfg::XMUserRewardCfg& User::xmuserreward() const {
  // @@protoc_insertion_point(field_get:UserCfg.User.xmUserReward)
  return xmuserreward_ != NULL ? *xmuserreward_ : *default_instance_->xmuserreward_;
}
inline ::UserCfg::XMUserRewardCfg* User::mutable_xmuserreward() {
  set_has_xmuserreward();
  if (xmuserreward_ == NULL) xmuserreward_ = new ::UserCfg::XMUserRewardCfg;
  // @@protoc_insertion_point(field_mutable:UserCfg.User.xmUserReward)
  return xmuserreward_;
}
inline ::UserCfg::XMUserRewardCfg* User::release_xmuserreward() {
  clear_has_xmuserreward();
  ::UserCfg::XMUserRewardCfg* temp = xmuserreward_;
  xmuserreward_ = NULL;
  return temp;
}
inline void User::set_allocated_xmuserreward(::UserCfg::XMUserRewardCfg* xmuserreward) {
  delete xmuserreward_;
  xmuserreward_ = xmuserreward;
  if (xmuserreward) {
    set_has_xmuserreward();
  } else {
    clear_has_xmuserreward();
  }
  // @@protoc_insertion_point(field_set_allocated:UserCfg.User.xmUserReward)
}

// required .UserCfg.CostDiamondCfg diamondCost = 12;
inline bool User::has_diamondcost() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void User::set_has_diamondcost() {
  _has_bits_[0] |= 0x00000800u;
}
inline void User::clear_has_diamondcost() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void User::clear_diamondcost() {
  if (diamondcost_ != NULL) diamondcost_->::UserCfg::CostDiamondCfg::Clear();
  clear_has_diamondcost();
}
inline const ::UserCfg::CostDiamondCfg& User::diamondcost() const {
  // @@protoc_insertion_point(field_get:UserCfg.User.diamondCost)
  return diamondcost_ != NULL ? *diamondcost_ : *default_instance_->diamondcost_;
}
inline ::UserCfg::CostDiamondCfg* User::mutable_diamondcost() {
  set_has_diamondcost();
  if (diamondcost_ == NULL) diamondcost_ = new ::UserCfg::CostDiamondCfg;
  // @@protoc_insertion_point(field_mutable:UserCfg.User.diamondCost)
  return diamondcost_;
}
inline ::UserCfg::CostDiamondCfg* User::release_diamondcost() {
  clear_has_diamondcost();
  ::UserCfg::CostDiamondCfg* temp = diamondcost_;
  diamondcost_ = NULL;
  return temp;
}
inline void User::set_allocated_diamondcost(::UserCfg::CostDiamondCfg* diamondcost) {
  delete diamondcost_;
  diamondcost_ = diamondcost;
  if (diamondcost) {
    set_has_diamondcost();
  } else {
    clear_has_diamondcost();
  }
  // @@protoc_insertion_point(field_set_allocated:UserCfg.User.diamondCost)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace UserCfg

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_UserConfig_2eproto__INCLUDED
