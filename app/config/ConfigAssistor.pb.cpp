// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ConfigAssistor.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "ConfigAssistor.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace ConfigAssistor {

namespace {

const ::google::protobuf::Descriptor* Grade_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Grade_reflection_ = NULL;
const ::google::protobuf::Descriptor* Assistor_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Assistor_reflection_ = NULL;
const ::google::protobuf::Descriptor* AssistCfg_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AssistCfg_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_ConfigAssistor_2eproto() {
  protobuf_AddDesc_ConfigAssistor_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "ConfigAssistor.proto");
  GOOGLE_CHECK(file != NULL);
  Grade_descriptor_ = file->message_type(0);
  static const int Grade_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Grade, times_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Grade, cash_),
  };
  Grade_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Grade_descriptor_,
      Grade::default_instance_,
      Grade_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Grade, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Grade, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Grade));
  Assistor_descriptor_ = file->message_type(1);
  static const int Assistor_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Assistor, level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Assistor, num_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Assistor, cdts_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Assistor, grades_),
  };
  Assistor_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Assistor_descriptor_,
      Assistor::default_instance_,
      Assistor_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Assistor, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Assistor, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Assistor));
  AssistCfg_descriptor_ = file->message_type(2);
  static const int AssistCfg_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AssistCfg, assistinfo_),
  };
  AssistCfg_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      AssistCfg_descriptor_,
      AssistCfg::default_instance_,
      AssistCfg_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AssistCfg, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AssistCfg, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(AssistCfg));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_ConfigAssistor_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Grade_descriptor_, &Grade::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Assistor_descriptor_, &Assistor::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    AssistCfg_descriptor_, &AssistCfg::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_ConfigAssistor_2eproto() {
  delete Grade::default_instance_;
  delete Grade_reflection_;
  delete Assistor::default_instance_;
  delete Assistor_reflection_;
  delete AssistCfg::default_instance_;
  delete AssistCfg_reflection_;
}

void protobuf_AddDesc_ConfigAssistor_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\024ConfigAssistor.proto\022\016ConfigAssistor\"$"
    "\n\005Grade\022\r\n\005times\030\001 \002(\r\022\014\n\004cash\030\002 \002(\r\"[\n\010"
    "Assistor\022\r\n\005level\030\001 \002(\r\022\013\n\003num\030\002 \002(\r\022\014\n\004"
    "cdTs\030\003 \002(\r\022%\n\006grades\030\004 \003(\0132\025.ConfigAssis"
    "tor.Grade\"9\n\tAssistCfg\022,\n\nassistInfo\030\001 \002"
    "(\0132\030.ConfigAssistor.Assistor", 228);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "ConfigAssistor.proto", &protobuf_RegisterTypes);
  Grade::default_instance_ = new Grade();
  Assistor::default_instance_ = new Assistor();
  AssistCfg::default_instance_ = new AssistCfg();
  Grade::default_instance_->InitAsDefaultInstance();
  Assistor::default_instance_->InitAsDefaultInstance();
  AssistCfg::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_ConfigAssistor_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_ConfigAssistor_2eproto {
  StaticDescriptorInitializer_ConfigAssistor_2eproto() {
    protobuf_AddDesc_ConfigAssistor_2eproto();
  }
} static_descriptor_initializer_ConfigAssistor_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int Grade::kTimesFieldNumber;
const int Grade::kCashFieldNumber;
#endif  // !_MSC_VER

Grade::Grade()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ConfigAssistor.Grade)
}

void Grade::InitAsDefaultInstance() {
}

Grade::Grade(const Grade& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ConfigAssistor.Grade)
}

void Grade::SharedCtor() {
  _cached_size_ = 0;
  times_ = 0u;
  cash_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Grade::~Grade() {
  // @@protoc_insertion_point(destructor:ConfigAssistor.Grade)
  SharedDtor();
}

void Grade::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Grade::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Grade::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Grade_descriptor_;
}

const Grade& Grade::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ConfigAssistor_2eproto();
  return *default_instance_;
}

Grade* Grade::default_instance_ = NULL;

Grade* Grade::New() const {
  return new Grade;
}

void Grade::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<Grade*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(times_, cash_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Grade::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ConfigAssistor.Grade)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 times = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &times_)));
          set_has_times();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_cash;
        break;
      }

      // required uint32 cash = 2;
      case 2: {
        if (tag == 16) {
         parse_cash:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &cash_)));
          set_has_cash();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ConfigAssistor.Grade)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ConfigAssistor.Grade)
  return false;
#undef DO_
}

void Grade::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ConfigAssistor.Grade)
  // required uint32 times = 1;
  if (has_times()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->times(), output);
  }

  // required uint32 cash = 2;
  if (has_cash()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->cash(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ConfigAssistor.Grade)
}

::google::protobuf::uint8* Grade::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ConfigAssistor.Grade)
  // required uint32 times = 1;
  if (has_times()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->times(), target);
  }

  // required uint32 cash = 2;
  if (has_cash()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->cash(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ConfigAssistor.Grade)
  return target;
}

int Grade::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 times = 1;
    if (has_times()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->times());
    }

    // required uint32 cash = 2;
    if (has_cash()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->cash());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Grade::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Grade* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Grade*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Grade::MergeFrom(const Grade& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_times()) {
      set_times(from.times());
    }
    if (from.has_cash()) {
      set_cash(from.cash());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Grade::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Grade::CopyFrom(const Grade& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Grade::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void Grade::Swap(Grade* other) {
  if (other != this) {
    std::swap(times_, other->times_);
    std::swap(cash_, other->cash_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Grade::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Grade_descriptor_;
  metadata.reflection = Grade_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Assistor::kLevelFieldNumber;
const int Assistor::kNumFieldNumber;
const int Assistor::kCdTsFieldNumber;
const int Assistor::kGradesFieldNumber;
#endif  // !_MSC_VER

Assistor::Assistor()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ConfigAssistor.Assistor)
}

void Assistor::InitAsDefaultInstance() {
}

Assistor::Assistor(const Assistor& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ConfigAssistor.Assistor)
}

void Assistor::SharedCtor() {
  _cached_size_ = 0;
  level_ = 0u;
  num_ = 0u;
  cdts_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Assistor::~Assistor() {
  // @@protoc_insertion_point(destructor:ConfigAssistor.Assistor)
  SharedDtor();
}

void Assistor::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Assistor::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Assistor::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Assistor_descriptor_;
}

const Assistor& Assistor::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ConfigAssistor_2eproto();
  return *default_instance_;
}

Assistor* Assistor::default_instance_ = NULL;

Assistor* Assistor::New() const {
  return new Assistor;
}

void Assistor::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<Assistor*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 7) {
    ZR_(level_, num_);
    cdts_ = 0u;
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  grades_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Assistor::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ConfigAssistor.Assistor)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 level = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &level_)));
          set_has_level();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_num;
        break;
      }

      // required uint32 num = 2;
      case 2: {
        if (tag == 16) {
         parse_num:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &num_)));
          set_has_num();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_cdTs;
        break;
      }

      // required uint32 cdTs = 3;
      case 3: {
        if (tag == 24) {
         parse_cdTs:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &cdts_)));
          set_has_cdts();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_grades;
        break;
      }

      // repeated .ConfigAssistor.Grade grades = 4;
      case 4: {
        if (tag == 34) {
         parse_grades:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_grades()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_grades;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ConfigAssistor.Assistor)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ConfigAssistor.Assistor)
  return false;
#undef DO_
}

void Assistor::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ConfigAssistor.Assistor)
  // required uint32 level = 1;
  if (has_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->level(), output);
  }

  // required uint32 num = 2;
  if (has_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->num(), output);
  }

  // required uint32 cdTs = 3;
  if (has_cdts()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->cdts(), output);
  }

  // repeated .ConfigAssistor.Grade grades = 4;
  for (int i = 0; i < this->grades_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->grades(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ConfigAssistor.Assistor)
}

::google::protobuf::uint8* Assistor::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ConfigAssistor.Assistor)
  // required uint32 level = 1;
  if (has_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->level(), target);
  }

  // required uint32 num = 2;
  if (has_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->num(), target);
  }

  // required uint32 cdTs = 3;
  if (has_cdts()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->cdts(), target);
  }

  // repeated .ConfigAssistor.Grade grades = 4;
  for (int i = 0; i < this->grades_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->grades(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ConfigAssistor.Assistor)
  return target;
}

int Assistor::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 level = 1;
    if (has_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->level());
    }

    // required uint32 num = 2;
    if (has_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->num());
    }

    // required uint32 cdTs = 3;
    if (has_cdts()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->cdts());
    }

  }
  // repeated .ConfigAssistor.Grade grades = 4;
  total_size += 1 * this->grades_size();
  for (int i = 0; i < this->grades_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->grades(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Assistor::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Assistor* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Assistor*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Assistor::MergeFrom(const Assistor& from) {
  GOOGLE_CHECK_NE(&from, this);
  grades_.MergeFrom(from.grades_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_level()) {
      set_level(from.level());
    }
    if (from.has_num()) {
      set_num(from.num());
    }
    if (from.has_cdts()) {
      set_cdts(from.cdts());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Assistor::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Assistor::CopyFrom(const Assistor& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Assistor::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  if (!::google::protobuf::internal::AllAreInitialized(this->grades())) return false;
  return true;
}

void Assistor::Swap(Assistor* other) {
  if (other != this) {
    std::swap(level_, other->level_);
    std::swap(num_, other->num_);
    std::swap(cdts_, other->cdts_);
    grades_.Swap(&other->grades_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Assistor::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Assistor_descriptor_;
  metadata.reflection = Assistor_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int AssistCfg::kAssistInfoFieldNumber;
#endif  // !_MSC_VER

AssistCfg::AssistCfg()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ConfigAssistor.AssistCfg)
}

void AssistCfg::InitAsDefaultInstance() {
  assistinfo_ = const_cast< ::ConfigAssistor::Assistor*>(&::ConfigAssistor::Assistor::default_instance());
}

AssistCfg::AssistCfg(const AssistCfg& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ConfigAssistor.AssistCfg)
}

void AssistCfg::SharedCtor() {
  _cached_size_ = 0;
  assistinfo_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

AssistCfg::~AssistCfg() {
  // @@protoc_insertion_point(destructor:ConfigAssistor.AssistCfg)
  SharedDtor();
}

void AssistCfg::SharedDtor() {
  if (this != default_instance_) {
    delete assistinfo_;
  }
}

void AssistCfg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AssistCfg::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AssistCfg_descriptor_;
}

const AssistCfg& AssistCfg::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ConfigAssistor_2eproto();
  return *default_instance_;
}

AssistCfg* AssistCfg::default_instance_ = NULL;

AssistCfg* AssistCfg::New() const {
  return new AssistCfg;
}

void AssistCfg::Clear() {
  if (has_assistinfo()) {
    if (assistinfo_ != NULL) assistinfo_->::ConfigAssistor::Assistor::Clear();
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool AssistCfg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ConfigAssistor.AssistCfg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .ConfigAssistor.Assistor assistInfo = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_assistinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ConfigAssistor.AssistCfg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ConfigAssistor.AssistCfg)
  return false;
#undef DO_
}

void AssistCfg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ConfigAssistor.AssistCfg)
  // required .ConfigAssistor.Assistor assistInfo = 1;
  if (has_assistinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->assistinfo(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ConfigAssistor.AssistCfg)
}

::google::protobuf::uint8* AssistCfg::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ConfigAssistor.AssistCfg)
  // required .ConfigAssistor.Assistor assistInfo = 1;
  if (has_assistinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->assistinfo(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ConfigAssistor.AssistCfg)
  return target;
}

int AssistCfg::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .ConfigAssistor.Assistor assistInfo = 1;
    if (has_assistinfo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->assistinfo());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AssistCfg::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const AssistCfg* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const AssistCfg*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void AssistCfg::MergeFrom(const AssistCfg& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_assistinfo()) {
      mutable_assistinfo()->::ConfigAssistor::Assistor::MergeFrom(from.assistinfo());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void AssistCfg::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AssistCfg::CopyFrom(const AssistCfg& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AssistCfg::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (has_assistinfo()) {
    if (!this->assistinfo().IsInitialized()) return false;
  }
  return true;
}

void AssistCfg::Swap(AssistCfg* other) {
  if (other != this) {
    std::swap(assistinfo_, other->assistinfo_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata AssistCfg::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AssistCfg_descriptor_;
  metadata.reflection = AssistCfg_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace ConfigAssistor

// @@protoc_insertion_point(global_scope)
