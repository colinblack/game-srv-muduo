// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ConfigTheme.proto

#ifndef PROTOBUF_ConfigTheme_2eproto__INCLUDED
#define PROTOBUF_ConfigTheme_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "CommonGiftConfig.pb.h"
// @@protoc_insertion_point(includes)

namespace ConfigTheme {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_ConfigTheme_2eproto();
void protobuf_AssignDesc_ConfigTheme_2eproto();
void protobuf_ShutdownFile_ConfigTheme_2eproto();

class ThemeInfoItem;
class ThemeInfo;
class Conf;

// ===================================================================

class ThemeInfoItem : public ::google::protobuf::Message {
 public:
  ThemeInfoItem();
  virtual ~ThemeInfoItem();

  ThemeInfoItem(const ThemeInfoItem& from);

  inline ThemeInfoItem& operator=(const ThemeInfoItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ThemeInfoItem& default_instance();

  void Swap(ThemeInfoItem* other);

  // implements Message ----------------------------------------------

  ThemeInfoItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ThemeInfoItem& from);
  void MergeFrom(const ThemeInfoItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);

  // required .CommonGiftConfig.CommonModifyItem cost = 2;
  inline bool has_cost() const;
  inline void clear_cost();
  static const int kCostFieldNumber = 2;
  inline const ::CommonGiftConfig::CommonModifyItem& cost() const;
  inline ::CommonGiftConfig::CommonModifyItem* mutable_cost();
  inline ::CommonGiftConfig::CommonModifyItem* release_cost();
  inline void set_allocated_cost(::CommonGiftConfig::CommonModifyItem* cost);

  // @@protoc_insertion_point(class_scope:ConfigTheme.ThemeInfoItem)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_cost();
  inline void clear_has_cost();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::CommonGiftConfig::CommonModifyItem* cost_;
  ::google::protobuf::uint32 type_;
  friend void  protobuf_AddDesc_ConfigTheme_2eproto();
  friend void protobuf_AssignDesc_ConfigTheme_2eproto();
  friend void protobuf_ShutdownFile_ConfigTheme_2eproto();

  void InitAsDefaultInstance();
  static ThemeInfoItem* default_instance_;
};
// -------------------------------------------------------------------

class ThemeInfo : public ::google::protobuf::Message {
 public:
  ThemeInfo();
  virtual ~ThemeInfo();

  ThemeInfo(const ThemeInfo& from);

  inline ThemeInfo& operator=(const ThemeInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ThemeInfo& default_instance();

  void Swap(ThemeInfo* other);

  // implements Message ----------------------------------------------

  ThemeInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ThemeInfo& from);
  void MergeFrom(const ThemeInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 themeid = 1;
  inline bool has_themeid() const;
  inline void clear_themeid();
  static const int kThemeidFieldNumber = 1;
  inline ::google::protobuf::uint32 themeid() const;
  inline void set_themeid(::google::protobuf::uint32 value);

  // repeated .ConfigTheme.ThemeInfoItem item = 2;
  inline int item_size() const;
  inline void clear_item();
  static const int kItemFieldNumber = 2;
  inline const ::ConfigTheme::ThemeInfoItem& item(int index) const;
  inline ::ConfigTheme::ThemeInfoItem* mutable_item(int index);
  inline ::ConfigTheme::ThemeInfoItem* add_item();
  inline const ::google::protobuf::RepeatedPtrField< ::ConfigTheme::ThemeInfoItem >&
      item() const;
  inline ::google::protobuf::RepeatedPtrField< ::ConfigTheme::ThemeInfoItem >*
      mutable_item();

  // @@protoc_insertion_point(class_scope:ConfigTheme.ThemeInfo)
 private:
  inline void set_has_themeid();
  inline void clear_has_themeid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::ConfigTheme::ThemeInfoItem > item_;
  ::google::protobuf::uint32 themeid_;
  friend void  protobuf_AddDesc_ConfigTheme_2eproto();
  friend void protobuf_AssignDesc_ConfigTheme_2eproto();
  friend void protobuf_ShutdownFile_ConfigTheme_2eproto();

  void InitAsDefaultInstance();
  static ThemeInfo* default_instance_;
};
// -------------------------------------------------------------------

class Conf : public ::google::protobuf::Message {
 public:
  Conf();
  virtual ~Conf();

  Conf(const Conf& from);

  inline Conf& operator=(const Conf& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Conf& default_instance();

  void Swap(Conf* other);

  // implements Message ----------------------------------------------

  Conf* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Conf& from);
  void MergeFrom(const Conf& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .ConfigTheme.ThemeInfo theme = 1;
  inline int theme_size() const;
  inline void clear_theme();
  static const int kThemeFieldNumber = 1;
  inline const ::ConfigTheme::ThemeInfo& theme(int index) const;
  inline ::ConfigTheme::ThemeInfo* mutable_theme(int index);
  inline ::ConfigTheme::ThemeInfo* add_theme();
  inline const ::google::protobuf::RepeatedPtrField< ::ConfigTheme::ThemeInfo >&
      theme() const;
  inline ::google::protobuf::RepeatedPtrField< ::ConfigTheme::ThemeInfo >*
      mutable_theme();

  // @@protoc_insertion_point(class_scope:ConfigTheme.Conf)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::ConfigTheme::ThemeInfo > theme_;
  friend void  protobuf_AddDesc_ConfigTheme_2eproto();
  friend void protobuf_AssignDesc_ConfigTheme_2eproto();
  friend void protobuf_ShutdownFile_ConfigTheme_2eproto();

  void InitAsDefaultInstance();
  static Conf* default_instance_;
};
// ===================================================================


// ===================================================================

// ThemeInfoItem

// required uint32 type = 1;
inline bool ThemeInfoItem::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ThemeInfoItem::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ThemeInfoItem::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ThemeInfoItem::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 ThemeInfoItem::type() const {
  // @@protoc_insertion_point(field_get:ConfigTheme.ThemeInfoItem.type)
  return type_;
}
inline void ThemeInfoItem::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:ConfigTheme.ThemeInfoItem.type)
}

// required .CommonGiftConfig.CommonModifyItem cost = 2;
inline bool ThemeInfoItem::has_cost() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ThemeInfoItem::set_has_cost() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ThemeInfoItem::clear_has_cost() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ThemeInfoItem::clear_cost() {
  if (cost_ != NULL) cost_->::CommonGiftConfig::CommonModifyItem::Clear();
  clear_has_cost();
}
inline const ::CommonGiftConfig::CommonModifyItem& ThemeInfoItem::cost() const {
  // @@protoc_insertion_point(field_get:ConfigTheme.ThemeInfoItem.cost)
  return cost_ != NULL ? *cost_ : *default_instance_->cost_;
}
inline ::CommonGiftConfig::CommonModifyItem* ThemeInfoItem::mutable_cost() {
  set_has_cost();
  if (cost_ == NULL) cost_ = new ::CommonGiftConfig::CommonModifyItem;
  // @@protoc_insertion_point(field_mutable:ConfigTheme.ThemeInfoItem.cost)
  return cost_;
}
inline ::CommonGiftConfig::CommonModifyItem* ThemeInfoItem::release_cost() {
  clear_has_cost();
  ::CommonGiftConfig::CommonModifyItem* temp = cost_;
  cost_ = NULL;
  return temp;
}
inline void ThemeInfoItem::set_allocated_cost(::CommonGiftConfig::CommonModifyItem* cost) {
  delete cost_;
  cost_ = cost;
  if (cost) {
    set_has_cost();
  } else {
    clear_has_cost();
  }
  // @@protoc_insertion_point(field_set_allocated:ConfigTheme.ThemeInfoItem.cost)
}

// -------------------------------------------------------------------

// ThemeInfo

// required uint32 themeid = 1;
inline bool ThemeInfo::has_themeid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ThemeInfo::set_has_themeid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ThemeInfo::clear_has_themeid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ThemeInfo::clear_themeid() {
  themeid_ = 0u;
  clear_has_themeid();
}
inline ::google::protobuf::uint32 ThemeInfo::themeid() const {
  // @@protoc_insertion_point(field_get:ConfigTheme.ThemeInfo.themeid)
  return themeid_;
}
inline void ThemeInfo::set_themeid(::google::protobuf::uint32 value) {
  set_has_themeid();
  themeid_ = value;
  // @@protoc_insertion_point(field_set:ConfigTheme.ThemeInfo.themeid)
}

// repeated .ConfigTheme.ThemeInfoItem item = 2;
inline int ThemeInfo::item_size() const {
  return item_.size();
}
inline void ThemeInfo::clear_item() {
  item_.Clear();
}
inline const ::ConfigTheme::ThemeInfoItem& ThemeInfo::item(int index) const {
  // @@protoc_insertion_point(field_get:ConfigTheme.ThemeInfo.item)
  return item_.Get(index);
}
inline ::ConfigTheme::ThemeInfoItem* ThemeInfo::mutable_item(int index) {
  // @@protoc_insertion_point(field_mutable:ConfigTheme.ThemeInfo.item)
  return item_.Mutable(index);
}
inline ::ConfigTheme::ThemeInfoItem* ThemeInfo::add_item() {
  // @@protoc_insertion_point(field_add:ConfigTheme.ThemeInfo.item)
  return item_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ConfigTheme::ThemeInfoItem >&
ThemeInfo::item() const {
  // @@protoc_insertion_point(field_list:ConfigTheme.ThemeInfo.item)
  return item_;
}
inline ::google::protobuf::RepeatedPtrField< ::ConfigTheme::ThemeInfoItem >*
ThemeInfo::mutable_item() {
  // @@protoc_insertion_point(field_mutable_list:ConfigTheme.ThemeInfo.item)
  return &item_;
}

// -------------------------------------------------------------------

// Conf

// repeated .ConfigTheme.ThemeInfo theme = 1;
inline int Conf::theme_size() const {
  return theme_.size();
}
inline void Conf::clear_theme() {
  theme_.Clear();
}
inline const ::ConfigTheme::ThemeInfo& Conf::theme(int index) const {
  // @@protoc_insertion_point(field_get:ConfigTheme.Conf.theme)
  return theme_.Get(index);
}
inline ::ConfigTheme::ThemeInfo* Conf::mutable_theme(int index) {
  // @@protoc_insertion_point(field_mutable:ConfigTheme.Conf.theme)
  return theme_.Mutable(index);
}
inline ::ConfigTheme::ThemeInfo* Conf::add_theme() {
  // @@protoc_insertion_point(field_add:ConfigTheme.Conf.theme)
  return theme_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ConfigTheme::ThemeInfo >&
Conf::theme() const {
  // @@protoc_insertion_point(field_list:ConfigTheme.Conf.theme)
  return theme_;
}
inline ::google::protobuf::RepeatedPtrField< ::ConfigTheme::ThemeInfo >*
Conf::mutable_theme() {
  // @@protoc_insertion_point(field_mutable_list:ConfigTheme.Conf.theme)
  return &theme_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace ConfigTheme

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_ConfigTheme_2eproto__INCLUDED
