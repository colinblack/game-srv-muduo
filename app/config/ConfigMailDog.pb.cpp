// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ConfigMailDog.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "ConfigMailDog.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace ConfigMailDog {

namespace {

const ::google::protobuf::Descriptor* MailDogInfoCPP_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MailDogInfoCPP_reflection_ = NULL;
const ::google::protobuf::Descriptor* ProsperityInfoCPP_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ProsperityInfoCPP_reflection_ = NULL;
const ::google::protobuf::Descriptor* MailDogInfoCfg_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MailDogInfoCfg_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_ConfigMailDog_2eproto() {
  protobuf_AddDesc_ConfigMailDog_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "ConfigMailDog.proto");
  GOOGLE_CHECK(file != NULL);
  MailDogInfoCPP_descriptor_ = file->message_type(0);
  static const int MailDogInfoCPP_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MailDogInfoCPP, unlocklevel_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MailDogInfoCPP, staticid_),
  };
  MailDogInfoCPP_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MailDogInfoCPP_descriptor_,
      MailDogInfoCPP::default_instance_,
      MailDogInfoCPP_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MailDogInfoCPP, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MailDogInfoCPP, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MailDogInfoCPP));
  ProsperityInfoCPP_descriptor_ = file->message_type(1);
  static const int ProsperityInfoCPP_offsets_[8] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProsperityInfoCPP, buildk_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProsperityInfoCPP, croplandk_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProsperityInfoCPP, buildbase_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProsperityInfoCPP, prosperitybase_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProsperityInfoCPP, maxhourdiff_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProsperityInfoCPP, firstrewardhours_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProsperityInfoCPP, rewardbase_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProsperityInfoCPP, cointoexp_),
  };
  ProsperityInfoCPP_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ProsperityInfoCPP_descriptor_,
      ProsperityInfoCPP::default_instance_,
      ProsperityInfoCPP_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProsperityInfoCPP, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProsperityInfoCPP, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ProsperityInfoCPP));
  MailDogInfoCfg_descriptor_ = file->message_type(2);
  static const int MailDogInfoCfg_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MailDogInfoCfg, maildog_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MailDogInfoCfg, prosperity_),
  };
  MailDogInfoCfg_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MailDogInfoCfg_descriptor_,
      MailDogInfoCfg::default_instance_,
      MailDogInfoCfg_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MailDogInfoCfg, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MailDogInfoCfg, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MailDogInfoCfg));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_ConfigMailDog_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MailDogInfoCPP_descriptor_, &MailDogInfoCPP::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ProsperityInfoCPP_descriptor_, &ProsperityInfoCPP::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MailDogInfoCfg_descriptor_, &MailDogInfoCfg::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_ConfigMailDog_2eproto() {
  delete MailDogInfoCPP::default_instance_;
  delete MailDogInfoCPP_reflection_;
  delete ProsperityInfoCPP::default_instance_;
  delete ProsperityInfoCPP_reflection_;
  delete MailDogInfoCfg::default_instance_;
  delete MailDogInfoCfg_reflection_;
}

void protobuf_AddDesc_ConfigMailDog_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\023ConfigMailDog.proto\022\rConfigMailDog\"7\n\016"
    "MailDogInfoCPP\022\023\n\013unlockLevel\030\001 \002(\r\022\020\n\010s"
    "taticId\030\002 \003(\r\"\267\001\n\021ProsperityInfoCPP\022\016\n\006b"
    "uildK\030\001 \002(\r\022\021\n\tcroplandK\030\002 \002(\r\022\021\n\tbuildb"
    "ase\030\003 \002(\r\022\026\n\016prosperitybase\030\004 \002(\r\022\023\n\013max"
    "hourdiff\030\005 \002(\r\022\030\n\020firstrewardhours\030\006 \002(\r"
    "\022\022\n\nrewardbase\030\007 \002(\r\022\021\n\tcointoexp\030\010 \003(\r\""
    "v\n\016MailDogInfoCfg\022.\n\007maildog\030\001 \002(\0132\035.Con"
    "figMailDog.MailDogInfoCPP\0224\n\nprosperity\030"
    "\002 \002(\0132 .ConfigMailDog.ProsperityInfoCPP", 399);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "ConfigMailDog.proto", &protobuf_RegisterTypes);
  MailDogInfoCPP::default_instance_ = new MailDogInfoCPP();
  ProsperityInfoCPP::default_instance_ = new ProsperityInfoCPP();
  MailDogInfoCfg::default_instance_ = new MailDogInfoCfg();
  MailDogInfoCPP::default_instance_->InitAsDefaultInstance();
  ProsperityInfoCPP::default_instance_->InitAsDefaultInstance();
  MailDogInfoCfg::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_ConfigMailDog_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_ConfigMailDog_2eproto {
  StaticDescriptorInitializer_ConfigMailDog_2eproto() {
    protobuf_AddDesc_ConfigMailDog_2eproto();
  }
} static_descriptor_initializer_ConfigMailDog_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int MailDogInfoCPP::kUnlockLevelFieldNumber;
const int MailDogInfoCPP::kStaticIdFieldNumber;
#endif  // !_MSC_VER

MailDogInfoCPP::MailDogInfoCPP()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ConfigMailDog.MailDogInfoCPP)
}

void MailDogInfoCPP::InitAsDefaultInstance() {
}

MailDogInfoCPP::MailDogInfoCPP(const MailDogInfoCPP& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ConfigMailDog.MailDogInfoCPP)
}

void MailDogInfoCPP::SharedCtor() {
  _cached_size_ = 0;
  unlocklevel_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MailDogInfoCPP::~MailDogInfoCPP() {
  // @@protoc_insertion_point(destructor:ConfigMailDog.MailDogInfoCPP)
  SharedDtor();
}

void MailDogInfoCPP::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MailDogInfoCPP::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MailDogInfoCPP::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MailDogInfoCPP_descriptor_;
}

const MailDogInfoCPP& MailDogInfoCPP::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ConfigMailDog_2eproto();
  return *default_instance_;
}

MailDogInfoCPP* MailDogInfoCPP::default_instance_ = NULL;

MailDogInfoCPP* MailDogInfoCPP::New() const {
  return new MailDogInfoCPP;
}

void MailDogInfoCPP::Clear() {
  unlocklevel_ = 0u;
  staticid_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MailDogInfoCPP::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ConfigMailDog.MailDogInfoCPP)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 unlockLevel = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &unlocklevel_)));
          set_has_unlocklevel();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_staticId;
        break;
      }

      // repeated uint32 staticId = 2;
      case 2: {
        if (tag == 16) {
         parse_staticId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 16, input, this->mutable_staticid())));
        } else if (tag == 18) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_staticid())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_staticId;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ConfigMailDog.MailDogInfoCPP)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ConfigMailDog.MailDogInfoCPP)
  return false;
#undef DO_
}

void MailDogInfoCPP::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ConfigMailDog.MailDogInfoCPP)
  // required uint32 unlockLevel = 1;
  if (has_unlocklevel()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->unlocklevel(), output);
  }

  // repeated uint32 staticId = 2;
  for (int i = 0; i < this->staticid_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      2, this->staticid(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ConfigMailDog.MailDogInfoCPP)
}

::google::protobuf::uint8* MailDogInfoCPP::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ConfigMailDog.MailDogInfoCPP)
  // required uint32 unlockLevel = 1;
  if (has_unlocklevel()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->unlocklevel(), target);
  }

  // repeated uint32 staticId = 2;
  for (int i = 0; i < this->staticid_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(2, this->staticid(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ConfigMailDog.MailDogInfoCPP)
  return target;
}

int MailDogInfoCPP::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 unlockLevel = 1;
    if (has_unlocklevel()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->unlocklevel());
    }

  }
  // repeated uint32 staticId = 2;
  {
    int data_size = 0;
    for (int i = 0; i < this->staticid_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->staticid(i));
    }
    total_size += 1 * this->staticid_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MailDogInfoCPP::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MailDogInfoCPP* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MailDogInfoCPP*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MailDogInfoCPP::MergeFrom(const MailDogInfoCPP& from) {
  GOOGLE_CHECK_NE(&from, this);
  staticid_.MergeFrom(from.staticid_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_unlocklevel()) {
      set_unlocklevel(from.unlocklevel());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MailDogInfoCPP::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MailDogInfoCPP::CopyFrom(const MailDogInfoCPP& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MailDogInfoCPP::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void MailDogInfoCPP::Swap(MailDogInfoCPP* other) {
  if (other != this) {
    std::swap(unlocklevel_, other->unlocklevel_);
    staticid_.Swap(&other->staticid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MailDogInfoCPP::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MailDogInfoCPP_descriptor_;
  metadata.reflection = MailDogInfoCPP_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ProsperityInfoCPP::kBuildKFieldNumber;
const int ProsperityInfoCPP::kCroplandKFieldNumber;
const int ProsperityInfoCPP::kBuildbaseFieldNumber;
const int ProsperityInfoCPP::kProsperitybaseFieldNumber;
const int ProsperityInfoCPP::kMaxhourdiffFieldNumber;
const int ProsperityInfoCPP::kFirstrewardhoursFieldNumber;
const int ProsperityInfoCPP::kRewardbaseFieldNumber;
const int ProsperityInfoCPP::kCointoexpFieldNumber;
#endif  // !_MSC_VER

ProsperityInfoCPP::ProsperityInfoCPP()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ConfigMailDog.ProsperityInfoCPP)
}

void ProsperityInfoCPP::InitAsDefaultInstance() {
}

ProsperityInfoCPP::ProsperityInfoCPP(const ProsperityInfoCPP& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ConfigMailDog.ProsperityInfoCPP)
}

void ProsperityInfoCPP::SharedCtor() {
  _cached_size_ = 0;
  buildk_ = 0u;
  croplandk_ = 0u;
  buildbase_ = 0u;
  prosperitybase_ = 0u;
  maxhourdiff_ = 0u;
  firstrewardhours_ = 0u;
  rewardbase_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ProsperityInfoCPP::~ProsperityInfoCPP() {
  // @@protoc_insertion_point(destructor:ConfigMailDog.ProsperityInfoCPP)
  SharedDtor();
}

void ProsperityInfoCPP::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ProsperityInfoCPP::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ProsperityInfoCPP::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ProsperityInfoCPP_descriptor_;
}

const ProsperityInfoCPP& ProsperityInfoCPP::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ConfigMailDog_2eproto();
  return *default_instance_;
}

ProsperityInfoCPP* ProsperityInfoCPP::default_instance_ = NULL;

ProsperityInfoCPP* ProsperityInfoCPP::New() const {
  return new ProsperityInfoCPP;
}

void ProsperityInfoCPP::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<ProsperityInfoCPP*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 127) {
    ZR_(buildk_, firstrewardhours_);
    rewardbase_ = 0u;
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  cointoexp_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ProsperityInfoCPP::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ConfigMailDog.ProsperityInfoCPP)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 buildK = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &buildk_)));
          set_has_buildk();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_croplandK;
        break;
      }

      // required uint32 croplandK = 2;
      case 2: {
        if (tag == 16) {
         parse_croplandK:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &croplandk_)));
          set_has_croplandk();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_buildbase;
        break;
      }

      // required uint32 buildbase = 3;
      case 3: {
        if (tag == 24) {
         parse_buildbase:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &buildbase_)));
          set_has_buildbase();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_prosperitybase;
        break;
      }

      // required uint32 prosperitybase = 4;
      case 4: {
        if (tag == 32) {
         parse_prosperitybase:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &prosperitybase_)));
          set_has_prosperitybase();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_maxhourdiff;
        break;
      }

      // required uint32 maxhourdiff = 5;
      case 5: {
        if (tag == 40) {
         parse_maxhourdiff:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &maxhourdiff_)));
          set_has_maxhourdiff();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_firstrewardhours;
        break;
      }

      // required uint32 firstrewardhours = 6;
      case 6: {
        if (tag == 48) {
         parse_firstrewardhours:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &firstrewardhours_)));
          set_has_firstrewardhours();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_rewardbase;
        break;
      }

      // required uint32 rewardbase = 7;
      case 7: {
        if (tag == 56) {
         parse_rewardbase:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &rewardbase_)));
          set_has_rewardbase();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_cointoexp;
        break;
      }

      // repeated uint32 cointoexp = 8;
      case 8: {
        if (tag == 64) {
         parse_cointoexp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 64, input, this->mutable_cointoexp())));
        } else if (tag == 66) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_cointoexp())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_cointoexp;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ConfigMailDog.ProsperityInfoCPP)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ConfigMailDog.ProsperityInfoCPP)
  return false;
#undef DO_
}

void ProsperityInfoCPP::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ConfigMailDog.ProsperityInfoCPP)
  // required uint32 buildK = 1;
  if (has_buildk()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->buildk(), output);
  }

  // required uint32 croplandK = 2;
  if (has_croplandk()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->croplandk(), output);
  }

  // required uint32 buildbase = 3;
  if (has_buildbase()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->buildbase(), output);
  }

  // required uint32 prosperitybase = 4;
  if (has_prosperitybase()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->prosperitybase(), output);
  }

  // required uint32 maxhourdiff = 5;
  if (has_maxhourdiff()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->maxhourdiff(), output);
  }

  // required uint32 firstrewardhours = 6;
  if (has_firstrewardhours()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->firstrewardhours(), output);
  }

  // required uint32 rewardbase = 7;
  if (has_rewardbase()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->rewardbase(), output);
  }

  // repeated uint32 cointoexp = 8;
  for (int i = 0; i < this->cointoexp_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      8, this->cointoexp(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ConfigMailDog.ProsperityInfoCPP)
}

::google::protobuf::uint8* ProsperityInfoCPP::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ConfigMailDog.ProsperityInfoCPP)
  // required uint32 buildK = 1;
  if (has_buildk()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->buildk(), target);
  }

  // required uint32 croplandK = 2;
  if (has_croplandk()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->croplandk(), target);
  }

  // required uint32 buildbase = 3;
  if (has_buildbase()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->buildbase(), target);
  }

  // required uint32 prosperitybase = 4;
  if (has_prosperitybase()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->prosperitybase(), target);
  }

  // required uint32 maxhourdiff = 5;
  if (has_maxhourdiff()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->maxhourdiff(), target);
  }

  // required uint32 firstrewardhours = 6;
  if (has_firstrewardhours()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->firstrewardhours(), target);
  }

  // required uint32 rewardbase = 7;
  if (has_rewardbase()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->rewardbase(), target);
  }

  // repeated uint32 cointoexp = 8;
  for (int i = 0; i < this->cointoexp_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(8, this->cointoexp(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ConfigMailDog.ProsperityInfoCPP)
  return target;
}

int ProsperityInfoCPP::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 buildK = 1;
    if (has_buildk()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->buildk());
    }

    // required uint32 croplandK = 2;
    if (has_croplandk()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->croplandk());
    }

    // required uint32 buildbase = 3;
    if (has_buildbase()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->buildbase());
    }

    // required uint32 prosperitybase = 4;
    if (has_prosperitybase()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->prosperitybase());
    }

    // required uint32 maxhourdiff = 5;
    if (has_maxhourdiff()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->maxhourdiff());
    }

    // required uint32 firstrewardhours = 6;
    if (has_firstrewardhours()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->firstrewardhours());
    }

    // required uint32 rewardbase = 7;
    if (has_rewardbase()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->rewardbase());
    }

  }
  // repeated uint32 cointoexp = 8;
  {
    int data_size = 0;
    for (int i = 0; i < this->cointoexp_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->cointoexp(i));
    }
    total_size += 1 * this->cointoexp_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ProsperityInfoCPP::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ProsperityInfoCPP* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ProsperityInfoCPP*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ProsperityInfoCPP::MergeFrom(const ProsperityInfoCPP& from) {
  GOOGLE_CHECK_NE(&from, this);
  cointoexp_.MergeFrom(from.cointoexp_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_buildk()) {
      set_buildk(from.buildk());
    }
    if (from.has_croplandk()) {
      set_croplandk(from.croplandk());
    }
    if (from.has_buildbase()) {
      set_buildbase(from.buildbase());
    }
    if (from.has_prosperitybase()) {
      set_prosperitybase(from.prosperitybase());
    }
    if (from.has_maxhourdiff()) {
      set_maxhourdiff(from.maxhourdiff());
    }
    if (from.has_firstrewardhours()) {
      set_firstrewardhours(from.firstrewardhours());
    }
    if (from.has_rewardbase()) {
      set_rewardbase(from.rewardbase());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ProsperityInfoCPP::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProsperityInfoCPP::CopyFrom(const ProsperityInfoCPP& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProsperityInfoCPP::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000007f) != 0x0000007f) return false;

  return true;
}

void ProsperityInfoCPP::Swap(ProsperityInfoCPP* other) {
  if (other != this) {
    std::swap(buildk_, other->buildk_);
    std::swap(croplandk_, other->croplandk_);
    std::swap(buildbase_, other->buildbase_);
    std::swap(prosperitybase_, other->prosperitybase_);
    std::swap(maxhourdiff_, other->maxhourdiff_);
    std::swap(firstrewardhours_, other->firstrewardhours_);
    std::swap(rewardbase_, other->rewardbase_);
    cointoexp_.Swap(&other->cointoexp_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ProsperityInfoCPP::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ProsperityInfoCPP_descriptor_;
  metadata.reflection = ProsperityInfoCPP_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MailDogInfoCfg::kMaildogFieldNumber;
const int MailDogInfoCfg::kProsperityFieldNumber;
#endif  // !_MSC_VER

MailDogInfoCfg::MailDogInfoCfg()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ConfigMailDog.MailDogInfoCfg)
}

void MailDogInfoCfg::InitAsDefaultInstance() {
  maildog_ = const_cast< ::ConfigMailDog::MailDogInfoCPP*>(&::ConfigMailDog::MailDogInfoCPP::default_instance());
  prosperity_ = const_cast< ::ConfigMailDog::ProsperityInfoCPP*>(&::ConfigMailDog::ProsperityInfoCPP::default_instance());
}

MailDogInfoCfg::MailDogInfoCfg(const MailDogInfoCfg& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ConfigMailDog.MailDogInfoCfg)
}

void MailDogInfoCfg::SharedCtor() {
  _cached_size_ = 0;
  maildog_ = NULL;
  prosperity_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MailDogInfoCfg::~MailDogInfoCfg() {
  // @@protoc_insertion_point(destructor:ConfigMailDog.MailDogInfoCfg)
  SharedDtor();
}

void MailDogInfoCfg::SharedDtor() {
  if (this != default_instance_) {
    delete maildog_;
    delete prosperity_;
  }
}

void MailDogInfoCfg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MailDogInfoCfg::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MailDogInfoCfg_descriptor_;
}

const MailDogInfoCfg& MailDogInfoCfg::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ConfigMailDog_2eproto();
  return *default_instance_;
}

MailDogInfoCfg* MailDogInfoCfg::default_instance_ = NULL;

MailDogInfoCfg* MailDogInfoCfg::New() const {
  return new MailDogInfoCfg;
}

void MailDogInfoCfg::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    if (has_maildog()) {
      if (maildog_ != NULL) maildog_->::ConfigMailDog::MailDogInfoCPP::Clear();
    }
    if (has_prosperity()) {
      if (prosperity_ != NULL) prosperity_->::ConfigMailDog::ProsperityInfoCPP::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MailDogInfoCfg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ConfigMailDog.MailDogInfoCfg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .ConfigMailDog.MailDogInfoCPP maildog = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_maildog()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_prosperity;
        break;
      }

      // required .ConfigMailDog.ProsperityInfoCPP prosperity = 2;
      case 2: {
        if (tag == 18) {
         parse_prosperity:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_prosperity()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ConfigMailDog.MailDogInfoCfg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ConfigMailDog.MailDogInfoCfg)
  return false;
#undef DO_
}

void MailDogInfoCfg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ConfigMailDog.MailDogInfoCfg)
  // required .ConfigMailDog.MailDogInfoCPP maildog = 1;
  if (has_maildog()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->maildog(), output);
  }

  // required .ConfigMailDog.ProsperityInfoCPP prosperity = 2;
  if (has_prosperity()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->prosperity(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ConfigMailDog.MailDogInfoCfg)
}

::google::protobuf::uint8* MailDogInfoCfg::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ConfigMailDog.MailDogInfoCfg)
  // required .ConfigMailDog.MailDogInfoCPP maildog = 1;
  if (has_maildog()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->maildog(), target);
  }

  // required .ConfigMailDog.ProsperityInfoCPP prosperity = 2;
  if (has_prosperity()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->prosperity(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ConfigMailDog.MailDogInfoCfg)
  return target;
}

int MailDogInfoCfg::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .ConfigMailDog.MailDogInfoCPP maildog = 1;
    if (has_maildog()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->maildog());
    }

    // required .ConfigMailDog.ProsperityInfoCPP prosperity = 2;
    if (has_prosperity()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->prosperity());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MailDogInfoCfg::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MailDogInfoCfg* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MailDogInfoCfg*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MailDogInfoCfg::MergeFrom(const MailDogInfoCfg& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_maildog()) {
      mutable_maildog()->::ConfigMailDog::MailDogInfoCPP::MergeFrom(from.maildog());
    }
    if (from.has_prosperity()) {
      mutable_prosperity()->::ConfigMailDog::ProsperityInfoCPP::MergeFrom(from.prosperity());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MailDogInfoCfg::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MailDogInfoCfg::CopyFrom(const MailDogInfoCfg& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MailDogInfoCfg::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  if (has_maildog()) {
    if (!this->maildog().IsInitialized()) return false;
  }
  if (has_prosperity()) {
    if (!this->prosperity().IsInitialized()) return false;
  }
  return true;
}

void MailDogInfoCfg::Swap(MailDogInfoCfg* other) {
  if (other != this) {
    std::swap(maildog_, other->maildog_);
    std::swap(prosperity_, other->prosperity_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MailDogInfoCfg::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MailDogInfoCfg_descriptor_;
  metadata.reflection = MailDogInfoCfg_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace ConfigMailDog

// @@protoc_insertion_point(global_scope)
