// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ConfigShipping.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "ConfigShipping.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace ConfigShipping {

namespace {

const ::google::protobuf::Descriptor* BoxItems_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BoxItems_reflection_ = NULL;
const ::google::protobuf::Descriptor* RewardCoefficient_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RewardCoefficient_reflection_ = NULL;
const ::google::protobuf::Descriptor* Item_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Item_reflection_ = NULL;
const ::google::protobuf::Descriptor* LevelItem_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  LevelItem_reflection_ = NULL;
const ::google::protobuf::Descriptor* ShippingItem_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ShippingItem_reflection_ = NULL;
const ::google::protobuf::Descriptor* FullBoxPointCPP_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  FullBoxPointCPP_reflection_ = NULL;
const ::google::protobuf::Descriptor* Shipping_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Shipping_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_ConfigShipping_2eproto() {
  protobuf_AddDesc_ConfigShipping_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "ConfigShipping.proto");
  GOOGLE_CHECK(file != NULL);
  BoxItems_descriptor_ = file->message_type(0);
  static const int BoxItems_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BoxItems, badge_cond_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BoxItems, num_range_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BoxItems, view_ad_cnt_),
  };
  BoxItems_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      BoxItems_descriptor_,
      BoxItems::default_instance_,
      BoxItems_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BoxItems, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BoxItems, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(BoxItems));
  RewardCoefficient_descriptor_ = file->message_type(1);
  static const int RewardCoefficient_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RewardCoefficient, multiple_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RewardCoefficient, randomk_range_),
  };
  RewardCoefficient_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      RewardCoefficient_descriptor_,
      RewardCoefficient::default_instance_,
      RewardCoefficient_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RewardCoefficient, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RewardCoefficient, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(RewardCoefficient));
  Item_descriptor_ = file->message_type(2);
  static const int Item_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Item, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Item, count_),
  };
  Item_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Item_descriptor_,
      Item::default_instance_,
      Item_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Item, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Item, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Item));
  LevelItem_descriptor_ = file->message_type(3);
  static const int LevelItem_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LevelItem, level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LevelItem, items_),
  };
  LevelItem_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      LevelItem_descriptor_,
      LevelItem::default_instance_,
      LevelItem_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LevelItem, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LevelItem, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(LevelItem));
  ShippingItem_descriptor_ = file->message_type(4);
  static const int ShippingItem_offsets_[15] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShippingItem, unlock_level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShippingItem, unlock_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShippingItem, unlock_speed_price_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShippingItem, unlock_cost_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShippingItem, prepare_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShippingItem, speed_prepare_price_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShippingItem, pack_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShippingItem, item_kind_num_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShippingItem, boxes_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShippingItem, reward_coefficient_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShippingItem, aid_extra_reward_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShippingItem, badge_init_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShippingItem, public_aid_limit_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShippingItem, commercial_aid_limit_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShippingItem, level_items_),
  };
  ShippingItem_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ShippingItem_descriptor_,
      ShippingItem::default_instance_,
      ShippingItem_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShippingItem, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShippingItem, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ShippingItem));
  FullBoxPointCPP_descriptor_ = file->message_type(5);
  static const int FullBoxPointCPP_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FullBoxPointCPP, weight_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FullBoxPointCPP, reward_),
  };
  FullBoxPointCPP_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      FullBoxPointCPP_descriptor_,
      FullBoxPointCPP::default_instance_,
      FullBoxPointCPP_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FullBoxPointCPP, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FullBoxPointCPP, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(FullBoxPointCPP));
  Shipping_descriptor_ = file->message_type(6);
  static const int Shipping_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Shipping, shipping_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Shipping, point_),
  };
  Shipping_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Shipping_descriptor_,
      Shipping::default_instance_,
      Shipping_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Shipping, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Shipping, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Shipping));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_ConfigShipping_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    BoxItems_descriptor_, &BoxItems::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    RewardCoefficient_descriptor_, &RewardCoefficient::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Item_descriptor_, &Item::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    LevelItem_descriptor_, &LevelItem::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ShippingItem_descriptor_, &ShippingItem::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    FullBoxPointCPP_descriptor_, &FullBoxPointCPP::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Shipping_descriptor_, &Shipping::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_ConfigShipping_2eproto() {
  delete BoxItems::default_instance_;
  delete BoxItems_reflection_;
  delete RewardCoefficient::default_instance_;
  delete RewardCoefficient_reflection_;
  delete Item::default_instance_;
  delete Item_reflection_;
  delete LevelItem::default_instance_;
  delete LevelItem_reflection_;
  delete ShippingItem::default_instance_;
  delete ShippingItem_reflection_;
  delete FullBoxPointCPP::default_instance_;
  delete FullBoxPointCPP_reflection_;
  delete Shipping::default_instance_;
  delete Shipping_reflection_;
}

void protobuf_AddDesc_ConfigShipping_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::CommonGiftConfig::protobuf_AddDesc_CommonGiftConfig_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\024ConfigShipping.proto\022\016ConfigShipping\032\026"
    "CommonGiftConfig.proto\"F\n\010BoxItems\022\022\n\nba"
    "dge_cond\030\001 \002(\r\022\021\n\tnum_range\030\002 \003(\r\022\023\n\013vie"
    "w_ad_cnt\030\003 \002(\r\"<\n\021RewardCoefficient\022\020\n\010m"
    "ultiple\030\001 \002(\001\022\025\n\rrandomk_range\030\002 \003(\r\"!\n\004"
    "Item\022\n\n\002id\030\001 \002(\r\022\r\n\005count\030\002 \003(\r\"\?\n\tLevel"
    "Item\022\r\n\005level\030\001 \002(\r\022#\n\005items\030\002 \003(\0132\024.Con"
    "figShipping.Item\"\351\003\n\014ShippingItem\022\024\n\014unl"
    "ock_level\030\001 \002(\r\022\023\n\013unlock_time\030\002 \002(\r\022\032\n\022"
    "unlock_speed_price\030\003 \002(\r\0227\n\013unlock_cost\030"
    "\004 \002(\0132\".CommonGiftConfig.CommonModifyIte"
    "m\022\024\n\014prepare_time\030\005 \002(\r\022\033\n\023speed_prepare"
    "_price\030\006 \002(\r\022\021\n\tpack_time\030\007 \002(\r\022\025\n\ritem_"
    "kind_num\030\010 \002(\r\022\'\n\005boxes\030\t \003(\0132\030.ConfigSh"
    "ipping.BoxItems\022=\n\022reward_coefficient\030\n "
    "\002(\0132!.ConfigShipping.RewardCoefficient\022\030"
    "\n\020aid_extra_reward\030\013 \002(\r\022\022\n\nbadge_init\030\014"
    " \002(\r\022\030\n\020public_aid_limit\030\r \002(\r\022\034\n\024commer"
    "cial_aid_limit\030\016 \002(\r\022.\n\013level_items\030\017 \003("
    "\0132\031.ConfigShipping.LevelItem\"U\n\017FullBoxP"
    "ointCPP\022\016\n\006weight\030\001 \002(\r\0222\n\006reward\030\002 \002(\0132"
    "\".CommonGiftConfig.CommonModifyItem\"j\n\010S"
    "hipping\022.\n\010shipping\030\001 \002(\0132\034.ConfigShippi"
    "ng.ShippingItem\022.\n\005point\030\002 \003(\0132\037.ConfigS"
    "hipping.FullBoxPointCPP", 983);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "ConfigShipping.proto", &protobuf_RegisterTypes);
  BoxItems::default_instance_ = new BoxItems();
  RewardCoefficient::default_instance_ = new RewardCoefficient();
  Item::default_instance_ = new Item();
  LevelItem::default_instance_ = new LevelItem();
  ShippingItem::default_instance_ = new ShippingItem();
  FullBoxPointCPP::default_instance_ = new FullBoxPointCPP();
  Shipping::default_instance_ = new Shipping();
  BoxItems::default_instance_->InitAsDefaultInstance();
  RewardCoefficient::default_instance_->InitAsDefaultInstance();
  Item::default_instance_->InitAsDefaultInstance();
  LevelItem::default_instance_->InitAsDefaultInstance();
  ShippingItem::default_instance_->InitAsDefaultInstance();
  FullBoxPointCPP::default_instance_->InitAsDefaultInstance();
  Shipping::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_ConfigShipping_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_ConfigShipping_2eproto {
  StaticDescriptorInitializer_ConfigShipping_2eproto() {
    protobuf_AddDesc_ConfigShipping_2eproto();
  }
} static_descriptor_initializer_ConfigShipping_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int BoxItems::kBadgeCondFieldNumber;
const int BoxItems::kNumRangeFieldNumber;
const int BoxItems::kViewAdCntFieldNumber;
#endif  // !_MSC_VER

BoxItems::BoxItems()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ConfigShipping.BoxItems)
}

void BoxItems::InitAsDefaultInstance() {
}

BoxItems::BoxItems(const BoxItems& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ConfigShipping.BoxItems)
}

void BoxItems::SharedCtor() {
  _cached_size_ = 0;
  badge_cond_ = 0u;
  view_ad_cnt_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BoxItems::~BoxItems() {
  // @@protoc_insertion_point(destructor:ConfigShipping.BoxItems)
  SharedDtor();
}

void BoxItems::SharedDtor() {
  if (this != default_instance_) {
  }
}

void BoxItems::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BoxItems::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BoxItems_descriptor_;
}

const BoxItems& BoxItems::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ConfigShipping_2eproto();
  return *default_instance_;
}

BoxItems* BoxItems::default_instance_ = NULL;

BoxItems* BoxItems::New() const {
  return new BoxItems;
}

void BoxItems::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<BoxItems*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(badge_cond_, view_ad_cnt_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  num_range_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool BoxItems::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ConfigShipping.BoxItems)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 badge_cond = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &badge_cond_)));
          set_has_badge_cond();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_num_range;
        break;
      }

      // repeated uint32 num_range = 2;
      case 2: {
        if (tag == 16) {
         parse_num_range:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 16, input, this->mutable_num_range())));
        } else if (tag == 18) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_num_range())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_num_range;
        if (input->ExpectTag(24)) goto parse_view_ad_cnt;
        break;
      }

      // required uint32 view_ad_cnt = 3;
      case 3: {
        if (tag == 24) {
         parse_view_ad_cnt:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &view_ad_cnt_)));
          set_has_view_ad_cnt();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ConfigShipping.BoxItems)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ConfigShipping.BoxItems)
  return false;
#undef DO_
}

void BoxItems::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ConfigShipping.BoxItems)
  // required uint32 badge_cond = 1;
  if (has_badge_cond()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->badge_cond(), output);
  }

  // repeated uint32 num_range = 2;
  for (int i = 0; i < this->num_range_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      2, this->num_range(i), output);
  }

  // required uint32 view_ad_cnt = 3;
  if (has_view_ad_cnt()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->view_ad_cnt(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ConfigShipping.BoxItems)
}

::google::protobuf::uint8* BoxItems::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ConfigShipping.BoxItems)
  // required uint32 badge_cond = 1;
  if (has_badge_cond()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->badge_cond(), target);
  }

  // repeated uint32 num_range = 2;
  for (int i = 0; i < this->num_range_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(2, this->num_range(i), target);
  }

  // required uint32 view_ad_cnt = 3;
  if (has_view_ad_cnt()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->view_ad_cnt(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ConfigShipping.BoxItems)
  return target;
}

int BoxItems::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 badge_cond = 1;
    if (has_badge_cond()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->badge_cond());
    }

    // required uint32 view_ad_cnt = 3;
    if (has_view_ad_cnt()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->view_ad_cnt());
    }

  }
  // repeated uint32 num_range = 2;
  {
    int data_size = 0;
    for (int i = 0; i < this->num_range_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->num_range(i));
    }
    total_size += 1 * this->num_range_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BoxItems::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const BoxItems* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const BoxItems*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void BoxItems::MergeFrom(const BoxItems& from) {
  GOOGLE_CHECK_NE(&from, this);
  num_range_.MergeFrom(from.num_range_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_badge_cond()) {
      set_badge_cond(from.badge_cond());
    }
    if (from.has_view_ad_cnt()) {
      set_view_ad_cnt(from.view_ad_cnt());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void BoxItems::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BoxItems::CopyFrom(const BoxItems& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BoxItems::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000005) != 0x00000005) return false;

  return true;
}

void BoxItems::Swap(BoxItems* other) {
  if (other != this) {
    std::swap(badge_cond_, other->badge_cond_);
    num_range_.Swap(&other->num_range_);
    std::swap(view_ad_cnt_, other->view_ad_cnt_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata BoxItems::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BoxItems_descriptor_;
  metadata.reflection = BoxItems_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int RewardCoefficient::kMultipleFieldNumber;
const int RewardCoefficient::kRandomkRangeFieldNumber;
#endif  // !_MSC_VER

RewardCoefficient::RewardCoefficient()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ConfigShipping.RewardCoefficient)
}

void RewardCoefficient::InitAsDefaultInstance() {
}

RewardCoefficient::RewardCoefficient(const RewardCoefficient& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ConfigShipping.RewardCoefficient)
}

void RewardCoefficient::SharedCtor() {
  _cached_size_ = 0;
  multiple_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RewardCoefficient::~RewardCoefficient() {
  // @@protoc_insertion_point(destructor:ConfigShipping.RewardCoefficient)
  SharedDtor();
}

void RewardCoefficient::SharedDtor() {
  if (this != default_instance_) {
  }
}

void RewardCoefficient::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RewardCoefficient::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RewardCoefficient_descriptor_;
}

const RewardCoefficient& RewardCoefficient::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ConfigShipping_2eproto();
  return *default_instance_;
}

RewardCoefficient* RewardCoefficient::default_instance_ = NULL;

RewardCoefficient* RewardCoefficient::New() const {
  return new RewardCoefficient;
}

void RewardCoefficient::Clear() {
  multiple_ = 0;
  randomk_range_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool RewardCoefficient::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ConfigShipping.RewardCoefficient)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required double multiple = 1;
      case 1: {
        if (tag == 9) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &multiple_)));
          set_has_multiple();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_randomk_range;
        break;
      }

      // repeated uint32 randomk_range = 2;
      case 2: {
        if (tag == 16) {
         parse_randomk_range:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 16, input, this->mutable_randomk_range())));
        } else if (tag == 18) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_randomk_range())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_randomk_range;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ConfigShipping.RewardCoefficient)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ConfigShipping.RewardCoefficient)
  return false;
#undef DO_
}

void RewardCoefficient::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ConfigShipping.RewardCoefficient)
  // required double multiple = 1;
  if (has_multiple()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->multiple(), output);
  }

  // repeated uint32 randomk_range = 2;
  for (int i = 0; i < this->randomk_range_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      2, this->randomk_range(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ConfigShipping.RewardCoefficient)
}

::google::protobuf::uint8* RewardCoefficient::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ConfigShipping.RewardCoefficient)
  // required double multiple = 1;
  if (has_multiple()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->multiple(), target);
  }

  // repeated uint32 randomk_range = 2;
  for (int i = 0; i < this->randomk_range_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(2, this->randomk_range(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ConfigShipping.RewardCoefficient)
  return target;
}

int RewardCoefficient::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required double multiple = 1;
    if (has_multiple()) {
      total_size += 1 + 8;
    }

  }
  // repeated uint32 randomk_range = 2;
  {
    int data_size = 0;
    for (int i = 0; i < this->randomk_range_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->randomk_range(i));
    }
    total_size += 1 * this->randomk_range_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RewardCoefficient::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const RewardCoefficient* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const RewardCoefficient*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void RewardCoefficient::MergeFrom(const RewardCoefficient& from) {
  GOOGLE_CHECK_NE(&from, this);
  randomk_range_.MergeFrom(from.randomk_range_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_multiple()) {
      set_multiple(from.multiple());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void RewardCoefficient::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RewardCoefficient::CopyFrom(const RewardCoefficient& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RewardCoefficient::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void RewardCoefficient::Swap(RewardCoefficient* other) {
  if (other != this) {
    std::swap(multiple_, other->multiple_);
    randomk_range_.Swap(&other->randomk_range_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata RewardCoefficient::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RewardCoefficient_descriptor_;
  metadata.reflection = RewardCoefficient_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Item::kIdFieldNumber;
const int Item::kCountFieldNumber;
#endif  // !_MSC_VER

Item::Item()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ConfigShipping.Item)
}

void Item::InitAsDefaultInstance() {
}

Item::Item(const Item& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ConfigShipping.Item)
}

void Item::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Item::~Item() {
  // @@protoc_insertion_point(destructor:ConfigShipping.Item)
  SharedDtor();
}

void Item::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Item::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Item::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Item_descriptor_;
}

const Item& Item::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ConfigShipping_2eproto();
  return *default_instance_;
}

Item* Item::default_instance_ = NULL;

Item* Item::New() const {
  return new Item;
}

void Item::Clear() {
  id_ = 0u;
  count_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Item::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ConfigShipping.Item)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_count;
        break;
      }

      // repeated uint32 count = 2;
      case 2: {
        if (tag == 16) {
         parse_count:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 16, input, this->mutable_count())));
        } else if (tag == 18) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_count())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_count;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ConfigShipping.Item)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ConfigShipping.Item)
  return false;
#undef DO_
}

void Item::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ConfigShipping.Item)
  // required uint32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  // repeated uint32 count = 2;
  for (int i = 0; i < this->count_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      2, this->count(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ConfigShipping.Item)
}

::google::protobuf::uint8* Item::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ConfigShipping.Item)
  // required uint32 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  // repeated uint32 count = 2;
  for (int i = 0; i < this->count_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(2, this->count(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ConfigShipping.Item)
  return target;
}

int Item::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->id());
    }

  }
  // repeated uint32 count = 2;
  {
    int data_size = 0;
    for (int i = 0; i < this->count_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->count(i));
    }
    total_size += 1 * this->count_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Item::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Item* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Item*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Item::MergeFrom(const Item& from) {
  GOOGLE_CHECK_NE(&from, this);
  count_.MergeFrom(from.count_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Item::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Item::CopyFrom(const Item& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Item::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void Item::Swap(Item* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    count_.Swap(&other->count_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Item::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Item_descriptor_;
  metadata.reflection = Item_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int LevelItem::kLevelFieldNumber;
const int LevelItem::kItemsFieldNumber;
#endif  // !_MSC_VER

LevelItem::LevelItem()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ConfigShipping.LevelItem)
}

void LevelItem::InitAsDefaultInstance() {
}

LevelItem::LevelItem(const LevelItem& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ConfigShipping.LevelItem)
}

void LevelItem::SharedCtor() {
  _cached_size_ = 0;
  level_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

LevelItem::~LevelItem() {
  // @@protoc_insertion_point(destructor:ConfigShipping.LevelItem)
  SharedDtor();
}

void LevelItem::SharedDtor() {
  if (this != default_instance_) {
  }
}

void LevelItem::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LevelItem::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return LevelItem_descriptor_;
}

const LevelItem& LevelItem::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ConfigShipping_2eproto();
  return *default_instance_;
}

LevelItem* LevelItem::default_instance_ = NULL;

LevelItem* LevelItem::New() const {
  return new LevelItem;
}

void LevelItem::Clear() {
  level_ = 0u;
  items_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool LevelItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ConfigShipping.LevelItem)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 level = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &level_)));
          set_has_level();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_items;
        break;
      }

      // repeated .ConfigShipping.Item items = 2;
      case 2: {
        if (tag == 18) {
         parse_items:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_items()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_items;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ConfigShipping.LevelItem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ConfigShipping.LevelItem)
  return false;
#undef DO_
}

void LevelItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ConfigShipping.LevelItem)
  // required uint32 level = 1;
  if (has_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->level(), output);
  }

  // repeated .ConfigShipping.Item items = 2;
  for (int i = 0; i < this->items_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->items(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ConfigShipping.LevelItem)
}

::google::protobuf::uint8* LevelItem::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ConfigShipping.LevelItem)
  // required uint32 level = 1;
  if (has_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->level(), target);
  }

  // repeated .ConfigShipping.Item items = 2;
  for (int i = 0; i < this->items_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->items(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ConfigShipping.LevelItem)
  return target;
}

int LevelItem::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 level = 1;
    if (has_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->level());
    }

  }
  // repeated .ConfigShipping.Item items = 2;
  total_size += 1 * this->items_size();
  for (int i = 0; i < this->items_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->items(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LevelItem::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const LevelItem* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const LevelItem*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void LevelItem::MergeFrom(const LevelItem& from) {
  GOOGLE_CHECK_NE(&from, this);
  items_.MergeFrom(from.items_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_level()) {
      set_level(from.level());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void LevelItem::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LevelItem::CopyFrom(const LevelItem& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LevelItem::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (!::google::protobuf::internal::AllAreInitialized(this->items())) return false;
  return true;
}

void LevelItem::Swap(LevelItem* other) {
  if (other != this) {
    std::swap(level_, other->level_);
    items_.Swap(&other->items_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata LevelItem::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = LevelItem_descriptor_;
  metadata.reflection = LevelItem_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ShippingItem::kUnlockLevelFieldNumber;
const int ShippingItem::kUnlockTimeFieldNumber;
const int ShippingItem::kUnlockSpeedPriceFieldNumber;
const int ShippingItem::kUnlockCostFieldNumber;
const int ShippingItem::kPrepareTimeFieldNumber;
const int ShippingItem::kSpeedPreparePriceFieldNumber;
const int ShippingItem::kPackTimeFieldNumber;
const int ShippingItem::kItemKindNumFieldNumber;
const int ShippingItem::kBoxesFieldNumber;
const int ShippingItem::kRewardCoefficientFieldNumber;
const int ShippingItem::kAidExtraRewardFieldNumber;
const int ShippingItem::kBadgeInitFieldNumber;
const int ShippingItem::kPublicAidLimitFieldNumber;
const int ShippingItem::kCommercialAidLimitFieldNumber;
const int ShippingItem::kLevelItemsFieldNumber;
#endif  // !_MSC_VER

ShippingItem::ShippingItem()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ConfigShipping.ShippingItem)
}

void ShippingItem::InitAsDefaultInstance() {
  unlock_cost_ = const_cast< ::CommonGiftConfig::CommonModifyItem*>(&::CommonGiftConfig::CommonModifyItem::default_instance());
  reward_coefficient_ = const_cast< ::ConfigShipping::RewardCoefficient*>(&::ConfigShipping::RewardCoefficient::default_instance());
}

ShippingItem::ShippingItem(const ShippingItem& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ConfigShipping.ShippingItem)
}

void ShippingItem::SharedCtor() {
  _cached_size_ = 0;
  unlock_level_ = 0u;
  unlock_time_ = 0u;
  unlock_speed_price_ = 0u;
  unlock_cost_ = NULL;
  prepare_time_ = 0u;
  speed_prepare_price_ = 0u;
  pack_time_ = 0u;
  item_kind_num_ = 0u;
  reward_coefficient_ = NULL;
  aid_extra_reward_ = 0u;
  badge_init_ = 0u;
  public_aid_limit_ = 0u;
  commercial_aid_limit_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ShippingItem::~ShippingItem() {
  // @@protoc_insertion_point(destructor:ConfigShipping.ShippingItem)
  SharedDtor();
}

void ShippingItem::SharedDtor() {
  if (this != default_instance_) {
    delete unlock_cost_;
    delete reward_coefficient_;
  }
}

void ShippingItem::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ShippingItem::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ShippingItem_descriptor_;
}

const ShippingItem& ShippingItem::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ConfigShipping_2eproto();
  return *default_instance_;
}

ShippingItem* ShippingItem::default_instance_ = NULL;

ShippingItem* ShippingItem::New() const {
  return new ShippingItem;
}

void ShippingItem::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<ShippingItem*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 255) {
    ZR_(unlock_level_, unlock_time_);
    ZR_(unlock_speed_price_, pack_time_);
    if (has_unlock_cost()) {
      if (unlock_cost_ != NULL) unlock_cost_->::CommonGiftConfig::CommonModifyItem::Clear();
    }
    item_kind_num_ = 0u;
  }
  if (_has_bits_[8 / 32] & 15872) {
    ZR_(badge_init_, public_aid_limit_);
    if (has_reward_coefficient()) {
      if (reward_coefficient_ != NULL) reward_coefficient_->::ConfigShipping::RewardCoefficient::Clear();
    }
    aid_extra_reward_ = 0u;
    commercial_aid_limit_ = 0u;
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  boxes_.Clear();
  level_items_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ShippingItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ConfigShipping.ShippingItem)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 unlock_level = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &unlock_level_)));
          set_has_unlock_level();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_unlock_time;
        break;
      }

      // required uint32 unlock_time = 2;
      case 2: {
        if (tag == 16) {
         parse_unlock_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &unlock_time_)));
          set_has_unlock_time();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_unlock_speed_price;
        break;
      }

      // required uint32 unlock_speed_price = 3;
      case 3: {
        if (tag == 24) {
         parse_unlock_speed_price:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &unlock_speed_price_)));
          set_has_unlock_speed_price();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_unlock_cost;
        break;
      }

      // required .CommonGiftConfig.CommonModifyItem unlock_cost = 4;
      case 4: {
        if (tag == 34) {
         parse_unlock_cost:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_unlock_cost()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_prepare_time;
        break;
      }

      // required uint32 prepare_time = 5;
      case 5: {
        if (tag == 40) {
         parse_prepare_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &prepare_time_)));
          set_has_prepare_time();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_speed_prepare_price;
        break;
      }

      // required uint32 speed_prepare_price = 6;
      case 6: {
        if (tag == 48) {
         parse_speed_prepare_price:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &speed_prepare_price_)));
          set_has_speed_prepare_price();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_pack_time;
        break;
      }

      // required uint32 pack_time = 7;
      case 7: {
        if (tag == 56) {
         parse_pack_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pack_time_)));
          set_has_pack_time();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_item_kind_num;
        break;
      }

      // required uint32 item_kind_num = 8;
      case 8: {
        if (tag == 64) {
         parse_item_kind_num:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &item_kind_num_)));
          set_has_item_kind_num();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_boxes;
        break;
      }

      // repeated .ConfigShipping.BoxItems boxes = 9;
      case 9: {
        if (tag == 74) {
         parse_boxes:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_boxes()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_boxes;
        if (input->ExpectTag(82)) goto parse_reward_coefficient;
        break;
      }

      // required .ConfigShipping.RewardCoefficient reward_coefficient = 10;
      case 10: {
        if (tag == 82) {
         parse_reward_coefficient:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_reward_coefficient()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(88)) goto parse_aid_extra_reward;
        break;
      }

      // required uint32 aid_extra_reward = 11;
      case 11: {
        if (tag == 88) {
         parse_aid_extra_reward:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &aid_extra_reward_)));
          set_has_aid_extra_reward();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(96)) goto parse_badge_init;
        break;
      }

      // required uint32 badge_init = 12;
      case 12: {
        if (tag == 96) {
         parse_badge_init:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &badge_init_)));
          set_has_badge_init();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(104)) goto parse_public_aid_limit;
        break;
      }

      // required uint32 public_aid_limit = 13;
      case 13: {
        if (tag == 104) {
         parse_public_aid_limit:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &public_aid_limit_)));
          set_has_public_aid_limit();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(112)) goto parse_commercial_aid_limit;
        break;
      }

      // required uint32 commercial_aid_limit = 14;
      case 14: {
        if (tag == 112) {
         parse_commercial_aid_limit:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &commercial_aid_limit_)));
          set_has_commercial_aid_limit();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(122)) goto parse_level_items;
        break;
      }

      // repeated .ConfigShipping.LevelItem level_items = 15;
      case 15: {
        if (tag == 122) {
         parse_level_items:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_level_items()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(122)) goto parse_level_items;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ConfigShipping.ShippingItem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ConfigShipping.ShippingItem)
  return false;
#undef DO_
}

void ShippingItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ConfigShipping.ShippingItem)
  // required uint32 unlock_level = 1;
  if (has_unlock_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->unlock_level(), output);
  }

  // required uint32 unlock_time = 2;
  if (has_unlock_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->unlock_time(), output);
  }

  // required uint32 unlock_speed_price = 3;
  if (has_unlock_speed_price()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->unlock_speed_price(), output);
  }

  // required .CommonGiftConfig.CommonModifyItem unlock_cost = 4;
  if (has_unlock_cost()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->unlock_cost(), output);
  }

  // required uint32 prepare_time = 5;
  if (has_prepare_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->prepare_time(), output);
  }

  // required uint32 speed_prepare_price = 6;
  if (has_speed_prepare_price()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->speed_prepare_price(), output);
  }

  // required uint32 pack_time = 7;
  if (has_pack_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->pack_time(), output);
  }

  // required uint32 item_kind_num = 8;
  if (has_item_kind_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->item_kind_num(), output);
  }

  // repeated .ConfigShipping.BoxItems boxes = 9;
  for (int i = 0; i < this->boxes_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->boxes(i), output);
  }

  // required .ConfigShipping.RewardCoefficient reward_coefficient = 10;
  if (has_reward_coefficient()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->reward_coefficient(), output);
  }

  // required uint32 aid_extra_reward = 11;
  if (has_aid_extra_reward()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(11, this->aid_extra_reward(), output);
  }

  // required uint32 badge_init = 12;
  if (has_badge_init()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(12, this->badge_init(), output);
  }

  // required uint32 public_aid_limit = 13;
  if (has_public_aid_limit()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(13, this->public_aid_limit(), output);
  }

  // required uint32 commercial_aid_limit = 14;
  if (has_commercial_aid_limit()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(14, this->commercial_aid_limit(), output);
  }

  // repeated .ConfigShipping.LevelItem level_items = 15;
  for (int i = 0; i < this->level_items_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      15, this->level_items(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ConfigShipping.ShippingItem)
}

::google::protobuf::uint8* ShippingItem::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ConfigShipping.ShippingItem)
  // required uint32 unlock_level = 1;
  if (has_unlock_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->unlock_level(), target);
  }

  // required uint32 unlock_time = 2;
  if (has_unlock_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->unlock_time(), target);
  }

  // required uint32 unlock_speed_price = 3;
  if (has_unlock_speed_price()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->unlock_speed_price(), target);
  }

  // required .CommonGiftConfig.CommonModifyItem unlock_cost = 4;
  if (has_unlock_cost()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->unlock_cost(), target);
  }

  // required uint32 prepare_time = 5;
  if (has_prepare_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->prepare_time(), target);
  }

  // required uint32 speed_prepare_price = 6;
  if (has_speed_prepare_price()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->speed_prepare_price(), target);
  }

  // required uint32 pack_time = 7;
  if (has_pack_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->pack_time(), target);
  }

  // required uint32 item_kind_num = 8;
  if (has_item_kind_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->item_kind_num(), target);
  }

  // repeated .ConfigShipping.BoxItems boxes = 9;
  for (int i = 0; i < this->boxes_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        9, this->boxes(i), target);
  }

  // required .ConfigShipping.RewardCoefficient reward_coefficient = 10;
  if (has_reward_coefficient()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        10, this->reward_coefficient(), target);
  }

  // required uint32 aid_extra_reward = 11;
  if (has_aid_extra_reward()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(11, this->aid_extra_reward(), target);
  }

  // required uint32 badge_init = 12;
  if (has_badge_init()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(12, this->badge_init(), target);
  }

  // required uint32 public_aid_limit = 13;
  if (has_public_aid_limit()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(13, this->public_aid_limit(), target);
  }

  // required uint32 commercial_aid_limit = 14;
  if (has_commercial_aid_limit()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(14, this->commercial_aid_limit(), target);
  }

  // repeated .ConfigShipping.LevelItem level_items = 15;
  for (int i = 0; i < this->level_items_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        15, this->level_items(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ConfigShipping.ShippingItem)
  return target;
}

int ShippingItem::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 unlock_level = 1;
    if (has_unlock_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->unlock_level());
    }

    // required uint32 unlock_time = 2;
    if (has_unlock_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->unlock_time());
    }

    // required uint32 unlock_speed_price = 3;
    if (has_unlock_speed_price()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->unlock_speed_price());
    }

    // required .CommonGiftConfig.CommonModifyItem unlock_cost = 4;
    if (has_unlock_cost()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->unlock_cost());
    }

    // required uint32 prepare_time = 5;
    if (has_prepare_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->prepare_time());
    }

    // required uint32 speed_prepare_price = 6;
    if (has_speed_prepare_price()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->speed_prepare_price());
    }

    // required uint32 pack_time = 7;
    if (has_pack_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->pack_time());
    }

    // required uint32 item_kind_num = 8;
    if (has_item_kind_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->item_kind_num());
    }

  }
  if (_has_bits_[9 / 32] & (0xffu << (9 % 32))) {
    // required .ConfigShipping.RewardCoefficient reward_coefficient = 10;
    if (has_reward_coefficient()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->reward_coefficient());
    }

    // required uint32 aid_extra_reward = 11;
    if (has_aid_extra_reward()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->aid_extra_reward());
    }

    // required uint32 badge_init = 12;
    if (has_badge_init()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->badge_init());
    }

    // required uint32 public_aid_limit = 13;
    if (has_public_aid_limit()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->public_aid_limit());
    }

    // required uint32 commercial_aid_limit = 14;
    if (has_commercial_aid_limit()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->commercial_aid_limit());
    }

  }
  // repeated .ConfigShipping.BoxItems boxes = 9;
  total_size += 1 * this->boxes_size();
  for (int i = 0; i < this->boxes_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->boxes(i));
  }

  // repeated .ConfigShipping.LevelItem level_items = 15;
  total_size += 1 * this->level_items_size();
  for (int i = 0; i < this->level_items_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->level_items(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ShippingItem::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ShippingItem* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ShippingItem*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ShippingItem::MergeFrom(const ShippingItem& from) {
  GOOGLE_CHECK_NE(&from, this);
  boxes_.MergeFrom(from.boxes_);
  level_items_.MergeFrom(from.level_items_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_unlock_level()) {
      set_unlock_level(from.unlock_level());
    }
    if (from.has_unlock_time()) {
      set_unlock_time(from.unlock_time());
    }
    if (from.has_unlock_speed_price()) {
      set_unlock_speed_price(from.unlock_speed_price());
    }
    if (from.has_unlock_cost()) {
      mutable_unlock_cost()->::CommonGiftConfig::CommonModifyItem::MergeFrom(from.unlock_cost());
    }
    if (from.has_prepare_time()) {
      set_prepare_time(from.prepare_time());
    }
    if (from.has_speed_prepare_price()) {
      set_speed_prepare_price(from.speed_prepare_price());
    }
    if (from.has_pack_time()) {
      set_pack_time(from.pack_time());
    }
    if (from.has_item_kind_num()) {
      set_item_kind_num(from.item_kind_num());
    }
  }
  if (from._has_bits_[9 / 32] & (0xffu << (9 % 32))) {
    if (from.has_reward_coefficient()) {
      mutable_reward_coefficient()->::ConfigShipping::RewardCoefficient::MergeFrom(from.reward_coefficient());
    }
    if (from.has_aid_extra_reward()) {
      set_aid_extra_reward(from.aid_extra_reward());
    }
    if (from.has_badge_init()) {
      set_badge_init(from.badge_init());
    }
    if (from.has_public_aid_limit()) {
      set_public_aid_limit(from.public_aid_limit());
    }
    if (from.has_commercial_aid_limit()) {
      set_commercial_aid_limit(from.commercial_aid_limit());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ShippingItem::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ShippingItem::CopyFrom(const ShippingItem& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ShippingItem::IsInitialized() const {
  if ((_has_bits_[0] & 0x00003eff) != 0x00003eff) return false;

  if (has_unlock_cost()) {
    if (!this->unlock_cost().IsInitialized()) return false;
  }
  if (!::google::protobuf::internal::AllAreInitialized(this->boxes())) return false;
  if (has_reward_coefficient()) {
    if (!this->reward_coefficient().IsInitialized()) return false;
  }
  if (!::google::protobuf::internal::AllAreInitialized(this->level_items())) return false;
  return true;
}

void ShippingItem::Swap(ShippingItem* other) {
  if (other != this) {
    std::swap(unlock_level_, other->unlock_level_);
    std::swap(unlock_time_, other->unlock_time_);
    std::swap(unlock_speed_price_, other->unlock_speed_price_);
    std::swap(unlock_cost_, other->unlock_cost_);
    std::swap(prepare_time_, other->prepare_time_);
    std::swap(speed_prepare_price_, other->speed_prepare_price_);
    std::swap(pack_time_, other->pack_time_);
    std::swap(item_kind_num_, other->item_kind_num_);
    boxes_.Swap(&other->boxes_);
    std::swap(reward_coefficient_, other->reward_coefficient_);
    std::swap(aid_extra_reward_, other->aid_extra_reward_);
    std::swap(badge_init_, other->badge_init_);
    std::swap(public_aid_limit_, other->public_aid_limit_);
    std::swap(commercial_aid_limit_, other->commercial_aid_limit_);
    level_items_.Swap(&other->level_items_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ShippingItem::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ShippingItem_descriptor_;
  metadata.reflection = ShippingItem_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int FullBoxPointCPP::kWeightFieldNumber;
const int FullBoxPointCPP::kRewardFieldNumber;
#endif  // !_MSC_VER

FullBoxPointCPP::FullBoxPointCPP()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ConfigShipping.FullBoxPointCPP)
}

void FullBoxPointCPP::InitAsDefaultInstance() {
  reward_ = const_cast< ::CommonGiftConfig::CommonModifyItem*>(&::CommonGiftConfig::CommonModifyItem::default_instance());
}

FullBoxPointCPP::FullBoxPointCPP(const FullBoxPointCPP& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ConfigShipping.FullBoxPointCPP)
}

void FullBoxPointCPP::SharedCtor() {
  _cached_size_ = 0;
  weight_ = 0u;
  reward_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

FullBoxPointCPP::~FullBoxPointCPP() {
  // @@protoc_insertion_point(destructor:ConfigShipping.FullBoxPointCPP)
  SharedDtor();
}

void FullBoxPointCPP::SharedDtor() {
  if (this != default_instance_) {
    delete reward_;
  }
}

void FullBoxPointCPP::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FullBoxPointCPP::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return FullBoxPointCPP_descriptor_;
}

const FullBoxPointCPP& FullBoxPointCPP::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ConfigShipping_2eproto();
  return *default_instance_;
}

FullBoxPointCPP* FullBoxPointCPP::default_instance_ = NULL;

FullBoxPointCPP* FullBoxPointCPP::New() const {
  return new FullBoxPointCPP;
}

void FullBoxPointCPP::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    weight_ = 0u;
    if (has_reward()) {
      if (reward_ != NULL) reward_->::CommonGiftConfig::CommonModifyItem::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool FullBoxPointCPP::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ConfigShipping.FullBoxPointCPP)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 weight = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &weight_)));
          set_has_weight();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_reward;
        break;
      }

      // required .CommonGiftConfig.CommonModifyItem reward = 2;
      case 2: {
        if (tag == 18) {
         parse_reward:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_reward()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ConfigShipping.FullBoxPointCPP)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ConfigShipping.FullBoxPointCPP)
  return false;
#undef DO_
}

void FullBoxPointCPP::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ConfigShipping.FullBoxPointCPP)
  // required uint32 weight = 1;
  if (has_weight()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->weight(), output);
  }

  // required .CommonGiftConfig.CommonModifyItem reward = 2;
  if (has_reward()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->reward(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ConfigShipping.FullBoxPointCPP)
}

::google::protobuf::uint8* FullBoxPointCPP::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ConfigShipping.FullBoxPointCPP)
  // required uint32 weight = 1;
  if (has_weight()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->weight(), target);
  }

  // required .CommonGiftConfig.CommonModifyItem reward = 2;
  if (has_reward()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->reward(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ConfigShipping.FullBoxPointCPP)
  return target;
}

int FullBoxPointCPP::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 weight = 1;
    if (has_weight()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->weight());
    }

    // required .CommonGiftConfig.CommonModifyItem reward = 2;
    if (has_reward()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->reward());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FullBoxPointCPP::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const FullBoxPointCPP* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const FullBoxPointCPP*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void FullBoxPointCPP::MergeFrom(const FullBoxPointCPP& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_weight()) {
      set_weight(from.weight());
    }
    if (from.has_reward()) {
      mutable_reward()->::CommonGiftConfig::CommonModifyItem::MergeFrom(from.reward());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void FullBoxPointCPP::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FullBoxPointCPP::CopyFrom(const FullBoxPointCPP& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FullBoxPointCPP::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  if (has_reward()) {
    if (!this->reward().IsInitialized()) return false;
  }
  return true;
}

void FullBoxPointCPP::Swap(FullBoxPointCPP* other) {
  if (other != this) {
    std::swap(weight_, other->weight_);
    std::swap(reward_, other->reward_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata FullBoxPointCPP::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = FullBoxPointCPP_descriptor_;
  metadata.reflection = FullBoxPointCPP_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Shipping::kShippingFieldNumber;
const int Shipping::kPointFieldNumber;
#endif  // !_MSC_VER

Shipping::Shipping()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ConfigShipping.Shipping)
}

void Shipping::InitAsDefaultInstance() {
  shipping_ = const_cast< ::ConfigShipping::ShippingItem*>(&::ConfigShipping::ShippingItem::default_instance());
}

Shipping::Shipping(const Shipping& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ConfigShipping.Shipping)
}

void Shipping::SharedCtor() {
  _cached_size_ = 0;
  shipping_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Shipping::~Shipping() {
  // @@protoc_insertion_point(destructor:ConfigShipping.Shipping)
  SharedDtor();
}

void Shipping::SharedDtor() {
  if (this != default_instance_) {
    delete shipping_;
  }
}

void Shipping::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Shipping::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Shipping_descriptor_;
}

const Shipping& Shipping::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ConfigShipping_2eproto();
  return *default_instance_;
}

Shipping* Shipping::default_instance_ = NULL;

Shipping* Shipping::New() const {
  return new Shipping;
}

void Shipping::Clear() {
  if (has_shipping()) {
    if (shipping_ != NULL) shipping_->::ConfigShipping::ShippingItem::Clear();
  }
  point_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Shipping::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ConfigShipping.Shipping)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .ConfigShipping.ShippingItem shipping = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_shipping()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_point;
        break;
      }

      // repeated .ConfigShipping.FullBoxPointCPP point = 2;
      case 2: {
        if (tag == 18) {
         parse_point:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_point()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_point;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ConfigShipping.Shipping)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ConfigShipping.Shipping)
  return false;
#undef DO_
}

void Shipping::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ConfigShipping.Shipping)
  // required .ConfigShipping.ShippingItem shipping = 1;
  if (has_shipping()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->shipping(), output);
  }

  // repeated .ConfigShipping.FullBoxPointCPP point = 2;
  for (int i = 0; i < this->point_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->point(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ConfigShipping.Shipping)
}

::google::protobuf::uint8* Shipping::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ConfigShipping.Shipping)
  // required .ConfigShipping.ShippingItem shipping = 1;
  if (has_shipping()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->shipping(), target);
  }

  // repeated .ConfigShipping.FullBoxPointCPP point = 2;
  for (int i = 0; i < this->point_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->point(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ConfigShipping.Shipping)
  return target;
}

int Shipping::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .ConfigShipping.ShippingItem shipping = 1;
    if (has_shipping()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->shipping());
    }

  }
  // repeated .ConfigShipping.FullBoxPointCPP point = 2;
  total_size += 1 * this->point_size();
  for (int i = 0; i < this->point_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->point(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Shipping::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Shipping* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Shipping*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Shipping::MergeFrom(const Shipping& from) {
  GOOGLE_CHECK_NE(&from, this);
  point_.MergeFrom(from.point_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_shipping()) {
      mutable_shipping()->::ConfigShipping::ShippingItem::MergeFrom(from.shipping());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Shipping::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Shipping::CopyFrom(const Shipping& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Shipping::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (has_shipping()) {
    if (!this->shipping().IsInitialized()) return false;
  }
  if (!::google::protobuf::internal::AllAreInitialized(this->point())) return false;
  return true;
}

void Shipping::Swap(Shipping* other) {
  if (other != this) {
    std::swap(shipping_, other->shipping_);
    point_.Swap(&other->point_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Shipping::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Shipping_descriptor_;
  metadata.reflection = Shipping_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace ConfigShipping

// @@protoc_insertion_point(global_scope)
