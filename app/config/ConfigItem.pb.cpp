// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ConfigItem.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "ConfigItem.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace ConfigItem {

namespace {

const ::google::protobuf::Descriptor* PropItem_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PropItem_reflection_ = NULL;
const ::google::protobuf::Descriptor* Items_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Items_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_ConfigItem_2eproto() {
  protobuf_AddDesc_ConfigItem_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "ConfigItem.proto");
  GOOGLE_CHECK(file != NULL);
  PropItem_descriptor_ = file->message_type(0);
  static const int PropItem_offsets_[14] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PropItem, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PropItem, location_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PropItem, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PropItem, unlock_level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PropItem, time_gain_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PropItem, price_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PropItem, limitnum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PropItem, dimond_cost_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PropItem, coefficient_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PropItem, material_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PropItem, speed_price_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PropItem, extra_reward_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PropItem, npc_customer_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PropItem, equipment_),
  };
  PropItem_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PropItem_descriptor_,
      PropItem::default_instance_,
      PropItem_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PropItem, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PropItem, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PropItem));
  Items_descriptor_ = file->message_type(1);
  static const int Items_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Items, itemes_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Items, view_ad_reward_),
  };
  Items_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Items_descriptor_,
      Items::default_instance_,
      Items_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Items, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Items, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Items));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_ConfigItem_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PropItem_descriptor_, &PropItem::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Items_descriptor_, &Items::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_ConfigItem_2eproto() {
  delete PropItem::default_instance_;
  delete PropItem_reflection_;
  delete Items::default_instance_;
  delete Items_reflection_;
}

void protobuf_AddDesc_ConfigItem_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::CommonGiftConfig::protobuf_AddDesc_CommonGiftConfig_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\020ConfigItem.proto\022\nConfigItem\032\026CommonGi"
    "ftConfig.proto\"\243\003\n\010PropItem\022\n\n\002id\030\001 \002(\r\022"
    "\020\n\010location\030\002 \002(\r\022\014\n\004type\030\003 \002(\r\022\024\n\014unloc"
    "k_level\030\004 \002(\r\022\021\n\ttime_gain\030\005 \002(\r\0221\n\005pric"
    "e\030\006 \002(\0132\".CommonGiftConfig.CommonModifyI"
    "tem\022\020\n\010limitnum\030\007 \002(\r\0227\n\013dimond_cost\030\010 \002"
    "(\0132\".CommonGiftConfig.CommonModifyItem\022\023"
    "\n\013coefficient\030\t \002(\002\0224\n\010material\030\n \001(\0132\"."
    "CommonGiftConfig.CommonModifyItem\022\023\n\013spe"
    "ed_price\030\013 \001(\r\0228\n\014extra_reward\030\014 \001(\0132\".C"
    "ommonGiftConfig.CommonModifyItem\022\027\n\017npc_"
    "customer_id\030\r \002(\r\022\021\n\tequipment\030\016 \001(\r\"i\n\005"
    "Items\022$\n\006itemes\030\001 \003(\0132\024.ConfigItem.PropI"
    "tem\022:\n\016view_ad_reward\030\002 \002(\0132\".CommonGift"
    "Config.CommonModifyItem", 583);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "ConfigItem.proto", &protobuf_RegisterTypes);
  PropItem::default_instance_ = new PropItem();
  Items::default_instance_ = new Items();
  PropItem::default_instance_->InitAsDefaultInstance();
  Items::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_ConfigItem_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_ConfigItem_2eproto {
  StaticDescriptorInitializer_ConfigItem_2eproto() {
    protobuf_AddDesc_ConfigItem_2eproto();
  }
} static_descriptor_initializer_ConfigItem_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int PropItem::kIdFieldNumber;
const int PropItem::kLocationFieldNumber;
const int PropItem::kTypeFieldNumber;
const int PropItem::kUnlockLevelFieldNumber;
const int PropItem::kTimeGainFieldNumber;
const int PropItem::kPriceFieldNumber;
const int PropItem::kLimitnumFieldNumber;
const int PropItem::kDimondCostFieldNumber;
const int PropItem::kCoefficientFieldNumber;
const int PropItem::kMaterialFieldNumber;
const int PropItem::kSpeedPriceFieldNumber;
const int PropItem::kExtraRewardFieldNumber;
const int PropItem::kNpcCustomerIdFieldNumber;
const int PropItem::kEquipmentFieldNumber;
#endif  // !_MSC_VER

PropItem::PropItem()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ConfigItem.PropItem)
}

void PropItem::InitAsDefaultInstance() {
  price_ = const_cast< ::CommonGiftConfig::CommonModifyItem*>(&::CommonGiftConfig::CommonModifyItem::default_instance());
  dimond_cost_ = const_cast< ::CommonGiftConfig::CommonModifyItem*>(&::CommonGiftConfig::CommonModifyItem::default_instance());
  material_ = const_cast< ::CommonGiftConfig::CommonModifyItem*>(&::CommonGiftConfig::CommonModifyItem::default_instance());
  extra_reward_ = const_cast< ::CommonGiftConfig::CommonModifyItem*>(&::CommonGiftConfig::CommonModifyItem::default_instance());
}

PropItem::PropItem(const PropItem& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ConfigItem.PropItem)
}

void PropItem::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0u;
  location_ = 0u;
  type_ = 0u;
  unlock_level_ = 0u;
  time_gain_ = 0u;
  price_ = NULL;
  limitnum_ = 0u;
  dimond_cost_ = NULL;
  coefficient_ = 0;
  material_ = NULL;
  speed_price_ = 0u;
  extra_reward_ = NULL;
  npc_customer_id_ = 0u;
  equipment_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PropItem::~PropItem() {
  // @@protoc_insertion_point(destructor:ConfigItem.PropItem)
  SharedDtor();
}

void PropItem::SharedDtor() {
  if (this != default_instance_) {
    delete price_;
    delete dimond_cost_;
    delete material_;
    delete extra_reward_;
  }
}

void PropItem::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PropItem::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PropItem_descriptor_;
}

const PropItem& PropItem::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ConfigItem_2eproto();
  return *default_instance_;
}

PropItem* PropItem::default_instance_ = NULL;

PropItem* PropItem::New() const {
  return new PropItem;
}

void PropItem::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<PropItem*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 255) {
    ZR_(id_, unlock_level_);
    ZR_(time_gain_, limitnum_);
    if (has_price()) {
      if (price_ != NULL) price_->::CommonGiftConfig::CommonModifyItem::Clear();
    }
    if (has_dimond_cost()) {
      if (dimond_cost_ != NULL) dimond_cost_->::CommonGiftConfig::CommonModifyItem::Clear();
    }
  }
  if (_has_bits_[8 / 32] & 16128) {
    ZR_(coefficient_, speed_price_);
    ZR_(npc_customer_id_, equipment_);
    if (has_material()) {
      if (material_ != NULL) material_->::CommonGiftConfig::CommonModifyItem::Clear();
    }
    if (has_extra_reward()) {
      if (extra_reward_ != NULL) extra_reward_->::CommonGiftConfig::CommonModifyItem::Clear();
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PropItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ConfigItem.PropItem)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_location;
        break;
      }

      // required uint32 location = 2;
      case 2: {
        if (tag == 16) {
         parse_location:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &location_)));
          set_has_location();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_type;
        break;
      }

      // required uint32 type = 3;
      case 3: {
        if (tag == 24) {
         parse_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_unlock_level;
        break;
      }

      // required uint32 unlock_level = 4;
      case 4: {
        if (tag == 32) {
         parse_unlock_level:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &unlock_level_)));
          set_has_unlock_level();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_time_gain;
        break;
      }

      // required uint32 time_gain = 5;
      case 5: {
        if (tag == 40) {
         parse_time_gain:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &time_gain_)));
          set_has_time_gain();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_price;
        break;
      }

      // required .CommonGiftConfig.CommonModifyItem price = 6;
      case 6: {
        if (tag == 50) {
         parse_price:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_price()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_limitnum;
        break;
      }

      // required uint32 limitnum = 7;
      case 7: {
        if (tag == 56) {
         parse_limitnum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &limitnum_)));
          set_has_limitnum();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_dimond_cost;
        break;
      }

      // required .CommonGiftConfig.CommonModifyItem dimond_cost = 8;
      case 8: {
        if (tag == 66) {
         parse_dimond_cost:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_dimond_cost()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(77)) goto parse_coefficient;
        break;
      }

      // required float coefficient = 9;
      case 9: {
        if (tag == 77) {
         parse_coefficient:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &coefficient_)));
          set_has_coefficient();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_material;
        break;
      }

      // optional .CommonGiftConfig.CommonModifyItem material = 10;
      case 10: {
        if (tag == 82) {
         parse_material:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_material()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(88)) goto parse_speed_price;
        break;
      }

      // optional uint32 speed_price = 11;
      case 11: {
        if (tag == 88) {
         parse_speed_price:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &speed_price_)));
          set_has_speed_price();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(98)) goto parse_extra_reward;
        break;
      }

      // optional .CommonGiftConfig.CommonModifyItem extra_reward = 12;
      case 12: {
        if (tag == 98) {
         parse_extra_reward:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_extra_reward()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(104)) goto parse_npc_customer_id;
        break;
      }

      // required uint32 npc_customer_id = 13;
      case 13: {
        if (tag == 104) {
         parse_npc_customer_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &npc_customer_id_)));
          set_has_npc_customer_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(112)) goto parse_equipment;
        break;
      }

      // optional uint32 equipment = 14;
      case 14: {
        if (tag == 112) {
         parse_equipment:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &equipment_)));
          set_has_equipment();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ConfigItem.PropItem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ConfigItem.PropItem)
  return false;
#undef DO_
}

void PropItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ConfigItem.PropItem)
  // required uint32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  // required uint32 location = 2;
  if (has_location()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->location(), output);
  }

  // required uint32 type = 3;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->type(), output);
  }

  // required uint32 unlock_level = 4;
  if (has_unlock_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->unlock_level(), output);
  }

  // required uint32 time_gain = 5;
  if (has_time_gain()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->time_gain(), output);
  }

  // required .CommonGiftConfig.CommonModifyItem price = 6;
  if (has_price()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->price(), output);
  }

  // required uint32 limitnum = 7;
  if (has_limitnum()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->limitnum(), output);
  }

  // required .CommonGiftConfig.CommonModifyItem dimond_cost = 8;
  if (has_dimond_cost()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->dimond_cost(), output);
  }

  // required float coefficient = 9;
  if (has_coefficient()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(9, this->coefficient(), output);
  }

  // optional .CommonGiftConfig.CommonModifyItem material = 10;
  if (has_material()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->material(), output);
  }

  // optional uint32 speed_price = 11;
  if (has_speed_price()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(11, this->speed_price(), output);
  }

  // optional .CommonGiftConfig.CommonModifyItem extra_reward = 12;
  if (has_extra_reward()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, this->extra_reward(), output);
  }

  // required uint32 npc_customer_id = 13;
  if (has_npc_customer_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(13, this->npc_customer_id(), output);
  }

  // optional uint32 equipment = 14;
  if (has_equipment()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(14, this->equipment(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ConfigItem.PropItem)
}

::google::protobuf::uint8* PropItem::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ConfigItem.PropItem)
  // required uint32 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  // required uint32 location = 2;
  if (has_location()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->location(), target);
  }

  // required uint32 type = 3;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->type(), target);
  }

  // required uint32 unlock_level = 4;
  if (has_unlock_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->unlock_level(), target);
  }

  // required uint32 time_gain = 5;
  if (has_time_gain()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->time_gain(), target);
  }

  // required .CommonGiftConfig.CommonModifyItem price = 6;
  if (has_price()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        6, this->price(), target);
  }

  // required uint32 limitnum = 7;
  if (has_limitnum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->limitnum(), target);
  }

  // required .CommonGiftConfig.CommonModifyItem dimond_cost = 8;
  if (has_dimond_cost()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        8, this->dimond_cost(), target);
  }

  // required float coefficient = 9;
  if (has_coefficient()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(9, this->coefficient(), target);
  }

  // optional .CommonGiftConfig.CommonModifyItem material = 10;
  if (has_material()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        10, this->material(), target);
  }

  // optional uint32 speed_price = 11;
  if (has_speed_price()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(11, this->speed_price(), target);
  }

  // optional .CommonGiftConfig.CommonModifyItem extra_reward = 12;
  if (has_extra_reward()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        12, this->extra_reward(), target);
  }

  // required uint32 npc_customer_id = 13;
  if (has_npc_customer_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(13, this->npc_customer_id(), target);
  }

  // optional uint32 equipment = 14;
  if (has_equipment()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(14, this->equipment(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ConfigItem.PropItem)
  return target;
}

int PropItem::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->id());
    }

    // required uint32 location = 2;
    if (has_location()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->location());
    }

    // required uint32 type = 3;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->type());
    }

    // required uint32 unlock_level = 4;
    if (has_unlock_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->unlock_level());
    }

    // required uint32 time_gain = 5;
    if (has_time_gain()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->time_gain());
    }

    // required .CommonGiftConfig.CommonModifyItem price = 6;
    if (has_price()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->price());
    }

    // required uint32 limitnum = 7;
    if (has_limitnum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->limitnum());
    }

    // required .CommonGiftConfig.CommonModifyItem dimond_cost = 8;
    if (has_dimond_cost()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->dimond_cost());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // required float coefficient = 9;
    if (has_coefficient()) {
      total_size += 1 + 4;
    }

    // optional .CommonGiftConfig.CommonModifyItem material = 10;
    if (has_material()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->material());
    }

    // optional uint32 speed_price = 11;
    if (has_speed_price()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->speed_price());
    }

    // optional .CommonGiftConfig.CommonModifyItem extra_reward = 12;
    if (has_extra_reward()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->extra_reward());
    }

    // required uint32 npc_customer_id = 13;
    if (has_npc_customer_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->npc_customer_id());
    }

    // optional uint32 equipment = 14;
    if (has_equipment()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->equipment());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PropItem::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PropItem* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PropItem*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PropItem::MergeFrom(const PropItem& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_location()) {
      set_location(from.location());
    }
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_unlock_level()) {
      set_unlock_level(from.unlock_level());
    }
    if (from.has_time_gain()) {
      set_time_gain(from.time_gain());
    }
    if (from.has_price()) {
      mutable_price()->::CommonGiftConfig::CommonModifyItem::MergeFrom(from.price());
    }
    if (from.has_limitnum()) {
      set_limitnum(from.limitnum());
    }
    if (from.has_dimond_cost()) {
      mutable_dimond_cost()->::CommonGiftConfig::CommonModifyItem::MergeFrom(from.dimond_cost());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_coefficient()) {
      set_coefficient(from.coefficient());
    }
    if (from.has_material()) {
      mutable_material()->::CommonGiftConfig::CommonModifyItem::MergeFrom(from.material());
    }
    if (from.has_speed_price()) {
      set_speed_price(from.speed_price());
    }
    if (from.has_extra_reward()) {
      mutable_extra_reward()->::CommonGiftConfig::CommonModifyItem::MergeFrom(from.extra_reward());
    }
    if (from.has_npc_customer_id()) {
      set_npc_customer_id(from.npc_customer_id());
    }
    if (from.has_equipment()) {
      set_equipment(from.equipment());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PropItem::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PropItem::CopyFrom(const PropItem& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PropItem::IsInitialized() const {
  if ((_has_bits_[0] & 0x000011ff) != 0x000011ff) return false;

  if (has_price()) {
    if (!this->price().IsInitialized()) return false;
  }
  if (has_dimond_cost()) {
    if (!this->dimond_cost().IsInitialized()) return false;
  }
  if (has_material()) {
    if (!this->material().IsInitialized()) return false;
  }
  if (has_extra_reward()) {
    if (!this->extra_reward().IsInitialized()) return false;
  }
  return true;
}

void PropItem::Swap(PropItem* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(location_, other->location_);
    std::swap(type_, other->type_);
    std::swap(unlock_level_, other->unlock_level_);
    std::swap(time_gain_, other->time_gain_);
    std::swap(price_, other->price_);
    std::swap(limitnum_, other->limitnum_);
    std::swap(dimond_cost_, other->dimond_cost_);
    std::swap(coefficient_, other->coefficient_);
    std::swap(material_, other->material_);
    std::swap(speed_price_, other->speed_price_);
    std::swap(extra_reward_, other->extra_reward_);
    std::swap(npc_customer_id_, other->npc_customer_id_);
    std::swap(equipment_, other->equipment_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PropItem::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PropItem_descriptor_;
  metadata.reflection = PropItem_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Items::kItemesFieldNumber;
const int Items::kViewAdRewardFieldNumber;
#endif  // !_MSC_VER

Items::Items()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ConfigItem.Items)
}

void Items::InitAsDefaultInstance() {
  view_ad_reward_ = const_cast< ::CommonGiftConfig::CommonModifyItem*>(&::CommonGiftConfig::CommonModifyItem::default_instance());
}

Items::Items(const Items& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ConfigItem.Items)
}

void Items::SharedCtor() {
  _cached_size_ = 0;
  view_ad_reward_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Items::~Items() {
  // @@protoc_insertion_point(destructor:ConfigItem.Items)
  SharedDtor();
}

void Items::SharedDtor() {
  if (this != default_instance_) {
    delete view_ad_reward_;
  }
}

void Items::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Items::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Items_descriptor_;
}

const Items& Items::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ConfigItem_2eproto();
  return *default_instance_;
}

Items* Items::default_instance_ = NULL;

Items* Items::New() const {
  return new Items;
}

void Items::Clear() {
  if (has_view_ad_reward()) {
    if (view_ad_reward_ != NULL) view_ad_reward_->::CommonGiftConfig::CommonModifyItem::Clear();
  }
  itemes_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Items::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ConfigItem.Items)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ConfigItem.PropItem itemes = 1;
      case 1: {
        if (tag == 10) {
         parse_itemes:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_itemes()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_itemes;
        if (input->ExpectTag(18)) goto parse_view_ad_reward;
        break;
      }

      // required .CommonGiftConfig.CommonModifyItem view_ad_reward = 2;
      case 2: {
        if (tag == 18) {
         parse_view_ad_reward:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_view_ad_reward()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ConfigItem.Items)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ConfigItem.Items)
  return false;
#undef DO_
}

void Items::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ConfigItem.Items)
  // repeated .ConfigItem.PropItem itemes = 1;
  for (int i = 0; i < this->itemes_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->itemes(i), output);
  }

  // required .CommonGiftConfig.CommonModifyItem view_ad_reward = 2;
  if (has_view_ad_reward()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->view_ad_reward(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ConfigItem.Items)
}

::google::protobuf::uint8* Items::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ConfigItem.Items)
  // repeated .ConfigItem.PropItem itemes = 1;
  for (int i = 0; i < this->itemes_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->itemes(i), target);
  }

  // required .CommonGiftConfig.CommonModifyItem view_ad_reward = 2;
  if (has_view_ad_reward()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->view_ad_reward(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ConfigItem.Items)
  return target;
}

int Items::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // required .CommonGiftConfig.CommonModifyItem view_ad_reward = 2;
    if (has_view_ad_reward()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->view_ad_reward());
    }

  }
  // repeated .ConfigItem.PropItem itemes = 1;
  total_size += 1 * this->itemes_size();
  for (int i = 0; i < this->itemes_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->itemes(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Items::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Items* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Items*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Items::MergeFrom(const Items& from) {
  GOOGLE_CHECK_NE(&from, this);
  itemes_.MergeFrom(from.itemes_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_view_ad_reward()) {
      mutable_view_ad_reward()->::CommonGiftConfig::CommonModifyItem::MergeFrom(from.view_ad_reward());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Items::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Items::CopyFrom(const Items& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Items::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000002) != 0x00000002) return false;

  if (!::google::protobuf::internal::AllAreInitialized(this->itemes())) return false;
  if (has_view_ad_reward()) {
    if (!this->view_ad_reward().IsInitialized()) return false;
  }
  return true;
}

void Items::Swap(Items* other) {
  if (other != this) {
    itemes_.Swap(&other->itemes_);
    std::swap(view_ad_reward_, other->view_ad_reward_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Items::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Items_descriptor_;
  metadata.reflection = Items_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace ConfigItem

// @@protoc_insertion_point(global_scope)
