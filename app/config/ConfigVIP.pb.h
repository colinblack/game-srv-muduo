// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ConfigVIP.proto

#ifndef PROTOBUF_ConfigVIP_2eproto__INCLUDED
#define PROTOBUF_ConfigVIP_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "CommonGiftConfig.pb.h"
// @@protoc_insertion_point(includes)

namespace ConfigVIP {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_ConfigVIP_2eproto();
void protobuf_AssignDesc_ConfigVIP_2eproto();
void protobuf_ShutdownFile_ConfigVIP_2eproto();

class VIPGiftCPP;
class VIPOrderBonus;
class VIPShipRewardBonus;
class VIPBase;
class VIPCfgInfo;

// ===================================================================

class VIPGiftCPP : public ::google::protobuf::Message {
 public:
  VIPGiftCPP();
  virtual ~VIPGiftCPP();

  VIPGiftCPP(const VIPGiftCPP& from);

  inline VIPGiftCPP& operator=(const VIPGiftCPP& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const VIPGiftCPP& default_instance();

  void Swap(VIPGiftCPP* other);

  // implements Message ----------------------------------------------

  VIPGiftCPP* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const VIPGiftCPP& from);
  void MergeFrom(const VIPGiftCPP& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 viplevel = 1;
  inline bool has_viplevel() const;
  inline void clear_viplevel();
  static const int kViplevelFieldNumber = 1;
  inline ::google::protobuf::uint32 viplevel() const;
  inline void set_viplevel(::google::protobuf::uint32 value);

  // repeated .CommonGiftConfig.CommonModifyItem material = 2;
  inline int material_size() const;
  inline void clear_material();
  static const int kMaterialFieldNumber = 2;
  inline const ::CommonGiftConfig::CommonModifyItem& material(int index) const;
  inline ::CommonGiftConfig::CommonModifyItem* mutable_material(int index);
  inline ::CommonGiftConfig::CommonModifyItem* add_material();
  inline const ::google::protobuf::RepeatedPtrField< ::CommonGiftConfig::CommonModifyItem >&
      material() const;
  inline ::google::protobuf::RepeatedPtrField< ::CommonGiftConfig::CommonModifyItem >*
      mutable_material();

  // required .CommonGiftConfig.CommonModifyItem reward = 3;
  inline bool has_reward() const;
  inline void clear_reward();
  static const int kRewardFieldNumber = 3;
  inline const ::CommonGiftConfig::CommonModifyItem& reward() const;
  inline ::CommonGiftConfig::CommonModifyItem* mutable_reward();
  inline ::CommonGiftConfig::CommonModifyItem* release_reward();
  inline void set_allocated_reward(::CommonGiftConfig::CommonModifyItem* reward);

  // @@protoc_insertion_point(class_scope:ConfigVIP.VIPGiftCPP)
 private:
  inline void set_has_viplevel();
  inline void clear_has_viplevel();
  inline void set_has_reward();
  inline void clear_has_reward();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CommonGiftConfig::CommonModifyItem > material_;
  ::CommonGiftConfig::CommonModifyItem* reward_;
  ::google::protobuf::uint32 viplevel_;
  friend void  protobuf_AddDesc_ConfigVIP_2eproto();
  friend void protobuf_AssignDesc_ConfigVIP_2eproto();
  friend void protobuf_ShutdownFile_ConfigVIP_2eproto();

  void InitAsDefaultInstance();
  static VIPGiftCPP* default_instance_;
};
// -------------------------------------------------------------------

class VIPOrderBonus : public ::google::protobuf::Message {
 public:
  VIPOrderBonus();
  virtual ~VIPOrderBonus();

  VIPOrderBonus(const VIPOrderBonus& from);

  inline VIPOrderBonus& operator=(const VIPOrderBonus& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const VIPOrderBonus& default_instance();

  void Swap(VIPOrderBonus* other);

  // implements Message ----------------------------------------------

  VIPOrderBonus* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const VIPOrderBonus& from);
  void MergeFrom(const VIPOrderBonus& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 bonusCnt = 1;
  inline int bonuscnt_size() const;
  inline void clear_bonuscnt();
  static const int kBonusCntFieldNumber = 1;
  inline ::google::protobuf::uint32 bonuscnt(int index) const;
  inline void set_bonuscnt(int index, ::google::protobuf::uint32 value);
  inline void add_bonuscnt(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      bonuscnt() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_bonuscnt();

  // repeated uint32 orderBonus = 2;
  inline int orderbonus_size() const;
  inline void clear_orderbonus();
  static const int kOrderBonusFieldNumber = 2;
  inline ::google::protobuf::uint32 orderbonus(int index) const;
  inline void set_orderbonus(int index, ::google::protobuf::uint32 value);
  inline void add_orderbonus(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      orderbonus() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_orderbonus();

  // @@protoc_insertion_point(class_scope:ConfigVIP.VIPOrderBonus)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > bonuscnt_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > orderbonus_;
  friend void  protobuf_AddDesc_ConfigVIP_2eproto();
  friend void protobuf_AssignDesc_ConfigVIP_2eproto();
  friend void protobuf_ShutdownFile_ConfigVIP_2eproto();

  void InitAsDefaultInstance();
  static VIPOrderBonus* default_instance_;
};
// -------------------------------------------------------------------

class VIPShipRewardBonus : public ::google::protobuf::Message {
 public:
  VIPShipRewardBonus();
  virtual ~VIPShipRewardBonus();

  VIPShipRewardBonus(const VIPShipRewardBonus& from);

  inline VIPShipRewardBonus& operator=(const VIPShipRewardBonus& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const VIPShipRewardBonus& default_instance();

  void Swap(VIPShipRewardBonus* other);

  // implements Message ----------------------------------------------

  VIPShipRewardBonus* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const VIPShipRewardBonus& from);
  void MergeFrom(const VIPShipRewardBonus& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 bonusCnt = 1;
  inline int bonuscnt_size() const;
  inline void clear_bonuscnt();
  static const int kBonusCntFieldNumber = 1;
  inline ::google::protobuf::uint32 bonuscnt(int index) const;
  inline void set_bonuscnt(int index, ::google::protobuf::uint32 value);
  inline void add_bonuscnt(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      bonuscnt() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_bonuscnt();

  // repeated uint32 shipRewardBonus = 3;
  inline int shiprewardbonus_size() const;
  inline void clear_shiprewardbonus();
  static const int kShipRewardBonusFieldNumber = 3;
  inline ::google::protobuf::uint32 shiprewardbonus(int index) const;
  inline void set_shiprewardbonus(int index, ::google::protobuf::uint32 value);
  inline void add_shiprewardbonus(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      shiprewardbonus() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_shiprewardbonus();

  // @@protoc_insertion_point(class_scope:ConfigVIP.VIPShipRewardBonus)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > bonuscnt_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > shiprewardbonus_;
  friend void  protobuf_AddDesc_ConfigVIP_2eproto();
  friend void protobuf_AssignDesc_ConfigVIP_2eproto();
  friend void protobuf_ShutdownFile_ConfigVIP_2eproto();

  void InitAsDefaultInstance();
  static VIPShipRewardBonus* default_instance_;
};
// -------------------------------------------------------------------

class VIPBase : public ::google::protobuf::Message {
 public:
  VIPBase();
  virtual ~VIPBase();

  VIPBase(const VIPBase& from);

  inline VIPBase& operator=(const VIPBase& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const VIPBase& default_instance();

  void Swap(VIPBase* other);

  // implements Message ----------------------------------------------

  VIPBase* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const VIPBase& from);
  void MergeFrom(const VIPBase& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 vipChargeLevel = 1;
  inline int vipchargelevel_size() const;
  inline void clear_vipchargelevel();
  static const int kVipChargeLevelFieldNumber = 1;
  inline ::google::protobuf::uint32 vipchargelevel(int index) const;
  inline void set_vipchargelevel(int index, ::google::protobuf::uint32 value);
  inline void add_vipchargelevel(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      vipchargelevel() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_vipchargelevel();

  // repeated .ConfigVIP.VIPGiftCPP vipGift = 2;
  inline int vipgift_size() const;
  inline void clear_vipgift();
  static const int kVipGiftFieldNumber = 2;
  inline const ::ConfigVIP::VIPGiftCPP& vipgift(int index) const;
  inline ::ConfigVIP::VIPGiftCPP* mutable_vipgift(int index);
  inline ::ConfigVIP::VIPGiftCPP* add_vipgift();
  inline const ::google::protobuf::RepeatedPtrField< ::ConfigVIP::VIPGiftCPP >&
      vipgift() const;
  inline ::google::protobuf::RepeatedPtrField< ::ConfigVIP::VIPGiftCPP >*
      mutable_vipgift();

  // repeated uint32 productFreeDiamond = 3;
  inline int productfreediamond_size() const;
  inline void clear_productfreediamond();
  static const int kProductFreeDiamondFieldNumber = 3;
  inline ::google::protobuf::uint32 productfreediamond(int index) const;
  inline void set_productfreediamond(int index, ::google::protobuf::uint32 value);
  inline void add_productfreediamond(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      productfreediamond() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_productfreediamond();

  // repeated float shipWaitTime = 4;
  inline int shipwaittime_size() const;
  inline void clear_shipwaittime();
  static const int kShipWaitTimeFieldNumber = 4;
  inline float shipwaittime(int index) const;
  inline void set_shipwaittime(int index, float value);
  inline void add_shipwaittime(float value);
  inline const ::google::protobuf::RepeatedField< float >&
      shipwaittime() const;
  inline ::google::protobuf::RepeatedField< float >*
      mutable_shipwaittime();

  // repeated uint32 orderFreeWaitCnt = 5;
  inline int orderfreewaitcnt_size() const;
  inline void clear_orderfreewaitcnt();
  static const int kOrderFreeWaitCntFieldNumber = 5;
  inline ::google::protobuf::uint32 orderfreewaitcnt(int index) const;
  inline void set_orderfreewaitcnt(int index, ::google::protobuf::uint32 value);
  inline void add_orderfreewaitcnt(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      orderfreewaitcnt() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_orderfreewaitcnt();

  // repeated uint32 shopAddShelfCnt = 6;
  inline int shopaddshelfcnt_size() const;
  inline void clear_shopaddshelfcnt();
  static const int kShopAddShelfCntFieldNumber = 6;
  inline ::google::protobuf::uint32 shopaddshelfcnt(int index) const;
  inline void set_shopaddshelfcnt(int index, ::google::protobuf::uint32 value);
  inline void add_shopaddshelfcnt(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      shopaddshelfcnt() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_shopaddshelfcnt();

  // repeated uint32 storageAddCnt = 7;
  inline int storageaddcnt_size() const;
  inline void clear_storageaddcnt();
  static const int kStorageAddCntFieldNumber = 7;
  inline ::google::protobuf::uint32 storageaddcnt(int index) const;
  inline void set_storageaddcnt(int index, ::google::protobuf::uint32 value);
  inline void add_storageaddcnt(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      storageaddcnt() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_storageaddcnt();

  // repeated uint32 productAddBoxCnt = 8;
  inline int productaddboxcnt_size() const;
  inline void clear_productaddboxcnt();
  static const int kProductAddBoxCntFieldNumber = 8;
  inline ::google::protobuf::uint32 productaddboxcnt(int index) const;
  inline void set_productaddboxcnt(int index, ::google::protobuf::uint32 value);
  inline void add_productaddboxcnt(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      productaddboxcnt() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_productaddboxcnt();

  // repeated uint32 vipPlatCropsSpeedUp = 9;
  inline int vipplatcropsspeedup_size() const;
  inline void clear_vipplatcropsspeedup();
  static const int kVipPlatCropsSpeedUpFieldNumber = 9;
  inline ::google::protobuf::uint32 vipplatcropsspeedup(int index) const;
  inline void set_vipplatcropsspeedup(int index, ::google::protobuf::uint32 value);
  inline void add_vipplatcropsspeedup(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      vipplatcropsspeedup() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_vipplatcropsspeedup();

  // repeated uint32 vipProduceSpeedUp = 10;
  inline int vipproducespeedup_size() const;
  inline void clear_vipproducespeedup();
  static const int kVipProduceSpeedUpFieldNumber = 10;
  inline ::google::protobuf::uint32 vipproducespeedup(int index) const;
  inline void set_vipproducespeedup(int index, ::google::protobuf::uint32 value);
  inline void add_vipproducespeedup(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      vipproducespeedup() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_vipproducespeedup();

  // required .ConfigVIP.VIPOrderBonus vipOrderBonus = 11;
  inline bool has_viporderbonus() const;
  inline void clear_viporderbonus();
  static const int kVipOrderBonusFieldNumber = 11;
  inline const ::ConfigVIP::VIPOrderBonus& viporderbonus() const;
  inline ::ConfigVIP::VIPOrderBonus* mutable_viporderbonus();
  inline ::ConfigVIP::VIPOrderBonus* release_viporderbonus();
  inline void set_allocated_viporderbonus(::ConfigVIP::VIPOrderBonus* viporderbonus);

  // required .ConfigVIP.VIPShipRewardBonus vipShipRewardBonus = 12;
  inline bool has_vipshiprewardbonus() const;
  inline void clear_vipshiprewardbonus();
  static const int kVipShipRewardBonusFieldNumber = 12;
  inline const ::ConfigVIP::VIPShipRewardBonus& vipshiprewardbonus() const;
  inline ::ConfigVIP::VIPShipRewardBonus* mutable_vipshiprewardbonus();
  inline ::ConfigVIP::VIPShipRewardBonus* release_vipshiprewardbonus();
  inline void set_allocated_vipshiprewardbonus(::ConfigVIP::VIPShipRewardBonus* vipshiprewardbonus);

  // repeated uint32 vipAllianceTaskAddCnt = 13;
  inline int vipalliancetaskaddcnt_size() const;
  inline void clear_vipalliancetaskaddcnt();
  static const int kVipAllianceTaskAddCntFieldNumber = 13;
  inline ::google::protobuf::uint32 vipalliancetaskaddcnt(int index) const;
  inline void set_vipalliancetaskaddcnt(int index, ::google::protobuf::uint32 value);
  inline void add_vipalliancetaskaddcnt(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      vipalliancetaskaddcnt() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_vipalliancetaskaddcnt();

  // repeated uint32 vipAnimalSpeedUp = 14;
  inline int vipanimalspeedup_size() const;
  inline void clear_vipanimalspeedup();
  static const int kVipAnimalSpeedUpFieldNumber = 14;
  inline ::google::protobuf::uint32 vipanimalspeedup(int index) const;
  inline void set_vipanimalspeedup(int index, ::google::protobuf::uint32 value);
  inline void add_vipanimalspeedup(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      vipanimalspeedup() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_vipanimalspeedup();

  // repeated uint32 vipCompetitionIntegral = 15;
  inline int vipcompetitionintegral_size() const;
  inline void clear_vipcompetitionintegral();
  static const int kVipCompetitionIntegralFieldNumber = 15;
  inline ::google::protobuf::uint32 vipcompetitionintegral(int index) const;
  inline void set_vipcompetitionintegral(int index, ::google::protobuf::uint32 value);
  inline void add_vipcompetitionintegral(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      vipcompetitionintegral() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_vipcompetitionintegral();

  // @@protoc_insertion_point(class_scope:ConfigVIP.VIPBase)
 private:
  inline void set_has_viporderbonus();
  inline void clear_has_viporderbonus();
  inline void set_has_vipshiprewardbonus();
  inline void clear_has_vipshiprewardbonus();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > vipchargelevel_;
  ::google::protobuf::RepeatedPtrField< ::ConfigVIP::VIPGiftCPP > vipgift_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > productfreediamond_;
  ::google::protobuf::RepeatedField< float > shipwaittime_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > orderfreewaitcnt_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > shopaddshelfcnt_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > storageaddcnt_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > productaddboxcnt_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > vipplatcropsspeedup_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > vipproducespeedup_;
  ::ConfigVIP::VIPOrderBonus* viporderbonus_;
  ::ConfigVIP::VIPShipRewardBonus* vipshiprewardbonus_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > vipalliancetaskaddcnt_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > vipanimalspeedup_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > vipcompetitionintegral_;
  friend void  protobuf_AddDesc_ConfigVIP_2eproto();
  friend void protobuf_AssignDesc_ConfigVIP_2eproto();
  friend void protobuf_ShutdownFile_ConfigVIP_2eproto();

  void InitAsDefaultInstance();
  static VIPBase* default_instance_;
};
// -------------------------------------------------------------------

class VIPCfgInfo : public ::google::protobuf::Message {
 public:
  VIPCfgInfo();
  virtual ~VIPCfgInfo();

  VIPCfgInfo(const VIPCfgInfo& from);

  inline VIPCfgInfo& operator=(const VIPCfgInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const VIPCfgInfo& default_instance();

  void Swap(VIPCfgInfo* other);

  // implements Message ----------------------------------------------

  VIPCfgInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const VIPCfgInfo& from);
  void MergeFrom(const VIPCfgInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .ConfigVIP.VIPBase vipInfo = 1;
  inline bool has_vipinfo() const;
  inline void clear_vipinfo();
  static const int kVipInfoFieldNumber = 1;
  inline const ::ConfigVIP::VIPBase& vipinfo() const;
  inline ::ConfigVIP::VIPBase* mutable_vipinfo();
  inline ::ConfigVIP::VIPBase* release_vipinfo();
  inline void set_allocated_vipinfo(::ConfigVIP::VIPBase* vipinfo);

  // @@protoc_insertion_point(class_scope:ConfigVIP.VIPCfgInfo)
 private:
  inline void set_has_vipinfo();
  inline void clear_has_vipinfo();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::ConfigVIP::VIPBase* vipinfo_;
  friend void  protobuf_AddDesc_ConfigVIP_2eproto();
  friend void protobuf_AssignDesc_ConfigVIP_2eproto();
  friend void protobuf_ShutdownFile_ConfigVIP_2eproto();

  void InitAsDefaultInstance();
  static VIPCfgInfo* default_instance_;
};
// ===================================================================


// ===================================================================

// VIPGiftCPP

// required uint32 viplevel = 1;
inline bool VIPGiftCPP::has_viplevel() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void VIPGiftCPP::set_has_viplevel() {
  _has_bits_[0] |= 0x00000001u;
}
inline void VIPGiftCPP::clear_has_viplevel() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void VIPGiftCPP::clear_viplevel() {
  viplevel_ = 0u;
  clear_has_viplevel();
}
inline ::google::protobuf::uint32 VIPGiftCPP::viplevel() const {
  // @@protoc_insertion_point(field_get:ConfigVIP.VIPGiftCPP.viplevel)
  return viplevel_;
}
inline void VIPGiftCPP::set_viplevel(::google::protobuf::uint32 value) {
  set_has_viplevel();
  viplevel_ = value;
  // @@protoc_insertion_point(field_set:ConfigVIP.VIPGiftCPP.viplevel)
}

// repeated .CommonGiftConfig.CommonModifyItem material = 2;
inline int VIPGiftCPP::material_size() const {
  return material_.size();
}
inline void VIPGiftCPP::clear_material() {
  material_.Clear();
}
inline const ::CommonGiftConfig::CommonModifyItem& VIPGiftCPP::material(int index) const {
  // @@protoc_insertion_point(field_get:ConfigVIP.VIPGiftCPP.material)
  return material_.Get(index);
}
inline ::CommonGiftConfig::CommonModifyItem* VIPGiftCPP::mutable_material(int index) {
  // @@protoc_insertion_point(field_mutable:ConfigVIP.VIPGiftCPP.material)
  return material_.Mutable(index);
}
inline ::CommonGiftConfig::CommonModifyItem* VIPGiftCPP::add_material() {
  // @@protoc_insertion_point(field_add:ConfigVIP.VIPGiftCPP.material)
  return material_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CommonGiftConfig::CommonModifyItem >&
VIPGiftCPP::material() const {
  // @@protoc_insertion_point(field_list:ConfigVIP.VIPGiftCPP.material)
  return material_;
}
inline ::google::protobuf::RepeatedPtrField< ::CommonGiftConfig::CommonModifyItem >*
VIPGiftCPP::mutable_material() {
  // @@protoc_insertion_point(field_mutable_list:ConfigVIP.VIPGiftCPP.material)
  return &material_;
}

// required .CommonGiftConfig.CommonModifyItem reward = 3;
inline bool VIPGiftCPP::has_reward() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void VIPGiftCPP::set_has_reward() {
  _has_bits_[0] |= 0x00000004u;
}
inline void VIPGiftCPP::clear_has_reward() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void VIPGiftCPP::clear_reward() {
  if (reward_ != NULL) reward_->::CommonGiftConfig::CommonModifyItem::Clear();
  clear_has_reward();
}
inline const ::CommonGiftConfig::CommonModifyItem& VIPGiftCPP::reward() const {
  // @@protoc_insertion_point(field_get:ConfigVIP.VIPGiftCPP.reward)
  return reward_ != NULL ? *reward_ : *default_instance_->reward_;
}
inline ::CommonGiftConfig::CommonModifyItem* VIPGiftCPP::mutable_reward() {
  set_has_reward();
  if (reward_ == NULL) reward_ = new ::CommonGiftConfig::CommonModifyItem;
  // @@protoc_insertion_point(field_mutable:ConfigVIP.VIPGiftCPP.reward)
  return reward_;
}
inline ::CommonGiftConfig::CommonModifyItem* VIPGiftCPP::release_reward() {
  clear_has_reward();
  ::CommonGiftConfig::CommonModifyItem* temp = reward_;
  reward_ = NULL;
  return temp;
}
inline void VIPGiftCPP::set_allocated_reward(::CommonGiftConfig::CommonModifyItem* reward) {
  delete reward_;
  reward_ = reward;
  if (reward) {
    set_has_reward();
  } else {
    clear_has_reward();
  }
  // @@protoc_insertion_point(field_set_allocated:ConfigVIP.VIPGiftCPP.reward)
}

// -------------------------------------------------------------------

// VIPOrderBonus

// repeated uint32 bonusCnt = 1;
inline int VIPOrderBonus::bonuscnt_size() const {
  return bonuscnt_.size();
}
inline void VIPOrderBonus::clear_bonuscnt() {
  bonuscnt_.Clear();
}
inline ::google::protobuf::uint32 VIPOrderBonus::bonuscnt(int index) const {
  // @@protoc_insertion_point(field_get:ConfigVIP.VIPOrderBonus.bonusCnt)
  return bonuscnt_.Get(index);
}
inline void VIPOrderBonus::set_bonuscnt(int index, ::google::protobuf::uint32 value) {
  bonuscnt_.Set(index, value);
  // @@protoc_insertion_point(field_set:ConfigVIP.VIPOrderBonus.bonusCnt)
}
inline void VIPOrderBonus::add_bonuscnt(::google::protobuf::uint32 value) {
  bonuscnt_.Add(value);
  // @@protoc_insertion_point(field_add:ConfigVIP.VIPOrderBonus.bonusCnt)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
VIPOrderBonus::bonuscnt() const {
  // @@protoc_insertion_point(field_list:ConfigVIP.VIPOrderBonus.bonusCnt)
  return bonuscnt_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
VIPOrderBonus::mutable_bonuscnt() {
  // @@protoc_insertion_point(field_mutable_list:ConfigVIP.VIPOrderBonus.bonusCnt)
  return &bonuscnt_;
}

// repeated uint32 orderBonus = 2;
inline int VIPOrderBonus::orderbonus_size() const {
  return orderbonus_.size();
}
inline void VIPOrderBonus::clear_orderbonus() {
  orderbonus_.Clear();
}
inline ::google::protobuf::uint32 VIPOrderBonus::orderbonus(int index) const {
  // @@protoc_insertion_point(field_get:ConfigVIP.VIPOrderBonus.orderBonus)
  return orderbonus_.Get(index);
}
inline void VIPOrderBonus::set_orderbonus(int index, ::google::protobuf::uint32 value) {
  orderbonus_.Set(index, value);
  // @@protoc_insertion_point(field_set:ConfigVIP.VIPOrderBonus.orderBonus)
}
inline void VIPOrderBonus::add_orderbonus(::google::protobuf::uint32 value) {
  orderbonus_.Add(value);
  // @@protoc_insertion_point(field_add:ConfigVIP.VIPOrderBonus.orderBonus)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
VIPOrderBonus::orderbonus() const {
  // @@protoc_insertion_point(field_list:ConfigVIP.VIPOrderBonus.orderBonus)
  return orderbonus_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
VIPOrderBonus::mutable_orderbonus() {
  // @@protoc_insertion_point(field_mutable_list:ConfigVIP.VIPOrderBonus.orderBonus)
  return &orderbonus_;
}

// -------------------------------------------------------------------

// VIPShipRewardBonus

// repeated uint32 bonusCnt = 1;
inline int VIPShipRewardBonus::bonuscnt_size() const {
  return bonuscnt_.size();
}
inline void VIPShipRewardBonus::clear_bonuscnt() {
  bonuscnt_.Clear();
}
inline ::google::protobuf::uint32 VIPShipRewardBonus::bonuscnt(int index) const {
  // @@protoc_insertion_point(field_get:ConfigVIP.VIPShipRewardBonus.bonusCnt)
  return bonuscnt_.Get(index);
}
inline void VIPShipRewardBonus::set_bonuscnt(int index, ::google::protobuf::uint32 value) {
  bonuscnt_.Set(index, value);
  // @@protoc_insertion_point(field_set:ConfigVIP.VIPShipRewardBonus.bonusCnt)
}
inline void VIPShipRewardBonus::add_bonuscnt(::google::protobuf::uint32 value) {
  bonuscnt_.Add(value);
  // @@protoc_insertion_point(field_add:ConfigVIP.VIPShipRewardBonus.bonusCnt)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
VIPShipRewardBonus::bonuscnt() const {
  // @@protoc_insertion_point(field_list:ConfigVIP.VIPShipRewardBonus.bonusCnt)
  return bonuscnt_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
VIPShipRewardBonus::mutable_bonuscnt() {
  // @@protoc_insertion_point(field_mutable_list:ConfigVIP.VIPShipRewardBonus.bonusCnt)
  return &bonuscnt_;
}

// repeated uint32 shipRewardBonus = 3;
inline int VIPShipRewardBonus::shiprewardbonus_size() const {
  return shiprewardbonus_.size();
}
inline void VIPShipRewardBonus::clear_shiprewardbonus() {
  shiprewardbonus_.Clear();
}
inline ::google::protobuf::uint32 VIPShipRewardBonus::shiprewardbonus(int index) const {
  // @@protoc_insertion_point(field_get:ConfigVIP.VIPShipRewardBonus.shipRewardBonus)
  return shiprewardbonus_.Get(index);
}
inline void VIPShipRewardBonus::set_shiprewardbonus(int index, ::google::protobuf::uint32 value) {
  shiprewardbonus_.Set(index, value);
  // @@protoc_insertion_point(field_set:ConfigVIP.VIPShipRewardBonus.shipRewardBonus)
}
inline void VIPShipRewardBonus::add_shiprewardbonus(::google::protobuf::uint32 value) {
  shiprewardbonus_.Add(value);
  // @@protoc_insertion_point(field_add:ConfigVIP.VIPShipRewardBonus.shipRewardBonus)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
VIPShipRewardBonus::shiprewardbonus() const {
  // @@protoc_insertion_point(field_list:ConfigVIP.VIPShipRewardBonus.shipRewardBonus)
  return shiprewardbonus_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
VIPShipRewardBonus::mutable_shiprewardbonus() {
  // @@protoc_insertion_point(field_mutable_list:ConfigVIP.VIPShipRewardBonus.shipRewardBonus)
  return &shiprewardbonus_;
}

// -------------------------------------------------------------------

// VIPBase

// repeated uint32 vipChargeLevel = 1;
inline int VIPBase::vipchargelevel_size() const {
  return vipchargelevel_.size();
}
inline void VIPBase::clear_vipchargelevel() {
  vipchargelevel_.Clear();
}
inline ::google::protobuf::uint32 VIPBase::vipchargelevel(int index) const {
  // @@protoc_insertion_point(field_get:ConfigVIP.VIPBase.vipChargeLevel)
  return vipchargelevel_.Get(index);
}
inline void VIPBase::set_vipchargelevel(int index, ::google::protobuf::uint32 value) {
  vipchargelevel_.Set(index, value);
  // @@protoc_insertion_point(field_set:ConfigVIP.VIPBase.vipChargeLevel)
}
inline void VIPBase::add_vipchargelevel(::google::protobuf::uint32 value) {
  vipchargelevel_.Add(value);
  // @@protoc_insertion_point(field_add:ConfigVIP.VIPBase.vipChargeLevel)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
VIPBase::vipchargelevel() const {
  // @@protoc_insertion_point(field_list:ConfigVIP.VIPBase.vipChargeLevel)
  return vipchargelevel_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
VIPBase::mutable_vipchargelevel() {
  // @@protoc_insertion_point(field_mutable_list:ConfigVIP.VIPBase.vipChargeLevel)
  return &vipchargelevel_;
}

// repeated .ConfigVIP.VIPGiftCPP vipGift = 2;
inline int VIPBase::vipgift_size() const {
  return vipgift_.size();
}
inline void VIPBase::clear_vipgift() {
  vipgift_.Clear();
}
inline const ::ConfigVIP::VIPGiftCPP& VIPBase::vipgift(int index) const {
  // @@protoc_insertion_point(field_get:ConfigVIP.VIPBase.vipGift)
  return vipgift_.Get(index);
}
inline ::ConfigVIP::VIPGiftCPP* VIPBase::mutable_vipgift(int index) {
  // @@protoc_insertion_point(field_mutable:ConfigVIP.VIPBase.vipGift)
  return vipgift_.Mutable(index);
}
inline ::ConfigVIP::VIPGiftCPP* VIPBase::add_vipgift() {
  // @@protoc_insertion_point(field_add:ConfigVIP.VIPBase.vipGift)
  return vipgift_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ConfigVIP::VIPGiftCPP >&
VIPBase::vipgift() const {
  // @@protoc_insertion_point(field_list:ConfigVIP.VIPBase.vipGift)
  return vipgift_;
}
inline ::google::protobuf::RepeatedPtrField< ::ConfigVIP::VIPGiftCPP >*
VIPBase::mutable_vipgift() {
  // @@protoc_insertion_point(field_mutable_list:ConfigVIP.VIPBase.vipGift)
  return &vipgift_;
}

// repeated uint32 productFreeDiamond = 3;
inline int VIPBase::productfreediamond_size() const {
  return productfreediamond_.size();
}
inline void VIPBase::clear_productfreediamond() {
  productfreediamond_.Clear();
}
inline ::google::protobuf::uint32 VIPBase::productfreediamond(int index) const {
  // @@protoc_insertion_point(field_get:ConfigVIP.VIPBase.productFreeDiamond)
  return productfreediamond_.Get(index);
}
inline void VIPBase::set_productfreediamond(int index, ::google::protobuf::uint32 value) {
  productfreediamond_.Set(index, value);
  // @@protoc_insertion_point(field_set:ConfigVIP.VIPBase.productFreeDiamond)
}
inline void VIPBase::add_productfreediamond(::google::protobuf::uint32 value) {
  productfreediamond_.Add(value);
  // @@protoc_insertion_point(field_add:ConfigVIP.VIPBase.productFreeDiamond)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
VIPBase::productfreediamond() const {
  // @@protoc_insertion_point(field_list:ConfigVIP.VIPBase.productFreeDiamond)
  return productfreediamond_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
VIPBase::mutable_productfreediamond() {
  // @@protoc_insertion_point(field_mutable_list:ConfigVIP.VIPBase.productFreeDiamond)
  return &productfreediamond_;
}

// repeated float shipWaitTime = 4;
inline int VIPBase::shipwaittime_size() const {
  return shipwaittime_.size();
}
inline void VIPBase::clear_shipwaittime() {
  shipwaittime_.Clear();
}
inline float VIPBase::shipwaittime(int index) const {
  // @@protoc_insertion_point(field_get:ConfigVIP.VIPBase.shipWaitTime)
  return shipwaittime_.Get(index);
}
inline void VIPBase::set_shipwaittime(int index, float value) {
  shipwaittime_.Set(index, value);
  // @@protoc_insertion_point(field_set:ConfigVIP.VIPBase.shipWaitTime)
}
inline void VIPBase::add_shipwaittime(float value) {
  shipwaittime_.Add(value);
  // @@protoc_insertion_point(field_add:ConfigVIP.VIPBase.shipWaitTime)
}
inline const ::google::protobuf::RepeatedField< float >&
VIPBase::shipwaittime() const {
  // @@protoc_insertion_point(field_list:ConfigVIP.VIPBase.shipWaitTime)
  return shipwaittime_;
}
inline ::google::protobuf::RepeatedField< float >*
VIPBase::mutable_shipwaittime() {
  // @@protoc_insertion_point(field_mutable_list:ConfigVIP.VIPBase.shipWaitTime)
  return &shipwaittime_;
}

// repeated uint32 orderFreeWaitCnt = 5;
inline int VIPBase::orderfreewaitcnt_size() const {
  return orderfreewaitcnt_.size();
}
inline void VIPBase::clear_orderfreewaitcnt() {
  orderfreewaitcnt_.Clear();
}
inline ::google::protobuf::uint32 VIPBase::orderfreewaitcnt(int index) const {
  // @@protoc_insertion_point(field_get:ConfigVIP.VIPBase.orderFreeWaitCnt)
  return orderfreewaitcnt_.Get(index);
}
inline void VIPBase::set_orderfreewaitcnt(int index, ::google::protobuf::uint32 value) {
  orderfreewaitcnt_.Set(index, value);
  // @@protoc_insertion_point(field_set:ConfigVIP.VIPBase.orderFreeWaitCnt)
}
inline void VIPBase::add_orderfreewaitcnt(::google::protobuf::uint32 value) {
  orderfreewaitcnt_.Add(value);
  // @@protoc_insertion_point(field_add:ConfigVIP.VIPBase.orderFreeWaitCnt)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
VIPBase::orderfreewaitcnt() const {
  // @@protoc_insertion_point(field_list:ConfigVIP.VIPBase.orderFreeWaitCnt)
  return orderfreewaitcnt_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
VIPBase::mutable_orderfreewaitcnt() {
  // @@protoc_insertion_point(field_mutable_list:ConfigVIP.VIPBase.orderFreeWaitCnt)
  return &orderfreewaitcnt_;
}

// repeated uint32 shopAddShelfCnt = 6;
inline int VIPBase::shopaddshelfcnt_size() const {
  return shopaddshelfcnt_.size();
}
inline void VIPBase::clear_shopaddshelfcnt() {
  shopaddshelfcnt_.Clear();
}
inline ::google::protobuf::uint32 VIPBase::shopaddshelfcnt(int index) const {
  // @@protoc_insertion_point(field_get:ConfigVIP.VIPBase.shopAddShelfCnt)
  return shopaddshelfcnt_.Get(index);
}
inline void VIPBase::set_shopaddshelfcnt(int index, ::google::protobuf::uint32 value) {
  shopaddshelfcnt_.Set(index, value);
  // @@protoc_insertion_point(field_set:ConfigVIP.VIPBase.shopAddShelfCnt)
}
inline void VIPBase::add_shopaddshelfcnt(::google::protobuf::uint32 value) {
  shopaddshelfcnt_.Add(value);
  // @@protoc_insertion_point(field_add:ConfigVIP.VIPBase.shopAddShelfCnt)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
VIPBase::shopaddshelfcnt() const {
  // @@protoc_insertion_point(field_list:ConfigVIP.VIPBase.shopAddShelfCnt)
  return shopaddshelfcnt_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
VIPBase::mutable_shopaddshelfcnt() {
  // @@protoc_insertion_point(field_mutable_list:ConfigVIP.VIPBase.shopAddShelfCnt)
  return &shopaddshelfcnt_;
}

// repeated uint32 storageAddCnt = 7;
inline int VIPBase::storageaddcnt_size() const {
  return storageaddcnt_.size();
}
inline void VIPBase::clear_storageaddcnt() {
  storageaddcnt_.Clear();
}
inline ::google::protobuf::uint32 VIPBase::storageaddcnt(int index) const {
  // @@protoc_insertion_point(field_get:ConfigVIP.VIPBase.storageAddCnt)
  return storageaddcnt_.Get(index);
}
inline void VIPBase::set_storageaddcnt(int index, ::google::protobuf::uint32 value) {
  storageaddcnt_.Set(index, value);
  // @@protoc_insertion_point(field_set:ConfigVIP.VIPBase.storageAddCnt)
}
inline void VIPBase::add_storageaddcnt(::google::protobuf::uint32 value) {
  storageaddcnt_.Add(value);
  // @@protoc_insertion_point(field_add:ConfigVIP.VIPBase.storageAddCnt)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
VIPBase::storageaddcnt() const {
  // @@protoc_insertion_point(field_list:ConfigVIP.VIPBase.storageAddCnt)
  return storageaddcnt_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
VIPBase::mutable_storageaddcnt() {
  // @@protoc_insertion_point(field_mutable_list:ConfigVIP.VIPBase.storageAddCnt)
  return &storageaddcnt_;
}

// repeated uint32 productAddBoxCnt = 8;
inline int VIPBase::productaddboxcnt_size() const {
  return productaddboxcnt_.size();
}
inline void VIPBase::clear_productaddboxcnt() {
  productaddboxcnt_.Clear();
}
inline ::google::protobuf::uint32 VIPBase::productaddboxcnt(int index) const {
  // @@protoc_insertion_point(field_get:ConfigVIP.VIPBase.productAddBoxCnt)
  return productaddboxcnt_.Get(index);
}
inline void VIPBase::set_productaddboxcnt(int index, ::google::protobuf::uint32 value) {
  productaddboxcnt_.Set(index, value);
  // @@protoc_insertion_point(field_set:ConfigVIP.VIPBase.productAddBoxCnt)
}
inline void VIPBase::add_productaddboxcnt(::google::protobuf::uint32 value) {
  productaddboxcnt_.Add(value);
  // @@protoc_insertion_point(field_add:ConfigVIP.VIPBase.productAddBoxCnt)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
VIPBase::productaddboxcnt() const {
  // @@protoc_insertion_point(field_list:ConfigVIP.VIPBase.productAddBoxCnt)
  return productaddboxcnt_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
VIPBase::mutable_productaddboxcnt() {
  // @@protoc_insertion_point(field_mutable_list:ConfigVIP.VIPBase.productAddBoxCnt)
  return &productaddboxcnt_;
}

// repeated uint32 vipPlatCropsSpeedUp = 9;
inline int VIPBase::vipplatcropsspeedup_size() const {
  return vipplatcropsspeedup_.size();
}
inline void VIPBase::clear_vipplatcropsspeedup() {
  vipplatcropsspeedup_.Clear();
}
inline ::google::protobuf::uint32 VIPBase::vipplatcropsspeedup(int index) const {
  // @@protoc_insertion_point(field_get:ConfigVIP.VIPBase.vipPlatCropsSpeedUp)
  return vipplatcropsspeedup_.Get(index);
}
inline void VIPBase::set_vipplatcropsspeedup(int index, ::google::protobuf::uint32 value) {
  vipplatcropsspeedup_.Set(index, value);
  // @@protoc_insertion_point(field_set:ConfigVIP.VIPBase.vipPlatCropsSpeedUp)
}
inline void VIPBase::add_vipplatcropsspeedup(::google::protobuf::uint32 value) {
  vipplatcropsspeedup_.Add(value);
  // @@protoc_insertion_point(field_add:ConfigVIP.VIPBase.vipPlatCropsSpeedUp)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
VIPBase::vipplatcropsspeedup() const {
  // @@protoc_insertion_point(field_list:ConfigVIP.VIPBase.vipPlatCropsSpeedUp)
  return vipplatcropsspeedup_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
VIPBase::mutable_vipplatcropsspeedup() {
  // @@protoc_insertion_point(field_mutable_list:ConfigVIP.VIPBase.vipPlatCropsSpeedUp)
  return &vipplatcropsspeedup_;
}

// repeated uint32 vipProduceSpeedUp = 10;
inline int VIPBase::vipproducespeedup_size() const {
  return vipproducespeedup_.size();
}
inline void VIPBase::clear_vipproducespeedup() {
  vipproducespeedup_.Clear();
}
inline ::google::protobuf::uint32 VIPBase::vipproducespeedup(int index) const {
  // @@protoc_insertion_point(field_get:ConfigVIP.VIPBase.vipProduceSpeedUp)
  return vipproducespeedup_.Get(index);
}
inline void VIPBase::set_vipproducespeedup(int index, ::google::protobuf::uint32 value) {
  vipproducespeedup_.Set(index, value);
  // @@protoc_insertion_point(field_set:ConfigVIP.VIPBase.vipProduceSpeedUp)
}
inline void VIPBase::add_vipproducespeedup(::google::protobuf::uint32 value) {
  vipproducespeedup_.Add(value);
  // @@protoc_insertion_point(field_add:ConfigVIP.VIPBase.vipProduceSpeedUp)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
VIPBase::vipproducespeedup() const {
  // @@protoc_insertion_point(field_list:ConfigVIP.VIPBase.vipProduceSpeedUp)
  return vipproducespeedup_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
VIPBase::mutable_vipproducespeedup() {
  // @@protoc_insertion_point(field_mutable_list:ConfigVIP.VIPBase.vipProduceSpeedUp)
  return &vipproducespeedup_;
}

// required .ConfigVIP.VIPOrderBonus vipOrderBonus = 11;
inline bool VIPBase::has_viporderbonus() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void VIPBase::set_has_viporderbonus() {
  _has_bits_[0] |= 0x00000400u;
}
inline void VIPBase::clear_has_viporderbonus() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void VIPBase::clear_viporderbonus() {
  if (viporderbonus_ != NULL) viporderbonus_->::ConfigVIP::VIPOrderBonus::Clear();
  clear_has_viporderbonus();
}
inline const ::ConfigVIP::VIPOrderBonus& VIPBase::viporderbonus() const {
  // @@protoc_insertion_point(field_get:ConfigVIP.VIPBase.vipOrderBonus)
  return viporderbonus_ != NULL ? *viporderbonus_ : *default_instance_->viporderbonus_;
}
inline ::ConfigVIP::VIPOrderBonus* VIPBase::mutable_viporderbonus() {
  set_has_viporderbonus();
  if (viporderbonus_ == NULL) viporderbonus_ = new ::ConfigVIP::VIPOrderBonus;
  // @@protoc_insertion_point(field_mutable:ConfigVIP.VIPBase.vipOrderBonus)
  return viporderbonus_;
}
inline ::ConfigVIP::VIPOrderBonus* VIPBase::release_viporderbonus() {
  clear_has_viporderbonus();
  ::ConfigVIP::VIPOrderBonus* temp = viporderbonus_;
  viporderbonus_ = NULL;
  return temp;
}
inline void VIPBase::set_allocated_viporderbonus(::ConfigVIP::VIPOrderBonus* viporderbonus) {
  delete viporderbonus_;
  viporderbonus_ = viporderbonus;
  if (viporderbonus) {
    set_has_viporderbonus();
  } else {
    clear_has_viporderbonus();
  }
  // @@protoc_insertion_point(field_set_allocated:ConfigVIP.VIPBase.vipOrderBonus)
}

// required .ConfigVIP.VIPShipRewardBonus vipShipRewardBonus = 12;
inline bool VIPBase::has_vipshiprewardbonus() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void VIPBase::set_has_vipshiprewardbonus() {
  _has_bits_[0] |= 0x00000800u;
}
inline void VIPBase::clear_has_vipshiprewardbonus() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void VIPBase::clear_vipshiprewardbonus() {
  if (vipshiprewardbonus_ != NULL) vipshiprewardbonus_->::ConfigVIP::VIPShipRewardBonus::Clear();
  clear_has_vipshiprewardbonus();
}
inline const ::ConfigVIP::VIPShipRewardBonus& VIPBase::vipshiprewardbonus() const {
  // @@protoc_insertion_point(field_get:ConfigVIP.VIPBase.vipShipRewardBonus)
  return vipshiprewardbonus_ != NULL ? *vipshiprewardbonus_ : *default_instance_->vipshiprewardbonus_;
}
inline ::ConfigVIP::VIPShipRewardBonus* VIPBase::mutable_vipshiprewardbonus() {
  set_has_vipshiprewardbonus();
  if (vipshiprewardbonus_ == NULL) vipshiprewardbonus_ = new ::ConfigVIP::VIPShipRewardBonus;
  // @@protoc_insertion_point(field_mutable:ConfigVIP.VIPBase.vipShipRewardBonus)
  return vipshiprewardbonus_;
}
inline ::ConfigVIP::VIPShipRewardBonus* VIPBase::release_vipshiprewardbonus() {
  clear_has_vipshiprewardbonus();
  ::ConfigVIP::VIPShipRewardBonus* temp = vipshiprewardbonus_;
  vipshiprewardbonus_ = NULL;
  return temp;
}
inline void VIPBase::set_allocated_vipshiprewardbonus(::ConfigVIP::VIPShipRewardBonus* vipshiprewardbonus) {
  delete vipshiprewardbonus_;
  vipshiprewardbonus_ = vipshiprewardbonus;
  if (vipshiprewardbonus) {
    set_has_vipshiprewardbonus();
  } else {
    clear_has_vipshiprewardbonus();
  }
  // @@protoc_insertion_point(field_set_allocated:ConfigVIP.VIPBase.vipShipRewardBonus)
}

// repeated uint32 vipAllianceTaskAddCnt = 13;
inline int VIPBase::vipalliancetaskaddcnt_size() const {
  return vipalliancetaskaddcnt_.size();
}
inline void VIPBase::clear_vipalliancetaskaddcnt() {
  vipalliancetaskaddcnt_.Clear();
}
inline ::google::protobuf::uint32 VIPBase::vipalliancetaskaddcnt(int index) const {
  // @@protoc_insertion_point(field_get:ConfigVIP.VIPBase.vipAllianceTaskAddCnt)
  return vipalliancetaskaddcnt_.Get(index);
}
inline void VIPBase::set_vipalliancetaskaddcnt(int index, ::google::protobuf::uint32 value) {
  vipalliancetaskaddcnt_.Set(index, value);
  // @@protoc_insertion_point(field_set:ConfigVIP.VIPBase.vipAllianceTaskAddCnt)
}
inline void VIPBase::add_vipalliancetaskaddcnt(::google::protobuf::uint32 value) {
  vipalliancetaskaddcnt_.Add(value);
  // @@protoc_insertion_point(field_add:ConfigVIP.VIPBase.vipAllianceTaskAddCnt)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
VIPBase::vipalliancetaskaddcnt() const {
  // @@protoc_insertion_point(field_list:ConfigVIP.VIPBase.vipAllianceTaskAddCnt)
  return vipalliancetaskaddcnt_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
VIPBase::mutable_vipalliancetaskaddcnt() {
  // @@protoc_insertion_point(field_mutable_list:ConfigVIP.VIPBase.vipAllianceTaskAddCnt)
  return &vipalliancetaskaddcnt_;
}

// repeated uint32 vipAnimalSpeedUp = 14;
inline int VIPBase::vipanimalspeedup_size() const {
  return vipanimalspeedup_.size();
}
inline void VIPBase::clear_vipanimalspeedup() {
  vipanimalspeedup_.Clear();
}
inline ::google::protobuf::uint32 VIPBase::vipanimalspeedup(int index) const {
  // @@protoc_insertion_point(field_get:ConfigVIP.VIPBase.vipAnimalSpeedUp)
  return vipanimalspeedup_.Get(index);
}
inline void VIPBase::set_vipanimalspeedup(int index, ::google::protobuf::uint32 value) {
  vipanimalspeedup_.Set(index, value);
  // @@protoc_insertion_point(field_set:ConfigVIP.VIPBase.vipAnimalSpeedUp)
}
inline void VIPBase::add_vipanimalspeedup(::google::protobuf::uint32 value) {
  vipanimalspeedup_.Add(value);
  // @@protoc_insertion_point(field_add:ConfigVIP.VIPBase.vipAnimalSpeedUp)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
VIPBase::vipanimalspeedup() const {
  // @@protoc_insertion_point(field_list:ConfigVIP.VIPBase.vipAnimalSpeedUp)
  return vipanimalspeedup_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
VIPBase::mutable_vipanimalspeedup() {
  // @@protoc_insertion_point(field_mutable_list:ConfigVIP.VIPBase.vipAnimalSpeedUp)
  return &vipanimalspeedup_;
}

// repeated uint32 vipCompetitionIntegral = 15;
inline int VIPBase::vipcompetitionintegral_size() const {
  return vipcompetitionintegral_.size();
}
inline void VIPBase::clear_vipcompetitionintegral() {
  vipcompetitionintegral_.Clear();
}
inline ::google::protobuf::uint32 VIPBase::vipcompetitionintegral(int index) const {
  // @@protoc_insertion_point(field_get:ConfigVIP.VIPBase.vipCompetitionIntegral)
  return vipcompetitionintegral_.Get(index);
}
inline void VIPBase::set_vipcompetitionintegral(int index, ::google::protobuf::uint32 value) {
  vipcompetitionintegral_.Set(index, value);
  // @@protoc_insertion_point(field_set:ConfigVIP.VIPBase.vipCompetitionIntegral)
}
inline void VIPBase::add_vipcompetitionintegral(::google::protobuf::uint32 value) {
  vipcompetitionintegral_.Add(value);
  // @@protoc_insertion_point(field_add:ConfigVIP.VIPBase.vipCompetitionIntegral)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
VIPBase::vipcompetitionintegral() const {
  // @@protoc_insertion_point(field_list:ConfigVIP.VIPBase.vipCompetitionIntegral)
  return vipcompetitionintegral_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
VIPBase::mutable_vipcompetitionintegral() {
  // @@protoc_insertion_point(field_mutable_list:ConfigVIP.VIPBase.vipCompetitionIntegral)
  return &vipcompetitionintegral_;
}

// -------------------------------------------------------------------

// VIPCfgInfo

// required .ConfigVIP.VIPBase vipInfo = 1;
inline bool VIPCfgInfo::has_vipinfo() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void VIPCfgInfo::set_has_vipinfo() {
  _has_bits_[0] |= 0x00000001u;
}
inline void VIPCfgInfo::clear_has_vipinfo() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void VIPCfgInfo::clear_vipinfo() {
  if (vipinfo_ != NULL) vipinfo_->::ConfigVIP::VIPBase::Clear();
  clear_has_vipinfo();
}
inline const ::ConfigVIP::VIPBase& VIPCfgInfo::vipinfo() const {
  // @@protoc_insertion_point(field_get:ConfigVIP.VIPCfgInfo.vipInfo)
  return vipinfo_ != NULL ? *vipinfo_ : *default_instance_->vipinfo_;
}
inline ::ConfigVIP::VIPBase* VIPCfgInfo::mutable_vipinfo() {
  set_has_vipinfo();
  if (vipinfo_ == NULL) vipinfo_ = new ::ConfigVIP::VIPBase;
  // @@protoc_insertion_point(field_mutable:ConfigVIP.VIPCfgInfo.vipInfo)
  return vipinfo_;
}
inline ::ConfigVIP::VIPBase* VIPCfgInfo::release_vipinfo() {
  clear_has_vipinfo();
  ::ConfigVIP::VIPBase* temp = vipinfo_;
  vipinfo_ = NULL;
  return temp;
}
inline void VIPCfgInfo::set_allocated_vipinfo(::ConfigVIP::VIPBase* vipinfo) {
  delete vipinfo_;
  vipinfo_ = vipinfo;
  if (vipinfo) {
    set_has_vipinfo();
  } else {
    clear_has_vipinfo();
  }
  // @@protoc_insertion_point(field_set_allocated:ConfigVIP.VIPCfgInfo.vipInfo)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace ConfigVIP

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_ConfigVIP_2eproto__INCLUDED
