// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ProtoDynamicInfo.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "ProtoDynamicInfo.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace ProtoDynamicInfo {

namespace {

const ::google::protobuf::Descriptor* DynamicInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DynamicInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetDynamicInfoReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetDynamicInfoReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetDynamicInfoResp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetDynamicInfoResp_reflection_ = NULL;
const ::google::protobuf::Descriptor* HasNewDynamicInfoReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  HasNewDynamicInfoReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* HasNewDynamicInfoResp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  HasNewDynamicInfoResp_reflection_ = NULL;
const ::google::protobuf::Descriptor* DeleteDynamicInfoReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DeleteDynamicInfoReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* RequestOtherUserMakeDy_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RequestOtherUserMakeDy_reflection_ = NULL;
const ::google::protobuf::Descriptor* LocationHelpReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  LocationHelpReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* HandleLocationHelpReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  HandleLocationHelpReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* HandleLocationHelpResq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  HandleLocationHelpResq_reflection_ = NULL;
const ::google::protobuf::Descriptor* ClickOrderHelpReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ClickOrderHelpReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* ClickOrderHelpResp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ClickOrderHelpResp_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_ProtoDynamicInfo_2eproto() {
  protobuf_AddDesc_ProtoDynamicInfo_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "ProtoDynamicInfo.proto");
  GOOGLE_CHECK(file != NULL);
  DynamicInfo_descriptor_ = file->message_type(0);
  static const int DynamicInfo_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DynamicInfo, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DynamicInfo, ts_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DynamicInfo, typeid__),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DynamicInfo, opuid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DynamicInfo, productid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DynamicInfo, coin_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DynamicInfo, words_),
  };
  DynamicInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DynamicInfo_descriptor_,
      DynamicInfo::default_instance_,
      DynamicInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DynamicInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DynamicInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(DynamicInfo));
  GetDynamicInfoReq_descriptor_ = file->message_type(1);
  static const int GetDynamicInfoReq_offsets_[1] = {
  };
  GetDynamicInfoReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GetDynamicInfoReq_descriptor_,
      GetDynamicInfoReq::default_instance_,
      GetDynamicInfoReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetDynamicInfoReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetDynamicInfoReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GetDynamicInfoReq));
  GetDynamicInfoResp_descriptor_ = file->message_type(2);
  static const int GetDynamicInfoResp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetDynamicInfoResp, arraydyinfo_),
  };
  GetDynamicInfoResp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GetDynamicInfoResp_descriptor_,
      GetDynamicInfoResp::default_instance_,
      GetDynamicInfoResp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetDynamicInfoResp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetDynamicInfoResp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GetDynamicInfoResp));
  HasNewDynamicInfoReq_descriptor_ = file->message_type(3);
  static const int HasNewDynamicInfoReq_offsets_[1] = {
  };
  HasNewDynamicInfoReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      HasNewDynamicInfoReq_descriptor_,
      HasNewDynamicInfoReq::default_instance_,
      HasNewDynamicInfoReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HasNewDynamicInfoReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HasNewDynamicInfoReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(HasNewDynamicInfoReq));
  HasNewDynamicInfoResp_descriptor_ = file->message_type(4);
  static const int HasNewDynamicInfoResp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HasNewDynamicInfoResp, hasnewdy_),
  };
  HasNewDynamicInfoResp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      HasNewDynamicInfoResp_descriptor_,
      HasNewDynamicInfoResp::default_instance_,
      HasNewDynamicInfoResp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HasNewDynamicInfoResp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HasNewDynamicInfoResp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(HasNewDynamicInfoResp));
  DeleteDynamicInfoReq_descriptor_ = file->message_type(5);
  static const int DeleteDynamicInfoReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteDynamicInfoReq, id_),
  };
  DeleteDynamicInfoReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DeleteDynamicInfoReq_descriptor_,
      DeleteDynamicInfoReq::default_instance_,
      DeleteDynamicInfoReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteDynamicInfoReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteDynamicInfoReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(DeleteDynamicInfoReq));
  RequestOtherUserMakeDy_descriptor_ = file->message_type(6);
  static const int RequestOtherUserMakeDy_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestOtherUserMakeDy, myuid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestOtherUserMakeDy, othuid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestOtherUserMakeDy, typeid__),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestOtherUserMakeDy, productid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestOtherUserMakeDy, coin_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestOtherUserMakeDy, words_),
  };
  RequestOtherUserMakeDy_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      RequestOtherUserMakeDy_descriptor_,
      RequestOtherUserMakeDy::default_instance_,
      RequestOtherUserMakeDy_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestOtherUserMakeDy, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestOtherUserMakeDy, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(RequestOtherUserMakeDy));
  LocationHelpReq_descriptor_ = file->message_type(7);
  static const int LocationHelpReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LocationHelpReq, typeid__),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LocationHelpReq, arrayuid_),
  };
  LocationHelpReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      LocationHelpReq_descriptor_,
      LocationHelpReq::default_instance_,
      LocationHelpReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LocationHelpReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LocationHelpReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(LocationHelpReq));
  HandleLocationHelpReq_descriptor_ = file->message_type(8);
  static const int HandleLocationHelpReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HandleLocationHelpReq, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HandleLocationHelpReq, typeid__),
  };
  HandleLocationHelpReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      HandleLocationHelpReq_descriptor_,
      HandleLocationHelpReq::default_instance_,
      HandleLocationHelpReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HandleLocationHelpReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HandleLocationHelpReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(HandleLocationHelpReq));
  HandleLocationHelpResq_descriptor_ = file->message_type(9);
  static const int HandleLocationHelpResq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HandleLocationHelpResq, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HandleLocationHelpResq, newtypeid_),
  };
  HandleLocationHelpResq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      HandleLocationHelpResq_descriptor_,
      HandleLocationHelpResq::default_instance_,
      HandleLocationHelpResq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HandleLocationHelpResq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HandleLocationHelpResq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(HandleLocationHelpResq));
  ClickOrderHelpReq_descriptor_ = file->message_type(10);
  static const int ClickOrderHelpReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClickOrderHelpReq, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClickOrderHelpReq, typeid__),
  };
  ClickOrderHelpReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ClickOrderHelpReq_descriptor_,
      ClickOrderHelpReq::default_instance_,
      ClickOrderHelpReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClickOrderHelpReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClickOrderHelpReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ClickOrderHelpReq));
  ClickOrderHelpResp_descriptor_ = file->message_type(11);
  static const int ClickOrderHelpResp_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClickOrderHelpResp, result_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClickOrderHelpResp, index_),
  };
  ClickOrderHelpResp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ClickOrderHelpResp_descriptor_,
      ClickOrderHelpResp::default_instance_,
      ClickOrderHelpResp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClickOrderHelpResp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClickOrderHelpResp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ClickOrderHelpResp));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_ProtoDynamicInfo_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DynamicInfo_descriptor_, &DynamicInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GetDynamicInfoReq_descriptor_, &GetDynamicInfoReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GetDynamicInfoResp_descriptor_, &GetDynamicInfoResp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    HasNewDynamicInfoReq_descriptor_, &HasNewDynamicInfoReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    HasNewDynamicInfoResp_descriptor_, &HasNewDynamicInfoResp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DeleteDynamicInfoReq_descriptor_, &DeleteDynamicInfoReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    RequestOtherUserMakeDy_descriptor_, &RequestOtherUserMakeDy::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    LocationHelpReq_descriptor_, &LocationHelpReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    HandleLocationHelpReq_descriptor_, &HandleLocationHelpReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    HandleLocationHelpResq_descriptor_, &HandleLocationHelpResq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ClickOrderHelpReq_descriptor_, &ClickOrderHelpReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ClickOrderHelpResp_descriptor_, &ClickOrderHelpResp::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_ProtoDynamicInfo_2eproto() {
  delete DynamicInfo::default_instance_;
  delete DynamicInfo_reflection_;
  delete GetDynamicInfoReq::default_instance_;
  delete GetDynamicInfoReq_reflection_;
  delete GetDynamicInfoResp::default_instance_;
  delete GetDynamicInfoResp_reflection_;
  delete HasNewDynamicInfoReq::default_instance_;
  delete HasNewDynamicInfoReq_reflection_;
  delete HasNewDynamicInfoResp::default_instance_;
  delete HasNewDynamicInfoResp_reflection_;
  delete DeleteDynamicInfoReq::default_instance_;
  delete DeleteDynamicInfoReq_reflection_;
  delete RequestOtherUserMakeDy::default_instance_;
  delete RequestOtherUserMakeDy_reflection_;
  delete LocationHelpReq::default_instance_;
  delete LocationHelpReq_reflection_;
  delete HandleLocationHelpReq::default_instance_;
  delete HandleLocationHelpReq_reflection_;
  delete HandleLocationHelpResq::default_instance_;
  delete HandleLocationHelpResq_reflection_;
  delete ClickOrderHelpReq::default_instance_;
  delete ClickOrderHelpReq_reflection_;
  delete ClickOrderHelpResp::default_instance_;
  delete ClickOrderHelpResp_reflection_;
}

void protobuf_AddDesc_ProtoDynamicInfo_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\026ProtoDynamicInfo.proto\022\020ProtoDynamicIn"
    "fo\"t\n\013DynamicInfo\022\n\n\002id\030\001 \002(\r\022\n\n\002ts\030\002 \002("
    "\r\022\016\n\006typeId\030\003 \002(\r\022\r\n\005opUid\030\004 \001(\r\022\021\n\tprod"
    "uctId\030\005 \001(\r\022\014\n\004coin\030\006 \001(\r\022\r\n\005words\030\007 \001(\014"
    "\"\023\n\021GetDynamicInfoReq\"H\n\022GetDynamicInfoR"
    "esp\0222\n\013arrayDyInfo\030\001 \003(\0132\035.ProtoDynamicI"
    "nfo.DynamicInfo\"\026\n\024HasNewDynamicInfoReq\""
    ")\n\025HasNewDynamicInfoResp\022\020\n\010HasNewDy\030\001 \002"
    "(\010\"\"\n\024DeleteDynamicInfoReq\022\n\n\002id\030\001 \002(\r\"w"
    "\n\026RequestOtherUserMakeDy\022\r\n\005myuid\030\001 \002(\r\022"
    "\016\n\006othuid\030\002 \002(\r\022\016\n\006typeid\030\003 \002(\r\022\021\n\tprodu"
    "ctId\030\004 \001(\r\022\014\n\004coin\030\005 \001(\r\022\r\n\005words\030\006 \001(\014\""
    "3\n\017LocationHelpReq\022\016\n\006typeid\030\001 \002(\r\022\020\n\010ar"
    "rayuid\030\002 \003(\r\"3\n\025HandleLocationHelpReq\022\n\n"
    "\002id\030\001 \002(\r\022\016\n\006typeid\030\002 \002(\r\"7\n\026HandleLocat"
    "ionHelpResq\022\n\n\002id\030\001 \002(\r\022\021\n\tnewtypeid\030\002 \002"
    "(\r\"/\n\021ClickOrderHelpReq\022\n\n\002id\030\001 \002(\r\022\016\n\006t"
    "ypeId\030\002 \002(\r\"3\n\022ClickOrderHelpResp\022\016\n\006res"
    "ult\030\001 \002(\r\022\r\n\005index\030\002 \001(\r", 744);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "ProtoDynamicInfo.proto", &protobuf_RegisterTypes);
  DynamicInfo::default_instance_ = new DynamicInfo();
  GetDynamicInfoReq::default_instance_ = new GetDynamicInfoReq();
  GetDynamicInfoResp::default_instance_ = new GetDynamicInfoResp();
  HasNewDynamicInfoReq::default_instance_ = new HasNewDynamicInfoReq();
  HasNewDynamicInfoResp::default_instance_ = new HasNewDynamicInfoResp();
  DeleteDynamicInfoReq::default_instance_ = new DeleteDynamicInfoReq();
  RequestOtherUserMakeDy::default_instance_ = new RequestOtherUserMakeDy();
  LocationHelpReq::default_instance_ = new LocationHelpReq();
  HandleLocationHelpReq::default_instance_ = new HandleLocationHelpReq();
  HandleLocationHelpResq::default_instance_ = new HandleLocationHelpResq();
  ClickOrderHelpReq::default_instance_ = new ClickOrderHelpReq();
  ClickOrderHelpResp::default_instance_ = new ClickOrderHelpResp();
  DynamicInfo::default_instance_->InitAsDefaultInstance();
  GetDynamicInfoReq::default_instance_->InitAsDefaultInstance();
  GetDynamicInfoResp::default_instance_->InitAsDefaultInstance();
  HasNewDynamicInfoReq::default_instance_->InitAsDefaultInstance();
  HasNewDynamicInfoResp::default_instance_->InitAsDefaultInstance();
  DeleteDynamicInfoReq::default_instance_->InitAsDefaultInstance();
  RequestOtherUserMakeDy::default_instance_->InitAsDefaultInstance();
  LocationHelpReq::default_instance_->InitAsDefaultInstance();
  HandleLocationHelpReq::default_instance_->InitAsDefaultInstance();
  HandleLocationHelpResq::default_instance_->InitAsDefaultInstance();
  ClickOrderHelpReq::default_instance_->InitAsDefaultInstance();
  ClickOrderHelpResp::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_ProtoDynamicInfo_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_ProtoDynamicInfo_2eproto {
  StaticDescriptorInitializer_ProtoDynamicInfo_2eproto() {
    protobuf_AddDesc_ProtoDynamicInfo_2eproto();
  }
} static_descriptor_initializer_ProtoDynamicInfo_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int DynamicInfo::kIdFieldNumber;
const int DynamicInfo::kTsFieldNumber;
const int DynamicInfo::kTypeIdFieldNumber;
const int DynamicInfo::kOpUidFieldNumber;
const int DynamicInfo::kProductIdFieldNumber;
const int DynamicInfo::kCoinFieldNumber;
const int DynamicInfo::kWordsFieldNumber;
#endif  // !_MSC_VER

DynamicInfo::DynamicInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoDynamicInfo.DynamicInfo)
}

void DynamicInfo::InitAsDefaultInstance() {
}

DynamicInfo::DynamicInfo(const DynamicInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ProtoDynamicInfo.DynamicInfo)
}

void DynamicInfo::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  id_ = 0u;
  ts_ = 0u;
  typeid__ = 0u;
  opuid_ = 0u;
  productid_ = 0u;
  coin_ = 0u;
  words_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DynamicInfo::~DynamicInfo() {
  // @@protoc_insertion_point(destructor:ProtoDynamicInfo.DynamicInfo)
  SharedDtor();
}

void DynamicInfo::SharedDtor() {
  if (words_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete words_;
  }
  if (this != default_instance_) {
  }
}

void DynamicInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DynamicInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DynamicInfo_descriptor_;
}

const DynamicInfo& DynamicInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoDynamicInfo_2eproto();
  return *default_instance_;
}

DynamicInfo* DynamicInfo::default_instance_ = NULL;

DynamicInfo* DynamicInfo::New() const {
  return new DynamicInfo;
}

void DynamicInfo::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<DynamicInfo*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 127) {
    ZR_(id_, coin_);
    if (has_words()) {
      if (words_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        words_->clear();
      }
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool DynamicInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoDynamicInfo.DynamicInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_ts;
        break;
      }

      // required uint32 ts = 2;
      case 2: {
        if (tag == 16) {
         parse_ts:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ts_)));
          set_has_ts();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_typeId;
        break;
      }

      // required uint32 typeId = 3;
      case 3: {
        if (tag == 24) {
         parse_typeId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &typeid__)));
          set_has_typeid_();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_opUid;
        break;
      }

      // optional uint32 opUid = 4;
      case 4: {
        if (tag == 32) {
         parse_opUid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &opuid_)));
          set_has_opuid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_productId;
        break;
      }

      // optional uint32 productId = 5;
      case 5: {
        if (tag == 40) {
         parse_productId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &productid_)));
          set_has_productid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_coin;
        break;
      }

      // optional uint32 coin = 6;
      case 6: {
        if (tag == 48) {
         parse_coin:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &coin_)));
          set_has_coin();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_words;
        break;
      }

      // optional bytes words = 7;
      case 7: {
        if (tag == 58) {
         parse_words:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_words()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoDynamicInfo.DynamicInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoDynamicInfo.DynamicInfo)
  return false;
#undef DO_
}

void DynamicInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoDynamicInfo.DynamicInfo)
  // required uint32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  // required uint32 ts = 2;
  if (has_ts()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->ts(), output);
  }

  // required uint32 typeId = 3;
  if (has_typeid_()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->typeid_(), output);
  }

  // optional uint32 opUid = 4;
  if (has_opuid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->opuid(), output);
  }

  // optional uint32 productId = 5;
  if (has_productid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->productid(), output);
  }

  // optional uint32 coin = 6;
  if (has_coin()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->coin(), output);
  }

  // optional bytes words = 7;
  if (has_words()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      7, this->words(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoDynamicInfo.DynamicInfo)
}

::google::protobuf::uint8* DynamicInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoDynamicInfo.DynamicInfo)
  // required uint32 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  // required uint32 ts = 2;
  if (has_ts()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->ts(), target);
  }

  // required uint32 typeId = 3;
  if (has_typeid_()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->typeid_(), target);
  }

  // optional uint32 opUid = 4;
  if (has_opuid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->opuid(), target);
  }

  // optional uint32 productId = 5;
  if (has_productid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->productid(), target);
  }

  // optional uint32 coin = 6;
  if (has_coin()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->coin(), target);
  }

  // optional bytes words = 7;
  if (has_words()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        7, this->words(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoDynamicInfo.DynamicInfo)
  return target;
}

int DynamicInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->id());
    }

    // required uint32 ts = 2;
    if (has_ts()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->ts());
    }

    // required uint32 typeId = 3;
    if (has_typeid_()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->typeid_());
    }

    // optional uint32 opUid = 4;
    if (has_opuid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->opuid());
    }

    // optional uint32 productId = 5;
    if (has_productid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->productid());
    }

    // optional uint32 coin = 6;
    if (has_coin()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->coin());
    }

    // optional bytes words = 7;
    if (has_words()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->words());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DynamicInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const DynamicInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const DynamicInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void DynamicInfo::MergeFrom(const DynamicInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_ts()) {
      set_ts(from.ts());
    }
    if (from.has_typeid_()) {
      set_typeid_(from.typeid_());
    }
    if (from.has_opuid()) {
      set_opuid(from.opuid());
    }
    if (from.has_productid()) {
      set_productid(from.productid());
    }
    if (from.has_coin()) {
      set_coin(from.coin());
    }
    if (from.has_words()) {
      set_words(from.words());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void DynamicInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DynamicInfo::CopyFrom(const DynamicInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DynamicInfo::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  return true;
}

void DynamicInfo::Swap(DynamicInfo* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(ts_, other->ts_);
    std::swap(typeid__, other->typeid__);
    std::swap(opuid_, other->opuid_);
    std::swap(productid_, other->productid_);
    std::swap(coin_, other->coin_);
    std::swap(words_, other->words_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata DynamicInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DynamicInfo_descriptor_;
  metadata.reflection = DynamicInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

GetDynamicInfoReq::GetDynamicInfoReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoDynamicInfo.GetDynamicInfoReq)
}

void GetDynamicInfoReq::InitAsDefaultInstance() {
}

GetDynamicInfoReq::GetDynamicInfoReq(const GetDynamicInfoReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ProtoDynamicInfo.GetDynamicInfoReq)
}

void GetDynamicInfoReq::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GetDynamicInfoReq::~GetDynamicInfoReq() {
  // @@protoc_insertion_point(destructor:ProtoDynamicInfo.GetDynamicInfoReq)
  SharedDtor();
}

void GetDynamicInfoReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GetDynamicInfoReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetDynamicInfoReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetDynamicInfoReq_descriptor_;
}

const GetDynamicInfoReq& GetDynamicInfoReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoDynamicInfo_2eproto();
  return *default_instance_;
}

GetDynamicInfoReq* GetDynamicInfoReq::default_instance_ = NULL;

GetDynamicInfoReq* GetDynamicInfoReq::New() const {
  return new GetDynamicInfoReq;
}

void GetDynamicInfoReq::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GetDynamicInfoReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoDynamicInfo.GetDynamicInfoReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoDynamicInfo.GetDynamicInfoReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoDynamicInfo.GetDynamicInfoReq)
  return false;
#undef DO_
}

void GetDynamicInfoReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoDynamicInfo.GetDynamicInfoReq)
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoDynamicInfo.GetDynamicInfoReq)
}

::google::protobuf::uint8* GetDynamicInfoReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoDynamicInfo.GetDynamicInfoReq)
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoDynamicInfo.GetDynamicInfoReq)
  return target;
}

int GetDynamicInfoReq::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetDynamicInfoReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GetDynamicInfoReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GetDynamicInfoReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GetDynamicInfoReq::MergeFrom(const GetDynamicInfoReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GetDynamicInfoReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetDynamicInfoReq::CopyFrom(const GetDynamicInfoReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetDynamicInfoReq::IsInitialized() const {

  return true;
}

void GetDynamicInfoReq::Swap(GetDynamicInfoReq* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GetDynamicInfoReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetDynamicInfoReq_descriptor_;
  metadata.reflection = GetDynamicInfoReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GetDynamicInfoResp::kArrayDyInfoFieldNumber;
#endif  // !_MSC_VER

GetDynamicInfoResp::GetDynamicInfoResp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoDynamicInfo.GetDynamicInfoResp)
}

void GetDynamicInfoResp::InitAsDefaultInstance() {
}

GetDynamicInfoResp::GetDynamicInfoResp(const GetDynamicInfoResp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ProtoDynamicInfo.GetDynamicInfoResp)
}

void GetDynamicInfoResp::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GetDynamicInfoResp::~GetDynamicInfoResp() {
  // @@protoc_insertion_point(destructor:ProtoDynamicInfo.GetDynamicInfoResp)
  SharedDtor();
}

void GetDynamicInfoResp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GetDynamicInfoResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetDynamicInfoResp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetDynamicInfoResp_descriptor_;
}

const GetDynamicInfoResp& GetDynamicInfoResp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoDynamicInfo_2eproto();
  return *default_instance_;
}

GetDynamicInfoResp* GetDynamicInfoResp::default_instance_ = NULL;

GetDynamicInfoResp* GetDynamicInfoResp::New() const {
  return new GetDynamicInfoResp;
}

void GetDynamicInfoResp::Clear() {
  arraydyinfo_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GetDynamicInfoResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoDynamicInfo.GetDynamicInfoResp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ProtoDynamicInfo.DynamicInfo arrayDyInfo = 1;
      case 1: {
        if (tag == 10) {
         parse_arrayDyInfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_arraydyinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_arrayDyInfo;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoDynamicInfo.GetDynamicInfoResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoDynamicInfo.GetDynamicInfoResp)
  return false;
#undef DO_
}

void GetDynamicInfoResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoDynamicInfo.GetDynamicInfoResp)
  // repeated .ProtoDynamicInfo.DynamicInfo arrayDyInfo = 1;
  for (int i = 0; i < this->arraydyinfo_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->arraydyinfo(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoDynamicInfo.GetDynamicInfoResp)
}

::google::protobuf::uint8* GetDynamicInfoResp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoDynamicInfo.GetDynamicInfoResp)
  // repeated .ProtoDynamicInfo.DynamicInfo arrayDyInfo = 1;
  for (int i = 0; i < this->arraydyinfo_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->arraydyinfo(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoDynamicInfo.GetDynamicInfoResp)
  return target;
}

int GetDynamicInfoResp::ByteSize() const {
  int total_size = 0;

  // repeated .ProtoDynamicInfo.DynamicInfo arrayDyInfo = 1;
  total_size += 1 * this->arraydyinfo_size();
  for (int i = 0; i < this->arraydyinfo_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->arraydyinfo(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetDynamicInfoResp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GetDynamicInfoResp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GetDynamicInfoResp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GetDynamicInfoResp::MergeFrom(const GetDynamicInfoResp& from) {
  GOOGLE_CHECK_NE(&from, this);
  arraydyinfo_.MergeFrom(from.arraydyinfo_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GetDynamicInfoResp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetDynamicInfoResp::CopyFrom(const GetDynamicInfoResp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetDynamicInfoResp::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->arraydyinfo())) return false;
  return true;
}

void GetDynamicInfoResp::Swap(GetDynamicInfoResp* other) {
  if (other != this) {
    arraydyinfo_.Swap(&other->arraydyinfo_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GetDynamicInfoResp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetDynamicInfoResp_descriptor_;
  metadata.reflection = GetDynamicInfoResp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

HasNewDynamicInfoReq::HasNewDynamicInfoReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoDynamicInfo.HasNewDynamicInfoReq)
}

void HasNewDynamicInfoReq::InitAsDefaultInstance() {
}

HasNewDynamicInfoReq::HasNewDynamicInfoReq(const HasNewDynamicInfoReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ProtoDynamicInfo.HasNewDynamicInfoReq)
}

void HasNewDynamicInfoReq::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

HasNewDynamicInfoReq::~HasNewDynamicInfoReq() {
  // @@protoc_insertion_point(destructor:ProtoDynamicInfo.HasNewDynamicInfoReq)
  SharedDtor();
}

void HasNewDynamicInfoReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void HasNewDynamicInfoReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HasNewDynamicInfoReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return HasNewDynamicInfoReq_descriptor_;
}

const HasNewDynamicInfoReq& HasNewDynamicInfoReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoDynamicInfo_2eproto();
  return *default_instance_;
}

HasNewDynamicInfoReq* HasNewDynamicInfoReq::default_instance_ = NULL;

HasNewDynamicInfoReq* HasNewDynamicInfoReq::New() const {
  return new HasNewDynamicInfoReq;
}

void HasNewDynamicInfoReq::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool HasNewDynamicInfoReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoDynamicInfo.HasNewDynamicInfoReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoDynamicInfo.HasNewDynamicInfoReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoDynamicInfo.HasNewDynamicInfoReq)
  return false;
#undef DO_
}

void HasNewDynamicInfoReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoDynamicInfo.HasNewDynamicInfoReq)
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoDynamicInfo.HasNewDynamicInfoReq)
}

::google::protobuf::uint8* HasNewDynamicInfoReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoDynamicInfo.HasNewDynamicInfoReq)
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoDynamicInfo.HasNewDynamicInfoReq)
  return target;
}

int HasNewDynamicInfoReq::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HasNewDynamicInfoReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const HasNewDynamicInfoReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const HasNewDynamicInfoReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void HasNewDynamicInfoReq::MergeFrom(const HasNewDynamicInfoReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void HasNewDynamicInfoReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HasNewDynamicInfoReq::CopyFrom(const HasNewDynamicInfoReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HasNewDynamicInfoReq::IsInitialized() const {

  return true;
}

void HasNewDynamicInfoReq::Swap(HasNewDynamicInfoReq* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata HasNewDynamicInfoReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = HasNewDynamicInfoReq_descriptor_;
  metadata.reflection = HasNewDynamicInfoReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int HasNewDynamicInfoResp::kHasNewDyFieldNumber;
#endif  // !_MSC_VER

HasNewDynamicInfoResp::HasNewDynamicInfoResp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoDynamicInfo.HasNewDynamicInfoResp)
}

void HasNewDynamicInfoResp::InitAsDefaultInstance() {
}

HasNewDynamicInfoResp::HasNewDynamicInfoResp(const HasNewDynamicInfoResp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ProtoDynamicInfo.HasNewDynamicInfoResp)
}

void HasNewDynamicInfoResp::SharedCtor() {
  _cached_size_ = 0;
  hasnewdy_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

HasNewDynamicInfoResp::~HasNewDynamicInfoResp() {
  // @@protoc_insertion_point(destructor:ProtoDynamicInfo.HasNewDynamicInfoResp)
  SharedDtor();
}

void HasNewDynamicInfoResp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void HasNewDynamicInfoResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HasNewDynamicInfoResp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return HasNewDynamicInfoResp_descriptor_;
}

const HasNewDynamicInfoResp& HasNewDynamicInfoResp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoDynamicInfo_2eproto();
  return *default_instance_;
}

HasNewDynamicInfoResp* HasNewDynamicInfoResp::default_instance_ = NULL;

HasNewDynamicInfoResp* HasNewDynamicInfoResp::New() const {
  return new HasNewDynamicInfoResp;
}

void HasNewDynamicInfoResp::Clear() {
  hasnewdy_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool HasNewDynamicInfoResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoDynamicInfo.HasNewDynamicInfoResp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bool HasNewDy = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &hasnewdy_)));
          set_has_hasnewdy();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoDynamicInfo.HasNewDynamicInfoResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoDynamicInfo.HasNewDynamicInfoResp)
  return false;
#undef DO_
}

void HasNewDynamicInfoResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoDynamicInfo.HasNewDynamicInfoResp)
  // required bool HasNewDy = 1;
  if (has_hasnewdy()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->hasnewdy(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoDynamicInfo.HasNewDynamicInfoResp)
}

::google::protobuf::uint8* HasNewDynamicInfoResp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoDynamicInfo.HasNewDynamicInfoResp)
  // required bool HasNewDy = 1;
  if (has_hasnewdy()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->hasnewdy(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoDynamicInfo.HasNewDynamicInfoResp)
  return target;
}

int HasNewDynamicInfoResp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required bool HasNewDy = 1;
    if (has_hasnewdy()) {
      total_size += 1 + 1;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HasNewDynamicInfoResp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const HasNewDynamicInfoResp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const HasNewDynamicInfoResp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void HasNewDynamicInfoResp::MergeFrom(const HasNewDynamicInfoResp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_hasnewdy()) {
      set_hasnewdy(from.hasnewdy());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void HasNewDynamicInfoResp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HasNewDynamicInfoResp::CopyFrom(const HasNewDynamicInfoResp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HasNewDynamicInfoResp::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void HasNewDynamicInfoResp::Swap(HasNewDynamicInfoResp* other) {
  if (other != this) {
    std::swap(hasnewdy_, other->hasnewdy_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata HasNewDynamicInfoResp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = HasNewDynamicInfoResp_descriptor_;
  metadata.reflection = HasNewDynamicInfoResp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int DeleteDynamicInfoReq::kIdFieldNumber;
#endif  // !_MSC_VER

DeleteDynamicInfoReq::DeleteDynamicInfoReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoDynamicInfo.DeleteDynamicInfoReq)
}

void DeleteDynamicInfoReq::InitAsDefaultInstance() {
}

DeleteDynamicInfoReq::DeleteDynamicInfoReq(const DeleteDynamicInfoReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ProtoDynamicInfo.DeleteDynamicInfoReq)
}

void DeleteDynamicInfoReq::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DeleteDynamicInfoReq::~DeleteDynamicInfoReq() {
  // @@protoc_insertion_point(destructor:ProtoDynamicInfo.DeleteDynamicInfoReq)
  SharedDtor();
}

void DeleteDynamicInfoReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void DeleteDynamicInfoReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DeleteDynamicInfoReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DeleteDynamicInfoReq_descriptor_;
}

const DeleteDynamicInfoReq& DeleteDynamicInfoReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoDynamicInfo_2eproto();
  return *default_instance_;
}

DeleteDynamicInfoReq* DeleteDynamicInfoReq::default_instance_ = NULL;

DeleteDynamicInfoReq* DeleteDynamicInfoReq::New() const {
  return new DeleteDynamicInfoReq;
}

void DeleteDynamicInfoReq::Clear() {
  id_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool DeleteDynamicInfoReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoDynamicInfo.DeleteDynamicInfoReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoDynamicInfo.DeleteDynamicInfoReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoDynamicInfo.DeleteDynamicInfoReq)
  return false;
#undef DO_
}

void DeleteDynamicInfoReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoDynamicInfo.DeleteDynamicInfoReq)
  // required uint32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoDynamicInfo.DeleteDynamicInfoReq)
}

::google::protobuf::uint8* DeleteDynamicInfoReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoDynamicInfo.DeleteDynamicInfoReq)
  // required uint32 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoDynamicInfo.DeleteDynamicInfoReq)
  return target;
}

int DeleteDynamicInfoReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->id());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DeleteDynamicInfoReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const DeleteDynamicInfoReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const DeleteDynamicInfoReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void DeleteDynamicInfoReq::MergeFrom(const DeleteDynamicInfoReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void DeleteDynamicInfoReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteDynamicInfoReq::CopyFrom(const DeleteDynamicInfoReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteDynamicInfoReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void DeleteDynamicInfoReq::Swap(DeleteDynamicInfoReq* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata DeleteDynamicInfoReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DeleteDynamicInfoReq_descriptor_;
  metadata.reflection = DeleteDynamicInfoReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int RequestOtherUserMakeDy::kMyuidFieldNumber;
const int RequestOtherUserMakeDy::kOthuidFieldNumber;
const int RequestOtherUserMakeDy::kTypeidFieldNumber;
const int RequestOtherUserMakeDy::kProductIdFieldNumber;
const int RequestOtherUserMakeDy::kCoinFieldNumber;
const int RequestOtherUserMakeDy::kWordsFieldNumber;
#endif  // !_MSC_VER

RequestOtherUserMakeDy::RequestOtherUserMakeDy()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoDynamicInfo.RequestOtherUserMakeDy)
}

void RequestOtherUserMakeDy::InitAsDefaultInstance() {
}

RequestOtherUserMakeDy::RequestOtherUserMakeDy(const RequestOtherUserMakeDy& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ProtoDynamicInfo.RequestOtherUserMakeDy)
}

void RequestOtherUserMakeDy::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  myuid_ = 0u;
  othuid_ = 0u;
  typeid__ = 0u;
  productid_ = 0u;
  coin_ = 0u;
  words_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RequestOtherUserMakeDy::~RequestOtherUserMakeDy() {
  // @@protoc_insertion_point(destructor:ProtoDynamicInfo.RequestOtherUserMakeDy)
  SharedDtor();
}

void RequestOtherUserMakeDy::SharedDtor() {
  if (words_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete words_;
  }
  if (this != default_instance_) {
  }
}

void RequestOtherUserMakeDy::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RequestOtherUserMakeDy::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RequestOtherUserMakeDy_descriptor_;
}

const RequestOtherUserMakeDy& RequestOtherUserMakeDy::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoDynamicInfo_2eproto();
  return *default_instance_;
}

RequestOtherUserMakeDy* RequestOtherUserMakeDy::default_instance_ = NULL;

RequestOtherUserMakeDy* RequestOtherUserMakeDy::New() const {
  return new RequestOtherUserMakeDy;
}

void RequestOtherUserMakeDy::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<RequestOtherUserMakeDy*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 63) {
    ZR_(myuid_, productid_);
    coin_ = 0u;
    if (has_words()) {
      if (words_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        words_->clear();
      }
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool RequestOtherUserMakeDy::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoDynamicInfo.RequestOtherUserMakeDy)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 myuid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &myuid_)));
          set_has_myuid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_othuid;
        break;
      }

      // required uint32 othuid = 2;
      case 2: {
        if (tag == 16) {
         parse_othuid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &othuid_)));
          set_has_othuid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_typeid;
        break;
      }

      // required uint32 typeid = 3;
      case 3: {
        if (tag == 24) {
         parse_typeid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &typeid__)));
          set_has_typeid_();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_productId;
        break;
      }

      // optional uint32 productId = 4;
      case 4: {
        if (tag == 32) {
         parse_productId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &productid_)));
          set_has_productid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_coin;
        break;
      }

      // optional uint32 coin = 5;
      case 5: {
        if (tag == 40) {
         parse_coin:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &coin_)));
          set_has_coin();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_words;
        break;
      }

      // optional bytes words = 6;
      case 6: {
        if (tag == 50) {
         parse_words:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_words()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoDynamicInfo.RequestOtherUserMakeDy)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoDynamicInfo.RequestOtherUserMakeDy)
  return false;
#undef DO_
}

void RequestOtherUserMakeDy::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoDynamicInfo.RequestOtherUserMakeDy)
  // required uint32 myuid = 1;
  if (has_myuid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->myuid(), output);
  }

  // required uint32 othuid = 2;
  if (has_othuid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->othuid(), output);
  }

  // required uint32 typeid = 3;
  if (has_typeid_()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->typeid_(), output);
  }

  // optional uint32 productId = 4;
  if (has_productid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->productid(), output);
  }

  // optional uint32 coin = 5;
  if (has_coin()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->coin(), output);
  }

  // optional bytes words = 6;
  if (has_words()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      6, this->words(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoDynamicInfo.RequestOtherUserMakeDy)
}

::google::protobuf::uint8* RequestOtherUserMakeDy::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoDynamicInfo.RequestOtherUserMakeDy)
  // required uint32 myuid = 1;
  if (has_myuid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->myuid(), target);
  }

  // required uint32 othuid = 2;
  if (has_othuid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->othuid(), target);
  }

  // required uint32 typeid = 3;
  if (has_typeid_()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->typeid_(), target);
  }

  // optional uint32 productId = 4;
  if (has_productid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->productid(), target);
  }

  // optional uint32 coin = 5;
  if (has_coin()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->coin(), target);
  }

  // optional bytes words = 6;
  if (has_words()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        6, this->words(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoDynamicInfo.RequestOtherUserMakeDy)
  return target;
}

int RequestOtherUserMakeDy::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 myuid = 1;
    if (has_myuid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->myuid());
    }

    // required uint32 othuid = 2;
    if (has_othuid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->othuid());
    }

    // required uint32 typeid = 3;
    if (has_typeid_()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->typeid_());
    }

    // optional uint32 productId = 4;
    if (has_productid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->productid());
    }

    // optional uint32 coin = 5;
    if (has_coin()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->coin());
    }

    // optional bytes words = 6;
    if (has_words()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->words());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RequestOtherUserMakeDy::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const RequestOtherUserMakeDy* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const RequestOtherUserMakeDy*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void RequestOtherUserMakeDy::MergeFrom(const RequestOtherUserMakeDy& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_myuid()) {
      set_myuid(from.myuid());
    }
    if (from.has_othuid()) {
      set_othuid(from.othuid());
    }
    if (from.has_typeid_()) {
      set_typeid_(from.typeid_());
    }
    if (from.has_productid()) {
      set_productid(from.productid());
    }
    if (from.has_coin()) {
      set_coin(from.coin());
    }
    if (from.has_words()) {
      set_words(from.words());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void RequestOtherUserMakeDy::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RequestOtherUserMakeDy::CopyFrom(const RequestOtherUserMakeDy& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RequestOtherUserMakeDy::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  return true;
}

void RequestOtherUserMakeDy::Swap(RequestOtherUserMakeDy* other) {
  if (other != this) {
    std::swap(myuid_, other->myuid_);
    std::swap(othuid_, other->othuid_);
    std::swap(typeid__, other->typeid__);
    std::swap(productid_, other->productid_);
    std::swap(coin_, other->coin_);
    std::swap(words_, other->words_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata RequestOtherUserMakeDy::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RequestOtherUserMakeDy_descriptor_;
  metadata.reflection = RequestOtherUserMakeDy_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int LocationHelpReq::kTypeidFieldNumber;
const int LocationHelpReq::kArrayuidFieldNumber;
#endif  // !_MSC_VER

LocationHelpReq::LocationHelpReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoDynamicInfo.LocationHelpReq)
}

void LocationHelpReq::InitAsDefaultInstance() {
}

LocationHelpReq::LocationHelpReq(const LocationHelpReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ProtoDynamicInfo.LocationHelpReq)
}

void LocationHelpReq::SharedCtor() {
  _cached_size_ = 0;
  typeid__ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

LocationHelpReq::~LocationHelpReq() {
  // @@protoc_insertion_point(destructor:ProtoDynamicInfo.LocationHelpReq)
  SharedDtor();
}

void LocationHelpReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void LocationHelpReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LocationHelpReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return LocationHelpReq_descriptor_;
}

const LocationHelpReq& LocationHelpReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoDynamicInfo_2eproto();
  return *default_instance_;
}

LocationHelpReq* LocationHelpReq::default_instance_ = NULL;

LocationHelpReq* LocationHelpReq::New() const {
  return new LocationHelpReq;
}

void LocationHelpReq::Clear() {
  typeid__ = 0u;
  arrayuid_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool LocationHelpReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoDynamicInfo.LocationHelpReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 typeid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &typeid__)));
          set_has_typeid_();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_arrayuid;
        break;
      }

      // repeated uint32 arrayuid = 2;
      case 2: {
        if (tag == 16) {
         parse_arrayuid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 16, input, this->mutable_arrayuid())));
        } else if (tag == 18) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_arrayuid())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_arrayuid;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoDynamicInfo.LocationHelpReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoDynamicInfo.LocationHelpReq)
  return false;
#undef DO_
}

void LocationHelpReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoDynamicInfo.LocationHelpReq)
  // required uint32 typeid = 1;
  if (has_typeid_()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->typeid_(), output);
  }

  // repeated uint32 arrayuid = 2;
  for (int i = 0; i < this->arrayuid_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      2, this->arrayuid(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoDynamicInfo.LocationHelpReq)
}

::google::protobuf::uint8* LocationHelpReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoDynamicInfo.LocationHelpReq)
  // required uint32 typeid = 1;
  if (has_typeid_()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->typeid_(), target);
  }

  // repeated uint32 arrayuid = 2;
  for (int i = 0; i < this->arrayuid_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(2, this->arrayuid(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoDynamicInfo.LocationHelpReq)
  return target;
}

int LocationHelpReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 typeid = 1;
    if (has_typeid_()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->typeid_());
    }

  }
  // repeated uint32 arrayuid = 2;
  {
    int data_size = 0;
    for (int i = 0; i < this->arrayuid_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->arrayuid(i));
    }
    total_size += 1 * this->arrayuid_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LocationHelpReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const LocationHelpReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const LocationHelpReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void LocationHelpReq::MergeFrom(const LocationHelpReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  arrayuid_.MergeFrom(from.arrayuid_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_typeid_()) {
      set_typeid_(from.typeid_());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void LocationHelpReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LocationHelpReq::CopyFrom(const LocationHelpReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LocationHelpReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void LocationHelpReq::Swap(LocationHelpReq* other) {
  if (other != this) {
    std::swap(typeid__, other->typeid__);
    arrayuid_.Swap(&other->arrayuid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata LocationHelpReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = LocationHelpReq_descriptor_;
  metadata.reflection = LocationHelpReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int HandleLocationHelpReq::kIdFieldNumber;
const int HandleLocationHelpReq::kTypeidFieldNumber;
#endif  // !_MSC_VER

HandleLocationHelpReq::HandleLocationHelpReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoDynamicInfo.HandleLocationHelpReq)
}

void HandleLocationHelpReq::InitAsDefaultInstance() {
}

HandleLocationHelpReq::HandleLocationHelpReq(const HandleLocationHelpReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ProtoDynamicInfo.HandleLocationHelpReq)
}

void HandleLocationHelpReq::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0u;
  typeid__ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

HandleLocationHelpReq::~HandleLocationHelpReq() {
  // @@protoc_insertion_point(destructor:ProtoDynamicInfo.HandleLocationHelpReq)
  SharedDtor();
}

void HandleLocationHelpReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void HandleLocationHelpReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HandleLocationHelpReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return HandleLocationHelpReq_descriptor_;
}

const HandleLocationHelpReq& HandleLocationHelpReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoDynamicInfo_2eproto();
  return *default_instance_;
}

HandleLocationHelpReq* HandleLocationHelpReq::default_instance_ = NULL;

HandleLocationHelpReq* HandleLocationHelpReq::New() const {
  return new HandleLocationHelpReq;
}

void HandleLocationHelpReq::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<HandleLocationHelpReq*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(id_, typeid__);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool HandleLocationHelpReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoDynamicInfo.HandleLocationHelpReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_typeid;
        break;
      }

      // required uint32 typeid = 2;
      case 2: {
        if (tag == 16) {
         parse_typeid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &typeid__)));
          set_has_typeid_();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoDynamicInfo.HandleLocationHelpReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoDynamicInfo.HandleLocationHelpReq)
  return false;
#undef DO_
}

void HandleLocationHelpReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoDynamicInfo.HandleLocationHelpReq)
  // required uint32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  // required uint32 typeid = 2;
  if (has_typeid_()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->typeid_(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoDynamicInfo.HandleLocationHelpReq)
}

::google::protobuf::uint8* HandleLocationHelpReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoDynamicInfo.HandleLocationHelpReq)
  // required uint32 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  // required uint32 typeid = 2;
  if (has_typeid_()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->typeid_(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoDynamicInfo.HandleLocationHelpReq)
  return target;
}

int HandleLocationHelpReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->id());
    }

    // required uint32 typeid = 2;
    if (has_typeid_()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->typeid_());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HandleLocationHelpReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const HandleLocationHelpReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const HandleLocationHelpReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void HandleLocationHelpReq::MergeFrom(const HandleLocationHelpReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_typeid_()) {
      set_typeid_(from.typeid_());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void HandleLocationHelpReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HandleLocationHelpReq::CopyFrom(const HandleLocationHelpReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HandleLocationHelpReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void HandleLocationHelpReq::Swap(HandleLocationHelpReq* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(typeid__, other->typeid__);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata HandleLocationHelpReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = HandleLocationHelpReq_descriptor_;
  metadata.reflection = HandleLocationHelpReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int HandleLocationHelpResq::kIdFieldNumber;
const int HandleLocationHelpResq::kNewtypeidFieldNumber;
#endif  // !_MSC_VER

HandleLocationHelpResq::HandleLocationHelpResq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoDynamicInfo.HandleLocationHelpResq)
}

void HandleLocationHelpResq::InitAsDefaultInstance() {
}

HandleLocationHelpResq::HandleLocationHelpResq(const HandleLocationHelpResq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ProtoDynamicInfo.HandleLocationHelpResq)
}

void HandleLocationHelpResq::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0u;
  newtypeid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

HandleLocationHelpResq::~HandleLocationHelpResq() {
  // @@protoc_insertion_point(destructor:ProtoDynamicInfo.HandleLocationHelpResq)
  SharedDtor();
}

void HandleLocationHelpResq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void HandleLocationHelpResq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HandleLocationHelpResq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return HandleLocationHelpResq_descriptor_;
}

const HandleLocationHelpResq& HandleLocationHelpResq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoDynamicInfo_2eproto();
  return *default_instance_;
}

HandleLocationHelpResq* HandleLocationHelpResq::default_instance_ = NULL;

HandleLocationHelpResq* HandleLocationHelpResq::New() const {
  return new HandleLocationHelpResq;
}

void HandleLocationHelpResq::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<HandleLocationHelpResq*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(id_, newtypeid_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool HandleLocationHelpResq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoDynamicInfo.HandleLocationHelpResq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_newtypeid;
        break;
      }

      // required uint32 newtypeid = 2;
      case 2: {
        if (tag == 16) {
         parse_newtypeid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &newtypeid_)));
          set_has_newtypeid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoDynamicInfo.HandleLocationHelpResq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoDynamicInfo.HandleLocationHelpResq)
  return false;
#undef DO_
}

void HandleLocationHelpResq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoDynamicInfo.HandleLocationHelpResq)
  // required uint32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  // required uint32 newtypeid = 2;
  if (has_newtypeid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->newtypeid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoDynamicInfo.HandleLocationHelpResq)
}

::google::protobuf::uint8* HandleLocationHelpResq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoDynamicInfo.HandleLocationHelpResq)
  // required uint32 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  // required uint32 newtypeid = 2;
  if (has_newtypeid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->newtypeid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoDynamicInfo.HandleLocationHelpResq)
  return target;
}

int HandleLocationHelpResq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->id());
    }

    // required uint32 newtypeid = 2;
    if (has_newtypeid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->newtypeid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HandleLocationHelpResq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const HandleLocationHelpResq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const HandleLocationHelpResq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void HandleLocationHelpResq::MergeFrom(const HandleLocationHelpResq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_newtypeid()) {
      set_newtypeid(from.newtypeid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void HandleLocationHelpResq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HandleLocationHelpResq::CopyFrom(const HandleLocationHelpResq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HandleLocationHelpResq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void HandleLocationHelpResq::Swap(HandleLocationHelpResq* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(newtypeid_, other->newtypeid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata HandleLocationHelpResq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = HandleLocationHelpResq_descriptor_;
  metadata.reflection = HandleLocationHelpResq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ClickOrderHelpReq::kIdFieldNumber;
const int ClickOrderHelpReq::kTypeIdFieldNumber;
#endif  // !_MSC_VER

ClickOrderHelpReq::ClickOrderHelpReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoDynamicInfo.ClickOrderHelpReq)
}

void ClickOrderHelpReq::InitAsDefaultInstance() {
}

ClickOrderHelpReq::ClickOrderHelpReq(const ClickOrderHelpReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ProtoDynamicInfo.ClickOrderHelpReq)
}

void ClickOrderHelpReq::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0u;
  typeid__ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ClickOrderHelpReq::~ClickOrderHelpReq() {
  // @@protoc_insertion_point(destructor:ProtoDynamicInfo.ClickOrderHelpReq)
  SharedDtor();
}

void ClickOrderHelpReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ClickOrderHelpReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ClickOrderHelpReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ClickOrderHelpReq_descriptor_;
}

const ClickOrderHelpReq& ClickOrderHelpReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoDynamicInfo_2eproto();
  return *default_instance_;
}

ClickOrderHelpReq* ClickOrderHelpReq::default_instance_ = NULL;

ClickOrderHelpReq* ClickOrderHelpReq::New() const {
  return new ClickOrderHelpReq;
}

void ClickOrderHelpReq::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<ClickOrderHelpReq*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(id_, typeid__);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ClickOrderHelpReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoDynamicInfo.ClickOrderHelpReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_typeId;
        break;
      }

      // required uint32 typeId = 2;
      case 2: {
        if (tag == 16) {
         parse_typeId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &typeid__)));
          set_has_typeid_();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoDynamicInfo.ClickOrderHelpReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoDynamicInfo.ClickOrderHelpReq)
  return false;
#undef DO_
}

void ClickOrderHelpReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoDynamicInfo.ClickOrderHelpReq)
  // required uint32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  // required uint32 typeId = 2;
  if (has_typeid_()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->typeid_(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoDynamicInfo.ClickOrderHelpReq)
}

::google::protobuf::uint8* ClickOrderHelpReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoDynamicInfo.ClickOrderHelpReq)
  // required uint32 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  // required uint32 typeId = 2;
  if (has_typeid_()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->typeid_(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoDynamicInfo.ClickOrderHelpReq)
  return target;
}

int ClickOrderHelpReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->id());
    }

    // required uint32 typeId = 2;
    if (has_typeid_()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->typeid_());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ClickOrderHelpReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ClickOrderHelpReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ClickOrderHelpReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ClickOrderHelpReq::MergeFrom(const ClickOrderHelpReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_typeid_()) {
      set_typeid_(from.typeid_());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ClickOrderHelpReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClickOrderHelpReq::CopyFrom(const ClickOrderHelpReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ClickOrderHelpReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void ClickOrderHelpReq::Swap(ClickOrderHelpReq* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(typeid__, other->typeid__);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ClickOrderHelpReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ClickOrderHelpReq_descriptor_;
  metadata.reflection = ClickOrderHelpReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ClickOrderHelpResp::kResultFieldNumber;
const int ClickOrderHelpResp::kIndexFieldNumber;
#endif  // !_MSC_VER

ClickOrderHelpResp::ClickOrderHelpResp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoDynamicInfo.ClickOrderHelpResp)
}

void ClickOrderHelpResp::InitAsDefaultInstance() {
}

ClickOrderHelpResp::ClickOrderHelpResp(const ClickOrderHelpResp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ProtoDynamicInfo.ClickOrderHelpResp)
}

void ClickOrderHelpResp::SharedCtor() {
  _cached_size_ = 0;
  result_ = 0u;
  index_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ClickOrderHelpResp::~ClickOrderHelpResp() {
  // @@protoc_insertion_point(destructor:ProtoDynamicInfo.ClickOrderHelpResp)
  SharedDtor();
}

void ClickOrderHelpResp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ClickOrderHelpResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ClickOrderHelpResp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ClickOrderHelpResp_descriptor_;
}

const ClickOrderHelpResp& ClickOrderHelpResp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoDynamicInfo_2eproto();
  return *default_instance_;
}

ClickOrderHelpResp* ClickOrderHelpResp::default_instance_ = NULL;

ClickOrderHelpResp* ClickOrderHelpResp::New() const {
  return new ClickOrderHelpResp;
}

void ClickOrderHelpResp::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<ClickOrderHelpResp*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(result_, index_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ClickOrderHelpResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoDynamicInfo.ClickOrderHelpResp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 result = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &result_)));
          set_has_result();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_index;
        break;
      }

      // optional uint32 index = 2;
      case 2: {
        if (tag == 16) {
         parse_index:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &index_)));
          set_has_index();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoDynamicInfo.ClickOrderHelpResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoDynamicInfo.ClickOrderHelpResp)
  return false;
#undef DO_
}

void ClickOrderHelpResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoDynamicInfo.ClickOrderHelpResp)
  // required uint32 result = 1;
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->result(), output);
  }

  // optional uint32 index = 2;
  if (has_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->index(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoDynamicInfo.ClickOrderHelpResp)
}

::google::protobuf::uint8* ClickOrderHelpResp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoDynamicInfo.ClickOrderHelpResp)
  // required uint32 result = 1;
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->result(), target);
  }

  // optional uint32 index = 2;
  if (has_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->index(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoDynamicInfo.ClickOrderHelpResp)
  return target;
}

int ClickOrderHelpResp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 result = 1;
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->result());
    }

    // optional uint32 index = 2;
    if (has_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->index());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ClickOrderHelpResp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ClickOrderHelpResp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ClickOrderHelpResp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ClickOrderHelpResp::MergeFrom(const ClickOrderHelpResp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_result()) {
      set_result(from.result());
    }
    if (from.has_index()) {
      set_index(from.index());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ClickOrderHelpResp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClickOrderHelpResp::CopyFrom(const ClickOrderHelpResp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ClickOrderHelpResp::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void ClickOrderHelpResp::Swap(ClickOrderHelpResp* other) {
  if (other != this) {
    std::swap(result_, other->result_);
    std::swap(index_, other->index_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ClickOrderHelpResp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ClickOrderHelpResp_descriptor_;
  metadata.reflection = ClickOrderHelpResp_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace ProtoDynamicInfo

// @@protoc_insertion_point(global_scope)
