// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: User.proto

#ifndef PROTOBUF_User_2eproto__INCLUDED
#define PROTOBUF_User_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "ProtoNotify.pb.h"
#include "ProtoActivity.pb.h"
#include "ProtoBuilding.pb.h"
#include "ProtoProduce.pb.h"
#include "DataCommon.pb.h"
#include "ProtoOrder.pb.h"
#include "ProtoShipping.pb.h"
#include "ProtoNPCSeller.pb.h"
#include "ProtoFriendlyTree.pb.h"
#include "ProtoTheme.pb.h"
#include "ProtoReward.pb.h"
#include "ProtoPet.pb.h"
// @@protoc_insertion_point(includes)

namespace User {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_User_2eproto();
void protobuf_AssignDesc_User_2eproto();
void protobuf_ShutdownFile_User_2eproto();

class Base;
class ActivityItem;
class Activity;
class User;
class OthProduceCPP;
class RequestOtherUser;
class OtherUser;
class RequestOtherUserBC;
class FetchSelfReq;
class FetchSelfResp;
class Tutorialstage;
class SwitchStatus;
class ServerTime;
class CostCashReq;
class CostCashResp;
class ChargeItem;
class AccumulateCharge;
class PushAccumulateChangeReq;
class SpeedUpReq;
class SpeedUpResp;
class BuyMaterialInfo;
class BuyMaterialReq;
class BuyMaterialResp;
class CriticalRewardsResp;
class LevelRewardsResp;
class DaliyShareReq;
class DaliyShareResp;
class ShareRewardsReq;
class ShareRewardsResp;
class ShareTotalRewardsReq;
class ShareTotalRewardsResp;
class PurchaseCoinReq;
class PurchaseCoinResp;
class SignInRewardsReq;
class SignInRewardsResp;
class SetVersion;
class SetFlag;
class GetFlagResp;
class ThumbsUpCPP;
class GetThumbsUpReq;
class GetThumbsUpResp;
class RankThumbsUpReq;
class RankThumbsUpResp;
class CSRankThumbsUpReq;
class CSRankThumbsUpResp;
class GetWorldChannelHelpCntReq;
class GetWorldChannelHelpCntResp;
class WorldChannelHelpReq;
class WorldChannelHelpResp;
class SysMail;
class RequestSysMail;
class ReplySysMail;
class RequestMailRead;
class ReplyMailRead;
class RequestMailGet;
class ReplyMailGet;
class RequestMailDel;
class RequestMailAllGet;
class ReplyMailAllGet;
class RequestMailAllDel;
class ReqNewMsg;
class ReplyNewMsg;
class ReqSendMailBC;
class PushLoginMsg;
class CSPushLoginMsg;
class ViewAdGetSpeedUpCardReq;
class ViewAdGetSpeedUpCardResp;
class NewUserGuideShareReq;
class NewUserGuideShareResp;
class UseCdKeyReq;
class UseCdKeyResp;
class HeartBeatReq;
class HeartBeatResp;

// ===================================================================

class Base : public ::google::protobuf::Message {
 public:
  Base();
  virtual ~Base();

  Base(const Base& from);

  inline Base& operator=(const Base& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Base& default_instance();

  void Swap(Base* other);

  // implements Message ----------------------------------------------

  Base* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Base& from);
  void MergeFrom(const Base& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 uid = 1;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 1;
  inline ::google::protobuf::uint32 uid() const;
  inline void set_uid(::google::protobuf::uint32 value);

  // required uint32 registerPlatform = 2;
  inline bool has_registerplatform() const;
  inline void clear_registerplatform();
  static const int kRegisterPlatformFieldNumber = 2;
  inline ::google::protobuf::uint32 registerplatform() const;
  inline void set_registerplatform(::google::protobuf::uint32 value);

  // required uint32 registerTime = 3;
  inline bool has_registertime() const;
  inline void clear_registertime();
  static const int kRegisterTimeFieldNumber = 3;
  inline ::google::protobuf::uint32 registertime() const;
  inline void set_registertime(::google::protobuf::uint32 value);

  // required uint32 lastLoginPlatform = 4;
  inline bool has_lastloginplatform() const;
  inline void clear_lastloginplatform();
  static const int kLastLoginPlatformFieldNumber = 4;
  inline ::google::protobuf::uint32 lastloginplatform() const;
  inline void set_lastloginplatform(::google::protobuf::uint32 value);

  // required uint32 lastLoginTime = 5;
  inline bool has_lastlogintime() const;
  inline void clear_lastlogintime();
  static const int kLastLoginTimeFieldNumber = 5;
  inline ::google::protobuf::uint32 lastlogintime() const;
  inline void set_lastlogintime(::google::protobuf::uint32 value);

  // required uint32 loginTimes = 6;
  inline bool has_logintimes() const;
  inline void clear_logintimes();
  static const int kLoginTimesFieldNumber = 6;
  inline ::google::protobuf::uint32 logintimes() const;
  inline void set_logintimes(::google::protobuf::uint32 value);

  // required uint32 loginDays = 7;
  inline bool has_logindays() const;
  inline void clear_logindays();
  static const int kLoginDaysFieldNumber = 7;
  inline ::google::protobuf::uint32 logindays() const;
  inline void set_logindays(::google::protobuf::uint32 value);

  // required uint32 lastActiveTime = 8;
  inline bool has_lastactivetime() const;
  inline void clear_lastactivetime();
  static const int kLastActiveTimeFieldNumber = 8;
  inline ::google::protobuf::uint32 lastactivetime() const;
  inline void set_lastactivetime(::google::protobuf::uint32 value);

  // required uint32 lastOffTime = 9;
  inline bool has_lastofftime() const;
  inline void clear_lastofftime();
  static const int kLastOffTimeFieldNumber = 9;
  inline ::google::protobuf::uint32 lastofftime() const;
  inline void set_lastofftime(::google::protobuf::uint32 value);

  // required uint32 forbidTs = 10;
  inline bool has_forbidts() const;
  inline void clear_forbidts();
  static const int kForbidTsFieldNumber = 10;
  inline ::google::protobuf::uint32 forbidts() const;
  inline void set_forbidts(::google::protobuf::uint32 value);

  // required bytes forbidReason = 11;
  inline bool has_forbidreason() const;
  inline void clear_forbidreason();
  static const int kForbidReasonFieldNumber = 11;
  inline const ::std::string& forbidreason() const;
  inline void set_forbidreason(const ::std::string& value);
  inline void set_forbidreason(const char* value);
  inline void set_forbidreason(const void* value, size_t size);
  inline ::std::string* mutable_forbidreason();
  inline ::std::string* release_forbidreason();
  inline void set_allocated_forbidreason(::std::string* forbidreason);

  // required uint32 tutorialStage = 12;
  inline bool has_tutorialstage() const;
  inline void clear_tutorialstage();
  static const int kTutorialStageFieldNumber = 12;
  inline ::google::protobuf::uint32 tutorialstage() const;
  inline void set_tutorialstage(::google::protobuf::uint32 value);

  // required bytes name = 13;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 13;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const void* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // required bytes fig = 14;
  inline bool has_fig() const;
  inline void clear_fig();
  static const int kFigFieldNumber = 14;
  inline const ::std::string& fig() const;
  inline void set_fig(const ::std::string& value);
  inline void set_fig(const char* value);
  inline void set_fig(const void* value, size_t size);
  inline ::std::string* mutable_fig();
  inline ::std::string* release_fig();
  inline void set_allocated_fig(::std::string* fig);

  // required uint64 exp = 15;
  inline bool has_exp() const;
  inline void clear_exp();
  static const int kExpFieldNumber = 15;
  inline ::google::protobuf::uint64 exp() const;
  inline void set_exp(::google::protobuf::uint64 value);

  // required uint32 level = 16;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 16;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);

  // required uint32 acccharge = 17;
  inline bool has_acccharge() const;
  inline void clear_acccharge();
  static const int kAccchargeFieldNumber = 17;
  inline ::google::protobuf::uint32 acccharge() const;
  inline void set_acccharge(::google::protobuf::uint32 value);

  // required uint32 viplevel = 18;
  inline bool has_viplevel() const;
  inline void clear_viplevel();
  static const int kViplevelFieldNumber = 18;
  inline ::google::protobuf::uint32 viplevel() const;
  inline void set_viplevel(::google::protobuf::uint32 value);

  // required uint32 cash = 19;
  inline bool has_cash() const;
  inline void clear_cash();
  static const int kCashFieldNumber = 19;
  inline ::google::protobuf::uint32 cash() const;
  inline void set_cash(::google::protobuf::uint32 value);

  // required uint32 coin = 20;
  inline bool has_coin() const;
  inline void clear_coin();
  static const int kCoinFieldNumber = 20;
  inline ::google::protobuf::uint32 coin() const;
  inline void set_coin(::google::protobuf::uint32 value);

  // required uint32 firstRecharge = 21;
  inline bool has_firstrecharge() const;
  inline void clear_firstrecharge();
  static const int kFirstRechargeFieldNumber = 21;
  inline ::google::protobuf::uint32 firstrecharge() const;
  inline void set_firstrecharge(::google::protobuf::uint32 value);

  // required uint32 allianceId = 22;
  inline bool has_allianceid() const;
  inline void clear_allianceid();
  static const int kAllianceIdFieldNumber = 22;
  inline ::google::protobuf::uint32 allianceid() const;
  inline void set_allianceid(::google::protobuf::uint32 value);

  // required bytes barrier = 23;
  inline bool has_barrier() const;
  inline void clear_barrier();
  static const int kBarrierFieldNumber = 23;
  inline const ::std::string& barrier() const;
  inline void set_barrier(const ::std::string& value);
  inline void set_barrier(const char* value);
  inline void set_barrier(const void* value, size_t size);
  inline ::std::string* mutable_barrier();
  inline ::std::string* release_barrier();
  inline void set_allocated_barrier(::std::string* barrier);

  // required uint32 lastcreateadts = 24;
  inline bool has_lastcreateadts() const;
  inline void clear_lastcreateadts();
  static const int kLastcreateadtsFieldNumber = 24;
  inline ::google::protobuf::uint32 lastcreateadts() const;
  inline void set_lastcreateadts(::google::protobuf::uint32 value);

  // required uint32 allianAllowTs = 25;
  inline bool has_allianallowts() const;
  inline void clear_allianallowts();
  static const int kAllianAllowTsFieldNumber = 25;
  inline ::google::protobuf::uint32 allianallowts() const;
  inline void set_allianallowts(::google::protobuf::uint32 value);

  // required uint32 nextDonationTs = 26;
  inline bool has_nextdonationts() const;
  inline void clear_nextdonationts();
  static const int kNextDonationTsFieldNumber = 26;
  inline ::google::protobuf::uint32 nextdonationts() const;
  inline void set_nextdonationts(::google::protobuf::uint32 value);

  // required uint32 helptimes = 27;
  inline bool has_helptimes() const;
  inline void clear_helptimes();
  static const int kHelptimesFieldNumber = 27;
  inline ::google::protobuf::uint32 helptimes() const;
  inline void set_helptimes(::google::protobuf::uint32 value);

  // required uint32 viprewarddailygiftts = 28;
  inline bool has_viprewarddailygiftts() const;
  inline void clear_viprewarddailygiftts();
  static const int kViprewarddailygifttsFieldNumber = 28;
  inline ::google::protobuf::uint32 viprewarddailygiftts() const;
  inline void set_viprewarddailygiftts(::google::protobuf::uint32 value);

  // required uint32 vipdailyspeedproductcnt = 29;
  inline bool has_vipdailyspeedproductcnt() const;
  inline void clear_vipdailyspeedproductcnt();
  static const int kVipdailyspeedproductcntFieldNumber = 29;
  inline ::google::protobuf::uint32 vipdailyspeedproductcnt() const;
  inline void set_vipdailyspeedproductcnt(::google::protobuf::uint32 value);

  // required uint32 vipdailyremoveordercdcnt = 30;
  inline bool has_vipdailyremoveordercdcnt() const;
  inline void clear_vipdailyremoveordercdcnt();
  static const int kVipdailyremoveordercdcntFieldNumber = 30;
  inline ::google::protobuf::uint32 vipdailyremoveordercdcnt() const;
  inline void set_vipdailyremoveordercdcnt(::google::protobuf::uint32 value);

  // required uint32 switchStatus = 31;
  inline bool has_switchstatus() const;
  inline void clear_switchstatus();
  static const int kSwitchStatusFieldNumber = 31;
  inline ::google::protobuf::uint32 switchstatus() const;
  inline void set_switchstatus(::google::protobuf::uint32 value);

  // required uint32 sharerewarddailygiftts = 32;
  inline bool has_sharerewarddailygiftts() const;
  inline void clear_sharerewarddailygiftts();
  static const int kSharerewarddailygifttsFieldNumber = 32;
  inline ::google::protobuf::uint32 sharerewarddailygiftts() const;
  inline void set_sharerewarddailygiftts(::google::protobuf::uint32 value);

  // required uint32 AssistStartTs = 33;
  inline bool has_assiststartts() const;
  inline void clear_assiststartts();
  static const int kAssistStartTsFieldNumber = 33;
  inline ::google::protobuf::uint32 assiststartts() const;
  inline void set_assiststartts(::google::protobuf::uint32 value);

  // required uint32 AssistEndTs = 34;
  inline bool has_assistendts() const;
  inline void clear_assistendts();
  static const int kAssistEndTsFieldNumber = 34;
  inline ::google::protobuf::uint32 assistendts() const;
  inline void set_assistendts(::google::protobuf::uint32 value);

  // required bytes expandmap1 = 35;
  inline bool has_expandmap1() const;
  inline void clear_expandmap1();
  static const int kExpandmap1FieldNumber = 35;
  inline const ::std::string& expandmap1() const;
  inline void set_expandmap1(const ::std::string& value);
  inline void set_expandmap1(const char* value);
  inline void set_expandmap1(const void* value, size_t size);
  inline ::std::string* mutable_expandmap1();
  inline ::std::string* release_expandmap1();
  inline void set_allocated_expandmap1(::std::string* expandmap1);

  // required bytes expandmap2 = 36;
  inline bool has_expandmap2() const;
  inline void clear_expandmap2();
  static const int kExpandmap2FieldNumber = 36;
  inline const ::std::string& expandmap2() const;
  inline void set_expandmap2(const ::std::string& value);
  inline void set_expandmap2(const char* value);
  inline void set_expandmap2(const void* value, size_t size);
  inline ::std::string* mutable_expandmap2();
  inline ::std::string* release_expandmap2();
  inline void set_allocated_expandmap2(::std::string* expandmap2);

  // required bytes expandmap3 = 37;
  inline bool has_expandmap3() const;
  inline void clear_expandmap3();
  static const int kExpandmap3FieldNumber = 37;
  inline const ::std::string& expandmap3() const;
  inline void set_expandmap3(const ::std::string& value);
  inline void set_expandmap3(const char* value);
  inline void set_expandmap3(const void* value, size_t size);
  inline ::std::string* mutable_expandmap3();
  inline ::std::string* release_expandmap3();
  inline void set_allocated_expandmap3(::std::string* expandmap3);

  // required uint32 nextrandomboxrefreshts = 38;
  inline bool has_nextrandomboxrefreshts() const;
  inline void clear_nextrandomboxrefreshts();
  static const int kNextrandomboxrefreshtsFieldNumber = 38;
  inline ::google::protobuf::uint32 nextrandomboxrefreshts() const;
  inline void set_nextrandomboxrefreshts(::google::protobuf::uint32 value);

  // required uint32 flag = 39;
  inline bool has_flag() const;
  inline void clear_flag();
  static const int kFlagFieldNumber = 39;
  inline ::google::protobuf::uint32 flag() const;
  inline void set_flag(::google::protobuf::uint32 value);

  // required uint32 friendlyvalue = 40;
  inline bool has_friendlyvalue() const;
  inline void clear_friendlyvalue();
  static const int kFriendlyvalueFieldNumber = 40;
  inline ::google::protobuf::uint32 friendlyvalue() const;
  inline void set_friendlyvalue(::google::protobuf::uint32 value);

  // optional uint32 version = 41;
  inline bool has_version() const;
  inline void clear_version();
  static const int kVersionFieldNumber = 41;
  inline ::google::protobuf::uint32 version() const;
  inline void set_version(::google::protobuf::uint32 value);

  // optional uint32 accthumbsup = 42;
  inline bool has_accthumbsup() const;
  inline void clear_accthumbsup();
  static const int kAccthumbsupFieldNumber = 42;
  inline ::google::protobuf::uint32 accthumbsup() const;
  inline void set_accthumbsup(::google::protobuf::uint32 value);

  // optional uint32 isUnlockPetResidence = 43;
  inline bool has_isunlockpetresidence() const;
  inline void clear_isunlockpetresidence();
  static const int kIsUnlockPetResidenceFieldNumber = 43;
  inline ::google::protobuf::uint32 isunlockpetresidence() const;
  inline void set_isunlockpetresidence(::google::protobuf::uint32 value);

  // optional bytes wxChannel = 44;
  inline bool has_wxchannel() const;
  inline void clear_wxchannel();
  static const int kWxChannelFieldNumber = 44;
  inline const ::std::string& wxchannel() const;
  inline void set_wxchannel(const ::std::string& value);
  inline void set_wxchannel(const char* value);
  inline void set_wxchannel(const void* value, size_t size);
  inline ::std::string* mutable_wxchannel();
  inline ::std::string* release_wxchannel();
  inline void set_allocated_wxchannel(::std::string* wxchannel);

  // @@protoc_insertion_point(class_scope:User.Base)
 private:
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_registerplatform();
  inline void clear_has_registerplatform();
  inline void set_has_registertime();
  inline void clear_has_registertime();
  inline void set_has_lastloginplatform();
  inline void clear_has_lastloginplatform();
  inline void set_has_lastlogintime();
  inline void clear_has_lastlogintime();
  inline void set_has_logintimes();
  inline void clear_has_logintimes();
  inline void set_has_logindays();
  inline void clear_has_logindays();
  inline void set_has_lastactivetime();
  inline void clear_has_lastactivetime();
  inline void set_has_lastofftime();
  inline void clear_has_lastofftime();
  inline void set_has_forbidts();
  inline void clear_has_forbidts();
  inline void set_has_forbidreason();
  inline void clear_has_forbidreason();
  inline void set_has_tutorialstage();
  inline void clear_has_tutorialstage();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_fig();
  inline void clear_has_fig();
  inline void set_has_exp();
  inline void clear_has_exp();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_acccharge();
  inline void clear_has_acccharge();
  inline void set_has_viplevel();
  inline void clear_has_viplevel();
  inline void set_has_cash();
  inline void clear_has_cash();
  inline void set_has_coin();
  inline void clear_has_coin();
  inline void set_has_firstrecharge();
  inline void clear_has_firstrecharge();
  inline void set_has_allianceid();
  inline void clear_has_allianceid();
  inline void set_has_barrier();
  inline void clear_has_barrier();
  inline void set_has_lastcreateadts();
  inline void clear_has_lastcreateadts();
  inline void set_has_allianallowts();
  inline void clear_has_allianallowts();
  inline void set_has_nextdonationts();
  inline void clear_has_nextdonationts();
  inline void set_has_helptimes();
  inline void clear_has_helptimes();
  inline void set_has_viprewarddailygiftts();
  inline void clear_has_viprewarddailygiftts();
  inline void set_has_vipdailyspeedproductcnt();
  inline void clear_has_vipdailyspeedproductcnt();
  inline void set_has_vipdailyremoveordercdcnt();
  inline void clear_has_vipdailyremoveordercdcnt();
  inline void set_has_switchstatus();
  inline void clear_has_switchstatus();
  inline void set_has_sharerewarddailygiftts();
  inline void clear_has_sharerewarddailygiftts();
  inline void set_has_assiststartts();
  inline void clear_has_assiststartts();
  inline void set_has_assistendts();
  inline void clear_has_assistendts();
  inline void set_has_expandmap1();
  inline void clear_has_expandmap1();
  inline void set_has_expandmap2();
  inline void clear_has_expandmap2();
  inline void set_has_expandmap3();
  inline void clear_has_expandmap3();
  inline void set_has_nextrandomboxrefreshts();
  inline void clear_has_nextrandomboxrefreshts();
  inline void set_has_flag();
  inline void clear_has_flag();
  inline void set_has_friendlyvalue();
  inline void clear_has_friendlyvalue();
  inline void set_has_version();
  inline void clear_has_version();
  inline void set_has_accthumbsup();
  inline void clear_has_accthumbsup();
  inline void set_has_isunlockpetresidence();
  inline void clear_has_isunlockpetresidence();
  inline void set_has_wxchannel();
  inline void clear_has_wxchannel();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[2];
  ::google::protobuf::uint32 uid_;
  ::google::protobuf::uint32 registerplatform_;
  ::google::protobuf::uint32 registertime_;
  ::google::protobuf::uint32 lastloginplatform_;
  ::google::protobuf::uint32 lastlogintime_;
  ::google::protobuf::uint32 logintimes_;
  ::google::protobuf::uint32 logindays_;
  ::google::protobuf::uint32 lastactivetime_;
  ::google::protobuf::uint32 lastofftime_;
  ::google::protobuf::uint32 forbidts_;
  ::std::string* forbidreason_;
  ::std::string* name_;
  ::std::string* fig_;
  ::google::protobuf::uint32 tutorialstage_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint64 exp_;
  ::google::protobuf::uint32 acccharge_;
  ::google::protobuf::uint32 viplevel_;
  ::google::protobuf::uint32 cash_;
  ::google::protobuf::uint32 coin_;
  ::google::protobuf::uint32 firstrecharge_;
  ::google::protobuf::uint32 allianceid_;
  ::std::string* barrier_;
  ::google::protobuf::uint32 lastcreateadts_;
  ::google::protobuf::uint32 allianallowts_;
  ::google::protobuf::uint32 nextdonationts_;
  ::google::protobuf::uint32 helptimes_;
  ::google::protobuf::uint32 viprewarddailygiftts_;
  ::google::protobuf::uint32 vipdailyspeedproductcnt_;
  ::google::protobuf::uint32 vipdailyremoveordercdcnt_;
  ::google::protobuf::uint32 switchstatus_;
  ::google::protobuf::uint32 sharerewarddailygiftts_;
  ::google::protobuf::uint32 assiststartts_;
  ::std::string* expandmap1_;
  ::std::string* expandmap2_;
  ::google::protobuf::uint32 assistendts_;
  ::google::protobuf::uint32 nextrandomboxrefreshts_;
  ::std::string* expandmap3_;
  ::google::protobuf::uint32 flag_;
  ::google::protobuf::uint32 friendlyvalue_;
  ::google::protobuf::uint32 version_;
  ::google::protobuf::uint32 accthumbsup_;
  ::std::string* wxchannel_;
  ::google::protobuf::uint32 isunlockpetresidence_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_User_2eproto();
  friend void protobuf_AssignDesc_User_2eproto();
  friend void protobuf_ShutdownFile_User_2eproto();

  void InitAsDefaultInstance();
  static Base* default_instance_;
};
// -------------------------------------------------------------------

class ActivityItem : public ::google::protobuf::Message {
 public:
  ActivityItem();
  virtual ~ActivityItem();

  ActivityItem(const ActivityItem& from);

  inline ActivityItem& operator=(const ActivityItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ActivityItem& default_instance();

  void Swap(ActivityItem* other);

  // implements Message ----------------------------------------------

  ActivityItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ActivityItem& from);
  void MergeFrom(const ActivityItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // required uint32 bts = 2;
  inline bool has_bts() const;
  inline void clear_bts();
  static const int kBtsFieldNumber = 2;
  inline ::google::protobuf::uint32 bts() const;
  inline void set_bts(::google::protobuf::uint32 value);

  // required uint32 ets = 3;
  inline bool has_ets() const;
  inline void clear_ets();
  static const int kEtsFieldNumber = 3;
  inline ::google::protobuf::uint32 ets() const;
  inline void set_ets(::google::protobuf::uint32 value);

  // required uint32 ver = 4;
  inline bool has_ver() const;
  inline void clear_ver();
  static const int kVerFieldNumber = 4;
  inline ::google::protobuf::uint32 ver() const;
  inline void set_ver(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:User.ActivityItem)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_bts();
  inline void clear_has_bts();
  inline void set_has_ets();
  inline void clear_has_ets();
  inline void set_has_ver();
  inline void clear_has_ver();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 bts_;
  ::google::protobuf::uint32 ets_;
  ::google::protobuf::uint32 ver_;
  friend void  protobuf_AddDesc_User_2eproto();
  friend void protobuf_AssignDesc_User_2eproto();
  friend void protobuf_ShutdownFile_User_2eproto();

  void InitAsDefaultInstance();
  static ActivityItem* default_instance_;
};
// -------------------------------------------------------------------

class Activity : public ::google::protobuf::Message {
 public:
  Activity();
  virtual ~Activity();

  Activity(const Activity& from);

  inline Activity& operator=(const Activity& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Activity& default_instance();

  void Swap(Activity* other);

  // implements Message ----------------------------------------------

  Activity* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Activity& from);
  void MergeFrom(const Activity& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .User.ActivityItem act = 1;
  inline int act_size() const;
  inline void clear_act();
  static const int kActFieldNumber = 1;
  inline const ::User::ActivityItem& act(int index) const;
  inline ::User::ActivityItem* mutable_act(int index);
  inline ::User::ActivityItem* add_act();
  inline const ::google::protobuf::RepeatedPtrField< ::User::ActivityItem >&
      act() const;
  inline ::google::protobuf::RepeatedPtrField< ::User::ActivityItem >*
      mutable_act();

  // @@protoc_insertion_point(class_scope:User.Activity)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::User::ActivityItem > act_;
  friend void  protobuf_AddDesc_User_2eproto();
  friend void protobuf_AssignDesc_User_2eproto();
  friend void protobuf_ShutdownFile_User_2eproto();

  void InitAsDefaultInstance();
  static Activity* default_instance_;
};
// -------------------------------------------------------------------

class User : public ::google::protobuf::Message {
 public:
  User();
  virtual ~User();

  User(const User& from);

  inline User& operator=(const User& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const User& default_instance();

  void Swap(User* other);

  // implements Message ----------------------------------------------

  User* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const User& from);
  void MergeFrom(const User& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .User.Base base = 1;
  inline bool has_base() const;
  inline void clear_base();
  static const int kBaseFieldNumber = 1;
  inline const ::User::Base& base() const;
  inline ::User::Base* mutable_base();
  inline ::User::Base* release_base();
  inline void set_allocated_base(::User::Base* base);

  // required uint32 ts = 2;
  inline bool has_ts() const;
  inline void clear_ts();
  static const int kTsFieldNumber = 2;
  inline ::google::protobuf::uint32 ts() const;
  inline void set_ts(::google::protobuf::uint32 value);

  // required .User.Activity activity = 3;
  inline bool has_activity() const;
  inline void clear_activity();
  static const int kActivityFieldNumber = 3;
  inline const ::User::Activity& activity() const;
  inline ::User::Activity* mutable_activity();
  inline ::User::Activity* release_activity();
  inline void set_allocated_activity(::User::Activity* activity);

  // optional .ProtoNotify.NotifyItemCPPAll notifies = 4;
  inline bool has_notifies() const;
  inline void clear_notifies();
  static const int kNotifiesFieldNumber = 4;
  inline const ::ProtoNotify::NotifyItemCPPAll& notifies() const;
  inline ::ProtoNotify::NotifyItemCPPAll* mutable_notifies();
  inline ::ProtoNotify::NotifyItemCPPAll* release_notifies();
  inline void set_allocated_notifies(::ProtoNotify::NotifyItemCPPAll* notifies);

  // required .User.AccumulateCharge charges = 5;
  inline bool has_charges() const;
  inline void clear_charges();
  static const int kChargesFieldNumber = 5;
  inline const ::User::AccumulateCharge& charges() const;
  inline ::User::AccumulateCharge* mutable_charges();
  inline ::User::AccumulateCharge* release_charges();
  inline void set_allocated_charges(::User::AccumulateCharge* charges);

  // required .ProtoActivity.GameAcitivityAllCPP gameactivity = 6;
  inline bool has_gameactivity() const;
  inline void clear_gameactivity();
  static const int kGameactivityFieldNumber = 6;
  inline const ::ProtoActivity::GameAcitivityAllCPP& gameactivity() const;
  inline ::ProtoActivity::GameAcitivityAllCPP* mutable_gameactivity();
  inline ::ProtoActivity::GameAcitivityAllCPP* release_gameactivity();
  inline void set_allocated_gameactivity(::ProtoActivity::GameAcitivityAllCPP* gameactivity);

  // repeated .DataCommon.PropsItemCPP item = 7;
  inline int item_size() const;
  inline void clear_item();
  static const int kItemFieldNumber = 7;
  inline const ::DataCommon::PropsItemCPP& item(int index) const;
  inline ::DataCommon::PropsItemCPP* mutable_item(int index);
  inline ::DataCommon::PropsItemCPP* add_item();
  inline const ::google::protobuf::RepeatedPtrField< ::DataCommon::PropsItemCPP >&
      item() const;
  inline ::google::protobuf::RepeatedPtrField< ::DataCommon::PropsItemCPP >*
      mutable_item();

  // repeated .ProtoBuilding.BuildingCPP builds = 8;
  inline int builds_size() const;
  inline void clear_builds();
  static const int kBuildsFieldNumber = 8;
  inline const ::ProtoBuilding::BuildingCPP& builds(int index) const;
  inline ::ProtoBuilding::BuildingCPP* mutable_builds(int index);
  inline ::ProtoBuilding::BuildingCPP* add_builds();
  inline const ::google::protobuf::RepeatedPtrField< ::ProtoBuilding::BuildingCPP >&
      builds() const;
  inline ::google::protobuf::RepeatedPtrField< ::ProtoBuilding::BuildingCPP >*
      mutable_builds();

  // repeated .ProtoProduce.CropLandCPP cropland = 9;
  inline int cropland_size() const;
  inline void clear_cropland();
  static const int kCroplandFieldNumber = 9;
  inline const ::ProtoProduce::CropLandCPP& cropland(int index) const;
  inline ::ProtoProduce::CropLandCPP* mutable_cropland(int index);
  inline ::ProtoProduce::CropLandCPP* add_cropland();
  inline const ::google::protobuf::RepeatedPtrField< ::ProtoProduce::CropLandCPP >&
      cropland() const;
  inline ::google::protobuf::RepeatedPtrField< ::ProtoProduce::CropLandCPP >*
      mutable_cropland();

  // repeated .ProtoProduce.ProduceEquipCPP equipments = 10;
  inline int equipments_size() const;
  inline void clear_equipments();
  static const int kEquipmentsFieldNumber = 10;
  inline const ::ProtoProduce::ProduceEquipCPP& equipments(int index) const;
  inline ::ProtoProduce::ProduceEquipCPP* mutable_equipments(int index);
  inline ::ProtoProduce::ProduceEquipCPP* add_equipments();
  inline const ::google::protobuf::RepeatedPtrField< ::ProtoProduce::ProduceEquipCPP >&
      equipments() const;
  inline ::google::protobuf::RepeatedPtrField< ::ProtoProduce::ProduceEquipCPP >*
      mutable_equipments();

  // repeated .ProtoProduce.AnimalCPP animals = 11;
  inline int animals_size() const;
  inline void clear_animals();
  static const int kAnimalsFieldNumber = 11;
  inline const ::ProtoProduce::AnimalCPP& animals(int index) const;
  inline ::ProtoProduce::AnimalCPP* mutable_animals(int index);
  inline ::ProtoProduce::AnimalCPP* add_animals();
  inline const ::google::protobuf::RepeatedPtrField< ::ProtoProduce::AnimalCPP >&
      animals() const;
  inline ::google::protobuf::RepeatedPtrField< ::ProtoProduce::AnimalCPP >*
      mutable_animals();

  // repeated .ProtoBuilding.EquipmentStarCPP equipmentstars = 12;
  inline int equipmentstars_size() const;
  inline void clear_equipmentstars();
  static const int kEquipmentstarsFieldNumber = 12;
  inline const ::ProtoBuilding::EquipmentStarCPP& equipmentstars(int index) const;
  inline ::ProtoBuilding::EquipmentStarCPP* mutable_equipmentstars(int index);
  inline ::ProtoBuilding::EquipmentStarCPP* add_equipmentstars();
  inline const ::google::protobuf::RepeatedPtrField< ::ProtoBuilding::EquipmentStarCPP >&
      equipmentstars() const;
  inline ::google::protobuf::RepeatedPtrField< ::ProtoBuilding::EquipmentStarCPP >*
      mutable_equipmentstars();

  // repeated .ProtoProduce.FruitCPP fruits = 13;
  inline int fruits_size() const;
  inline void clear_fruits();
  static const int kFruitsFieldNumber = 13;
  inline const ::ProtoProduce::FruitCPP& fruits(int index) const;
  inline ::ProtoProduce::FruitCPP* mutable_fruits(int index);
  inline ::ProtoProduce::FruitCPP* add_fruits();
  inline const ::google::protobuf::RepeatedPtrField< ::ProtoProduce::FruitCPP >&
      fruits() const;
  inline ::google::protobuf::RepeatedPtrField< ::ProtoProduce::FruitCPP >*
      mutable_fruits();

  // repeated .ProtoOrder.OrderCPP orders = 14;
  inline int orders_size() const;
  inline void clear_orders();
  static const int kOrdersFieldNumber = 14;
  inline const ::ProtoOrder::OrderCPP& orders(int index) const;
  inline ::ProtoOrder::OrderCPP* mutable_orders(int index);
  inline ::ProtoOrder::OrderCPP* add_orders();
  inline const ::google::protobuf::RepeatedPtrField< ::ProtoOrder::OrderCPP >&
      orders() const;
  inline ::google::protobuf::RepeatedPtrField< ::ProtoOrder::OrderCPP >*
      mutable_orders();

  // optional .ProtoOrder.TruckCPP truck = 15;
  inline bool has_truck() const;
  inline void clear_truck();
  static const int kTruckFieldNumber = 15;
  inline const ::ProtoOrder::TruckCPP& truck() const;
  inline ::ProtoOrder::TruckCPP* mutable_truck();
  inline ::ProtoOrder::TruckCPP* release_truck();
  inline void set_allocated_truck(::ProtoOrder::TruckCPP* truck);

  // optional .ProtoShipping.ShippingCPP shipping = 16;
  inline bool has_shipping() const;
  inline void clear_shipping();
  static const int kShippingFieldNumber = 16;
  inline const ::ProtoShipping::ShippingCPP& shipping() const;
  inline ::ProtoShipping::ShippingCPP* mutable_shipping();
  inline ::ProtoShipping::ShippingCPP* release_shipping();
  inline void set_allocated_shipping(::ProtoShipping::ShippingCPP* shipping);

  // repeated .ProtoShipping.ShippingBoxCPP shipboxes = 17;
  inline int shipboxes_size() const;
  inline void clear_shipboxes();
  static const int kShipboxesFieldNumber = 17;
  inline const ::ProtoShipping::ShippingBoxCPP& shipboxes(int index) const;
  inline ::ProtoShipping::ShippingBoxCPP* mutable_shipboxes(int index);
  inline ::ProtoShipping::ShippingBoxCPP* add_shipboxes();
  inline const ::google::protobuf::RepeatedPtrField< ::ProtoShipping::ShippingBoxCPP >&
      shipboxes() const;
  inline ::google::protobuf::RepeatedPtrField< ::ProtoShipping::ShippingBoxCPP >*
      mutable_shipboxes();

  // required .ProtoNPCSeller.NPCSellerCPP npcseller = 18;
  inline bool has_npcseller() const;
  inline void clear_npcseller();
  static const int kNpcsellerFieldNumber = 18;
  inline const ::ProtoNPCSeller::NPCSellerCPP& npcseller() const;
  inline ::ProtoNPCSeller::NPCSellerCPP* mutable_npcseller();
  inline ::ProtoNPCSeller::NPCSellerCPP* release_npcseller();
  inline void set_allocated_npcseller(::ProtoNPCSeller::NPCSellerCPP* npcseller);

  // required uint32 opents = 19;
  inline bool has_opents() const;
  inline void clear_opents();
  static const int kOpentsFieldNumber = 19;
  inline ::google::protobuf::uint32 opents() const;
  inline void set_opents(::google::protobuf::uint32 value);

  // optional bool hasNewDyInfo = 20;
  inline bool has_hasnewdyinfo() const;
  inline void clear_hasnewdyinfo();
  static const int kHasNewDyInfoFieldNumber = 20;
  inline bool hasnewdyinfo() const;
  inline void set_hasnewdyinfo(bool value);

  // optional .ProtoTheme.ThemeInfoResp theme = 21;
  inline bool has_theme() const;
  inline void clear_theme();
  static const int kThemeFieldNumber = 21;
  inline const ::ProtoTheme::ThemeInfoResp& theme() const;
  inline ::ProtoTheme::ThemeInfoResp* mutable_theme();
  inline ::ProtoTheme::ThemeInfoResp* release_theme();
  inline void set_allocated_theme(::ProtoTheme::ThemeInfoResp* theme);

  // optional bool hasNewMsgInfo = 22;
  inline bool has_hasnewmsginfo() const;
  inline void clear_hasnewmsginfo();
  static const int kHasNewMsgInfoFieldNumber = 22;
  inline bool hasnewmsginfo() const;
  inline void set_hasnewmsginfo(bool value);

  // repeated .ProtoPet.UnlockPetCPP pet = 23;
  inline int pet_size() const;
  inline void clear_pet();
  static const int kPetFieldNumber = 23;
  inline const ::ProtoPet::UnlockPetCPP& pet(int index) const;
  inline ::ProtoPet::UnlockPetCPP* mutable_pet(int index);
  inline ::ProtoPet::UnlockPetCPP* add_pet();
  inline const ::google::protobuf::RepeatedPtrField< ::ProtoPet::UnlockPetCPP >&
      pet() const;
  inline ::google::protobuf::RepeatedPtrField< ::ProtoPet::UnlockPetCPP >*
      mutable_pet();

  // @@protoc_insertion_point(class_scope:User.User)
 private:
  inline void set_has_base();
  inline void clear_has_base();
  inline void set_has_ts();
  inline void clear_has_ts();
  inline void set_has_activity();
  inline void clear_has_activity();
  inline void set_has_notifies();
  inline void clear_has_notifies();
  inline void set_has_charges();
  inline void clear_has_charges();
  inline void set_has_gameactivity();
  inline void clear_has_gameactivity();
  inline void set_has_truck();
  inline void clear_has_truck();
  inline void set_has_shipping();
  inline void clear_has_shipping();
  inline void set_has_npcseller();
  inline void clear_has_npcseller();
  inline void set_has_opents();
  inline void clear_has_opents();
  inline void set_has_hasnewdyinfo();
  inline void clear_has_hasnewdyinfo();
  inline void set_has_theme();
  inline void clear_has_theme();
  inline void set_has_hasnewmsginfo();
  inline void clear_has_hasnewmsginfo();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::User::Base* base_;
  ::User::Activity* activity_;
  ::ProtoNotify::NotifyItemCPPAll* notifies_;
  ::User::AccumulateCharge* charges_;
  ::ProtoActivity::GameAcitivityAllCPP* gameactivity_;
  ::google::protobuf::RepeatedPtrField< ::DataCommon::PropsItemCPP > item_;
  ::google::protobuf::RepeatedPtrField< ::ProtoBuilding::BuildingCPP > builds_;
  ::google::protobuf::RepeatedPtrField< ::ProtoProduce::CropLandCPP > cropland_;
  ::google::protobuf::RepeatedPtrField< ::ProtoProduce::ProduceEquipCPP > equipments_;
  ::google::protobuf::uint32 ts_;
  ::google::protobuf::uint32 opents_;
  ::google::protobuf::RepeatedPtrField< ::ProtoProduce::AnimalCPP > animals_;
  ::google::protobuf::RepeatedPtrField< ::ProtoBuilding::EquipmentStarCPP > equipmentstars_;
  ::google::protobuf::RepeatedPtrField< ::ProtoProduce::FruitCPP > fruits_;
  ::google::protobuf::RepeatedPtrField< ::ProtoOrder::OrderCPP > orders_;
  ::ProtoOrder::TruckCPP* truck_;
  ::ProtoShipping::ShippingCPP* shipping_;
  ::google::protobuf::RepeatedPtrField< ::ProtoShipping::ShippingBoxCPP > shipboxes_;
  ::ProtoNPCSeller::NPCSellerCPP* npcseller_;
  ::ProtoTheme::ThemeInfoResp* theme_;
  ::google::protobuf::RepeatedPtrField< ::ProtoPet::UnlockPetCPP > pet_;
  bool hasnewdyinfo_;
  bool hasnewmsginfo_;
  friend void  protobuf_AddDesc_User_2eproto();
  friend void protobuf_AssignDesc_User_2eproto();
  friend void protobuf_ShutdownFile_User_2eproto();

  void InitAsDefaultInstance();
  static User* default_instance_;
};
// -------------------------------------------------------------------

class OthProduceCPP : public ::google::protobuf::Message {
 public:
  OthProduceCPP();
  virtual ~OthProduceCPP();

  OthProduceCPP(const OthProduceCPP& from);

  inline OthProduceCPP& operator=(const OthProduceCPP& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OthProduceCPP& default_instance();

  void Swap(OthProduceCPP* other);

  // implements Message ----------------------------------------------

  OthProduceCPP* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const OthProduceCPP& from);
  void MergeFrom(const OthProduceCPP& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 ud = 1;
  inline bool has_ud() const;
  inline void clear_ud();
  static const int kUdFieldNumber = 1;
  inline ::google::protobuf::uint32 ud() const;
  inline void set_ud(::google::protobuf::uint32 value);

  // required uint32 status = 2;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 2;
  inline ::google::protobuf::uint32 status() const;
  inline void set_status(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:User.OthProduceCPP)
 private:
  inline void set_has_ud();
  inline void clear_has_ud();
  inline void set_has_status();
  inline void clear_has_status();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 ud_;
  ::google::protobuf::uint32 status_;
  friend void  protobuf_AddDesc_User_2eproto();
  friend void protobuf_AssignDesc_User_2eproto();
  friend void protobuf_ShutdownFile_User_2eproto();

  void InitAsDefaultInstance();
  static OthProduceCPP* default_instance_;
};
// -------------------------------------------------------------------

class RequestOtherUser : public ::google::protobuf::Message {
 public:
  RequestOtherUser();
  virtual ~RequestOtherUser();

  RequestOtherUser(const RequestOtherUser& from);

  inline RequestOtherUser& operator=(const RequestOtherUser& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RequestOtherUser& default_instance();

  void Swap(RequestOtherUser* other);

  // implements Message ----------------------------------------------

  RequestOtherUser* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RequestOtherUser& from);
  void MergeFrom(const RequestOtherUser& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 othuid = 1;
  inline bool has_othuid() const;
  inline void clear_othuid();
  static const int kOthuidFieldNumber = 1;
  inline ::google::protobuf::uint32 othuid() const;
  inline void set_othuid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:User.RequestOtherUser)
 private:
  inline void set_has_othuid();
  inline void clear_has_othuid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 othuid_;
  friend void  protobuf_AddDesc_User_2eproto();
  friend void protobuf_AssignDesc_User_2eproto();
  friend void protobuf_ShutdownFile_User_2eproto();

  void InitAsDefaultInstance();
  static RequestOtherUser* default_instance_;
};
// -------------------------------------------------------------------

class OtherUser : public ::google::protobuf::Message {
 public:
  OtherUser();
  virtual ~OtherUser();

  OtherUser(const OtherUser& from);

  inline OtherUser& operator=(const OtherUser& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OtherUser& default_instance();

  void Swap(OtherUser* other);

  // implements Message ----------------------------------------------

  OtherUser* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const OtherUser& from);
  void MergeFrom(const OtherUser& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .User.Base base = 1;
  inline bool has_base() const;
  inline void clear_base();
  static const int kBaseFieldNumber = 1;
  inline const ::User::Base& base() const;
  inline ::User::Base* mutable_base();
  inline ::User::Base* release_base();
  inline void set_allocated_base(::User::Base* base);

  // repeated .ProtoBuilding.BuildingCPP builds = 2;
  inline int builds_size() const;
  inline void clear_builds();
  static const int kBuildsFieldNumber = 2;
  inline const ::ProtoBuilding::BuildingCPP& builds(int index) const;
  inline ::ProtoBuilding::BuildingCPP* mutable_builds(int index);
  inline ::ProtoBuilding::BuildingCPP* add_builds();
  inline const ::google::protobuf::RepeatedPtrField< ::ProtoBuilding::BuildingCPP >&
      builds() const;
  inline ::google::protobuf::RepeatedPtrField< ::ProtoBuilding::BuildingCPP >*
      mutable_builds();

  // repeated .ProtoProduce.CropLandCPP cropland = 3;
  inline int cropland_size() const;
  inline void clear_cropland();
  static const int kCroplandFieldNumber = 3;
  inline const ::ProtoProduce::CropLandCPP& cropland(int index) const;
  inline ::ProtoProduce::CropLandCPP* mutable_cropland(int index);
  inline ::ProtoProduce::CropLandCPP* add_cropland();
  inline const ::google::protobuf::RepeatedPtrField< ::ProtoProduce::CropLandCPP >&
      cropland() const;
  inline ::google::protobuf::RepeatedPtrField< ::ProtoProduce::CropLandCPP >*
      mutable_cropland();

  // repeated .User.OthProduceCPP equipments = 4;
  inline int equipments_size() const;
  inline void clear_equipments();
  static const int kEquipmentsFieldNumber = 4;
  inline const ::User::OthProduceCPP& equipments(int index) const;
  inline ::User::OthProduceCPP* mutable_equipments(int index);
  inline ::User::OthProduceCPP* add_equipments();
  inline const ::google::protobuf::RepeatedPtrField< ::User::OthProduceCPP >&
      equipments() const;
  inline ::google::protobuf::RepeatedPtrField< ::User::OthProduceCPP >*
      mutable_equipments();

  // repeated .ProtoProduce.AnimalCPP animals = 5;
  inline int animals_size() const;
  inline void clear_animals();
  static const int kAnimalsFieldNumber = 5;
  inline const ::ProtoProduce::AnimalCPP& animals(int index) const;
  inline ::ProtoProduce::AnimalCPP* mutable_animals(int index);
  inline ::ProtoProduce::AnimalCPP* add_animals();
  inline const ::google::protobuf::RepeatedPtrField< ::ProtoProduce::AnimalCPP >&
      animals() const;
  inline ::google::protobuf::RepeatedPtrField< ::ProtoProduce::AnimalCPP >*
      mutable_animals();

  // repeated .ProtoBuilding.EquipmentStarCPP equipmentstars = 6;
  inline int equipmentstars_size() const;
  inline void clear_equipmentstars();
  static const int kEquipmentstarsFieldNumber = 6;
  inline const ::ProtoBuilding::EquipmentStarCPP& equipmentstars(int index) const;
  inline ::ProtoBuilding::EquipmentStarCPP* mutable_equipmentstars(int index);
  inline ::ProtoBuilding::EquipmentStarCPP* add_equipmentstars();
  inline const ::google::protobuf::RepeatedPtrField< ::ProtoBuilding::EquipmentStarCPP >&
      equipmentstars() const;
  inline ::google::protobuf::RepeatedPtrField< ::ProtoBuilding::EquipmentStarCPP >*
      mutable_equipmentstars();

  // repeated .ProtoProduce.FruitCPP fruits = 7;
  inline int fruits_size() const;
  inline void clear_fruits();
  static const int kFruitsFieldNumber = 7;
  inline const ::ProtoProduce::FruitCPP& fruits(int index) const;
  inline ::ProtoProduce::FruitCPP* mutable_fruits(int index);
  inline ::ProtoProduce::FruitCPP* add_fruits();
  inline const ::google::protobuf::RepeatedPtrField< ::ProtoProduce::FruitCPP >&
      fruits() const;
  inline ::google::protobuf::RepeatedPtrField< ::ProtoProduce::FruitCPP >*
      mutable_fruits();

  // required uint32 shopStatus = 8;
  inline bool has_shopstatus() const;
  inline void clear_shopstatus();
  static const int kShopStatusFieldNumber = 8;
  inline ::google::protobuf::uint32 shopstatus() const;
  inline void set_shopstatus(::google::protobuf::uint32 value);

  // optional .ProtoShipping.ShippingCPP shipping = 9;
  inline bool has_shipping() const;
  inline void clear_shipping();
  static const int kShippingFieldNumber = 9;
  inline const ::ProtoShipping::ShippingCPP& shipping() const;
  inline ::ProtoShipping::ShippingCPP* mutable_shipping();
  inline ::ProtoShipping::ShippingCPP* release_shipping();
  inline void set_allocated_shipping(::ProtoShipping::ShippingCPP* shipping);

  // repeated .ProtoShipping.ShippingBoxCPP shipboxes = 10;
  inline int shipboxes_size() const;
  inline void clear_shipboxes();
  static const int kShipboxesFieldNumber = 10;
  inline const ::ProtoShipping::ShippingBoxCPP& shipboxes(int index) const;
  inline ::ProtoShipping::ShippingBoxCPP* mutable_shipboxes(int index);
  inline ::ProtoShipping::ShippingBoxCPP* add_shipboxes();
  inline const ::google::protobuf::RepeatedPtrField< ::ProtoShipping::ShippingBoxCPP >&
      shipboxes() const;
  inline ::google::protobuf::RepeatedPtrField< ::ProtoShipping::ShippingBoxCPP >*
      mutable_shipboxes();

  // required .ProtoFriendlyTree.FriendlyTreeCPP friendlytree = 11;
  inline bool has_friendlytree() const;
  inline void clear_friendlytree();
  static const int kFriendlytreeFieldNumber = 11;
  inline const ::ProtoFriendlyTree::FriendlyTreeCPP& friendlytree() const;
  inline ::ProtoFriendlyTree::FriendlyTreeCPP* mutable_friendlytree();
  inline ::ProtoFriendlyTree::FriendlyTreeCPP* release_friendlytree();
  inline void set_allocated_friendlytree(::ProtoFriendlyTree::FriendlyTreeCPP* friendlytree);

  // optional .ProtoTheme.ThemeInfoResp theme = 12;
  inline bool has_theme() const;
  inline void clear_theme();
  static const int kThemeFieldNumber = 12;
  inline const ::ProtoTheme::ThemeInfoResp& theme() const;
  inline ::ProtoTheme::ThemeInfoResp* mutable_theme();
  inline ::ProtoTheme::ThemeInfoResp* release_theme();
  inline void set_allocated_theme(::ProtoTheme::ThemeInfoResp* theme);

  // repeated .ProtoPet.UnlockPetCPP arraypet = 13;
  inline int arraypet_size() const;
  inline void clear_arraypet();
  static const int kArraypetFieldNumber = 13;
  inline const ::ProtoPet::UnlockPetCPP& arraypet(int index) const;
  inline ::ProtoPet::UnlockPetCPP* mutable_arraypet(int index);
  inline ::ProtoPet::UnlockPetCPP* add_arraypet();
  inline const ::google::protobuf::RepeatedPtrField< ::ProtoPet::UnlockPetCPP >&
      arraypet() const;
  inline ::google::protobuf::RepeatedPtrField< ::ProtoPet::UnlockPetCPP >*
      mutable_arraypet();

  // @@protoc_insertion_point(class_scope:User.OtherUser)
 private:
  inline void set_has_base();
  inline void clear_has_base();
  inline void set_has_shopstatus();
  inline void clear_has_shopstatus();
  inline void set_has_shipping();
  inline void clear_has_shipping();
  inline void set_has_friendlytree();
  inline void clear_has_friendlytree();
  inline void set_has_theme();
  inline void clear_has_theme();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::User::Base* base_;
  ::google::protobuf::RepeatedPtrField< ::ProtoBuilding::BuildingCPP > builds_;
  ::google::protobuf::RepeatedPtrField< ::ProtoProduce::CropLandCPP > cropland_;
  ::google::protobuf::RepeatedPtrField< ::User::OthProduceCPP > equipments_;
  ::google::protobuf::RepeatedPtrField< ::ProtoProduce::AnimalCPP > animals_;
  ::google::protobuf::RepeatedPtrField< ::ProtoBuilding::EquipmentStarCPP > equipmentstars_;
  ::google::protobuf::RepeatedPtrField< ::ProtoProduce::FruitCPP > fruits_;
  ::ProtoShipping::ShippingCPP* shipping_;
  ::google::protobuf::RepeatedPtrField< ::ProtoShipping::ShippingBoxCPP > shipboxes_;
  ::ProtoFriendlyTree::FriendlyTreeCPP* friendlytree_;
  ::ProtoTheme::ThemeInfoResp* theme_;
  ::google::protobuf::RepeatedPtrField< ::ProtoPet::UnlockPetCPP > arraypet_;
  ::google::protobuf::uint32 shopstatus_;
  friend void  protobuf_AddDesc_User_2eproto();
  friend void protobuf_AssignDesc_User_2eproto();
  friend void protobuf_ShutdownFile_User_2eproto();

  void InitAsDefaultInstance();
  static OtherUser* default_instance_;
};
// -------------------------------------------------------------------

class RequestOtherUserBC : public ::google::protobuf::Message {
 public:
  RequestOtherUserBC();
  virtual ~RequestOtherUserBC();

  RequestOtherUserBC(const RequestOtherUserBC& from);

  inline RequestOtherUserBC& operator=(const RequestOtherUserBC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RequestOtherUserBC& default_instance();

  void Swap(RequestOtherUserBC* other);

  // implements Message ----------------------------------------------

  RequestOtherUserBC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RequestOtherUserBC& from);
  void MergeFrom(const RequestOtherUserBC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 othuid = 1;
  inline bool has_othuid() const;
  inline void clear_othuid();
  static const int kOthuidFieldNumber = 1;
  inline ::google::protobuf::uint32 othuid() const;
  inline void set_othuid(::google::protobuf::uint32 value);

  // required uint32 myuid = 2;
  inline bool has_myuid() const;
  inline void clear_myuid();
  static const int kMyuidFieldNumber = 2;
  inline ::google::protobuf::uint32 myuid() const;
  inline void set_myuid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:User.RequestOtherUserBC)
 private:
  inline void set_has_othuid();
  inline void clear_has_othuid();
  inline void set_has_myuid();
  inline void clear_has_myuid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 othuid_;
  ::google::protobuf::uint32 myuid_;
  friend void  protobuf_AddDesc_User_2eproto();
  friend void protobuf_AssignDesc_User_2eproto();
  friend void protobuf_ShutdownFile_User_2eproto();

  void InitAsDefaultInstance();
  static RequestOtherUserBC* default_instance_;
};
// -------------------------------------------------------------------

class FetchSelfReq : public ::google::protobuf::Message {
 public:
  FetchSelfReq();
  virtual ~FetchSelfReq();

  FetchSelfReq(const FetchSelfReq& from);

  inline FetchSelfReq& operator=(const FetchSelfReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FetchSelfReq& default_instance();

  void Swap(FetchSelfReq* other);

  // implements Message ----------------------------------------------

  FetchSelfReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FetchSelfReq& from);
  void MergeFrom(const FetchSelfReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:User.FetchSelfReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_User_2eproto();
  friend void protobuf_AssignDesc_User_2eproto();
  friend void protobuf_ShutdownFile_User_2eproto();

  void InitAsDefaultInstance();
  static FetchSelfReq* default_instance_;
};
// -------------------------------------------------------------------

class FetchSelfResp : public ::google::protobuf::Message {
 public:
  FetchSelfResp();
  virtual ~FetchSelfResp();

  FetchSelfResp(const FetchSelfResp& from);

  inline FetchSelfResp& operator=(const FetchSelfResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FetchSelfResp& default_instance();

  void Swap(FetchSelfResp* other);

  // implements Message ----------------------------------------------

  FetchSelfResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FetchSelfResp& from);
  void MergeFrom(const FetchSelfResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .User.User player = 1;
  inline bool has_player() const;
  inline void clear_player();
  static const int kPlayerFieldNumber = 1;
  inline const ::User::User& player() const;
  inline ::User::User* mutable_player();
  inline ::User::User* release_player();
  inline void set_allocated_player(::User::User* player);

  // @@protoc_insertion_point(class_scope:User.FetchSelfResp)
 private:
  inline void set_has_player();
  inline void clear_has_player();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::User::User* player_;
  friend void  protobuf_AddDesc_User_2eproto();
  friend void protobuf_AssignDesc_User_2eproto();
  friend void protobuf_ShutdownFile_User_2eproto();

  void InitAsDefaultInstance();
  static FetchSelfResp* default_instance_;
};
// -------------------------------------------------------------------

class Tutorialstage : public ::google::protobuf::Message {
 public:
  Tutorialstage();
  virtual ~Tutorialstage();

  Tutorialstage(const Tutorialstage& from);

  inline Tutorialstage& operator=(const Tutorialstage& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Tutorialstage& default_instance();

  void Swap(Tutorialstage* other);

  // implements Message ----------------------------------------------

  Tutorialstage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Tutorialstage& from);
  void MergeFrom(const Tutorialstage& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 tutorialStage = 1;
  inline bool has_tutorialstage() const;
  inline void clear_tutorialstage();
  static const int kTutorialStageFieldNumber = 1;
  inline ::google::protobuf::uint32 tutorialstage() const;
  inline void set_tutorialstage(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:User.Tutorialstage)
 private:
  inline void set_has_tutorialstage();
  inline void clear_has_tutorialstage();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 tutorialstage_;
  friend void  protobuf_AddDesc_User_2eproto();
  friend void protobuf_AssignDesc_User_2eproto();
  friend void protobuf_ShutdownFile_User_2eproto();

  void InitAsDefaultInstance();
  static Tutorialstage* default_instance_;
};
// -------------------------------------------------------------------

class SwitchStatus : public ::google::protobuf::Message {
 public:
  SwitchStatus();
  virtual ~SwitchStatus();

  SwitchStatus(const SwitchStatus& from);

  inline SwitchStatus& operator=(const SwitchStatus& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SwitchStatus& default_instance();

  void Swap(SwitchStatus* other);

  // implements Message ----------------------------------------------

  SwitchStatus* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SwitchStatus& from);
  void MergeFrom(const SwitchStatus& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 switchStatus = 1;
  inline bool has_switchstatus() const;
  inline void clear_switchstatus();
  static const int kSwitchStatusFieldNumber = 1;
  inline ::google::protobuf::uint32 switchstatus() const;
  inline void set_switchstatus(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:User.SwitchStatus)
 private:
  inline void set_has_switchstatus();
  inline void clear_has_switchstatus();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 switchstatus_;
  friend void  protobuf_AddDesc_User_2eproto();
  friend void protobuf_AssignDesc_User_2eproto();
  friend void protobuf_ShutdownFile_User_2eproto();

  void InitAsDefaultInstance();
  static SwitchStatus* default_instance_;
};
// -------------------------------------------------------------------

class ServerTime : public ::google::protobuf::Message {
 public:
  ServerTime();
  virtual ~ServerTime();

  ServerTime(const ServerTime& from);

  inline ServerTime& operator=(const ServerTime& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ServerTime& default_instance();

  void Swap(ServerTime* other);

  // implements Message ----------------------------------------------

  ServerTime* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ServerTime& from);
  void MergeFrom(const ServerTime& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 ts = 1;
  inline bool has_ts() const;
  inline void clear_ts();
  static const int kTsFieldNumber = 1;
  inline ::google::protobuf::uint32 ts() const;
  inline void set_ts(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:User.ServerTime)
 private:
  inline void set_has_ts();
  inline void clear_has_ts();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 ts_;
  friend void  protobuf_AddDesc_User_2eproto();
  friend void protobuf_AssignDesc_User_2eproto();
  friend void protobuf_ShutdownFile_User_2eproto();

  void InitAsDefaultInstance();
  static ServerTime* default_instance_;
};
// -------------------------------------------------------------------

class CostCashReq : public ::google::protobuf::Message {
 public:
  CostCashReq();
  virtual ~CostCashReq();

  CostCashReq(const CostCashReq& from);

  inline CostCashReq& operator=(const CostCashReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CostCashReq& default_instance();

  void Swap(CostCashReq* other);

  // implements Message ----------------------------------------------

  CostCashReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CostCashReq& from);
  void MergeFrom(const CostCashReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 cash = 1;
  inline bool has_cash() const;
  inline void clear_cash();
  static const int kCashFieldNumber = 1;
  inline ::google::protobuf::uint32 cash() const;
  inline void set_cash(::google::protobuf::uint32 value);

  // required string opCode = 2;
  inline bool has_opcode() const;
  inline void clear_opcode();
  static const int kOpCodeFieldNumber = 2;
  inline const ::std::string& opcode() const;
  inline void set_opcode(const ::std::string& value);
  inline void set_opcode(const char* value);
  inline void set_opcode(const char* value, size_t size);
  inline ::std::string* mutable_opcode();
  inline ::std::string* release_opcode();
  inline void set_allocated_opcode(::std::string* opcode);

  // required uint32 operation = 3;
  inline bool has_operation() const;
  inline void clear_operation();
  static const int kOperationFieldNumber = 3;
  inline ::google::protobuf::uint32 operation() const;
  inline void set_operation(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:User.CostCashReq)
 private:
  inline void set_has_cash();
  inline void clear_has_cash();
  inline void set_has_opcode();
  inline void clear_has_opcode();
  inline void set_has_operation();
  inline void clear_has_operation();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* opcode_;
  ::google::protobuf::uint32 cash_;
  ::google::protobuf::uint32 operation_;
  friend void  protobuf_AddDesc_User_2eproto();
  friend void protobuf_AssignDesc_User_2eproto();
  friend void protobuf_ShutdownFile_User_2eproto();

  void InitAsDefaultInstance();
  static CostCashReq* default_instance_;
};
// -------------------------------------------------------------------

class CostCashResp : public ::google::protobuf::Message {
 public:
  CostCashResp();
  virtual ~CostCashResp();

  CostCashResp(const CostCashResp& from);

  inline CostCashResp& operator=(const CostCashResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CostCashResp& default_instance();

  void Swap(CostCashResp* other);

  // implements Message ----------------------------------------------

  CostCashResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CostCashResp& from);
  void MergeFrom(const CostCashResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 cash = 1;
  inline bool has_cash() const;
  inline void clear_cash();
  static const int kCashFieldNumber = 1;
  inline ::google::protobuf::uint32 cash() const;
  inline void set_cash(::google::protobuf::uint32 value);

  // required uint32 operation = 2;
  inline bool has_operation() const;
  inline void clear_operation();
  static const int kOperationFieldNumber = 2;
  inline ::google::protobuf::uint32 operation() const;
  inline void set_operation(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:User.CostCashResp)
 private:
  inline void set_has_cash();
  inline void clear_has_cash();
  inline void set_has_operation();
  inline void clear_has_operation();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 cash_;
  ::google::protobuf::uint32 operation_;
  friend void  protobuf_AddDesc_User_2eproto();
  friend void protobuf_AssignDesc_User_2eproto();
  friend void protobuf_ShutdownFile_User_2eproto();

  void InitAsDefaultInstance();
  static CostCashResp* default_instance_;
};
// -------------------------------------------------------------------

class ChargeItem : public ::google::protobuf::Message {
 public:
  ChargeItem();
  virtual ~ChargeItem();

  ChargeItem(const ChargeItem& from);

  inline ChargeItem& operator=(const ChargeItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ChargeItem& default_instance();

  void Swap(ChargeItem* other);

  // implements Message ----------------------------------------------

  ChargeItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ChargeItem& from);
  void MergeFrom(const ChargeItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 cash = 1;
  inline bool has_cash() const;
  inline void clear_cash();
  static const int kCashFieldNumber = 1;
  inline ::google::protobuf::uint32 cash() const;
  inline void set_cash(::google::protobuf::uint32 value);

  // required uint32 ts = 2;
  inline bool has_ts() const;
  inline void clear_ts();
  static const int kTsFieldNumber = 2;
  inline ::google::protobuf::uint32 ts() const;
  inline void set_ts(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:User.ChargeItem)
 private:
  inline void set_has_cash();
  inline void clear_has_cash();
  inline void set_has_ts();
  inline void clear_has_ts();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 cash_;
  ::google::protobuf::uint32 ts_;
  friend void  protobuf_AddDesc_User_2eproto();
  friend void protobuf_AssignDesc_User_2eproto();
  friend void protobuf_ShutdownFile_User_2eproto();

  void InitAsDefaultInstance();
  static ChargeItem* default_instance_;
};
// -------------------------------------------------------------------

class AccumulateCharge : public ::google::protobuf::Message {
 public:
  AccumulateCharge();
  virtual ~AccumulateCharge();

  AccumulateCharge(const AccumulateCharge& from);

  inline AccumulateCharge& operator=(const AccumulateCharge& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AccumulateCharge& default_instance();

  void Swap(AccumulateCharge* other);

  // implements Message ----------------------------------------------

  AccumulateCharge* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AccumulateCharge& from);
  void MergeFrom(const AccumulateCharge& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .User.ChargeItem accumulateCharge = 1;
  inline int accumulatecharge_size() const;
  inline void clear_accumulatecharge();
  static const int kAccumulateChargeFieldNumber = 1;
  inline const ::User::ChargeItem& accumulatecharge(int index) const;
  inline ::User::ChargeItem* mutable_accumulatecharge(int index);
  inline ::User::ChargeItem* add_accumulatecharge();
  inline const ::google::protobuf::RepeatedPtrField< ::User::ChargeItem >&
      accumulatecharge() const;
  inline ::google::protobuf::RepeatedPtrField< ::User::ChargeItem >*
      mutable_accumulatecharge();

  // @@protoc_insertion_point(class_scope:User.AccumulateCharge)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::User::ChargeItem > accumulatecharge_;
  friend void  protobuf_AddDesc_User_2eproto();
  friend void protobuf_AssignDesc_User_2eproto();
  friend void protobuf_ShutdownFile_User_2eproto();

  void InitAsDefaultInstance();
  static AccumulateCharge* default_instance_;
};
// -------------------------------------------------------------------

class PushAccumulateChangeReq : public ::google::protobuf::Message {
 public:
  PushAccumulateChangeReq();
  virtual ~PushAccumulateChangeReq();

  PushAccumulateChangeReq(const PushAccumulateChangeReq& from);

  inline PushAccumulateChangeReq& operator=(const PushAccumulateChangeReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PushAccumulateChangeReq& default_instance();

  void Swap(PushAccumulateChangeReq* other);

  // implements Message ----------------------------------------------

  PushAccumulateChangeReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PushAccumulateChangeReq& from);
  void MergeFrom(const PushAccumulateChangeReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .User.AccumulateCharge changeAcccharge = 1;
  inline bool has_changeacccharge() const;
  inline void clear_changeacccharge();
  static const int kChangeAccchargeFieldNumber = 1;
  inline const ::User::AccumulateCharge& changeacccharge() const;
  inline ::User::AccumulateCharge* mutable_changeacccharge();
  inline ::User::AccumulateCharge* release_changeacccharge();
  inline void set_allocated_changeacccharge(::User::AccumulateCharge* changeacccharge);

  // @@protoc_insertion_point(class_scope:User.PushAccumulateChangeReq)
 private:
  inline void set_has_changeacccharge();
  inline void clear_has_changeacccharge();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::User::AccumulateCharge* changeacccharge_;
  friend void  protobuf_AddDesc_User_2eproto();
  friend void protobuf_AssignDesc_User_2eproto();
  friend void protobuf_ShutdownFile_User_2eproto();

  void InitAsDefaultInstance();
  static PushAccumulateChangeReq* default_instance_;
};
// -------------------------------------------------------------------

class SpeedUpReq : public ::google::protobuf::Message {
 public:
  SpeedUpReq();
  virtual ~SpeedUpReq();

  SpeedUpReq(const SpeedUpReq& from);

  inline SpeedUpReq& operator=(const SpeedUpReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SpeedUpReq& default_instance();

  void Swap(SpeedUpReq* other);

  // implements Message ----------------------------------------------

  SpeedUpReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SpeedUpReq& from);
  void MergeFrom(const SpeedUpReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);

  // optional uint32 ud = 2;
  inline bool has_ud() const;
  inline void clear_ud();
  static const int kUdFieldNumber = 2;
  inline ::google::protobuf::uint32 ud() const;
  inline void set_ud(::google::protobuf::uint32 value);

  // optional uint32 method = 3;
  inline bool has_method() const;
  inline void clear_method();
  static const int kMethodFieldNumber = 3;
  inline ::google::protobuf::uint32 method() const;
  inline void set_method(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:User.SpeedUpReq)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_ud();
  inline void clear_has_ud();
  inline void set_has_method();
  inline void clear_has_method();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 type_;
  ::google::protobuf::uint32 ud_;
  ::google::protobuf::uint32 method_;
  friend void  protobuf_AddDesc_User_2eproto();
  friend void protobuf_AssignDesc_User_2eproto();
  friend void protobuf_ShutdownFile_User_2eproto();

  void InitAsDefaultInstance();
  static SpeedUpReq* default_instance_;
};
// -------------------------------------------------------------------

class SpeedUpResp : public ::google::protobuf::Message {
 public:
  SpeedUpResp();
  virtual ~SpeedUpResp();

  SpeedUpResp(const SpeedUpResp& from);

  inline SpeedUpResp& operator=(const SpeedUpResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SpeedUpResp& default_instance();

  void Swap(SpeedUpResp* other);

  // implements Message ----------------------------------------------

  SpeedUpResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SpeedUpResp& from);
  void MergeFrom(const SpeedUpResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .DataCommon.CommonItemsCPP commons = 1;
  inline bool has_commons() const;
  inline void clear_commons();
  static const int kCommonsFieldNumber = 1;
  inline const ::DataCommon::CommonItemsCPP& commons() const;
  inline ::DataCommon::CommonItemsCPP* mutable_commons();
  inline ::DataCommon::CommonItemsCPP* release_commons();
  inline void set_allocated_commons(::DataCommon::CommonItemsCPP* commons);

  // @@protoc_insertion_point(class_scope:User.SpeedUpResp)
 private:
  inline void set_has_commons();
  inline void clear_has_commons();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::DataCommon::CommonItemsCPP* commons_;
  friend void  protobuf_AddDesc_User_2eproto();
  friend void protobuf_AssignDesc_User_2eproto();
  friend void protobuf_ShutdownFile_User_2eproto();

  void InitAsDefaultInstance();
  static SpeedUpResp* default_instance_;
};
// -------------------------------------------------------------------

class BuyMaterialInfo : public ::google::protobuf::Message {
 public:
  BuyMaterialInfo();
  virtual ~BuyMaterialInfo();

  BuyMaterialInfo(const BuyMaterialInfo& from);

  inline BuyMaterialInfo& operator=(const BuyMaterialInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BuyMaterialInfo& default_instance();

  void Swap(BuyMaterialInfo* other);

  // implements Message ----------------------------------------------

  BuyMaterialInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BuyMaterialInfo& from);
  void MergeFrom(const BuyMaterialInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 propsid = 1;
  inline bool has_propsid() const;
  inline void clear_propsid();
  static const int kPropsidFieldNumber = 1;
  inline ::google::protobuf::uint32 propsid() const;
  inline void set_propsid(::google::protobuf::uint32 value);

  // required uint32 propscnt = 2;
  inline bool has_propscnt() const;
  inline void clear_propscnt();
  static const int kPropscntFieldNumber = 2;
  inline ::google::protobuf::uint32 propscnt() const;
  inline void set_propscnt(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:User.BuyMaterialInfo)
 private:
  inline void set_has_propsid();
  inline void clear_has_propsid();
  inline void set_has_propscnt();
  inline void clear_has_propscnt();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 propsid_;
  ::google::protobuf::uint32 propscnt_;
  friend void  protobuf_AddDesc_User_2eproto();
  friend void protobuf_AssignDesc_User_2eproto();
  friend void protobuf_ShutdownFile_User_2eproto();

  void InitAsDefaultInstance();
  static BuyMaterialInfo* default_instance_;
};
// -------------------------------------------------------------------

class BuyMaterialReq : public ::google::protobuf::Message {
 public:
  BuyMaterialReq();
  virtual ~BuyMaterialReq();

  BuyMaterialReq(const BuyMaterialReq& from);

  inline BuyMaterialReq& operator=(const BuyMaterialReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BuyMaterialReq& default_instance();

  void Swap(BuyMaterialReq* other);

  // implements Message ----------------------------------------------

  BuyMaterialReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BuyMaterialReq& from);
  void MergeFrom(const BuyMaterialReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .User.BuyMaterialInfo buyinfo = 1;
  inline int buyinfo_size() const;
  inline void clear_buyinfo();
  static const int kBuyinfoFieldNumber = 1;
  inline const ::User::BuyMaterialInfo& buyinfo(int index) const;
  inline ::User::BuyMaterialInfo* mutable_buyinfo(int index);
  inline ::User::BuyMaterialInfo* add_buyinfo();
  inline const ::google::protobuf::RepeatedPtrField< ::User::BuyMaterialInfo >&
      buyinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::User::BuyMaterialInfo >*
      mutable_buyinfo();

  // required uint32 seq = 2;
  inline bool has_seq() const;
  inline void clear_seq();
  static const int kSeqFieldNumber = 2;
  inline ::google::protobuf::uint32 seq() const;
  inline void set_seq(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:User.BuyMaterialReq)
 private:
  inline void set_has_seq();
  inline void clear_has_seq();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::User::BuyMaterialInfo > buyinfo_;
  ::google::protobuf::uint32 seq_;
  friend void  protobuf_AddDesc_User_2eproto();
  friend void protobuf_AssignDesc_User_2eproto();
  friend void protobuf_ShutdownFile_User_2eproto();

  void InitAsDefaultInstance();
  static BuyMaterialReq* default_instance_;
};
// -------------------------------------------------------------------

class BuyMaterialResp : public ::google::protobuf::Message {
 public:
  BuyMaterialResp();
  virtual ~BuyMaterialResp();

  BuyMaterialResp(const BuyMaterialResp& from);

  inline BuyMaterialResp& operator=(const BuyMaterialResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BuyMaterialResp& default_instance();

  void Swap(BuyMaterialResp* other);

  // implements Message ----------------------------------------------

  BuyMaterialResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BuyMaterialResp& from);
  void MergeFrom(const BuyMaterialResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .DataCommon.CommonItemsCPP commons = 1;
  inline bool has_commons() const;
  inline void clear_commons();
  static const int kCommonsFieldNumber = 1;
  inline const ::DataCommon::CommonItemsCPP& commons() const;
  inline ::DataCommon::CommonItemsCPP* mutable_commons();
  inline ::DataCommon::CommonItemsCPP* release_commons();
  inline void set_allocated_commons(::DataCommon::CommonItemsCPP* commons);

  // required uint32 seq = 2;
  inline bool has_seq() const;
  inline void clear_seq();
  static const int kSeqFieldNumber = 2;
  inline ::google::protobuf::uint32 seq() const;
  inline void set_seq(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:User.BuyMaterialResp)
 private:
  inline void set_has_commons();
  inline void clear_has_commons();
  inline void set_has_seq();
  inline void clear_has_seq();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::DataCommon::CommonItemsCPP* commons_;
  ::google::protobuf::uint32 seq_;
  friend void  protobuf_AddDesc_User_2eproto();
  friend void protobuf_AssignDesc_User_2eproto();
  friend void protobuf_ShutdownFile_User_2eproto();

  void InitAsDefaultInstance();
  static BuyMaterialResp* default_instance_;
};
// -------------------------------------------------------------------

class CriticalRewardsResp : public ::google::protobuf::Message {
 public:
  CriticalRewardsResp();
  virtual ~CriticalRewardsResp();

  CriticalRewardsResp(const CriticalRewardsResp& from);

  inline CriticalRewardsResp& operator=(const CriticalRewardsResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CriticalRewardsResp& default_instance();

  void Swap(CriticalRewardsResp* other);

  // implements Message ----------------------------------------------

  CriticalRewardsResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CriticalRewardsResp& from);
  void MergeFrom(const CriticalRewardsResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .DataCommon.CommonItemsCPP commons = 1;
  inline bool has_commons() const;
  inline void clear_commons();
  static const int kCommonsFieldNumber = 1;
  inline const ::DataCommon::CommonItemsCPP& commons() const;
  inline ::DataCommon::CommonItemsCPP* mutable_commons();
  inline ::DataCommon::CommonItemsCPP* release_commons();
  inline void set_allocated_commons(::DataCommon::CommonItemsCPP* commons);

  // @@protoc_insertion_point(class_scope:User.CriticalRewardsResp)
 private:
  inline void set_has_commons();
  inline void clear_has_commons();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::DataCommon::CommonItemsCPP* commons_;
  friend void  protobuf_AddDesc_User_2eproto();
  friend void protobuf_AssignDesc_User_2eproto();
  friend void protobuf_ShutdownFile_User_2eproto();

  void InitAsDefaultInstance();
  static CriticalRewardsResp* default_instance_;
};
// -------------------------------------------------------------------

class LevelRewardsResp : public ::google::protobuf::Message {
 public:
  LevelRewardsResp();
  virtual ~LevelRewardsResp();

  LevelRewardsResp(const LevelRewardsResp& from);

  inline LevelRewardsResp& operator=(const LevelRewardsResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LevelRewardsResp& default_instance();

  void Swap(LevelRewardsResp* other);

  // implements Message ----------------------------------------------

  LevelRewardsResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LevelRewardsResp& from);
  void MergeFrom(const LevelRewardsResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .DataCommon.CommonItemsCPP commons = 1;
  inline bool has_commons() const;
  inline void clear_commons();
  static const int kCommonsFieldNumber = 1;
  inline const ::DataCommon::CommonItemsCPP& commons() const;
  inline ::DataCommon::CommonItemsCPP* mutable_commons();
  inline ::DataCommon::CommonItemsCPP* release_commons();
  inline void set_allocated_commons(::DataCommon::CommonItemsCPP* commons);

  // @@protoc_insertion_point(class_scope:User.LevelRewardsResp)
 private:
  inline void set_has_commons();
  inline void clear_has_commons();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::DataCommon::CommonItemsCPP* commons_;
  friend void  protobuf_AddDesc_User_2eproto();
  friend void protobuf_AssignDesc_User_2eproto();
  friend void protobuf_ShutdownFile_User_2eproto();

  void InitAsDefaultInstance();
  static LevelRewardsResp* default_instance_;
};
// -------------------------------------------------------------------

class DaliyShareReq : public ::google::protobuf::Message {
 public:
  DaliyShareReq();
  virtual ~DaliyShareReq();

  DaliyShareReq(const DaliyShareReq& from);

  inline DaliyShareReq& operator=(const DaliyShareReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DaliyShareReq& default_instance();

  void Swap(DaliyShareReq* other);

  // implements Message ----------------------------------------------

  DaliyShareReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DaliyShareReq& from);
  void MergeFrom(const DaliyShareReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:User.DaliyShareReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_User_2eproto();
  friend void protobuf_AssignDesc_User_2eproto();
  friend void protobuf_ShutdownFile_User_2eproto();

  void InitAsDefaultInstance();
  static DaliyShareReq* default_instance_;
};
// -------------------------------------------------------------------

class DaliyShareResp : public ::google::protobuf::Message {
 public:
  DaliyShareResp();
  virtual ~DaliyShareResp();

  DaliyShareResp(const DaliyShareResp& from);

  inline DaliyShareResp& operator=(const DaliyShareResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DaliyShareResp& default_instance();

  void Swap(DaliyShareResp* other);

  // implements Message ----------------------------------------------

  DaliyShareResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DaliyShareResp& from);
  void MergeFrom(const DaliyShareResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 days = 1;
  inline bool has_days() const;
  inline void clear_days();
  static const int kDaysFieldNumber = 1;
  inline ::google::protobuf::uint32 days() const;
  inline void set_days(::google::protobuf::uint32 value);

  // required uint32 rewardts = 2;
  inline bool has_rewardts() const;
  inline void clear_rewardts();
  static const int kRewardtsFieldNumber = 2;
  inline ::google::protobuf::uint32 rewardts() const;
  inline void set_rewardts(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:User.DaliyShareResp)
 private:
  inline void set_has_days();
  inline void clear_has_days();
  inline void set_has_rewardts();
  inline void clear_has_rewardts();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 days_;
  ::google::protobuf::uint32 rewardts_;
  friend void  protobuf_AddDesc_User_2eproto();
  friend void protobuf_AssignDesc_User_2eproto();
  friend void protobuf_ShutdownFile_User_2eproto();

  void InitAsDefaultInstance();
  static DaliyShareResp* default_instance_;
};
// -------------------------------------------------------------------

class ShareRewardsReq : public ::google::protobuf::Message {
 public:
  ShareRewardsReq();
  virtual ~ShareRewardsReq();

  ShareRewardsReq(const ShareRewardsReq& from);

  inline ShareRewardsReq& operator=(const ShareRewardsReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ShareRewardsReq& default_instance();

  void Swap(ShareRewardsReq* other);

  // implements Message ----------------------------------------------

  ShareRewardsReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ShareRewardsReq& from);
  void MergeFrom(const ShareRewardsReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:User.ShareRewardsReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_User_2eproto();
  friend void protobuf_AssignDesc_User_2eproto();
  friend void protobuf_ShutdownFile_User_2eproto();

  void InitAsDefaultInstance();
  static ShareRewardsReq* default_instance_;
};
// -------------------------------------------------------------------

class ShareRewardsResp : public ::google::protobuf::Message {
 public:
  ShareRewardsResp();
  virtual ~ShareRewardsResp();

  ShareRewardsResp(const ShareRewardsResp& from);

  inline ShareRewardsResp& operator=(const ShareRewardsResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ShareRewardsResp& default_instance();

  void Swap(ShareRewardsResp* other);

  // implements Message ----------------------------------------------

  ShareRewardsResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ShareRewardsResp& from);
  void MergeFrom(const ShareRewardsResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .DataCommon.CommonItemsCPP commons = 1;
  inline bool has_commons() const;
  inline void clear_commons();
  static const int kCommonsFieldNumber = 1;
  inline const ::DataCommon::CommonItemsCPP& commons() const;
  inline ::DataCommon::CommonItemsCPP* mutable_commons();
  inline ::DataCommon::CommonItemsCPP* release_commons();
  inline void set_allocated_commons(::DataCommon::CommonItemsCPP* commons);

  // required uint32 rewardts = 2;
  inline bool has_rewardts() const;
  inline void clear_rewardts();
  static const int kRewardtsFieldNumber = 2;
  inline ::google::protobuf::uint32 rewardts() const;
  inline void set_rewardts(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:User.ShareRewardsResp)
 private:
  inline void set_has_commons();
  inline void clear_has_commons();
  inline void set_has_rewardts();
  inline void clear_has_rewardts();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::DataCommon::CommonItemsCPP* commons_;
  ::google::protobuf::uint32 rewardts_;
  friend void  protobuf_AddDesc_User_2eproto();
  friend void protobuf_AssignDesc_User_2eproto();
  friend void protobuf_ShutdownFile_User_2eproto();

  void InitAsDefaultInstance();
  static ShareRewardsResp* default_instance_;
};
// -------------------------------------------------------------------

class ShareTotalRewardsReq : public ::google::protobuf::Message {
 public:
  ShareTotalRewardsReq();
  virtual ~ShareTotalRewardsReq();

  ShareTotalRewardsReq(const ShareTotalRewardsReq& from);

  inline ShareTotalRewardsReq& operator=(const ShareTotalRewardsReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ShareTotalRewardsReq& default_instance();

  void Swap(ShareTotalRewardsReq* other);

  // implements Message ----------------------------------------------

  ShareTotalRewardsReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ShareTotalRewardsReq& from);
  void MergeFrom(const ShareTotalRewardsReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 day = 1;
  inline bool has_day() const;
  inline void clear_day();
  static const int kDayFieldNumber = 1;
  inline ::google::protobuf::uint32 day() const;
  inline void set_day(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:User.ShareTotalRewardsReq)
 private:
  inline void set_has_day();
  inline void clear_has_day();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 day_;
  friend void  protobuf_AddDesc_User_2eproto();
  friend void protobuf_AssignDesc_User_2eproto();
  friend void protobuf_ShutdownFile_User_2eproto();

  void InitAsDefaultInstance();
  static ShareTotalRewardsReq* default_instance_;
};
// -------------------------------------------------------------------

class ShareTotalRewardsResp : public ::google::protobuf::Message {
 public:
  ShareTotalRewardsResp();
  virtual ~ShareTotalRewardsResp();

  ShareTotalRewardsResp(const ShareTotalRewardsResp& from);

  inline ShareTotalRewardsResp& operator=(const ShareTotalRewardsResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ShareTotalRewardsResp& default_instance();

  void Swap(ShareTotalRewardsResp* other);

  // implements Message ----------------------------------------------

  ShareTotalRewardsResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ShareTotalRewardsResp& from);
  void MergeFrom(const ShareTotalRewardsResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .DataCommon.CommonItemsCPP commons = 1;
  inline bool has_commons() const;
  inline void clear_commons();
  static const int kCommonsFieldNumber = 1;
  inline const ::DataCommon::CommonItemsCPP& commons() const;
  inline ::DataCommon::CommonItemsCPP* mutable_commons();
  inline ::DataCommon::CommonItemsCPP* release_commons();
  inline void set_allocated_commons(::DataCommon::CommonItemsCPP* commons);

  // required uint32 marks = 2;
  inline bool has_marks() const;
  inline void clear_marks();
  static const int kMarksFieldNumber = 2;
  inline ::google::protobuf::uint32 marks() const;
  inline void set_marks(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:User.ShareTotalRewardsResp)
 private:
  inline void set_has_commons();
  inline void clear_has_commons();
  inline void set_has_marks();
  inline void clear_has_marks();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::DataCommon::CommonItemsCPP* commons_;
  ::google::protobuf::uint32 marks_;
  friend void  protobuf_AddDesc_User_2eproto();
  friend void protobuf_AssignDesc_User_2eproto();
  friend void protobuf_ShutdownFile_User_2eproto();

  void InitAsDefaultInstance();
  static ShareTotalRewardsResp* default_instance_;
};
// -------------------------------------------------------------------

class PurchaseCoinReq : public ::google::protobuf::Message {
 public:
  PurchaseCoinReq();
  virtual ~PurchaseCoinReq();

  PurchaseCoinReq(const PurchaseCoinReq& from);

  inline PurchaseCoinReq& operator=(const PurchaseCoinReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PurchaseCoinReq& default_instance();

  void Swap(PurchaseCoinReq* other);

  // implements Message ----------------------------------------------

  PurchaseCoinReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PurchaseCoinReq& from);
  void MergeFrom(const PurchaseCoinReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:User.PurchaseCoinReq)
 private:
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 id_;
  friend void  protobuf_AddDesc_User_2eproto();
  friend void protobuf_AssignDesc_User_2eproto();
  friend void protobuf_ShutdownFile_User_2eproto();

  void InitAsDefaultInstance();
  static PurchaseCoinReq* default_instance_;
};
// -------------------------------------------------------------------

class PurchaseCoinResp : public ::google::protobuf::Message {
 public:
  PurchaseCoinResp();
  virtual ~PurchaseCoinResp();

  PurchaseCoinResp(const PurchaseCoinResp& from);

  inline PurchaseCoinResp& operator=(const PurchaseCoinResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PurchaseCoinResp& default_instance();

  void Swap(PurchaseCoinResp* other);

  // implements Message ----------------------------------------------

  PurchaseCoinResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PurchaseCoinResp& from);
  void MergeFrom(const PurchaseCoinResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .DataCommon.CommonItemsCPP commons = 1;
  inline bool has_commons() const;
  inline void clear_commons();
  static const int kCommonsFieldNumber = 1;
  inline const ::DataCommon::CommonItemsCPP& commons() const;
  inline ::DataCommon::CommonItemsCPP* mutable_commons();
  inline ::DataCommon::CommonItemsCPP* release_commons();
  inline void set_allocated_commons(::DataCommon::CommonItemsCPP* commons);

  // @@protoc_insertion_point(class_scope:User.PurchaseCoinResp)
 private:
  inline void set_has_commons();
  inline void clear_has_commons();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::DataCommon::CommonItemsCPP* commons_;
  friend void  protobuf_AddDesc_User_2eproto();
  friend void protobuf_AssignDesc_User_2eproto();
  friend void protobuf_ShutdownFile_User_2eproto();

  void InitAsDefaultInstance();
  static PurchaseCoinResp* default_instance_;
};
// -------------------------------------------------------------------

class SignInRewardsReq : public ::google::protobuf::Message {
 public:
  SignInRewardsReq();
  virtual ~SignInRewardsReq();

  SignInRewardsReq(const SignInRewardsReq& from);

  inline SignInRewardsReq& operator=(const SignInRewardsReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SignInRewardsReq& default_instance();

  void Swap(SignInRewardsReq* other);

  // implements Message ----------------------------------------------

  SignInRewardsReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SignInRewardsReq& from);
  void MergeFrom(const SignInRewardsReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 day = 1;
  inline bool has_day() const;
  inline void clear_day();
  static const int kDayFieldNumber = 1;
  inline ::google::protobuf::uint32 day() const;
  inline void set_day(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:User.SignInRewardsReq)
 private:
  inline void set_has_day();
  inline void clear_has_day();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 day_;
  friend void  protobuf_AddDesc_User_2eproto();
  friend void protobuf_AssignDesc_User_2eproto();
  friend void protobuf_ShutdownFile_User_2eproto();

  void InitAsDefaultInstance();
  static SignInRewardsReq* default_instance_;
};
// -------------------------------------------------------------------

class SignInRewardsResp : public ::google::protobuf::Message {
 public:
  SignInRewardsResp();
  virtual ~SignInRewardsResp();

  SignInRewardsResp(const SignInRewardsResp& from);

  inline SignInRewardsResp& operator=(const SignInRewardsResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SignInRewardsResp& default_instance();

  void Swap(SignInRewardsResp* other);

  // implements Message ----------------------------------------------

  SignInRewardsResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SignInRewardsResp& from);
  void MergeFrom(const SignInRewardsResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .DataCommon.CommonItemsCPP commons = 1;
  inline bool has_commons() const;
  inline void clear_commons();
  static const int kCommonsFieldNumber = 1;
  inline const ::DataCommon::CommonItemsCPP& commons() const;
  inline ::DataCommon::CommonItemsCPP* mutable_commons();
  inline ::DataCommon::CommonItemsCPP* release_commons();
  inline void set_allocated_commons(::DataCommon::CommonItemsCPP* commons);

  // required uint32 marks = 2;
  inline bool has_marks() const;
  inline void clear_marks();
  static const int kMarksFieldNumber = 2;
  inline ::google::protobuf::uint32 marks() const;
  inline void set_marks(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:User.SignInRewardsResp)
 private:
  inline void set_has_commons();
  inline void clear_has_commons();
  inline void set_has_marks();
  inline void clear_has_marks();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::DataCommon::CommonItemsCPP* commons_;
  ::google::protobuf::uint32 marks_;
  friend void  protobuf_AddDesc_User_2eproto();
  friend void protobuf_AssignDesc_User_2eproto();
  friend void protobuf_ShutdownFile_User_2eproto();

  void InitAsDefaultInstance();
  static SignInRewardsResp* default_instance_;
};
// -------------------------------------------------------------------

class SetVersion : public ::google::protobuf::Message {
 public:
  SetVersion();
  virtual ~SetVersion();

  SetVersion(const SetVersion& from);

  inline SetVersion& operator=(const SetVersion& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SetVersion& default_instance();

  void Swap(SetVersion* other);

  // implements Message ----------------------------------------------

  SetVersion* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SetVersion& from);
  void MergeFrom(const SetVersion& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 version = 1;
  inline bool has_version() const;
  inline void clear_version();
  static const int kVersionFieldNumber = 1;
  inline ::google::protobuf::uint32 version() const;
  inline void set_version(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:User.SetVersion)
 private:
  inline void set_has_version();
  inline void clear_has_version();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 version_;
  friend void  protobuf_AddDesc_User_2eproto();
  friend void protobuf_AssignDesc_User_2eproto();
  friend void protobuf_ShutdownFile_User_2eproto();

  void InitAsDefaultInstance();
  static SetVersion* default_instance_;
};
// -------------------------------------------------------------------

class SetFlag : public ::google::protobuf::Message {
 public:
  SetFlag();
  virtual ~SetFlag();

  SetFlag(const SetFlag& from);

  inline SetFlag& operator=(const SetFlag& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SetFlag& default_instance();

  void Swap(SetFlag* other);

  // implements Message ----------------------------------------------

  SetFlag* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SetFlag& from);
  void MergeFrom(const SetFlag& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 flagId = 1;
  inline bool has_flagid() const;
  inline void clear_flagid();
  static const int kFlagIdFieldNumber = 1;
  inline ::google::protobuf::uint32 flagid() const;
  inline void set_flagid(::google::protobuf::uint32 value);

  // optional uint32 isCostDimaond = 2;
  inline bool has_iscostdimaond() const;
  inline void clear_iscostdimaond();
  static const int kIsCostDimaondFieldNumber = 2;
  inline ::google::protobuf::uint32 iscostdimaond() const;
  inline void set_iscostdimaond(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:User.SetFlag)
 private:
  inline void set_has_flagid();
  inline void clear_has_flagid();
  inline void set_has_iscostdimaond();
  inline void clear_has_iscostdimaond();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 flagid_;
  ::google::protobuf::uint32 iscostdimaond_;
  friend void  protobuf_AddDesc_User_2eproto();
  friend void protobuf_AssignDesc_User_2eproto();
  friend void protobuf_ShutdownFile_User_2eproto();

  void InitAsDefaultInstance();
  static SetFlag* default_instance_;
};
// -------------------------------------------------------------------

class GetFlagResp : public ::google::protobuf::Message {
 public:
  GetFlagResp();
  virtual ~GetFlagResp();

  GetFlagResp(const GetFlagResp& from);

  inline GetFlagResp& operator=(const GetFlagResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetFlagResp& default_instance();

  void Swap(GetFlagResp* other);

  // implements Message ----------------------------------------------

  GetFlagResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetFlagResp& from);
  void MergeFrom(const GetFlagResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 flag = 1;
  inline bool has_flag() const;
  inline void clear_flag();
  static const int kFlagFieldNumber = 1;
  inline ::google::protobuf::uint32 flag() const;
  inline void set_flag(::google::protobuf::uint32 value);

  // optional .DataCommon.CommonItemsCPP commons = 2;
  inline bool has_commons() const;
  inline void clear_commons();
  static const int kCommonsFieldNumber = 2;
  inline const ::DataCommon::CommonItemsCPP& commons() const;
  inline ::DataCommon::CommonItemsCPP* mutable_commons();
  inline ::DataCommon::CommonItemsCPP* release_commons();
  inline void set_allocated_commons(::DataCommon::CommonItemsCPP* commons);

  // @@protoc_insertion_point(class_scope:User.GetFlagResp)
 private:
  inline void set_has_flag();
  inline void clear_has_flag();
  inline void set_has_commons();
  inline void clear_has_commons();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::DataCommon::CommonItemsCPP* commons_;
  ::google::protobuf::uint32 flag_;
  friend void  protobuf_AddDesc_User_2eproto();
  friend void protobuf_AssignDesc_User_2eproto();
  friend void protobuf_ShutdownFile_User_2eproto();

  void InitAsDefaultInstance();
  static GetFlagResp* default_instance_;
};
// -------------------------------------------------------------------

class ThumbsUpCPP : public ::google::protobuf::Message {
 public:
  ThumbsUpCPP();
  virtual ~ThumbsUpCPP();

  ThumbsUpCPP(const ThumbsUpCPP& from);

  inline ThumbsUpCPP& operator=(const ThumbsUpCPP& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ThumbsUpCPP& default_instance();

  void Swap(ThumbsUpCPP* other);

  // implements Message ----------------------------------------------

  ThumbsUpCPP* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ThumbsUpCPP& from);
  void MergeFrom(const ThumbsUpCPP& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 index = 1;
  inline int index_size() const;
  inline void clear_index();
  static const int kIndexFieldNumber = 1;
  inline ::google::protobuf::uint32 index(int index) const;
  inline void set_index(int index, ::google::protobuf::uint32 value);
  inline void add_index(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      index() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_index();

  // @@protoc_insertion_point(class_scope:User.ThumbsUpCPP)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > index_;
  friend void  protobuf_AddDesc_User_2eproto();
  friend void protobuf_AssignDesc_User_2eproto();
  friend void protobuf_ShutdownFile_User_2eproto();

  void InitAsDefaultInstance();
  static ThumbsUpCPP* default_instance_;
};
// -------------------------------------------------------------------

class GetThumbsUpReq : public ::google::protobuf::Message {
 public:
  GetThumbsUpReq();
  virtual ~GetThumbsUpReq();

  GetThumbsUpReq(const GetThumbsUpReq& from);

  inline GetThumbsUpReq& operator=(const GetThumbsUpReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetThumbsUpReq& default_instance();

  void Swap(GetThumbsUpReq* other);

  // implements Message ----------------------------------------------

  GetThumbsUpReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetThumbsUpReq& from);
  void MergeFrom(const GetThumbsUpReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:User.GetThumbsUpReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_User_2eproto();
  friend void protobuf_AssignDesc_User_2eproto();
  friend void protobuf_ShutdownFile_User_2eproto();

  void InitAsDefaultInstance();
  static GetThumbsUpReq* default_instance_;
};
// -------------------------------------------------------------------

class GetThumbsUpResp : public ::google::protobuf::Message {
 public:
  GetThumbsUpResp();
  virtual ~GetThumbsUpResp();

  GetThumbsUpResp(const GetThumbsUpResp& from);

  inline GetThumbsUpResp& operator=(const GetThumbsUpResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetThumbsUpResp& default_instance();

  void Swap(GetThumbsUpResp* other);

  // implements Message ----------------------------------------------

  GetThumbsUpResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetThumbsUpResp& from);
  void MergeFrom(const GetThumbsUpResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .User.ThumbsUpCPP thumbsup = 1;
  inline bool has_thumbsup() const;
  inline void clear_thumbsup();
  static const int kThumbsupFieldNumber = 1;
  inline const ::User::ThumbsUpCPP& thumbsup() const;
  inline ::User::ThumbsUpCPP* mutable_thumbsup();
  inline ::User::ThumbsUpCPP* release_thumbsup();
  inline void set_allocated_thumbsup(::User::ThumbsUpCPP* thumbsup);

  // @@protoc_insertion_point(class_scope:User.GetThumbsUpResp)
 private:
  inline void set_has_thumbsup();
  inline void clear_has_thumbsup();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::User::ThumbsUpCPP* thumbsup_;
  friend void  protobuf_AddDesc_User_2eproto();
  friend void protobuf_AssignDesc_User_2eproto();
  friend void protobuf_ShutdownFile_User_2eproto();

  void InitAsDefaultInstance();
  static GetThumbsUpResp* default_instance_;
};
// -------------------------------------------------------------------

class RankThumbsUpReq : public ::google::protobuf::Message {
 public:
  RankThumbsUpReq();
  virtual ~RankThumbsUpReq();

  RankThumbsUpReq(const RankThumbsUpReq& from);

  inline RankThumbsUpReq& operator=(const RankThumbsUpReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RankThumbsUpReq& default_instance();

  void Swap(RankThumbsUpReq* other);

  // implements Message ----------------------------------------------

  RankThumbsUpReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RankThumbsUpReq& from);
  void MergeFrom(const RankThumbsUpReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 othuid = 1;
  inline bool has_othuid() const;
  inline void clear_othuid();
  static const int kOthuidFieldNumber = 1;
  inline ::google::protobuf::uint32 othuid() const;
  inline void set_othuid(::google::protobuf::uint32 value);

  // required uint32 index1 = 2;
  inline bool has_index1() const;
  inline void clear_index1();
  static const int kIndex1FieldNumber = 2;
  inline ::google::protobuf::uint32 index1() const;
  inline void set_index1(::google::protobuf::uint32 value);

  // required uint32 index2 = 3;
  inline bool has_index2() const;
  inline void clear_index2();
  static const int kIndex2FieldNumber = 3;
  inline ::google::protobuf::uint32 index2() const;
  inline void set_index2(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:User.RankThumbsUpReq)
 private:
  inline void set_has_othuid();
  inline void clear_has_othuid();
  inline void set_has_index1();
  inline void clear_has_index1();
  inline void set_has_index2();
  inline void clear_has_index2();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 othuid_;
  ::google::protobuf::uint32 index1_;
  ::google::protobuf::uint32 index2_;
  friend void  protobuf_AddDesc_User_2eproto();
  friend void protobuf_AssignDesc_User_2eproto();
  friend void protobuf_ShutdownFile_User_2eproto();

  void InitAsDefaultInstance();
  static RankThumbsUpReq* default_instance_;
};
// -------------------------------------------------------------------

class RankThumbsUpResp : public ::google::protobuf::Message {
 public:
  RankThumbsUpResp();
  virtual ~RankThumbsUpResp();

  RankThumbsUpResp(const RankThumbsUpResp& from);

  inline RankThumbsUpResp& operator=(const RankThumbsUpResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RankThumbsUpResp& default_instance();

  void Swap(RankThumbsUpResp* other);

  // implements Message ----------------------------------------------

  RankThumbsUpResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RankThumbsUpResp& from);
  void MergeFrom(const RankThumbsUpResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .User.ThumbsUpCPP thumbsup = 1;
  inline bool has_thumbsup() const;
  inline void clear_thumbsup();
  static const int kThumbsupFieldNumber = 1;
  inline const ::User::ThumbsUpCPP& thumbsup() const;
  inline ::User::ThumbsUpCPP* mutable_thumbsup();
  inline ::User::ThumbsUpCPP* release_thumbsup();
  inline void set_allocated_thumbsup(::User::ThumbsUpCPP* thumbsup);

  // required .DataCommon.CommonItemsCPP commons = 2;
  inline bool has_commons() const;
  inline void clear_commons();
  static const int kCommonsFieldNumber = 2;
  inline const ::DataCommon::CommonItemsCPP& commons() const;
  inline ::DataCommon::CommonItemsCPP* mutable_commons();
  inline ::DataCommon::CommonItemsCPP* release_commons();
  inline void set_allocated_commons(::DataCommon::CommonItemsCPP* commons);

  // @@protoc_insertion_point(class_scope:User.RankThumbsUpResp)
 private:
  inline void set_has_thumbsup();
  inline void clear_has_thumbsup();
  inline void set_has_commons();
  inline void clear_has_commons();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::User::ThumbsUpCPP* thumbsup_;
  ::DataCommon::CommonItemsCPP* commons_;
  friend void  protobuf_AddDesc_User_2eproto();
  friend void protobuf_AssignDesc_User_2eproto();
  friend void protobuf_ShutdownFile_User_2eproto();

  void InitAsDefaultInstance();
  static RankThumbsUpResp* default_instance_;
};
// -------------------------------------------------------------------

class CSRankThumbsUpReq : public ::google::protobuf::Message {
 public:
  CSRankThumbsUpReq();
  virtual ~CSRankThumbsUpReq();

  CSRankThumbsUpReq(const CSRankThumbsUpReq& from);

  inline CSRankThumbsUpReq& operator=(const CSRankThumbsUpReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSRankThumbsUpReq& default_instance();

  void Swap(CSRankThumbsUpReq* other);

  // implements Message ----------------------------------------------

  CSRankThumbsUpReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSRankThumbsUpReq& from);
  void MergeFrom(const CSRankThumbsUpReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 myuid = 1;
  inline bool has_myuid() const;
  inline void clear_myuid();
  static const int kMyuidFieldNumber = 1;
  inline ::google::protobuf::uint32 myuid() const;
  inline void set_myuid(::google::protobuf::uint32 value);

  // required uint32 othuid = 2;
  inline bool has_othuid() const;
  inline void clear_othuid();
  static const int kOthuidFieldNumber = 2;
  inline ::google::protobuf::uint32 othuid() const;
  inline void set_othuid(::google::protobuf::uint32 value);

  // required uint32 index1 = 3;
  inline bool has_index1() const;
  inline void clear_index1();
  static const int kIndex1FieldNumber = 3;
  inline ::google::protobuf::uint32 index1() const;
  inline void set_index1(::google::protobuf::uint32 value);

  // required uint32 index2 = 4;
  inline bool has_index2() const;
  inline void clear_index2();
  static const int kIndex2FieldNumber = 4;
  inline ::google::protobuf::uint32 index2() const;
  inline void set_index2(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:User.CSRankThumbsUpReq)
 private:
  inline void set_has_myuid();
  inline void clear_has_myuid();
  inline void set_has_othuid();
  inline void clear_has_othuid();
  inline void set_has_index1();
  inline void clear_has_index1();
  inline void set_has_index2();
  inline void clear_has_index2();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 myuid_;
  ::google::protobuf::uint32 othuid_;
  ::google::protobuf::uint32 index1_;
  ::google::protobuf::uint32 index2_;
  friend void  protobuf_AddDesc_User_2eproto();
  friend void protobuf_AssignDesc_User_2eproto();
  friend void protobuf_ShutdownFile_User_2eproto();

  void InitAsDefaultInstance();
  static CSRankThumbsUpReq* default_instance_;
};
// -------------------------------------------------------------------

class CSRankThumbsUpResp : public ::google::protobuf::Message {
 public:
  CSRankThumbsUpResp();
  virtual ~CSRankThumbsUpResp();

  CSRankThumbsUpResp(const CSRankThumbsUpResp& from);

  inline CSRankThumbsUpResp& operator=(const CSRankThumbsUpResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSRankThumbsUpResp& default_instance();

  void Swap(CSRankThumbsUpResp* other);

  // implements Message ----------------------------------------------

  CSRankThumbsUpResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSRankThumbsUpResp& from);
  void MergeFrom(const CSRankThumbsUpResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 myuid = 1;
  inline bool has_myuid() const;
  inline void clear_myuid();
  static const int kMyuidFieldNumber = 1;
  inline ::google::protobuf::uint32 myuid() const;
  inline void set_myuid(::google::protobuf::uint32 value);

  // required uint32 index1 = 2;
  inline bool has_index1() const;
  inline void clear_index1();
  static const int kIndex1FieldNumber = 2;
  inline ::google::protobuf::uint32 index1() const;
  inline void set_index1(::google::protobuf::uint32 value);

  // required uint32 index2 = 3;
  inline bool has_index2() const;
  inline void clear_index2();
  static const int kIndex2FieldNumber = 3;
  inline ::google::protobuf::uint32 index2() const;
  inline void set_index2(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:User.CSRankThumbsUpResp)
 private:
  inline void set_has_myuid();
  inline void clear_has_myuid();
  inline void set_has_index1();
  inline void clear_has_index1();
  inline void set_has_index2();
  inline void clear_has_index2();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 myuid_;
  ::google::protobuf::uint32 index1_;
  ::google::protobuf::uint32 index2_;
  friend void  protobuf_AddDesc_User_2eproto();
  friend void protobuf_AssignDesc_User_2eproto();
  friend void protobuf_ShutdownFile_User_2eproto();

  void InitAsDefaultInstance();
  static CSRankThumbsUpResp* default_instance_;
};
// -------------------------------------------------------------------

class GetWorldChannelHelpCntReq : public ::google::protobuf::Message {
 public:
  GetWorldChannelHelpCntReq();
  virtual ~GetWorldChannelHelpCntReq();

  GetWorldChannelHelpCntReq(const GetWorldChannelHelpCntReq& from);

  inline GetWorldChannelHelpCntReq& operator=(const GetWorldChannelHelpCntReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetWorldChannelHelpCntReq& default_instance();

  void Swap(GetWorldChannelHelpCntReq* other);

  // implements Message ----------------------------------------------

  GetWorldChannelHelpCntReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetWorldChannelHelpCntReq& from);
  void MergeFrom(const GetWorldChannelHelpCntReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:User.GetWorldChannelHelpCntReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_User_2eproto();
  friend void protobuf_AssignDesc_User_2eproto();
  friend void protobuf_ShutdownFile_User_2eproto();

  void InitAsDefaultInstance();
  static GetWorldChannelHelpCntReq* default_instance_;
};
// -------------------------------------------------------------------

class GetWorldChannelHelpCntResp : public ::google::protobuf::Message {
 public:
  GetWorldChannelHelpCntResp();
  virtual ~GetWorldChannelHelpCntResp();

  GetWorldChannelHelpCntResp(const GetWorldChannelHelpCntResp& from);

  inline GetWorldChannelHelpCntResp& operator=(const GetWorldChannelHelpCntResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetWorldChannelHelpCntResp& default_instance();

  void Swap(GetWorldChannelHelpCntResp* other);

  // implements Message ----------------------------------------------

  GetWorldChannelHelpCntResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetWorldChannelHelpCntResp& from);
  void MergeFrom(const GetWorldChannelHelpCntResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 remainCnt = 1;
  inline bool has_remaincnt() const;
  inline void clear_remaincnt();
  static const int kRemainCntFieldNumber = 1;
  inline ::google::protobuf::uint32 remaincnt() const;
  inline void set_remaincnt(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:User.GetWorldChannelHelpCntResp)
 private:
  inline void set_has_remaincnt();
  inline void clear_has_remaincnt();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 remaincnt_;
  friend void  protobuf_AddDesc_User_2eproto();
  friend void protobuf_AssignDesc_User_2eproto();
  friend void protobuf_ShutdownFile_User_2eproto();

  void InitAsDefaultInstance();
  static GetWorldChannelHelpCntResp* default_instance_;
};
// -------------------------------------------------------------------

class WorldChannelHelpReq : public ::google::protobuf::Message {
 public:
  WorldChannelHelpReq();
  virtual ~WorldChannelHelpReq();

  WorldChannelHelpReq(const WorldChannelHelpReq& from);

  inline WorldChannelHelpReq& operator=(const WorldChannelHelpReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WorldChannelHelpReq& default_instance();

  void Swap(WorldChannelHelpReq* other);

  // implements Message ----------------------------------------------

  WorldChannelHelpReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WorldChannelHelpReq& from);
  void MergeFrom(const WorldChannelHelpReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:User.WorldChannelHelpReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_User_2eproto();
  friend void protobuf_AssignDesc_User_2eproto();
  friend void protobuf_ShutdownFile_User_2eproto();

  void InitAsDefaultInstance();
  static WorldChannelHelpReq* default_instance_;
};
// -------------------------------------------------------------------

class WorldChannelHelpResp : public ::google::protobuf::Message {
 public:
  WorldChannelHelpResp();
  virtual ~WorldChannelHelpResp();

  WorldChannelHelpResp(const WorldChannelHelpResp& from);

  inline WorldChannelHelpResp& operator=(const WorldChannelHelpResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WorldChannelHelpResp& default_instance();

  void Swap(WorldChannelHelpResp* other);

  // implements Message ----------------------------------------------

  WorldChannelHelpResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WorldChannelHelpResp& from);
  void MergeFrom(const WorldChannelHelpResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 remainCnt = 1;
  inline bool has_remaincnt() const;
  inline void clear_remaincnt();
  static const int kRemainCntFieldNumber = 1;
  inline ::google::protobuf::uint32 remaincnt() const;
  inline void set_remaincnt(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:User.WorldChannelHelpResp)
 private:
  inline void set_has_remaincnt();
  inline void clear_has_remaincnt();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 remaincnt_;
  friend void  protobuf_AddDesc_User_2eproto();
  friend void protobuf_AssignDesc_User_2eproto();
  friend void protobuf_ShutdownFile_User_2eproto();

  void InitAsDefaultInstance();
  static WorldChannelHelpResp* default_instance_;
};
// -------------------------------------------------------------------

class SysMail : public ::google::protobuf::Message {
 public:
  SysMail();
  virtual ~SysMail();

  SysMail(const SysMail& from);

  inline SysMail& operator=(const SysMail& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SysMail& default_instance();

  void Swap(SysMail* other);

  // implements Message ----------------------------------------------

  SysMail* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SysMail& from);
  void MergeFrom(const SysMail& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 ts = 1;
  inline bool has_ts() const;
  inline void clear_ts();
  static const int kTsFieldNumber = 1;
  inline ::google::protobuf::uint32 ts() const;
  inline void set_ts(::google::protobuf::uint32 value);

  // required uint32 stat = 2;
  inline bool has_stat() const;
  inline void clear_stat();
  static const int kStatFieldNumber = 2;
  inline ::google::protobuf::uint32 stat() const;
  inline void set_stat(::google::protobuf::uint32 value);

  // required bytes sys = 3;
  inline bool has_sys() const;
  inline void clear_sys();
  static const int kSysFieldNumber = 3;
  inline const ::std::string& sys() const;
  inline void set_sys(const ::std::string& value);
  inline void set_sys(const char* value);
  inline void set_sys(const void* value, size_t size);
  inline ::std::string* mutable_sys();
  inline ::std::string* release_sys();
  inline void set_allocated_sys(::std::string* sys);

  // required bytes reward = 4;
  inline bool has_reward() const;
  inline void clear_reward();
  static const int kRewardFieldNumber = 4;
  inline const ::std::string& reward() const;
  inline void set_reward(const ::std::string& value);
  inline void set_reward(const char* value);
  inline void set_reward(const void* value, size_t size);
  inline ::std::string* mutable_reward();
  inline ::std::string* release_reward();
  inline void set_allocated_reward(::std::string* reward);

  // @@protoc_insertion_point(class_scope:User.SysMail)
 private:
  inline void set_has_ts();
  inline void clear_has_ts();
  inline void set_has_stat();
  inline void clear_has_stat();
  inline void set_has_sys();
  inline void clear_has_sys();
  inline void set_has_reward();
  inline void clear_has_reward();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 ts_;
  ::google::protobuf::uint32 stat_;
  ::std::string* sys_;
  ::std::string* reward_;
  friend void  protobuf_AddDesc_User_2eproto();
  friend void protobuf_AssignDesc_User_2eproto();
  friend void protobuf_ShutdownFile_User_2eproto();

  void InitAsDefaultInstance();
  static SysMail* default_instance_;
};
// -------------------------------------------------------------------

class RequestSysMail : public ::google::protobuf::Message {
 public:
  RequestSysMail();
  virtual ~RequestSysMail();

  RequestSysMail(const RequestSysMail& from);

  inline RequestSysMail& operator=(const RequestSysMail& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RequestSysMail& default_instance();

  void Swap(RequestSysMail* other);

  // implements Message ----------------------------------------------

  RequestSysMail* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RequestSysMail& from);
  void MergeFrom(const RequestSysMail& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:User.RequestSysMail)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_User_2eproto();
  friend void protobuf_AssignDesc_User_2eproto();
  friend void protobuf_ShutdownFile_User_2eproto();

  void InitAsDefaultInstance();
  static RequestSysMail* default_instance_;
};
// -------------------------------------------------------------------

class ReplySysMail : public ::google::protobuf::Message {
 public:
  ReplySysMail();
  virtual ~ReplySysMail();

  ReplySysMail(const ReplySysMail& from);

  inline ReplySysMail& operator=(const ReplySysMail& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReplySysMail& default_instance();

  void Swap(ReplySysMail* other);

  // implements Message ----------------------------------------------

  ReplySysMail* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReplySysMail& from);
  void MergeFrom(const ReplySysMail& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .User.SysMail mail = 1;
  inline int mail_size() const;
  inline void clear_mail();
  static const int kMailFieldNumber = 1;
  inline const ::User::SysMail& mail(int index) const;
  inline ::User::SysMail* mutable_mail(int index);
  inline ::User::SysMail* add_mail();
  inline const ::google::protobuf::RepeatedPtrField< ::User::SysMail >&
      mail() const;
  inline ::google::protobuf::RepeatedPtrField< ::User::SysMail >*
      mutable_mail();

  // @@protoc_insertion_point(class_scope:User.ReplySysMail)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::User::SysMail > mail_;
  friend void  protobuf_AddDesc_User_2eproto();
  friend void protobuf_AssignDesc_User_2eproto();
  friend void protobuf_ShutdownFile_User_2eproto();

  void InitAsDefaultInstance();
  static ReplySysMail* default_instance_;
};
// -------------------------------------------------------------------

class RequestMailRead : public ::google::protobuf::Message {
 public:
  RequestMailRead();
  virtual ~RequestMailRead();

  RequestMailRead(const RequestMailRead& from);

  inline RequestMailRead& operator=(const RequestMailRead& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RequestMailRead& default_instance();

  void Swap(RequestMailRead* other);

  // implements Message ----------------------------------------------

  RequestMailRead* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RequestMailRead& from);
  void MergeFrom(const RequestMailRead& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 ts = 1;
  inline bool has_ts() const;
  inline void clear_ts();
  static const int kTsFieldNumber = 1;
  inline ::google::protobuf::uint32 ts() const;
  inline void set_ts(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:User.RequestMailRead)
 private:
  inline void set_has_ts();
  inline void clear_has_ts();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 ts_;
  friend void  protobuf_AddDesc_User_2eproto();
  friend void protobuf_AssignDesc_User_2eproto();
  friend void protobuf_ShutdownFile_User_2eproto();

  void InitAsDefaultInstance();
  static RequestMailRead* default_instance_;
};
// -------------------------------------------------------------------

class ReplyMailRead : public ::google::protobuf::Message {
 public:
  ReplyMailRead();
  virtual ~ReplyMailRead();

  ReplyMailRead(const ReplyMailRead& from);

  inline ReplyMailRead& operator=(const ReplyMailRead& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReplyMailRead& default_instance();

  void Swap(ReplyMailRead* other);

  // implements Message ----------------------------------------------

  ReplyMailRead* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReplyMailRead& from);
  void MergeFrom(const ReplyMailRead& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 ts = 1;
  inline bool has_ts() const;
  inline void clear_ts();
  static const int kTsFieldNumber = 1;
  inline ::google::protobuf::uint32 ts() const;
  inline void set_ts(::google::protobuf::uint32 value);

  // required uint32 stat = 2;
  inline bool has_stat() const;
  inline void clear_stat();
  static const int kStatFieldNumber = 2;
  inline ::google::protobuf::uint32 stat() const;
  inline void set_stat(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:User.ReplyMailRead)
 private:
  inline void set_has_ts();
  inline void clear_has_ts();
  inline void set_has_stat();
  inline void clear_has_stat();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 ts_;
  ::google::protobuf::uint32 stat_;
  friend void  protobuf_AddDesc_User_2eproto();
  friend void protobuf_AssignDesc_User_2eproto();
  friend void protobuf_ShutdownFile_User_2eproto();

  void InitAsDefaultInstance();
  static ReplyMailRead* default_instance_;
};
// -------------------------------------------------------------------

class RequestMailGet : public ::google::protobuf::Message {
 public:
  RequestMailGet();
  virtual ~RequestMailGet();

  RequestMailGet(const RequestMailGet& from);

  inline RequestMailGet& operator=(const RequestMailGet& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RequestMailGet& default_instance();

  void Swap(RequestMailGet* other);

  // implements Message ----------------------------------------------

  RequestMailGet* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RequestMailGet& from);
  void MergeFrom(const RequestMailGet& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 ts = 1;
  inline bool has_ts() const;
  inline void clear_ts();
  static const int kTsFieldNumber = 1;
  inline ::google::protobuf::uint32 ts() const;
  inline void set_ts(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:User.RequestMailGet)
 private:
  inline void set_has_ts();
  inline void clear_has_ts();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 ts_;
  friend void  protobuf_AddDesc_User_2eproto();
  friend void protobuf_AssignDesc_User_2eproto();
  friend void protobuf_ShutdownFile_User_2eproto();

  void InitAsDefaultInstance();
  static RequestMailGet* default_instance_;
};
// -------------------------------------------------------------------

class ReplyMailGet : public ::google::protobuf::Message {
 public:
  ReplyMailGet();
  virtual ~ReplyMailGet();

  ReplyMailGet(const ReplyMailGet& from);

  inline ReplyMailGet& operator=(const ReplyMailGet& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReplyMailGet& default_instance();

  void Swap(ReplyMailGet* other);

  // implements Message ----------------------------------------------

  ReplyMailGet* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReplyMailGet& from);
  void MergeFrom(const ReplyMailGet& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 ts = 1;
  inline bool has_ts() const;
  inline void clear_ts();
  static const int kTsFieldNumber = 1;
  inline ::google::protobuf::uint32 ts() const;
  inline void set_ts(::google::protobuf::uint32 value);

  // required uint32 stat = 2;
  inline bool has_stat() const;
  inline void clear_stat();
  static const int kStatFieldNumber = 2;
  inline ::google::protobuf::uint32 stat() const;
  inline void set_stat(::google::protobuf::uint32 value);

  // optional .ProtoReward.RewardInfo reward = 3;
  inline bool has_reward() const;
  inline void clear_reward();
  static const int kRewardFieldNumber = 3;
  inline const ::ProtoReward::RewardInfo& reward() const;
  inline ::ProtoReward::RewardInfo* mutable_reward();
  inline ::ProtoReward::RewardInfo* release_reward();
  inline void set_allocated_reward(::ProtoReward::RewardInfo* reward);

  // @@protoc_insertion_point(class_scope:User.ReplyMailGet)
 private:
  inline void set_has_ts();
  inline void clear_has_ts();
  inline void set_has_stat();
  inline void clear_has_stat();
  inline void set_has_reward();
  inline void clear_has_reward();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 ts_;
  ::google::protobuf::uint32 stat_;
  ::ProtoReward::RewardInfo* reward_;
  friend void  protobuf_AddDesc_User_2eproto();
  friend void protobuf_AssignDesc_User_2eproto();
  friend void protobuf_ShutdownFile_User_2eproto();

  void InitAsDefaultInstance();
  static ReplyMailGet* default_instance_;
};
// -------------------------------------------------------------------

class RequestMailDel : public ::google::protobuf::Message {
 public:
  RequestMailDel();
  virtual ~RequestMailDel();

  RequestMailDel(const RequestMailDel& from);

  inline RequestMailDel& operator=(const RequestMailDel& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RequestMailDel& default_instance();

  void Swap(RequestMailDel* other);

  // implements Message ----------------------------------------------

  RequestMailDel* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RequestMailDel& from);
  void MergeFrom(const RequestMailDel& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 ts = 1;
  inline bool has_ts() const;
  inline void clear_ts();
  static const int kTsFieldNumber = 1;
  inline ::google::protobuf::uint32 ts() const;
  inline void set_ts(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:User.RequestMailDel)
 private:
  inline void set_has_ts();
  inline void clear_has_ts();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 ts_;
  friend void  protobuf_AddDesc_User_2eproto();
  friend void protobuf_AssignDesc_User_2eproto();
  friend void protobuf_ShutdownFile_User_2eproto();

  void InitAsDefaultInstance();
  static RequestMailDel* default_instance_;
};
// -------------------------------------------------------------------

class RequestMailAllGet : public ::google::protobuf::Message {
 public:
  RequestMailAllGet();
  virtual ~RequestMailAllGet();

  RequestMailAllGet(const RequestMailAllGet& from);

  inline RequestMailAllGet& operator=(const RequestMailAllGet& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RequestMailAllGet& default_instance();

  void Swap(RequestMailAllGet* other);

  // implements Message ----------------------------------------------

  RequestMailAllGet* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RequestMailAllGet& from);
  void MergeFrom(const RequestMailAllGet& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:User.RequestMailAllGet)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_User_2eproto();
  friend void protobuf_AssignDesc_User_2eproto();
  friend void protobuf_ShutdownFile_User_2eproto();

  void InitAsDefaultInstance();
  static RequestMailAllGet* default_instance_;
};
// -------------------------------------------------------------------

class ReplyMailAllGet : public ::google::protobuf::Message {
 public:
  ReplyMailAllGet();
  virtual ~ReplyMailAllGet();

  ReplyMailAllGet(const ReplyMailAllGet& from);

  inline ReplyMailAllGet& operator=(const ReplyMailAllGet& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReplyMailAllGet& default_instance();

  void Swap(ReplyMailAllGet* other);

  // implements Message ----------------------------------------------

  ReplyMailAllGet* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReplyMailAllGet& from);
  void MergeFrom(const ReplyMailAllGet& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .ProtoReward.RewardInfo reward = 1;
  inline bool has_reward() const;
  inline void clear_reward();
  static const int kRewardFieldNumber = 1;
  inline const ::ProtoReward::RewardInfo& reward() const;
  inline ::ProtoReward::RewardInfo* mutable_reward();
  inline ::ProtoReward::RewardInfo* release_reward();
  inline void set_allocated_reward(::ProtoReward::RewardInfo* reward);

  // @@protoc_insertion_point(class_scope:User.ReplyMailAllGet)
 private:
  inline void set_has_reward();
  inline void clear_has_reward();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::ProtoReward::RewardInfo* reward_;
  friend void  protobuf_AddDesc_User_2eproto();
  friend void protobuf_AssignDesc_User_2eproto();
  friend void protobuf_ShutdownFile_User_2eproto();

  void InitAsDefaultInstance();
  static ReplyMailAllGet* default_instance_;
};
// -------------------------------------------------------------------

class RequestMailAllDel : public ::google::protobuf::Message {
 public:
  RequestMailAllDel();
  virtual ~RequestMailAllDel();

  RequestMailAllDel(const RequestMailAllDel& from);

  inline RequestMailAllDel& operator=(const RequestMailAllDel& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RequestMailAllDel& default_instance();

  void Swap(RequestMailAllDel* other);

  // implements Message ----------------------------------------------

  RequestMailAllDel* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RequestMailAllDel& from);
  void MergeFrom(const RequestMailAllDel& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:User.RequestMailAllDel)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_User_2eproto();
  friend void protobuf_AssignDesc_User_2eproto();
  friend void protobuf_ShutdownFile_User_2eproto();

  void InitAsDefaultInstance();
  static RequestMailAllDel* default_instance_;
};
// -------------------------------------------------------------------

class ReqNewMsg : public ::google::protobuf::Message {
 public:
  ReqNewMsg();
  virtual ~ReqNewMsg();

  ReqNewMsg(const ReqNewMsg& from);

  inline ReqNewMsg& operator=(const ReqNewMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqNewMsg& default_instance();

  void Swap(ReqNewMsg* other);

  // implements Message ----------------------------------------------

  ReqNewMsg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqNewMsg& from);
  void MergeFrom(const ReqNewMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:User.ReqNewMsg)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_User_2eproto();
  friend void protobuf_AssignDesc_User_2eproto();
  friend void protobuf_ShutdownFile_User_2eproto();

  void InitAsDefaultInstance();
  static ReqNewMsg* default_instance_;
};
// -------------------------------------------------------------------

class ReplyNewMsg : public ::google::protobuf::Message {
 public:
  ReplyNewMsg();
  virtual ~ReplyNewMsg();

  ReplyNewMsg(const ReplyNewMsg& from);

  inline ReplyNewMsg& operator=(const ReplyNewMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReplyNewMsg& default_instance();

  void Swap(ReplyNewMsg* other);

  // implements Message ----------------------------------------------

  ReplyNewMsg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReplyNewMsg& from);
  void MergeFrom(const ReplyNewMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 type = 1;
  inline int type_size() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 type(int index) const;
  inline void set_type(int index, ::google::protobuf::uint32 value);
  inline void add_type(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      type() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_type();

  // @@protoc_insertion_point(class_scope:User.ReplyNewMsg)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > type_;
  friend void  protobuf_AddDesc_User_2eproto();
  friend void protobuf_AssignDesc_User_2eproto();
  friend void protobuf_ShutdownFile_User_2eproto();

  void InitAsDefaultInstance();
  static ReplyNewMsg* default_instance_;
};
// -------------------------------------------------------------------

class ReqSendMailBC : public ::google::protobuf::Message {
 public:
  ReqSendMailBC();
  virtual ~ReqSendMailBC();

  ReqSendMailBC(const ReqSendMailBC& from);

  inline ReqSendMailBC& operator=(const ReqSendMailBC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqSendMailBC& default_instance();

  void Swap(ReqSendMailBC* other);

  // implements Message ----------------------------------------------

  ReqSendMailBC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqSendMailBC& from);
  void MergeFrom(const ReqSendMailBC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 uid = 1;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 1;
  inline ::google::protobuf::uint32 uid() const;
  inline void set_uid(::google::protobuf::uint32 value);

  // required uint32 ts = 2;
  inline bool has_ts() const;
  inline void clear_ts();
  static const int kTsFieldNumber = 2;
  inline ::google::protobuf::uint32 ts() const;
  inline void set_ts(::google::protobuf::uint32 value);

  // required bytes sys = 3;
  inline bool has_sys() const;
  inline void clear_sys();
  static const int kSysFieldNumber = 3;
  inline const ::std::string& sys() const;
  inline void set_sys(const ::std::string& value);
  inline void set_sys(const char* value);
  inline void set_sys(const void* value, size_t size);
  inline ::std::string* mutable_sys();
  inline ::std::string* release_sys();
  inline void set_allocated_sys(::std::string* sys);

  // required bytes reward = 4;
  inline bool has_reward() const;
  inline void clear_reward();
  static const int kRewardFieldNumber = 4;
  inline const ::std::string& reward() const;
  inline void set_reward(const ::std::string& value);
  inline void set_reward(const char* value);
  inline void set_reward(const void* value, size_t size);
  inline ::std::string* mutable_reward();
  inline ::std::string* release_reward();
  inline void set_allocated_reward(::std::string* reward);

  // @@protoc_insertion_point(class_scope:User.ReqSendMailBC)
 private:
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_ts();
  inline void clear_has_ts();
  inline void set_has_sys();
  inline void clear_has_sys();
  inline void set_has_reward();
  inline void clear_has_reward();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 uid_;
  ::google::protobuf::uint32 ts_;
  ::std::string* sys_;
  ::std::string* reward_;
  friend void  protobuf_AddDesc_User_2eproto();
  friend void protobuf_AssignDesc_User_2eproto();
  friend void protobuf_ShutdownFile_User_2eproto();

  void InitAsDefaultInstance();
  static ReqSendMailBC* default_instance_;
};
// -------------------------------------------------------------------

class PushLoginMsg : public ::google::protobuf::Message {
 public:
  PushLoginMsg();
  virtual ~PushLoginMsg();

  PushLoginMsg(const PushLoginMsg& from);

  inline PushLoginMsg& operator=(const PushLoginMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PushLoginMsg& default_instance();

  void Swap(PushLoginMsg* other);

  // implements Message ----------------------------------------------

  PushLoginMsg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PushLoginMsg& from);
  void MergeFrom(const PushLoginMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 loginTs = 1;
  inline bool has_logints() const;
  inline void clear_logints();
  static const int kLoginTsFieldNumber = 1;
  inline ::google::protobuf::uint32 logints() const;
  inline void set_logints(::google::protobuf::uint32 value);

  // required uint32 uid = 2;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 2;
  inline ::google::protobuf::uint32 uid() const;
  inline void set_uid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:User.PushLoginMsg)
 private:
  inline void set_has_logints();
  inline void clear_has_logints();
  inline void set_has_uid();
  inline void clear_has_uid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 logints_;
  ::google::protobuf::uint32 uid_;
  friend void  protobuf_AddDesc_User_2eproto();
  friend void protobuf_AssignDesc_User_2eproto();
  friend void protobuf_ShutdownFile_User_2eproto();

  void InitAsDefaultInstance();
  static PushLoginMsg* default_instance_;
};
// -------------------------------------------------------------------

class CSPushLoginMsg : public ::google::protobuf::Message {
 public:
  CSPushLoginMsg();
  virtual ~CSPushLoginMsg();

  CSPushLoginMsg(const CSPushLoginMsg& from);

  inline CSPushLoginMsg& operator=(const CSPushLoginMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSPushLoginMsg& default_instance();

  void Swap(CSPushLoginMsg* other);

  // implements Message ----------------------------------------------

  CSPushLoginMsg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSPushLoginMsg& from);
  void MergeFrom(const CSPushLoginMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 inviteUid = 1;
  inline bool has_inviteuid() const;
  inline void clear_inviteuid();
  static const int kInviteUidFieldNumber = 1;
  inline ::google::protobuf::uint32 inviteuid() const;
  inline void set_inviteuid(::google::protobuf::uint32 value);

  // required uint32 loginTs = 2;
  inline bool has_logints() const;
  inline void clear_logints();
  static const int kLoginTsFieldNumber = 2;
  inline ::google::protobuf::uint32 logints() const;
  inline void set_logints(::google::protobuf::uint32 value);

  // required uint32 uid = 3;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 3;
  inline ::google::protobuf::uint32 uid() const;
  inline void set_uid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:User.CSPushLoginMsg)
 private:
  inline void set_has_inviteuid();
  inline void clear_has_inviteuid();
  inline void set_has_logints();
  inline void clear_has_logints();
  inline void set_has_uid();
  inline void clear_has_uid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 inviteuid_;
  ::google::protobuf::uint32 logints_;
  ::google::protobuf::uint32 uid_;
  friend void  protobuf_AddDesc_User_2eproto();
  friend void protobuf_AssignDesc_User_2eproto();
  friend void protobuf_ShutdownFile_User_2eproto();

  void InitAsDefaultInstance();
  static CSPushLoginMsg* default_instance_;
};
// -------------------------------------------------------------------

class ViewAdGetSpeedUpCardReq : public ::google::protobuf::Message {
 public:
  ViewAdGetSpeedUpCardReq();
  virtual ~ViewAdGetSpeedUpCardReq();

  ViewAdGetSpeedUpCardReq(const ViewAdGetSpeedUpCardReq& from);

  inline ViewAdGetSpeedUpCardReq& operator=(const ViewAdGetSpeedUpCardReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ViewAdGetSpeedUpCardReq& default_instance();

  void Swap(ViewAdGetSpeedUpCardReq* other);

  // implements Message ----------------------------------------------

  ViewAdGetSpeedUpCardReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ViewAdGetSpeedUpCardReq& from);
  void MergeFrom(const ViewAdGetSpeedUpCardReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:User.ViewAdGetSpeedUpCardReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_User_2eproto();
  friend void protobuf_AssignDesc_User_2eproto();
  friend void protobuf_ShutdownFile_User_2eproto();

  void InitAsDefaultInstance();
  static ViewAdGetSpeedUpCardReq* default_instance_;
};
// -------------------------------------------------------------------

class ViewAdGetSpeedUpCardResp : public ::google::protobuf::Message {
 public:
  ViewAdGetSpeedUpCardResp();
  virtual ~ViewAdGetSpeedUpCardResp();

  ViewAdGetSpeedUpCardResp(const ViewAdGetSpeedUpCardResp& from);

  inline ViewAdGetSpeedUpCardResp& operator=(const ViewAdGetSpeedUpCardResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ViewAdGetSpeedUpCardResp& default_instance();

  void Swap(ViewAdGetSpeedUpCardResp* other);

  // implements Message ----------------------------------------------

  ViewAdGetSpeedUpCardResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ViewAdGetSpeedUpCardResp& from);
  void MergeFrom(const ViewAdGetSpeedUpCardResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .DataCommon.CommonItemsCPP commons = 1;
  inline bool has_commons() const;
  inline void clear_commons();
  static const int kCommonsFieldNumber = 1;
  inline const ::DataCommon::CommonItemsCPP& commons() const;
  inline ::DataCommon::CommonItemsCPP* mutable_commons();
  inline ::DataCommon::CommonItemsCPP* release_commons();
  inline void set_allocated_commons(::DataCommon::CommonItemsCPP* commons);

  // @@protoc_insertion_point(class_scope:User.ViewAdGetSpeedUpCardResp)
 private:
  inline void set_has_commons();
  inline void clear_has_commons();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::DataCommon::CommonItemsCPP* commons_;
  friend void  protobuf_AddDesc_User_2eproto();
  friend void protobuf_AssignDesc_User_2eproto();
  friend void protobuf_ShutdownFile_User_2eproto();

  void InitAsDefaultInstance();
  static ViewAdGetSpeedUpCardResp* default_instance_;
};
// -------------------------------------------------------------------

class NewUserGuideShareReq : public ::google::protobuf::Message {
 public:
  NewUserGuideShareReq();
  virtual ~NewUserGuideShareReq();

  NewUserGuideShareReq(const NewUserGuideShareReq& from);

  inline NewUserGuideShareReq& operator=(const NewUserGuideShareReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NewUserGuideShareReq& default_instance();

  void Swap(NewUserGuideShareReq* other);

  // implements Message ----------------------------------------------

  NewUserGuideShareReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NewUserGuideShareReq& from);
  void MergeFrom(const NewUserGuideShareReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // required uint32 type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:User.NewUserGuideShareReq)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_type();
  inline void clear_has_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 type_;
  friend void  protobuf_AddDesc_User_2eproto();
  friend void protobuf_AssignDesc_User_2eproto();
  friend void protobuf_ShutdownFile_User_2eproto();

  void InitAsDefaultInstance();
  static NewUserGuideShareReq* default_instance_;
};
// -------------------------------------------------------------------

class NewUserGuideShareResp : public ::google::protobuf::Message {
 public:
  NewUserGuideShareResp();
  virtual ~NewUserGuideShareResp();

  NewUserGuideShareResp(const NewUserGuideShareResp& from);

  inline NewUserGuideShareResp& operator=(const NewUserGuideShareResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NewUserGuideShareResp& default_instance();

  void Swap(NewUserGuideShareResp* other);

  // implements Message ----------------------------------------------

  NewUserGuideShareResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NewUserGuideShareResp& from);
  void MergeFrom(const NewUserGuideShareResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .DataCommon.CommonItemsCPP commons = 1;
  inline bool has_commons() const;
  inline void clear_commons();
  static const int kCommonsFieldNumber = 1;
  inline const ::DataCommon::CommonItemsCPP& commons() const;
  inline ::DataCommon::CommonItemsCPP* mutable_commons();
  inline ::DataCommon::CommonItemsCPP* release_commons();
  inline void set_allocated_commons(::DataCommon::CommonItemsCPP* commons);

  // @@protoc_insertion_point(class_scope:User.NewUserGuideShareResp)
 private:
  inline void set_has_commons();
  inline void clear_has_commons();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::DataCommon::CommonItemsCPP* commons_;
  friend void  protobuf_AddDesc_User_2eproto();
  friend void protobuf_AssignDesc_User_2eproto();
  friend void protobuf_ShutdownFile_User_2eproto();

  void InitAsDefaultInstance();
  static NewUserGuideShareResp* default_instance_;
};
// -------------------------------------------------------------------

class UseCdKeyReq : public ::google::protobuf::Message {
 public:
  UseCdKeyReq();
  virtual ~UseCdKeyReq();

  UseCdKeyReq(const UseCdKeyReq& from);

  inline UseCdKeyReq& operator=(const UseCdKeyReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UseCdKeyReq& default_instance();

  void Swap(UseCdKeyReq* other);

  // implements Message ----------------------------------------------

  UseCdKeyReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UseCdKeyReq& from);
  void MergeFrom(const UseCdKeyReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string number = 1;
  inline bool has_number() const;
  inline void clear_number();
  static const int kNumberFieldNumber = 1;
  inline const ::std::string& number() const;
  inline void set_number(const ::std::string& value);
  inline void set_number(const char* value);
  inline void set_number(const char* value, size_t size);
  inline ::std::string* mutable_number();
  inline ::std::string* release_number();
  inline void set_allocated_number(::std::string* number);

  // @@protoc_insertion_point(class_scope:User.UseCdKeyReq)
 private:
  inline void set_has_number();
  inline void clear_has_number();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* number_;
  friend void  protobuf_AddDesc_User_2eproto();
  friend void protobuf_AssignDesc_User_2eproto();
  friend void protobuf_ShutdownFile_User_2eproto();

  void InitAsDefaultInstance();
  static UseCdKeyReq* default_instance_;
};
// -------------------------------------------------------------------

class UseCdKeyResp : public ::google::protobuf::Message {
 public:
  UseCdKeyResp();
  virtual ~UseCdKeyResp();

  UseCdKeyResp(const UseCdKeyResp& from);

  inline UseCdKeyResp& operator=(const UseCdKeyResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UseCdKeyResp& default_instance();

  void Swap(UseCdKeyResp* other);

  // implements Message ----------------------------------------------

  UseCdKeyResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UseCdKeyResp& from);
  void MergeFrom(const UseCdKeyResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .DataCommon.CommonItemsCPP commons = 1;
  inline bool has_commons() const;
  inline void clear_commons();
  static const int kCommonsFieldNumber = 1;
  inline const ::DataCommon::CommonItemsCPP& commons() const;
  inline ::DataCommon::CommonItemsCPP* mutable_commons();
  inline ::DataCommon::CommonItemsCPP* release_commons();
  inline void set_allocated_commons(::DataCommon::CommonItemsCPP* commons);

  // @@protoc_insertion_point(class_scope:User.UseCdKeyResp)
 private:
  inline void set_has_commons();
  inline void clear_has_commons();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::DataCommon::CommonItemsCPP* commons_;
  friend void  protobuf_AddDesc_User_2eproto();
  friend void protobuf_AssignDesc_User_2eproto();
  friend void protobuf_ShutdownFile_User_2eproto();

  void InitAsDefaultInstance();
  static UseCdKeyResp* default_instance_;
};
// -------------------------------------------------------------------

class HeartBeatReq : public ::google::protobuf::Message {
 public:
  HeartBeatReq();
  virtual ~HeartBeatReq();

  HeartBeatReq(const HeartBeatReq& from);

  inline HeartBeatReq& operator=(const HeartBeatReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HeartBeatReq& default_instance();

  void Swap(HeartBeatReq* other);

  // implements Message ----------------------------------------------

  HeartBeatReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HeartBeatReq& from);
  void MergeFrom(const HeartBeatReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:User.HeartBeatReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_User_2eproto();
  friend void protobuf_AssignDesc_User_2eproto();
  friend void protobuf_ShutdownFile_User_2eproto();

  void InitAsDefaultInstance();
  static HeartBeatReq* default_instance_;
};
// -------------------------------------------------------------------

class HeartBeatResp : public ::google::protobuf::Message {
 public:
  HeartBeatResp();
  virtual ~HeartBeatResp();

  HeartBeatResp(const HeartBeatResp& from);

  inline HeartBeatResp& operator=(const HeartBeatResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HeartBeatResp& default_instance();

  void Swap(HeartBeatResp* other);

  // implements Message ----------------------------------------------

  HeartBeatResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HeartBeatResp& from);
  void MergeFrom(const HeartBeatResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:User.HeartBeatResp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_User_2eproto();
  friend void protobuf_AssignDesc_User_2eproto();
  friend void protobuf_ShutdownFile_User_2eproto();

  void InitAsDefaultInstance();
  static HeartBeatResp* default_instance_;
};
// ===================================================================


// ===================================================================

// Base

// required uint32 uid = 1;
inline bool Base::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Base::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Base::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Base::clear_uid() {
  uid_ = 0u;
  clear_has_uid();
}
inline ::google::protobuf::uint32 Base::uid() const {
  // @@protoc_insertion_point(field_get:User.Base.uid)
  return uid_;
}
inline void Base::set_uid(::google::protobuf::uint32 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:User.Base.uid)
}

// required uint32 registerPlatform = 2;
inline bool Base::has_registerplatform() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Base::set_has_registerplatform() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Base::clear_has_registerplatform() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Base::clear_registerplatform() {
  registerplatform_ = 0u;
  clear_has_registerplatform();
}
inline ::google::protobuf::uint32 Base::registerplatform() const {
  // @@protoc_insertion_point(field_get:User.Base.registerPlatform)
  return registerplatform_;
}
inline void Base::set_registerplatform(::google::protobuf::uint32 value) {
  set_has_registerplatform();
  registerplatform_ = value;
  // @@protoc_insertion_point(field_set:User.Base.registerPlatform)
}

// required uint32 registerTime = 3;
inline bool Base::has_registertime() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Base::set_has_registertime() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Base::clear_has_registertime() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Base::clear_registertime() {
  registertime_ = 0u;
  clear_has_registertime();
}
inline ::google::protobuf::uint32 Base::registertime() const {
  // @@protoc_insertion_point(field_get:User.Base.registerTime)
  return registertime_;
}
inline void Base::set_registertime(::google::protobuf::uint32 value) {
  set_has_registertime();
  registertime_ = value;
  // @@protoc_insertion_point(field_set:User.Base.registerTime)
}

// required uint32 lastLoginPlatform = 4;
inline bool Base::has_lastloginplatform() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Base::set_has_lastloginplatform() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Base::clear_has_lastloginplatform() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Base::clear_lastloginplatform() {
  lastloginplatform_ = 0u;
  clear_has_lastloginplatform();
}
inline ::google::protobuf::uint32 Base::lastloginplatform() const {
  // @@protoc_insertion_point(field_get:User.Base.lastLoginPlatform)
  return lastloginplatform_;
}
inline void Base::set_lastloginplatform(::google::protobuf::uint32 value) {
  set_has_lastloginplatform();
  lastloginplatform_ = value;
  // @@protoc_insertion_point(field_set:User.Base.lastLoginPlatform)
}

// required uint32 lastLoginTime = 5;
inline bool Base::has_lastlogintime() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Base::set_has_lastlogintime() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Base::clear_has_lastlogintime() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Base::clear_lastlogintime() {
  lastlogintime_ = 0u;
  clear_has_lastlogintime();
}
inline ::google::protobuf::uint32 Base::lastlogintime() const {
  // @@protoc_insertion_point(field_get:User.Base.lastLoginTime)
  return lastlogintime_;
}
inline void Base::set_lastlogintime(::google::protobuf::uint32 value) {
  set_has_lastlogintime();
  lastlogintime_ = value;
  // @@protoc_insertion_point(field_set:User.Base.lastLoginTime)
}

// required uint32 loginTimes = 6;
inline bool Base::has_logintimes() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Base::set_has_logintimes() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Base::clear_has_logintimes() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Base::clear_logintimes() {
  logintimes_ = 0u;
  clear_has_logintimes();
}
inline ::google::protobuf::uint32 Base::logintimes() const {
  // @@protoc_insertion_point(field_get:User.Base.loginTimes)
  return logintimes_;
}
inline void Base::set_logintimes(::google::protobuf::uint32 value) {
  set_has_logintimes();
  logintimes_ = value;
  // @@protoc_insertion_point(field_set:User.Base.loginTimes)
}

// required uint32 loginDays = 7;
inline bool Base::has_logindays() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void Base::set_has_logindays() {
  _has_bits_[0] |= 0x00000040u;
}
inline void Base::clear_has_logindays() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void Base::clear_logindays() {
  logindays_ = 0u;
  clear_has_logindays();
}
inline ::google::protobuf::uint32 Base::logindays() const {
  // @@protoc_insertion_point(field_get:User.Base.loginDays)
  return logindays_;
}
inline void Base::set_logindays(::google::protobuf::uint32 value) {
  set_has_logindays();
  logindays_ = value;
  // @@protoc_insertion_point(field_set:User.Base.loginDays)
}

// required uint32 lastActiveTime = 8;
inline bool Base::has_lastactivetime() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void Base::set_has_lastactivetime() {
  _has_bits_[0] |= 0x00000080u;
}
inline void Base::clear_has_lastactivetime() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void Base::clear_lastactivetime() {
  lastactivetime_ = 0u;
  clear_has_lastactivetime();
}
inline ::google::protobuf::uint32 Base::lastactivetime() const {
  // @@protoc_insertion_point(field_get:User.Base.lastActiveTime)
  return lastactivetime_;
}
inline void Base::set_lastactivetime(::google::protobuf::uint32 value) {
  set_has_lastactivetime();
  lastactivetime_ = value;
  // @@protoc_insertion_point(field_set:User.Base.lastActiveTime)
}

// required uint32 lastOffTime = 9;
inline bool Base::has_lastofftime() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void Base::set_has_lastofftime() {
  _has_bits_[0] |= 0x00000100u;
}
inline void Base::clear_has_lastofftime() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void Base::clear_lastofftime() {
  lastofftime_ = 0u;
  clear_has_lastofftime();
}
inline ::google::protobuf::uint32 Base::lastofftime() const {
  // @@protoc_insertion_point(field_get:User.Base.lastOffTime)
  return lastofftime_;
}
inline void Base::set_lastofftime(::google::protobuf::uint32 value) {
  set_has_lastofftime();
  lastofftime_ = value;
  // @@protoc_insertion_point(field_set:User.Base.lastOffTime)
}

// required uint32 forbidTs = 10;
inline bool Base::has_forbidts() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void Base::set_has_forbidts() {
  _has_bits_[0] |= 0x00000200u;
}
inline void Base::clear_has_forbidts() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void Base::clear_forbidts() {
  forbidts_ = 0u;
  clear_has_forbidts();
}
inline ::google::protobuf::uint32 Base::forbidts() const {
  // @@protoc_insertion_point(field_get:User.Base.forbidTs)
  return forbidts_;
}
inline void Base::set_forbidts(::google::protobuf::uint32 value) {
  set_has_forbidts();
  forbidts_ = value;
  // @@protoc_insertion_point(field_set:User.Base.forbidTs)
}

// required bytes forbidReason = 11;
inline bool Base::has_forbidreason() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void Base::set_has_forbidreason() {
  _has_bits_[0] |= 0x00000400u;
}
inline void Base::clear_has_forbidreason() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void Base::clear_forbidreason() {
  if (forbidreason_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    forbidreason_->clear();
  }
  clear_has_forbidreason();
}
inline const ::std::string& Base::forbidreason() const {
  // @@protoc_insertion_point(field_get:User.Base.forbidReason)
  return *forbidreason_;
}
inline void Base::set_forbidreason(const ::std::string& value) {
  set_has_forbidreason();
  if (forbidreason_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    forbidreason_ = new ::std::string;
  }
  forbidreason_->assign(value);
  // @@protoc_insertion_point(field_set:User.Base.forbidReason)
}
inline void Base::set_forbidreason(const char* value) {
  set_has_forbidreason();
  if (forbidreason_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    forbidreason_ = new ::std::string;
  }
  forbidreason_->assign(value);
  // @@protoc_insertion_point(field_set_char:User.Base.forbidReason)
}
inline void Base::set_forbidreason(const void* value, size_t size) {
  set_has_forbidreason();
  if (forbidreason_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    forbidreason_ = new ::std::string;
  }
  forbidreason_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:User.Base.forbidReason)
}
inline ::std::string* Base::mutable_forbidreason() {
  set_has_forbidreason();
  if (forbidreason_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    forbidreason_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:User.Base.forbidReason)
  return forbidreason_;
}
inline ::std::string* Base::release_forbidreason() {
  clear_has_forbidreason();
  if (forbidreason_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = forbidreason_;
    forbidreason_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void Base::set_allocated_forbidreason(::std::string* forbidreason) {
  if (forbidreason_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete forbidreason_;
  }
  if (forbidreason) {
    set_has_forbidreason();
    forbidreason_ = forbidreason;
  } else {
    clear_has_forbidreason();
    forbidreason_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:User.Base.forbidReason)
}

// required uint32 tutorialStage = 12;
inline bool Base::has_tutorialstage() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void Base::set_has_tutorialstage() {
  _has_bits_[0] |= 0x00000800u;
}
inline void Base::clear_has_tutorialstage() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void Base::clear_tutorialstage() {
  tutorialstage_ = 0u;
  clear_has_tutorialstage();
}
inline ::google::protobuf::uint32 Base::tutorialstage() const {
  // @@protoc_insertion_point(field_get:User.Base.tutorialStage)
  return tutorialstage_;
}
inline void Base::set_tutorialstage(::google::protobuf::uint32 value) {
  set_has_tutorialstage();
  tutorialstage_ = value;
  // @@protoc_insertion_point(field_set:User.Base.tutorialStage)
}

// required bytes name = 13;
inline bool Base::has_name() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void Base::set_has_name() {
  _has_bits_[0] |= 0x00001000u;
}
inline void Base::clear_has_name() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void Base::clear_name() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& Base::name() const {
  // @@protoc_insertion_point(field_get:User.Base.name)
  return *name_;
}
inline void Base::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set:User.Base.name)
}
inline void Base::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set_char:User.Base.name)
}
inline void Base::set_name(const void* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:User.Base.name)
}
inline ::std::string* Base::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:User.Base.name)
  return name_;
}
inline ::std::string* Base::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void Base::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:User.Base.name)
}

// required bytes fig = 14;
inline bool Base::has_fig() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void Base::set_has_fig() {
  _has_bits_[0] |= 0x00002000u;
}
inline void Base::clear_has_fig() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void Base::clear_fig() {
  if (fig_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    fig_->clear();
  }
  clear_has_fig();
}
inline const ::std::string& Base::fig() const {
  // @@protoc_insertion_point(field_get:User.Base.fig)
  return *fig_;
}
inline void Base::set_fig(const ::std::string& value) {
  set_has_fig();
  if (fig_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    fig_ = new ::std::string;
  }
  fig_->assign(value);
  // @@protoc_insertion_point(field_set:User.Base.fig)
}
inline void Base::set_fig(const char* value) {
  set_has_fig();
  if (fig_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    fig_ = new ::std::string;
  }
  fig_->assign(value);
  // @@protoc_insertion_point(field_set_char:User.Base.fig)
}
inline void Base::set_fig(const void* value, size_t size) {
  set_has_fig();
  if (fig_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    fig_ = new ::std::string;
  }
  fig_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:User.Base.fig)
}
inline ::std::string* Base::mutable_fig() {
  set_has_fig();
  if (fig_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    fig_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:User.Base.fig)
  return fig_;
}
inline ::std::string* Base::release_fig() {
  clear_has_fig();
  if (fig_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = fig_;
    fig_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void Base::set_allocated_fig(::std::string* fig) {
  if (fig_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete fig_;
  }
  if (fig) {
    set_has_fig();
    fig_ = fig;
  } else {
    clear_has_fig();
    fig_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:User.Base.fig)
}

// required uint64 exp = 15;
inline bool Base::has_exp() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void Base::set_has_exp() {
  _has_bits_[0] |= 0x00004000u;
}
inline void Base::clear_has_exp() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void Base::clear_exp() {
  exp_ = GOOGLE_ULONGLONG(0);
  clear_has_exp();
}
inline ::google::protobuf::uint64 Base::exp() const {
  // @@protoc_insertion_point(field_get:User.Base.exp)
  return exp_;
}
inline void Base::set_exp(::google::protobuf::uint64 value) {
  set_has_exp();
  exp_ = value;
  // @@protoc_insertion_point(field_set:User.Base.exp)
}

// required uint32 level = 16;
inline bool Base::has_level() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void Base::set_has_level() {
  _has_bits_[0] |= 0x00008000u;
}
inline void Base::clear_has_level() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void Base::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 Base::level() const {
  // @@protoc_insertion_point(field_get:User.Base.level)
  return level_;
}
inline void Base::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:User.Base.level)
}

// required uint32 acccharge = 17;
inline bool Base::has_acccharge() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void Base::set_has_acccharge() {
  _has_bits_[0] |= 0x00010000u;
}
inline void Base::clear_has_acccharge() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void Base::clear_acccharge() {
  acccharge_ = 0u;
  clear_has_acccharge();
}
inline ::google::protobuf::uint32 Base::acccharge() const {
  // @@protoc_insertion_point(field_get:User.Base.acccharge)
  return acccharge_;
}
inline void Base::set_acccharge(::google::protobuf::uint32 value) {
  set_has_acccharge();
  acccharge_ = value;
  // @@protoc_insertion_point(field_set:User.Base.acccharge)
}

// required uint32 viplevel = 18;
inline bool Base::has_viplevel() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void Base::set_has_viplevel() {
  _has_bits_[0] |= 0x00020000u;
}
inline void Base::clear_has_viplevel() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void Base::clear_viplevel() {
  viplevel_ = 0u;
  clear_has_viplevel();
}
inline ::google::protobuf::uint32 Base::viplevel() const {
  // @@protoc_insertion_point(field_get:User.Base.viplevel)
  return viplevel_;
}
inline void Base::set_viplevel(::google::protobuf::uint32 value) {
  set_has_viplevel();
  viplevel_ = value;
  // @@protoc_insertion_point(field_set:User.Base.viplevel)
}

// required uint32 cash = 19;
inline bool Base::has_cash() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void Base::set_has_cash() {
  _has_bits_[0] |= 0x00040000u;
}
inline void Base::clear_has_cash() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void Base::clear_cash() {
  cash_ = 0u;
  clear_has_cash();
}
inline ::google::protobuf::uint32 Base::cash() const {
  // @@protoc_insertion_point(field_get:User.Base.cash)
  return cash_;
}
inline void Base::set_cash(::google::protobuf::uint32 value) {
  set_has_cash();
  cash_ = value;
  // @@protoc_insertion_point(field_set:User.Base.cash)
}

// required uint32 coin = 20;
inline bool Base::has_coin() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void Base::set_has_coin() {
  _has_bits_[0] |= 0x00080000u;
}
inline void Base::clear_has_coin() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void Base::clear_coin() {
  coin_ = 0u;
  clear_has_coin();
}
inline ::google::protobuf::uint32 Base::coin() const {
  // @@protoc_insertion_point(field_get:User.Base.coin)
  return coin_;
}
inline void Base::set_coin(::google::protobuf::uint32 value) {
  set_has_coin();
  coin_ = value;
  // @@protoc_insertion_point(field_set:User.Base.coin)
}

// required uint32 firstRecharge = 21;
inline bool Base::has_firstrecharge() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void Base::set_has_firstrecharge() {
  _has_bits_[0] |= 0x00100000u;
}
inline void Base::clear_has_firstrecharge() {
  _has_bits_[0] &= ~0x00100000u;
}
inline void Base::clear_firstrecharge() {
  firstrecharge_ = 0u;
  clear_has_firstrecharge();
}
inline ::google::protobuf::uint32 Base::firstrecharge() const {
  // @@protoc_insertion_point(field_get:User.Base.firstRecharge)
  return firstrecharge_;
}
inline void Base::set_firstrecharge(::google::protobuf::uint32 value) {
  set_has_firstrecharge();
  firstrecharge_ = value;
  // @@protoc_insertion_point(field_set:User.Base.firstRecharge)
}

// required uint32 allianceId = 22;
inline bool Base::has_allianceid() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
inline void Base::set_has_allianceid() {
  _has_bits_[0] |= 0x00200000u;
}
inline void Base::clear_has_allianceid() {
  _has_bits_[0] &= ~0x00200000u;
}
inline void Base::clear_allianceid() {
  allianceid_ = 0u;
  clear_has_allianceid();
}
inline ::google::protobuf::uint32 Base::allianceid() const {
  // @@protoc_insertion_point(field_get:User.Base.allianceId)
  return allianceid_;
}
inline void Base::set_allianceid(::google::protobuf::uint32 value) {
  set_has_allianceid();
  allianceid_ = value;
  // @@protoc_insertion_point(field_set:User.Base.allianceId)
}

// required bytes barrier = 23;
inline bool Base::has_barrier() const {
  return (_has_bits_[0] & 0x00400000u) != 0;
}
inline void Base::set_has_barrier() {
  _has_bits_[0] |= 0x00400000u;
}
inline void Base::clear_has_barrier() {
  _has_bits_[0] &= ~0x00400000u;
}
inline void Base::clear_barrier() {
  if (barrier_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    barrier_->clear();
  }
  clear_has_barrier();
}
inline const ::std::string& Base::barrier() const {
  // @@protoc_insertion_point(field_get:User.Base.barrier)
  return *barrier_;
}
inline void Base::set_barrier(const ::std::string& value) {
  set_has_barrier();
  if (barrier_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    barrier_ = new ::std::string;
  }
  barrier_->assign(value);
  // @@protoc_insertion_point(field_set:User.Base.barrier)
}
inline void Base::set_barrier(const char* value) {
  set_has_barrier();
  if (barrier_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    barrier_ = new ::std::string;
  }
  barrier_->assign(value);
  // @@protoc_insertion_point(field_set_char:User.Base.barrier)
}
inline void Base::set_barrier(const void* value, size_t size) {
  set_has_barrier();
  if (barrier_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    barrier_ = new ::std::string;
  }
  barrier_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:User.Base.barrier)
}
inline ::std::string* Base::mutable_barrier() {
  set_has_barrier();
  if (barrier_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    barrier_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:User.Base.barrier)
  return barrier_;
}
inline ::std::string* Base::release_barrier() {
  clear_has_barrier();
  if (barrier_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = barrier_;
    barrier_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void Base::set_allocated_barrier(::std::string* barrier) {
  if (barrier_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete barrier_;
  }
  if (barrier) {
    set_has_barrier();
    barrier_ = barrier;
  } else {
    clear_has_barrier();
    barrier_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:User.Base.barrier)
}

// required uint32 lastcreateadts = 24;
inline bool Base::has_lastcreateadts() const {
  return (_has_bits_[0] & 0x00800000u) != 0;
}
inline void Base::set_has_lastcreateadts() {
  _has_bits_[0] |= 0x00800000u;
}
inline void Base::clear_has_lastcreateadts() {
  _has_bits_[0] &= ~0x00800000u;
}
inline void Base::clear_lastcreateadts() {
  lastcreateadts_ = 0u;
  clear_has_lastcreateadts();
}
inline ::google::protobuf::uint32 Base::lastcreateadts() const {
  // @@protoc_insertion_point(field_get:User.Base.lastcreateadts)
  return lastcreateadts_;
}
inline void Base::set_lastcreateadts(::google::protobuf::uint32 value) {
  set_has_lastcreateadts();
  lastcreateadts_ = value;
  // @@protoc_insertion_point(field_set:User.Base.lastcreateadts)
}

// required uint32 allianAllowTs = 25;
inline bool Base::has_allianallowts() const {
  return (_has_bits_[0] & 0x01000000u) != 0;
}
inline void Base::set_has_allianallowts() {
  _has_bits_[0] |= 0x01000000u;
}
inline void Base::clear_has_allianallowts() {
  _has_bits_[0] &= ~0x01000000u;
}
inline void Base::clear_allianallowts() {
  allianallowts_ = 0u;
  clear_has_allianallowts();
}
inline ::google::protobuf::uint32 Base::allianallowts() const {
  // @@protoc_insertion_point(field_get:User.Base.allianAllowTs)
  return allianallowts_;
}
inline void Base::set_allianallowts(::google::protobuf::uint32 value) {
  set_has_allianallowts();
  allianallowts_ = value;
  // @@protoc_insertion_point(field_set:User.Base.allianAllowTs)
}

// required uint32 nextDonationTs = 26;
inline bool Base::has_nextdonationts() const {
  return (_has_bits_[0] & 0x02000000u) != 0;
}
inline void Base::set_has_nextdonationts() {
  _has_bits_[0] |= 0x02000000u;
}
inline void Base::clear_has_nextdonationts() {
  _has_bits_[0] &= ~0x02000000u;
}
inline void Base::clear_nextdonationts() {
  nextdonationts_ = 0u;
  clear_has_nextdonationts();
}
inline ::google::protobuf::uint32 Base::nextdonationts() const {
  // @@protoc_insertion_point(field_get:User.Base.nextDonationTs)
  return nextdonationts_;
}
inline void Base::set_nextdonationts(::google::protobuf::uint32 value) {
  set_has_nextdonationts();
  nextdonationts_ = value;
  // @@protoc_insertion_point(field_set:User.Base.nextDonationTs)
}

// required uint32 helptimes = 27;
inline bool Base::has_helptimes() const {
  return (_has_bits_[0] & 0x04000000u) != 0;
}
inline void Base::set_has_helptimes() {
  _has_bits_[0] |= 0x04000000u;
}
inline void Base::clear_has_helptimes() {
  _has_bits_[0] &= ~0x04000000u;
}
inline void Base::clear_helptimes() {
  helptimes_ = 0u;
  clear_has_helptimes();
}
inline ::google::protobuf::uint32 Base::helptimes() const {
  // @@protoc_insertion_point(field_get:User.Base.helptimes)
  return helptimes_;
}
inline void Base::set_helptimes(::google::protobuf::uint32 value) {
  set_has_helptimes();
  helptimes_ = value;
  // @@protoc_insertion_point(field_set:User.Base.helptimes)
}

// required uint32 viprewarddailygiftts = 28;
inline bool Base::has_viprewarddailygiftts() const {
  return (_has_bits_[0] & 0x08000000u) != 0;
}
inline void Base::set_has_viprewarddailygiftts() {
  _has_bits_[0] |= 0x08000000u;
}
inline void Base::clear_has_viprewarddailygiftts() {
  _has_bits_[0] &= ~0x08000000u;
}
inline void Base::clear_viprewarddailygiftts() {
  viprewarddailygiftts_ = 0u;
  clear_has_viprewarddailygiftts();
}
inline ::google::protobuf::uint32 Base::viprewarddailygiftts() const {
  // @@protoc_insertion_point(field_get:User.Base.viprewarddailygiftts)
  return viprewarddailygiftts_;
}
inline void Base::set_viprewarddailygiftts(::google::protobuf::uint32 value) {
  set_has_viprewarddailygiftts();
  viprewarddailygiftts_ = value;
  // @@protoc_insertion_point(field_set:User.Base.viprewarddailygiftts)
}

// required uint32 vipdailyspeedproductcnt = 29;
inline bool Base::has_vipdailyspeedproductcnt() const {
  return (_has_bits_[0] & 0x10000000u) != 0;
}
inline void Base::set_has_vipdailyspeedproductcnt() {
  _has_bits_[0] |= 0x10000000u;
}
inline void Base::clear_has_vipdailyspeedproductcnt() {
  _has_bits_[0] &= ~0x10000000u;
}
inline void Base::clear_vipdailyspeedproductcnt() {
  vipdailyspeedproductcnt_ = 0u;
  clear_has_vipdailyspeedproductcnt();
}
inline ::google::protobuf::uint32 Base::vipdailyspeedproductcnt() const {
  // @@protoc_insertion_point(field_get:User.Base.vipdailyspeedproductcnt)
  return vipdailyspeedproductcnt_;
}
inline void Base::set_vipdailyspeedproductcnt(::google::protobuf::uint32 value) {
  set_has_vipdailyspeedproductcnt();
  vipdailyspeedproductcnt_ = value;
  // @@protoc_insertion_point(field_set:User.Base.vipdailyspeedproductcnt)
}

// required uint32 vipdailyremoveordercdcnt = 30;
inline bool Base::has_vipdailyremoveordercdcnt() const {
  return (_has_bits_[0] & 0x20000000u) != 0;
}
inline void Base::set_has_vipdailyremoveordercdcnt() {
  _has_bits_[0] |= 0x20000000u;
}
inline void Base::clear_has_vipdailyremoveordercdcnt() {
  _has_bits_[0] &= ~0x20000000u;
}
inline void Base::clear_vipdailyremoveordercdcnt() {
  vipdailyremoveordercdcnt_ = 0u;
  clear_has_vipdailyremoveordercdcnt();
}
inline ::google::protobuf::uint32 Base::vipdailyremoveordercdcnt() const {
  // @@protoc_insertion_point(field_get:User.Base.vipdailyremoveordercdcnt)
  return vipdailyremoveordercdcnt_;
}
inline void Base::set_vipdailyremoveordercdcnt(::google::protobuf::uint32 value) {
  set_has_vipdailyremoveordercdcnt();
  vipdailyremoveordercdcnt_ = value;
  // @@protoc_insertion_point(field_set:User.Base.vipdailyremoveordercdcnt)
}

// required uint32 switchStatus = 31;
inline bool Base::has_switchstatus() const {
  return (_has_bits_[0] & 0x40000000u) != 0;
}
inline void Base::set_has_switchstatus() {
  _has_bits_[0] |= 0x40000000u;
}
inline void Base::clear_has_switchstatus() {
  _has_bits_[0] &= ~0x40000000u;
}
inline void Base::clear_switchstatus() {
  switchstatus_ = 0u;
  clear_has_switchstatus();
}
inline ::google::protobuf::uint32 Base::switchstatus() const {
  // @@protoc_insertion_point(field_get:User.Base.switchStatus)
  return switchstatus_;
}
inline void Base::set_switchstatus(::google::protobuf::uint32 value) {
  set_has_switchstatus();
  switchstatus_ = value;
  // @@protoc_insertion_point(field_set:User.Base.switchStatus)
}

// required uint32 sharerewarddailygiftts = 32;
inline bool Base::has_sharerewarddailygiftts() const {
  return (_has_bits_[0] & 0x80000000u) != 0;
}
inline void Base::set_has_sharerewarddailygiftts() {
  _has_bits_[0] |= 0x80000000u;
}
inline void Base::clear_has_sharerewarddailygiftts() {
  _has_bits_[0] &= ~0x80000000u;
}
inline void Base::clear_sharerewarddailygiftts() {
  sharerewarddailygiftts_ = 0u;
  clear_has_sharerewarddailygiftts();
}
inline ::google::protobuf::uint32 Base::sharerewarddailygiftts() const {
  // @@protoc_insertion_point(field_get:User.Base.sharerewarddailygiftts)
  return sharerewarddailygiftts_;
}
inline void Base::set_sharerewarddailygiftts(::google::protobuf::uint32 value) {
  set_has_sharerewarddailygiftts();
  sharerewarddailygiftts_ = value;
  // @@protoc_insertion_point(field_set:User.Base.sharerewarddailygiftts)
}

// required uint32 AssistStartTs = 33;
inline bool Base::has_assiststartts() const {
  return (_has_bits_[1] & 0x00000001u) != 0;
}
inline void Base::set_has_assiststartts() {
  _has_bits_[1] |= 0x00000001u;
}
inline void Base::clear_has_assiststartts() {
  _has_bits_[1] &= ~0x00000001u;
}
inline void Base::clear_assiststartts() {
  assiststartts_ = 0u;
  clear_has_assiststartts();
}
inline ::google::protobuf::uint32 Base::assiststartts() const {
  // @@protoc_insertion_point(field_get:User.Base.AssistStartTs)
  return assiststartts_;
}
inline void Base::set_assiststartts(::google::protobuf::uint32 value) {
  set_has_assiststartts();
  assiststartts_ = value;
  // @@protoc_insertion_point(field_set:User.Base.AssistStartTs)
}

// required uint32 AssistEndTs = 34;
inline bool Base::has_assistendts() const {
  return (_has_bits_[1] & 0x00000002u) != 0;
}
inline void Base::set_has_assistendts() {
  _has_bits_[1] |= 0x00000002u;
}
inline void Base::clear_has_assistendts() {
  _has_bits_[1] &= ~0x00000002u;
}
inline void Base::clear_assistendts() {
  assistendts_ = 0u;
  clear_has_assistendts();
}
inline ::google::protobuf::uint32 Base::assistendts() const {
  // @@protoc_insertion_point(field_get:User.Base.AssistEndTs)
  return assistendts_;
}
inline void Base::set_assistendts(::google::protobuf::uint32 value) {
  set_has_assistendts();
  assistendts_ = value;
  // @@protoc_insertion_point(field_set:User.Base.AssistEndTs)
}

// required bytes expandmap1 = 35;
inline bool Base::has_expandmap1() const {
  return (_has_bits_[1] & 0x00000004u) != 0;
}
inline void Base::set_has_expandmap1() {
  _has_bits_[1] |= 0x00000004u;
}
inline void Base::clear_has_expandmap1() {
  _has_bits_[1] &= ~0x00000004u;
}
inline void Base::clear_expandmap1() {
  if (expandmap1_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    expandmap1_->clear();
  }
  clear_has_expandmap1();
}
inline const ::std::string& Base::expandmap1() const {
  // @@protoc_insertion_point(field_get:User.Base.expandmap1)
  return *expandmap1_;
}
inline void Base::set_expandmap1(const ::std::string& value) {
  set_has_expandmap1();
  if (expandmap1_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    expandmap1_ = new ::std::string;
  }
  expandmap1_->assign(value);
  // @@protoc_insertion_point(field_set:User.Base.expandmap1)
}
inline void Base::set_expandmap1(const char* value) {
  set_has_expandmap1();
  if (expandmap1_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    expandmap1_ = new ::std::string;
  }
  expandmap1_->assign(value);
  // @@protoc_insertion_point(field_set_char:User.Base.expandmap1)
}
inline void Base::set_expandmap1(const void* value, size_t size) {
  set_has_expandmap1();
  if (expandmap1_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    expandmap1_ = new ::std::string;
  }
  expandmap1_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:User.Base.expandmap1)
}
inline ::std::string* Base::mutable_expandmap1() {
  set_has_expandmap1();
  if (expandmap1_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    expandmap1_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:User.Base.expandmap1)
  return expandmap1_;
}
inline ::std::string* Base::release_expandmap1() {
  clear_has_expandmap1();
  if (expandmap1_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = expandmap1_;
    expandmap1_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void Base::set_allocated_expandmap1(::std::string* expandmap1) {
  if (expandmap1_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete expandmap1_;
  }
  if (expandmap1) {
    set_has_expandmap1();
    expandmap1_ = expandmap1;
  } else {
    clear_has_expandmap1();
    expandmap1_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:User.Base.expandmap1)
}

// required bytes expandmap2 = 36;
inline bool Base::has_expandmap2() const {
  return (_has_bits_[1] & 0x00000008u) != 0;
}
inline void Base::set_has_expandmap2() {
  _has_bits_[1] |= 0x00000008u;
}
inline void Base::clear_has_expandmap2() {
  _has_bits_[1] &= ~0x00000008u;
}
inline void Base::clear_expandmap2() {
  if (expandmap2_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    expandmap2_->clear();
  }
  clear_has_expandmap2();
}
inline const ::std::string& Base::expandmap2() const {
  // @@protoc_insertion_point(field_get:User.Base.expandmap2)
  return *expandmap2_;
}
inline void Base::set_expandmap2(const ::std::string& value) {
  set_has_expandmap2();
  if (expandmap2_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    expandmap2_ = new ::std::string;
  }
  expandmap2_->assign(value);
  // @@protoc_insertion_point(field_set:User.Base.expandmap2)
}
inline void Base::set_expandmap2(const char* value) {
  set_has_expandmap2();
  if (expandmap2_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    expandmap2_ = new ::std::string;
  }
  expandmap2_->assign(value);
  // @@protoc_insertion_point(field_set_char:User.Base.expandmap2)
}
inline void Base::set_expandmap2(const void* value, size_t size) {
  set_has_expandmap2();
  if (expandmap2_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    expandmap2_ = new ::std::string;
  }
  expandmap2_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:User.Base.expandmap2)
}
inline ::std::string* Base::mutable_expandmap2() {
  set_has_expandmap2();
  if (expandmap2_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    expandmap2_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:User.Base.expandmap2)
  return expandmap2_;
}
inline ::std::string* Base::release_expandmap2() {
  clear_has_expandmap2();
  if (expandmap2_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = expandmap2_;
    expandmap2_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void Base::set_allocated_expandmap2(::std::string* expandmap2) {
  if (expandmap2_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete expandmap2_;
  }
  if (expandmap2) {
    set_has_expandmap2();
    expandmap2_ = expandmap2;
  } else {
    clear_has_expandmap2();
    expandmap2_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:User.Base.expandmap2)
}

// required bytes expandmap3 = 37;
inline bool Base::has_expandmap3() const {
  return (_has_bits_[1] & 0x00000010u) != 0;
}
inline void Base::set_has_expandmap3() {
  _has_bits_[1] |= 0x00000010u;
}
inline void Base::clear_has_expandmap3() {
  _has_bits_[1] &= ~0x00000010u;
}
inline void Base::clear_expandmap3() {
  if (expandmap3_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    expandmap3_->clear();
  }
  clear_has_expandmap3();
}
inline const ::std::string& Base::expandmap3() const {
  // @@protoc_insertion_point(field_get:User.Base.expandmap3)
  return *expandmap3_;
}
inline void Base::set_expandmap3(const ::std::string& value) {
  set_has_expandmap3();
  if (expandmap3_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    expandmap3_ = new ::std::string;
  }
  expandmap3_->assign(value);
  // @@protoc_insertion_point(field_set:User.Base.expandmap3)
}
inline void Base::set_expandmap3(const char* value) {
  set_has_expandmap3();
  if (expandmap3_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    expandmap3_ = new ::std::string;
  }
  expandmap3_->assign(value);
  // @@protoc_insertion_point(field_set_char:User.Base.expandmap3)
}
inline void Base::set_expandmap3(const void* value, size_t size) {
  set_has_expandmap3();
  if (expandmap3_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    expandmap3_ = new ::std::string;
  }
  expandmap3_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:User.Base.expandmap3)
}
inline ::std::string* Base::mutable_expandmap3() {
  set_has_expandmap3();
  if (expandmap3_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    expandmap3_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:User.Base.expandmap3)
  return expandmap3_;
}
inline ::std::string* Base::release_expandmap3() {
  clear_has_expandmap3();
  if (expandmap3_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = expandmap3_;
    expandmap3_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void Base::set_allocated_expandmap3(::std::string* expandmap3) {
  if (expandmap3_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete expandmap3_;
  }
  if (expandmap3) {
    set_has_expandmap3();
    expandmap3_ = expandmap3;
  } else {
    clear_has_expandmap3();
    expandmap3_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:User.Base.expandmap3)
}

// required uint32 nextrandomboxrefreshts = 38;
inline bool Base::has_nextrandomboxrefreshts() const {
  return (_has_bits_[1] & 0x00000020u) != 0;
}
inline void Base::set_has_nextrandomboxrefreshts() {
  _has_bits_[1] |= 0x00000020u;
}
inline void Base::clear_has_nextrandomboxrefreshts() {
  _has_bits_[1] &= ~0x00000020u;
}
inline void Base::clear_nextrandomboxrefreshts() {
  nextrandomboxrefreshts_ = 0u;
  clear_has_nextrandomboxrefreshts();
}
inline ::google::protobuf::uint32 Base::nextrandomboxrefreshts() const {
  // @@protoc_insertion_point(field_get:User.Base.nextrandomboxrefreshts)
  return nextrandomboxrefreshts_;
}
inline void Base::set_nextrandomboxrefreshts(::google::protobuf::uint32 value) {
  set_has_nextrandomboxrefreshts();
  nextrandomboxrefreshts_ = value;
  // @@protoc_insertion_point(field_set:User.Base.nextrandomboxrefreshts)
}

// required uint32 flag = 39;
inline bool Base::has_flag() const {
  return (_has_bits_[1] & 0x00000040u) != 0;
}
inline void Base::set_has_flag() {
  _has_bits_[1] |= 0x00000040u;
}
inline void Base::clear_has_flag() {
  _has_bits_[1] &= ~0x00000040u;
}
inline void Base::clear_flag() {
  flag_ = 0u;
  clear_has_flag();
}
inline ::google::protobuf::uint32 Base::flag() const {
  // @@protoc_insertion_point(field_get:User.Base.flag)
  return flag_;
}
inline void Base::set_flag(::google::protobuf::uint32 value) {
  set_has_flag();
  flag_ = value;
  // @@protoc_insertion_point(field_set:User.Base.flag)
}

// required uint32 friendlyvalue = 40;
inline bool Base::has_friendlyvalue() const {
  return (_has_bits_[1] & 0x00000080u) != 0;
}
inline void Base::set_has_friendlyvalue() {
  _has_bits_[1] |= 0x00000080u;
}
inline void Base::clear_has_friendlyvalue() {
  _has_bits_[1] &= ~0x00000080u;
}
inline void Base::clear_friendlyvalue() {
  friendlyvalue_ = 0u;
  clear_has_friendlyvalue();
}
inline ::google::protobuf::uint32 Base::friendlyvalue() const {
  // @@protoc_insertion_point(field_get:User.Base.friendlyvalue)
  return friendlyvalue_;
}
inline void Base::set_friendlyvalue(::google::protobuf::uint32 value) {
  set_has_friendlyvalue();
  friendlyvalue_ = value;
  // @@protoc_insertion_point(field_set:User.Base.friendlyvalue)
}

// optional uint32 version = 41;
inline bool Base::has_version() const {
  return (_has_bits_[1] & 0x00000100u) != 0;
}
inline void Base::set_has_version() {
  _has_bits_[1] |= 0x00000100u;
}
inline void Base::clear_has_version() {
  _has_bits_[1] &= ~0x00000100u;
}
inline void Base::clear_version() {
  version_ = 0u;
  clear_has_version();
}
inline ::google::protobuf::uint32 Base::version() const {
  // @@protoc_insertion_point(field_get:User.Base.version)
  return version_;
}
inline void Base::set_version(::google::protobuf::uint32 value) {
  set_has_version();
  version_ = value;
  // @@protoc_insertion_point(field_set:User.Base.version)
}

// optional uint32 accthumbsup = 42;
inline bool Base::has_accthumbsup() const {
  return (_has_bits_[1] & 0x00000200u) != 0;
}
inline void Base::set_has_accthumbsup() {
  _has_bits_[1] |= 0x00000200u;
}
inline void Base::clear_has_accthumbsup() {
  _has_bits_[1] &= ~0x00000200u;
}
inline void Base::clear_accthumbsup() {
  accthumbsup_ = 0u;
  clear_has_accthumbsup();
}
inline ::google::protobuf::uint32 Base::accthumbsup() const {
  // @@protoc_insertion_point(field_get:User.Base.accthumbsup)
  return accthumbsup_;
}
inline void Base::set_accthumbsup(::google::protobuf::uint32 value) {
  set_has_accthumbsup();
  accthumbsup_ = value;
  // @@protoc_insertion_point(field_set:User.Base.accthumbsup)
}

// optional uint32 isUnlockPetResidence = 43;
inline bool Base::has_isunlockpetresidence() const {
  return (_has_bits_[1] & 0x00000400u) != 0;
}
inline void Base::set_has_isunlockpetresidence() {
  _has_bits_[1] |= 0x00000400u;
}
inline void Base::clear_has_isunlockpetresidence() {
  _has_bits_[1] &= ~0x00000400u;
}
inline void Base::clear_isunlockpetresidence() {
  isunlockpetresidence_ = 0u;
  clear_has_isunlockpetresidence();
}
inline ::google::protobuf::uint32 Base::isunlockpetresidence() const {
  // @@protoc_insertion_point(field_get:User.Base.isUnlockPetResidence)
  return isunlockpetresidence_;
}
inline void Base::set_isunlockpetresidence(::google::protobuf::uint32 value) {
  set_has_isunlockpetresidence();
  isunlockpetresidence_ = value;
  // @@protoc_insertion_point(field_set:User.Base.isUnlockPetResidence)
}

// optional bytes wxChannel = 44;
inline bool Base::has_wxchannel() const {
  return (_has_bits_[1] & 0x00000800u) != 0;
}
inline void Base::set_has_wxchannel() {
  _has_bits_[1] |= 0x00000800u;
}
inline void Base::clear_has_wxchannel() {
  _has_bits_[1] &= ~0x00000800u;
}
inline void Base::clear_wxchannel() {
  if (wxchannel_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    wxchannel_->clear();
  }
  clear_has_wxchannel();
}
inline const ::std::string& Base::wxchannel() const {
  // @@protoc_insertion_point(field_get:User.Base.wxChannel)
  return *wxchannel_;
}
inline void Base::set_wxchannel(const ::std::string& value) {
  set_has_wxchannel();
  if (wxchannel_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    wxchannel_ = new ::std::string;
  }
  wxchannel_->assign(value);
  // @@protoc_insertion_point(field_set:User.Base.wxChannel)
}
inline void Base::set_wxchannel(const char* value) {
  set_has_wxchannel();
  if (wxchannel_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    wxchannel_ = new ::std::string;
  }
  wxchannel_->assign(value);
  // @@protoc_insertion_point(field_set_char:User.Base.wxChannel)
}
inline void Base::set_wxchannel(const void* value, size_t size) {
  set_has_wxchannel();
  if (wxchannel_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    wxchannel_ = new ::std::string;
  }
  wxchannel_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:User.Base.wxChannel)
}
inline ::std::string* Base::mutable_wxchannel() {
  set_has_wxchannel();
  if (wxchannel_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    wxchannel_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:User.Base.wxChannel)
  return wxchannel_;
}
inline ::std::string* Base::release_wxchannel() {
  clear_has_wxchannel();
  if (wxchannel_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = wxchannel_;
    wxchannel_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void Base::set_allocated_wxchannel(::std::string* wxchannel) {
  if (wxchannel_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete wxchannel_;
  }
  if (wxchannel) {
    set_has_wxchannel();
    wxchannel_ = wxchannel;
  } else {
    clear_has_wxchannel();
    wxchannel_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:User.Base.wxChannel)
}

// -------------------------------------------------------------------

// ActivityItem

// required uint32 id = 1;
inline bool ActivityItem::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ActivityItem::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ActivityItem::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ActivityItem::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 ActivityItem::id() const {
  // @@protoc_insertion_point(field_get:User.ActivityItem.id)
  return id_;
}
inline void ActivityItem::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:User.ActivityItem.id)
}

// required uint32 bts = 2;
inline bool ActivityItem::has_bts() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ActivityItem::set_has_bts() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ActivityItem::clear_has_bts() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ActivityItem::clear_bts() {
  bts_ = 0u;
  clear_has_bts();
}
inline ::google::protobuf::uint32 ActivityItem::bts() const {
  // @@protoc_insertion_point(field_get:User.ActivityItem.bts)
  return bts_;
}
inline void ActivityItem::set_bts(::google::protobuf::uint32 value) {
  set_has_bts();
  bts_ = value;
  // @@protoc_insertion_point(field_set:User.ActivityItem.bts)
}

// required uint32 ets = 3;
inline bool ActivityItem::has_ets() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ActivityItem::set_has_ets() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ActivityItem::clear_has_ets() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ActivityItem::clear_ets() {
  ets_ = 0u;
  clear_has_ets();
}
inline ::google::protobuf::uint32 ActivityItem::ets() const {
  // @@protoc_insertion_point(field_get:User.ActivityItem.ets)
  return ets_;
}
inline void ActivityItem::set_ets(::google::protobuf::uint32 value) {
  set_has_ets();
  ets_ = value;
  // @@protoc_insertion_point(field_set:User.ActivityItem.ets)
}

// required uint32 ver = 4;
inline bool ActivityItem::has_ver() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ActivityItem::set_has_ver() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ActivityItem::clear_has_ver() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ActivityItem::clear_ver() {
  ver_ = 0u;
  clear_has_ver();
}
inline ::google::protobuf::uint32 ActivityItem::ver() const {
  // @@protoc_insertion_point(field_get:User.ActivityItem.ver)
  return ver_;
}
inline void ActivityItem::set_ver(::google::protobuf::uint32 value) {
  set_has_ver();
  ver_ = value;
  // @@protoc_insertion_point(field_set:User.ActivityItem.ver)
}

// -------------------------------------------------------------------

// Activity

// repeated .User.ActivityItem act = 1;
inline int Activity::act_size() const {
  return act_.size();
}
inline void Activity::clear_act() {
  act_.Clear();
}
inline const ::User::ActivityItem& Activity::act(int index) const {
  // @@protoc_insertion_point(field_get:User.Activity.act)
  return act_.Get(index);
}
inline ::User::ActivityItem* Activity::mutable_act(int index) {
  // @@protoc_insertion_point(field_mutable:User.Activity.act)
  return act_.Mutable(index);
}
inline ::User::ActivityItem* Activity::add_act() {
  // @@protoc_insertion_point(field_add:User.Activity.act)
  return act_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::User::ActivityItem >&
Activity::act() const {
  // @@protoc_insertion_point(field_list:User.Activity.act)
  return act_;
}
inline ::google::protobuf::RepeatedPtrField< ::User::ActivityItem >*
Activity::mutable_act() {
  // @@protoc_insertion_point(field_mutable_list:User.Activity.act)
  return &act_;
}

// -------------------------------------------------------------------

// User

// required .User.Base base = 1;
inline bool User::has_base() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void User::set_has_base() {
  _has_bits_[0] |= 0x00000001u;
}
inline void User::clear_has_base() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void User::clear_base() {
  if (base_ != NULL) base_->::User::Base::Clear();
  clear_has_base();
}
inline const ::User::Base& User::base() const {
  // @@protoc_insertion_point(field_get:User.User.base)
  return base_ != NULL ? *base_ : *default_instance_->base_;
}
inline ::User::Base* User::mutable_base() {
  set_has_base();
  if (base_ == NULL) base_ = new ::User::Base;
  // @@protoc_insertion_point(field_mutable:User.User.base)
  return base_;
}
inline ::User::Base* User::release_base() {
  clear_has_base();
  ::User::Base* temp = base_;
  base_ = NULL;
  return temp;
}
inline void User::set_allocated_base(::User::Base* base) {
  delete base_;
  base_ = base;
  if (base) {
    set_has_base();
  } else {
    clear_has_base();
  }
  // @@protoc_insertion_point(field_set_allocated:User.User.base)
}

// required uint32 ts = 2;
inline bool User::has_ts() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void User::set_has_ts() {
  _has_bits_[0] |= 0x00000002u;
}
inline void User::clear_has_ts() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void User::clear_ts() {
  ts_ = 0u;
  clear_has_ts();
}
inline ::google::protobuf::uint32 User::ts() const {
  // @@protoc_insertion_point(field_get:User.User.ts)
  return ts_;
}
inline void User::set_ts(::google::protobuf::uint32 value) {
  set_has_ts();
  ts_ = value;
  // @@protoc_insertion_point(field_set:User.User.ts)
}

// required .User.Activity activity = 3;
inline bool User::has_activity() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void User::set_has_activity() {
  _has_bits_[0] |= 0x00000004u;
}
inline void User::clear_has_activity() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void User::clear_activity() {
  if (activity_ != NULL) activity_->::User::Activity::Clear();
  clear_has_activity();
}
inline const ::User::Activity& User::activity() const {
  // @@protoc_insertion_point(field_get:User.User.activity)
  return activity_ != NULL ? *activity_ : *default_instance_->activity_;
}
inline ::User::Activity* User::mutable_activity() {
  set_has_activity();
  if (activity_ == NULL) activity_ = new ::User::Activity;
  // @@protoc_insertion_point(field_mutable:User.User.activity)
  return activity_;
}
inline ::User::Activity* User::release_activity() {
  clear_has_activity();
  ::User::Activity* temp = activity_;
  activity_ = NULL;
  return temp;
}
inline void User::set_allocated_activity(::User::Activity* activity) {
  delete activity_;
  activity_ = activity;
  if (activity) {
    set_has_activity();
  } else {
    clear_has_activity();
  }
  // @@protoc_insertion_point(field_set_allocated:User.User.activity)
}

// optional .ProtoNotify.NotifyItemCPPAll notifies = 4;
inline bool User::has_notifies() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void User::set_has_notifies() {
  _has_bits_[0] |= 0x00000008u;
}
inline void User::clear_has_notifies() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void User::clear_notifies() {
  if (notifies_ != NULL) notifies_->::ProtoNotify::NotifyItemCPPAll::Clear();
  clear_has_notifies();
}
inline const ::ProtoNotify::NotifyItemCPPAll& User::notifies() const {
  // @@protoc_insertion_point(field_get:User.User.notifies)
  return notifies_ != NULL ? *notifies_ : *default_instance_->notifies_;
}
inline ::ProtoNotify::NotifyItemCPPAll* User::mutable_notifies() {
  set_has_notifies();
  if (notifies_ == NULL) notifies_ = new ::ProtoNotify::NotifyItemCPPAll;
  // @@protoc_insertion_point(field_mutable:User.User.notifies)
  return notifies_;
}
inline ::ProtoNotify::NotifyItemCPPAll* User::release_notifies() {
  clear_has_notifies();
  ::ProtoNotify::NotifyItemCPPAll* temp = notifies_;
  notifies_ = NULL;
  return temp;
}
inline void User::set_allocated_notifies(::ProtoNotify::NotifyItemCPPAll* notifies) {
  delete notifies_;
  notifies_ = notifies;
  if (notifies) {
    set_has_notifies();
  } else {
    clear_has_notifies();
  }
  // @@protoc_insertion_point(field_set_allocated:User.User.notifies)
}

// required .User.AccumulateCharge charges = 5;
inline bool User::has_charges() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void User::set_has_charges() {
  _has_bits_[0] |= 0x00000010u;
}
inline void User::clear_has_charges() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void User::clear_charges() {
  if (charges_ != NULL) charges_->::User::AccumulateCharge::Clear();
  clear_has_charges();
}
inline const ::User::AccumulateCharge& User::charges() const {
  // @@protoc_insertion_point(field_get:User.User.charges)
  return charges_ != NULL ? *charges_ : *default_instance_->charges_;
}
inline ::User::AccumulateCharge* User::mutable_charges() {
  set_has_charges();
  if (charges_ == NULL) charges_ = new ::User::AccumulateCharge;
  // @@protoc_insertion_point(field_mutable:User.User.charges)
  return charges_;
}
inline ::User::AccumulateCharge* User::release_charges() {
  clear_has_charges();
  ::User::AccumulateCharge* temp = charges_;
  charges_ = NULL;
  return temp;
}
inline void User::set_allocated_charges(::User::AccumulateCharge* charges) {
  delete charges_;
  charges_ = charges;
  if (charges) {
    set_has_charges();
  } else {
    clear_has_charges();
  }
  // @@protoc_insertion_point(field_set_allocated:User.User.charges)
}

// required .ProtoActivity.GameAcitivityAllCPP gameactivity = 6;
inline bool User::has_gameactivity() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void User::set_has_gameactivity() {
  _has_bits_[0] |= 0x00000020u;
}
inline void User::clear_has_gameactivity() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void User::clear_gameactivity() {
  if (gameactivity_ != NULL) gameactivity_->::ProtoActivity::GameAcitivityAllCPP::Clear();
  clear_has_gameactivity();
}
inline const ::ProtoActivity::GameAcitivityAllCPP& User::gameactivity() const {
  // @@protoc_insertion_point(field_get:User.User.gameactivity)
  return gameactivity_ != NULL ? *gameactivity_ : *default_instance_->gameactivity_;
}
inline ::ProtoActivity::GameAcitivityAllCPP* User::mutable_gameactivity() {
  set_has_gameactivity();
  if (gameactivity_ == NULL) gameactivity_ = new ::ProtoActivity::GameAcitivityAllCPP;
  // @@protoc_insertion_point(field_mutable:User.User.gameactivity)
  return gameactivity_;
}
inline ::ProtoActivity::GameAcitivityAllCPP* User::release_gameactivity() {
  clear_has_gameactivity();
  ::ProtoActivity::GameAcitivityAllCPP* temp = gameactivity_;
  gameactivity_ = NULL;
  return temp;
}
inline void User::set_allocated_gameactivity(::ProtoActivity::GameAcitivityAllCPP* gameactivity) {
  delete gameactivity_;
  gameactivity_ = gameactivity;
  if (gameactivity) {
    set_has_gameactivity();
  } else {
    clear_has_gameactivity();
  }
  // @@protoc_insertion_point(field_set_allocated:User.User.gameactivity)
}

// repeated .DataCommon.PropsItemCPP item = 7;
inline int User::item_size() const {
  return item_.size();
}
inline void User::clear_item() {
  item_.Clear();
}
inline const ::DataCommon::PropsItemCPP& User::item(int index) const {
  // @@protoc_insertion_point(field_get:User.User.item)
  return item_.Get(index);
}
inline ::DataCommon::PropsItemCPP* User::mutable_item(int index) {
  // @@protoc_insertion_point(field_mutable:User.User.item)
  return item_.Mutable(index);
}
inline ::DataCommon::PropsItemCPP* User::add_item() {
  // @@protoc_insertion_point(field_add:User.User.item)
  return item_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::DataCommon::PropsItemCPP >&
User::item() const {
  // @@protoc_insertion_point(field_list:User.User.item)
  return item_;
}
inline ::google::protobuf::RepeatedPtrField< ::DataCommon::PropsItemCPP >*
User::mutable_item() {
  // @@protoc_insertion_point(field_mutable_list:User.User.item)
  return &item_;
}

// repeated .ProtoBuilding.BuildingCPP builds = 8;
inline int User::builds_size() const {
  return builds_.size();
}
inline void User::clear_builds() {
  builds_.Clear();
}
inline const ::ProtoBuilding::BuildingCPP& User::builds(int index) const {
  // @@protoc_insertion_point(field_get:User.User.builds)
  return builds_.Get(index);
}
inline ::ProtoBuilding::BuildingCPP* User::mutable_builds(int index) {
  // @@protoc_insertion_point(field_mutable:User.User.builds)
  return builds_.Mutable(index);
}
inline ::ProtoBuilding::BuildingCPP* User::add_builds() {
  // @@protoc_insertion_point(field_add:User.User.builds)
  return builds_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ProtoBuilding::BuildingCPP >&
User::builds() const {
  // @@protoc_insertion_point(field_list:User.User.builds)
  return builds_;
}
inline ::google::protobuf::RepeatedPtrField< ::ProtoBuilding::BuildingCPP >*
User::mutable_builds() {
  // @@protoc_insertion_point(field_mutable_list:User.User.builds)
  return &builds_;
}

// repeated .ProtoProduce.CropLandCPP cropland = 9;
inline int User::cropland_size() const {
  return cropland_.size();
}
inline void User::clear_cropland() {
  cropland_.Clear();
}
inline const ::ProtoProduce::CropLandCPP& User::cropland(int index) const {
  // @@protoc_insertion_point(field_get:User.User.cropland)
  return cropland_.Get(index);
}
inline ::ProtoProduce::CropLandCPP* User::mutable_cropland(int index) {
  // @@protoc_insertion_point(field_mutable:User.User.cropland)
  return cropland_.Mutable(index);
}
inline ::ProtoProduce::CropLandCPP* User::add_cropland() {
  // @@protoc_insertion_point(field_add:User.User.cropland)
  return cropland_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ProtoProduce::CropLandCPP >&
User::cropland() const {
  // @@protoc_insertion_point(field_list:User.User.cropland)
  return cropland_;
}
inline ::google::protobuf::RepeatedPtrField< ::ProtoProduce::CropLandCPP >*
User::mutable_cropland() {
  // @@protoc_insertion_point(field_mutable_list:User.User.cropland)
  return &cropland_;
}

// repeated .ProtoProduce.ProduceEquipCPP equipments = 10;
inline int User::equipments_size() const {
  return equipments_.size();
}
inline void User::clear_equipments() {
  equipments_.Clear();
}
inline const ::ProtoProduce::ProduceEquipCPP& User::equipments(int index) const {
  // @@protoc_insertion_point(field_get:User.User.equipments)
  return equipments_.Get(index);
}
inline ::ProtoProduce::ProduceEquipCPP* User::mutable_equipments(int index) {
  // @@protoc_insertion_point(field_mutable:User.User.equipments)
  return equipments_.Mutable(index);
}
inline ::ProtoProduce::ProduceEquipCPP* User::add_equipments() {
  // @@protoc_insertion_point(field_add:User.User.equipments)
  return equipments_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ProtoProduce::ProduceEquipCPP >&
User::equipments() const {
  // @@protoc_insertion_point(field_list:User.User.equipments)
  return equipments_;
}
inline ::google::protobuf::RepeatedPtrField< ::ProtoProduce::ProduceEquipCPP >*
User::mutable_equipments() {
  // @@protoc_insertion_point(field_mutable_list:User.User.equipments)
  return &equipments_;
}

// repeated .ProtoProduce.AnimalCPP animals = 11;
inline int User::animals_size() const {
  return animals_.size();
}
inline void User::clear_animals() {
  animals_.Clear();
}
inline const ::ProtoProduce::AnimalCPP& User::animals(int index) const {
  // @@protoc_insertion_point(field_get:User.User.animals)
  return animals_.Get(index);
}
inline ::ProtoProduce::AnimalCPP* User::mutable_animals(int index) {
  // @@protoc_insertion_point(field_mutable:User.User.animals)
  return animals_.Mutable(index);
}
inline ::ProtoProduce::AnimalCPP* User::add_animals() {
  // @@protoc_insertion_point(field_add:User.User.animals)
  return animals_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ProtoProduce::AnimalCPP >&
User::animals() const {
  // @@protoc_insertion_point(field_list:User.User.animals)
  return animals_;
}
inline ::google::protobuf::RepeatedPtrField< ::ProtoProduce::AnimalCPP >*
User::mutable_animals() {
  // @@protoc_insertion_point(field_mutable_list:User.User.animals)
  return &animals_;
}

// repeated .ProtoBuilding.EquipmentStarCPP equipmentstars = 12;
inline int User::equipmentstars_size() const {
  return equipmentstars_.size();
}
inline void User::clear_equipmentstars() {
  equipmentstars_.Clear();
}
inline const ::ProtoBuilding::EquipmentStarCPP& User::equipmentstars(int index) const {
  // @@protoc_insertion_point(field_get:User.User.equipmentstars)
  return equipmentstars_.Get(index);
}
inline ::ProtoBuilding::EquipmentStarCPP* User::mutable_equipmentstars(int index) {
  // @@protoc_insertion_point(field_mutable:User.User.equipmentstars)
  return equipmentstars_.Mutable(index);
}
inline ::ProtoBuilding::EquipmentStarCPP* User::add_equipmentstars() {
  // @@protoc_insertion_point(field_add:User.User.equipmentstars)
  return equipmentstars_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ProtoBuilding::EquipmentStarCPP >&
User::equipmentstars() const {
  // @@protoc_insertion_point(field_list:User.User.equipmentstars)
  return equipmentstars_;
}
inline ::google::protobuf::RepeatedPtrField< ::ProtoBuilding::EquipmentStarCPP >*
User::mutable_equipmentstars() {
  // @@protoc_insertion_point(field_mutable_list:User.User.equipmentstars)
  return &equipmentstars_;
}

// repeated .ProtoProduce.FruitCPP fruits = 13;
inline int User::fruits_size() const {
  return fruits_.size();
}
inline void User::clear_fruits() {
  fruits_.Clear();
}
inline const ::ProtoProduce::FruitCPP& User::fruits(int index) const {
  // @@protoc_insertion_point(field_get:User.User.fruits)
  return fruits_.Get(index);
}
inline ::ProtoProduce::FruitCPP* User::mutable_fruits(int index) {
  // @@protoc_insertion_point(field_mutable:User.User.fruits)
  return fruits_.Mutable(index);
}
inline ::ProtoProduce::FruitCPP* User::add_fruits() {
  // @@protoc_insertion_point(field_add:User.User.fruits)
  return fruits_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ProtoProduce::FruitCPP >&
User::fruits() const {
  // @@protoc_insertion_point(field_list:User.User.fruits)
  return fruits_;
}
inline ::google::protobuf::RepeatedPtrField< ::ProtoProduce::FruitCPP >*
User::mutable_fruits() {
  // @@protoc_insertion_point(field_mutable_list:User.User.fruits)
  return &fruits_;
}

// repeated .ProtoOrder.OrderCPP orders = 14;
inline int User::orders_size() const {
  return orders_.size();
}
inline void User::clear_orders() {
  orders_.Clear();
}
inline const ::ProtoOrder::OrderCPP& User::orders(int index) const {
  // @@protoc_insertion_point(field_get:User.User.orders)
  return orders_.Get(index);
}
inline ::ProtoOrder::OrderCPP* User::mutable_orders(int index) {
  // @@protoc_insertion_point(field_mutable:User.User.orders)
  return orders_.Mutable(index);
}
inline ::ProtoOrder::OrderCPP* User::add_orders() {
  // @@protoc_insertion_point(field_add:User.User.orders)
  return orders_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ProtoOrder::OrderCPP >&
User::orders() const {
  // @@protoc_insertion_point(field_list:User.User.orders)
  return orders_;
}
inline ::google::protobuf::RepeatedPtrField< ::ProtoOrder::OrderCPP >*
User::mutable_orders() {
  // @@protoc_insertion_point(field_mutable_list:User.User.orders)
  return &orders_;
}

// optional .ProtoOrder.TruckCPP truck = 15;
inline bool User::has_truck() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void User::set_has_truck() {
  _has_bits_[0] |= 0x00004000u;
}
inline void User::clear_has_truck() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void User::clear_truck() {
  if (truck_ != NULL) truck_->::ProtoOrder::TruckCPP::Clear();
  clear_has_truck();
}
inline const ::ProtoOrder::TruckCPP& User::truck() const {
  // @@protoc_insertion_point(field_get:User.User.truck)
  return truck_ != NULL ? *truck_ : *default_instance_->truck_;
}
inline ::ProtoOrder::TruckCPP* User::mutable_truck() {
  set_has_truck();
  if (truck_ == NULL) truck_ = new ::ProtoOrder::TruckCPP;
  // @@protoc_insertion_point(field_mutable:User.User.truck)
  return truck_;
}
inline ::ProtoOrder::TruckCPP* User::release_truck() {
  clear_has_truck();
  ::ProtoOrder::TruckCPP* temp = truck_;
  truck_ = NULL;
  return temp;
}
inline void User::set_allocated_truck(::ProtoOrder::TruckCPP* truck) {
  delete truck_;
  truck_ = truck;
  if (truck) {
    set_has_truck();
  } else {
    clear_has_truck();
  }
  // @@protoc_insertion_point(field_set_allocated:User.User.truck)
}

// optional .ProtoShipping.ShippingCPP shipping = 16;
inline bool User::has_shipping() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void User::set_has_shipping() {
  _has_bits_[0] |= 0x00008000u;
}
inline void User::clear_has_shipping() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void User::clear_shipping() {
  if (shipping_ != NULL) shipping_->::ProtoShipping::ShippingCPP::Clear();
  clear_has_shipping();
}
inline const ::ProtoShipping::ShippingCPP& User::shipping() const {
  // @@protoc_insertion_point(field_get:User.User.shipping)
  return shipping_ != NULL ? *shipping_ : *default_instance_->shipping_;
}
inline ::ProtoShipping::ShippingCPP* User::mutable_shipping() {
  set_has_shipping();
  if (shipping_ == NULL) shipping_ = new ::ProtoShipping::ShippingCPP;
  // @@protoc_insertion_point(field_mutable:User.User.shipping)
  return shipping_;
}
inline ::ProtoShipping::ShippingCPP* User::release_shipping() {
  clear_has_shipping();
  ::ProtoShipping::ShippingCPP* temp = shipping_;
  shipping_ = NULL;
  return temp;
}
inline void User::set_allocated_shipping(::ProtoShipping::ShippingCPP* shipping) {
  delete shipping_;
  shipping_ = shipping;
  if (shipping) {
    set_has_shipping();
  } else {
    clear_has_shipping();
  }
  // @@protoc_insertion_point(field_set_allocated:User.User.shipping)
}

// repeated .ProtoShipping.ShippingBoxCPP shipboxes = 17;
inline int User::shipboxes_size() const {
  return shipboxes_.size();
}
inline void User::clear_shipboxes() {
  shipboxes_.Clear();
}
inline const ::ProtoShipping::ShippingBoxCPP& User::shipboxes(int index) const {
  // @@protoc_insertion_point(field_get:User.User.shipboxes)
  return shipboxes_.Get(index);
}
inline ::ProtoShipping::ShippingBoxCPP* User::mutable_shipboxes(int index) {
  // @@protoc_insertion_point(field_mutable:User.User.shipboxes)
  return shipboxes_.Mutable(index);
}
inline ::ProtoShipping::ShippingBoxCPP* User::add_shipboxes() {
  // @@protoc_insertion_point(field_add:User.User.shipboxes)
  return shipboxes_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ProtoShipping::ShippingBoxCPP >&
User::shipboxes() const {
  // @@protoc_insertion_point(field_list:User.User.shipboxes)
  return shipboxes_;
}
inline ::google::protobuf::RepeatedPtrField< ::ProtoShipping::ShippingBoxCPP >*
User::mutable_shipboxes() {
  // @@protoc_insertion_point(field_mutable_list:User.User.shipboxes)
  return &shipboxes_;
}

// required .ProtoNPCSeller.NPCSellerCPP npcseller = 18;
inline bool User::has_npcseller() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void User::set_has_npcseller() {
  _has_bits_[0] |= 0x00020000u;
}
inline void User::clear_has_npcseller() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void User::clear_npcseller() {
  if (npcseller_ != NULL) npcseller_->::ProtoNPCSeller::NPCSellerCPP::Clear();
  clear_has_npcseller();
}
inline const ::ProtoNPCSeller::NPCSellerCPP& User::npcseller() const {
  // @@protoc_insertion_point(field_get:User.User.npcseller)
  return npcseller_ != NULL ? *npcseller_ : *default_instance_->npcseller_;
}
inline ::ProtoNPCSeller::NPCSellerCPP* User::mutable_npcseller() {
  set_has_npcseller();
  if (npcseller_ == NULL) npcseller_ = new ::ProtoNPCSeller::NPCSellerCPP;
  // @@protoc_insertion_point(field_mutable:User.User.npcseller)
  return npcseller_;
}
inline ::ProtoNPCSeller::NPCSellerCPP* User::release_npcseller() {
  clear_has_npcseller();
  ::ProtoNPCSeller::NPCSellerCPP* temp = npcseller_;
  npcseller_ = NULL;
  return temp;
}
inline void User::set_allocated_npcseller(::ProtoNPCSeller::NPCSellerCPP* npcseller) {
  delete npcseller_;
  npcseller_ = npcseller;
  if (npcseller) {
    set_has_npcseller();
  } else {
    clear_has_npcseller();
  }
  // @@protoc_insertion_point(field_set_allocated:User.User.npcseller)
}

// required uint32 opents = 19;
inline bool User::has_opents() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void User::set_has_opents() {
  _has_bits_[0] |= 0x00040000u;
}
inline void User::clear_has_opents() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void User::clear_opents() {
  opents_ = 0u;
  clear_has_opents();
}
inline ::google::protobuf::uint32 User::opents() const {
  // @@protoc_insertion_point(field_get:User.User.opents)
  return opents_;
}
inline void User::set_opents(::google::protobuf::uint32 value) {
  set_has_opents();
  opents_ = value;
  // @@protoc_insertion_point(field_set:User.User.opents)
}

// optional bool hasNewDyInfo = 20;
inline bool User::has_hasnewdyinfo() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void User::set_has_hasnewdyinfo() {
  _has_bits_[0] |= 0x00080000u;
}
inline void User::clear_has_hasnewdyinfo() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void User::clear_hasnewdyinfo() {
  hasnewdyinfo_ = false;
  clear_has_hasnewdyinfo();
}
inline bool User::hasnewdyinfo() const {
  // @@protoc_insertion_point(field_get:User.User.hasNewDyInfo)
  return hasnewdyinfo_;
}
inline void User::set_hasnewdyinfo(bool value) {
  set_has_hasnewdyinfo();
  hasnewdyinfo_ = value;
  // @@protoc_insertion_point(field_set:User.User.hasNewDyInfo)
}

// optional .ProtoTheme.ThemeInfoResp theme = 21;
inline bool User::has_theme() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void User::set_has_theme() {
  _has_bits_[0] |= 0x00100000u;
}
inline void User::clear_has_theme() {
  _has_bits_[0] &= ~0x00100000u;
}
inline void User::clear_theme() {
  if (theme_ != NULL) theme_->::ProtoTheme::ThemeInfoResp::Clear();
  clear_has_theme();
}
inline const ::ProtoTheme::ThemeInfoResp& User::theme() const {
  // @@protoc_insertion_point(field_get:User.User.theme)
  return theme_ != NULL ? *theme_ : *default_instance_->theme_;
}
inline ::ProtoTheme::ThemeInfoResp* User::mutable_theme() {
  set_has_theme();
  if (theme_ == NULL) theme_ = new ::ProtoTheme::ThemeInfoResp;
  // @@protoc_insertion_point(field_mutable:User.User.theme)
  return theme_;
}
inline ::ProtoTheme::ThemeInfoResp* User::release_theme() {
  clear_has_theme();
  ::ProtoTheme::ThemeInfoResp* temp = theme_;
  theme_ = NULL;
  return temp;
}
inline void User::set_allocated_theme(::ProtoTheme::ThemeInfoResp* theme) {
  delete theme_;
  theme_ = theme;
  if (theme) {
    set_has_theme();
  } else {
    clear_has_theme();
  }
  // @@protoc_insertion_point(field_set_allocated:User.User.theme)
}

// optional bool hasNewMsgInfo = 22;
inline bool User::has_hasnewmsginfo() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
inline void User::set_has_hasnewmsginfo() {
  _has_bits_[0] |= 0x00200000u;
}
inline void User::clear_has_hasnewmsginfo() {
  _has_bits_[0] &= ~0x00200000u;
}
inline void User::clear_hasnewmsginfo() {
  hasnewmsginfo_ = false;
  clear_has_hasnewmsginfo();
}
inline bool User::hasnewmsginfo() const {
  // @@protoc_insertion_point(field_get:User.User.hasNewMsgInfo)
  return hasnewmsginfo_;
}
inline void User::set_hasnewmsginfo(bool value) {
  set_has_hasnewmsginfo();
  hasnewmsginfo_ = value;
  // @@protoc_insertion_point(field_set:User.User.hasNewMsgInfo)
}

// repeated .ProtoPet.UnlockPetCPP pet = 23;
inline int User::pet_size() const {
  return pet_.size();
}
inline void User::clear_pet() {
  pet_.Clear();
}
inline const ::ProtoPet::UnlockPetCPP& User::pet(int index) const {
  // @@protoc_insertion_point(field_get:User.User.pet)
  return pet_.Get(index);
}
inline ::ProtoPet::UnlockPetCPP* User::mutable_pet(int index) {
  // @@protoc_insertion_point(field_mutable:User.User.pet)
  return pet_.Mutable(index);
}
inline ::ProtoPet::UnlockPetCPP* User::add_pet() {
  // @@protoc_insertion_point(field_add:User.User.pet)
  return pet_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ProtoPet::UnlockPetCPP >&
User::pet() const {
  // @@protoc_insertion_point(field_list:User.User.pet)
  return pet_;
}
inline ::google::protobuf::RepeatedPtrField< ::ProtoPet::UnlockPetCPP >*
User::mutable_pet() {
  // @@protoc_insertion_point(field_mutable_list:User.User.pet)
  return &pet_;
}

// -------------------------------------------------------------------

// OthProduceCPP

// required uint32 ud = 1;
inline bool OthProduceCPP::has_ud() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OthProduceCPP::set_has_ud() {
  _has_bits_[0] |= 0x00000001u;
}
inline void OthProduceCPP::clear_has_ud() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void OthProduceCPP::clear_ud() {
  ud_ = 0u;
  clear_has_ud();
}
inline ::google::protobuf::uint32 OthProduceCPP::ud() const {
  // @@protoc_insertion_point(field_get:User.OthProduceCPP.ud)
  return ud_;
}
inline void OthProduceCPP::set_ud(::google::protobuf::uint32 value) {
  set_has_ud();
  ud_ = value;
  // @@protoc_insertion_point(field_set:User.OthProduceCPP.ud)
}

// required uint32 status = 2;
inline bool OthProduceCPP::has_status() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void OthProduceCPP::set_has_status() {
  _has_bits_[0] |= 0x00000002u;
}
inline void OthProduceCPP::clear_has_status() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void OthProduceCPP::clear_status() {
  status_ = 0u;
  clear_has_status();
}
inline ::google::protobuf::uint32 OthProduceCPP::status() const {
  // @@protoc_insertion_point(field_get:User.OthProduceCPP.status)
  return status_;
}
inline void OthProduceCPP::set_status(::google::protobuf::uint32 value) {
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:User.OthProduceCPP.status)
}

// -------------------------------------------------------------------

// RequestOtherUser

// required uint32 othuid = 1;
inline bool RequestOtherUser::has_othuid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RequestOtherUser::set_has_othuid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RequestOtherUser::clear_has_othuid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RequestOtherUser::clear_othuid() {
  othuid_ = 0u;
  clear_has_othuid();
}
inline ::google::protobuf::uint32 RequestOtherUser::othuid() const {
  // @@protoc_insertion_point(field_get:User.RequestOtherUser.othuid)
  return othuid_;
}
inline void RequestOtherUser::set_othuid(::google::protobuf::uint32 value) {
  set_has_othuid();
  othuid_ = value;
  // @@protoc_insertion_point(field_set:User.RequestOtherUser.othuid)
}

// -------------------------------------------------------------------

// OtherUser

// required .User.Base base = 1;
inline bool OtherUser::has_base() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OtherUser::set_has_base() {
  _has_bits_[0] |= 0x00000001u;
}
inline void OtherUser::clear_has_base() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void OtherUser::clear_base() {
  if (base_ != NULL) base_->::User::Base::Clear();
  clear_has_base();
}
inline const ::User::Base& OtherUser::base() const {
  // @@protoc_insertion_point(field_get:User.OtherUser.base)
  return base_ != NULL ? *base_ : *default_instance_->base_;
}
inline ::User::Base* OtherUser::mutable_base() {
  set_has_base();
  if (base_ == NULL) base_ = new ::User::Base;
  // @@protoc_insertion_point(field_mutable:User.OtherUser.base)
  return base_;
}
inline ::User::Base* OtherUser::release_base() {
  clear_has_base();
  ::User::Base* temp = base_;
  base_ = NULL;
  return temp;
}
inline void OtherUser::set_allocated_base(::User::Base* base) {
  delete base_;
  base_ = base;
  if (base) {
    set_has_base();
  } else {
    clear_has_base();
  }
  // @@protoc_insertion_point(field_set_allocated:User.OtherUser.base)
}

// repeated .ProtoBuilding.BuildingCPP builds = 2;
inline int OtherUser::builds_size() const {
  return builds_.size();
}
inline void OtherUser::clear_builds() {
  builds_.Clear();
}
inline const ::ProtoBuilding::BuildingCPP& OtherUser::builds(int index) const {
  // @@protoc_insertion_point(field_get:User.OtherUser.builds)
  return builds_.Get(index);
}
inline ::ProtoBuilding::BuildingCPP* OtherUser::mutable_builds(int index) {
  // @@protoc_insertion_point(field_mutable:User.OtherUser.builds)
  return builds_.Mutable(index);
}
inline ::ProtoBuilding::BuildingCPP* OtherUser::add_builds() {
  // @@protoc_insertion_point(field_add:User.OtherUser.builds)
  return builds_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ProtoBuilding::BuildingCPP >&
OtherUser::builds() const {
  // @@protoc_insertion_point(field_list:User.OtherUser.builds)
  return builds_;
}
inline ::google::protobuf::RepeatedPtrField< ::ProtoBuilding::BuildingCPP >*
OtherUser::mutable_builds() {
  // @@protoc_insertion_point(field_mutable_list:User.OtherUser.builds)
  return &builds_;
}

// repeated .ProtoProduce.CropLandCPP cropland = 3;
inline int OtherUser::cropland_size() const {
  return cropland_.size();
}
inline void OtherUser::clear_cropland() {
  cropland_.Clear();
}
inline const ::ProtoProduce::CropLandCPP& OtherUser::cropland(int index) const {
  // @@protoc_insertion_point(field_get:User.OtherUser.cropland)
  return cropland_.Get(index);
}
inline ::ProtoProduce::CropLandCPP* OtherUser::mutable_cropland(int index) {
  // @@protoc_insertion_point(field_mutable:User.OtherUser.cropland)
  return cropland_.Mutable(index);
}
inline ::ProtoProduce::CropLandCPP* OtherUser::add_cropland() {
  // @@protoc_insertion_point(field_add:User.OtherUser.cropland)
  return cropland_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ProtoProduce::CropLandCPP >&
OtherUser::cropland() const {
  // @@protoc_insertion_point(field_list:User.OtherUser.cropland)
  return cropland_;
}
inline ::google::protobuf::RepeatedPtrField< ::ProtoProduce::CropLandCPP >*
OtherUser::mutable_cropland() {
  // @@protoc_insertion_point(field_mutable_list:User.OtherUser.cropland)
  return &cropland_;
}

// repeated .User.OthProduceCPP equipments = 4;
inline int OtherUser::equipments_size() const {
  return equipments_.size();
}
inline void OtherUser::clear_equipments() {
  equipments_.Clear();
}
inline const ::User::OthProduceCPP& OtherUser::equipments(int index) const {
  // @@protoc_insertion_point(field_get:User.OtherUser.equipments)
  return equipments_.Get(index);
}
inline ::User::OthProduceCPP* OtherUser::mutable_equipments(int index) {
  // @@protoc_insertion_point(field_mutable:User.OtherUser.equipments)
  return equipments_.Mutable(index);
}
inline ::User::OthProduceCPP* OtherUser::add_equipments() {
  // @@protoc_insertion_point(field_add:User.OtherUser.equipments)
  return equipments_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::User::OthProduceCPP >&
OtherUser::equipments() const {
  // @@protoc_insertion_point(field_list:User.OtherUser.equipments)
  return equipments_;
}
inline ::google::protobuf::RepeatedPtrField< ::User::OthProduceCPP >*
OtherUser::mutable_equipments() {
  // @@protoc_insertion_point(field_mutable_list:User.OtherUser.equipments)
  return &equipments_;
}

// repeated .ProtoProduce.AnimalCPP animals = 5;
inline int OtherUser::animals_size() const {
  return animals_.size();
}
inline void OtherUser::clear_animals() {
  animals_.Clear();
}
inline const ::ProtoProduce::AnimalCPP& OtherUser::animals(int index) const {
  // @@protoc_insertion_point(field_get:User.OtherUser.animals)
  return animals_.Get(index);
}
inline ::ProtoProduce::AnimalCPP* OtherUser::mutable_animals(int index) {
  // @@protoc_insertion_point(field_mutable:User.OtherUser.animals)
  return animals_.Mutable(index);
}
inline ::ProtoProduce::AnimalCPP* OtherUser::add_animals() {
  // @@protoc_insertion_point(field_add:User.OtherUser.animals)
  return animals_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ProtoProduce::AnimalCPP >&
OtherUser::animals() const {
  // @@protoc_insertion_point(field_list:User.OtherUser.animals)
  return animals_;
}
inline ::google::protobuf::RepeatedPtrField< ::ProtoProduce::AnimalCPP >*
OtherUser::mutable_animals() {
  // @@protoc_insertion_point(field_mutable_list:User.OtherUser.animals)
  return &animals_;
}

// repeated .ProtoBuilding.EquipmentStarCPP equipmentstars = 6;
inline int OtherUser::equipmentstars_size() const {
  return equipmentstars_.size();
}
inline void OtherUser::clear_equipmentstars() {
  equipmentstars_.Clear();
}
inline const ::ProtoBuilding::EquipmentStarCPP& OtherUser::equipmentstars(int index) const {
  // @@protoc_insertion_point(field_get:User.OtherUser.equipmentstars)
  return equipmentstars_.Get(index);
}
inline ::ProtoBuilding::EquipmentStarCPP* OtherUser::mutable_equipmentstars(int index) {
  // @@protoc_insertion_point(field_mutable:User.OtherUser.equipmentstars)
  return equipmentstars_.Mutable(index);
}
inline ::ProtoBuilding::EquipmentStarCPP* OtherUser::add_equipmentstars() {
  // @@protoc_insertion_point(field_add:User.OtherUser.equipmentstars)
  return equipmentstars_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ProtoBuilding::EquipmentStarCPP >&
OtherUser::equipmentstars() const {
  // @@protoc_insertion_point(field_list:User.OtherUser.equipmentstars)
  return equipmentstars_;
}
inline ::google::protobuf::RepeatedPtrField< ::ProtoBuilding::EquipmentStarCPP >*
OtherUser::mutable_equipmentstars() {
  // @@protoc_insertion_point(field_mutable_list:User.OtherUser.equipmentstars)
  return &equipmentstars_;
}

// repeated .ProtoProduce.FruitCPP fruits = 7;
inline int OtherUser::fruits_size() const {
  return fruits_.size();
}
inline void OtherUser::clear_fruits() {
  fruits_.Clear();
}
inline const ::ProtoProduce::FruitCPP& OtherUser::fruits(int index) const {
  // @@protoc_insertion_point(field_get:User.OtherUser.fruits)
  return fruits_.Get(index);
}
inline ::ProtoProduce::FruitCPP* OtherUser::mutable_fruits(int index) {
  // @@protoc_insertion_point(field_mutable:User.OtherUser.fruits)
  return fruits_.Mutable(index);
}
inline ::ProtoProduce::FruitCPP* OtherUser::add_fruits() {
  // @@protoc_insertion_point(field_add:User.OtherUser.fruits)
  return fruits_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ProtoProduce::FruitCPP >&
OtherUser::fruits() const {
  // @@protoc_insertion_point(field_list:User.OtherUser.fruits)
  return fruits_;
}
inline ::google::protobuf::RepeatedPtrField< ::ProtoProduce::FruitCPP >*
OtherUser::mutable_fruits() {
  // @@protoc_insertion_point(field_mutable_list:User.OtherUser.fruits)
  return &fruits_;
}

// required uint32 shopStatus = 8;
inline bool OtherUser::has_shopstatus() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void OtherUser::set_has_shopstatus() {
  _has_bits_[0] |= 0x00000080u;
}
inline void OtherUser::clear_has_shopstatus() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void OtherUser::clear_shopstatus() {
  shopstatus_ = 0u;
  clear_has_shopstatus();
}
inline ::google::protobuf::uint32 OtherUser::shopstatus() const {
  // @@protoc_insertion_point(field_get:User.OtherUser.shopStatus)
  return shopstatus_;
}
inline void OtherUser::set_shopstatus(::google::protobuf::uint32 value) {
  set_has_shopstatus();
  shopstatus_ = value;
  // @@protoc_insertion_point(field_set:User.OtherUser.shopStatus)
}

// optional .ProtoShipping.ShippingCPP shipping = 9;
inline bool OtherUser::has_shipping() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void OtherUser::set_has_shipping() {
  _has_bits_[0] |= 0x00000100u;
}
inline void OtherUser::clear_has_shipping() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void OtherUser::clear_shipping() {
  if (shipping_ != NULL) shipping_->::ProtoShipping::ShippingCPP::Clear();
  clear_has_shipping();
}
inline const ::ProtoShipping::ShippingCPP& OtherUser::shipping() const {
  // @@protoc_insertion_point(field_get:User.OtherUser.shipping)
  return shipping_ != NULL ? *shipping_ : *default_instance_->shipping_;
}
inline ::ProtoShipping::ShippingCPP* OtherUser::mutable_shipping() {
  set_has_shipping();
  if (shipping_ == NULL) shipping_ = new ::ProtoShipping::ShippingCPP;
  // @@protoc_insertion_point(field_mutable:User.OtherUser.shipping)
  return shipping_;
}
inline ::ProtoShipping::ShippingCPP* OtherUser::release_shipping() {
  clear_has_shipping();
  ::ProtoShipping::ShippingCPP* temp = shipping_;
  shipping_ = NULL;
  return temp;
}
inline void OtherUser::set_allocated_shipping(::ProtoShipping::ShippingCPP* shipping) {
  delete shipping_;
  shipping_ = shipping;
  if (shipping) {
    set_has_shipping();
  } else {
    clear_has_shipping();
  }
  // @@protoc_insertion_point(field_set_allocated:User.OtherUser.shipping)
}

// repeated .ProtoShipping.ShippingBoxCPP shipboxes = 10;
inline int OtherUser::shipboxes_size() const {
  return shipboxes_.size();
}
inline void OtherUser::clear_shipboxes() {
  shipboxes_.Clear();
}
inline const ::ProtoShipping::ShippingBoxCPP& OtherUser::shipboxes(int index) const {
  // @@protoc_insertion_point(field_get:User.OtherUser.shipboxes)
  return shipboxes_.Get(index);
}
inline ::ProtoShipping::ShippingBoxCPP* OtherUser::mutable_shipboxes(int index) {
  // @@protoc_insertion_point(field_mutable:User.OtherUser.shipboxes)
  return shipboxes_.Mutable(index);
}
inline ::ProtoShipping::ShippingBoxCPP* OtherUser::add_shipboxes() {
  // @@protoc_insertion_point(field_add:User.OtherUser.shipboxes)
  return shipboxes_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ProtoShipping::ShippingBoxCPP >&
OtherUser::shipboxes() const {
  // @@protoc_insertion_point(field_list:User.OtherUser.shipboxes)
  return shipboxes_;
}
inline ::google::protobuf::RepeatedPtrField< ::ProtoShipping::ShippingBoxCPP >*
OtherUser::mutable_shipboxes() {
  // @@protoc_insertion_point(field_mutable_list:User.OtherUser.shipboxes)
  return &shipboxes_;
}

// required .ProtoFriendlyTree.FriendlyTreeCPP friendlytree = 11;
inline bool OtherUser::has_friendlytree() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void OtherUser::set_has_friendlytree() {
  _has_bits_[0] |= 0x00000400u;
}
inline void OtherUser::clear_has_friendlytree() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void OtherUser::clear_friendlytree() {
  if (friendlytree_ != NULL) friendlytree_->::ProtoFriendlyTree::FriendlyTreeCPP::Clear();
  clear_has_friendlytree();
}
inline const ::ProtoFriendlyTree::FriendlyTreeCPP& OtherUser::friendlytree() const {
  // @@protoc_insertion_point(field_get:User.OtherUser.friendlytree)
  return friendlytree_ != NULL ? *friendlytree_ : *default_instance_->friendlytree_;
}
inline ::ProtoFriendlyTree::FriendlyTreeCPP* OtherUser::mutable_friendlytree() {
  set_has_friendlytree();
  if (friendlytree_ == NULL) friendlytree_ = new ::ProtoFriendlyTree::FriendlyTreeCPP;
  // @@protoc_insertion_point(field_mutable:User.OtherUser.friendlytree)
  return friendlytree_;
}
inline ::ProtoFriendlyTree::FriendlyTreeCPP* OtherUser::release_friendlytree() {
  clear_has_friendlytree();
  ::ProtoFriendlyTree::FriendlyTreeCPP* temp = friendlytree_;
  friendlytree_ = NULL;
  return temp;
}
inline void OtherUser::set_allocated_friendlytree(::ProtoFriendlyTree::FriendlyTreeCPP* friendlytree) {
  delete friendlytree_;
  friendlytree_ = friendlytree;
  if (friendlytree) {
    set_has_friendlytree();
  } else {
    clear_has_friendlytree();
  }
  // @@protoc_insertion_point(field_set_allocated:User.OtherUser.friendlytree)
}

// optional .ProtoTheme.ThemeInfoResp theme = 12;
inline bool OtherUser::has_theme() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void OtherUser::set_has_theme() {
  _has_bits_[0] |= 0x00000800u;
}
inline void OtherUser::clear_has_theme() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void OtherUser::clear_theme() {
  if (theme_ != NULL) theme_->::ProtoTheme::ThemeInfoResp::Clear();
  clear_has_theme();
}
inline const ::ProtoTheme::ThemeInfoResp& OtherUser::theme() const {
  // @@protoc_insertion_point(field_get:User.OtherUser.theme)
  return theme_ != NULL ? *theme_ : *default_instance_->theme_;
}
inline ::ProtoTheme::ThemeInfoResp* OtherUser::mutable_theme() {
  set_has_theme();
  if (theme_ == NULL) theme_ = new ::ProtoTheme::ThemeInfoResp;
  // @@protoc_insertion_point(field_mutable:User.OtherUser.theme)
  return theme_;
}
inline ::ProtoTheme::ThemeInfoResp* OtherUser::release_theme() {
  clear_has_theme();
  ::ProtoTheme::ThemeInfoResp* temp = theme_;
  theme_ = NULL;
  return temp;
}
inline void OtherUser::set_allocated_theme(::ProtoTheme::ThemeInfoResp* theme) {
  delete theme_;
  theme_ = theme;
  if (theme) {
    set_has_theme();
  } else {
    clear_has_theme();
  }
  // @@protoc_insertion_point(field_set_allocated:User.OtherUser.theme)
}

// repeated .ProtoPet.UnlockPetCPP arraypet = 13;
inline int OtherUser::arraypet_size() const {
  return arraypet_.size();
}
inline void OtherUser::clear_arraypet() {
  arraypet_.Clear();
}
inline const ::ProtoPet::UnlockPetCPP& OtherUser::arraypet(int index) const {
  // @@protoc_insertion_point(field_get:User.OtherUser.arraypet)
  return arraypet_.Get(index);
}
inline ::ProtoPet::UnlockPetCPP* OtherUser::mutable_arraypet(int index) {
  // @@protoc_insertion_point(field_mutable:User.OtherUser.arraypet)
  return arraypet_.Mutable(index);
}
inline ::ProtoPet::UnlockPetCPP* OtherUser::add_arraypet() {
  // @@protoc_insertion_point(field_add:User.OtherUser.arraypet)
  return arraypet_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ProtoPet::UnlockPetCPP >&
OtherUser::arraypet() const {
  // @@protoc_insertion_point(field_list:User.OtherUser.arraypet)
  return arraypet_;
}
inline ::google::protobuf::RepeatedPtrField< ::ProtoPet::UnlockPetCPP >*
OtherUser::mutable_arraypet() {
  // @@protoc_insertion_point(field_mutable_list:User.OtherUser.arraypet)
  return &arraypet_;
}

// -------------------------------------------------------------------

// RequestOtherUserBC

// required uint32 othuid = 1;
inline bool RequestOtherUserBC::has_othuid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RequestOtherUserBC::set_has_othuid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RequestOtherUserBC::clear_has_othuid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RequestOtherUserBC::clear_othuid() {
  othuid_ = 0u;
  clear_has_othuid();
}
inline ::google::protobuf::uint32 RequestOtherUserBC::othuid() const {
  // @@protoc_insertion_point(field_get:User.RequestOtherUserBC.othuid)
  return othuid_;
}
inline void RequestOtherUserBC::set_othuid(::google::protobuf::uint32 value) {
  set_has_othuid();
  othuid_ = value;
  // @@protoc_insertion_point(field_set:User.RequestOtherUserBC.othuid)
}

// required uint32 myuid = 2;
inline bool RequestOtherUserBC::has_myuid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RequestOtherUserBC::set_has_myuid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RequestOtherUserBC::clear_has_myuid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RequestOtherUserBC::clear_myuid() {
  myuid_ = 0u;
  clear_has_myuid();
}
inline ::google::protobuf::uint32 RequestOtherUserBC::myuid() const {
  // @@protoc_insertion_point(field_get:User.RequestOtherUserBC.myuid)
  return myuid_;
}
inline void RequestOtherUserBC::set_myuid(::google::protobuf::uint32 value) {
  set_has_myuid();
  myuid_ = value;
  // @@protoc_insertion_point(field_set:User.RequestOtherUserBC.myuid)
}

// -------------------------------------------------------------------

// FetchSelfReq

// -------------------------------------------------------------------

// FetchSelfResp

// required .User.User player = 1;
inline bool FetchSelfResp::has_player() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FetchSelfResp::set_has_player() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FetchSelfResp::clear_has_player() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FetchSelfResp::clear_player() {
  if (player_ != NULL) player_->::User::User::Clear();
  clear_has_player();
}
inline const ::User::User& FetchSelfResp::player() const {
  // @@protoc_insertion_point(field_get:User.FetchSelfResp.player)
  return player_ != NULL ? *player_ : *default_instance_->player_;
}
inline ::User::User* FetchSelfResp::mutable_player() {
  set_has_player();
  if (player_ == NULL) player_ = new ::User::User;
  // @@protoc_insertion_point(field_mutable:User.FetchSelfResp.player)
  return player_;
}
inline ::User::User* FetchSelfResp::release_player() {
  clear_has_player();
  ::User::User* temp = player_;
  player_ = NULL;
  return temp;
}
inline void FetchSelfResp::set_allocated_player(::User::User* player) {
  delete player_;
  player_ = player;
  if (player) {
    set_has_player();
  } else {
    clear_has_player();
  }
  // @@protoc_insertion_point(field_set_allocated:User.FetchSelfResp.player)
}

// -------------------------------------------------------------------

// Tutorialstage

// required uint32 tutorialStage = 1;
inline bool Tutorialstage::has_tutorialstage() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Tutorialstage::set_has_tutorialstage() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Tutorialstage::clear_has_tutorialstage() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Tutorialstage::clear_tutorialstage() {
  tutorialstage_ = 0u;
  clear_has_tutorialstage();
}
inline ::google::protobuf::uint32 Tutorialstage::tutorialstage() const {
  // @@protoc_insertion_point(field_get:User.Tutorialstage.tutorialStage)
  return tutorialstage_;
}
inline void Tutorialstage::set_tutorialstage(::google::protobuf::uint32 value) {
  set_has_tutorialstage();
  tutorialstage_ = value;
  // @@protoc_insertion_point(field_set:User.Tutorialstage.tutorialStage)
}

// -------------------------------------------------------------------

// SwitchStatus

// required uint32 switchStatus = 1;
inline bool SwitchStatus::has_switchstatus() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SwitchStatus::set_has_switchstatus() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SwitchStatus::clear_has_switchstatus() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SwitchStatus::clear_switchstatus() {
  switchstatus_ = 0u;
  clear_has_switchstatus();
}
inline ::google::protobuf::uint32 SwitchStatus::switchstatus() const {
  // @@protoc_insertion_point(field_get:User.SwitchStatus.switchStatus)
  return switchstatus_;
}
inline void SwitchStatus::set_switchstatus(::google::protobuf::uint32 value) {
  set_has_switchstatus();
  switchstatus_ = value;
  // @@protoc_insertion_point(field_set:User.SwitchStatus.switchStatus)
}

// -------------------------------------------------------------------

// ServerTime

// required uint32 ts = 1;
inline bool ServerTime::has_ts() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ServerTime::set_has_ts() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ServerTime::clear_has_ts() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ServerTime::clear_ts() {
  ts_ = 0u;
  clear_has_ts();
}
inline ::google::protobuf::uint32 ServerTime::ts() const {
  // @@protoc_insertion_point(field_get:User.ServerTime.ts)
  return ts_;
}
inline void ServerTime::set_ts(::google::protobuf::uint32 value) {
  set_has_ts();
  ts_ = value;
  // @@protoc_insertion_point(field_set:User.ServerTime.ts)
}

// -------------------------------------------------------------------

// CostCashReq

// required uint32 cash = 1;
inline bool CostCashReq::has_cash() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CostCashReq::set_has_cash() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CostCashReq::clear_has_cash() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CostCashReq::clear_cash() {
  cash_ = 0u;
  clear_has_cash();
}
inline ::google::protobuf::uint32 CostCashReq::cash() const {
  // @@protoc_insertion_point(field_get:User.CostCashReq.cash)
  return cash_;
}
inline void CostCashReq::set_cash(::google::protobuf::uint32 value) {
  set_has_cash();
  cash_ = value;
  // @@protoc_insertion_point(field_set:User.CostCashReq.cash)
}

// required string opCode = 2;
inline bool CostCashReq::has_opcode() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CostCashReq::set_has_opcode() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CostCashReq::clear_has_opcode() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CostCashReq::clear_opcode() {
  if (opcode_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    opcode_->clear();
  }
  clear_has_opcode();
}
inline const ::std::string& CostCashReq::opcode() const {
  // @@protoc_insertion_point(field_get:User.CostCashReq.opCode)
  return *opcode_;
}
inline void CostCashReq::set_opcode(const ::std::string& value) {
  set_has_opcode();
  if (opcode_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    opcode_ = new ::std::string;
  }
  opcode_->assign(value);
  // @@protoc_insertion_point(field_set:User.CostCashReq.opCode)
}
inline void CostCashReq::set_opcode(const char* value) {
  set_has_opcode();
  if (opcode_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    opcode_ = new ::std::string;
  }
  opcode_->assign(value);
  // @@protoc_insertion_point(field_set_char:User.CostCashReq.opCode)
}
inline void CostCashReq::set_opcode(const char* value, size_t size) {
  set_has_opcode();
  if (opcode_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    opcode_ = new ::std::string;
  }
  opcode_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:User.CostCashReq.opCode)
}
inline ::std::string* CostCashReq::mutable_opcode() {
  set_has_opcode();
  if (opcode_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    opcode_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:User.CostCashReq.opCode)
  return opcode_;
}
inline ::std::string* CostCashReq::release_opcode() {
  clear_has_opcode();
  if (opcode_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = opcode_;
    opcode_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CostCashReq::set_allocated_opcode(::std::string* opcode) {
  if (opcode_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete opcode_;
  }
  if (opcode) {
    set_has_opcode();
    opcode_ = opcode;
  } else {
    clear_has_opcode();
    opcode_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:User.CostCashReq.opCode)
}

// required uint32 operation = 3;
inline bool CostCashReq::has_operation() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CostCashReq::set_has_operation() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CostCashReq::clear_has_operation() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CostCashReq::clear_operation() {
  operation_ = 0u;
  clear_has_operation();
}
inline ::google::protobuf::uint32 CostCashReq::operation() const {
  // @@protoc_insertion_point(field_get:User.CostCashReq.operation)
  return operation_;
}
inline void CostCashReq::set_operation(::google::protobuf::uint32 value) {
  set_has_operation();
  operation_ = value;
  // @@protoc_insertion_point(field_set:User.CostCashReq.operation)
}

// -------------------------------------------------------------------

// CostCashResp

// required uint32 cash = 1;
inline bool CostCashResp::has_cash() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CostCashResp::set_has_cash() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CostCashResp::clear_has_cash() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CostCashResp::clear_cash() {
  cash_ = 0u;
  clear_has_cash();
}
inline ::google::protobuf::uint32 CostCashResp::cash() const {
  // @@protoc_insertion_point(field_get:User.CostCashResp.cash)
  return cash_;
}
inline void CostCashResp::set_cash(::google::protobuf::uint32 value) {
  set_has_cash();
  cash_ = value;
  // @@protoc_insertion_point(field_set:User.CostCashResp.cash)
}

// required uint32 operation = 2;
inline bool CostCashResp::has_operation() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CostCashResp::set_has_operation() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CostCashResp::clear_has_operation() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CostCashResp::clear_operation() {
  operation_ = 0u;
  clear_has_operation();
}
inline ::google::protobuf::uint32 CostCashResp::operation() const {
  // @@protoc_insertion_point(field_get:User.CostCashResp.operation)
  return operation_;
}
inline void CostCashResp::set_operation(::google::protobuf::uint32 value) {
  set_has_operation();
  operation_ = value;
  // @@protoc_insertion_point(field_set:User.CostCashResp.operation)
}

// -------------------------------------------------------------------

// ChargeItem

// required uint32 cash = 1;
inline bool ChargeItem::has_cash() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ChargeItem::set_has_cash() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ChargeItem::clear_has_cash() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ChargeItem::clear_cash() {
  cash_ = 0u;
  clear_has_cash();
}
inline ::google::protobuf::uint32 ChargeItem::cash() const {
  // @@protoc_insertion_point(field_get:User.ChargeItem.cash)
  return cash_;
}
inline void ChargeItem::set_cash(::google::protobuf::uint32 value) {
  set_has_cash();
  cash_ = value;
  // @@protoc_insertion_point(field_set:User.ChargeItem.cash)
}

// required uint32 ts = 2;
inline bool ChargeItem::has_ts() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ChargeItem::set_has_ts() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ChargeItem::clear_has_ts() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ChargeItem::clear_ts() {
  ts_ = 0u;
  clear_has_ts();
}
inline ::google::protobuf::uint32 ChargeItem::ts() const {
  // @@protoc_insertion_point(field_get:User.ChargeItem.ts)
  return ts_;
}
inline void ChargeItem::set_ts(::google::protobuf::uint32 value) {
  set_has_ts();
  ts_ = value;
  // @@protoc_insertion_point(field_set:User.ChargeItem.ts)
}

// -------------------------------------------------------------------

// AccumulateCharge

// repeated .User.ChargeItem accumulateCharge = 1;
inline int AccumulateCharge::accumulatecharge_size() const {
  return accumulatecharge_.size();
}
inline void AccumulateCharge::clear_accumulatecharge() {
  accumulatecharge_.Clear();
}
inline const ::User::ChargeItem& AccumulateCharge::accumulatecharge(int index) const {
  // @@protoc_insertion_point(field_get:User.AccumulateCharge.accumulateCharge)
  return accumulatecharge_.Get(index);
}
inline ::User::ChargeItem* AccumulateCharge::mutable_accumulatecharge(int index) {
  // @@protoc_insertion_point(field_mutable:User.AccumulateCharge.accumulateCharge)
  return accumulatecharge_.Mutable(index);
}
inline ::User::ChargeItem* AccumulateCharge::add_accumulatecharge() {
  // @@protoc_insertion_point(field_add:User.AccumulateCharge.accumulateCharge)
  return accumulatecharge_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::User::ChargeItem >&
AccumulateCharge::accumulatecharge() const {
  // @@protoc_insertion_point(field_list:User.AccumulateCharge.accumulateCharge)
  return accumulatecharge_;
}
inline ::google::protobuf::RepeatedPtrField< ::User::ChargeItem >*
AccumulateCharge::mutable_accumulatecharge() {
  // @@protoc_insertion_point(field_mutable_list:User.AccumulateCharge.accumulateCharge)
  return &accumulatecharge_;
}

// -------------------------------------------------------------------

// PushAccumulateChangeReq

// required .User.AccumulateCharge changeAcccharge = 1;
inline bool PushAccumulateChangeReq::has_changeacccharge() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PushAccumulateChangeReq::set_has_changeacccharge() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PushAccumulateChangeReq::clear_has_changeacccharge() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PushAccumulateChangeReq::clear_changeacccharge() {
  if (changeacccharge_ != NULL) changeacccharge_->::User::AccumulateCharge::Clear();
  clear_has_changeacccharge();
}
inline const ::User::AccumulateCharge& PushAccumulateChangeReq::changeacccharge() const {
  // @@protoc_insertion_point(field_get:User.PushAccumulateChangeReq.changeAcccharge)
  return changeacccharge_ != NULL ? *changeacccharge_ : *default_instance_->changeacccharge_;
}
inline ::User::AccumulateCharge* PushAccumulateChangeReq::mutable_changeacccharge() {
  set_has_changeacccharge();
  if (changeacccharge_ == NULL) changeacccharge_ = new ::User::AccumulateCharge;
  // @@protoc_insertion_point(field_mutable:User.PushAccumulateChangeReq.changeAcccharge)
  return changeacccharge_;
}
inline ::User::AccumulateCharge* PushAccumulateChangeReq::release_changeacccharge() {
  clear_has_changeacccharge();
  ::User::AccumulateCharge* temp = changeacccharge_;
  changeacccharge_ = NULL;
  return temp;
}
inline void PushAccumulateChangeReq::set_allocated_changeacccharge(::User::AccumulateCharge* changeacccharge) {
  delete changeacccharge_;
  changeacccharge_ = changeacccharge;
  if (changeacccharge) {
    set_has_changeacccharge();
  } else {
    clear_has_changeacccharge();
  }
  // @@protoc_insertion_point(field_set_allocated:User.PushAccumulateChangeReq.changeAcccharge)
}

// -------------------------------------------------------------------

// SpeedUpReq

// required uint32 type = 1;
inline bool SpeedUpReq::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SpeedUpReq::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SpeedUpReq::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SpeedUpReq::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 SpeedUpReq::type() const {
  // @@protoc_insertion_point(field_get:User.SpeedUpReq.type)
  return type_;
}
inline void SpeedUpReq::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:User.SpeedUpReq.type)
}

// optional uint32 ud = 2;
inline bool SpeedUpReq::has_ud() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SpeedUpReq::set_has_ud() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SpeedUpReq::clear_has_ud() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SpeedUpReq::clear_ud() {
  ud_ = 0u;
  clear_has_ud();
}
inline ::google::protobuf::uint32 SpeedUpReq::ud() const {
  // @@protoc_insertion_point(field_get:User.SpeedUpReq.ud)
  return ud_;
}
inline void SpeedUpReq::set_ud(::google::protobuf::uint32 value) {
  set_has_ud();
  ud_ = value;
  // @@protoc_insertion_point(field_set:User.SpeedUpReq.ud)
}

// optional uint32 method = 3;
inline bool SpeedUpReq::has_method() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SpeedUpReq::set_has_method() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SpeedUpReq::clear_has_method() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SpeedUpReq::clear_method() {
  method_ = 0u;
  clear_has_method();
}
inline ::google::protobuf::uint32 SpeedUpReq::method() const {
  // @@protoc_insertion_point(field_get:User.SpeedUpReq.method)
  return method_;
}
inline void SpeedUpReq::set_method(::google::protobuf::uint32 value) {
  set_has_method();
  method_ = value;
  // @@protoc_insertion_point(field_set:User.SpeedUpReq.method)
}

// -------------------------------------------------------------------

// SpeedUpResp

// optional .DataCommon.CommonItemsCPP commons = 1;
inline bool SpeedUpResp::has_commons() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SpeedUpResp::set_has_commons() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SpeedUpResp::clear_has_commons() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SpeedUpResp::clear_commons() {
  if (commons_ != NULL) commons_->::DataCommon::CommonItemsCPP::Clear();
  clear_has_commons();
}
inline const ::DataCommon::CommonItemsCPP& SpeedUpResp::commons() const {
  // @@protoc_insertion_point(field_get:User.SpeedUpResp.commons)
  return commons_ != NULL ? *commons_ : *default_instance_->commons_;
}
inline ::DataCommon::CommonItemsCPP* SpeedUpResp::mutable_commons() {
  set_has_commons();
  if (commons_ == NULL) commons_ = new ::DataCommon::CommonItemsCPP;
  // @@protoc_insertion_point(field_mutable:User.SpeedUpResp.commons)
  return commons_;
}
inline ::DataCommon::CommonItemsCPP* SpeedUpResp::release_commons() {
  clear_has_commons();
  ::DataCommon::CommonItemsCPP* temp = commons_;
  commons_ = NULL;
  return temp;
}
inline void SpeedUpResp::set_allocated_commons(::DataCommon::CommonItemsCPP* commons) {
  delete commons_;
  commons_ = commons;
  if (commons) {
    set_has_commons();
  } else {
    clear_has_commons();
  }
  // @@protoc_insertion_point(field_set_allocated:User.SpeedUpResp.commons)
}

// -------------------------------------------------------------------

// BuyMaterialInfo

// required uint32 propsid = 1;
inline bool BuyMaterialInfo::has_propsid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BuyMaterialInfo::set_has_propsid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BuyMaterialInfo::clear_has_propsid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BuyMaterialInfo::clear_propsid() {
  propsid_ = 0u;
  clear_has_propsid();
}
inline ::google::protobuf::uint32 BuyMaterialInfo::propsid() const {
  // @@protoc_insertion_point(field_get:User.BuyMaterialInfo.propsid)
  return propsid_;
}
inline void BuyMaterialInfo::set_propsid(::google::protobuf::uint32 value) {
  set_has_propsid();
  propsid_ = value;
  // @@protoc_insertion_point(field_set:User.BuyMaterialInfo.propsid)
}

// required uint32 propscnt = 2;
inline bool BuyMaterialInfo::has_propscnt() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BuyMaterialInfo::set_has_propscnt() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BuyMaterialInfo::clear_has_propscnt() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BuyMaterialInfo::clear_propscnt() {
  propscnt_ = 0u;
  clear_has_propscnt();
}
inline ::google::protobuf::uint32 BuyMaterialInfo::propscnt() const {
  // @@protoc_insertion_point(field_get:User.BuyMaterialInfo.propscnt)
  return propscnt_;
}
inline void BuyMaterialInfo::set_propscnt(::google::protobuf::uint32 value) {
  set_has_propscnt();
  propscnt_ = value;
  // @@protoc_insertion_point(field_set:User.BuyMaterialInfo.propscnt)
}

// -------------------------------------------------------------------

// BuyMaterialReq

// repeated .User.BuyMaterialInfo buyinfo = 1;
inline int BuyMaterialReq::buyinfo_size() const {
  return buyinfo_.size();
}
inline void BuyMaterialReq::clear_buyinfo() {
  buyinfo_.Clear();
}
inline const ::User::BuyMaterialInfo& BuyMaterialReq::buyinfo(int index) const {
  // @@protoc_insertion_point(field_get:User.BuyMaterialReq.buyinfo)
  return buyinfo_.Get(index);
}
inline ::User::BuyMaterialInfo* BuyMaterialReq::mutable_buyinfo(int index) {
  // @@protoc_insertion_point(field_mutable:User.BuyMaterialReq.buyinfo)
  return buyinfo_.Mutable(index);
}
inline ::User::BuyMaterialInfo* BuyMaterialReq::add_buyinfo() {
  // @@protoc_insertion_point(field_add:User.BuyMaterialReq.buyinfo)
  return buyinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::User::BuyMaterialInfo >&
BuyMaterialReq::buyinfo() const {
  // @@protoc_insertion_point(field_list:User.BuyMaterialReq.buyinfo)
  return buyinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::User::BuyMaterialInfo >*
BuyMaterialReq::mutable_buyinfo() {
  // @@protoc_insertion_point(field_mutable_list:User.BuyMaterialReq.buyinfo)
  return &buyinfo_;
}

// required uint32 seq = 2;
inline bool BuyMaterialReq::has_seq() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BuyMaterialReq::set_has_seq() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BuyMaterialReq::clear_has_seq() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BuyMaterialReq::clear_seq() {
  seq_ = 0u;
  clear_has_seq();
}
inline ::google::protobuf::uint32 BuyMaterialReq::seq() const {
  // @@protoc_insertion_point(field_get:User.BuyMaterialReq.seq)
  return seq_;
}
inline void BuyMaterialReq::set_seq(::google::protobuf::uint32 value) {
  set_has_seq();
  seq_ = value;
  // @@protoc_insertion_point(field_set:User.BuyMaterialReq.seq)
}

// -------------------------------------------------------------------

// BuyMaterialResp

// required .DataCommon.CommonItemsCPP commons = 1;
inline bool BuyMaterialResp::has_commons() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BuyMaterialResp::set_has_commons() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BuyMaterialResp::clear_has_commons() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BuyMaterialResp::clear_commons() {
  if (commons_ != NULL) commons_->::DataCommon::CommonItemsCPP::Clear();
  clear_has_commons();
}
inline const ::DataCommon::CommonItemsCPP& BuyMaterialResp::commons() const {
  // @@protoc_insertion_point(field_get:User.BuyMaterialResp.commons)
  return commons_ != NULL ? *commons_ : *default_instance_->commons_;
}
inline ::DataCommon::CommonItemsCPP* BuyMaterialResp::mutable_commons() {
  set_has_commons();
  if (commons_ == NULL) commons_ = new ::DataCommon::CommonItemsCPP;
  // @@protoc_insertion_point(field_mutable:User.BuyMaterialResp.commons)
  return commons_;
}
inline ::DataCommon::CommonItemsCPP* BuyMaterialResp::release_commons() {
  clear_has_commons();
  ::DataCommon::CommonItemsCPP* temp = commons_;
  commons_ = NULL;
  return temp;
}
inline void BuyMaterialResp::set_allocated_commons(::DataCommon::CommonItemsCPP* commons) {
  delete commons_;
  commons_ = commons;
  if (commons) {
    set_has_commons();
  } else {
    clear_has_commons();
  }
  // @@protoc_insertion_point(field_set_allocated:User.BuyMaterialResp.commons)
}

// required uint32 seq = 2;
inline bool BuyMaterialResp::has_seq() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BuyMaterialResp::set_has_seq() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BuyMaterialResp::clear_has_seq() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BuyMaterialResp::clear_seq() {
  seq_ = 0u;
  clear_has_seq();
}
inline ::google::protobuf::uint32 BuyMaterialResp::seq() const {
  // @@protoc_insertion_point(field_get:User.BuyMaterialResp.seq)
  return seq_;
}
inline void BuyMaterialResp::set_seq(::google::protobuf::uint32 value) {
  set_has_seq();
  seq_ = value;
  // @@protoc_insertion_point(field_set:User.BuyMaterialResp.seq)
}

// -------------------------------------------------------------------

// CriticalRewardsResp

// required .DataCommon.CommonItemsCPP commons = 1;
inline bool CriticalRewardsResp::has_commons() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CriticalRewardsResp::set_has_commons() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CriticalRewardsResp::clear_has_commons() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CriticalRewardsResp::clear_commons() {
  if (commons_ != NULL) commons_->::DataCommon::CommonItemsCPP::Clear();
  clear_has_commons();
}
inline const ::DataCommon::CommonItemsCPP& CriticalRewardsResp::commons() const {
  // @@protoc_insertion_point(field_get:User.CriticalRewardsResp.commons)
  return commons_ != NULL ? *commons_ : *default_instance_->commons_;
}
inline ::DataCommon::CommonItemsCPP* CriticalRewardsResp::mutable_commons() {
  set_has_commons();
  if (commons_ == NULL) commons_ = new ::DataCommon::CommonItemsCPP;
  // @@protoc_insertion_point(field_mutable:User.CriticalRewardsResp.commons)
  return commons_;
}
inline ::DataCommon::CommonItemsCPP* CriticalRewardsResp::release_commons() {
  clear_has_commons();
  ::DataCommon::CommonItemsCPP* temp = commons_;
  commons_ = NULL;
  return temp;
}
inline void CriticalRewardsResp::set_allocated_commons(::DataCommon::CommonItemsCPP* commons) {
  delete commons_;
  commons_ = commons;
  if (commons) {
    set_has_commons();
  } else {
    clear_has_commons();
  }
  // @@protoc_insertion_point(field_set_allocated:User.CriticalRewardsResp.commons)
}

// -------------------------------------------------------------------

// LevelRewardsResp

// required .DataCommon.CommonItemsCPP commons = 1;
inline bool LevelRewardsResp::has_commons() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LevelRewardsResp::set_has_commons() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LevelRewardsResp::clear_has_commons() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LevelRewardsResp::clear_commons() {
  if (commons_ != NULL) commons_->::DataCommon::CommonItemsCPP::Clear();
  clear_has_commons();
}
inline const ::DataCommon::CommonItemsCPP& LevelRewardsResp::commons() const {
  // @@protoc_insertion_point(field_get:User.LevelRewardsResp.commons)
  return commons_ != NULL ? *commons_ : *default_instance_->commons_;
}
inline ::DataCommon::CommonItemsCPP* LevelRewardsResp::mutable_commons() {
  set_has_commons();
  if (commons_ == NULL) commons_ = new ::DataCommon::CommonItemsCPP;
  // @@protoc_insertion_point(field_mutable:User.LevelRewardsResp.commons)
  return commons_;
}
inline ::DataCommon::CommonItemsCPP* LevelRewardsResp::release_commons() {
  clear_has_commons();
  ::DataCommon::CommonItemsCPP* temp = commons_;
  commons_ = NULL;
  return temp;
}
inline void LevelRewardsResp::set_allocated_commons(::DataCommon::CommonItemsCPP* commons) {
  delete commons_;
  commons_ = commons;
  if (commons) {
    set_has_commons();
  } else {
    clear_has_commons();
  }
  // @@protoc_insertion_point(field_set_allocated:User.LevelRewardsResp.commons)
}

// -------------------------------------------------------------------

// DaliyShareReq

// -------------------------------------------------------------------

// DaliyShareResp

// required uint32 days = 1;
inline bool DaliyShareResp::has_days() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DaliyShareResp::set_has_days() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DaliyShareResp::clear_has_days() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DaliyShareResp::clear_days() {
  days_ = 0u;
  clear_has_days();
}
inline ::google::protobuf::uint32 DaliyShareResp::days() const {
  // @@protoc_insertion_point(field_get:User.DaliyShareResp.days)
  return days_;
}
inline void DaliyShareResp::set_days(::google::protobuf::uint32 value) {
  set_has_days();
  days_ = value;
  // @@protoc_insertion_point(field_set:User.DaliyShareResp.days)
}

// required uint32 rewardts = 2;
inline bool DaliyShareResp::has_rewardts() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DaliyShareResp::set_has_rewardts() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DaliyShareResp::clear_has_rewardts() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DaliyShareResp::clear_rewardts() {
  rewardts_ = 0u;
  clear_has_rewardts();
}
inline ::google::protobuf::uint32 DaliyShareResp::rewardts() const {
  // @@protoc_insertion_point(field_get:User.DaliyShareResp.rewardts)
  return rewardts_;
}
inline void DaliyShareResp::set_rewardts(::google::protobuf::uint32 value) {
  set_has_rewardts();
  rewardts_ = value;
  // @@protoc_insertion_point(field_set:User.DaliyShareResp.rewardts)
}

// -------------------------------------------------------------------

// ShareRewardsReq

// -------------------------------------------------------------------

// ShareRewardsResp

// required .DataCommon.CommonItemsCPP commons = 1;
inline bool ShareRewardsResp::has_commons() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ShareRewardsResp::set_has_commons() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ShareRewardsResp::clear_has_commons() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ShareRewardsResp::clear_commons() {
  if (commons_ != NULL) commons_->::DataCommon::CommonItemsCPP::Clear();
  clear_has_commons();
}
inline const ::DataCommon::CommonItemsCPP& ShareRewardsResp::commons() const {
  // @@protoc_insertion_point(field_get:User.ShareRewardsResp.commons)
  return commons_ != NULL ? *commons_ : *default_instance_->commons_;
}
inline ::DataCommon::CommonItemsCPP* ShareRewardsResp::mutable_commons() {
  set_has_commons();
  if (commons_ == NULL) commons_ = new ::DataCommon::CommonItemsCPP;
  // @@protoc_insertion_point(field_mutable:User.ShareRewardsResp.commons)
  return commons_;
}
inline ::DataCommon::CommonItemsCPP* ShareRewardsResp::release_commons() {
  clear_has_commons();
  ::DataCommon::CommonItemsCPP* temp = commons_;
  commons_ = NULL;
  return temp;
}
inline void ShareRewardsResp::set_allocated_commons(::DataCommon::CommonItemsCPP* commons) {
  delete commons_;
  commons_ = commons;
  if (commons) {
    set_has_commons();
  } else {
    clear_has_commons();
  }
  // @@protoc_insertion_point(field_set_allocated:User.ShareRewardsResp.commons)
}

// required uint32 rewardts = 2;
inline bool ShareRewardsResp::has_rewardts() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ShareRewardsResp::set_has_rewardts() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ShareRewardsResp::clear_has_rewardts() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ShareRewardsResp::clear_rewardts() {
  rewardts_ = 0u;
  clear_has_rewardts();
}
inline ::google::protobuf::uint32 ShareRewardsResp::rewardts() const {
  // @@protoc_insertion_point(field_get:User.ShareRewardsResp.rewardts)
  return rewardts_;
}
inline void ShareRewardsResp::set_rewardts(::google::protobuf::uint32 value) {
  set_has_rewardts();
  rewardts_ = value;
  // @@protoc_insertion_point(field_set:User.ShareRewardsResp.rewardts)
}

// -------------------------------------------------------------------

// ShareTotalRewardsReq

// required uint32 day = 1;
inline bool ShareTotalRewardsReq::has_day() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ShareTotalRewardsReq::set_has_day() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ShareTotalRewardsReq::clear_has_day() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ShareTotalRewardsReq::clear_day() {
  day_ = 0u;
  clear_has_day();
}
inline ::google::protobuf::uint32 ShareTotalRewardsReq::day() const {
  // @@protoc_insertion_point(field_get:User.ShareTotalRewardsReq.day)
  return day_;
}
inline void ShareTotalRewardsReq::set_day(::google::protobuf::uint32 value) {
  set_has_day();
  day_ = value;
  // @@protoc_insertion_point(field_set:User.ShareTotalRewardsReq.day)
}

// -------------------------------------------------------------------

// ShareTotalRewardsResp

// required .DataCommon.CommonItemsCPP commons = 1;
inline bool ShareTotalRewardsResp::has_commons() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ShareTotalRewardsResp::set_has_commons() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ShareTotalRewardsResp::clear_has_commons() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ShareTotalRewardsResp::clear_commons() {
  if (commons_ != NULL) commons_->::DataCommon::CommonItemsCPP::Clear();
  clear_has_commons();
}
inline const ::DataCommon::CommonItemsCPP& ShareTotalRewardsResp::commons() const {
  // @@protoc_insertion_point(field_get:User.ShareTotalRewardsResp.commons)
  return commons_ != NULL ? *commons_ : *default_instance_->commons_;
}
inline ::DataCommon::CommonItemsCPP* ShareTotalRewardsResp::mutable_commons() {
  set_has_commons();
  if (commons_ == NULL) commons_ = new ::DataCommon::CommonItemsCPP;
  // @@protoc_insertion_point(field_mutable:User.ShareTotalRewardsResp.commons)
  return commons_;
}
inline ::DataCommon::CommonItemsCPP* ShareTotalRewardsResp::release_commons() {
  clear_has_commons();
  ::DataCommon::CommonItemsCPP* temp = commons_;
  commons_ = NULL;
  return temp;
}
inline void ShareTotalRewardsResp::set_allocated_commons(::DataCommon::CommonItemsCPP* commons) {
  delete commons_;
  commons_ = commons;
  if (commons) {
    set_has_commons();
  } else {
    clear_has_commons();
  }
  // @@protoc_insertion_point(field_set_allocated:User.ShareTotalRewardsResp.commons)
}

// required uint32 marks = 2;
inline bool ShareTotalRewardsResp::has_marks() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ShareTotalRewardsResp::set_has_marks() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ShareTotalRewardsResp::clear_has_marks() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ShareTotalRewardsResp::clear_marks() {
  marks_ = 0u;
  clear_has_marks();
}
inline ::google::protobuf::uint32 ShareTotalRewardsResp::marks() const {
  // @@protoc_insertion_point(field_get:User.ShareTotalRewardsResp.marks)
  return marks_;
}
inline void ShareTotalRewardsResp::set_marks(::google::protobuf::uint32 value) {
  set_has_marks();
  marks_ = value;
  // @@protoc_insertion_point(field_set:User.ShareTotalRewardsResp.marks)
}

// -------------------------------------------------------------------

// PurchaseCoinReq

// required uint32 id = 1;
inline bool PurchaseCoinReq::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PurchaseCoinReq::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PurchaseCoinReq::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PurchaseCoinReq::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 PurchaseCoinReq::id() const {
  // @@protoc_insertion_point(field_get:User.PurchaseCoinReq.id)
  return id_;
}
inline void PurchaseCoinReq::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:User.PurchaseCoinReq.id)
}

// -------------------------------------------------------------------

// PurchaseCoinResp

// required .DataCommon.CommonItemsCPP commons = 1;
inline bool PurchaseCoinResp::has_commons() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PurchaseCoinResp::set_has_commons() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PurchaseCoinResp::clear_has_commons() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PurchaseCoinResp::clear_commons() {
  if (commons_ != NULL) commons_->::DataCommon::CommonItemsCPP::Clear();
  clear_has_commons();
}
inline const ::DataCommon::CommonItemsCPP& PurchaseCoinResp::commons() const {
  // @@protoc_insertion_point(field_get:User.PurchaseCoinResp.commons)
  return commons_ != NULL ? *commons_ : *default_instance_->commons_;
}
inline ::DataCommon::CommonItemsCPP* PurchaseCoinResp::mutable_commons() {
  set_has_commons();
  if (commons_ == NULL) commons_ = new ::DataCommon::CommonItemsCPP;
  // @@protoc_insertion_point(field_mutable:User.PurchaseCoinResp.commons)
  return commons_;
}
inline ::DataCommon::CommonItemsCPP* PurchaseCoinResp::release_commons() {
  clear_has_commons();
  ::DataCommon::CommonItemsCPP* temp = commons_;
  commons_ = NULL;
  return temp;
}
inline void PurchaseCoinResp::set_allocated_commons(::DataCommon::CommonItemsCPP* commons) {
  delete commons_;
  commons_ = commons;
  if (commons) {
    set_has_commons();
  } else {
    clear_has_commons();
  }
  // @@protoc_insertion_point(field_set_allocated:User.PurchaseCoinResp.commons)
}

// -------------------------------------------------------------------

// SignInRewardsReq

// required uint32 day = 1;
inline bool SignInRewardsReq::has_day() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SignInRewardsReq::set_has_day() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SignInRewardsReq::clear_has_day() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SignInRewardsReq::clear_day() {
  day_ = 0u;
  clear_has_day();
}
inline ::google::protobuf::uint32 SignInRewardsReq::day() const {
  // @@protoc_insertion_point(field_get:User.SignInRewardsReq.day)
  return day_;
}
inline void SignInRewardsReq::set_day(::google::protobuf::uint32 value) {
  set_has_day();
  day_ = value;
  // @@protoc_insertion_point(field_set:User.SignInRewardsReq.day)
}

// -------------------------------------------------------------------

// SignInRewardsResp

// optional .DataCommon.CommonItemsCPP commons = 1;
inline bool SignInRewardsResp::has_commons() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SignInRewardsResp::set_has_commons() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SignInRewardsResp::clear_has_commons() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SignInRewardsResp::clear_commons() {
  if (commons_ != NULL) commons_->::DataCommon::CommonItemsCPP::Clear();
  clear_has_commons();
}
inline const ::DataCommon::CommonItemsCPP& SignInRewardsResp::commons() const {
  // @@protoc_insertion_point(field_get:User.SignInRewardsResp.commons)
  return commons_ != NULL ? *commons_ : *default_instance_->commons_;
}
inline ::DataCommon::CommonItemsCPP* SignInRewardsResp::mutable_commons() {
  set_has_commons();
  if (commons_ == NULL) commons_ = new ::DataCommon::CommonItemsCPP;
  // @@protoc_insertion_point(field_mutable:User.SignInRewardsResp.commons)
  return commons_;
}
inline ::DataCommon::CommonItemsCPP* SignInRewardsResp::release_commons() {
  clear_has_commons();
  ::DataCommon::CommonItemsCPP* temp = commons_;
  commons_ = NULL;
  return temp;
}
inline void SignInRewardsResp::set_allocated_commons(::DataCommon::CommonItemsCPP* commons) {
  delete commons_;
  commons_ = commons;
  if (commons) {
    set_has_commons();
  } else {
    clear_has_commons();
  }
  // @@protoc_insertion_point(field_set_allocated:User.SignInRewardsResp.commons)
}

// required uint32 marks = 2;
inline bool SignInRewardsResp::has_marks() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SignInRewardsResp::set_has_marks() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SignInRewardsResp::clear_has_marks() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SignInRewardsResp::clear_marks() {
  marks_ = 0u;
  clear_has_marks();
}
inline ::google::protobuf::uint32 SignInRewardsResp::marks() const {
  // @@protoc_insertion_point(field_get:User.SignInRewardsResp.marks)
  return marks_;
}
inline void SignInRewardsResp::set_marks(::google::protobuf::uint32 value) {
  set_has_marks();
  marks_ = value;
  // @@protoc_insertion_point(field_set:User.SignInRewardsResp.marks)
}

// -------------------------------------------------------------------

// SetVersion

// required uint32 version = 1;
inline bool SetVersion::has_version() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SetVersion::set_has_version() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SetVersion::clear_has_version() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SetVersion::clear_version() {
  version_ = 0u;
  clear_has_version();
}
inline ::google::protobuf::uint32 SetVersion::version() const {
  // @@protoc_insertion_point(field_get:User.SetVersion.version)
  return version_;
}
inline void SetVersion::set_version(::google::protobuf::uint32 value) {
  set_has_version();
  version_ = value;
  // @@protoc_insertion_point(field_set:User.SetVersion.version)
}

// -------------------------------------------------------------------

// SetFlag

// required uint32 flagId = 1;
inline bool SetFlag::has_flagid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SetFlag::set_has_flagid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SetFlag::clear_has_flagid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SetFlag::clear_flagid() {
  flagid_ = 0u;
  clear_has_flagid();
}
inline ::google::protobuf::uint32 SetFlag::flagid() const {
  // @@protoc_insertion_point(field_get:User.SetFlag.flagId)
  return flagid_;
}
inline void SetFlag::set_flagid(::google::protobuf::uint32 value) {
  set_has_flagid();
  flagid_ = value;
  // @@protoc_insertion_point(field_set:User.SetFlag.flagId)
}

// optional uint32 isCostDimaond = 2;
inline bool SetFlag::has_iscostdimaond() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SetFlag::set_has_iscostdimaond() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SetFlag::clear_has_iscostdimaond() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SetFlag::clear_iscostdimaond() {
  iscostdimaond_ = 0u;
  clear_has_iscostdimaond();
}
inline ::google::protobuf::uint32 SetFlag::iscostdimaond() const {
  // @@protoc_insertion_point(field_get:User.SetFlag.isCostDimaond)
  return iscostdimaond_;
}
inline void SetFlag::set_iscostdimaond(::google::protobuf::uint32 value) {
  set_has_iscostdimaond();
  iscostdimaond_ = value;
  // @@protoc_insertion_point(field_set:User.SetFlag.isCostDimaond)
}

// -------------------------------------------------------------------

// GetFlagResp

// required uint32 flag = 1;
inline bool GetFlagResp::has_flag() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetFlagResp::set_has_flag() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetFlagResp::clear_has_flag() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetFlagResp::clear_flag() {
  flag_ = 0u;
  clear_has_flag();
}
inline ::google::protobuf::uint32 GetFlagResp::flag() const {
  // @@protoc_insertion_point(field_get:User.GetFlagResp.flag)
  return flag_;
}
inline void GetFlagResp::set_flag(::google::protobuf::uint32 value) {
  set_has_flag();
  flag_ = value;
  // @@protoc_insertion_point(field_set:User.GetFlagResp.flag)
}

// optional .DataCommon.CommonItemsCPP commons = 2;
inline bool GetFlagResp::has_commons() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetFlagResp::set_has_commons() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetFlagResp::clear_has_commons() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetFlagResp::clear_commons() {
  if (commons_ != NULL) commons_->::DataCommon::CommonItemsCPP::Clear();
  clear_has_commons();
}
inline const ::DataCommon::CommonItemsCPP& GetFlagResp::commons() const {
  // @@protoc_insertion_point(field_get:User.GetFlagResp.commons)
  return commons_ != NULL ? *commons_ : *default_instance_->commons_;
}
inline ::DataCommon::CommonItemsCPP* GetFlagResp::mutable_commons() {
  set_has_commons();
  if (commons_ == NULL) commons_ = new ::DataCommon::CommonItemsCPP;
  // @@protoc_insertion_point(field_mutable:User.GetFlagResp.commons)
  return commons_;
}
inline ::DataCommon::CommonItemsCPP* GetFlagResp::release_commons() {
  clear_has_commons();
  ::DataCommon::CommonItemsCPP* temp = commons_;
  commons_ = NULL;
  return temp;
}
inline void GetFlagResp::set_allocated_commons(::DataCommon::CommonItemsCPP* commons) {
  delete commons_;
  commons_ = commons;
  if (commons) {
    set_has_commons();
  } else {
    clear_has_commons();
  }
  // @@protoc_insertion_point(field_set_allocated:User.GetFlagResp.commons)
}

// -------------------------------------------------------------------

// ThumbsUpCPP

// repeated uint32 index = 1;
inline int ThumbsUpCPP::index_size() const {
  return index_.size();
}
inline void ThumbsUpCPP::clear_index() {
  index_.Clear();
}
inline ::google::protobuf::uint32 ThumbsUpCPP::index(int index) const {
  // @@protoc_insertion_point(field_get:User.ThumbsUpCPP.index)
  return index_.Get(index);
}
inline void ThumbsUpCPP::set_index(int index, ::google::protobuf::uint32 value) {
  index_.Set(index, value);
  // @@protoc_insertion_point(field_set:User.ThumbsUpCPP.index)
}
inline void ThumbsUpCPP::add_index(::google::protobuf::uint32 value) {
  index_.Add(value);
  // @@protoc_insertion_point(field_add:User.ThumbsUpCPP.index)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
ThumbsUpCPP::index() const {
  // @@protoc_insertion_point(field_list:User.ThumbsUpCPP.index)
  return index_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
ThumbsUpCPP::mutable_index() {
  // @@protoc_insertion_point(field_mutable_list:User.ThumbsUpCPP.index)
  return &index_;
}

// -------------------------------------------------------------------

// GetThumbsUpReq

// -------------------------------------------------------------------

// GetThumbsUpResp

// required .User.ThumbsUpCPP thumbsup = 1;
inline bool GetThumbsUpResp::has_thumbsup() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetThumbsUpResp::set_has_thumbsup() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetThumbsUpResp::clear_has_thumbsup() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetThumbsUpResp::clear_thumbsup() {
  if (thumbsup_ != NULL) thumbsup_->::User::ThumbsUpCPP::Clear();
  clear_has_thumbsup();
}
inline const ::User::ThumbsUpCPP& GetThumbsUpResp::thumbsup() const {
  // @@protoc_insertion_point(field_get:User.GetThumbsUpResp.thumbsup)
  return thumbsup_ != NULL ? *thumbsup_ : *default_instance_->thumbsup_;
}
inline ::User::ThumbsUpCPP* GetThumbsUpResp::mutable_thumbsup() {
  set_has_thumbsup();
  if (thumbsup_ == NULL) thumbsup_ = new ::User::ThumbsUpCPP;
  // @@protoc_insertion_point(field_mutable:User.GetThumbsUpResp.thumbsup)
  return thumbsup_;
}
inline ::User::ThumbsUpCPP* GetThumbsUpResp::release_thumbsup() {
  clear_has_thumbsup();
  ::User::ThumbsUpCPP* temp = thumbsup_;
  thumbsup_ = NULL;
  return temp;
}
inline void GetThumbsUpResp::set_allocated_thumbsup(::User::ThumbsUpCPP* thumbsup) {
  delete thumbsup_;
  thumbsup_ = thumbsup;
  if (thumbsup) {
    set_has_thumbsup();
  } else {
    clear_has_thumbsup();
  }
  // @@protoc_insertion_point(field_set_allocated:User.GetThumbsUpResp.thumbsup)
}

// -------------------------------------------------------------------

// RankThumbsUpReq

// required uint32 othuid = 1;
inline bool RankThumbsUpReq::has_othuid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RankThumbsUpReq::set_has_othuid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RankThumbsUpReq::clear_has_othuid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RankThumbsUpReq::clear_othuid() {
  othuid_ = 0u;
  clear_has_othuid();
}
inline ::google::protobuf::uint32 RankThumbsUpReq::othuid() const {
  // @@protoc_insertion_point(field_get:User.RankThumbsUpReq.othuid)
  return othuid_;
}
inline void RankThumbsUpReq::set_othuid(::google::protobuf::uint32 value) {
  set_has_othuid();
  othuid_ = value;
  // @@protoc_insertion_point(field_set:User.RankThumbsUpReq.othuid)
}

// required uint32 index1 = 2;
inline bool RankThumbsUpReq::has_index1() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RankThumbsUpReq::set_has_index1() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RankThumbsUpReq::clear_has_index1() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RankThumbsUpReq::clear_index1() {
  index1_ = 0u;
  clear_has_index1();
}
inline ::google::protobuf::uint32 RankThumbsUpReq::index1() const {
  // @@protoc_insertion_point(field_get:User.RankThumbsUpReq.index1)
  return index1_;
}
inline void RankThumbsUpReq::set_index1(::google::protobuf::uint32 value) {
  set_has_index1();
  index1_ = value;
  // @@protoc_insertion_point(field_set:User.RankThumbsUpReq.index1)
}

// required uint32 index2 = 3;
inline bool RankThumbsUpReq::has_index2() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RankThumbsUpReq::set_has_index2() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RankThumbsUpReq::clear_has_index2() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RankThumbsUpReq::clear_index2() {
  index2_ = 0u;
  clear_has_index2();
}
inline ::google::protobuf::uint32 RankThumbsUpReq::index2() const {
  // @@protoc_insertion_point(field_get:User.RankThumbsUpReq.index2)
  return index2_;
}
inline void RankThumbsUpReq::set_index2(::google::protobuf::uint32 value) {
  set_has_index2();
  index2_ = value;
  // @@protoc_insertion_point(field_set:User.RankThumbsUpReq.index2)
}

// -------------------------------------------------------------------

// RankThumbsUpResp

// required .User.ThumbsUpCPP thumbsup = 1;
inline bool RankThumbsUpResp::has_thumbsup() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RankThumbsUpResp::set_has_thumbsup() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RankThumbsUpResp::clear_has_thumbsup() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RankThumbsUpResp::clear_thumbsup() {
  if (thumbsup_ != NULL) thumbsup_->::User::ThumbsUpCPP::Clear();
  clear_has_thumbsup();
}
inline const ::User::ThumbsUpCPP& RankThumbsUpResp::thumbsup() const {
  // @@protoc_insertion_point(field_get:User.RankThumbsUpResp.thumbsup)
  return thumbsup_ != NULL ? *thumbsup_ : *default_instance_->thumbsup_;
}
inline ::User::ThumbsUpCPP* RankThumbsUpResp::mutable_thumbsup() {
  set_has_thumbsup();
  if (thumbsup_ == NULL) thumbsup_ = new ::User::ThumbsUpCPP;
  // @@protoc_insertion_point(field_mutable:User.RankThumbsUpResp.thumbsup)
  return thumbsup_;
}
inline ::User::ThumbsUpCPP* RankThumbsUpResp::release_thumbsup() {
  clear_has_thumbsup();
  ::User::ThumbsUpCPP* temp = thumbsup_;
  thumbsup_ = NULL;
  return temp;
}
inline void RankThumbsUpResp::set_allocated_thumbsup(::User::ThumbsUpCPP* thumbsup) {
  delete thumbsup_;
  thumbsup_ = thumbsup;
  if (thumbsup) {
    set_has_thumbsup();
  } else {
    clear_has_thumbsup();
  }
  // @@protoc_insertion_point(field_set_allocated:User.RankThumbsUpResp.thumbsup)
}

// required .DataCommon.CommonItemsCPP commons = 2;
inline bool RankThumbsUpResp::has_commons() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RankThumbsUpResp::set_has_commons() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RankThumbsUpResp::clear_has_commons() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RankThumbsUpResp::clear_commons() {
  if (commons_ != NULL) commons_->::DataCommon::CommonItemsCPP::Clear();
  clear_has_commons();
}
inline const ::DataCommon::CommonItemsCPP& RankThumbsUpResp::commons() const {
  // @@protoc_insertion_point(field_get:User.RankThumbsUpResp.commons)
  return commons_ != NULL ? *commons_ : *default_instance_->commons_;
}
inline ::DataCommon::CommonItemsCPP* RankThumbsUpResp::mutable_commons() {
  set_has_commons();
  if (commons_ == NULL) commons_ = new ::DataCommon::CommonItemsCPP;
  // @@protoc_insertion_point(field_mutable:User.RankThumbsUpResp.commons)
  return commons_;
}
inline ::DataCommon::CommonItemsCPP* RankThumbsUpResp::release_commons() {
  clear_has_commons();
  ::DataCommon::CommonItemsCPP* temp = commons_;
  commons_ = NULL;
  return temp;
}
inline void RankThumbsUpResp::set_allocated_commons(::DataCommon::CommonItemsCPP* commons) {
  delete commons_;
  commons_ = commons;
  if (commons) {
    set_has_commons();
  } else {
    clear_has_commons();
  }
  // @@protoc_insertion_point(field_set_allocated:User.RankThumbsUpResp.commons)
}

// -------------------------------------------------------------------

// CSRankThumbsUpReq

// required uint32 myuid = 1;
inline bool CSRankThumbsUpReq::has_myuid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSRankThumbsUpReq::set_has_myuid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSRankThumbsUpReq::clear_has_myuid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSRankThumbsUpReq::clear_myuid() {
  myuid_ = 0u;
  clear_has_myuid();
}
inline ::google::protobuf::uint32 CSRankThumbsUpReq::myuid() const {
  // @@protoc_insertion_point(field_get:User.CSRankThumbsUpReq.myuid)
  return myuid_;
}
inline void CSRankThumbsUpReq::set_myuid(::google::protobuf::uint32 value) {
  set_has_myuid();
  myuid_ = value;
  // @@protoc_insertion_point(field_set:User.CSRankThumbsUpReq.myuid)
}

// required uint32 othuid = 2;
inline bool CSRankThumbsUpReq::has_othuid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSRankThumbsUpReq::set_has_othuid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSRankThumbsUpReq::clear_has_othuid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSRankThumbsUpReq::clear_othuid() {
  othuid_ = 0u;
  clear_has_othuid();
}
inline ::google::protobuf::uint32 CSRankThumbsUpReq::othuid() const {
  // @@protoc_insertion_point(field_get:User.CSRankThumbsUpReq.othuid)
  return othuid_;
}
inline void CSRankThumbsUpReq::set_othuid(::google::protobuf::uint32 value) {
  set_has_othuid();
  othuid_ = value;
  // @@protoc_insertion_point(field_set:User.CSRankThumbsUpReq.othuid)
}

// required uint32 index1 = 3;
inline bool CSRankThumbsUpReq::has_index1() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSRankThumbsUpReq::set_has_index1() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSRankThumbsUpReq::clear_has_index1() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSRankThumbsUpReq::clear_index1() {
  index1_ = 0u;
  clear_has_index1();
}
inline ::google::protobuf::uint32 CSRankThumbsUpReq::index1() const {
  // @@protoc_insertion_point(field_get:User.CSRankThumbsUpReq.index1)
  return index1_;
}
inline void CSRankThumbsUpReq::set_index1(::google::protobuf::uint32 value) {
  set_has_index1();
  index1_ = value;
  // @@protoc_insertion_point(field_set:User.CSRankThumbsUpReq.index1)
}

// required uint32 index2 = 4;
inline bool CSRankThumbsUpReq::has_index2() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CSRankThumbsUpReq::set_has_index2() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CSRankThumbsUpReq::clear_has_index2() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CSRankThumbsUpReq::clear_index2() {
  index2_ = 0u;
  clear_has_index2();
}
inline ::google::protobuf::uint32 CSRankThumbsUpReq::index2() const {
  // @@protoc_insertion_point(field_get:User.CSRankThumbsUpReq.index2)
  return index2_;
}
inline void CSRankThumbsUpReq::set_index2(::google::protobuf::uint32 value) {
  set_has_index2();
  index2_ = value;
  // @@protoc_insertion_point(field_set:User.CSRankThumbsUpReq.index2)
}

// -------------------------------------------------------------------

// CSRankThumbsUpResp

// required uint32 myuid = 1;
inline bool CSRankThumbsUpResp::has_myuid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSRankThumbsUpResp::set_has_myuid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSRankThumbsUpResp::clear_has_myuid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSRankThumbsUpResp::clear_myuid() {
  myuid_ = 0u;
  clear_has_myuid();
}
inline ::google::protobuf::uint32 CSRankThumbsUpResp::myuid() const {
  // @@protoc_insertion_point(field_get:User.CSRankThumbsUpResp.myuid)
  return myuid_;
}
inline void CSRankThumbsUpResp::set_myuid(::google::protobuf::uint32 value) {
  set_has_myuid();
  myuid_ = value;
  // @@protoc_insertion_point(field_set:User.CSRankThumbsUpResp.myuid)
}

// required uint32 index1 = 2;
inline bool CSRankThumbsUpResp::has_index1() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSRankThumbsUpResp::set_has_index1() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSRankThumbsUpResp::clear_has_index1() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSRankThumbsUpResp::clear_index1() {
  index1_ = 0u;
  clear_has_index1();
}
inline ::google::protobuf::uint32 CSRankThumbsUpResp::index1() const {
  // @@protoc_insertion_point(field_get:User.CSRankThumbsUpResp.index1)
  return index1_;
}
inline void CSRankThumbsUpResp::set_index1(::google::protobuf::uint32 value) {
  set_has_index1();
  index1_ = value;
  // @@protoc_insertion_point(field_set:User.CSRankThumbsUpResp.index1)
}

// required uint32 index2 = 3;
inline bool CSRankThumbsUpResp::has_index2() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSRankThumbsUpResp::set_has_index2() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSRankThumbsUpResp::clear_has_index2() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSRankThumbsUpResp::clear_index2() {
  index2_ = 0u;
  clear_has_index2();
}
inline ::google::protobuf::uint32 CSRankThumbsUpResp::index2() const {
  // @@protoc_insertion_point(field_get:User.CSRankThumbsUpResp.index2)
  return index2_;
}
inline void CSRankThumbsUpResp::set_index2(::google::protobuf::uint32 value) {
  set_has_index2();
  index2_ = value;
  // @@protoc_insertion_point(field_set:User.CSRankThumbsUpResp.index2)
}

// -------------------------------------------------------------------

// GetWorldChannelHelpCntReq

// -------------------------------------------------------------------

// GetWorldChannelHelpCntResp

// required uint32 remainCnt = 1;
inline bool GetWorldChannelHelpCntResp::has_remaincnt() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetWorldChannelHelpCntResp::set_has_remaincnt() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetWorldChannelHelpCntResp::clear_has_remaincnt() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetWorldChannelHelpCntResp::clear_remaincnt() {
  remaincnt_ = 0u;
  clear_has_remaincnt();
}
inline ::google::protobuf::uint32 GetWorldChannelHelpCntResp::remaincnt() const {
  // @@protoc_insertion_point(field_get:User.GetWorldChannelHelpCntResp.remainCnt)
  return remaincnt_;
}
inline void GetWorldChannelHelpCntResp::set_remaincnt(::google::protobuf::uint32 value) {
  set_has_remaincnt();
  remaincnt_ = value;
  // @@protoc_insertion_point(field_set:User.GetWorldChannelHelpCntResp.remainCnt)
}

// -------------------------------------------------------------------

// WorldChannelHelpReq

// -------------------------------------------------------------------

// WorldChannelHelpResp

// required uint32 remainCnt = 1;
inline bool WorldChannelHelpResp::has_remaincnt() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WorldChannelHelpResp::set_has_remaincnt() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WorldChannelHelpResp::clear_has_remaincnt() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WorldChannelHelpResp::clear_remaincnt() {
  remaincnt_ = 0u;
  clear_has_remaincnt();
}
inline ::google::protobuf::uint32 WorldChannelHelpResp::remaincnt() const {
  // @@protoc_insertion_point(field_get:User.WorldChannelHelpResp.remainCnt)
  return remaincnt_;
}
inline void WorldChannelHelpResp::set_remaincnt(::google::protobuf::uint32 value) {
  set_has_remaincnt();
  remaincnt_ = value;
  // @@protoc_insertion_point(field_set:User.WorldChannelHelpResp.remainCnt)
}

// -------------------------------------------------------------------

// SysMail

// required uint32 ts = 1;
inline bool SysMail::has_ts() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SysMail::set_has_ts() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SysMail::clear_has_ts() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SysMail::clear_ts() {
  ts_ = 0u;
  clear_has_ts();
}
inline ::google::protobuf::uint32 SysMail::ts() const {
  // @@protoc_insertion_point(field_get:User.SysMail.ts)
  return ts_;
}
inline void SysMail::set_ts(::google::protobuf::uint32 value) {
  set_has_ts();
  ts_ = value;
  // @@protoc_insertion_point(field_set:User.SysMail.ts)
}

// required uint32 stat = 2;
inline bool SysMail::has_stat() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SysMail::set_has_stat() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SysMail::clear_has_stat() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SysMail::clear_stat() {
  stat_ = 0u;
  clear_has_stat();
}
inline ::google::protobuf::uint32 SysMail::stat() const {
  // @@protoc_insertion_point(field_get:User.SysMail.stat)
  return stat_;
}
inline void SysMail::set_stat(::google::protobuf::uint32 value) {
  set_has_stat();
  stat_ = value;
  // @@protoc_insertion_point(field_set:User.SysMail.stat)
}

// required bytes sys = 3;
inline bool SysMail::has_sys() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SysMail::set_has_sys() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SysMail::clear_has_sys() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SysMail::clear_sys() {
  if (sys_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sys_->clear();
  }
  clear_has_sys();
}
inline const ::std::string& SysMail::sys() const {
  // @@protoc_insertion_point(field_get:User.SysMail.sys)
  return *sys_;
}
inline void SysMail::set_sys(const ::std::string& value) {
  set_has_sys();
  if (sys_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sys_ = new ::std::string;
  }
  sys_->assign(value);
  // @@protoc_insertion_point(field_set:User.SysMail.sys)
}
inline void SysMail::set_sys(const char* value) {
  set_has_sys();
  if (sys_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sys_ = new ::std::string;
  }
  sys_->assign(value);
  // @@protoc_insertion_point(field_set_char:User.SysMail.sys)
}
inline void SysMail::set_sys(const void* value, size_t size) {
  set_has_sys();
  if (sys_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sys_ = new ::std::string;
  }
  sys_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:User.SysMail.sys)
}
inline ::std::string* SysMail::mutable_sys() {
  set_has_sys();
  if (sys_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sys_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:User.SysMail.sys)
  return sys_;
}
inline ::std::string* SysMail::release_sys() {
  clear_has_sys();
  if (sys_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = sys_;
    sys_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void SysMail::set_allocated_sys(::std::string* sys) {
  if (sys_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete sys_;
  }
  if (sys) {
    set_has_sys();
    sys_ = sys;
  } else {
    clear_has_sys();
    sys_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:User.SysMail.sys)
}

// required bytes reward = 4;
inline bool SysMail::has_reward() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SysMail::set_has_reward() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SysMail::clear_has_reward() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SysMail::clear_reward() {
  if (reward_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    reward_->clear();
  }
  clear_has_reward();
}
inline const ::std::string& SysMail::reward() const {
  // @@protoc_insertion_point(field_get:User.SysMail.reward)
  return *reward_;
}
inline void SysMail::set_reward(const ::std::string& value) {
  set_has_reward();
  if (reward_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    reward_ = new ::std::string;
  }
  reward_->assign(value);
  // @@protoc_insertion_point(field_set:User.SysMail.reward)
}
inline void SysMail::set_reward(const char* value) {
  set_has_reward();
  if (reward_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    reward_ = new ::std::string;
  }
  reward_->assign(value);
  // @@protoc_insertion_point(field_set_char:User.SysMail.reward)
}
inline void SysMail::set_reward(const void* value, size_t size) {
  set_has_reward();
  if (reward_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    reward_ = new ::std::string;
  }
  reward_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:User.SysMail.reward)
}
inline ::std::string* SysMail::mutable_reward() {
  set_has_reward();
  if (reward_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    reward_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:User.SysMail.reward)
  return reward_;
}
inline ::std::string* SysMail::release_reward() {
  clear_has_reward();
  if (reward_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = reward_;
    reward_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void SysMail::set_allocated_reward(::std::string* reward) {
  if (reward_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete reward_;
  }
  if (reward) {
    set_has_reward();
    reward_ = reward;
  } else {
    clear_has_reward();
    reward_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:User.SysMail.reward)
}

// -------------------------------------------------------------------

// RequestSysMail

// -------------------------------------------------------------------

// ReplySysMail

// repeated .User.SysMail mail = 1;
inline int ReplySysMail::mail_size() const {
  return mail_.size();
}
inline void ReplySysMail::clear_mail() {
  mail_.Clear();
}
inline const ::User::SysMail& ReplySysMail::mail(int index) const {
  // @@protoc_insertion_point(field_get:User.ReplySysMail.mail)
  return mail_.Get(index);
}
inline ::User::SysMail* ReplySysMail::mutable_mail(int index) {
  // @@protoc_insertion_point(field_mutable:User.ReplySysMail.mail)
  return mail_.Mutable(index);
}
inline ::User::SysMail* ReplySysMail::add_mail() {
  // @@protoc_insertion_point(field_add:User.ReplySysMail.mail)
  return mail_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::User::SysMail >&
ReplySysMail::mail() const {
  // @@protoc_insertion_point(field_list:User.ReplySysMail.mail)
  return mail_;
}
inline ::google::protobuf::RepeatedPtrField< ::User::SysMail >*
ReplySysMail::mutable_mail() {
  // @@protoc_insertion_point(field_mutable_list:User.ReplySysMail.mail)
  return &mail_;
}

// -------------------------------------------------------------------

// RequestMailRead

// required uint32 ts = 1;
inline bool RequestMailRead::has_ts() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RequestMailRead::set_has_ts() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RequestMailRead::clear_has_ts() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RequestMailRead::clear_ts() {
  ts_ = 0u;
  clear_has_ts();
}
inline ::google::protobuf::uint32 RequestMailRead::ts() const {
  // @@protoc_insertion_point(field_get:User.RequestMailRead.ts)
  return ts_;
}
inline void RequestMailRead::set_ts(::google::protobuf::uint32 value) {
  set_has_ts();
  ts_ = value;
  // @@protoc_insertion_point(field_set:User.RequestMailRead.ts)
}

// -------------------------------------------------------------------

// ReplyMailRead

// required uint32 ts = 1;
inline bool ReplyMailRead::has_ts() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReplyMailRead::set_has_ts() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReplyMailRead::clear_has_ts() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReplyMailRead::clear_ts() {
  ts_ = 0u;
  clear_has_ts();
}
inline ::google::protobuf::uint32 ReplyMailRead::ts() const {
  // @@protoc_insertion_point(field_get:User.ReplyMailRead.ts)
  return ts_;
}
inline void ReplyMailRead::set_ts(::google::protobuf::uint32 value) {
  set_has_ts();
  ts_ = value;
  // @@protoc_insertion_point(field_set:User.ReplyMailRead.ts)
}

// required uint32 stat = 2;
inline bool ReplyMailRead::has_stat() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ReplyMailRead::set_has_stat() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ReplyMailRead::clear_has_stat() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ReplyMailRead::clear_stat() {
  stat_ = 0u;
  clear_has_stat();
}
inline ::google::protobuf::uint32 ReplyMailRead::stat() const {
  // @@protoc_insertion_point(field_get:User.ReplyMailRead.stat)
  return stat_;
}
inline void ReplyMailRead::set_stat(::google::protobuf::uint32 value) {
  set_has_stat();
  stat_ = value;
  // @@protoc_insertion_point(field_set:User.ReplyMailRead.stat)
}

// -------------------------------------------------------------------

// RequestMailGet

// required uint32 ts = 1;
inline bool RequestMailGet::has_ts() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RequestMailGet::set_has_ts() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RequestMailGet::clear_has_ts() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RequestMailGet::clear_ts() {
  ts_ = 0u;
  clear_has_ts();
}
inline ::google::protobuf::uint32 RequestMailGet::ts() const {
  // @@protoc_insertion_point(field_get:User.RequestMailGet.ts)
  return ts_;
}
inline void RequestMailGet::set_ts(::google::protobuf::uint32 value) {
  set_has_ts();
  ts_ = value;
  // @@protoc_insertion_point(field_set:User.RequestMailGet.ts)
}

// -------------------------------------------------------------------

// ReplyMailGet

// required uint32 ts = 1;
inline bool ReplyMailGet::has_ts() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReplyMailGet::set_has_ts() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReplyMailGet::clear_has_ts() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReplyMailGet::clear_ts() {
  ts_ = 0u;
  clear_has_ts();
}
inline ::google::protobuf::uint32 ReplyMailGet::ts() const {
  // @@protoc_insertion_point(field_get:User.ReplyMailGet.ts)
  return ts_;
}
inline void ReplyMailGet::set_ts(::google::protobuf::uint32 value) {
  set_has_ts();
  ts_ = value;
  // @@protoc_insertion_point(field_set:User.ReplyMailGet.ts)
}

// required uint32 stat = 2;
inline bool ReplyMailGet::has_stat() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ReplyMailGet::set_has_stat() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ReplyMailGet::clear_has_stat() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ReplyMailGet::clear_stat() {
  stat_ = 0u;
  clear_has_stat();
}
inline ::google::protobuf::uint32 ReplyMailGet::stat() const {
  // @@protoc_insertion_point(field_get:User.ReplyMailGet.stat)
  return stat_;
}
inline void ReplyMailGet::set_stat(::google::protobuf::uint32 value) {
  set_has_stat();
  stat_ = value;
  // @@protoc_insertion_point(field_set:User.ReplyMailGet.stat)
}

// optional .ProtoReward.RewardInfo reward = 3;
inline bool ReplyMailGet::has_reward() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ReplyMailGet::set_has_reward() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ReplyMailGet::clear_has_reward() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ReplyMailGet::clear_reward() {
  if (reward_ != NULL) reward_->::ProtoReward::RewardInfo::Clear();
  clear_has_reward();
}
inline const ::ProtoReward::RewardInfo& ReplyMailGet::reward() const {
  // @@protoc_insertion_point(field_get:User.ReplyMailGet.reward)
  return reward_ != NULL ? *reward_ : *default_instance_->reward_;
}
inline ::ProtoReward::RewardInfo* ReplyMailGet::mutable_reward() {
  set_has_reward();
  if (reward_ == NULL) reward_ = new ::ProtoReward::RewardInfo;
  // @@protoc_insertion_point(field_mutable:User.ReplyMailGet.reward)
  return reward_;
}
inline ::ProtoReward::RewardInfo* ReplyMailGet::release_reward() {
  clear_has_reward();
  ::ProtoReward::RewardInfo* temp = reward_;
  reward_ = NULL;
  return temp;
}
inline void ReplyMailGet::set_allocated_reward(::ProtoReward::RewardInfo* reward) {
  delete reward_;
  reward_ = reward;
  if (reward) {
    set_has_reward();
  } else {
    clear_has_reward();
  }
  // @@protoc_insertion_point(field_set_allocated:User.ReplyMailGet.reward)
}

// -------------------------------------------------------------------

// RequestMailDel

// required uint32 ts = 1;
inline bool RequestMailDel::has_ts() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RequestMailDel::set_has_ts() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RequestMailDel::clear_has_ts() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RequestMailDel::clear_ts() {
  ts_ = 0u;
  clear_has_ts();
}
inline ::google::protobuf::uint32 RequestMailDel::ts() const {
  // @@protoc_insertion_point(field_get:User.RequestMailDel.ts)
  return ts_;
}
inline void RequestMailDel::set_ts(::google::protobuf::uint32 value) {
  set_has_ts();
  ts_ = value;
  // @@protoc_insertion_point(field_set:User.RequestMailDel.ts)
}

// -------------------------------------------------------------------

// RequestMailAllGet

// -------------------------------------------------------------------

// ReplyMailAllGet

// optional .ProtoReward.RewardInfo reward = 1;
inline bool ReplyMailAllGet::has_reward() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReplyMailAllGet::set_has_reward() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReplyMailAllGet::clear_has_reward() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReplyMailAllGet::clear_reward() {
  if (reward_ != NULL) reward_->::ProtoReward::RewardInfo::Clear();
  clear_has_reward();
}
inline const ::ProtoReward::RewardInfo& ReplyMailAllGet::reward() const {
  // @@protoc_insertion_point(field_get:User.ReplyMailAllGet.reward)
  return reward_ != NULL ? *reward_ : *default_instance_->reward_;
}
inline ::ProtoReward::RewardInfo* ReplyMailAllGet::mutable_reward() {
  set_has_reward();
  if (reward_ == NULL) reward_ = new ::ProtoReward::RewardInfo;
  // @@protoc_insertion_point(field_mutable:User.ReplyMailAllGet.reward)
  return reward_;
}
inline ::ProtoReward::RewardInfo* ReplyMailAllGet::release_reward() {
  clear_has_reward();
  ::ProtoReward::RewardInfo* temp = reward_;
  reward_ = NULL;
  return temp;
}
inline void ReplyMailAllGet::set_allocated_reward(::ProtoReward::RewardInfo* reward) {
  delete reward_;
  reward_ = reward;
  if (reward) {
    set_has_reward();
  } else {
    clear_has_reward();
  }
  // @@protoc_insertion_point(field_set_allocated:User.ReplyMailAllGet.reward)
}

// -------------------------------------------------------------------

// RequestMailAllDel

// -------------------------------------------------------------------

// ReqNewMsg

// -------------------------------------------------------------------

// ReplyNewMsg

// repeated uint32 type = 1;
inline int ReplyNewMsg::type_size() const {
  return type_.size();
}
inline void ReplyNewMsg::clear_type() {
  type_.Clear();
}
inline ::google::protobuf::uint32 ReplyNewMsg::type(int index) const {
  // @@protoc_insertion_point(field_get:User.ReplyNewMsg.type)
  return type_.Get(index);
}
inline void ReplyNewMsg::set_type(int index, ::google::protobuf::uint32 value) {
  type_.Set(index, value);
  // @@protoc_insertion_point(field_set:User.ReplyNewMsg.type)
}
inline void ReplyNewMsg::add_type(::google::protobuf::uint32 value) {
  type_.Add(value);
  // @@protoc_insertion_point(field_add:User.ReplyNewMsg.type)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
ReplyNewMsg::type() const {
  // @@protoc_insertion_point(field_list:User.ReplyNewMsg.type)
  return type_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
ReplyNewMsg::mutable_type() {
  // @@protoc_insertion_point(field_mutable_list:User.ReplyNewMsg.type)
  return &type_;
}

// -------------------------------------------------------------------

// ReqSendMailBC

// required uint32 uid = 1;
inline bool ReqSendMailBC::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReqSendMailBC::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReqSendMailBC::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReqSendMailBC::clear_uid() {
  uid_ = 0u;
  clear_has_uid();
}
inline ::google::protobuf::uint32 ReqSendMailBC::uid() const {
  // @@protoc_insertion_point(field_get:User.ReqSendMailBC.uid)
  return uid_;
}
inline void ReqSendMailBC::set_uid(::google::protobuf::uint32 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:User.ReqSendMailBC.uid)
}

// required uint32 ts = 2;
inline bool ReqSendMailBC::has_ts() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ReqSendMailBC::set_has_ts() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ReqSendMailBC::clear_has_ts() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ReqSendMailBC::clear_ts() {
  ts_ = 0u;
  clear_has_ts();
}
inline ::google::protobuf::uint32 ReqSendMailBC::ts() const {
  // @@protoc_insertion_point(field_get:User.ReqSendMailBC.ts)
  return ts_;
}
inline void ReqSendMailBC::set_ts(::google::protobuf::uint32 value) {
  set_has_ts();
  ts_ = value;
  // @@protoc_insertion_point(field_set:User.ReqSendMailBC.ts)
}

// required bytes sys = 3;
inline bool ReqSendMailBC::has_sys() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ReqSendMailBC::set_has_sys() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ReqSendMailBC::clear_has_sys() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ReqSendMailBC::clear_sys() {
  if (sys_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sys_->clear();
  }
  clear_has_sys();
}
inline const ::std::string& ReqSendMailBC::sys() const {
  // @@protoc_insertion_point(field_get:User.ReqSendMailBC.sys)
  return *sys_;
}
inline void ReqSendMailBC::set_sys(const ::std::string& value) {
  set_has_sys();
  if (sys_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sys_ = new ::std::string;
  }
  sys_->assign(value);
  // @@protoc_insertion_point(field_set:User.ReqSendMailBC.sys)
}
inline void ReqSendMailBC::set_sys(const char* value) {
  set_has_sys();
  if (sys_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sys_ = new ::std::string;
  }
  sys_->assign(value);
  // @@protoc_insertion_point(field_set_char:User.ReqSendMailBC.sys)
}
inline void ReqSendMailBC::set_sys(const void* value, size_t size) {
  set_has_sys();
  if (sys_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sys_ = new ::std::string;
  }
  sys_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:User.ReqSendMailBC.sys)
}
inline ::std::string* ReqSendMailBC::mutable_sys() {
  set_has_sys();
  if (sys_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sys_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:User.ReqSendMailBC.sys)
  return sys_;
}
inline ::std::string* ReqSendMailBC::release_sys() {
  clear_has_sys();
  if (sys_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = sys_;
    sys_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void ReqSendMailBC::set_allocated_sys(::std::string* sys) {
  if (sys_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete sys_;
  }
  if (sys) {
    set_has_sys();
    sys_ = sys;
  } else {
    clear_has_sys();
    sys_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:User.ReqSendMailBC.sys)
}

// required bytes reward = 4;
inline bool ReqSendMailBC::has_reward() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ReqSendMailBC::set_has_reward() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ReqSendMailBC::clear_has_reward() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ReqSendMailBC::clear_reward() {
  if (reward_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    reward_->clear();
  }
  clear_has_reward();
}
inline const ::std::string& ReqSendMailBC::reward() const {
  // @@protoc_insertion_point(field_get:User.ReqSendMailBC.reward)
  return *reward_;
}
inline void ReqSendMailBC::set_reward(const ::std::string& value) {
  set_has_reward();
  if (reward_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    reward_ = new ::std::string;
  }
  reward_->assign(value);
  // @@protoc_insertion_point(field_set:User.ReqSendMailBC.reward)
}
inline void ReqSendMailBC::set_reward(const char* value) {
  set_has_reward();
  if (reward_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    reward_ = new ::std::string;
  }
  reward_->assign(value);
  // @@protoc_insertion_point(field_set_char:User.ReqSendMailBC.reward)
}
inline void ReqSendMailBC::set_reward(const void* value, size_t size) {
  set_has_reward();
  if (reward_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    reward_ = new ::std::string;
  }
  reward_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:User.ReqSendMailBC.reward)
}
inline ::std::string* ReqSendMailBC::mutable_reward() {
  set_has_reward();
  if (reward_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    reward_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:User.ReqSendMailBC.reward)
  return reward_;
}
inline ::std::string* ReqSendMailBC::release_reward() {
  clear_has_reward();
  if (reward_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = reward_;
    reward_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void ReqSendMailBC::set_allocated_reward(::std::string* reward) {
  if (reward_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete reward_;
  }
  if (reward) {
    set_has_reward();
    reward_ = reward;
  } else {
    clear_has_reward();
    reward_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:User.ReqSendMailBC.reward)
}

// -------------------------------------------------------------------

// PushLoginMsg

// required uint32 loginTs = 1;
inline bool PushLoginMsg::has_logints() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PushLoginMsg::set_has_logints() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PushLoginMsg::clear_has_logints() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PushLoginMsg::clear_logints() {
  logints_ = 0u;
  clear_has_logints();
}
inline ::google::protobuf::uint32 PushLoginMsg::logints() const {
  // @@protoc_insertion_point(field_get:User.PushLoginMsg.loginTs)
  return logints_;
}
inline void PushLoginMsg::set_logints(::google::protobuf::uint32 value) {
  set_has_logints();
  logints_ = value;
  // @@protoc_insertion_point(field_set:User.PushLoginMsg.loginTs)
}

// required uint32 uid = 2;
inline bool PushLoginMsg::has_uid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PushLoginMsg::set_has_uid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PushLoginMsg::clear_has_uid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PushLoginMsg::clear_uid() {
  uid_ = 0u;
  clear_has_uid();
}
inline ::google::protobuf::uint32 PushLoginMsg::uid() const {
  // @@protoc_insertion_point(field_get:User.PushLoginMsg.uid)
  return uid_;
}
inline void PushLoginMsg::set_uid(::google::protobuf::uint32 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:User.PushLoginMsg.uid)
}

// -------------------------------------------------------------------

// CSPushLoginMsg

// required uint32 inviteUid = 1;
inline bool CSPushLoginMsg::has_inviteuid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSPushLoginMsg::set_has_inviteuid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSPushLoginMsg::clear_has_inviteuid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSPushLoginMsg::clear_inviteuid() {
  inviteuid_ = 0u;
  clear_has_inviteuid();
}
inline ::google::protobuf::uint32 CSPushLoginMsg::inviteuid() const {
  // @@protoc_insertion_point(field_get:User.CSPushLoginMsg.inviteUid)
  return inviteuid_;
}
inline void CSPushLoginMsg::set_inviteuid(::google::protobuf::uint32 value) {
  set_has_inviteuid();
  inviteuid_ = value;
  // @@protoc_insertion_point(field_set:User.CSPushLoginMsg.inviteUid)
}

// required uint32 loginTs = 2;
inline bool CSPushLoginMsg::has_logints() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSPushLoginMsg::set_has_logints() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSPushLoginMsg::clear_has_logints() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSPushLoginMsg::clear_logints() {
  logints_ = 0u;
  clear_has_logints();
}
inline ::google::protobuf::uint32 CSPushLoginMsg::logints() const {
  // @@protoc_insertion_point(field_get:User.CSPushLoginMsg.loginTs)
  return logints_;
}
inline void CSPushLoginMsg::set_logints(::google::protobuf::uint32 value) {
  set_has_logints();
  logints_ = value;
  // @@protoc_insertion_point(field_set:User.CSPushLoginMsg.loginTs)
}

// required uint32 uid = 3;
inline bool CSPushLoginMsg::has_uid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSPushLoginMsg::set_has_uid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSPushLoginMsg::clear_has_uid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSPushLoginMsg::clear_uid() {
  uid_ = 0u;
  clear_has_uid();
}
inline ::google::protobuf::uint32 CSPushLoginMsg::uid() const {
  // @@protoc_insertion_point(field_get:User.CSPushLoginMsg.uid)
  return uid_;
}
inline void CSPushLoginMsg::set_uid(::google::protobuf::uint32 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:User.CSPushLoginMsg.uid)
}

// -------------------------------------------------------------------

// ViewAdGetSpeedUpCardReq

// -------------------------------------------------------------------

// ViewAdGetSpeedUpCardResp

// required .DataCommon.CommonItemsCPP commons = 1;
inline bool ViewAdGetSpeedUpCardResp::has_commons() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ViewAdGetSpeedUpCardResp::set_has_commons() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ViewAdGetSpeedUpCardResp::clear_has_commons() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ViewAdGetSpeedUpCardResp::clear_commons() {
  if (commons_ != NULL) commons_->::DataCommon::CommonItemsCPP::Clear();
  clear_has_commons();
}
inline const ::DataCommon::CommonItemsCPP& ViewAdGetSpeedUpCardResp::commons() const {
  // @@protoc_insertion_point(field_get:User.ViewAdGetSpeedUpCardResp.commons)
  return commons_ != NULL ? *commons_ : *default_instance_->commons_;
}
inline ::DataCommon::CommonItemsCPP* ViewAdGetSpeedUpCardResp::mutable_commons() {
  set_has_commons();
  if (commons_ == NULL) commons_ = new ::DataCommon::CommonItemsCPP;
  // @@protoc_insertion_point(field_mutable:User.ViewAdGetSpeedUpCardResp.commons)
  return commons_;
}
inline ::DataCommon::CommonItemsCPP* ViewAdGetSpeedUpCardResp::release_commons() {
  clear_has_commons();
  ::DataCommon::CommonItemsCPP* temp = commons_;
  commons_ = NULL;
  return temp;
}
inline void ViewAdGetSpeedUpCardResp::set_allocated_commons(::DataCommon::CommonItemsCPP* commons) {
  delete commons_;
  commons_ = commons;
  if (commons) {
    set_has_commons();
  } else {
    clear_has_commons();
  }
  // @@protoc_insertion_point(field_set_allocated:User.ViewAdGetSpeedUpCardResp.commons)
}

// -------------------------------------------------------------------

// NewUserGuideShareReq

// required uint32 id = 1;
inline bool NewUserGuideShareReq::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NewUserGuideShareReq::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NewUserGuideShareReq::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NewUserGuideShareReq::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 NewUserGuideShareReq::id() const {
  // @@protoc_insertion_point(field_get:User.NewUserGuideShareReq.id)
  return id_;
}
inline void NewUserGuideShareReq::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:User.NewUserGuideShareReq.id)
}

// required uint32 type = 2;
inline bool NewUserGuideShareReq::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void NewUserGuideShareReq::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void NewUserGuideShareReq::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void NewUserGuideShareReq::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 NewUserGuideShareReq::type() const {
  // @@protoc_insertion_point(field_get:User.NewUserGuideShareReq.type)
  return type_;
}
inline void NewUserGuideShareReq::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:User.NewUserGuideShareReq.type)
}

// -------------------------------------------------------------------

// NewUserGuideShareResp

// required .DataCommon.CommonItemsCPP commons = 1;
inline bool NewUserGuideShareResp::has_commons() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NewUserGuideShareResp::set_has_commons() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NewUserGuideShareResp::clear_has_commons() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NewUserGuideShareResp::clear_commons() {
  if (commons_ != NULL) commons_->::DataCommon::CommonItemsCPP::Clear();
  clear_has_commons();
}
inline const ::DataCommon::CommonItemsCPP& NewUserGuideShareResp::commons() const {
  // @@protoc_insertion_point(field_get:User.NewUserGuideShareResp.commons)
  return commons_ != NULL ? *commons_ : *default_instance_->commons_;
}
inline ::DataCommon::CommonItemsCPP* NewUserGuideShareResp::mutable_commons() {
  set_has_commons();
  if (commons_ == NULL) commons_ = new ::DataCommon::CommonItemsCPP;
  // @@protoc_insertion_point(field_mutable:User.NewUserGuideShareResp.commons)
  return commons_;
}
inline ::DataCommon::CommonItemsCPP* NewUserGuideShareResp::release_commons() {
  clear_has_commons();
  ::DataCommon::CommonItemsCPP* temp = commons_;
  commons_ = NULL;
  return temp;
}
inline void NewUserGuideShareResp::set_allocated_commons(::DataCommon::CommonItemsCPP* commons) {
  delete commons_;
  commons_ = commons;
  if (commons) {
    set_has_commons();
  } else {
    clear_has_commons();
  }
  // @@protoc_insertion_point(field_set_allocated:User.NewUserGuideShareResp.commons)
}

// -------------------------------------------------------------------

// UseCdKeyReq

// required string number = 1;
inline bool UseCdKeyReq::has_number() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UseCdKeyReq::set_has_number() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UseCdKeyReq::clear_has_number() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UseCdKeyReq::clear_number() {
  if (number_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    number_->clear();
  }
  clear_has_number();
}
inline const ::std::string& UseCdKeyReq::number() const {
  // @@protoc_insertion_point(field_get:User.UseCdKeyReq.number)
  return *number_;
}
inline void UseCdKeyReq::set_number(const ::std::string& value) {
  set_has_number();
  if (number_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    number_ = new ::std::string;
  }
  number_->assign(value);
  // @@protoc_insertion_point(field_set:User.UseCdKeyReq.number)
}
inline void UseCdKeyReq::set_number(const char* value) {
  set_has_number();
  if (number_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    number_ = new ::std::string;
  }
  number_->assign(value);
  // @@protoc_insertion_point(field_set_char:User.UseCdKeyReq.number)
}
inline void UseCdKeyReq::set_number(const char* value, size_t size) {
  set_has_number();
  if (number_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    number_ = new ::std::string;
  }
  number_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:User.UseCdKeyReq.number)
}
inline ::std::string* UseCdKeyReq::mutable_number() {
  set_has_number();
  if (number_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    number_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:User.UseCdKeyReq.number)
  return number_;
}
inline ::std::string* UseCdKeyReq::release_number() {
  clear_has_number();
  if (number_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = number_;
    number_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void UseCdKeyReq::set_allocated_number(::std::string* number) {
  if (number_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete number_;
  }
  if (number) {
    set_has_number();
    number_ = number;
  } else {
    clear_has_number();
    number_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:User.UseCdKeyReq.number)
}

// -------------------------------------------------------------------

// UseCdKeyResp

// required .DataCommon.CommonItemsCPP commons = 1;
inline bool UseCdKeyResp::has_commons() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UseCdKeyResp::set_has_commons() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UseCdKeyResp::clear_has_commons() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UseCdKeyResp::clear_commons() {
  if (commons_ != NULL) commons_->::DataCommon::CommonItemsCPP::Clear();
  clear_has_commons();
}
inline const ::DataCommon::CommonItemsCPP& UseCdKeyResp::commons() const {
  // @@protoc_insertion_point(field_get:User.UseCdKeyResp.commons)
  return commons_ != NULL ? *commons_ : *default_instance_->commons_;
}
inline ::DataCommon::CommonItemsCPP* UseCdKeyResp::mutable_commons() {
  set_has_commons();
  if (commons_ == NULL) commons_ = new ::DataCommon::CommonItemsCPP;
  // @@protoc_insertion_point(field_mutable:User.UseCdKeyResp.commons)
  return commons_;
}
inline ::DataCommon::CommonItemsCPP* UseCdKeyResp::release_commons() {
  clear_has_commons();
  ::DataCommon::CommonItemsCPP* temp = commons_;
  commons_ = NULL;
  return temp;
}
inline void UseCdKeyResp::set_allocated_commons(::DataCommon::CommonItemsCPP* commons) {
  delete commons_;
  commons_ = commons;
  if (commons) {
    set_has_commons();
  } else {
    clear_has_commons();
  }
  // @@protoc_insertion_point(field_set_allocated:User.UseCdKeyResp.commons)
}

// -------------------------------------------------------------------

// HeartBeatReq

// -------------------------------------------------------------------

// HeartBeatResp


// @@protoc_insertion_point(namespace_scope)

}  // namespace User

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_User_2eproto__INCLUDED
