// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ProtoShop.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "ProtoShop.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace ProtoShop {

namespace {

const ::google::protobuf::Descriptor* ShopCPP_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ShopCPP_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetShopReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetShopReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetShopResp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetShopResp_reflection_ = NULL;
const ::google::protobuf::Descriptor* ShelfPropsReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ShelfPropsReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* ShelfPropsResp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ShelfPropsResp_reflection_ = NULL;
const ::google::protobuf::Descriptor* ShelfUnLockReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ShelfUnLockReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* ShelfUnLockResp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ShelfUnLockResp_reflection_ = NULL;
const ::google::protobuf::Descriptor* ConfirmPaymentReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ConfirmPaymentReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* ConfirmPaymentResp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ConfirmPaymentResp_reflection_ = NULL;
const ::google::protobuf::Descriptor* VisitOtherShopReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  VisitOtherShopReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* VisitOtherShopResp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  VisitOtherShopResp_reflection_ = NULL;
const ::google::protobuf::Descriptor* CSVisitOtherShopReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CSVisitOtherShopReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* CSVisitOtherShopResp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CSVisitOtherShopResp_reflection_ = NULL;
const ::google::protobuf::Descriptor* PurchaseReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PurchaseReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* PurchaseResp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PurchaseResp_reflection_ = NULL;
const ::google::protobuf::Descriptor* CSPurchaseReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CSPurchaseReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* CSPurchaseResp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CSPurchaseResp_reflection_ = NULL;
const ::google::protobuf::Descriptor* ModifyShelfInfoReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ModifyShelfInfoReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* ModifyShelfInfoResp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ModifyShelfInfoResp_reflection_ = NULL;
const ::google::protobuf::Descriptor* PushShopMsg_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PushShopMsg_reflection_ = NULL;
const ::google::protobuf::Descriptor* ViewAdRecycleItemReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ViewAdRecycleItemReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* ViewAdRecycleItemResp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ViewAdRecycleItemResp_reflection_ = NULL;
const ::google::protobuf::Descriptor* BuyShopItemBySystemReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BuyShopItemBySystemReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* BuyShopItemBySystemResp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BuyShopItemBySystemResp_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_ProtoShop_2eproto() {
  protobuf_AddDesc_ProtoShop_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "ProtoShop.proto");
  GOOGLE_CHECK(file != NULL);
  ShopCPP_descriptor_ = file->message_type(0);
  static const int ShopCPP_offsets_[10] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShopCPP, ud_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShopCPP, propsid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShopCPP, propscnt_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShopCPP, propsprice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShopCPP, adflag_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShopCPP, sellflag_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShopCPP, buyerfig_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShopCPP, buyername_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShopCPP, vipshelfflag_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShopCPP, buyeruid_),
  };
  ShopCPP_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ShopCPP_descriptor_,
      ShopCPP::default_instance_,
      ShopCPP_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShopCPP, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShopCPP, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ShopCPP));
  GetShopReq_descriptor_ = file->message_type(1);
  static const int GetShopReq_offsets_[1] = {
  };
  GetShopReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GetShopReq_descriptor_,
      GetShopReq::default_instance_,
      GetShopReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetShopReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetShopReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GetShopReq));
  GetShopResp_descriptor_ = file->message_type(2);
  static const int GetShopResp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetShopResp, shop_),
  };
  GetShopResp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GetShopResp_descriptor_,
      GetShopResp::default_instance_,
      GetShopResp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetShopResp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetShopResp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GetShopResp));
  ShelfPropsReq_descriptor_ = file->message_type(3);
  static const int ShelfPropsReq_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShelfPropsReq, ud_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShelfPropsReq, propsid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShelfPropsReq, propscnt_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShelfPropsReq, propsprice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShelfPropsReq, adflag_),
  };
  ShelfPropsReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ShelfPropsReq_descriptor_,
      ShelfPropsReq::default_instance_,
      ShelfPropsReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShelfPropsReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShelfPropsReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ShelfPropsReq));
  ShelfPropsResp_descriptor_ = file->message_type(4);
  static const int ShelfPropsResp_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShelfPropsResp, shop_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShelfPropsResp, commons_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShelfPropsResp, ts_),
  };
  ShelfPropsResp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ShelfPropsResp_descriptor_,
      ShelfPropsResp::default_instance_,
      ShelfPropsResp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShelfPropsResp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShelfPropsResp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ShelfPropsResp));
  ShelfUnLockReq_descriptor_ = file->message_type(5);
  static const int ShelfUnLockReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShelfUnLockReq, costdiamond_),
  };
  ShelfUnLockReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ShelfUnLockReq_descriptor_,
      ShelfUnLockReq::default_instance_,
      ShelfUnLockReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShelfUnLockReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShelfUnLockReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ShelfUnLockReq));
  ShelfUnLockResp_descriptor_ = file->message_type(6);
  static const int ShelfUnLockResp_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShelfUnLockResp, shop_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShelfUnLockResp, commons_),
  };
  ShelfUnLockResp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ShelfUnLockResp_descriptor_,
      ShelfUnLockResp::default_instance_,
      ShelfUnLockResp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShelfUnLockResp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShelfUnLockResp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ShelfUnLockResp));
  ConfirmPaymentReq_descriptor_ = file->message_type(7);
  static const int ConfirmPaymentReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConfirmPaymentReq, ud_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConfirmPaymentReq, type_),
  };
  ConfirmPaymentReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ConfirmPaymentReq_descriptor_,
      ConfirmPaymentReq::default_instance_,
      ConfirmPaymentReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConfirmPaymentReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConfirmPaymentReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ConfirmPaymentReq));
  ConfirmPaymentResp_descriptor_ = file->message_type(8);
  static const int ConfirmPaymentResp_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConfirmPaymentResp, shop_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConfirmPaymentResp, commons_),
  };
  ConfirmPaymentResp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ConfirmPaymentResp_descriptor_,
      ConfirmPaymentResp::default_instance_,
      ConfirmPaymentResp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConfirmPaymentResp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConfirmPaymentResp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ConfirmPaymentResp));
  VisitOtherShopReq_descriptor_ = file->message_type(9);
  static const int VisitOtherShopReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VisitOtherShopReq, othuid_),
  };
  VisitOtherShopReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      VisitOtherShopReq_descriptor_,
      VisitOtherShopReq::default_instance_,
      VisitOtherShopReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VisitOtherShopReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VisitOtherShopReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(VisitOtherShopReq));
  VisitOtherShopResp_descriptor_ = file->message_type(10);
  static const int VisitOtherShopResp_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VisitOtherShopResp, othuid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VisitOtherShopResp, othshop_),
  };
  VisitOtherShopResp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      VisitOtherShopResp_descriptor_,
      VisitOtherShopResp::default_instance_,
      VisitOtherShopResp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VisitOtherShopResp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VisitOtherShopResp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(VisitOtherShopResp));
  CSVisitOtherShopReq_descriptor_ = file->message_type(11);
  static const int CSVisitOtherShopReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CSVisitOtherShopReq, visituid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CSVisitOtherShopReq, visiteduid_),
  };
  CSVisitOtherShopReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CSVisitOtherShopReq_descriptor_,
      CSVisitOtherShopReq::default_instance_,
      CSVisitOtherShopReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CSVisitOtherShopReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CSVisitOtherShopReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CSVisitOtherShopReq));
  CSVisitOtherShopResp_descriptor_ = file->message_type(12);
  static const int CSVisitOtherShopResp_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CSVisitOtherShopResp, visituid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CSVisitOtherShopResp, visitedshopresp_),
  };
  CSVisitOtherShopResp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CSVisitOtherShopResp_descriptor_,
      CSVisitOtherShopResp::default_instance_,
      CSVisitOtherShopResp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CSVisitOtherShopResp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CSVisitOtherShopResp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CSVisitOtherShopResp));
  PurchaseReq_descriptor_ = file->message_type(13);
  static const int PurchaseReq_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PurchaseReq, othuid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PurchaseReq, ud_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PurchaseReq, propsid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PurchaseReq, propscnt_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PurchaseReq, propsprice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PurchaseReq, sellflag_),
  };
  PurchaseReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PurchaseReq_descriptor_,
      PurchaseReq::default_instance_,
      PurchaseReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PurchaseReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PurchaseReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PurchaseReq));
  PurchaseResp_descriptor_ = file->message_type(14);
  static const int PurchaseResp_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PurchaseResp, commons_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PurchaseResp, othuid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PurchaseResp, othshop_),
  };
  PurchaseResp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PurchaseResp_descriptor_,
      PurchaseResp::default_instance_,
      PurchaseResp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PurchaseResp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PurchaseResp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PurchaseResp));
  CSPurchaseReq_descriptor_ = file->message_type(15);
  static const int CSPurchaseReq_offsets_[9] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CSPurchaseReq, othuid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CSPurchaseReq, ud_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CSPurchaseReq, propsid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CSPurchaseReq, propscnt_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CSPurchaseReq, propsprice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CSPurchaseReq, sellflag_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CSPurchaseReq, buyeruid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CSPurchaseReq, buyerfig_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CSPurchaseReq, buyername_),
  };
  CSPurchaseReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CSPurchaseReq_descriptor_,
      CSPurchaseReq::default_instance_,
      CSPurchaseReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CSPurchaseReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CSPurchaseReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CSPurchaseReq));
  CSPurchaseResp_descriptor_ = file->message_type(16);
  static const int CSPurchaseResp_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CSPurchaseResp, visituid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CSPurchaseResp, visiteduid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CSPurchaseResp, visitedshop_),
  };
  CSPurchaseResp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CSPurchaseResp_descriptor_,
      CSPurchaseResp::default_instance_,
      CSPurchaseResp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CSPurchaseResp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CSPurchaseResp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CSPurchaseResp));
  ModifyShelfInfoReq_descriptor_ = file->message_type(17);
  static const int ModifyShelfInfoReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ModifyShelfInfoReq, ud_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ModifyShelfInfoReq, flag_),
  };
  ModifyShelfInfoReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ModifyShelfInfoReq_descriptor_,
      ModifyShelfInfoReq::default_instance_,
      ModifyShelfInfoReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ModifyShelfInfoReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ModifyShelfInfoReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ModifyShelfInfoReq));
  ModifyShelfInfoResp_descriptor_ = file->message_type(18);
  static const int ModifyShelfInfoResp_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ModifyShelfInfoResp, shop_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ModifyShelfInfoResp, commons_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ModifyShelfInfoResp, ts_),
  };
  ModifyShelfInfoResp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ModifyShelfInfoResp_descriptor_,
      ModifyShelfInfoResp::default_instance_,
      ModifyShelfInfoResp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ModifyShelfInfoResp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ModifyShelfInfoResp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ModifyShelfInfoResp));
  PushShopMsg_descriptor_ = file->message_type(19);
  static const int PushShopMsg_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PushShopMsg, shop_),
  };
  PushShopMsg_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PushShopMsg_descriptor_,
      PushShopMsg::default_instance_,
      PushShopMsg_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PushShopMsg, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PushShopMsg, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PushShopMsg));
  ViewAdRecycleItemReq_descriptor_ = file->message_type(20);
  static const int ViewAdRecycleItemReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ViewAdRecycleItemReq, ud_),
  };
  ViewAdRecycleItemReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ViewAdRecycleItemReq_descriptor_,
      ViewAdRecycleItemReq::default_instance_,
      ViewAdRecycleItemReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ViewAdRecycleItemReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ViewAdRecycleItemReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ViewAdRecycleItemReq));
  ViewAdRecycleItemResp_descriptor_ = file->message_type(21);
  static const int ViewAdRecycleItemResp_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ViewAdRecycleItemResp, shop_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ViewAdRecycleItemResp, commons_),
  };
  ViewAdRecycleItemResp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ViewAdRecycleItemResp_descriptor_,
      ViewAdRecycleItemResp::default_instance_,
      ViewAdRecycleItemResp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ViewAdRecycleItemResp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ViewAdRecycleItemResp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ViewAdRecycleItemResp));
  BuyShopItemBySystemReq_descriptor_ = file->message_type(22);
  static const int BuyShopItemBySystemReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuyShopItemBySystemReq, ud_),
  };
  BuyShopItemBySystemReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      BuyShopItemBySystemReq_descriptor_,
      BuyShopItemBySystemReq::default_instance_,
      BuyShopItemBySystemReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuyShopItemBySystemReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuyShopItemBySystemReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(BuyShopItemBySystemReq));
  BuyShopItemBySystemResp_descriptor_ = file->message_type(23);
  static const int BuyShopItemBySystemResp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuyShopItemBySystemResp, shop_),
  };
  BuyShopItemBySystemResp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      BuyShopItemBySystemResp_descriptor_,
      BuyShopItemBySystemResp::default_instance_,
      BuyShopItemBySystemResp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuyShopItemBySystemResp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuyShopItemBySystemResp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(BuyShopItemBySystemResp));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_ProtoShop_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ShopCPP_descriptor_, &ShopCPP::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GetShopReq_descriptor_, &GetShopReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GetShopResp_descriptor_, &GetShopResp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ShelfPropsReq_descriptor_, &ShelfPropsReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ShelfPropsResp_descriptor_, &ShelfPropsResp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ShelfUnLockReq_descriptor_, &ShelfUnLockReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ShelfUnLockResp_descriptor_, &ShelfUnLockResp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ConfirmPaymentReq_descriptor_, &ConfirmPaymentReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ConfirmPaymentResp_descriptor_, &ConfirmPaymentResp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    VisitOtherShopReq_descriptor_, &VisitOtherShopReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    VisitOtherShopResp_descriptor_, &VisitOtherShopResp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CSVisitOtherShopReq_descriptor_, &CSVisitOtherShopReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CSVisitOtherShopResp_descriptor_, &CSVisitOtherShopResp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PurchaseReq_descriptor_, &PurchaseReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PurchaseResp_descriptor_, &PurchaseResp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CSPurchaseReq_descriptor_, &CSPurchaseReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CSPurchaseResp_descriptor_, &CSPurchaseResp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ModifyShelfInfoReq_descriptor_, &ModifyShelfInfoReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ModifyShelfInfoResp_descriptor_, &ModifyShelfInfoResp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PushShopMsg_descriptor_, &PushShopMsg::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ViewAdRecycleItemReq_descriptor_, &ViewAdRecycleItemReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ViewAdRecycleItemResp_descriptor_, &ViewAdRecycleItemResp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    BuyShopItemBySystemReq_descriptor_, &BuyShopItemBySystemReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    BuyShopItemBySystemResp_descriptor_, &BuyShopItemBySystemResp::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_ProtoShop_2eproto() {
  delete ShopCPP::default_instance_;
  delete ShopCPP_reflection_;
  delete GetShopReq::default_instance_;
  delete GetShopReq_reflection_;
  delete GetShopResp::default_instance_;
  delete GetShopResp_reflection_;
  delete ShelfPropsReq::default_instance_;
  delete ShelfPropsReq_reflection_;
  delete ShelfPropsResp::default_instance_;
  delete ShelfPropsResp_reflection_;
  delete ShelfUnLockReq::default_instance_;
  delete ShelfUnLockReq_reflection_;
  delete ShelfUnLockResp::default_instance_;
  delete ShelfUnLockResp_reflection_;
  delete ConfirmPaymentReq::default_instance_;
  delete ConfirmPaymentReq_reflection_;
  delete ConfirmPaymentResp::default_instance_;
  delete ConfirmPaymentResp_reflection_;
  delete VisitOtherShopReq::default_instance_;
  delete VisitOtherShopReq_reflection_;
  delete VisitOtherShopResp::default_instance_;
  delete VisitOtherShopResp_reflection_;
  delete CSVisitOtherShopReq::default_instance_;
  delete CSVisitOtherShopReq_reflection_;
  delete CSVisitOtherShopResp::default_instance_;
  delete CSVisitOtherShopResp_reflection_;
  delete PurchaseReq::default_instance_;
  delete PurchaseReq_reflection_;
  delete PurchaseResp::default_instance_;
  delete PurchaseResp_reflection_;
  delete CSPurchaseReq::default_instance_;
  delete CSPurchaseReq_reflection_;
  delete CSPurchaseResp::default_instance_;
  delete CSPurchaseResp_reflection_;
  delete ModifyShelfInfoReq::default_instance_;
  delete ModifyShelfInfoReq_reflection_;
  delete ModifyShelfInfoResp::default_instance_;
  delete ModifyShelfInfoResp_reflection_;
  delete PushShopMsg::default_instance_;
  delete PushShopMsg_reflection_;
  delete ViewAdRecycleItemReq::default_instance_;
  delete ViewAdRecycleItemReq_reflection_;
  delete ViewAdRecycleItemResp::default_instance_;
  delete ViewAdRecycleItemResp_reflection_;
  delete BuyShopItemBySystemReq::default_instance_;
  delete BuyShopItemBySystemReq_reflection_;
  delete BuyShopItemBySystemResp::default_instance_;
  delete BuyShopItemBySystemResp_reflection_;
}

void protobuf_AddDesc_ProtoShop_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::DataCommon::protobuf_AddDesc_DataCommon_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\017ProtoShop.proto\022\tProtoShop\032\020DataCommon"
    ".proto\"\273\001\n\007ShopCPP\022\n\n\002ud\030\001 \002(\r\022\017\n\007propsi"
    "d\030\002 \002(\r\022\020\n\010propscnt\030\003 \002(\r\022\022\n\npropsprice\030"
    "\004 \002(\r\022\016\n\006adflag\030\005 \002(\r\022\020\n\010sellflag\030\006 \002(\r\022"
    "\020\n\010buyerfig\030\007 \001(\014\022\021\n\tbuyername\030\010 \001(\014\022\024\n\014"
    "vipshelfflag\030\t \002(\r\022\020\n\010buyeruid\030\n \001(\r\"\014\n\n"
    "GetShopReq\"/\n\013GetShopResp\022 \n\004shop\030\001 \003(\0132"
    "\022.ProtoShop.ShopCPP\"b\n\rShelfPropsReq\022\n\n\002"
    "ud\030\001 \002(\r\022\017\n\007propsid\030\002 \002(\r\022\020\n\010propscnt\030\003 "
    "\002(\r\022\022\n\npropsprice\030\004 \002(\r\022\016\n\006adflag\030\005 \002(\r\""
    "k\n\016ShelfPropsResp\022 \n\004shop\030\001 \002(\0132\022.ProtoS"
    "hop.ShopCPP\022+\n\007commons\030\002 \002(\0132\032.DataCommo"
    "n.CommonItemsCPP\022\n\n\002ts\030\003 \001(\r\"%\n\016ShelfUnL"
    "ockReq\022\023\n\013costdiamond\030\001 \002(\r\"`\n\017ShelfUnLo"
    "ckResp\022 \n\004shop\030\001 \002(\0132\022.ProtoShop.ShopCPP"
    "\022+\n\007commons\030\002 \002(\0132\032.DataCommon.CommonIte"
    "msCPP\"-\n\021ConfirmPaymentReq\022\n\n\002ud\030\001 \002(\r\022\014"
    "\n\004type\030\002 \001(\r\"c\n\022ConfirmPaymentResp\022 \n\004sh"
    "op\030\001 \002(\0132\022.ProtoShop.ShopCPP\022+\n\007commons\030"
    "\002 \002(\0132\032.DataCommon.CommonItemsCPP\"#\n\021Vis"
    "itOtherShopReq\022\016\n\006othuid\030\001 \002(\r\"I\n\022VisitO"
    "therShopResp\022\016\n\006othuid\030\001 \002(\r\022#\n\007othshop\030"
    "\002 \003(\0132\022.ProtoShop.ShopCPP\";\n\023CSVisitOthe"
    "rShopReq\022\020\n\010visitUid\030\001 \002(\r\022\022\n\nvisitedUid"
    "\030\002 \002(\r\"`\n\024CSVisitOtherShopResp\022\020\n\010visitU"
    "id\030\001 \002(\r\0226\n\017visitedShopResp\030\002 \002(\0132\035.Prot"
    "oShop.VisitOtherShopResp\"r\n\013PurchaseReq\022"
    "\016\n\006othuid\030\001 \002(\r\022\n\n\002ud\030\002 \002(\r\022\017\n\007propsid\030\003"
    " \002(\r\022\020\n\010propscnt\030\004 \002(\r\022\022\n\npropsprice\030\005 \002"
    "(\r\022\020\n\010sellflag\030\006 \002(\r\"p\n\014PurchaseResp\022+\n\007"
    "commons\030\001 \002(\0132\032.DataCommon.CommonItemsCP"
    "P\022\016\n\006othuid\030\002 \002(\r\022#\n\007othshop\030\003 \002(\0132\022.Pro"
    "toShop.ShopCPP\"\253\001\n\rCSPurchaseReq\022\016\n\006othu"
    "id\030\001 \002(\r\022\n\n\002ud\030\002 \002(\r\022\017\n\007propsid\030\003 \002(\r\022\020\n"
    "\010propscnt\030\004 \002(\r\022\022\n\npropsprice\030\005 \002(\r\022\020\n\010s"
    "ellflag\030\006 \002(\r\022\020\n\010buyeruid\030\007 \001(\r\022\020\n\010buyer"
    "fig\030\010 \001(\014\022\021\n\tbuyername\030\t \001(\014\"_\n\016CSPurcha"
    "seResp\022\020\n\010visitUid\030\001 \002(\r\022\022\n\nvisitedUid\030\002"
    " \002(\r\022\'\n\013visitedshop\030\003 \002(\0132\022.ProtoShop.Sh"
    "opCPP\".\n\022ModifyShelfInfoReq\022\n\n\002ud\030\001 \002(\r\022"
    "\014\n\004flag\030\002 \002(\r\"p\n\023ModifyShelfInfoResp\022 \n\004"
    "shop\030\001 \002(\0132\022.ProtoShop.ShopCPP\022+\n\007common"
    "s\030\002 \001(\0132\032.DataCommon.CommonItemsCPP\022\n\n\002t"
    "s\030\003 \001(\r\"/\n\013PushShopMsg\022 \n\004shop\030\001 \002(\0132\022.P"
    "rotoShop.ShopCPP\"\"\n\024ViewAdRecycleItemReq"
    "\022\n\n\002ud\030\001 \002(\r\"f\n\025ViewAdRecycleItemResp\022 \n"
    "\004shop\030\001 \002(\0132\022.ProtoShop.ShopCPP\022+\n\007commo"
    "ns\030\002 \002(\0132\032.DataCommon.CommonItemsCPP\"$\n\026"
    "BuyShopItemBySystemReq\022\n\n\002ud\030\001 \002(\r\";\n\027Bu"
    "yShopItemBySystemResp\022 \n\004shop\030\001 \002(\0132\022.Pr"
    "otoShop.ShopCPP", 2015);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "ProtoShop.proto", &protobuf_RegisterTypes);
  ShopCPP::default_instance_ = new ShopCPP();
  GetShopReq::default_instance_ = new GetShopReq();
  GetShopResp::default_instance_ = new GetShopResp();
  ShelfPropsReq::default_instance_ = new ShelfPropsReq();
  ShelfPropsResp::default_instance_ = new ShelfPropsResp();
  ShelfUnLockReq::default_instance_ = new ShelfUnLockReq();
  ShelfUnLockResp::default_instance_ = new ShelfUnLockResp();
  ConfirmPaymentReq::default_instance_ = new ConfirmPaymentReq();
  ConfirmPaymentResp::default_instance_ = new ConfirmPaymentResp();
  VisitOtherShopReq::default_instance_ = new VisitOtherShopReq();
  VisitOtherShopResp::default_instance_ = new VisitOtherShopResp();
  CSVisitOtherShopReq::default_instance_ = new CSVisitOtherShopReq();
  CSVisitOtherShopResp::default_instance_ = new CSVisitOtherShopResp();
  PurchaseReq::default_instance_ = new PurchaseReq();
  PurchaseResp::default_instance_ = new PurchaseResp();
  CSPurchaseReq::default_instance_ = new CSPurchaseReq();
  CSPurchaseResp::default_instance_ = new CSPurchaseResp();
  ModifyShelfInfoReq::default_instance_ = new ModifyShelfInfoReq();
  ModifyShelfInfoResp::default_instance_ = new ModifyShelfInfoResp();
  PushShopMsg::default_instance_ = new PushShopMsg();
  ViewAdRecycleItemReq::default_instance_ = new ViewAdRecycleItemReq();
  ViewAdRecycleItemResp::default_instance_ = new ViewAdRecycleItemResp();
  BuyShopItemBySystemReq::default_instance_ = new BuyShopItemBySystemReq();
  BuyShopItemBySystemResp::default_instance_ = new BuyShopItemBySystemResp();
  ShopCPP::default_instance_->InitAsDefaultInstance();
  GetShopReq::default_instance_->InitAsDefaultInstance();
  GetShopResp::default_instance_->InitAsDefaultInstance();
  ShelfPropsReq::default_instance_->InitAsDefaultInstance();
  ShelfPropsResp::default_instance_->InitAsDefaultInstance();
  ShelfUnLockReq::default_instance_->InitAsDefaultInstance();
  ShelfUnLockResp::default_instance_->InitAsDefaultInstance();
  ConfirmPaymentReq::default_instance_->InitAsDefaultInstance();
  ConfirmPaymentResp::default_instance_->InitAsDefaultInstance();
  VisitOtherShopReq::default_instance_->InitAsDefaultInstance();
  VisitOtherShopResp::default_instance_->InitAsDefaultInstance();
  CSVisitOtherShopReq::default_instance_->InitAsDefaultInstance();
  CSVisitOtherShopResp::default_instance_->InitAsDefaultInstance();
  PurchaseReq::default_instance_->InitAsDefaultInstance();
  PurchaseResp::default_instance_->InitAsDefaultInstance();
  CSPurchaseReq::default_instance_->InitAsDefaultInstance();
  CSPurchaseResp::default_instance_->InitAsDefaultInstance();
  ModifyShelfInfoReq::default_instance_->InitAsDefaultInstance();
  ModifyShelfInfoResp::default_instance_->InitAsDefaultInstance();
  PushShopMsg::default_instance_->InitAsDefaultInstance();
  ViewAdRecycleItemReq::default_instance_->InitAsDefaultInstance();
  ViewAdRecycleItemResp::default_instance_->InitAsDefaultInstance();
  BuyShopItemBySystemReq::default_instance_->InitAsDefaultInstance();
  BuyShopItemBySystemResp::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_ProtoShop_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_ProtoShop_2eproto {
  StaticDescriptorInitializer_ProtoShop_2eproto() {
    protobuf_AddDesc_ProtoShop_2eproto();
  }
} static_descriptor_initializer_ProtoShop_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int ShopCPP::kUdFieldNumber;
const int ShopCPP::kPropsidFieldNumber;
const int ShopCPP::kPropscntFieldNumber;
const int ShopCPP::kPropspriceFieldNumber;
const int ShopCPP::kAdflagFieldNumber;
const int ShopCPP::kSellflagFieldNumber;
const int ShopCPP::kBuyerfigFieldNumber;
const int ShopCPP::kBuyernameFieldNumber;
const int ShopCPP::kVipshelfflagFieldNumber;
const int ShopCPP::kBuyeruidFieldNumber;
#endif  // !_MSC_VER

ShopCPP::ShopCPP()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoShop.ShopCPP)
}

void ShopCPP::InitAsDefaultInstance() {
}

ShopCPP::ShopCPP(const ShopCPP& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ProtoShop.ShopCPP)
}

void ShopCPP::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  ud_ = 0u;
  propsid_ = 0u;
  propscnt_ = 0u;
  propsprice_ = 0u;
  adflag_ = 0u;
  sellflag_ = 0u;
  buyerfig_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  buyername_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  vipshelfflag_ = 0u;
  buyeruid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ShopCPP::~ShopCPP() {
  // @@protoc_insertion_point(destructor:ProtoShop.ShopCPP)
  SharedDtor();
}

void ShopCPP::SharedDtor() {
  if (buyerfig_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete buyerfig_;
  }
  if (buyername_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete buyername_;
  }
  if (this != default_instance_) {
  }
}

void ShopCPP::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ShopCPP::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ShopCPP_descriptor_;
}

const ShopCPP& ShopCPP::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoShop_2eproto();
  return *default_instance_;
}

ShopCPP* ShopCPP::default_instance_ = NULL;

ShopCPP* ShopCPP::New() const {
  return new ShopCPP;
}

void ShopCPP::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<ShopCPP*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 255) {
    ZR_(ud_, sellflag_);
    if (has_buyerfig()) {
      if (buyerfig_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        buyerfig_->clear();
      }
    }
    if (has_buyername()) {
      if (buyername_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        buyername_->clear();
      }
    }
  }
  ZR_(vipshelfflag_, buyeruid_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ShopCPP::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoShop.ShopCPP)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 ud = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ud_)));
          set_has_ud();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_propsid;
        break;
      }

      // required uint32 propsid = 2;
      case 2: {
        if (tag == 16) {
         parse_propsid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &propsid_)));
          set_has_propsid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_propscnt;
        break;
      }

      // required uint32 propscnt = 3;
      case 3: {
        if (tag == 24) {
         parse_propscnt:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &propscnt_)));
          set_has_propscnt();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_propsprice;
        break;
      }

      // required uint32 propsprice = 4;
      case 4: {
        if (tag == 32) {
         parse_propsprice:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &propsprice_)));
          set_has_propsprice();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_adflag;
        break;
      }

      // required uint32 adflag = 5;
      case 5: {
        if (tag == 40) {
         parse_adflag:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &adflag_)));
          set_has_adflag();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_sellflag;
        break;
      }

      // required uint32 sellflag = 6;
      case 6: {
        if (tag == 48) {
         parse_sellflag:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &sellflag_)));
          set_has_sellflag();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_buyerfig;
        break;
      }

      // optional bytes buyerfig = 7;
      case 7: {
        if (tag == 58) {
         parse_buyerfig:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_buyerfig()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_buyername;
        break;
      }

      // optional bytes buyername = 8;
      case 8: {
        if (tag == 66) {
         parse_buyername:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_buyername()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_vipshelfflag;
        break;
      }

      // required uint32 vipshelfflag = 9;
      case 9: {
        if (tag == 72) {
         parse_vipshelfflag:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &vipshelfflag_)));
          set_has_vipshelfflag();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(80)) goto parse_buyeruid;
        break;
      }

      // optional uint32 buyeruid = 10;
      case 10: {
        if (tag == 80) {
         parse_buyeruid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &buyeruid_)));
          set_has_buyeruid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoShop.ShopCPP)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoShop.ShopCPP)
  return false;
#undef DO_
}

void ShopCPP::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoShop.ShopCPP)
  // required uint32 ud = 1;
  if (has_ud()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->ud(), output);
  }

  // required uint32 propsid = 2;
  if (has_propsid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->propsid(), output);
  }

  // required uint32 propscnt = 3;
  if (has_propscnt()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->propscnt(), output);
  }

  // required uint32 propsprice = 4;
  if (has_propsprice()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->propsprice(), output);
  }

  // required uint32 adflag = 5;
  if (has_adflag()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->adflag(), output);
  }

  // required uint32 sellflag = 6;
  if (has_sellflag()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->sellflag(), output);
  }

  // optional bytes buyerfig = 7;
  if (has_buyerfig()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      7, this->buyerfig(), output);
  }

  // optional bytes buyername = 8;
  if (has_buyername()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      8, this->buyername(), output);
  }

  // required uint32 vipshelfflag = 9;
  if (has_vipshelfflag()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->vipshelfflag(), output);
  }

  // optional uint32 buyeruid = 10;
  if (has_buyeruid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(10, this->buyeruid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoShop.ShopCPP)
}

::google::protobuf::uint8* ShopCPP::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoShop.ShopCPP)
  // required uint32 ud = 1;
  if (has_ud()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->ud(), target);
  }

  // required uint32 propsid = 2;
  if (has_propsid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->propsid(), target);
  }

  // required uint32 propscnt = 3;
  if (has_propscnt()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->propscnt(), target);
  }

  // required uint32 propsprice = 4;
  if (has_propsprice()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->propsprice(), target);
  }

  // required uint32 adflag = 5;
  if (has_adflag()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->adflag(), target);
  }

  // required uint32 sellflag = 6;
  if (has_sellflag()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->sellflag(), target);
  }

  // optional bytes buyerfig = 7;
  if (has_buyerfig()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        7, this->buyerfig(), target);
  }

  // optional bytes buyername = 8;
  if (has_buyername()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        8, this->buyername(), target);
  }

  // required uint32 vipshelfflag = 9;
  if (has_vipshelfflag()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->vipshelfflag(), target);
  }

  // optional uint32 buyeruid = 10;
  if (has_buyeruid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(10, this->buyeruid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoShop.ShopCPP)
  return target;
}

int ShopCPP::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 ud = 1;
    if (has_ud()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->ud());
    }

    // required uint32 propsid = 2;
    if (has_propsid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->propsid());
    }

    // required uint32 propscnt = 3;
    if (has_propscnt()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->propscnt());
    }

    // required uint32 propsprice = 4;
    if (has_propsprice()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->propsprice());
    }

    // required uint32 adflag = 5;
    if (has_adflag()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->adflag());
    }

    // required uint32 sellflag = 6;
    if (has_sellflag()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->sellflag());
    }

    // optional bytes buyerfig = 7;
    if (has_buyerfig()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->buyerfig());
    }

    // optional bytes buyername = 8;
    if (has_buyername()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->buyername());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // required uint32 vipshelfflag = 9;
    if (has_vipshelfflag()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->vipshelfflag());
    }

    // optional uint32 buyeruid = 10;
    if (has_buyeruid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->buyeruid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ShopCPP::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ShopCPP* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ShopCPP*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ShopCPP::MergeFrom(const ShopCPP& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_ud()) {
      set_ud(from.ud());
    }
    if (from.has_propsid()) {
      set_propsid(from.propsid());
    }
    if (from.has_propscnt()) {
      set_propscnt(from.propscnt());
    }
    if (from.has_propsprice()) {
      set_propsprice(from.propsprice());
    }
    if (from.has_adflag()) {
      set_adflag(from.adflag());
    }
    if (from.has_sellflag()) {
      set_sellflag(from.sellflag());
    }
    if (from.has_buyerfig()) {
      set_buyerfig(from.buyerfig());
    }
    if (from.has_buyername()) {
      set_buyername(from.buyername());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_vipshelfflag()) {
      set_vipshelfflag(from.vipshelfflag());
    }
    if (from.has_buyeruid()) {
      set_buyeruid(from.buyeruid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ShopCPP::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ShopCPP::CopyFrom(const ShopCPP& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ShopCPP::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000013f) != 0x0000013f) return false;

  return true;
}

void ShopCPP::Swap(ShopCPP* other) {
  if (other != this) {
    std::swap(ud_, other->ud_);
    std::swap(propsid_, other->propsid_);
    std::swap(propscnt_, other->propscnt_);
    std::swap(propsprice_, other->propsprice_);
    std::swap(adflag_, other->adflag_);
    std::swap(sellflag_, other->sellflag_);
    std::swap(buyerfig_, other->buyerfig_);
    std::swap(buyername_, other->buyername_);
    std::swap(vipshelfflag_, other->vipshelfflag_);
    std::swap(buyeruid_, other->buyeruid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ShopCPP::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ShopCPP_descriptor_;
  metadata.reflection = ShopCPP_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

GetShopReq::GetShopReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoShop.GetShopReq)
}

void GetShopReq::InitAsDefaultInstance() {
}

GetShopReq::GetShopReq(const GetShopReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ProtoShop.GetShopReq)
}

void GetShopReq::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GetShopReq::~GetShopReq() {
  // @@protoc_insertion_point(destructor:ProtoShop.GetShopReq)
  SharedDtor();
}

void GetShopReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GetShopReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetShopReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetShopReq_descriptor_;
}

const GetShopReq& GetShopReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoShop_2eproto();
  return *default_instance_;
}

GetShopReq* GetShopReq::default_instance_ = NULL;

GetShopReq* GetShopReq::New() const {
  return new GetShopReq;
}

void GetShopReq::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GetShopReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoShop.GetShopReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoShop.GetShopReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoShop.GetShopReq)
  return false;
#undef DO_
}

void GetShopReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoShop.GetShopReq)
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoShop.GetShopReq)
}

::google::protobuf::uint8* GetShopReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoShop.GetShopReq)
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoShop.GetShopReq)
  return target;
}

int GetShopReq::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetShopReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GetShopReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GetShopReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GetShopReq::MergeFrom(const GetShopReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GetShopReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetShopReq::CopyFrom(const GetShopReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetShopReq::IsInitialized() const {

  return true;
}

void GetShopReq::Swap(GetShopReq* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GetShopReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetShopReq_descriptor_;
  metadata.reflection = GetShopReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GetShopResp::kShopFieldNumber;
#endif  // !_MSC_VER

GetShopResp::GetShopResp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoShop.GetShopResp)
}

void GetShopResp::InitAsDefaultInstance() {
}

GetShopResp::GetShopResp(const GetShopResp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ProtoShop.GetShopResp)
}

void GetShopResp::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GetShopResp::~GetShopResp() {
  // @@protoc_insertion_point(destructor:ProtoShop.GetShopResp)
  SharedDtor();
}

void GetShopResp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GetShopResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetShopResp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetShopResp_descriptor_;
}

const GetShopResp& GetShopResp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoShop_2eproto();
  return *default_instance_;
}

GetShopResp* GetShopResp::default_instance_ = NULL;

GetShopResp* GetShopResp::New() const {
  return new GetShopResp;
}

void GetShopResp::Clear() {
  shop_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GetShopResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoShop.GetShopResp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ProtoShop.ShopCPP shop = 1;
      case 1: {
        if (tag == 10) {
         parse_shop:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_shop()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_shop;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoShop.GetShopResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoShop.GetShopResp)
  return false;
#undef DO_
}

void GetShopResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoShop.GetShopResp)
  // repeated .ProtoShop.ShopCPP shop = 1;
  for (int i = 0; i < this->shop_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->shop(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoShop.GetShopResp)
}

::google::protobuf::uint8* GetShopResp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoShop.GetShopResp)
  // repeated .ProtoShop.ShopCPP shop = 1;
  for (int i = 0; i < this->shop_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->shop(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoShop.GetShopResp)
  return target;
}

int GetShopResp::ByteSize() const {
  int total_size = 0;

  // repeated .ProtoShop.ShopCPP shop = 1;
  total_size += 1 * this->shop_size();
  for (int i = 0; i < this->shop_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->shop(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetShopResp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GetShopResp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GetShopResp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GetShopResp::MergeFrom(const GetShopResp& from) {
  GOOGLE_CHECK_NE(&from, this);
  shop_.MergeFrom(from.shop_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GetShopResp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetShopResp::CopyFrom(const GetShopResp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetShopResp::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->shop())) return false;
  return true;
}

void GetShopResp::Swap(GetShopResp* other) {
  if (other != this) {
    shop_.Swap(&other->shop_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GetShopResp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetShopResp_descriptor_;
  metadata.reflection = GetShopResp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ShelfPropsReq::kUdFieldNumber;
const int ShelfPropsReq::kPropsidFieldNumber;
const int ShelfPropsReq::kPropscntFieldNumber;
const int ShelfPropsReq::kPropspriceFieldNumber;
const int ShelfPropsReq::kAdflagFieldNumber;
#endif  // !_MSC_VER

ShelfPropsReq::ShelfPropsReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoShop.ShelfPropsReq)
}

void ShelfPropsReq::InitAsDefaultInstance() {
}

ShelfPropsReq::ShelfPropsReq(const ShelfPropsReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ProtoShop.ShelfPropsReq)
}

void ShelfPropsReq::SharedCtor() {
  _cached_size_ = 0;
  ud_ = 0u;
  propsid_ = 0u;
  propscnt_ = 0u;
  propsprice_ = 0u;
  adflag_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ShelfPropsReq::~ShelfPropsReq() {
  // @@protoc_insertion_point(destructor:ProtoShop.ShelfPropsReq)
  SharedDtor();
}

void ShelfPropsReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ShelfPropsReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ShelfPropsReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ShelfPropsReq_descriptor_;
}

const ShelfPropsReq& ShelfPropsReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoShop_2eproto();
  return *default_instance_;
}

ShelfPropsReq* ShelfPropsReq::default_instance_ = NULL;

ShelfPropsReq* ShelfPropsReq::New() const {
  return new ShelfPropsReq;
}

void ShelfPropsReq::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<ShelfPropsReq*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 31) {
    ZR_(ud_, adflag_);
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ShelfPropsReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoShop.ShelfPropsReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 ud = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ud_)));
          set_has_ud();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_propsid;
        break;
      }

      // required uint32 propsid = 2;
      case 2: {
        if (tag == 16) {
         parse_propsid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &propsid_)));
          set_has_propsid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_propscnt;
        break;
      }

      // required uint32 propscnt = 3;
      case 3: {
        if (tag == 24) {
         parse_propscnt:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &propscnt_)));
          set_has_propscnt();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_propsprice;
        break;
      }

      // required uint32 propsprice = 4;
      case 4: {
        if (tag == 32) {
         parse_propsprice:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &propsprice_)));
          set_has_propsprice();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_adflag;
        break;
      }

      // required uint32 adflag = 5;
      case 5: {
        if (tag == 40) {
         parse_adflag:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &adflag_)));
          set_has_adflag();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoShop.ShelfPropsReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoShop.ShelfPropsReq)
  return false;
#undef DO_
}

void ShelfPropsReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoShop.ShelfPropsReq)
  // required uint32 ud = 1;
  if (has_ud()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->ud(), output);
  }

  // required uint32 propsid = 2;
  if (has_propsid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->propsid(), output);
  }

  // required uint32 propscnt = 3;
  if (has_propscnt()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->propscnt(), output);
  }

  // required uint32 propsprice = 4;
  if (has_propsprice()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->propsprice(), output);
  }

  // required uint32 adflag = 5;
  if (has_adflag()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->adflag(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoShop.ShelfPropsReq)
}

::google::protobuf::uint8* ShelfPropsReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoShop.ShelfPropsReq)
  // required uint32 ud = 1;
  if (has_ud()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->ud(), target);
  }

  // required uint32 propsid = 2;
  if (has_propsid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->propsid(), target);
  }

  // required uint32 propscnt = 3;
  if (has_propscnt()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->propscnt(), target);
  }

  // required uint32 propsprice = 4;
  if (has_propsprice()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->propsprice(), target);
  }

  // required uint32 adflag = 5;
  if (has_adflag()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->adflag(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoShop.ShelfPropsReq)
  return target;
}

int ShelfPropsReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 ud = 1;
    if (has_ud()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->ud());
    }

    // required uint32 propsid = 2;
    if (has_propsid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->propsid());
    }

    // required uint32 propscnt = 3;
    if (has_propscnt()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->propscnt());
    }

    // required uint32 propsprice = 4;
    if (has_propsprice()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->propsprice());
    }

    // required uint32 adflag = 5;
    if (has_adflag()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->adflag());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ShelfPropsReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ShelfPropsReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ShelfPropsReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ShelfPropsReq::MergeFrom(const ShelfPropsReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_ud()) {
      set_ud(from.ud());
    }
    if (from.has_propsid()) {
      set_propsid(from.propsid());
    }
    if (from.has_propscnt()) {
      set_propscnt(from.propscnt());
    }
    if (from.has_propsprice()) {
      set_propsprice(from.propsprice());
    }
    if (from.has_adflag()) {
      set_adflag(from.adflag());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ShelfPropsReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ShelfPropsReq::CopyFrom(const ShelfPropsReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ShelfPropsReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000001f) != 0x0000001f) return false;

  return true;
}

void ShelfPropsReq::Swap(ShelfPropsReq* other) {
  if (other != this) {
    std::swap(ud_, other->ud_);
    std::swap(propsid_, other->propsid_);
    std::swap(propscnt_, other->propscnt_);
    std::swap(propsprice_, other->propsprice_);
    std::swap(adflag_, other->adflag_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ShelfPropsReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ShelfPropsReq_descriptor_;
  metadata.reflection = ShelfPropsReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ShelfPropsResp::kShopFieldNumber;
const int ShelfPropsResp::kCommonsFieldNumber;
const int ShelfPropsResp::kTsFieldNumber;
#endif  // !_MSC_VER

ShelfPropsResp::ShelfPropsResp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoShop.ShelfPropsResp)
}

void ShelfPropsResp::InitAsDefaultInstance() {
  shop_ = const_cast< ::ProtoShop::ShopCPP*>(&::ProtoShop::ShopCPP::default_instance());
  commons_ = const_cast< ::DataCommon::CommonItemsCPP*>(&::DataCommon::CommonItemsCPP::default_instance());
}

ShelfPropsResp::ShelfPropsResp(const ShelfPropsResp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ProtoShop.ShelfPropsResp)
}

void ShelfPropsResp::SharedCtor() {
  _cached_size_ = 0;
  shop_ = NULL;
  commons_ = NULL;
  ts_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ShelfPropsResp::~ShelfPropsResp() {
  // @@protoc_insertion_point(destructor:ProtoShop.ShelfPropsResp)
  SharedDtor();
}

void ShelfPropsResp::SharedDtor() {
  if (this != default_instance_) {
    delete shop_;
    delete commons_;
  }
}

void ShelfPropsResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ShelfPropsResp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ShelfPropsResp_descriptor_;
}

const ShelfPropsResp& ShelfPropsResp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoShop_2eproto();
  return *default_instance_;
}

ShelfPropsResp* ShelfPropsResp::default_instance_ = NULL;

ShelfPropsResp* ShelfPropsResp::New() const {
  return new ShelfPropsResp;
}

void ShelfPropsResp::Clear() {
  if (_has_bits_[0 / 32] & 7) {
    if (has_shop()) {
      if (shop_ != NULL) shop_->::ProtoShop::ShopCPP::Clear();
    }
    if (has_commons()) {
      if (commons_ != NULL) commons_->::DataCommon::CommonItemsCPP::Clear();
    }
    ts_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ShelfPropsResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoShop.ShelfPropsResp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .ProtoShop.ShopCPP shop = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_shop()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_commons;
        break;
      }

      // required .DataCommon.CommonItemsCPP commons = 2;
      case 2: {
        if (tag == 18) {
         parse_commons:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_commons()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_ts;
        break;
      }

      // optional uint32 ts = 3;
      case 3: {
        if (tag == 24) {
         parse_ts:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ts_)));
          set_has_ts();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoShop.ShelfPropsResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoShop.ShelfPropsResp)
  return false;
#undef DO_
}

void ShelfPropsResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoShop.ShelfPropsResp)
  // required .ProtoShop.ShopCPP shop = 1;
  if (has_shop()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->shop(), output);
  }

  // required .DataCommon.CommonItemsCPP commons = 2;
  if (has_commons()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->commons(), output);
  }

  // optional uint32 ts = 3;
  if (has_ts()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->ts(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoShop.ShelfPropsResp)
}

::google::protobuf::uint8* ShelfPropsResp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoShop.ShelfPropsResp)
  // required .ProtoShop.ShopCPP shop = 1;
  if (has_shop()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->shop(), target);
  }

  // required .DataCommon.CommonItemsCPP commons = 2;
  if (has_commons()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->commons(), target);
  }

  // optional uint32 ts = 3;
  if (has_ts()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->ts(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoShop.ShelfPropsResp)
  return target;
}

int ShelfPropsResp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .ProtoShop.ShopCPP shop = 1;
    if (has_shop()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->shop());
    }

    // required .DataCommon.CommonItemsCPP commons = 2;
    if (has_commons()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->commons());
    }

    // optional uint32 ts = 3;
    if (has_ts()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->ts());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ShelfPropsResp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ShelfPropsResp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ShelfPropsResp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ShelfPropsResp::MergeFrom(const ShelfPropsResp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_shop()) {
      mutable_shop()->::ProtoShop::ShopCPP::MergeFrom(from.shop());
    }
    if (from.has_commons()) {
      mutable_commons()->::DataCommon::CommonItemsCPP::MergeFrom(from.commons());
    }
    if (from.has_ts()) {
      set_ts(from.ts());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ShelfPropsResp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ShelfPropsResp::CopyFrom(const ShelfPropsResp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ShelfPropsResp::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  if (has_shop()) {
    if (!this->shop().IsInitialized()) return false;
  }
  if (has_commons()) {
    if (!this->commons().IsInitialized()) return false;
  }
  return true;
}

void ShelfPropsResp::Swap(ShelfPropsResp* other) {
  if (other != this) {
    std::swap(shop_, other->shop_);
    std::swap(commons_, other->commons_);
    std::swap(ts_, other->ts_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ShelfPropsResp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ShelfPropsResp_descriptor_;
  metadata.reflection = ShelfPropsResp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ShelfUnLockReq::kCostdiamondFieldNumber;
#endif  // !_MSC_VER

ShelfUnLockReq::ShelfUnLockReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoShop.ShelfUnLockReq)
}

void ShelfUnLockReq::InitAsDefaultInstance() {
}

ShelfUnLockReq::ShelfUnLockReq(const ShelfUnLockReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ProtoShop.ShelfUnLockReq)
}

void ShelfUnLockReq::SharedCtor() {
  _cached_size_ = 0;
  costdiamond_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ShelfUnLockReq::~ShelfUnLockReq() {
  // @@protoc_insertion_point(destructor:ProtoShop.ShelfUnLockReq)
  SharedDtor();
}

void ShelfUnLockReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ShelfUnLockReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ShelfUnLockReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ShelfUnLockReq_descriptor_;
}

const ShelfUnLockReq& ShelfUnLockReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoShop_2eproto();
  return *default_instance_;
}

ShelfUnLockReq* ShelfUnLockReq::default_instance_ = NULL;

ShelfUnLockReq* ShelfUnLockReq::New() const {
  return new ShelfUnLockReq;
}

void ShelfUnLockReq::Clear() {
  costdiamond_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ShelfUnLockReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoShop.ShelfUnLockReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 costdiamond = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &costdiamond_)));
          set_has_costdiamond();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoShop.ShelfUnLockReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoShop.ShelfUnLockReq)
  return false;
#undef DO_
}

void ShelfUnLockReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoShop.ShelfUnLockReq)
  // required uint32 costdiamond = 1;
  if (has_costdiamond()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->costdiamond(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoShop.ShelfUnLockReq)
}

::google::protobuf::uint8* ShelfUnLockReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoShop.ShelfUnLockReq)
  // required uint32 costdiamond = 1;
  if (has_costdiamond()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->costdiamond(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoShop.ShelfUnLockReq)
  return target;
}

int ShelfUnLockReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 costdiamond = 1;
    if (has_costdiamond()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->costdiamond());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ShelfUnLockReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ShelfUnLockReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ShelfUnLockReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ShelfUnLockReq::MergeFrom(const ShelfUnLockReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_costdiamond()) {
      set_costdiamond(from.costdiamond());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ShelfUnLockReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ShelfUnLockReq::CopyFrom(const ShelfUnLockReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ShelfUnLockReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void ShelfUnLockReq::Swap(ShelfUnLockReq* other) {
  if (other != this) {
    std::swap(costdiamond_, other->costdiamond_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ShelfUnLockReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ShelfUnLockReq_descriptor_;
  metadata.reflection = ShelfUnLockReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ShelfUnLockResp::kShopFieldNumber;
const int ShelfUnLockResp::kCommonsFieldNumber;
#endif  // !_MSC_VER

ShelfUnLockResp::ShelfUnLockResp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoShop.ShelfUnLockResp)
}

void ShelfUnLockResp::InitAsDefaultInstance() {
  shop_ = const_cast< ::ProtoShop::ShopCPP*>(&::ProtoShop::ShopCPP::default_instance());
  commons_ = const_cast< ::DataCommon::CommonItemsCPP*>(&::DataCommon::CommonItemsCPP::default_instance());
}

ShelfUnLockResp::ShelfUnLockResp(const ShelfUnLockResp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ProtoShop.ShelfUnLockResp)
}

void ShelfUnLockResp::SharedCtor() {
  _cached_size_ = 0;
  shop_ = NULL;
  commons_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ShelfUnLockResp::~ShelfUnLockResp() {
  // @@protoc_insertion_point(destructor:ProtoShop.ShelfUnLockResp)
  SharedDtor();
}

void ShelfUnLockResp::SharedDtor() {
  if (this != default_instance_) {
    delete shop_;
    delete commons_;
  }
}

void ShelfUnLockResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ShelfUnLockResp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ShelfUnLockResp_descriptor_;
}

const ShelfUnLockResp& ShelfUnLockResp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoShop_2eproto();
  return *default_instance_;
}

ShelfUnLockResp* ShelfUnLockResp::default_instance_ = NULL;

ShelfUnLockResp* ShelfUnLockResp::New() const {
  return new ShelfUnLockResp;
}

void ShelfUnLockResp::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    if (has_shop()) {
      if (shop_ != NULL) shop_->::ProtoShop::ShopCPP::Clear();
    }
    if (has_commons()) {
      if (commons_ != NULL) commons_->::DataCommon::CommonItemsCPP::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ShelfUnLockResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoShop.ShelfUnLockResp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .ProtoShop.ShopCPP shop = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_shop()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_commons;
        break;
      }

      // required .DataCommon.CommonItemsCPP commons = 2;
      case 2: {
        if (tag == 18) {
         parse_commons:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_commons()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoShop.ShelfUnLockResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoShop.ShelfUnLockResp)
  return false;
#undef DO_
}

void ShelfUnLockResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoShop.ShelfUnLockResp)
  // required .ProtoShop.ShopCPP shop = 1;
  if (has_shop()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->shop(), output);
  }

  // required .DataCommon.CommonItemsCPP commons = 2;
  if (has_commons()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->commons(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoShop.ShelfUnLockResp)
}

::google::protobuf::uint8* ShelfUnLockResp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoShop.ShelfUnLockResp)
  // required .ProtoShop.ShopCPP shop = 1;
  if (has_shop()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->shop(), target);
  }

  // required .DataCommon.CommonItemsCPP commons = 2;
  if (has_commons()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->commons(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoShop.ShelfUnLockResp)
  return target;
}

int ShelfUnLockResp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .ProtoShop.ShopCPP shop = 1;
    if (has_shop()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->shop());
    }

    // required .DataCommon.CommonItemsCPP commons = 2;
    if (has_commons()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->commons());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ShelfUnLockResp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ShelfUnLockResp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ShelfUnLockResp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ShelfUnLockResp::MergeFrom(const ShelfUnLockResp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_shop()) {
      mutable_shop()->::ProtoShop::ShopCPP::MergeFrom(from.shop());
    }
    if (from.has_commons()) {
      mutable_commons()->::DataCommon::CommonItemsCPP::MergeFrom(from.commons());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ShelfUnLockResp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ShelfUnLockResp::CopyFrom(const ShelfUnLockResp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ShelfUnLockResp::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  if (has_shop()) {
    if (!this->shop().IsInitialized()) return false;
  }
  if (has_commons()) {
    if (!this->commons().IsInitialized()) return false;
  }
  return true;
}

void ShelfUnLockResp::Swap(ShelfUnLockResp* other) {
  if (other != this) {
    std::swap(shop_, other->shop_);
    std::swap(commons_, other->commons_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ShelfUnLockResp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ShelfUnLockResp_descriptor_;
  metadata.reflection = ShelfUnLockResp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ConfirmPaymentReq::kUdFieldNumber;
const int ConfirmPaymentReq::kTypeFieldNumber;
#endif  // !_MSC_VER

ConfirmPaymentReq::ConfirmPaymentReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoShop.ConfirmPaymentReq)
}

void ConfirmPaymentReq::InitAsDefaultInstance() {
}

ConfirmPaymentReq::ConfirmPaymentReq(const ConfirmPaymentReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ProtoShop.ConfirmPaymentReq)
}

void ConfirmPaymentReq::SharedCtor() {
  _cached_size_ = 0;
  ud_ = 0u;
  type_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ConfirmPaymentReq::~ConfirmPaymentReq() {
  // @@protoc_insertion_point(destructor:ProtoShop.ConfirmPaymentReq)
  SharedDtor();
}

void ConfirmPaymentReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ConfirmPaymentReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ConfirmPaymentReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ConfirmPaymentReq_descriptor_;
}

const ConfirmPaymentReq& ConfirmPaymentReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoShop_2eproto();
  return *default_instance_;
}

ConfirmPaymentReq* ConfirmPaymentReq::default_instance_ = NULL;

ConfirmPaymentReq* ConfirmPaymentReq::New() const {
  return new ConfirmPaymentReq;
}

void ConfirmPaymentReq::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<ConfirmPaymentReq*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(ud_, type_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ConfirmPaymentReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoShop.ConfirmPaymentReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 ud = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ud_)));
          set_has_ud();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_type;
        break;
      }

      // optional uint32 type = 2;
      case 2: {
        if (tag == 16) {
         parse_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoShop.ConfirmPaymentReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoShop.ConfirmPaymentReq)
  return false;
#undef DO_
}

void ConfirmPaymentReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoShop.ConfirmPaymentReq)
  // required uint32 ud = 1;
  if (has_ud()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->ud(), output);
  }

  // optional uint32 type = 2;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->type(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoShop.ConfirmPaymentReq)
}

::google::protobuf::uint8* ConfirmPaymentReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoShop.ConfirmPaymentReq)
  // required uint32 ud = 1;
  if (has_ud()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->ud(), target);
  }

  // optional uint32 type = 2;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->type(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoShop.ConfirmPaymentReq)
  return target;
}

int ConfirmPaymentReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 ud = 1;
    if (has_ud()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->ud());
    }

    // optional uint32 type = 2;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->type());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ConfirmPaymentReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ConfirmPaymentReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ConfirmPaymentReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ConfirmPaymentReq::MergeFrom(const ConfirmPaymentReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_ud()) {
      set_ud(from.ud());
    }
    if (from.has_type()) {
      set_type(from.type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ConfirmPaymentReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ConfirmPaymentReq::CopyFrom(const ConfirmPaymentReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ConfirmPaymentReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void ConfirmPaymentReq::Swap(ConfirmPaymentReq* other) {
  if (other != this) {
    std::swap(ud_, other->ud_);
    std::swap(type_, other->type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ConfirmPaymentReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ConfirmPaymentReq_descriptor_;
  metadata.reflection = ConfirmPaymentReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ConfirmPaymentResp::kShopFieldNumber;
const int ConfirmPaymentResp::kCommonsFieldNumber;
#endif  // !_MSC_VER

ConfirmPaymentResp::ConfirmPaymentResp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoShop.ConfirmPaymentResp)
}

void ConfirmPaymentResp::InitAsDefaultInstance() {
  shop_ = const_cast< ::ProtoShop::ShopCPP*>(&::ProtoShop::ShopCPP::default_instance());
  commons_ = const_cast< ::DataCommon::CommonItemsCPP*>(&::DataCommon::CommonItemsCPP::default_instance());
}

ConfirmPaymentResp::ConfirmPaymentResp(const ConfirmPaymentResp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ProtoShop.ConfirmPaymentResp)
}

void ConfirmPaymentResp::SharedCtor() {
  _cached_size_ = 0;
  shop_ = NULL;
  commons_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ConfirmPaymentResp::~ConfirmPaymentResp() {
  // @@protoc_insertion_point(destructor:ProtoShop.ConfirmPaymentResp)
  SharedDtor();
}

void ConfirmPaymentResp::SharedDtor() {
  if (this != default_instance_) {
    delete shop_;
    delete commons_;
  }
}

void ConfirmPaymentResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ConfirmPaymentResp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ConfirmPaymentResp_descriptor_;
}

const ConfirmPaymentResp& ConfirmPaymentResp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoShop_2eproto();
  return *default_instance_;
}

ConfirmPaymentResp* ConfirmPaymentResp::default_instance_ = NULL;

ConfirmPaymentResp* ConfirmPaymentResp::New() const {
  return new ConfirmPaymentResp;
}

void ConfirmPaymentResp::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    if (has_shop()) {
      if (shop_ != NULL) shop_->::ProtoShop::ShopCPP::Clear();
    }
    if (has_commons()) {
      if (commons_ != NULL) commons_->::DataCommon::CommonItemsCPP::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ConfirmPaymentResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoShop.ConfirmPaymentResp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .ProtoShop.ShopCPP shop = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_shop()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_commons;
        break;
      }

      // required .DataCommon.CommonItemsCPP commons = 2;
      case 2: {
        if (tag == 18) {
         parse_commons:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_commons()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoShop.ConfirmPaymentResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoShop.ConfirmPaymentResp)
  return false;
#undef DO_
}

void ConfirmPaymentResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoShop.ConfirmPaymentResp)
  // required .ProtoShop.ShopCPP shop = 1;
  if (has_shop()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->shop(), output);
  }

  // required .DataCommon.CommonItemsCPP commons = 2;
  if (has_commons()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->commons(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoShop.ConfirmPaymentResp)
}

::google::protobuf::uint8* ConfirmPaymentResp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoShop.ConfirmPaymentResp)
  // required .ProtoShop.ShopCPP shop = 1;
  if (has_shop()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->shop(), target);
  }

  // required .DataCommon.CommonItemsCPP commons = 2;
  if (has_commons()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->commons(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoShop.ConfirmPaymentResp)
  return target;
}

int ConfirmPaymentResp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .ProtoShop.ShopCPP shop = 1;
    if (has_shop()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->shop());
    }

    // required .DataCommon.CommonItemsCPP commons = 2;
    if (has_commons()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->commons());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ConfirmPaymentResp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ConfirmPaymentResp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ConfirmPaymentResp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ConfirmPaymentResp::MergeFrom(const ConfirmPaymentResp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_shop()) {
      mutable_shop()->::ProtoShop::ShopCPP::MergeFrom(from.shop());
    }
    if (from.has_commons()) {
      mutable_commons()->::DataCommon::CommonItemsCPP::MergeFrom(from.commons());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ConfirmPaymentResp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ConfirmPaymentResp::CopyFrom(const ConfirmPaymentResp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ConfirmPaymentResp::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  if (has_shop()) {
    if (!this->shop().IsInitialized()) return false;
  }
  if (has_commons()) {
    if (!this->commons().IsInitialized()) return false;
  }
  return true;
}

void ConfirmPaymentResp::Swap(ConfirmPaymentResp* other) {
  if (other != this) {
    std::swap(shop_, other->shop_);
    std::swap(commons_, other->commons_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ConfirmPaymentResp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ConfirmPaymentResp_descriptor_;
  metadata.reflection = ConfirmPaymentResp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int VisitOtherShopReq::kOthuidFieldNumber;
#endif  // !_MSC_VER

VisitOtherShopReq::VisitOtherShopReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoShop.VisitOtherShopReq)
}

void VisitOtherShopReq::InitAsDefaultInstance() {
}

VisitOtherShopReq::VisitOtherShopReq(const VisitOtherShopReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ProtoShop.VisitOtherShopReq)
}

void VisitOtherShopReq::SharedCtor() {
  _cached_size_ = 0;
  othuid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

VisitOtherShopReq::~VisitOtherShopReq() {
  // @@protoc_insertion_point(destructor:ProtoShop.VisitOtherShopReq)
  SharedDtor();
}

void VisitOtherShopReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void VisitOtherShopReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* VisitOtherShopReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return VisitOtherShopReq_descriptor_;
}

const VisitOtherShopReq& VisitOtherShopReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoShop_2eproto();
  return *default_instance_;
}

VisitOtherShopReq* VisitOtherShopReq::default_instance_ = NULL;

VisitOtherShopReq* VisitOtherShopReq::New() const {
  return new VisitOtherShopReq;
}

void VisitOtherShopReq::Clear() {
  othuid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool VisitOtherShopReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoShop.VisitOtherShopReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 othuid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &othuid_)));
          set_has_othuid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoShop.VisitOtherShopReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoShop.VisitOtherShopReq)
  return false;
#undef DO_
}

void VisitOtherShopReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoShop.VisitOtherShopReq)
  // required uint32 othuid = 1;
  if (has_othuid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->othuid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoShop.VisitOtherShopReq)
}

::google::protobuf::uint8* VisitOtherShopReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoShop.VisitOtherShopReq)
  // required uint32 othuid = 1;
  if (has_othuid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->othuid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoShop.VisitOtherShopReq)
  return target;
}

int VisitOtherShopReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 othuid = 1;
    if (has_othuid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->othuid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void VisitOtherShopReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const VisitOtherShopReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const VisitOtherShopReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void VisitOtherShopReq::MergeFrom(const VisitOtherShopReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_othuid()) {
      set_othuid(from.othuid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void VisitOtherShopReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VisitOtherShopReq::CopyFrom(const VisitOtherShopReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VisitOtherShopReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void VisitOtherShopReq::Swap(VisitOtherShopReq* other) {
  if (other != this) {
    std::swap(othuid_, other->othuid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata VisitOtherShopReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = VisitOtherShopReq_descriptor_;
  metadata.reflection = VisitOtherShopReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int VisitOtherShopResp::kOthuidFieldNumber;
const int VisitOtherShopResp::kOthshopFieldNumber;
#endif  // !_MSC_VER

VisitOtherShopResp::VisitOtherShopResp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoShop.VisitOtherShopResp)
}

void VisitOtherShopResp::InitAsDefaultInstance() {
}

VisitOtherShopResp::VisitOtherShopResp(const VisitOtherShopResp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ProtoShop.VisitOtherShopResp)
}

void VisitOtherShopResp::SharedCtor() {
  _cached_size_ = 0;
  othuid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

VisitOtherShopResp::~VisitOtherShopResp() {
  // @@protoc_insertion_point(destructor:ProtoShop.VisitOtherShopResp)
  SharedDtor();
}

void VisitOtherShopResp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void VisitOtherShopResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* VisitOtherShopResp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return VisitOtherShopResp_descriptor_;
}

const VisitOtherShopResp& VisitOtherShopResp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoShop_2eproto();
  return *default_instance_;
}

VisitOtherShopResp* VisitOtherShopResp::default_instance_ = NULL;

VisitOtherShopResp* VisitOtherShopResp::New() const {
  return new VisitOtherShopResp;
}

void VisitOtherShopResp::Clear() {
  othuid_ = 0u;
  othshop_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool VisitOtherShopResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoShop.VisitOtherShopResp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 othuid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &othuid_)));
          set_has_othuid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_othshop;
        break;
      }

      // repeated .ProtoShop.ShopCPP othshop = 2;
      case 2: {
        if (tag == 18) {
         parse_othshop:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_othshop()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_othshop;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoShop.VisitOtherShopResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoShop.VisitOtherShopResp)
  return false;
#undef DO_
}

void VisitOtherShopResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoShop.VisitOtherShopResp)
  // required uint32 othuid = 1;
  if (has_othuid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->othuid(), output);
  }

  // repeated .ProtoShop.ShopCPP othshop = 2;
  for (int i = 0; i < this->othshop_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->othshop(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoShop.VisitOtherShopResp)
}

::google::protobuf::uint8* VisitOtherShopResp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoShop.VisitOtherShopResp)
  // required uint32 othuid = 1;
  if (has_othuid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->othuid(), target);
  }

  // repeated .ProtoShop.ShopCPP othshop = 2;
  for (int i = 0; i < this->othshop_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->othshop(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoShop.VisitOtherShopResp)
  return target;
}

int VisitOtherShopResp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 othuid = 1;
    if (has_othuid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->othuid());
    }

  }
  // repeated .ProtoShop.ShopCPP othshop = 2;
  total_size += 1 * this->othshop_size();
  for (int i = 0; i < this->othshop_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->othshop(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void VisitOtherShopResp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const VisitOtherShopResp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const VisitOtherShopResp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void VisitOtherShopResp::MergeFrom(const VisitOtherShopResp& from) {
  GOOGLE_CHECK_NE(&from, this);
  othshop_.MergeFrom(from.othshop_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_othuid()) {
      set_othuid(from.othuid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void VisitOtherShopResp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VisitOtherShopResp::CopyFrom(const VisitOtherShopResp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VisitOtherShopResp::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (!::google::protobuf::internal::AllAreInitialized(this->othshop())) return false;
  return true;
}

void VisitOtherShopResp::Swap(VisitOtherShopResp* other) {
  if (other != this) {
    std::swap(othuid_, other->othuid_);
    othshop_.Swap(&other->othshop_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata VisitOtherShopResp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = VisitOtherShopResp_descriptor_;
  metadata.reflection = VisitOtherShopResp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CSVisitOtherShopReq::kVisitUidFieldNumber;
const int CSVisitOtherShopReq::kVisitedUidFieldNumber;
#endif  // !_MSC_VER

CSVisitOtherShopReq::CSVisitOtherShopReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoShop.CSVisitOtherShopReq)
}

void CSVisitOtherShopReq::InitAsDefaultInstance() {
}

CSVisitOtherShopReq::CSVisitOtherShopReq(const CSVisitOtherShopReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ProtoShop.CSVisitOtherShopReq)
}

void CSVisitOtherShopReq::SharedCtor() {
  _cached_size_ = 0;
  visituid_ = 0u;
  visiteduid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CSVisitOtherShopReq::~CSVisitOtherShopReq() {
  // @@protoc_insertion_point(destructor:ProtoShop.CSVisitOtherShopReq)
  SharedDtor();
}

void CSVisitOtherShopReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CSVisitOtherShopReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CSVisitOtherShopReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CSVisitOtherShopReq_descriptor_;
}

const CSVisitOtherShopReq& CSVisitOtherShopReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoShop_2eproto();
  return *default_instance_;
}

CSVisitOtherShopReq* CSVisitOtherShopReq::default_instance_ = NULL;

CSVisitOtherShopReq* CSVisitOtherShopReq::New() const {
  return new CSVisitOtherShopReq;
}

void CSVisitOtherShopReq::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<CSVisitOtherShopReq*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(visituid_, visiteduid_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CSVisitOtherShopReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoShop.CSVisitOtherShopReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 visitUid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &visituid_)));
          set_has_visituid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_visitedUid;
        break;
      }

      // required uint32 visitedUid = 2;
      case 2: {
        if (tag == 16) {
         parse_visitedUid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &visiteduid_)));
          set_has_visiteduid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoShop.CSVisitOtherShopReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoShop.CSVisitOtherShopReq)
  return false;
#undef DO_
}

void CSVisitOtherShopReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoShop.CSVisitOtherShopReq)
  // required uint32 visitUid = 1;
  if (has_visituid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->visituid(), output);
  }

  // required uint32 visitedUid = 2;
  if (has_visiteduid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->visiteduid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoShop.CSVisitOtherShopReq)
}

::google::protobuf::uint8* CSVisitOtherShopReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoShop.CSVisitOtherShopReq)
  // required uint32 visitUid = 1;
  if (has_visituid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->visituid(), target);
  }

  // required uint32 visitedUid = 2;
  if (has_visiteduid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->visiteduid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoShop.CSVisitOtherShopReq)
  return target;
}

int CSVisitOtherShopReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 visitUid = 1;
    if (has_visituid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->visituid());
    }

    // required uint32 visitedUid = 2;
    if (has_visiteduid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->visiteduid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CSVisitOtherShopReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CSVisitOtherShopReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CSVisitOtherShopReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CSVisitOtherShopReq::MergeFrom(const CSVisitOtherShopReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_visituid()) {
      set_visituid(from.visituid());
    }
    if (from.has_visiteduid()) {
      set_visiteduid(from.visiteduid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CSVisitOtherShopReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CSVisitOtherShopReq::CopyFrom(const CSVisitOtherShopReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CSVisitOtherShopReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void CSVisitOtherShopReq::Swap(CSVisitOtherShopReq* other) {
  if (other != this) {
    std::swap(visituid_, other->visituid_);
    std::swap(visiteduid_, other->visiteduid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CSVisitOtherShopReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CSVisitOtherShopReq_descriptor_;
  metadata.reflection = CSVisitOtherShopReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CSVisitOtherShopResp::kVisitUidFieldNumber;
const int CSVisitOtherShopResp::kVisitedShopRespFieldNumber;
#endif  // !_MSC_VER

CSVisitOtherShopResp::CSVisitOtherShopResp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoShop.CSVisitOtherShopResp)
}

void CSVisitOtherShopResp::InitAsDefaultInstance() {
  visitedshopresp_ = const_cast< ::ProtoShop::VisitOtherShopResp*>(&::ProtoShop::VisitOtherShopResp::default_instance());
}

CSVisitOtherShopResp::CSVisitOtherShopResp(const CSVisitOtherShopResp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ProtoShop.CSVisitOtherShopResp)
}

void CSVisitOtherShopResp::SharedCtor() {
  _cached_size_ = 0;
  visituid_ = 0u;
  visitedshopresp_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CSVisitOtherShopResp::~CSVisitOtherShopResp() {
  // @@protoc_insertion_point(destructor:ProtoShop.CSVisitOtherShopResp)
  SharedDtor();
}

void CSVisitOtherShopResp::SharedDtor() {
  if (this != default_instance_) {
    delete visitedshopresp_;
  }
}

void CSVisitOtherShopResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CSVisitOtherShopResp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CSVisitOtherShopResp_descriptor_;
}

const CSVisitOtherShopResp& CSVisitOtherShopResp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoShop_2eproto();
  return *default_instance_;
}

CSVisitOtherShopResp* CSVisitOtherShopResp::default_instance_ = NULL;

CSVisitOtherShopResp* CSVisitOtherShopResp::New() const {
  return new CSVisitOtherShopResp;
}

void CSVisitOtherShopResp::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    visituid_ = 0u;
    if (has_visitedshopresp()) {
      if (visitedshopresp_ != NULL) visitedshopresp_->::ProtoShop::VisitOtherShopResp::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CSVisitOtherShopResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoShop.CSVisitOtherShopResp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 visitUid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &visituid_)));
          set_has_visituid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_visitedShopResp;
        break;
      }

      // required .ProtoShop.VisitOtherShopResp visitedShopResp = 2;
      case 2: {
        if (tag == 18) {
         parse_visitedShopResp:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_visitedshopresp()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoShop.CSVisitOtherShopResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoShop.CSVisitOtherShopResp)
  return false;
#undef DO_
}

void CSVisitOtherShopResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoShop.CSVisitOtherShopResp)
  // required uint32 visitUid = 1;
  if (has_visituid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->visituid(), output);
  }

  // required .ProtoShop.VisitOtherShopResp visitedShopResp = 2;
  if (has_visitedshopresp()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->visitedshopresp(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoShop.CSVisitOtherShopResp)
}

::google::protobuf::uint8* CSVisitOtherShopResp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoShop.CSVisitOtherShopResp)
  // required uint32 visitUid = 1;
  if (has_visituid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->visituid(), target);
  }

  // required .ProtoShop.VisitOtherShopResp visitedShopResp = 2;
  if (has_visitedshopresp()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->visitedshopresp(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoShop.CSVisitOtherShopResp)
  return target;
}

int CSVisitOtherShopResp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 visitUid = 1;
    if (has_visituid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->visituid());
    }

    // required .ProtoShop.VisitOtherShopResp visitedShopResp = 2;
    if (has_visitedshopresp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->visitedshopresp());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CSVisitOtherShopResp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CSVisitOtherShopResp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CSVisitOtherShopResp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CSVisitOtherShopResp::MergeFrom(const CSVisitOtherShopResp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_visituid()) {
      set_visituid(from.visituid());
    }
    if (from.has_visitedshopresp()) {
      mutable_visitedshopresp()->::ProtoShop::VisitOtherShopResp::MergeFrom(from.visitedshopresp());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CSVisitOtherShopResp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CSVisitOtherShopResp::CopyFrom(const CSVisitOtherShopResp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CSVisitOtherShopResp::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  if (has_visitedshopresp()) {
    if (!this->visitedshopresp().IsInitialized()) return false;
  }
  return true;
}

void CSVisitOtherShopResp::Swap(CSVisitOtherShopResp* other) {
  if (other != this) {
    std::swap(visituid_, other->visituid_);
    std::swap(visitedshopresp_, other->visitedshopresp_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CSVisitOtherShopResp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CSVisitOtherShopResp_descriptor_;
  metadata.reflection = CSVisitOtherShopResp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PurchaseReq::kOthuidFieldNumber;
const int PurchaseReq::kUdFieldNumber;
const int PurchaseReq::kPropsidFieldNumber;
const int PurchaseReq::kPropscntFieldNumber;
const int PurchaseReq::kPropspriceFieldNumber;
const int PurchaseReq::kSellflagFieldNumber;
#endif  // !_MSC_VER

PurchaseReq::PurchaseReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoShop.PurchaseReq)
}

void PurchaseReq::InitAsDefaultInstance() {
}

PurchaseReq::PurchaseReq(const PurchaseReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ProtoShop.PurchaseReq)
}

void PurchaseReq::SharedCtor() {
  _cached_size_ = 0;
  othuid_ = 0u;
  ud_ = 0u;
  propsid_ = 0u;
  propscnt_ = 0u;
  propsprice_ = 0u;
  sellflag_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PurchaseReq::~PurchaseReq() {
  // @@protoc_insertion_point(destructor:ProtoShop.PurchaseReq)
  SharedDtor();
}

void PurchaseReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PurchaseReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PurchaseReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PurchaseReq_descriptor_;
}

const PurchaseReq& PurchaseReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoShop_2eproto();
  return *default_instance_;
}

PurchaseReq* PurchaseReq::default_instance_ = NULL;

PurchaseReq* PurchaseReq::New() const {
  return new PurchaseReq;
}

void PurchaseReq::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<PurchaseReq*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 63) {
    ZR_(othuid_, sellflag_);
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PurchaseReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoShop.PurchaseReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 othuid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &othuid_)));
          set_has_othuid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_ud;
        break;
      }

      // required uint32 ud = 2;
      case 2: {
        if (tag == 16) {
         parse_ud:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ud_)));
          set_has_ud();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_propsid;
        break;
      }

      // required uint32 propsid = 3;
      case 3: {
        if (tag == 24) {
         parse_propsid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &propsid_)));
          set_has_propsid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_propscnt;
        break;
      }

      // required uint32 propscnt = 4;
      case 4: {
        if (tag == 32) {
         parse_propscnt:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &propscnt_)));
          set_has_propscnt();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_propsprice;
        break;
      }

      // required uint32 propsprice = 5;
      case 5: {
        if (tag == 40) {
         parse_propsprice:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &propsprice_)));
          set_has_propsprice();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_sellflag;
        break;
      }

      // required uint32 sellflag = 6;
      case 6: {
        if (tag == 48) {
         parse_sellflag:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &sellflag_)));
          set_has_sellflag();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoShop.PurchaseReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoShop.PurchaseReq)
  return false;
#undef DO_
}

void PurchaseReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoShop.PurchaseReq)
  // required uint32 othuid = 1;
  if (has_othuid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->othuid(), output);
  }

  // required uint32 ud = 2;
  if (has_ud()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->ud(), output);
  }

  // required uint32 propsid = 3;
  if (has_propsid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->propsid(), output);
  }

  // required uint32 propscnt = 4;
  if (has_propscnt()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->propscnt(), output);
  }

  // required uint32 propsprice = 5;
  if (has_propsprice()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->propsprice(), output);
  }

  // required uint32 sellflag = 6;
  if (has_sellflag()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->sellflag(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoShop.PurchaseReq)
}

::google::protobuf::uint8* PurchaseReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoShop.PurchaseReq)
  // required uint32 othuid = 1;
  if (has_othuid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->othuid(), target);
  }

  // required uint32 ud = 2;
  if (has_ud()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->ud(), target);
  }

  // required uint32 propsid = 3;
  if (has_propsid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->propsid(), target);
  }

  // required uint32 propscnt = 4;
  if (has_propscnt()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->propscnt(), target);
  }

  // required uint32 propsprice = 5;
  if (has_propsprice()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->propsprice(), target);
  }

  // required uint32 sellflag = 6;
  if (has_sellflag()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->sellflag(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoShop.PurchaseReq)
  return target;
}

int PurchaseReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 othuid = 1;
    if (has_othuid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->othuid());
    }

    // required uint32 ud = 2;
    if (has_ud()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->ud());
    }

    // required uint32 propsid = 3;
    if (has_propsid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->propsid());
    }

    // required uint32 propscnt = 4;
    if (has_propscnt()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->propscnt());
    }

    // required uint32 propsprice = 5;
    if (has_propsprice()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->propsprice());
    }

    // required uint32 sellflag = 6;
    if (has_sellflag()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->sellflag());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PurchaseReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PurchaseReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PurchaseReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PurchaseReq::MergeFrom(const PurchaseReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_othuid()) {
      set_othuid(from.othuid());
    }
    if (from.has_ud()) {
      set_ud(from.ud());
    }
    if (from.has_propsid()) {
      set_propsid(from.propsid());
    }
    if (from.has_propscnt()) {
      set_propscnt(from.propscnt());
    }
    if (from.has_propsprice()) {
      set_propsprice(from.propsprice());
    }
    if (from.has_sellflag()) {
      set_sellflag(from.sellflag());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PurchaseReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PurchaseReq::CopyFrom(const PurchaseReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PurchaseReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000003f) != 0x0000003f) return false;

  return true;
}

void PurchaseReq::Swap(PurchaseReq* other) {
  if (other != this) {
    std::swap(othuid_, other->othuid_);
    std::swap(ud_, other->ud_);
    std::swap(propsid_, other->propsid_);
    std::swap(propscnt_, other->propscnt_);
    std::swap(propsprice_, other->propsprice_);
    std::swap(sellflag_, other->sellflag_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PurchaseReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PurchaseReq_descriptor_;
  metadata.reflection = PurchaseReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PurchaseResp::kCommonsFieldNumber;
const int PurchaseResp::kOthuidFieldNumber;
const int PurchaseResp::kOthshopFieldNumber;
#endif  // !_MSC_VER

PurchaseResp::PurchaseResp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoShop.PurchaseResp)
}

void PurchaseResp::InitAsDefaultInstance() {
  commons_ = const_cast< ::DataCommon::CommonItemsCPP*>(&::DataCommon::CommonItemsCPP::default_instance());
  othshop_ = const_cast< ::ProtoShop::ShopCPP*>(&::ProtoShop::ShopCPP::default_instance());
}

PurchaseResp::PurchaseResp(const PurchaseResp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ProtoShop.PurchaseResp)
}

void PurchaseResp::SharedCtor() {
  _cached_size_ = 0;
  commons_ = NULL;
  othuid_ = 0u;
  othshop_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PurchaseResp::~PurchaseResp() {
  // @@protoc_insertion_point(destructor:ProtoShop.PurchaseResp)
  SharedDtor();
}

void PurchaseResp::SharedDtor() {
  if (this != default_instance_) {
    delete commons_;
    delete othshop_;
  }
}

void PurchaseResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PurchaseResp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PurchaseResp_descriptor_;
}

const PurchaseResp& PurchaseResp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoShop_2eproto();
  return *default_instance_;
}

PurchaseResp* PurchaseResp::default_instance_ = NULL;

PurchaseResp* PurchaseResp::New() const {
  return new PurchaseResp;
}

void PurchaseResp::Clear() {
  if (_has_bits_[0 / 32] & 7) {
    if (has_commons()) {
      if (commons_ != NULL) commons_->::DataCommon::CommonItemsCPP::Clear();
    }
    othuid_ = 0u;
    if (has_othshop()) {
      if (othshop_ != NULL) othshop_->::ProtoShop::ShopCPP::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PurchaseResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoShop.PurchaseResp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .DataCommon.CommonItemsCPP commons = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_commons()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_othuid;
        break;
      }

      // required uint32 othuid = 2;
      case 2: {
        if (tag == 16) {
         parse_othuid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &othuid_)));
          set_has_othuid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_othshop;
        break;
      }

      // required .ProtoShop.ShopCPP othshop = 3;
      case 3: {
        if (tag == 26) {
         parse_othshop:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_othshop()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoShop.PurchaseResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoShop.PurchaseResp)
  return false;
#undef DO_
}

void PurchaseResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoShop.PurchaseResp)
  // required .DataCommon.CommonItemsCPP commons = 1;
  if (has_commons()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->commons(), output);
  }

  // required uint32 othuid = 2;
  if (has_othuid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->othuid(), output);
  }

  // required .ProtoShop.ShopCPP othshop = 3;
  if (has_othshop()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->othshop(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoShop.PurchaseResp)
}

::google::protobuf::uint8* PurchaseResp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoShop.PurchaseResp)
  // required .DataCommon.CommonItemsCPP commons = 1;
  if (has_commons()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->commons(), target);
  }

  // required uint32 othuid = 2;
  if (has_othuid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->othuid(), target);
  }

  // required .ProtoShop.ShopCPP othshop = 3;
  if (has_othshop()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->othshop(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoShop.PurchaseResp)
  return target;
}

int PurchaseResp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .DataCommon.CommonItemsCPP commons = 1;
    if (has_commons()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->commons());
    }

    // required uint32 othuid = 2;
    if (has_othuid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->othuid());
    }

    // required .ProtoShop.ShopCPP othshop = 3;
    if (has_othshop()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->othshop());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PurchaseResp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PurchaseResp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PurchaseResp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PurchaseResp::MergeFrom(const PurchaseResp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_commons()) {
      mutable_commons()->::DataCommon::CommonItemsCPP::MergeFrom(from.commons());
    }
    if (from.has_othuid()) {
      set_othuid(from.othuid());
    }
    if (from.has_othshop()) {
      mutable_othshop()->::ProtoShop::ShopCPP::MergeFrom(from.othshop());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PurchaseResp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PurchaseResp::CopyFrom(const PurchaseResp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PurchaseResp::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  if (has_commons()) {
    if (!this->commons().IsInitialized()) return false;
  }
  if (has_othshop()) {
    if (!this->othshop().IsInitialized()) return false;
  }
  return true;
}

void PurchaseResp::Swap(PurchaseResp* other) {
  if (other != this) {
    std::swap(commons_, other->commons_);
    std::swap(othuid_, other->othuid_);
    std::swap(othshop_, other->othshop_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PurchaseResp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PurchaseResp_descriptor_;
  metadata.reflection = PurchaseResp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CSPurchaseReq::kOthuidFieldNumber;
const int CSPurchaseReq::kUdFieldNumber;
const int CSPurchaseReq::kPropsidFieldNumber;
const int CSPurchaseReq::kPropscntFieldNumber;
const int CSPurchaseReq::kPropspriceFieldNumber;
const int CSPurchaseReq::kSellflagFieldNumber;
const int CSPurchaseReq::kBuyeruidFieldNumber;
const int CSPurchaseReq::kBuyerfigFieldNumber;
const int CSPurchaseReq::kBuyernameFieldNumber;
#endif  // !_MSC_VER

CSPurchaseReq::CSPurchaseReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoShop.CSPurchaseReq)
}

void CSPurchaseReq::InitAsDefaultInstance() {
}

CSPurchaseReq::CSPurchaseReq(const CSPurchaseReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ProtoShop.CSPurchaseReq)
}

void CSPurchaseReq::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  othuid_ = 0u;
  ud_ = 0u;
  propsid_ = 0u;
  propscnt_ = 0u;
  propsprice_ = 0u;
  sellflag_ = 0u;
  buyeruid_ = 0u;
  buyerfig_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  buyername_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CSPurchaseReq::~CSPurchaseReq() {
  // @@protoc_insertion_point(destructor:ProtoShop.CSPurchaseReq)
  SharedDtor();
}

void CSPurchaseReq::SharedDtor() {
  if (buyerfig_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete buyerfig_;
  }
  if (buyername_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete buyername_;
  }
  if (this != default_instance_) {
  }
}

void CSPurchaseReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CSPurchaseReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CSPurchaseReq_descriptor_;
}

const CSPurchaseReq& CSPurchaseReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoShop_2eproto();
  return *default_instance_;
}

CSPurchaseReq* CSPurchaseReq::default_instance_ = NULL;

CSPurchaseReq* CSPurchaseReq::New() const {
  return new CSPurchaseReq;
}

void CSPurchaseReq::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<CSPurchaseReq*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 255) {
    ZR_(othuid_, sellflag_);
    buyeruid_ = 0u;
    if (has_buyerfig()) {
      if (buyerfig_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        buyerfig_->clear();
      }
    }
  }
  if (has_buyername()) {
    if (buyername_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
      buyername_->clear();
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CSPurchaseReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoShop.CSPurchaseReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 othuid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &othuid_)));
          set_has_othuid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_ud;
        break;
      }

      // required uint32 ud = 2;
      case 2: {
        if (tag == 16) {
         parse_ud:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ud_)));
          set_has_ud();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_propsid;
        break;
      }

      // required uint32 propsid = 3;
      case 3: {
        if (tag == 24) {
         parse_propsid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &propsid_)));
          set_has_propsid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_propscnt;
        break;
      }

      // required uint32 propscnt = 4;
      case 4: {
        if (tag == 32) {
         parse_propscnt:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &propscnt_)));
          set_has_propscnt();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_propsprice;
        break;
      }

      // required uint32 propsprice = 5;
      case 5: {
        if (tag == 40) {
         parse_propsprice:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &propsprice_)));
          set_has_propsprice();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_sellflag;
        break;
      }

      // required uint32 sellflag = 6;
      case 6: {
        if (tag == 48) {
         parse_sellflag:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &sellflag_)));
          set_has_sellflag();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_buyeruid;
        break;
      }

      // optional uint32 buyeruid = 7;
      case 7: {
        if (tag == 56) {
         parse_buyeruid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &buyeruid_)));
          set_has_buyeruid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_buyerfig;
        break;
      }

      // optional bytes buyerfig = 8;
      case 8: {
        if (tag == 66) {
         parse_buyerfig:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_buyerfig()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_buyername;
        break;
      }

      // optional bytes buyername = 9;
      case 9: {
        if (tag == 74) {
         parse_buyername:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_buyername()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoShop.CSPurchaseReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoShop.CSPurchaseReq)
  return false;
#undef DO_
}

void CSPurchaseReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoShop.CSPurchaseReq)
  // required uint32 othuid = 1;
  if (has_othuid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->othuid(), output);
  }

  // required uint32 ud = 2;
  if (has_ud()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->ud(), output);
  }

  // required uint32 propsid = 3;
  if (has_propsid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->propsid(), output);
  }

  // required uint32 propscnt = 4;
  if (has_propscnt()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->propscnt(), output);
  }

  // required uint32 propsprice = 5;
  if (has_propsprice()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->propsprice(), output);
  }

  // required uint32 sellflag = 6;
  if (has_sellflag()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->sellflag(), output);
  }

  // optional uint32 buyeruid = 7;
  if (has_buyeruid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->buyeruid(), output);
  }

  // optional bytes buyerfig = 8;
  if (has_buyerfig()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      8, this->buyerfig(), output);
  }

  // optional bytes buyername = 9;
  if (has_buyername()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      9, this->buyername(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoShop.CSPurchaseReq)
}

::google::protobuf::uint8* CSPurchaseReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoShop.CSPurchaseReq)
  // required uint32 othuid = 1;
  if (has_othuid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->othuid(), target);
  }

  // required uint32 ud = 2;
  if (has_ud()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->ud(), target);
  }

  // required uint32 propsid = 3;
  if (has_propsid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->propsid(), target);
  }

  // required uint32 propscnt = 4;
  if (has_propscnt()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->propscnt(), target);
  }

  // required uint32 propsprice = 5;
  if (has_propsprice()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->propsprice(), target);
  }

  // required uint32 sellflag = 6;
  if (has_sellflag()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->sellflag(), target);
  }

  // optional uint32 buyeruid = 7;
  if (has_buyeruid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->buyeruid(), target);
  }

  // optional bytes buyerfig = 8;
  if (has_buyerfig()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        8, this->buyerfig(), target);
  }

  // optional bytes buyername = 9;
  if (has_buyername()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        9, this->buyername(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoShop.CSPurchaseReq)
  return target;
}

int CSPurchaseReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 othuid = 1;
    if (has_othuid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->othuid());
    }

    // required uint32 ud = 2;
    if (has_ud()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->ud());
    }

    // required uint32 propsid = 3;
    if (has_propsid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->propsid());
    }

    // required uint32 propscnt = 4;
    if (has_propscnt()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->propscnt());
    }

    // required uint32 propsprice = 5;
    if (has_propsprice()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->propsprice());
    }

    // required uint32 sellflag = 6;
    if (has_sellflag()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->sellflag());
    }

    // optional uint32 buyeruid = 7;
    if (has_buyeruid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->buyeruid());
    }

    // optional bytes buyerfig = 8;
    if (has_buyerfig()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->buyerfig());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional bytes buyername = 9;
    if (has_buyername()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->buyername());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CSPurchaseReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CSPurchaseReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CSPurchaseReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CSPurchaseReq::MergeFrom(const CSPurchaseReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_othuid()) {
      set_othuid(from.othuid());
    }
    if (from.has_ud()) {
      set_ud(from.ud());
    }
    if (from.has_propsid()) {
      set_propsid(from.propsid());
    }
    if (from.has_propscnt()) {
      set_propscnt(from.propscnt());
    }
    if (from.has_propsprice()) {
      set_propsprice(from.propsprice());
    }
    if (from.has_sellflag()) {
      set_sellflag(from.sellflag());
    }
    if (from.has_buyeruid()) {
      set_buyeruid(from.buyeruid());
    }
    if (from.has_buyerfig()) {
      set_buyerfig(from.buyerfig());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_buyername()) {
      set_buyername(from.buyername());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CSPurchaseReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CSPurchaseReq::CopyFrom(const CSPurchaseReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CSPurchaseReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000003f) != 0x0000003f) return false;

  return true;
}

void CSPurchaseReq::Swap(CSPurchaseReq* other) {
  if (other != this) {
    std::swap(othuid_, other->othuid_);
    std::swap(ud_, other->ud_);
    std::swap(propsid_, other->propsid_);
    std::swap(propscnt_, other->propscnt_);
    std::swap(propsprice_, other->propsprice_);
    std::swap(sellflag_, other->sellflag_);
    std::swap(buyeruid_, other->buyeruid_);
    std::swap(buyerfig_, other->buyerfig_);
    std::swap(buyername_, other->buyername_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CSPurchaseReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CSPurchaseReq_descriptor_;
  metadata.reflection = CSPurchaseReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CSPurchaseResp::kVisitUidFieldNumber;
const int CSPurchaseResp::kVisitedUidFieldNumber;
const int CSPurchaseResp::kVisitedshopFieldNumber;
#endif  // !_MSC_VER

CSPurchaseResp::CSPurchaseResp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoShop.CSPurchaseResp)
}

void CSPurchaseResp::InitAsDefaultInstance() {
  visitedshop_ = const_cast< ::ProtoShop::ShopCPP*>(&::ProtoShop::ShopCPP::default_instance());
}

CSPurchaseResp::CSPurchaseResp(const CSPurchaseResp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ProtoShop.CSPurchaseResp)
}

void CSPurchaseResp::SharedCtor() {
  _cached_size_ = 0;
  visituid_ = 0u;
  visiteduid_ = 0u;
  visitedshop_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CSPurchaseResp::~CSPurchaseResp() {
  // @@protoc_insertion_point(destructor:ProtoShop.CSPurchaseResp)
  SharedDtor();
}

void CSPurchaseResp::SharedDtor() {
  if (this != default_instance_) {
    delete visitedshop_;
  }
}

void CSPurchaseResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CSPurchaseResp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CSPurchaseResp_descriptor_;
}

const CSPurchaseResp& CSPurchaseResp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoShop_2eproto();
  return *default_instance_;
}

CSPurchaseResp* CSPurchaseResp::default_instance_ = NULL;

CSPurchaseResp* CSPurchaseResp::New() const {
  return new CSPurchaseResp;
}

void CSPurchaseResp::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<CSPurchaseResp*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 7) {
    ZR_(visituid_, visiteduid_);
    if (has_visitedshop()) {
      if (visitedshop_ != NULL) visitedshop_->::ProtoShop::ShopCPP::Clear();
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CSPurchaseResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoShop.CSPurchaseResp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 visitUid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &visituid_)));
          set_has_visituid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_visitedUid;
        break;
      }

      // required uint32 visitedUid = 2;
      case 2: {
        if (tag == 16) {
         parse_visitedUid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &visiteduid_)));
          set_has_visiteduid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_visitedshop;
        break;
      }

      // required .ProtoShop.ShopCPP visitedshop = 3;
      case 3: {
        if (tag == 26) {
         parse_visitedshop:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_visitedshop()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoShop.CSPurchaseResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoShop.CSPurchaseResp)
  return false;
#undef DO_
}

void CSPurchaseResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoShop.CSPurchaseResp)
  // required uint32 visitUid = 1;
  if (has_visituid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->visituid(), output);
  }

  // required uint32 visitedUid = 2;
  if (has_visiteduid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->visiteduid(), output);
  }

  // required .ProtoShop.ShopCPP visitedshop = 3;
  if (has_visitedshop()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->visitedshop(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoShop.CSPurchaseResp)
}

::google::protobuf::uint8* CSPurchaseResp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoShop.CSPurchaseResp)
  // required uint32 visitUid = 1;
  if (has_visituid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->visituid(), target);
  }

  // required uint32 visitedUid = 2;
  if (has_visiteduid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->visiteduid(), target);
  }

  // required .ProtoShop.ShopCPP visitedshop = 3;
  if (has_visitedshop()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->visitedshop(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoShop.CSPurchaseResp)
  return target;
}

int CSPurchaseResp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 visitUid = 1;
    if (has_visituid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->visituid());
    }

    // required uint32 visitedUid = 2;
    if (has_visiteduid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->visiteduid());
    }

    // required .ProtoShop.ShopCPP visitedshop = 3;
    if (has_visitedshop()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->visitedshop());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CSPurchaseResp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CSPurchaseResp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CSPurchaseResp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CSPurchaseResp::MergeFrom(const CSPurchaseResp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_visituid()) {
      set_visituid(from.visituid());
    }
    if (from.has_visiteduid()) {
      set_visiteduid(from.visiteduid());
    }
    if (from.has_visitedshop()) {
      mutable_visitedshop()->::ProtoShop::ShopCPP::MergeFrom(from.visitedshop());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CSPurchaseResp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CSPurchaseResp::CopyFrom(const CSPurchaseResp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CSPurchaseResp::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  if (has_visitedshop()) {
    if (!this->visitedshop().IsInitialized()) return false;
  }
  return true;
}

void CSPurchaseResp::Swap(CSPurchaseResp* other) {
  if (other != this) {
    std::swap(visituid_, other->visituid_);
    std::swap(visiteduid_, other->visiteduid_);
    std::swap(visitedshop_, other->visitedshop_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CSPurchaseResp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CSPurchaseResp_descriptor_;
  metadata.reflection = CSPurchaseResp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ModifyShelfInfoReq::kUdFieldNumber;
const int ModifyShelfInfoReq::kFlagFieldNumber;
#endif  // !_MSC_VER

ModifyShelfInfoReq::ModifyShelfInfoReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoShop.ModifyShelfInfoReq)
}

void ModifyShelfInfoReq::InitAsDefaultInstance() {
}

ModifyShelfInfoReq::ModifyShelfInfoReq(const ModifyShelfInfoReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ProtoShop.ModifyShelfInfoReq)
}

void ModifyShelfInfoReq::SharedCtor() {
  _cached_size_ = 0;
  ud_ = 0u;
  flag_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ModifyShelfInfoReq::~ModifyShelfInfoReq() {
  // @@protoc_insertion_point(destructor:ProtoShop.ModifyShelfInfoReq)
  SharedDtor();
}

void ModifyShelfInfoReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ModifyShelfInfoReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ModifyShelfInfoReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ModifyShelfInfoReq_descriptor_;
}

const ModifyShelfInfoReq& ModifyShelfInfoReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoShop_2eproto();
  return *default_instance_;
}

ModifyShelfInfoReq* ModifyShelfInfoReq::default_instance_ = NULL;

ModifyShelfInfoReq* ModifyShelfInfoReq::New() const {
  return new ModifyShelfInfoReq;
}

void ModifyShelfInfoReq::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<ModifyShelfInfoReq*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(ud_, flag_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ModifyShelfInfoReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoShop.ModifyShelfInfoReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 ud = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ud_)));
          set_has_ud();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_flag;
        break;
      }

      // required uint32 flag = 2;
      case 2: {
        if (tag == 16) {
         parse_flag:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &flag_)));
          set_has_flag();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoShop.ModifyShelfInfoReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoShop.ModifyShelfInfoReq)
  return false;
#undef DO_
}

void ModifyShelfInfoReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoShop.ModifyShelfInfoReq)
  // required uint32 ud = 1;
  if (has_ud()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->ud(), output);
  }

  // required uint32 flag = 2;
  if (has_flag()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->flag(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoShop.ModifyShelfInfoReq)
}

::google::protobuf::uint8* ModifyShelfInfoReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoShop.ModifyShelfInfoReq)
  // required uint32 ud = 1;
  if (has_ud()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->ud(), target);
  }

  // required uint32 flag = 2;
  if (has_flag()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->flag(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoShop.ModifyShelfInfoReq)
  return target;
}

int ModifyShelfInfoReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 ud = 1;
    if (has_ud()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->ud());
    }

    // required uint32 flag = 2;
    if (has_flag()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->flag());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ModifyShelfInfoReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ModifyShelfInfoReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ModifyShelfInfoReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ModifyShelfInfoReq::MergeFrom(const ModifyShelfInfoReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_ud()) {
      set_ud(from.ud());
    }
    if (from.has_flag()) {
      set_flag(from.flag());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ModifyShelfInfoReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ModifyShelfInfoReq::CopyFrom(const ModifyShelfInfoReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ModifyShelfInfoReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void ModifyShelfInfoReq::Swap(ModifyShelfInfoReq* other) {
  if (other != this) {
    std::swap(ud_, other->ud_);
    std::swap(flag_, other->flag_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ModifyShelfInfoReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ModifyShelfInfoReq_descriptor_;
  metadata.reflection = ModifyShelfInfoReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ModifyShelfInfoResp::kShopFieldNumber;
const int ModifyShelfInfoResp::kCommonsFieldNumber;
const int ModifyShelfInfoResp::kTsFieldNumber;
#endif  // !_MSC_VER

ModifyShelfInfoResp::ModifyShelfInfoResp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoShop.ModifyShelfInfoResp)
}

void ModifyShelfInfoResp::InitAsDefaultInstance() {
  shop_ = const_cast< ::ProtoShop::ShopCPP*>(&::ProtoShop::ShopCPP::default_instance());
  commons_ = const_cast< ::DataCommon::CommonItemsCPP*>(&::DataCommon::CommonItemsCPP::default_instance());
}

ModifyShelfInfoResp::ModifyShelfInfoResp(const ModifyShelfInfoResp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ProtoShop.ModifyShelfInfoResp)
}

void ModifyShelfInfoResp::SharedCtor() {
  _cached_size_ = 0;
  shop_ = NULL;
  commons_ = NULL;
  ts_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ModifyShelfInfoResp::~ModifyShelfInfoResp() {
  // @@protoc_insertion_point(destructor:ProtoShop.ModifyShelfInfoResp)
  SharedDtor();
}

void ModifyShelfInfoResp::SharedDtor() {
  if (this != default_instance_) {
    delete shop_;
    delete commons_;
  }
}

void ModifyShelfInfoResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ModifyShelfInfoResp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ModifyShelfInfoResp_descriptor_;
}

const ModifyShelfInfoResp& ModifyShelfInfoResp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoShop_2eproto();
  return *default_instance_;
}

ModifyShelfInfoResp* ModifyShelfInfoResp::default_instance_ = NULL;

ModifyShelfInfoResp* ModifyShelfInfoResp::New() const {
  return new ModifyShelfInfoResp;
}

void ModifyShelfInfoResp::Clear() {
  if (_has_bits_[0 / 32] & 7) {
    if (has_shop()) {
      if (shop_ != NULL) shop_->::ProtoShop::ShopCPP::Clear();
    }
    if (has_commons()) {
      if (commons_ != NULL) commons_->::DataCommon::CommonItemsCPP::Clear();
    }
    ts_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ModifyShelfInfoResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoShop.ModifyShelfInfoResp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .ProtoShop.ShopCPP shop = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_shop()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_commons;
        break;
      }

      // optional .DataCommon.CommonItemsCPP commons = 2;
      case 2: {
        if (tag == 18) {
         parse_commons:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_commons()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_ts;
        break;
      }

      // optional uint32 ts = 3;
      case 3: {
        if (tag == 24) {
         parse_ts:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ts_)));
          set_has_ts();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoShop.ModifyShelfInfoResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoShop.ModifyShelfInfoResp)
  return false;
#undef DO_
}

void ModifyShelfInfoResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoShop.ModifyShelfInfoResp)
  // required .ProtoShop.ShopCPP shop = 1;
  if (has_shop()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->shop(), output);
  }

  // optional .DataCommon.CommonItemsCPP commons = 2;
  if (has_commons()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->commons(), output);
  }

  // optional uint32 ts = 3;
  if (has_ts()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->ts(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoShop.ModifyShelfInfoResp)
}

::google::protobuf::uint8* ModifyShelfInfoResp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoShop.ModifyShelfInfoResp)
  // required .ProtoShop.ShopCPP shop = 1;
  if (has_shop()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->shop(), target);
  }

  // optional .DataCommon.CommonItemsCPP commons = 2;
  if (has_commons()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->commons(), target);
  }

  // optional uint32 ts = 3;
  if (has_ts()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->ts(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoShop.ModifyShelfInfoResp)
  return target;
}

int ModifyShelfInfoResp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .ProtoShop.ShopCPP shop = 1;
    if (has_shop()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->shop());
    }

    // optional .DataCommon.CommonItemsCPP commons = 2;
    if (has_commons()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->commons());
    }

    // optional uint32 ts = 3;
    if (has_ts()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->ts());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ModifyShelfInfoResp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ModifyShelfInfoResp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ModifyShelfInfoResp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ModifyShelfInfoResp::MergeFrom(const ModifyShelfInfoResp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_shop()) {
      mutable_shop()->::ProtoShop::ShopCPP::MergeFrom(from.shop());
    }
    if (from.has_commons()) {
      mutable_commons()->::DataCommon::CommonItemsCPP::MergeFrom(from.commons());
    }
    if (from.has_ts()) {
      set_ts(from.ts());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ModifyShelfInfoResp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ModifyShelfInfoResp::CopyFrom(const ModifyShelfInfoResp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ModifyShelfInfoResp::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (has_shop()) {
    if (!this->shop().IsInitialized()) return false;
  }
  if (has_commons()) {
    if (!this->commons().IsInitialized()) return false;
  }
  return true;
}

void ModifyShelfInfoResp::Swap(ModifyShelfInfoResp* other) {
  if (other != this) {
    std::swap(shop_, other->shop_);
    std::swap(commons_, other->commons_);
    std::swap(ts_, other->ts_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ModifyShelfInfoResp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ModifyShelfInfoResp_descriptor_;
  metadata.reflection = ModifyShelfInfoResp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PushShopMsg::kShopFieldNumber;
#endif  // !_MSC_VER

PushShopMsg::PushShopMsg()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoShop.PushShopMsg)
}

void PushShopMsg::InitAsDefaultInstance() {
  shop_ = const_cast< ::ProtoShop::ShopCPP*>(&::ProtoShop::ShopCPP::default_instance());
}

PushShopMsg::PushShopMsg(const PushShopMsg& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ProtoShop.PushShopMsg)
}

void PushShopMsg::SharedCtor() {
  _cached_size_ = 0;
  shop_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PushShopMsg::~PushShopMsg() {
  // @@protoc_insertion_point(destructor:ProtoShop.PushShopMsg)
  SharedDtor();
}

void PushShopMsg::SharedDtor() {
  if (this != default_instance_) {
    delete shop_;
  }
}

void PushShopMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PushShopMsg::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PushShopMsg_descriptor_;
}

const PushShopMsg& PushShopMsg::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoShop_2eproto();
  return *default_instance_;
}

PushShopMsg* PushShopMsg::default_instance_ = NULL;

PushShopMsg* PushShopMsg::New() const {
  return new PushShopMsg;
}

void PushShopMsg::Clear() {
  if (has_shop()) {
    if (shop_ != NULL) shop_->::ProtoShop::ShopCPP::Clear();
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PushShopMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoShop.PushShopMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .ProtoShop.ShopCPP shop = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_shop()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoShop.PushShopMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoShop.PushShopMsg)
  return false;
#undef DO_
}

void PushShopMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoShop.PushShopMsg)
  // required .ProtoShop.ShopCPP shop = 1;
  if (has_shop()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->shop(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoShop.PushShopMsg)
}

::google::protobuf::uint8* PushShopMsg::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoShop.PushShopMsg)
  // required .ProtoShop.ShopCPP shop = 1;
  if (has_shop()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->shop(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoShop.PushShopMsg)
  return target;
}

int PushShopMsg::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .ProtoShop.ShopCPP shop = 1;
    if (has_shop()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->shop());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PushShopMsg::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PushShopMsg* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PushShopMsg*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PushShopMsg::MergeFrom(const PushShopMsg& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_shop()) {
      mutable_shop()->::ProtoShop::ShopCPP::MergeFrom(from.shop());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PushShopMsg::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PushShopMsg::CopyFrom(const PushShopMsg& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PushShopMsg::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (has_shop()) {
    if (!this->shop().IsInitialized()) return false;
  }
  return true;
}

void PushShopMsg::Swap(PushShopMsg* other) {
  if (other != this) {
    std::swap(shop_, other->shop_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PushShopMsg::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PushShopMsg_descriptor_;
  metadata.reflection = PushShopMsg_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ViewAdRecycleItemReq::kUdFieldNumber;
#endif  // !_MSC_VER

ViewAdRecycleItemReq::ViewAdRecycleItemReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoShop.ViewAdRecycleItemReq)
}

void ViewAdRecycleItemReq::InitAsDefaultInstance() {
}

ViewAdRecycleItemReq::ViewAdRecycleItemReq(const ViewAdRecycleItemReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ProtoShop.ViewAdRecycleItemReq)
}

void ViewAdRecycleItemReq::SharedCtor() {
  _cached_size_ = 0;
  ud_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ViewAdRecycleItemReq::~ViewAdRecycleItemReq() {
  // @@protoc_insertion_point(destructor:ProtoShop.ViewAdRecycleItemReq)
  SharedDtor();
}

void ViewAdRecycleItemReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ViewAdRecycleItemReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ViewAdRecycleItemReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ViewAdRecycleItemReq_descriptor_;
}

const ViewAdRecycleItemReq& ViewAdRecycleItemReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoShop_2eproto();
  return *default_instance_;
}

ViewAdRecycleItemReq* ViewAdRecycleItemReq::default_instance_ = NULL;

ViewAdRecycleItemReq* ViewAdRecycleItemReq::New() const {
  return new ViewAdRecycleItemReq;
}

void ViewAdRecycleItemReq::Clear() {
  ud_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ViewAdRecycleItemReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoShop.ViewAdRecycleItemReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 ud = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ud_)));
          set_has_ud();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoShop.ViewAdRecycleItemReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoShop.ViewAdRecycleItemReq)
  return false;
#undef DO_
}

void ViewAdRecycleItemReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoShop.ViewAdRecycleItemReq)
  // required uint32 ud = 1;
  if (has_ud()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->ud(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoShop.ViewAdRecycleItemReq)
}

::google::protobuf::uint8* ViewAdRecycleItemReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoShop.ViewAdRecycleItemReq)
  // required uint32 ud = 1;
  if (has_ud()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->ud(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoShop.ViewAdRecycleItemReq)
  return target;
}

int ViewAdRecycleItemReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 ud = 1;
    if (has_ud()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->ud());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ViewAdRecycleItemReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ViewAdRecycleItemReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ViewAdRecycleItemReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ViewAdRecycleItemReq::MergeFrom(const ViewAdRecycleItemReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_ud()) {
      set_ud(from.ud());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ViewAdRecycleItemReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ViewAdRecycleItemReq::CopyFrom(const ViewAdRecycleItemReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ViewAdRecycleItemReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void ViewAdRecycleItemReq::Swap(ViewAdRecycleItemReq* other) {
  if (other != this) {
    std::swap(ud_, other->ud_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ViewAdRecycleItemReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ViewAdRecycleItemReq_descriptor_;
  metadata.reflection = ViewAdRecycleItemReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ViewAdRecycleItemResp::kShopFieldNumber;
const int ViewAdRecycleItemResp::kCommonsFieldNumber;
#endif  // !_MSC_VER

ViewAdRecycleItemResp::ViewAdRecycleItemResp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoShop.ViewAdRecycleItemResp)
}

void ViewAdRecycleItemResp::InitAsDefaultInstance() {
  shop_ = const_cast< ::ProtoShop::ShopCPP*>(&::ProtoShop::ShopCPP::default_instance());
  commons_ = const_cast< ::DataCommon::CommonItemsCPP*>(&::DataCommon::CommonItemsCPP::default_instance());
}

ViewAdRecycleItemResp::ViewAdRecycleItemResp(const ViewAdRecycleItemResp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ProtoShop.ViewAdRecycleItemResp)
}

void ViewAdRecycleItemResp::SharedCtor() {
  _cached_size_ = 0;
  shop_ = NULL;
  commons_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ViewAdRecycleItemResp::~ViewAdRecycleItemResp() {
  // @@protoc_insertion_point(destructor:ProtoShop.ViewAdRecycleItemResp)
  SharedDtor();
}

void ViewAdRecycleItemResp::SharedDtor() {
  if (this != default_instance_) {
    delete shop_;
    delete commons_;
  }
}

void ViewAdRecycleItemResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ViewAdRecycleItemResp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ViewAdRecycleItemResp_descriptor_;
}

const ViewAdRecycleItemResp& ViewAdRecycleItemResp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoShop_2eproto();
  return *default_instance_;
}

ViewAdRecycleItemResp* ViewAdRecycleItemResp::default_instance_ = NULL;

ViewAdRecycleItemResp* ViewAdRecycleItemResp::New() const {
  return new ViewAdRecycleItemResp;
}

void ViewAdRecycleItemResp::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    if (has_shop()) {
      if (shop_ != NULL) shop_->::ProtoShop::ShopCPP::Clear();
    }
    if (has_commons()) {
      if (commons_ != NULL) commons_->::DataCommon::CommonItemsCPP::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ViewAdRecycleItemResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoShop.ViewAdRecycleItemResp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .ProtoShop.ShopCPP shop = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_shop()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_commons;
        break;
      }

      // required .DataCommon.CommonItemsCPP commons = 2;
      case 2: {
        if (tag == 18) {
         parse_commons:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_commons()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoShop.ViewAdRecycleItemResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoShop.ViewAdRecycleItemResp)
  return false;
#undef DO_
}

void ViewAdRecycleItemResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoShop.ViewAdRecycleItemResp)
  // required .ProtoShop.ShopCPP shop = 1;
  if (has_shop()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->shop(), output);
  }

  // required .DataCommon.CommonItemsCPP commons = 2;
  if (has_commons()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->commons(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoShop.ViewAdRecycleItemResp)
}

::google::protobuf::uint8* ViewAdRecycleItemResp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoShop.ViewAdRecycleItemResp)
  // required .ProtoShop.ShopCPP shop = 1;
  if (has_shop()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->shop(), target);
  }

  // required .DataCommon.CommonItemsCPP commons = 2;
  if (has_commons()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->commons(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoShop.ViewAdRecycleItemResp)
  return target;
}

int ViewAdRecycleItemResp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .ProtoShop.ShopCPP shop = 1;
    if (has_shop()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->shop());
    }

    // required .DataCommon.CommonItemsCPP commons = 2;
    if (has_commons()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->commons());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ViewAdRecycleItemResp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ViewAdRecycleItemResp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ViewAdRecycleItemResp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ViewAdRecycleItemResp::MergeFrom(const ViewAdRecycleItemResp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_shop()) {
      mutable_shop()->::ProtoShop::ShopCPP::MergeFrom(from.shop());
    }
    if (from.has_commons()) {
      mutable_commons()->::DataCommon::CommonItemsCPP::MergeFrom(from.commons());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ViewAdRecycleItemResp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ViewAdRecycleItemResp::CopyFrom(const ViewAdRecycleItemResp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ViewAdRecycleItemResp::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  if (has_shop()) {
    if (!this->shop().IsInitialized()) return false;
  }
  if (has_commons()) {
    if (!this->commons().IsInitialized()) return false;
  }
  return true;
}

void ViewAdRecycleItemResp::Swap(ViewAdRecycleItemResp* other) {
  if (other != this) {
    std::swap(shop_, other->shop_);
    std::swap(commons_, other->commons_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ViewAdRecycleItemResp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ViewAdRecycleItemResp_descriptor_;
  metadata.reflection = ViewAdRecycleItemResp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int BuyShopItemBySystemReq::kUdFieldNumber;
#endif  // !_MSC_VER

BuyShopItemBySystemReq::BuyShopItemBySystemReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoShop.BuyShopItemBySystemReq)
}

void BuyShopItemBySystemReq::InitAsDefaultInstance() {
}

BuyShopItemBySystemReq::BuyShopItemBySystemReq(const BuyShopItemBySystemReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ProtoShop.BuyShopItemBySystemReq)
}

void BuyShopItemBySystemReq::SharedCtor() {
  _cached_size_ = 0;
  ud_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BuyShopItemBySystemReq::~BuyShopItemBySystemReq() {
  // @@protoc_insertion_point(destructor:ProtoShop.BuyShopItemBySystemReq)
  SharedDtor();
}

void BuyShopItemBySystemReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void BuyShopItemBySystemReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BuyShopItemBySystemReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BuyShopItemBySystemReq_descriptor_;
}

const BuyShopItemBySystemReq& BuyShopItemBySystemReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoShop_2eproto();
  return *default_instance_;
}

BuyShopItemBySystemReq* BuyShopItemBySystemReq::default_instance_ = NULL;

BuyShopItemBySystemReq* BuyShopItemBySystemReq::New() const {
  return new BuyShopItemBySystemReq;
}

void BuyShopItemBySystemReq::Clear() {
  ud_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool BuyShopItemBySystemReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoShop.BuyShopItemBySystemReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 ud = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ud_)));
          set_has_ud();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoShop.BuyShopItemBySystemReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoShop.BuyShopItemBySystemReq)
  return false;
#undef DO_
}

void BuyShopItemBySystemReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoShop.BuyShopItemBySystemReq)
  // required uint32 ud = 1;
  if (has_ud()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->ud(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoShop.BuyShopItemBySystemReq)
}

::google::protobuf::uint8* BuyShopItemBySystemReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoShop.BuyShopItemBySystemReq)
  // required uint32 ud = 1;
  if (has_ud()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->ud(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoShop.BuyShopItemBySystemReq)
  return target;
}

int BuyShopItemBySystemReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 ud = 1;
    if (has_ud()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->ud());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BuyShopItemBySystemReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const BuyShopItemBySystemReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const BuyShopItemBySystemReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void BuyShopItemBySystemReq::MergeFrom(const BuyShopItemBySystemReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_ud()) {
      set_ud(from.ud());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void BuyShopItemBySystemReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BuyShopItemBySystemReq::CopyFrom(const BuyShopItemBySystemReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BuyShopItemBySystemReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void BuyShopItemBySystemReq::Swap(BuyShopItemBySystemReq* other) {
  if (other != this) {
    std::swap(ud_, other->ud_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata BuyShopItemBySystemReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BuyShopItemBySystemReq_descriptor_;
  metadata.reflection = BuyShopItemBySystemReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int BuyShopItemBySystemResp::kShopFieldNumber;
#endif  // !_MSC_VER

BuyShopItemBySystemResp::BuyShopItemBySystemResp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoShop.BuyShopItemBySystemResp)
}

void BuyShopItemBySystemResp::InitAsDefaultInstance() {
  shop_ = const_cast< ::ProtoShop::ShopCPP*>(&::ProtoShop::ShopCPP::default_instance());
}

BuyShopItemBySystemResp::BuyShopItemBySystemResp(const BuyShopItemBySystemResp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ProtoShop.BuyShopItemBySystemResp)
}

void BuyShopItemBySystemResp::SharedCtor() {
  _cached_size_ = 0;
  shop_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BuyShopItemBySystemResp::~BuyShopItemBySystemResp() {
  // @@protoc_insertion_point(destructor:ProtoShop.BuyShopItemBySystemResp)
  SharedDtor();
}

void BuyShopItemBySystemResp::SharedDtor() {
  if (this != default_instance_) {
    delete shop_;
  }
}

void BuyShopItemBySystemResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BuyShopItemBySystemResp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BuyShopItemBySystemResp_descriptor_;
}

const BuyShopItemBySystemResp& BuyShopItemBySystemResp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoShop_2eproto();
  return *default_instance_;
}

BuyShopItemBySystemResp* BuyShopItemBySystemResp::default_instance_ = NULL;

BuyShopItemBySystemResp* BuyShopItemBySystemResp::New() const {
  return new BuyShopItemBySystemResp;
}

void BuyShopItemBySystemResp::Clear() {
  if (has_shop()) {
    if (shop_ != NULL) shop_->::ProtoShop::ShopCPP::Clear();
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool BuyShopItemBySystemResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoShop.BuyShopItemBySystemResp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .ProtoShop.ShopCPP shop = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_shop()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoShop.BuyShopItemBySystemResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoShop.BuyShopItemBySystemResp)
  return false;
#undef DO_
}

void BuyShopItemBySystemResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoShop.BuyShopItemBySystemResp)
  // required .ProtoShop.ShopCPP shop = 1;
  if (has_shop()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->shop(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoShop.BuyShopItemBySystemResp)
}

::google::protobuf::uint8* BuyShopItemBySystemResp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoShop.BuyShopItemBySystemResp)
  // required .ProtoShop.ShopCPP shop = 1;
  if (has_shop()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->shop(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoShop.BuyShopItemBySystemResp)
  return target;
}

int BuyShopItemBySystemResp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .ProtoShop.ShopCPP shop = 1;
    if (has_shop()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->shop());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BuyShopItemBySystemResp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const BuyShopItemBySystemResp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const BuyShopItemBySystemResp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void BuyShopItemBySystemResp::MergeFrom(const BuyShopItemBySystemResp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_shop()) {
      mutable_shop()->::ProtoShop::ShopCPP::MergeFrom(from.shop());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void BuyShopItemBySystemResp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BuyShopItemBySystemResp::CopyFrom(const BuyShopItemBySystemResp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BuyShopItemBySystemResp::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (has_shop()) {
    if (!this->shop().IsInitialized()) return false;
  }
  return true;
}

void BuyShopItemBySystemResp::Swap(BuyShopItemBySystemResp* other) {
  if (other != this) {
    std::swap(shop_, other->shop_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata BuyShopItemBySystemResp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BuyShopItemBySystemResp_descriptor_;
  metadata.reflection = BuyShopItemBySystemResp_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace ProtoShop

// @@protoc_insertion_point(global_scope)
