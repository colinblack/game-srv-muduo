// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: User.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "User.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace User {

namespace {

const ::google::protobuf::Descriptor* Base_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Base_reflection_ = NULL;
const ::google::protobuf::Descriptor* ActivityItem_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ActivityItem_reflection_ = NULL;
const ::google::protobuf::Descriptor* Activity_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Activity_reflection_ = NULL;
const ::google::protobuf::Descriptor* User_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  User_reflection_ = NULL;
const ::google::protobuf::Descriptor* OthProduceCPP_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  OthProduceCPP_reflection_ = NULL;
const ::google::protobuf::Descriptor* RequestOtherUser_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RequestOtherUser_reflection_ = NULL;
const ::google::protobuf::Descriptor* OtherUser_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  OtherUser_reflection_ = NULL;
const ::google::protobuf::Descriptor* RequestOtherUserBC_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RequestOtherUserBC_reflection_ = NULL;
const ::google::protobuf::Descriptor* FetchSelfReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  FetchSelfReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* FetchSelfResp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  FetchSelfResp_reflection_ = NULL;
const ::google::protobuf::Descriptor* Tutorialstage_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Tutorialstage_reflection_ = NULL;
const ::google::protobuf::Descriptor* SwitchStatus_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SwitchStatus_reflection_ = NULL;
const ::google::protobuf::Descriptor* ServerTime_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ServerTime_reflection_ = NULL;
const ::google::protobuf::Descriptor* CostCashReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CostCashReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* CostCashResp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CostCashResp_reflection_ = NULL;
const ::google::protobuf::Descriptor* ChargeItem_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ChargeItem_reflection_ = NULL;
const ::google::protobuf::Descriptor* AccumulateCharge_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AccumulateCharge_reflection_ = NULL;
const ::google::protobuf::Descriptor* PushAccumulateChangeReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PushAccumulateChangeReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* SpeedUpReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SpeedUpReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* SpeedUpResp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SpeedUpResp_reflection_ = NULL;
const ::google::protobuf::Descriptor* BuyMaterialInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BuyMaterialInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* BuyMaterialReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BuyMaterialReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* BuyMaterialResp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BuyMaterialResp_reflection_ = NULL;
const ::google::protobuf::Descriptor* CriticalRewardsResp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CriticalRewardsResp_reflection_ = NULL;
const ::google::protobuf::Descriptor* LevelRewardsResp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  LevelRewardsResp_reflection_ = NULL;
const ::google::protobuf::Descriptor* DaliyShareReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DaliyShareReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* DaliyShareResp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DaliyShareResp_reflection_ = NULL;
const ::google::protobuf::Descriptor* ShareRewardsReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ShareRewardsReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* ShareRewardsResp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ShareRewardsResp_reflection_ = NULL;
const ::google::protobuf::Descriptor* ShareTotalRewardsReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ShareTotalRewardsReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* ShareTotalRewardsResp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ShareTotalRewardsResp_reflection_ = NULL;
const ::google::protobuf::Descriptor* PurchaseCoinReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PurchaseCoinReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* PurchaseCoinResp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PurchaseCoinResp_reflection_ = NULL;
const ::google::protobuf::Descriptor* SignInRewardsReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SignInRewardsReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* SignInRewardsResp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SignInRewardsResp_reflection_ = NULL;
const ::google::protobuf::Descriptor* SetVersion_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SetVersion_reflection_ = NULL;
const ::google::protobuf::Descriptor* SetFlag_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SetFlag_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetFlagResp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetFlagResp_reflection_ = NULL;
const ::google::protobuf::Descriptor* ThumbsUpCPP_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ThumbsUpCPP_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetThumbsUpReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetThumbsUpReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetThumbsUpResp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetThumbsUpResp_reflection_ = NULL;
const ::google::protobuf::Descriptor* RankThumbsUpReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RankThumbsUpReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* RankThumbsUpResp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RankThumbsUpResp_reflection_ = NULL;
const ::google::protobuf::Descriptor* CSRankThumbsUpReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CSRankThumbsUpReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* CSRankThumbsUpResp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CSRankThumbsUpResp_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetWorldChannelHelpCntReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetWorldChannelHelpCntReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetWorldChannelHelpCntResp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetWorldChannelHelpCntResp_reflection_ = NULL;
const ::google::protobuf::Descriptor* WorldChannelHelpReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  WorldChannelHelpReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* WorldChannelHelpResp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  WorldChannelHelpResp_reflection_ = NULL;
const ::google::protobuf::Descriptor* SysMail_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SysMail_reflection_ = NULL;
const ::google::protobuf::Descriptor* RequestSysMail_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RequestSysMail_reflection_ = NULL;
const ::google::protobuf::Descriptor* ReplySysMail_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ReplySysMail_reflection_ = NULL;
const ::google::protobuf::Descriptor* RequestMailRead_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RequestMailRead_reflection_ = NULL;
const ::google::protobuf::Descriptor* ReplyMailRead_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ReplyMailRead_reflection_ = NULL;
const ::google::protobuf::Descriptor* RequestMailGet_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RequestMailGet_reflection_ = NULL;
const ::google::protobuf::Descriptor* ReplyMailGet_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ReplyMailGet_reflection_ = NULL;
const ::google::protobuf::Descriptor* RequestMailDel_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RequestMailDel_reflection_ = NULL;
const ::google::protobuf::Descriptor* RequestMailAllGet_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RequestMailAllGet_reflection_ = NULL;
const ::google::protobuf::Descriptor* ReplyMailAllGet_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ReplyMailAllGet_reflection_ = NULL;
const ::google::protobuf::Descriptor* RequestMailAllDel_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RequestMailAllDel_reflection_ = NULL;
const ::google::protobuf::Descriptor* ReqNewMsg_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ReqNewMsg_reflection_ = NULL;
const ::google::protobuf::Descriptor* ReplyNewMsg_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ReplyNewMsg_reflection_ = NULL;
const ::google::protobuf::Descriptor* ReqSendMailBC_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ReqSendMailBC_reflection_ = NULL;
const ::google::protobuf::Descriptor* PushLoginMsg_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PushLoginMsg_reflection_ = NULL;
const ::google::protobuf::Descriptor* CSPushLoginMsg_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CSPushLoginMsg_reflection_ = NULL;
const ::google::protobuf::Descriptor* ViewAdGetSpeedUpCardReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ViewAdGetSpeedUpCardReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* ViewAdGetSpeedUpCardResp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ViewAdGetSpeedUpCardResp_reflection_ = NULL;
const ::google::protobuf::Descriptor* NewUserGuideShareReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  NewUserGuideShareReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* NewUserGuideShareResp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  NewUserGuideShareResp_reflection_ = NULL;
const ::google::protobuf::Descriptor* UseCdKeyReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UseCdKeyReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* UseCdKeyResp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UseCdKeyResp_reflection_ = NULL;
const ::google::protobuf::Descriptor* HeartBeatReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  HeartBeatReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* HeartBeatResp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  HeartBeatResp_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_User_2eproto() {
  protobuf_AddDesc_User_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "User.proto");
  GOOGLE_CHECK(file != NULL);
  Base_descriptor_ = file->message_type(0);
  static const int Base_offsets_[44] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Base, uid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Base, registerplatform_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Base, registertime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Base, lastloginplatform_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Base, lastlogintime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Base, logintimes_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Base, logindays_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Base, lastactivetime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Base, lastofftime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Base, forbidts_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Base, forbidreason_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Base, tutorialstage_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Base, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Base, fig_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Base, exp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Base, level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Base, acccharge_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Base, viplevel_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Base, cash_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Base, coin_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Base, firstrecharge_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Base, allianceid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Base, barrier_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Base, lastcreateadts_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Base, allianallowts_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Base, nextdonationts_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Base, helptimes_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Base, viprewarddailygiftts_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Base, vipdailyspeedproductcnt_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Base, vipdailyremoveordercdcnt_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Base, switchstatus_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Base, sharerewarddailygiftts_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Base, assiststartts_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Base, assistendts_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Base, expandmap1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Base, expandmap2_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Base, expandmap3_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Base, nextrandomboxrefreshts_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Base, flag_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Base, friendlyvalue_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Base, version_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Base, accthumbsup_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Base, isunlockpetresidence_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Base, wxchannel_),
  };
  Base_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Base_descriptor_,
      Base::default_instance_,
      Base_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Base, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Base, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Base));
  ActivityItem_descriptor_ = file->message_type(1);
  static const int ActivityItem_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActivityItem, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActivityItem, bts_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActivityItem, ets_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActivityItem, ver_),
  };
  ActivityItem_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ActivityItem_descriptor_,
      ActivityItem::default_instance_,
      ActivityItem_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActivityItem, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActivityItem, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ActivityItem));
  Activity_descriptor_ = file->message_type(2);
  static const int Activity_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Activity, act_),
  };
  Activity_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Activity_descriptor_,
      Activity::default_instance_,
      Activity_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Activity, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Activity, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Activity));
  User_descriptor_ = file->message_type(3);
  static const int User_offsets_[23] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(User, base_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(User, ts_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(User, activity_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(User, notifies_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(User, charges_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(User, gameactivity_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(User, item_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(User, builds_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(User, cropland_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(User, equipments_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(User, animals_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(User, equipmentstars_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(User, fruits_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(User, orders_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(User, truck_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(User, shipping_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(User, shipboxes_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(User, npcseller_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(User, opents_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(User, hasnewdyinfo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(User, theme_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(User, hasnewmsginfo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(User, pet_),
  };
  User_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      User_descriptor_,
      User::default_instance_,
      User_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(User, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(User, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(User));
  OthProduceCPP_descriptor_ = file->message_type(4);
  static const int OthProduceCPP_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OthProduceCPP, ud_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OthProduceCPP, status_),
  };
  OthProduceCPP_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      OthProduceCPP_descriptor_,
      OthProduceCPP::default_instance_,
      OthProduceCPP_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OthProduceCPP, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OthProduceCPP, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(OthProduceCPP));
  RequestOtherUser_descriptor_ = file->message_type(5);
  static const int RequestOtherUser_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestOtherUser, othuid_),
  };
  RequestOtherUser_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      RequestOtherUser_descriptor_,
      RequestOtherUser::default_instance_,
      RequestOtherUser_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestOtherUser, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestOtherUser, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(RequestOtherUser));
  OtherUser_descriptor_ = file->message_type(6);
  static const int OtherUser_offsets_[13] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OtherUser, base_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OtherUser, builds_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OtherUser, cropland_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OtherUser, equipments_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OtherUser, animals_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OtherUser, equipmentstars_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OtherUser, fruits_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OtherUser, shopstatus_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OtherUser, shipping_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OtherUser, shipboxes_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OtherUser, friendlytree_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OtherUser, theme_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OtherUser, arraypet_),
  };
  OtherUser_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      OtherUser_descriptor_,
      OtherUser::default_instance_,
      OtherUser_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OtherUser, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OtherUser, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(OtherUser));
  RequestOtherUserBC_descriptor_ = file->message_type(7);
  static const int RequestOtherUserBC_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestOtherUserBC, othuid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestOtherUserBC, myuid_),
  };
  RequestOtherUserBC_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      RequestOtherUserBC_descriptor_,
      RequestOtherUserBC::default_instance_,
      RequestOtherUserBC_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestOtherUserBC, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestOtherUserBC, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(RequestOtherUserBC));
  FetchSelfReq_descriptor_ = file->message_type(8);
  static const int FetchSelfReq_offsets_[1] = {
  };
  FetchSelfReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      FetchSelfReq_descriptor_,
      FetchSelfReq::default_instance_,
      FetchSelfReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FetchSelfReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FetchSelfReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(FetchSelfReq));
  FetchSelfResp_descriptor_ = file->message_type(9);
  static const int FetchSelfResp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FetchSelfResp, player_),
  };
  FetchSelfResp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      FetchSelfResp_descriptor_,
      FetchSelfResp::default_instance_,
      FetchSelfResp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FetchSelfResp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FetchSelfResp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(FetchSelfResp));
  Tutorialstage_descriptor_ = file->message_type(10);
  static const int Tutorialstage_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Tutorialstage, tutorialstage_),
  };
  Tutorialstage_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Tutorialstage_descriptor_,
      Tutorialstage::default_instance_,
      Tutorialstage_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Tutorialstage, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Tutorialstage, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Tutorialstage));
  SwitchStatus_descriptor_ = file->message_type(11);
  static const int SwitchStatus_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SwitchStatus, switchstatus_),
  };
  SwitchStatus_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      SwitchStatus_descriptor_,
      SwitchStatus::default_instance_,
      SwitchStatus_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SwitchStatus, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SwitchStatus, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(SwitchStatus));
  ServerTime_descriptor_ = file->message_type(12);
  static const int ServerTime_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerTime, ts_),
  };
  ServerTime_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ServerTime_descriptor_,
      ServerTime::default_instance_,
      ServerTime_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerTime, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerTime, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ServerTime));
  CostCashReq_descriptor_ = file->message_type(13);
  static const int CostCashReq_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CostCashReq, cash_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CostCashReq, opcode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CostCashReq, operation_),
  };
  CostCashReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CostCashReq_descriptor_,
      CostCashReq::default_instance_,
      CostCashReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CostCashReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CostCashReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CostCashReq));
  CostCashResp_descriptor_ = file->message_type(14);
  static const int CostCashResp_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CostCashResp, cash_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CostCashResp, operation_),
  };
  CostCashResp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CostCashResp_descriptor_,
      CostCashResp::default_instance_,
      CostCashResp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CostCashResp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CostCashResp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CostCashResp));
  ChargeItem_descriptor_ = file->message_type(15);
  static const int ChargeItem_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChargeItem, cash_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChargeItem, ts_),
  };
  ChargeItem_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ChargeItem_descriptor_,
      ChargeItem::default_instance_,
      ChargeItem_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChargeItem, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChargeItem, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ChargeItem));
  AccumulateCharge_descriptor_ = file->message_type(16);
  static const int AccumulateCharge_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AccumulateCharge, accumulatecharge_),
  };
  AccumulateCharge_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      AccumulateCharge_descriptor_,
      AccumulateCharge::default_instance_,
      AccumulateCharge_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AccumulateCharge, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AccumulateCharge, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(AccumulateCharge));
  PushAccumulateChangeReq_descriptor_ = file->message_type(17);
  static const int PushAccumulateChangeReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PushAccumulateChangeReq, changeacccharge_),
  };
  PushAccumulateChangeReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PushAccumulateChangeReq_descriptor_,
      PushAccumulateChangeReq::default_instance_,
      PushAccumulateChangeReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PushAccumulateChangeReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PushAccumulateChangeReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PushAccumulateChangeReq));
  SpeedUpReq_descriptor_ = file->message_type(18);
  static const int SpeedUpReq_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpeedUpReq, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpeedUpReq, ud_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpeedUpReq, method_),
  };
  SpeedUpReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      SpeedUpReq_descriptor_,
      SpeedUpReq::default_instance_,
      SpeedUpReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpeedUpReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpeedUpReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(SpeedUpReq));
  SpeedUpResp_descriptor_ = file->message_type(19);
  static const int SpeedUpResp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpeedUpResp, commons_),
  };
  SpeedUpResp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      SpeedUpResp_descriptor_,
      SpeedUpResp::default_instance_,
      SpeedUpResp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpeedUpResp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpeedUpResp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(SpeedUpResp));
  BuyMaterialInfo_descriptor_ = file->message_type(20);
  static const int BuyMaterialInfo_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuyMaterialInfo, propsid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuyMaterialInfo, propscnt_),
  };
  BuyMaterialInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      BuyMaterialInfo_descriptor_,
      BuyMaterialInfo::default_instance_,
      BuyMaterialInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuyMaterialInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuyMaterialInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(BuyMaterialInfo));
  BuyMaterialReq_descriptor_ = file->message_type(21);
  static const int BuyMaterialReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuyMaterialReq, buyinfo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuyMaterialReq, seq_),
  };
  BuyMaterialReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      BuyMaterialReq_descriptor_,
      BuyMaterialReq::default_instance_,
      BuyMaterialReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuyMaterialReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuyMaterialReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(BuyMaterialReq));
  BuyMaterialResp_descriptor_ = file->message_type(22);
  static const int BuyMaterialResp_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuyMaterialResp, commons_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuyMaterialResp, seq_),
  };
  BuyMaterialResp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      BuyMaterialResp_descriptor_,
      BuyMaterialResp::default_instance_,
      BuyMaterialResp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuyMaterialResp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuyMaterialResp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(BuyMaterialResp));
  CriticalRewardsResp_descriptor_ = file->message_type(23);
  static const int CriticalRewardsResp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CriticalRewardsResp, commons_),
  };
  CriticalRewardsResp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CriticalRewardsResp_descriptor_,
      CriticalRewardsResp::default_instance_,
      CriticalRewardsResp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CriticalRewardsResp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CriticalRewardsResp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CriticalRewardsResp));
  LevelRewardsResp_descriptor_ = file->message_type(24);
  static const int LevelRewardsResp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LevelRewardsResp, commons_),
  };
  LevelRewardsResp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      LevelRewardsResp_descriptor_,
      LevelRewardsResp::default_instance_,
      LevelRewardsResp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LevelRewardsResp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LevelRewardsResp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(LevelRewardsResp));
  DaliyShareReq_descriptor_ = file->message_type(25);
  static const int DaliyShareReq_offsets_[1] = {
  };
  DaliyShareReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DaliyShareReq_descriptor_,
      DaliyShareReq::default_instance_,
      DaliyShareReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DaliyShareReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DaliyShareReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(DaliyShareReq));
  DaliyShareResp_descriptor_ = file->message_type(26);
  static const int DaliyShareResp_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DaliyShareResp, days_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DaliyShareResp, rewardts_),
  };
  DaliyShareResp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DaliyShareResp_descriptor_,
      DaliyShareResp::default_instance_,
      DaliyShareResp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DaliyShareResp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DaliyShareResp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(DaliyShareResp));
  ShareRewardsReq_descriptor_ = file->message_type(27);
  static const int ShareRewardsReq_offsets_[1] = {
  };
  ShareRewardsReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ShareRewardsReq_descriptor_,
      ShareRewardsReq::default_instance_,
      ShareRewardsReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShareRewardsReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShareRewardsReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ShareRewardsReq));
  ShareRewardsResp_descriptor_ = file->message_type(28);
  static const int ShareRewardsResp_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShareRewardsResp, commons_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShareRewardsResp, rewardts_),
  };
  ShareRewardsResp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ShareRewardsResp_descriptor_,
      ShareRewardsResp::default_instance_,
      ShareRewardsResp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShareRewardsResp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShareRewardsResp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ShareRewardsResp));
  ShareTotalRewardsReq_descriptor_ = file->message_type(29);
  static const int ShareTotalRewardsReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShareTotalRewardsReq, day_),
  };
  ShareTotalRewardsReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ShareTotalRewardsReq_descriptor_,
      ShareTotalRewardsReq::default_instance_,
      ShareTotalRewardsReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShareTotalRewardsReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShareTotalRewardsReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ShareTotalRewardsReq));
  ShareTotalRewardsResp_descriptor_ = file->message_type(30);
  static const int ShareTotalRewardsResp_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShareTotalRewardsResp, commons_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShareTotalRewardsResp, marks_),
  };
  ShareTotalRewardsResp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ShareTotalRewardsResp_descriptor_,
      ShareTotalRewardsResp::default_instance_,
      ShareTotalRewardsResp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShareTotalRewardsResp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShareTotalRewardsResp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ShareTotalRewardsResp));
  PurchaseCoinReq_descriptor_ = file->message_type(31);
  static const int PurchaseCoinReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PurchaseCoinReq, id_),
  };
  PurchaseCoinReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PurchaseCoinReq_descriptor_,
      PurchaseCoinReq::default_instance_,
      PurchaseCoinReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PurchaseCoinReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PurchaseCoinReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PurchaseCoinReq));
  PurchaseCoinResp_descriptor_ = file->message_type(32);
  static const int PurchaseCoinResp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PurchaseCoinResp, commons_),
  };
  PurchaseCoinResp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PurchaseCoinResp_descriptor_,
      PurchaseCoinResp::default_instance_,
      PurchaseCoinResp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PurchaseCoinResp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PurchaseCoinResp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PurchaseCoinResp));
  SignInRewardsReq_descriptor_ = file->message_type(33);
  static const int SignInRewardsReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SignInRewardsReq, day_),
  };
  SignInRewardsReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      SignInRewardsReq_descriptor_,
      SignInRewardsReq::default_instance_,
      SignInRewardsReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SignInRewardsReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SignInRewardsReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(SignInRewardsReq));
  SignInRewardsResp_descriptor_ = file->message_type(34);
  static const int SignInRewardsResp_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SignInRewardsResp, commons_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SignInRewardsResp, marks_),
  };
  SignInRewardsResp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      SignInRewardsResp_descriptor_,
      SignInRewardsResp::default_instance_,
      SignInRewardsResp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SignInRewardsResp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SignInRewardsResp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(SignInRewardsResp));
  SetVersion_descriptor_ = file->message_type(35);
  static const int SetVersion_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetVersion, version_),
  };
  SetVersion_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      SetVersion_descriptor_,
      SetVersion::default_instance_,
      SetVersion_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetVersion, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetVersion, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(SetVersion));
  SetFlag_descriptor_ = file->message_type(36);
  static const int SetFlag_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetFlag, flagid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetFlag, iscostdimaond_),
  };
  SetFlag_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      SetFlag_descriptor_,
      SetFlag::default_instance_,
      SetFlag_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetFlag, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetFlag, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(SetFlag));
  GetFlagResp_descriptor_ = file->message_type(37);
  static const int GetFlagResp_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetFlagResp, flag_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetFlagResp, commons_),
  };
  GetFlagResp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GetFlagResp_descriptor_,
      GetFlagResp::default_instance_,
      GetFlagResp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetFlagResp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetFlagResp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GetFlagResp));
  ThumbsUpCPP_descriptor_ = file->message_type(38);
  static const int ThumbsUpCPP_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ThumbsUpCPP, index_),
  };
  ThumbsUpCPP_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ThumbsUpCPP_descriptor_,
      ThumbsUpCPP::default_instance_,
      ThumbsUpCPP_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ThumbsUpCPP, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ThumbsUpCPP, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ThumbsUpCPP));
  GetThumbsUpReq_descriptor_ = file->message_type(39);
  static const int GetThumbsUpReq_offsets_[1] = {
  };
  GetThumbsUpReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GetThumbsUpReq_descriptor_,
      GetThumbsUpReq::default_instance_,
      GetThumbsUpReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetThumbsUpReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetThumbsUpReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GetThumbsUpReq));
  GetThumbsUpResp_descriptor_ = file->message_type(40);
  static const int GetThumbsUpResp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetThumbsUpResp, thumbsup_),
  };
  GetThumbsUpResp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GetThumbsUpResp_descriptor_,
      GetThumbsUpResp::default_instance_,
      GetThumbsUpResp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetThumbsUpResp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetThumbsUpResp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GetThumbsUpResp));
  RankThumbsUpReq_descriptor_ = file->message_type(41);
  static const int RankThumbsUpReq_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RankThumbsUpReq, othuid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RankThumbsUpReq, index1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RankThumbsUpReq, index2_),
  };
  RankThumbsUpReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      RankThumbsUpReq_descriptor_,
      RankThumbsUpReq::default_instance_,
      RankThumbsUpReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RankThumbsUpReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RankThumbsUpReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(RankThumbsUpReq));
  RankThumbsUpResp_descriptor_ = file->message_type(42);
  static const int RankThumbsUpResp_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RankThumbsUpResp, thumbsup_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RankThumbsUpResp, commons_),
  };
  RankThumbsUpResp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      RankThumbsUpResp_descriptor_,
      RankThumbsUpResp::default_instance_,
      RankThumbsUpResp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RankThumbsUpResp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RankThumbsUpResp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(RankThumbsUpResp));
  CSRankThumbsUpReq_descriptor_ = file->message_type(43);
  static const int CSRankThumbsUpReq_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CSRankThumbsUpReq, myuid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CSRankThumbsUpReq, othuid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CSRankThumbsUpReq, index1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CSRankThumbsUpReq, index2_),
  };
  CSRankThumbsUpReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CSRankThumbsUpReq_descriptor_,
      CSRankThumbsUpReq::default_instance_,
      CSRankThumbsUpReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CSRankThumbsUpReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CSRankThumbsUpReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CSRankThumbsUpReq));
  CSRankThumbsUpResp_descriptor_ = file->message_type(44);
  static const int CSRankThumbsUpResp_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CSRankThumbsUpResp, myuid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CSRankThumbsUpResp, index1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CSRankThumbsUpResp, index2_),
  };
  CSRankThumbsUpResp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CSRankThumbsUpResp_descriptor_,
      CSRankThumbsUpResp::default_instance_,
      CSRankThumbsUpResp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CSRankThumbsUpResp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CSRankThumbsUpResp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CSRankThumbsUpResp));
  GetWorldChannelHelpCntReq_descriptor_ = file->message_type(45);
  static const int GetWorldChannelHelpCntReq_offsets_[1] = {
  };
  GetWorldChannelHelpCntReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GetWorldChannelHelpCntReq_descriptor_,
      GetWorldChannelHelpCntReq::default_instance_,
      GetWorldChannelHelpCntReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetWorldChannelHelpCntReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetWorldChannelHelpCntReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GetWorldChannelHelpCntReq));
  GetWorldChannelHelpCntResp_descriptor_ = file->message_type(46);
  static const int GetWorldChannelHelpCntResp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetWorldChannelHelpCntResp, remaincnt_),
  };
  GetWorldChannelHelpCntResp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GetWorldChannelHelpCntResp_descriptor_,
      GetWorldChannelHelpCntResp::default_instance_,
      GetWorldChannelHelpCntResp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetWorldChannelHelpCntResp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetWorldChannelHelpCntResp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GetWorldChannelHelpCntResp));
  WorldChannelHelpReq_descriptor_ = file->message_type(47);
  static const int WorldChannelHelpReq_offsets_[1] = {
  };
  WorldChannelHelpReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      WorldChannelHelpReq_descriptor_,
      WorldChannelHelpReq::default_instance_,
      WorldChannelHelpReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WorldChannelHelpReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WorldChannelHelpReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(WorldChannelHelpReq));
  WorldChannelHelpResp_descriptor_ = file->message_type(48);
  static const int WorldChannelHelpResp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WorldChannelHelpResp, remaincnt_),
  };
  WorldChannelHelpResp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      WorldChannelHelpResp_descriptor_,
      WorldChannelHelpResp::default_instance_,
      WorldChannelHelpResp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WorldChannelHelpResp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WorldChannelHelpResp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(WorldChannelHelpResp));
  SysMail_descriptor_ = file->message_type(49);
  static const int SysMail_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SysMail, ts_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SysMail, stat_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SysMail, sys_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SysMail, reward_),
  };
  SysMail_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      SysMail_descriptor_,
      SysMail::default_instance_,
      SysMail_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SysMail, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SysMail, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(SysMail));
  RequestSysMail_descriptor_ = file->message_type(50);
  static const int RequestSysMail_offsets_[1] = {
  };
  RequestSysMail_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      RequestSysMail_descriptor_,
      RequestSysMail::default_instance_,
      RequestSysMail_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestSysMail, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestSysMail, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(RequestSysMail));
  ReplySysMail_descriptor_ = file->message_type(51);
  static const int ReplySysMail_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReplySysMail, mail_),
  };
  ReplySysMail_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ReplySysMail_descriptor_,
      ReplySysMail::default_instance_,
      ReplySysMail_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReplySysMail, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReplySysMail, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ReplySysMail));
  RequestMailRead_descriptor_ = file->message_type(52);
  static const int RequestMailRead_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestMailRead, ts_),
  };
  RequestMailRead_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      RequestMailRead_descriptor_,
      RequestMailRead::default_instance_,
      RequestMailRead_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestMailRead, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestMailRead, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(RequestMailRead));
  ReplyMailRead_descriptor_ = file->message_type(53);
  static const int ReplyMailRead_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReplyMailRead, ts_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReplyMailRead, stat_),
  };
  ReplyMailRead_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ReplyMailRead_descriptor_,
      ReplyMailRead::default_instance_,
      ReplyMailRead_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReplyMailRead, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReplyMailRead, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ReplyMailRead));
  RequestMailGet_descriptor_ = file->message_type(54);
  static const int RequestMailGet_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestMailGet, ts_),
  };
  RequestMailGet_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      RequestMailGet_descriptor_,
      RequestMailGet::default_instance_,
      RequestMailGet_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestMailGet, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestMailGet, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(RequestMailGet));
  ReplyMailGet_descriptor_ = file->message_type(55);
  static const int ReplyMailGet_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReplyMailGet, ts_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReplyMailGet, stat_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReplyMailGet, reward_),
  };
  ReplyMailGet_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ReplyMailGet_descriptor_,
      ReplyMailGet::default_instance_,
      ReplyMailGet_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReplyMailGet, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReplyMailGet, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ReplyMailGet));
  RequestMailDel_descriptor_ = file->message_type(56);
  static const int RequestMailDel_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestMailDel, ts_),
  };
  RequestMailDel_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      RequestMailDel_descriptor_,
      RequestMailDel::default_instance_,
      RequestMailDel_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestMailDel, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestMailDel, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(RequestMailDel));
  RequestMailAllGet_descriptor_ = file->message_type(57);
  static const int RequestMailAllGet_offsets_[1] = {
  };
  RequestMailAllGet_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      RequestMailAllGet_descriptor_,
      RequestMailAllGet::default_instance_,
      RequestMailAllGet_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestMailAllGet, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestMailAllGet, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(RequestMailAllGet));
  ReplyMailAllGet_descriptor_ = file->message_type(58);
  static const int ReplyMailAllGet_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReplyMailAllGet, reward_),
  };
  ReplyMailAllGet_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ReplyMailAllGet_descriptor_,
      ReplyMailAllGet::default_instance_,
      ReplyMailAllGet_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReplyMailAllGet, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReplyMailAllGet, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ReplyMailAllGet));
  RequestMailAllDel_descriptor_ = file->message_type(59);
  static const int RequestMailAllDel_offsets_[1] = {
  };
  RequestMailAllDel_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      RequestMailAllDel_descriptor_,
      RequestMailAllDel::default_instance_,
      RequestMailAllDel_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestMailAllDel, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestMailAllDel, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(RequestMailAllDel));
  ReqNewMsg_descriptor_ = file->message_type(60);
  static const int ReqNewMsg_offsets_[1] = {
  };
  ReqNewMsg_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ReqNewMsg_descriptor_,
      ReqNewMsg::default_instance_,
      ReqNewMsg_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqNewMsg, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqNewMsg, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ReqNewMsg));
  ReplyNewMsg_descriptor_ = file->message_type(61);
  static const int ReplyNewMsg_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReplyNewMsg, type_),
  };
  ReplyNewMsg_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ReplyNewMsg_descriptor_,
      ReplyNewMsg::default_instance_,
      ReplyNewMsg_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReplyNewMsg, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReplyNewMsg, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ReplyNewMsg));
  ReqSendMailBC_descriptor_ = file->message_type(62);
  static const int ReqSendMailBC_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqSendMailBC, uid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqSendMailBC, ts_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqSendMailBC, sys_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqSendMailBC, reward_),
  };
  ReqSendMailBC_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ReqSendMailBC_descriptor_,
      ReqSendMailBC::default_instance_,
      ReqSendMailBC_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqSendMailBC, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqSendMailBC, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ReqSendMailBC));
  PushLoginMsg_descriptor_ = file->message_type(63);
  static const int PushLoginMsg_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PushLoginMsg, logints_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PushLoginMsg, uid_),
  };
  PushLoginMsg_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PushLoginMsg_descriptor_,
      PushLoginMsg::default_instance_,
      PushLoginMsg_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PushLoginMsg, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PushLoginMsg, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PushLoginMsg));
  CSPushLoginMsg_descriptor_ = file->message_type(64);
  static const int CSPushLoginMsg_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CSPushLoginMsg, inviteuid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CSPushLoginMsg, logints_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CSPushLoginMsg, uid_),
  };
  CSPushLoginMsg_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CSPushLoginMsg_descriptor_,
      CSPushLoginMsg::default_instance_,
      CSPushLoginMsg_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CSPushLoginMsg, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CSPushLoginMsg, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CSPushLoginMsg));
  ViewAdGetSpeedUpCardReq_descriptor_ = file->message_type(65);
  static const int ViewAdGetSpeedUpCardReq_offsets_[1] = {
  };
  ViewAdGetSpeedUpCardReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ViewAdGetSpeedUpCardReq_descriptor_,
      ViewAdGetSpeedUpCardReq::default_instance_,
      ViewAdGetSpeedUpCardReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ViewAdGetSpeedUpCardReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ViewAdGetSpeedUpCardReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ViewAdGetSpeedUpCardReq));
  ViewAdGetSpeedUpCardResp_descriptor_ = file->message_type(66);
  static const int ViewAdGetSpeedUpCardResp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ViewAdGetSpeedUpCardResp, commons_),
  };
  ViewAdGetSpeedUpCardResp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ViewAdGetSpeedUpCardResp_descriptor_,
      ViewAdGetSpeedUpCardResp::default_instance_,
      ViewAdGetSpeedUpCardResp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ViewAdGetSpeedUpCardResp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ViewAdGetSpeedUpCardResp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ViewAdGetSpeedUpCardResp));
  NewUserGuideShareReq_descriptor_ = file->message_type(67);
  static const int NewUserGuideShareReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NewUserGuideShareReq, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NewUserGuideShareReq, type_),
  };
  NewUserGuideShareReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      NewUserGuideShareReq_descriptor_,
      NewUserGuideShareReq::default_instance_,
      NewUserGuideShareReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NewUserGuideShareReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NewUserGuideShareReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(NewUserGuideShareReq));
  NewUserGuideShareResp_descriptor_ = file->message_type(68);
  static const int NewUserGuideShareResp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NewUserGuideShareResp, commons_),
  };
  NewUserGuideShareResp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      NewUserGuideShareResp_descriptor_,
      NewUserGuideShareResp::default_instance_,
      NewUserGuideShareResp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NewUserGuideShareResp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NewUserGuideShareResp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(NewUserGuideShareResp));
  UseCdKeyReq_descriptor_ = file->message_type(69);
  static const int UseCdKeyReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UseCdKeyReq, number_),
  };
  UseCdKeyReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      UseCdKeyReq_descriptor_,
      UseCdKeyReq::default_instance_,
      UseCdKeyReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UseCdKeyReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UseCdKeyReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(UseCdKeyReq));
  UseCdKeyResp_descriptor_ = file->message_type(70);
  static const int UseCdKeyResp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UseCdKeyResp, commons_),
  };
  UseCdKeyResp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      UseCdKeyResp_descriptor_,
      UseCdKeyResp::default_instance_,
      UseCdKeyResp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UseCdKeyResp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UseCdKeyResp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(UseCdKeyResp));
  HeartBeatReq_descriptor_ = file->message_type(71);
  static const int HeartBeatReq_offsets_[1] = {
  };
  HeartBeatReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      HeartBeatReq_descriptor_,
      HeartBeatReq::default_instance_,
      HeartBeatReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeartBeatReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeartBeatReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(HeartBeatReq));
  HeartBeatResp_descriptor_ = file->message_type(72);
  static const int HeartBeatResp_offsets_[1] = {
  };
  HeartBeatResp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      HeartBeatResp_descriptor_,
      HeartBeatResp::default_instance_,
      HeartBeatResp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeartBeatResp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeartBeatResp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(HeartBeatResp));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_User_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Base_descriptor_, &Base::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ActivityItem_descriptor_, &ActivityItem::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Activity_descriptor_, &Activity::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    User_descriptor_, &User::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    OthProduceCPP_descriptor_, &OthProduceCPP::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    RequestOtherUser_descriptor_, &RequestOtherUser::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    OtherUser_descriptor_, &OtherUser::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    RequestOtherUserBC_descriptor_, &RequestOtherUserBC::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    FetchSelfReq_descriptor_, &FetchSelfReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    FetchSelfResp_descriptor_, &FetchSelfResp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Tutorialstage_descriptor_, &Tutorialstage::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    SwitchStatus_descriptor_, &SwitchStatus::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ServerTime_descriptor_, &ServerTime::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CostCashReq_descriptor_, &CostCashReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CostCashResp_descriptor_, &CostCashResp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ChargeItem_descriptor_, &ChargeItem::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    AccumulateCharge_descriptor_, &AccumulateCharge::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PushAccumulateChangeReq_descriptor_, &PushAccumulateChangeReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    SpeedUpReq_descriptor_, &SpeedUpReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    SpeedUpResp_descriptor_, &SpeedUpResp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    BuyMaterialInfo_descriptor_, &BuyMaterialInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    BuyMaterialReq_descriptor_, &BuyMaterialReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    BuyMaterialResp_descriptor_, &BuyMaterialResp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CriticalRewardsResp_descriptor_, &CriticalRewardsResp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    LevelRewardsResp_descriptor_, &LevelRewardsResp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DaliyShareReq_descriptor_, &DaliyShareReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DaliyShareResp_descriptor_, &DaliyShareResp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ShareRewardsReq_descriptor_, &ShareRewardsReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ShareRewardsResp_descriptor_, &ShareRewardsResp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ShareTotalRewardsReq_descriptor_, &ShareTotalRewardsReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ShareTotalRewardsResp_descriptor_, &ShareTotalRewardsResp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PurchaseCoinReq_descriptor_, &PurchaseCoinReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PurchaseCoinResp_descriptor_, &PurchaseCoinResp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    SignInRewardsReq_descriptor_, &SignInRewardsReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    SignInRewardsResp_descriptor_, &SignInRewardsResp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    SetVersion_descriptor_, &SetVersion::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    SetFlag_descriptor_, &SetFlag::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GetFlagResp_descriptor_, &GetFlagResp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ThumbsUpCPP_descriptor_, &ThumbsUpCPP::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GetThumbsUpReq_descriptor_, &GetThumbsUpReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GetThumbsUpResp_descriptor_, &GetThumbsUpResp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    RankThumbsUpReq_descriptor_, &RankThumbsUpReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    RankThumbsUpResp_descriptor_, &RankThumbsUpResp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CSRankThumbsUpReq_descriptor_, &CSRankThumbsUpReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CSRankThumbsUpResp_descriptor_, &CSRankThumbsUpResp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GetWorldChannelHelpCntReq_descriptor_, &GetWorldChannelHelpCntReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GetWorldChannelHelpCntResp_descriptor_, &GetWorldChannelHelpCntResp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    WorldChannelHelpReq_descriptor_, &WorldChannelHelpReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    WorldChannelHelpResp_descriptor_, &WorldChannelHelpResp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    SysMail_descriptor_, &SysMail::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    RequestSysMail_descriptor_, &RequestSysMail::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ReplySysMail_descriptor_, &ReplySysMail::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    RequestMailRead_descriptor_, &RequestMailRead::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ReplyMailRead_descriptor_, &ReplyMailRead::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    RequestMailGet_descriptor_, &RequestMailGet::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ReplyMailGet_descriptor_, &ReplyMailGet::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    RequestMailDel_descriptor_, &RequestMailDel::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    RequestMailAllGet_descriptor_, &RequestMailAllGet::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ReplyMailAllGet_descriptor_, &ReplyMailAllGet::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    RequestMailAllDel_descriptor_, &RequestMailAllDel::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ReqNewMsg_descriptor_, &ReqNewMsg::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ReplyNewMsg_descriptor_, &ReplyNewMsg::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ReqSendMailBC_descriptor_, &ReqSendMailBC::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PushLoginMsg_descriptor_, &PushLoginMsg::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CSPushLoginMsg_descriptor_, &CSPushLoginMsg::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ViewAdGetSpeedUpCardReq_descriptor_, &ViewAdGetSpeedUpCardReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ViewAdGetSpeedUpCardResp_descriptor_, &ViewAdGetSpeedUpCardResp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    NewUserGuideShareReq_descriptor_, &NewUserGuideShareReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    NewUserGuideShareResp_descriptor_, &NewUserGuideShareResp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    UseCdKeyReq_descriptor_, &UseCdKeyReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    UseCdKeyResp_descriptor_, &UseCdKeyResp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    HeartBeatReq_descriptor_, &HeartBeatReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    HeartBeatResp_descriptor_, &HeartBeatResp::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_User_2eproto() {
  delete Base::default_instance_;
  delete Base_reflection_;
  delete ActivityItem::default_instance_;
  delete ActivityItem_reflection_;
  delete Activity::default_instance_;
  delete Activity_reflection_;
  delete User::default_instance_;
  delete User_reflection_;
  delete OthProduceCPP::default_instance_;
  delete OthProduceCPP_reflection_;
  delete RequestOtherUser::default_instance_;
  delete RequestOtherUser_reflection_;
  delete OtherUser::default_instance_;
  delete OtherUser_reflection_;
  delete RequestOtherUserBC::default_instance_;
  delete RequestOtherUserBC_reflection_;
  delete FetchSelfReq::default_instance_;
  delete FetchSelfReq_reflection_;
  delete FetchSelfResp::default_instance_;
  delete FetchSelfResp_reflection_;
  delete Tutorialstage::default_instance_;
  delete Tutorialstage_reflection_;
  delete SwitchStatus::default_instance_;
  delete SwitchStatus_reflection_;
  delete ServerTime::default_instance_;
  delete ServerTime_reflection_;
  delete CostCashReq::default_instance_;
  delete CostCashReq_reflection_;
  delete CostCashResp::default_instance_;
  delete CostCashResp_reflection_;
  delete ChargeItem::default_instance_;
  delete ChargeItem_reflection_;
  delete AccumulateCharge::default_instance_;
  delete AccumulateCharge_reflection_;
  delete PushAccumulateChangeReq::default_instance_;
  delete PushAccumulateChangeReq_reflection_;
  delete SpeedUpReq::default_instance_;
  delete SpeedUpReq_reflection_;
  delete SpeedUpResp::default_instance_;
  delete SpeedUpResp_reflection_;
  delete BuyMaterialInfo::default_instance_;
  delete BuyMaterialInfo_reflection_;
  delete BuyMaterialReq::default_instance_;
  delete BuyMaterialReq_reflection_;
  delete BuyMaterialResp::default_instance_;
  delete BuyMaterialResp_reflection_;
  delete CriticalRewardsResp::default_instance_;
  delete CriticalRewardsResp_reflection_;
  delete LevelRewardsResp::default_instance_;
  delete LevelRewardsResp_reflection_;
  delete DaliyShareReq::default_instance_;
  delete DaliyShareReq_reflection_;
  delete DaliyShareResp::default_instance_;
  delete DaliyShareResp_reflection_;
  delete ShareRewardsReq::default_instance_;
  delete ShareRewardsReq_reflection_;
  delete ShareRewardsResp::default_instance_;
  delete ShareRewardsResp_reflection_;
  delete ShareTotalRewardsReq::default_instance_;
  delete ShareTotalRewardsReq_reflection_;
  delete ShareTotalRewardsResp::default_instance_;
  delete ShareTotalRewardsResp_reflection_;
  delete PurchaseCoinReq::default_instance_;
  delete PurchaseCoinReq_reflection_;
  delete PurchaseCoinResp::default_instance_;
  delete PurchaseCoinResp_reflection_;
  delete SignInRewardsReq::default_instance_;
  delete SignInRewardsReq_reflection_;
  delete SignInRewardsResp::default_instance_;
  delete SignInRewardsResp_reflection_;
  delete SetVersion::default_instance_;
  delete SetVersion_reflection_;
  delete SetFlag::default_instance_;
  delete SetFlag_reflection_;
  delete GetFlagResp::default_instance_;
  delete GetFlagResp_reflection_;
  delete ThumbsUpCPP::default_instance_;
  delete ThumbsUpCPP_reflection_;
  delete GetThumbsUpReq::default_instance_;
  delete GetThumbsUpReq_reflection_;
  delete GetThumbsUpResp::default_instance_;
  delete GetThumbsUpResp_reflection_;
  delete RankThumbsUpReq::default_instance_;
  delete RankThumbsUpReq_reflection_;
  delete RankThumbsUpResp::default_instance_;
  delete RankThumbsUpResp_reflection_;
  delete CSRankThumbsUpReq::default_instance_;
  delete CSRankThumbsUpReq_reflection_;
  delete CSRankThumbsUpResp::default_instance_;
  delete CSRankThumbsUpResp_reflection_;
  delete GetWorldChannelHelpCntReq::default_instance_;
  delete GetWorldChannelHelpCntReq_reflection_;
  delete GetWorldChannelHelpCntResp::default_instance_;
  delete GetWorldChannelHelpCntResp_reflection_;
  delete WorldChannelHelpReq::default_instance_;
  delete WorldChannelHelpReq_reflection_;
  delete WorldChannelHelpResp::default_instance_;
  delete WorldChannelHelpResp_reflection_;
  delete SysMail::default_instance_;
  delete SysMail_reflection_;
  delete RequestSysMail::default_instance_;
  delete RequestSysMail_reflection_;
  delete ReplySysMail::default_instance_;
  delete ReplySysMail_reflection_;
  delete RequestMailRead::default_instance_;
  delete RequestMailRead_reflection_;
  delete ReplyMailRead::default_instance_;
  delete ReplyMailRead_reflection_;
  delete RequestMailGet::default_instance_;
  delete RequestMailGet_reflection_;
  delete ReplyMailGet::default_instance_;
  delete ReplyMailGet_reflection_;
  delete RequestMailDel::default_instance_;
  delete RequestMailDel_reflection_;
  delete RequestMailAllGet::default_instance_;
  delete RequestMailAllGet_reflection_;
  delete ReplyMailAllGet::default_instance_;
  delete ReplyMailAllGet_reflection_;
  delete RequestMailAllDel::default_instance_;
  delete RequestMailAllDel_reflection_;
  delete ReqNewMsg::default_instance_;
  delete ReqNewMsg_reflection_;
  delete ReplyNewMsg::default_instance_;
  delete ReplyNewMsg_reflection_;
  delete ReqSendMailBC::default_instance_;
  delete ReqSendMailBC_reflection_;
  delete PushLoginMsg::default_instance_;
  delete PushLoginMsg_reflection_;
  delete CSPushLoginMsg::default_instance_;
  delete CSPushLoginMsg_reflection_;
  delete ViewAdGetSpeedUpCardReq::default_instance_;
  delete ViewAdGetSpeedUpCardReq_reflection_;
  delete ViewAdGetSpeedUpCardResp::default_instance_;
  delete ViewAdGetSpeedUpCardResp_reflection_;
  delete NewUserGuideShareReq::default_instance_;
  delete NewUserGuideShareReq_reflection_;
  delete NewUserGuideShareResp::default_instance_;
  delete NewUserGuideShareResp_reflection_;
  delete UseCdKeyReq::default_instance_;
  delete UseCdKeyReq_reflection_;
  delete UseCdKeyResp::default_instance_;
  delete UseCdKeyResp_reflection_;
  delete HeartBeatReq::default_instance_;
  delete HeartBeatReq_reflection_;
  delete HeartBeatResp::default_instance_;
  delete HeartBeatResp_reflection_;
}

void protobuf_AddDesc_User_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::ProtoNotify::protobuf_AddDesc_ProtoNotify_2eproto();
  ::ProtoActivity::protobuf_AddDesc_ProtoActivity_2eproto();
  ::ProtoBuilding::protobuf_AddDesc_ProtoBuilding_2eproto();
  ::ProtoProduce::protobuf_AddDesc_ProtoProduce_2eproto();
  ::DataCommon::protobuf_AddDesc_DataCommon_2eproto();
  ::ProtoOrder::protobuf_AddDesc_ProtoOrder_2eproto();
  ::ProtoShipping::protobuf_AddDesc_ProtoShipping_2eproto();
  ::ProtoNPCSeller::protobuf_AddDesc_ProtoNPCSeller_2eproto();
  ::ProtoFriendlyTree::protobuf_AddDesc_ProtoFriendlyTree_2eproto();
  ::ProtoTheme::protobuf_AddDesc_ProtoTheme_2eproto();
  ::ProtoReward::protobuf_AddDesc_ProtoReward_2eproto();
  ::ProtoPet::protobuf_AddDesc_ProtoPet_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\nUser.proto\022\004User\032\021ProtoNotify.proto\032\023P"
    "rotoActivity.proto\032\023ProtoBuilding.proto\032"
    "\022ProtoProduce.proto\032\020DataCommon.proto\032\020P"
    "rotoOrder.proto\032\023ProtoShipping.proto\032\024Pr"
    "otoNPCSeller.proto\032\027ProtoFriendlyTree.pr"
    "oto\032\020ProtoTheme.proto\032\021ProtoReward.proto"
    "\032\016ProtoPet.proto\"\261\007\n\004Base\022\013\n\003uid\030\001 \002(\r\022\030"
    "\n\020registerPlatform\030\002 \002(\r\022\024\n\014registerTime"
    "\030\003 \002(\r\022\031\n\021lastLoginPlatform\030\004 \002(\r\022\025\n\rlas"
    "tLoginTime\030\005 \002(\r\022\022\n\nloginTimes\030\006 \002(\r\022\021\n\t"
    "loginDays\030\007 \002(\r\022\026\n\016lastActiveTime\030\010 \002(\r\022"
    "\023\n\013lastOffTime\030\t \002(\r\022\020\n\010forbidTs\030\n \002(\r\022\024"
    "\n\014forbidReason\030\013 \002(\014\022\025\n\rtutorialStage\030\014 "
    "\002(\r\022\014\n\004name\030\r \002(\014\022\013\n\003fig\030\016 \002(\014\022\013\n\003exp\030\017 "
    "\002(\004\022\r\n\005level\030\020 \002(\r\022\021\n\tacccharge\030\021 \002(\r\022\020\n"
    "\010viplevel\030\022 \002(\r\022\014\n\004cash\030\023 \002(\r\022\014\n\004coin\030\024 "
    "\002(\r\022\025\n\rfirstRecharge\030\025 \002(\r\022\022\n\nallianceId"
    "\030\026 \002(\r\022\017\n\007barrier\030\027 \002(\014\022\026\n\016lastcreateadt"
    "s\030\030 \002(\r\022\025\n\rallianAllowTs\030\031 \002(\r\022\026\n\016nextDo"
    "nationTs\030\032 \002(\r\022\021\n\thelptimes\030\033 \002(\r\022\034\n\024vip"
    "rewarddailygiftts\030\034 \002(\r\022\037\n\027vipdailyspeed"
    "productcnt\030\035 \002(\r\022 \n\030vipdailyremoveorderc"
    "dcnt\030\036 \002(\r\022\024\n\014switchStatus\030\037 \002(\r\022\036\n\026shar"
    "erewarddailygiftts\030  \002(\r\022\025\n\rAssistStartT"
    "s\030! \002(\r\022\023\n\013AssistEndTs\030\" \002(\r\022\022\n\nexpandma"
    "p1\030# \002(\014\022\022\n\nexpandmap2\030$ \002(\014\022\022\n\nexpandma"
    "p3\030% \002(\014\022\036\n\026nextrandomboxrefreshts\030& \002(\r"
    "\022\014\n\004flag\030\' \002(\r\022\025\n\rfriendlyvalue\030( \002(\r\022\017\n"
    "\007version\030) \001(\r\022\023\n\013accthumbsup\030* \001(\r\022\034\n\024i"
    "sUnlockPetResidence\030+ \001(\r\022\021\n\twxChannel\030,"
    " \001(\014\"A\n\014ActivityItem\022\n\n\002id\030\001 \002(\r\022\013\n\003bts\030"
    "\002 \002(\r\022\013\n\003ets\030\003 \002(\r\022\013\n\003ver\030\004 \002(\r\"+\n\010Activ"
    "ity\022\037\n\003act\030\001 \003(\0132\022.User.ActivityItem\"\211\007\n"
    "\004User\022\030\n\004base\030\001 \002(\0132\n.User.Base\022\n\n\002ts\030\002 "
    "\002(\r\022 \n\010activity\030\003 \002(\0132\016.User.Activity\022/\n"
    "\010notifies\030\004 \001(\0132\035.ProtoNotify.NotifyItem"
    "CPPAll\022\'\n\007charges\030\005 \002(\0132\026.User.Accumulat"
    "eCharge\0228\n\014gameactivity\030\006 \002(\0132\".ProtoAct"
    "ivity.GameAcitivityAllCPP\022&\n\004item\030\007 \003(\0132"
    "\030.DataCommon.PropsItemCPP\022*\n\006builds\030\010 \003("
    "\0132\032.ProtoBuilding.BuildingCPP\022+\n\010croplan"
    "d\030\t \003(\0132\031.ProtoProduce.CropLandCPP\0221\n\neq"
    "uipments\030\n \003(\0132\035.ProtoProduce.ProduceEqu"
    "ipCPP\022(\n\007animals\030\013 \003(\0132\027.ProtoProduce.An"
    "imalCPP\0227\n\016equipmentstars\030\014 \003(\0132\037.ProtoB"
    "uilding.EquipmentStarCPP\022&\n\006fruits\030\r \003(\013"
    "2\026.ProtoProduce.FruitCPP\022$\n\006orders\030\016 \003(\013"
    "2\024.ProtoOrder.OrderCPP\022#\n\005truck\030\017 \001(\0132\024."
    "ProtoOrder.TruckCPP\022,\n\010shipping\030\020 \001(\0132\032."
    "ProtoShipping.ShippingCPP\0220\n\tshipboxes\030\021"
    " \003(\0132\035.ProtoShipping.ShippingBoxCPP\022/\n\tn"
    "pcseller\030\022 \002(\0132\034.ProtoNPCSeller.NPCSelle"
    "rCPP\022\016\n\006opents\030\023 \002(\r\022\024\n\014hasNewDyInfo\030\024 \001"
    "(\010\022(\n\005theme\030\025 \001(\0132\031.ProtoTheme.ThemeInfo"
    "Resp\022\025\n\rhasNewMsgInfo\030\026 \001(\010\022#\n\003pet\030\027 \003(\013"
    "2\026.ProtoPet.UnlockPetCPP\"+\n\rOthProduceCP"
    "P\022\n\n\002ud\030\001 \002(\r\022\016\n\006status\030\002 \002(\r\"\"\n\020Request"
    "OtherUser\022\016\n\006othuid\030\001 \002(\r\"\264\004\n\tOtherUser\022"
    "\030\n\004base\030\001 \002(\0132\n.User.Base\022*\n\006builds\030\002 \003("
    "\0132\032.ProtoBuilding.BuildingCPP\022+\n\010croplan"
    "d\030\003 \003(\0132\031.ProtoProduce.CropLandCPP\022\'\n\neq"
    "uipments\030\004 \003(\0132\023.User.OthProduceCPP\022(\n\007a"
    "nimals\030\005 \003(\0132\027.ProtoProduce.AnimalCPP\0227\n"
    "\016equipmentstars\030\006 \003(\0132\037.ProtoBuilding.Eq"
    "uipmentStarCPP\022&\n\006fruits\030\007 \003(\0132\026.ProtoPr"
    "oduce.FruitCPP\022\022\n\nshopStatus\030\010 \002(\r\022,\n\010sh"
    "ipping\030\t \001(\0132\032.ProtoShipping.ShippingCPP"
    "\0220\n\tshipboxes\030\n \003(\0132\035.ProtoShipping.Ship"
    "pingBoxCPP\0228\n\014friendlytree\030\013 \002(\0132\".Proto"
    "FriendlyTree.FriendlyTreeCPP\022(\n\005theme\030\014 "
    "\001(\0132\031.ProtoTheme.ThemeInfoResp\022(\n\010arrayp"
    "et\030\r \003(\0132\026.ProtoPet.UnlockPetCPP\"3\n\022Requ"
    "estOtherUserBC\022\016\n\006othuid\030\001 \002(\r\022\r\n\005myuid\030"
    "\002 \002(\r\"\016\n\014FetchSelfReq\"+\n\rFetchSelfResp\022\032"
    "\n\006player\030\001 \002(\0132\n.User.User\"&\n\rTutorialst"
    "age\022\025\n\rtutorialStage\030\001 \002(\r\"$\n\014SwitchStat"
    "us\022\024\n\014switchStatus\030\001 \002(\r\"\030\n\nServerTime\022\n"
    "\n\002ts\030\001 \002(\r\">\n\013CostCashReq\022\014\n\004cash\030\001 \002(\r\022"
    "\016\n\006opCode\030\002 \002(\t\022\021\n\toperation\030\003 \002(\r\"/\n\014Co"
    "stCashResp\022\014\n\004cash\030\001 \002(\r\022\021\n\toperation\030\002 "
    "\002(\r\"&\n\nChargeItem\022\014\n\004cash\030\001 \002(\r\022\n\n\002ts\030\002 "
    "\002(\r\">\n\020AccumulateCharge\022*\n\020accumulateCha"
    "rge\030\001 \003(\0132\020.User.ChargeItem\"J\n\027PushAccum"
    "ulateChangeReq\022/\n\017changeAcccharge\030\001 \002(\0132"
    "\026.User.AccumulateCharge\"6\n\nSpeedUpReq\022\014\n"
    "\004type\030\001 \002(\r\022\n\n\002ud\030\002 \001(\r\022\016\n\006method\030\003 \001(\r\""
    ":\n\013SpeedUpResp\022+\n\007commons\030\001 \001(\0132\032.DataCo"
    "mmon.CommonItemsCPP\"4\n\017BuyMaterialInfo\022\017"
    "\n\007propsid\030\001 \002(\r\022\020\n\010propscnt\030\002 \002(\r\"E\n\016Buy"
    "MaterialReq\022&\n\007buyinfo\030\001 \003(\0132\025.User.BuyM"
    "aterialInfo\022\013\n\003seq\030\002 \002(\r\"K\n\017BuyMaterialR"
    "esp\022+\n\007commons\030\001 \002(\0132\032.DataCommon.Common"
    "ItemsCPP\022\013\n\003seq\030\002 \002(\r\"B\n\023CriticalRewards"
    "Resp\022+\n\007commons\030\001 \002(\0132\032.DataCommon.Commo"
    "nItemsCPP\"\?\n\020LevelRewardsResp\022+\n\007commons"
    "\030\001 \002(\0132\032.DataCommon.CommonItemsCPP\"\017\n\rDa"
    "liyShareReq\"0\n\016DaliyShareResp\022\014\n\004days\030\001 "
    "\002(\r\022\020\n\010rewardts\030\002 \002(\r\"\021\n\017ShareRewardsReq"
    "\"Q\n\020ShareRewardsResp\022+\n\007commons\030\001 \002(\0132\032."
    "DataCommon.CommonItemsCPP\022\020\n\010rewardts\030\002 "
    "\002(\r\"#\n\024ShareTotalRewardsReq\022\013\n\003day\030\001 \002(\r"
    "\"S\n\025ShareTotalRewardsResp\022+\n\007commons\030\001 \002"
    "(\0132\032.DataCommon.CommonItemsCPP\022\r\n\005marks\030"
    "\002 \002(\r\"\035\n\017PurchaseCoinReq\022\n\n\002id\030\001 \002(\r\"\?\n\020"
    "PurchaseCoinResp\022+\n\007commons\030\001 \002(\0132\032.Data"
    "Common.CommonItemsCPP\"\037\n\020SignInRewardsRe"
    "q\022\013\n\003day\030\001 \002(\r\"O\n\021SignInRewardsResp\022+\n\007c"
    "ommons\030\001 \001(\0132\032.DataCommon.CommonItemsCPP"
    "\022\r\n\005marks\030\002 \002(\r\"\035\n\nSetVersion\022\017\n\007version"
    "\030\001 \002(\r\"0\n\007SetFlag\022\016\n\006flagId\030\001 \002(\r\022\025\n\risC"
    "ostDimaond\030\002 \001(\r\"H\n\013GetFlagResp\022\014\n\004flag\030"
    "\001 \002(\r\022+\n\007commons\030\002 \001(\0132\032.DataCommon.Comm"
    "onItemsCPP\"\034\n\013ThumbsUpCPP\022\r\n\005index\030\001 \003(\r"
    "\"\020\n\016GetThumbsUpReq\"6\n\017GetThumbsUpResp\022#\n"
    "\010thumbsup\030\001 \002(\0132\021.User.ThumbsUpCPP\"A\n\017Ra"
    "nkThumbsUpReq\022\016\n\006othuid\030\001 \002(\r\022\016\n\006index1\030"
    "\002 \002(\r\022\016\n\006index2\030\003 \002(\r\"d\n\020RankThumbsUpRes"
    "p\022#\n\010thumbsup\030\001 \002(\0132\021.User.ThumbsUpCPP\022+"
    "\n\007commons\030\002 \002(\0132\032.DataCommon.CommonItems"
    "CPP\"R\n\021CSRankThumbsUpReq\022\r\n\005myuid\030\001 \002(\r\022"
    "\016\n\006othuid\030\002 \002(\r\022\016\n\006index1\030\003 \002(\r\022\016\n\006index"
    "2\030\004 \002(\r\"C\n\022CSRankThumbsUpResp\022\r\n\005myuid\030\001"
    " \002(\r\022\016\n\006index1\030\002 \002(\r\022\016\n\006index2\030\003 \002(\r\"\033\n\031"
    "GetWorldChannelHelpCntReq\"/\n\032GetWorldCha"
    "nnelHelpCntResp\022\021\n\tremainCnt\030\001 \002(\r\"\025\n\023Wo"
    "rldChannelHelpReq\")\n\024WorldChannelHelpRes"
    "p\022\021\n\tremainCnt\030\001 \002(\r\"@\n\007SysMail\022\n\n\002ts\030\001 "
    "\002(\r\022\014\n\004stat\030\002 \002(\r\022\013\n\003sys\030\003 \002(\014\022\016\n\006reward"
    "\030\004 \002(\014\"\020\n\016RequestSysMail\"+\n\014ReplySysMail"
    "\022\033\n\004mail\030\001 \003(\0132\r.User.SysMail\"\035\n\017Request"
    "MailRead\022\n\n\002ts\030\001 \002(\r\")\n\rReplyMailRead\022\n\n"
    "\002ts\030\001 \002(\r\022\014\n\004stat\030\002 \002(\r\"\034\n\016RequestMailGe"
    "t\022\n\n\002ts\030\001 \002(\r\"Q\n\014ReplyMailGet\022\n\n\002ts\030\001 \002("
    "\r\022\014\n\004stat\030\002 \002(\r\022\'\n\006reward\030\003 \001(\0132\027.ProtoR"
    "eward.RewardInfo\"\034\n\016RequestMailDel\022\n\n\002ts"
    "\030\001 \002(\r\"\023\n\021RequestMailAllGet\":\n\017ReplyMail"
    "AllGet\022\'\n\006reward\030\001 \001(\0132\027.ProtoReward.Rew"
    "ardInfo\"\023\n\021RequestMailAllDel\"\013\n\tReqNewMs"
    "g\"\033\n\013ReplyNewMsg\022\014\n\004type\030\001 \003(\r\"E\n\rReqSen"
    "dMailBC\022\013\n\003uid\030\001 \002(\r\022\n\n\002ts\030\002 \002(\r\022\013\n\003sys\030"
    "\003 \002(\014\022\016\n\006reward\030\004 \002(\014\",\n\014PushLoginMsg\022\017\n"
    "\007loginTs\030\001 \002(\r\022\013\n\003uid\030\002 \002(\r\"A\n\016CSPushLog"
    "inMsg\022\021\n\tinviteUid\030\001 \002(\r\022\017\n\007loginTs\030\002 \002("
    "\r\022\013\n\003uid\030\003 \002(\r\"\031\n\027ViewAdGetSpeedUpCardRe"
    "q\"G\n\030ViewAdGetSpeedUpCardResp\022+\n\007commons"
    "\030\001 \002(\0132\032.DataCommon.CommonItemsCPP\"0\n\024Ne"
    "wUserGuideShareReq\022\n\n\002id\030\001 \002(\r\022\014\n\004type\030\002"
    " \002(\r\"D\n\025NewUserGuideShareResp\022+\n\007commons"
    "\030\001 \002(\0132\032.DataCommon.CommonItemsCPP\"\035\n\013Us"
    "eCdKeyReq\022\016\n\006number\030\001 \002(\t\";\n\014UseCdKeyRes"
    "p\022+\n\007commons\030\001 \002(\0132\032.DataCommon.CommonIt"
    "emsCPP\"\016\n\014HeartBeatReq\"\017\n\rHeartBeatResp", 6079);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "User.proto", &protobuf_RegisterTypes);
  Base::default_instance_ = new Base();
  ActivityItem::default_instance_ = new ActivityItem();
  Activity::default_instance_ = new Activity();
  User::default_instance_ = new User();
  OthProduceCPP::default_instance_ = new OthProduceCPP();
  RequestOtherUser::default_instance_ = new RequestOtherUser();
  OtherUser::default_instance_ = new OtherUser();
  RequestOtherUserBC::default_instance_ = new RequestOtherUserBC();
  FetchSelfReq::default_instance_ = new FetchSelfReq();
  FetchSelfResp::default_instance_ = new FetchSelfResp();
  Tutorialstage::default_instance_ = new Tutorialstage();
  SwitchStatus::default_instance_ = new SwitchStatus();
  ServerTime::default_instance_ = new ServerTime();
  CostCashReq::default_instance_ = new CostCashReq();
  CostCashResp::default_instance_ = new CostCashResp();
  ChargeItem::default_instance_ = new ChargeItem();
  AccumulateCharge::default_instance_ = new AccumulateCharge();
  PushAccumulateChangeReq::default_instance_ = new PushAccumulateChangeReq();
  SpeedUpReq::default_instance_ = new SpeedUpReq();
  SpeedUpResp::default_instance_ = new SpeedUpResp();
  BuyMaterialInfo::default_instance_ = new BuyMaterialInfo();
  BuyMaterialReq::default_instance_ = new BuyMaterialReq();
  BuyMaterialResp::default_instance_ = new BuyMaterialResp();
  CriticalRewardsResp::default_instance_ = new CriticalRewardsResp();
  LevelRewardsResp::default_instance_ = new LevelRewardsResp();
  DaliyShareReq::default_instance_ = new DaliyShareReq();
  DaliyShareResp::default_instance_ = new DaliyShareResp();
  ShareRewardsReq::default_instance_ = new ShareRewardsReq();
  ShareRewardsResp::default_instance_ = new ShareRewardsResp();
  ShareTotalRewardsReq::default_instance_ = new ShareTotalRewardsReq();
  ShareTotalRewardsResp::default_instance_ = new ShareTotalRewardsResp();
  PurchaseCoinReq::default_instance_ = new PurchaseCoinReq();
  PurchaseCoinResp::default_instance_ = new PurchaseCoinResp();
  SignInRewardsReq::default_instance_ = new SignInRewardsReq();
  SignInRewardsResp::default_instance_ = new SignInRewardsResp();
  SetVersion::default_instance_ = new SetVersion();
  SetFlag::default_instance_ = new SetFlag();
  GetFlagResp::default_instance_ = new GetFlagResp();
  ThumbsUpCPP::default_instance_ = new ThumbsUpCPP();
  GetThumbsUpReq::default_instance_ = new GetThumbsUpReq();
  GetThumbsUpResp::default_instance_ = new GetThumbsUpResp();
  RankThumbsUpReq::default_instance_ = new RankThumbsUpReq();
  RankThumbsUpResp::default_instance_ = new RankThumbsUpResp();
  CSRankThumbsUpReq::default_instance_ = new CSRankThumbsUpReq();
  CSRankThumbsUpResp::default_instance_ = new CSRankThumbsUpResp();
  GetWorldChannelHelpCntReq::default_instance_ = new GetWorldChannelHelpCntReq();
  GetWorldChannelHelpCntResp::default_instance_ = new GetWorldChannelHelpCntResp();
  WorldChannelHelpReq::default_instance_ = new WorldChannelHelpReq();
  WorldChannelHelpResp::default_instance_ = new WorldChannelHelpResp();
  SysMail::default_instance_ = new SysMail();
  RequestSysMail::default_instance_ = new RequestSysMail();
  ReplySysMail::default_instance_ = new ReplySysMail();
  RequestMailRead::default_instance_ = new RequestMailRead();
  ReplyMailRead::default_instance_ = new ReplyMailRead();
  RequestMailGet::default_instance_ = new RequestMailGet();
  ReplyMailGet::default_instance_ = new ReplyMailGet();
  RequestMailDel::default_instance_ = new RequestMailDel();
  RequestMailAllGet::default_instance_ = new RequestMailAllGet();
  ReplyMailAllGet::default_instance_ = new ReplyMailAllGet();
  RequestMailAllDel::default_instance_ = new RequestMailAllDel();
  ReqNewMsg::default_instance_ = new ReqNewMsg();
  ReplyNewMsg::default_instance_ = new ReplyNewMsg();
  ReqSendMailBC::default_instance_ = new ReqSendMailBC();
  PushLoginMsg::default_instance_ = new PushLoginMsg();
  CSPushLoginMsg::default_instance_ = new CSPushLoginMsg();
  ViewAdGetSpeedUpCardReq::default_instance_ = new ViewAdGetSpeedUpCardReq();
  ViewAdGetSpeedUpCardResp::default_instance_ = new ViewAdGetSpeedUpCardResp();
  NewUserGuideShareReq::default_instance_ = new NewUserGuideShareReq();
  NewUserGuideShareResp::default_instance_ = new NewUserGuideShareResp();
  UseCdKeyReq::default_instance_ = new UseCdKeyReq();
  UseCdKeyResp::default_instance_ = new UseCdKeyResp();
  HeartBeatReq::default_instance_ = new HeartBeatReq();
  HeartBeatResp::default_instance_ = new HeartBeatResp();
  Base::default_instance_->InitAsDefaultInstance();
  ActivityItem::default_instance_->InitAsDefaultInstance();
  Activity::default_instance_->InitAsDefaultInstance();
  User::default_instance_->InitAsDefaultInstance();
  OthProduceCPP::default_instance_->InitAsDefaultInstance();
  RequestOtherUser::default_instance_->InitAsDefaultInstance();
  OtherUser::default_instance_->InitAsDefaultInstance();
  RequestOtherUserBC::default_instance_->InitAsDefaultInstance();
  FetchSelfReq::default_instance_->InitAsDefaultInstance();
  FetchSelfResp::default_instance_->InitAsDefaultInstance();
  Tutorialstage::default_instance_->InitAsDefaultInstance();
  SwitchStatus::default_instance_->InitAsDefaultInstance();
  ServerTime::default_instance_->InitAsDefaultInstance();
  CostCashReq::default_instance_->InitAsDefaultInstance();
  CostCashResp::default_instance_->InitAsDefaultInstance();
  ChargeItem::default_instance_->InitAsDefaultInstance();
  AccumulateCharge::default_instance_->InitAsDefaultInstance();
  PushAccumulateChangeReq::default_instance_->InitAsDefaultInstance();
  SpeedUpReq::default_instance_->InitAsDefaultInstance();
  SpeedUpResp::default_instance_->InitAsDefaultInstance();
  BuyMaterialInfo::default_instance_->InitAsDefaultInstance();
  BuyMaterialReq::default_instance_->InitAsDefaultInstance();
  BuyMaterialResp::default_instance_->InitAsDefaultInstance();
  CriticalRewardsResp::default_instance_->InitAsDefaultInstance();
  LevelRewardsResp::default_instance_->InitAsDefaultInstance();
  DaliyShareReq::default_instance_->InitAsDefaultInstance();
  DaliyShareResp::default_instance_->InitAsDefaultInstance();
  ShareRewardsReq::default_instance_->InitAsDefaultInstance();
  ShareRewardsResp::default_instance_->InitAsDefaultInstance();
  ShareTotalRewardsReq::default_instance_->InitAsDefaultInstance();
  ShareTotalRewardsResp::default_instance_->InitAsDefaultInstance();
  PurchaseCoinReq::default_instance_->InitAsDefaultInstance();
  PurchaseCoinResp::default_instance_->InitAsDefaultInstance();
  SignInRewardsReq::default_instance_->InitAsDefaultInstance();
  SignInRewardsResp::default_instance_->InitAsDefaultInstance();
  SetVersion::default_instance_->InitAsDefaultInstance();
  SetFlag::default_instance_->InitAsDefaultInstance();
  GetFlagResp::default_instance_->InitAsDefaultInstance();
  ThumbsUpCPP::default_instance_->InitAsDefaultInstance();
  GetThumbsUpReq::default_instance_->InitAsDefaultInstance();
  GetThumbsUpResp::default_instance_->InitAsDefaultInstance();
  RankThumbsUpReq::default_instance_->InitAsDefaultInstance();
  RankThumbsUpResp::default_instance_->InitAsDefaultInstance();
  CSRankThumbsUpReq::default_instance_->InitAsDefaultInstance();
  CSRankThumbsUpResp::default_instance_->InitAsDefaultInstance();
  GetWorldChannelHelpCntReq::default_instance_->InitAsDefaultInstance();
  GetWorldChannelHelpCntResp::default_instance_->InitAsDefaultInstance();
  WorldChannelHelpReq::default_instance_->InitAsDefaultInstance();
  WorldChannelHelpResp::default_instance_->InitAsDefaultInstance();
  SysMail::default_instance_->InitAsDefaultInstance();
  RequestSysMail::default_instance_->InitAsDefaultInstance();
  ReplySysMail::default_instance_->InitAsDefaultInstance();
  RequestMailRead::default_instance_->InitAsDefaultInstance();
  ReplyMailRead::default_instance_->InitAsDefaultInstance();
  RequestMailGet::default_instance_->InitAsDefaultInstance();
  ReplyMailGet::default_instance_->InitAsDefaultInstance();
  RequestMailDel::default_instance_->InitAsDefaultInstance();
  RequestMailAllGet::default_instance_->InitAsDefaultInstance();
  ReplyMailAllGet::default_instance_->InitAsDefaultInstance();
  RequestMailAllDel::default_instance_->InitAsDefaultInstance();
  ReqNewMsg::default_instance_->InitAsDefaultInstance();
  ReplyNewMsg::default_instance_->InitAsDefaultInstance();
  ReqSendMailBC::default_instance_->InitAsDefaultInstance();
  PushLoginMsg::default_instance_->InitAsDefaultInstance();
  CSPushLoginMsg::default_instance_->InitAsDefaultInstance();
  ViewAdGetSpeedUpCardReq::default_instance_->InitAsDefaultInstance();
  ViewAdGetSpeedUpCardResp::default_instance_->InitAsDefaultInstance();
  NewUserGuideShareReq::default_instance_->InitAsDefaultInstance();
  NewUserGuideShareResp::default_instance_->InitAsDefaultInstance();
  UseCdKeyReq::default_instance_->InitAsDefaultInstance();
  UseCdKeyResp::default_instance_->InitAsDefaultInstance();
  HeartBeatReq::default_instance_->InitAsDefaultInstance();
  HeartBeatResp::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_User_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_User_2eproto {
  StaticDescriptorInitializer_User_2eproto() {
    protobuf_AddDesc_User_2eproto();
  }
} static_descriptor_initializer_User_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int Base::kUidFieldNumber;
const int Base::kRegisterPlatformFieldNumber;
const int Base::kRegisterTimeFieldNumber;
const int Base::kLastLoginPlatformFieldNumber;
const int Base::kLastLoginTimeFieldNumber;
const int Base::kLoginTimesFieldNumber;
const int Base::kLoginDaysFieldNumber;
const int Base::kLastActiveTimeFieldNumber;
const int Base::kLastOffTimeFieldNumber;
const int Base::kForbidTsFieldNumber;
const int Base::kForbidReasonFieldNumber;
const int Base::kTutorialStageFieldNumber;
const int Base::kNameFieldNumber;
const int Base::kFigFieldNumber;
const int Base::kExpFieldNumber;
const int Base::kLevelFieldNumber;
const int Base::kAccchargeFieldNumber;
const int Base::kViplevelFieldNumber;
const int Base::kCashFieldNumber;
const int Base::kCoinFieldNumber;
const int Base::kFirstRechargeFieldNumber;
const int Base::kAllianceIdFieldNumber;
const int Base::kBarrierFieldNumber;
const int Base::kLastcreateadtsFieldNumber;
const int Base::kAllianAllowTsFieldNumber;
const int Base::kNextDonationTsFieldNumber;
const int Base::kHelptimesFieldNumber;
const int Base::kViprewarddailygifttsFieldNumber;
const int Base::kVipdailyspeedproductcntFieldNumber;
const int Base::kVipdailyremoveordercdcntFieldNumber;
const int Base::kSwitchStatusFieldNumber;
const int Base::kSharerewarddailygifttsFieldNumber;
const int Base::kAssistStartTsFieldNumber;
const int Base::kAssistEndTsFieldNumber;
const int Base::kExpandmap1FieldNumber;
const int Base::kExpandmap2FieldNumber;
const int Base::kExpandmap3FieldNumber;
const int Base::kNextrandomboxrefreshtsFieldNumber;
const int Base::kFlagFieldNumber;
const int Base::kFriendlyvalueFieldNumber;
const int Base::kVersionFieldNumber;
const int Base::kAccthumbsupFieldNumber;
const int Base::kIsUnlockPetResidenceFieldNumber;
const int Base::kWxChannelFieldNumber;
#endif  // !_MSC_VER

Base::Base()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:User.Base)
}

void Base::InitAsDefaultInstance() {
}

Base::Base(const Base& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:User.Base)
}

void Base::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  uid_ = 0u;
  registerplatform_ = 0u;
  registertime_ = 0u;
  lastloginplatform_ = 0u;
  lastlogintime_ = 0u;
  logintimes_ = 0u;
  logindays_ = 0u;
  lastactivetime_ = 0u;
  lastofftime_ = 0u;
  forbidts_ = 0u;
  forbidreason_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tutorialstage_ = 0u;
  name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  fig_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  exp_ = GOOGLE_ULONGLONG(0);
  level_ = 0u;
  acccharge_ = 0u;
  viplevel_ = 0u;
  cash_ = 0u;
  coin_ = 0u;
  firstrecharge_ = 0u;
  allianceid_ = 0u;
  barrier_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  lastcreateadts_ = 0u;
  allianallowts_ = 0u;
  nextdonationts_ = 0u;
  helptimes_ = 0u;
  viprewarddailygiftts_ = 0u;
  vipdailyspeedproductcnt_ = 0u;
  vipdailyremoveordercdcnt_ = 0u;
  switchstatus_ = 0u;
  sharerewarddailygiftts_ = 0u;
  assiststartts_ = 0u;
  assistendts_ = 0u;
  expandmap1_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  expandmap2_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  expandmap3_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nextrandomboxrefreshts_ = 0u;
  flag_ = 0u;
  friendlyvalue_ = 0u;
  version_ = 0u;
  accthumbsup_ = 0u;
  isunlockpetresidence_ = 0u;
  wxchannel_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Base::~Base() {
  // @@protoc_insertion_point(destructor:User.Base)
  SharedDtor();
}

void Base::SharedDtor() {
  if (forbidreason_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete forbidreason_;
  }
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (fig_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete fig_;
  }
  if (barrier_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete barrier_;
  }
  if (expandmap1_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete expandmap1_;
  }
  if (expandmap2_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete expandmap2_;
  }
  if (expandmap3_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete expandmap3_;
  }
  if (wxchannel_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete wxchannel_;
  }
  if (this != default_instance_) {
  }
}

void Base::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Base::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Base_descriptor_;
}

const Base& Base::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_User_2eproto();
  return *default_instance_;
}

Base* Base::default_instance_ = NULL;

Base* Base::New() const {
  return new Base;
}

void Base::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<Base*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 255) {
    ZR_(uid_, lastactivetime_);
  }
  if (_has_bits_[8 / 32] & 65280) {
    ZR_(lastofftime_, forbidts_);
    ZR_(tutorialstage_, exp_);
    if (has_forbidreason()) {
      if (forbidreason_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        forbidreason_->clear();
      }
    }
    if (has_name()) {
      if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        name_->clear();
      }
    }
    if (has_fig()) {
      if (fig_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        fig_->clear();
      }
    }
  }
  if (_has_bits_[16 / 32] & 16711680) {
    ZR_(acccharge_, allianceid_);
    if (has_barrier()) {
      if (barrier_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        barrier_->clear();
      }
    }
    lastcreateadts_ = 0u;
  }
  if (_has_bits_[24 / 32] & 4278190080) {
    ZR_(allianallowts_, sharerewarddailygiftts_);
  }
  if (_has_bits_[32 / 32] & 255) {
    ZR_(assistendts_, nextrandomboxrefreshts_);
    ZR_(flag_, friendlyvalue_);
    assiststartts_ = 0u;
    if (has_expandmap1()) {
      if (expandmap1_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        expandmap1_->clear();
      }
    }
    if (has_expandmap2()) {
      if (expandmap2_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        expandmap2_->clear();
      }
    }
    if (has_expandmap3()) {
      if (expandmap3_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        expandmap3_->clear();
      }
    }
  }
  if (_has_bits_[40 / 32] & 3840) {
    ZR_(version_, accthumbsup_);
    isunlockpetresidence_ = 0u;
    if (has_wxchannel()) {
      if (wxchannel_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        wxchannel_->clear();
      }
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Base::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:User.Base)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 uid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uid_)));
          set_has_uid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_registerPlatform;
        break;
      }

      // required uint32 registerPlatform = 2;
      case 2: {
        if (tag == 16) {
         parse_registerPlatform:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &registerplatform_)));
          set_has_registerplatform();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_registerTime;
        break;
      }

      // required uint32 registerTime = 3;
      case 3: {
        if (tag == 24) {
         parse_registerTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &registertime_)));
          set_has_registertime();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_lastLoginPlatform;
        break;
      }

      // required uint32 lastLoginPlatform = 4;
      case 4: {
        if (tag == 32) {
         parse_lastLoginPlatform:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &lastloginplatform_)));
          set_has_lastloginplatform();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_lastLoginTime;
        break;
      }

      // required uint32 lastLoginTime = 5;
      case 5: {
        if (tag == 40) {
         parse_lastLoginTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &lastlogintime_)));
          set_has_lastlogintime();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_loginTimes;
        break;
      }

      // required uint32 loginTimes = 6;
      case 6: {
        if (tag == 48) {
         parse_loginTimes:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &logintimes_)));
          set_has_logintimes();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_loginDays;
        break;
      }

      // required uint32 loginDays = 7;
      case 7: {
        if (tag == 56) {
         parse_loginDays:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &logindays_)));
          set_has_logindays();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_lastActiveTime;
        break;
      }

      // required uint32 lastActiveTime = 8;
      case 8: {
        if (tag == 64) {
         parse_lastActiveTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &lastactivetime_)));
          set_has_lastactivetime();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_lastOffTime;
        break;
      }

      // required uint32 lastOffTime = 9;
      case 9: {
        if (tag == 72) {
         parse_lastOffTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &lastofftime_)));
          set_has_lastofftime();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(80)) goto parse_forbidTs;
        break;
      }

      // required uint32 forbidTs = 10;
      case 10: {
        if (tag == 80) {
         parse_forbidTs:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &forbidts_)));
          set_has_forbidts();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(90)) goto parse_forbidReason;
        break;
      }

      // required bytes forbidReason = 11;
      case 11: {
        if (tag == 90) {
         parse_forbidReason:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_forbidreason()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(96)) goto parse_tutorialStage;
        break;
      }

      // required uint32 tutorialStage = 12;
      case 12: {
        if (tag == 96) {
         parse_tutorialStage:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &tutorialstage_)));
          set_has_tutorialstage();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(106)) goto parse_name;
        break;
      }

      // required bytes name = 13;
      case 13: {
        if (tag == 106) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_name()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(114)) goto parse_fig;
        break;
      }

      // required bytes fig = 14;
      case 14: {
        if (tag == 114) {
         parse_fig:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_fig()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(120)) goto parse_exp;
        break;
      }

      // required uint64 exp = 15;
      case 15: {
        if (tag == 120) {
         parse_exp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &exp_)));
          set_has_exp();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(128)) goto parse_level;
        break;
      }

      // required uint32 level = 16;
      case 16: {
        if (tag == 128) {
         parse_level:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &level_)));
          set_has_level();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(136)) goto parse_acccharge;
        break;
      }

      // required uint32 acccharge = 17;
      case 17: {
        if (tag == 136) {
         parse_acccharge:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &acccharge_)));
          set_has_acccharge();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(144)) goto parse_viplevel;
        break;
      }

      // required uint32 viplevel = 18;
      case 18: {
        if (tag == 144) {
         parse_viplevel:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &viplevel_)));
          set_has_viplevel();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(152)) goto parse_cash;
        break;
      }

      // required uint32 cash = 19;
      case 19: {
        if (tag == 152) {
         parse_cash:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &cash_)));
          set_has_cash();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(160)) goto parse_coin;
        break;
      }

      // required uint32 coin = 20;
      case 20: {
        if (tag == 160) {
         parse_coin:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &coin_)));
          set_has_coin();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(168)) goto parse_firstRecharge;
        break;
      }

      // required uint32 firstRecharge = 21;
      case 21: {
        if (tag == 168) {
         parse_firstRecharge:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &firstrecharge_)));
          set_has_firstrecharge();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(176)) goto parse_allianceId;
        break;
      }

      // required uint32 allianceId = 22;
      case 22: {
        if (tag == 176) {
         parse_allianceId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &allianceid_)));
          set_has_allianceid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(186)) goto parse_barrier;
        break;
      }

      // required bytes barrier = 23;
      case 23: {
        if (tag == 186) {
         parse_barrier:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_barrier()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(192)) goto parse_lastcreateadts;
        break;
      }

      // required uint32 lastcreateadts = 24;
      case 24: {
        if (tag == 192) {
         parse_lastcreateadts:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &lastcreateadts_)));
          set_has_lastcreateadts();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(200)) goto parse_allianAllowTs;
        break;
      }

      // required uint32 allianAllowTs = 25;
      case 25: {
        if (tag == 200) {
         parse_allianAllowTs:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &allianallowts_)));
          set_has_allianallowts();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(208)) goto parse_nextDonationTs;
        break;
      }

      // required uint32 nextDonationTs = 26;
      case 26: {
        if (tag == 208) {
         parse_nextDonationTs:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &nextdonationts_)));
          set_has_nextdonationts();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(216)) goto parse_helptimes;
        break;
      }

      // required uint32 helptimes = 27;
      case 27: {
        if (tag == 216) {
         parse_helptimes:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &helptimes_)));
          set_has_helptimes();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(224)) goto parse_viprewarddailygiftts;
        break;
      }

      // required uint32 viprewarddailygiftts = 28;
      case 28: {
        if (tag == 224) {
         parse_viprewarddailygiftts:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &viprewarddailygiftts_)));
          set_has_viprewarddailygiftts();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(232)) goto parse_vipdailyspeedproductcnt;
        break;
      }

      // required uint32 vipdailyspeedproductcnt = 29;
      case 29: {
        if (tag == 232) {
         parse_vipdailyspeedproductcnt:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &vipdailyspeedproductcnt_)));
          set_has_vipdailyspeedproductcnt();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(240)) goto parse_vipdailyremoveordercdcnt;
        break;
      }

      // required uint32 vipdailyremoveordercdcnt = 30;
      case 30: {
        if (tag == 240) {
         parse_vipdailyremoveordercdcnt:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &vipdailyremoveordercdcnt_)));
          set_has_vipdailyremoveordercdcnt();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(248)) goto parse_switchStatus;
        break;
      }

      // required uint32 switchStatus = 31;
      case 31: {
        if (tag == 248) {
         parse_switchStatus:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &switchstatus_)));
          set_has_switchstatus();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(256)) goto parse_sharerewarddailygiftts;
        break;
      }

      // required uint32 sharerewarddailygiftts = 32;
      case 32: {
        if (tag == 256) {
         parse_sharerewarddailygiftts:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &sharerewarddailygiftts_)));
          set_has_sharerewarddailygiftts();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(264)) goto parse_AssistStartTs;
        break;
      }

      // required uint32 AssistStartTs = 33;
      case 33: {
        if (tag == 264) {
         parse_AssistStartTs:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &assiststartts_)));
          set_has_assiststartts();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(272)) goto parse_AssistEndTs;
        break;
      }

      // required uint32 AssistEndTs = 34;
      case 34: {
        if (tag == 272) {
         parse_AssistEndTs:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &assistendts_)));
          set_has_assistendts();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(282)) goto parse_expandmap1;
        break;
      }

      // required bytes expandmap1 = 35;
      case 35: {
        if (tag == 282) {
         parse_expandmap1:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_expandmap1()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(290)) goto parse_expandmap2;
        break;
      }

      // required bytes expandmap2 = 36;
      case 36: {
        if (tag == 290) {
         parse_expandmap2:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_expandmap2()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(298)) goto parse_expandmap3;
        break;
      }

      // required bytes expandmap3 = 37;
      case 37: {
        if (tag == 298) {
         parse_expandmap3:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_expandmap3()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(304)) goto parse_nextrandomboxrefreshts;
        break;
      }

      // required uint32 nextrandomboxrefreshts = 38;
      case 38: {
        if (tag == 304) {
         parse_nextrandomboxrefreshts:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &nextrandomboxrefreshts_)));
          set_has_nextrandomboxrefreshts();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(312)) goto parse_flag;
        break;
      }

      // required uint32 flag = 39;
      case 39: {
        if (tag == 312) {
         parse_flag:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &flag_)));
          set_has_flag();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(320)) goto parse_friendlyvalue;
        break;
      }

      // required uint32 friendlyvalue = 40;
      case 40: {
        if (tag == 320) {
         parse_friendlyvalue:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &friendlyvalue_)));
          set_has_friendlyvalue();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(328)) goto parse_version;
        break;
      }

      // optional uint32 version = 41;
      case 41: {
        if (tag == 328) {
         parse_version:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &version_)));
          set_has_version();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(336)) goto parse_accthumbsup;
        break;
      }

      // optional uint32 accthumbsup = 42;
      case 42: {
        if (tag == 336) {
         parse_accthumbsup:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &accthumbsup_)));
          set_has_accthumbsup();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(344)) goto parse_isUnlockPetResidence;
        break;
      }

      // optional uint32 isUnlockPetResidence = 43;
      case 43: {
        if (tag == 344) {
         parse_isUnlockPetResidence:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &isunlockpetresidence_)));
          set_has_isunlockpetresidence();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(354)) goto parse_wxChannel;
        break;
      }

      // optional bytes wxChannel = 44;
      case 44: {
        if (tag == 354) {
         parse_wxChannel:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_wxchannel()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:User.Base)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:User.Base)
  return false;
#undef DO_
}

void Base::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:User.Base)
  // required uint32 uid = 1;
  if (has_uid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->uid(), output);
  }

  // required uint32 registerPlatform = 2;
  if (has_registerplatform()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->registerplatform(), output);
  }

  // required uint32 registerTime = 3;
  if (has_registertime()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->registertime(), output);
  }

  // required uint32 lastLoginPlatform = 4;
  if (has_lastloginplatform()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->lastloginplatform(), output);
  }

  // required uint32 lastLoginTime = 5;
  if (has_lastlogintime()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->lastlogintime(), output);
  }

  // required uint32 loginTimes = 6;
  if (has_logintimes()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->logintimes(), output);
  }

  // required uint32 loginDays = 7;
  if (has_logindays()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->logindays(), output);
  }

  // required uint32 lastActiveTime = 8;
  if (has_lastactivetime()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->lastactivetime(), output);
  }

  // required uint32 lastOffTime = 9;
  if (has_lastofftime()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->lastofftime(), output);
  }

  // required uint32 forbidTs = 10;
  if (has_forbidts()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(10, this->forbidts(), output);
  }

  // required bytes forbidReason = 11;
  if (has_forbidreason()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      11, this->forbidreason(), output);
  }

  // required uint32 tutorialStage = 12;
  if (has_tutorialstage()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(12, this->tutorialstage(), output);
  }

  // required bytes name = 13;
  if (has_name()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      13, this->name(), output);
  }

  // required bytes fig = 14;
  if (has_fig()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      14, this->fig(), output);
  }

  // required uint64 exp = 15;
  if (has_exp()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(15, this->exp(), output);
  }

  // required uint32 level = 16;
  if (has_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(16, this->level(), output);
  }

  // required uint32 acccharge = 17;
  if (has_acccharge()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(17, this->acccharge(), output);
  }

  // required uint32 viplevel = 18;
  if (has_viplevel()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(18, this->viplevel(), output);
  }

  // required uint32 cash = 19;
  if (has_cash()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(19, this->cash(), output);
  }

  // required uint32 coin = 20;
  if (has_coin()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(20, this->coin(), output);
  }

  // required uint32 firstRecharge = 21;
  if (has_firstrecharge()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(21, this->firstrecharge(), output);
  }

  // required uint32 allianceId = 22;
  if (has_allianceid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(22, this->allianceid(), output);
  }

  // required bytes barrier = 23;
  if (has_barrier()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      23, this->barrier(), output);
  }

  // required uint32 lastcreateadts = 24;
  if (has_lastcreateadts()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(24, this->lastcreateadts(), output);
  }

  // required uint32 allianAllowTs = 25;
  if (has_allianallowts()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(25, this->allianallowts(), output);
  }

  // required uint32 nextDonationTs = 26;
  if (has_nextdonationts()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(26, this->nextdonationts(), output);
  }

  // required uint32 helptimes = 27;
  if (has_helptimes()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(27, this->helptimes(), output);
  }

  // required uint32 viprewarddailygiftts = 28;
  if (has_viprewarddailygiftts()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(28, this->viprewarddailygiftts(), output);
  }

  // required uint32 vipdailyspeedproductcnt = 29;
  if (has_vipdailyspeedproductcnt()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(29, this->vipdailyspeedproductcnt(), output);
  }

  // required uint32 vipdailyremoveordercdcnt = 30;
  if (has_vipdailyremoveordercdcnt()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(30, this->vipdailyremoveordercdcnt(), output);
  }

  // required uint32 switchStatus = 31;
  if (has_switchstatus()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(31, this->switchstatus(), output);
  }

  // required uint32 sharerewarddailygiftts = 32;
  if (has_sharerewarddailygiftts()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(32, this->sharerewarddailygiftts(), output);
  }

  // required uint32 AssistStartTs = 33;
  if (has_assiststartts()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(33, this->assiststartts(), output);
  }

  // required uint32 AssistEndTs = 34;
  if (has_assistendts()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(34, this->assistendts(), output);
  }

  // required bytes expandmap1 = 35;
  if (has_expandmap1()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      35, this->expandmap1(), output);
  }

  // required bytes expandmap2 = 36;
  if (has_expandmap2()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      36, this->expandmap2(), output);
  }

  // required bytes expandmap3 = 37;
  if (has_expandmap3()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      37, this->expandmap3(), output);
  }

  // required uint32 nextrandomboxrefreshts = 38;
  if (has_nextrandomboxrefreshts()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(38, this->nextrandomboxrefreshts(), output);
  }

  // required uint32 flag = 39;
  if (has_flag()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(39, this->flag(), output);
  }

  // required uint32 friendlyvalue = 40;
  if (has_friendlyvalue()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(40, this->friendlyvalue(), output);
  }

  // optional uint32 version = 41;
  if (has_version()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(41, this->version(), output);
  }

  // optional uint32 accthumbsup = 42;
  if (has_accthumbsup()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(42, this->accthumbsup(), output);
  }

  // optional uint32 isUnlockPetResidence = 43;
  if (has_isunlockpetresidence()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(43, this->isunlockpetresidence(), output);
  }

  // optional bytes wxChannel = 44;
  if (has_wxchannel()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      44, this->wxchannel(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:User.Base)
}

::google::protobuf::uint8* Base::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:User.Base)
  // required uint32 uid = 1;
  if (has_uid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->uid(), target);
  }

  // required uint32 registerPlatform = 2;
  if (has_registerplatform()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->registerplatform(), target);
  }

  // required uint32 registerTime = 3;
  if (has_registertime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->registertime(), target);
  }

  // required uint32 lastLoginPlatform = 4;
  if (has_lastloginplatform()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->lastloginplatform(), target);
  }

  // required uint32 lastLoginTime = 5;
  if (has_lastlogintime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->lastlogintime(), target);
  }

  // required uint32 loginTimes = 6;
  if (has_logintimes()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->logintimes(), target);
  }

  // required uint32 loginDays = 7;
  if (has_logindays()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->logindays(), target);
  }

  // required uint32 lastActiveTime = 8;
  if (has_lastactivetime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->lastactivetime(), target);
  }

  // required uint32 lastOffTime = 9;
  if (has_lastofftime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->lastofftime(), target);
  }

  // required uint32 forbidTs = 10;
  if (has_forbidts()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(10, this->forbidts(), target);
  }

  // required bytes forbidReason = 11;
  if (has_forbidreason()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        11, this->forbidreason(), target);
  }

  // required uint32 tutorialStage = 12;
  if (has_tutorialstage()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(12, this->tutorialstage(), target);
  }

  // required bytes name = 13;
  if (has_name()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        13, this->name(), target);
  }

  // required bytes fig = 14;
  if (has_fig()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        14, this->fig(), target);
  }

  // required uint64 exp = 15;
  if (has_exp()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(15, this->exp(), target);
  }

  // required uint32 level = 16;
  if (has_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(16, this->level(), target);
  }

  // required uint32 acccharge = 17;
  if (has_acccharge()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(17, this->acccharge(), target);
  }

  // required uint32 viplevel = 18;
  if (has_viplevel()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(18, this->viplevel(), target);
  }

  // required uint32 cash = 19;
  if (has_cash()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(19, this->cash(), target);
  }

  // required uint32 coin = 20;
  if (has_coin()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(20, this->coin(), target);
  }

  // required uint32 firstRecharge = 21;
  if (has_firstrecharge()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(21, this->firstrecharge(), target);
  }

  // required uint32 allianceId = 22;
  if (has_allianceid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(22, this->allianceid(), target);
  }

  // required bytes barrier = 23;
  if (has_barrier()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        23, this->barrier(), target);
  }

  // required uint32 lastcreateadts = 24;
  if (has_lastcreateadts()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(24, this->lastcreateadts(), target);
  }

  // required uint32 allianAllowTs = 25;
  if (has_allianallowts()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(25, this->allianallowts(), target);
  }

  // required uint32 nextDonationTs = 26;
  if (has_nextdonationts()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(26, this->nextdonationts(), target);
  }

  // required uint32 helptimes = 27;
  if (has_helptimes()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(27, this->helptimes(), target);
  }

  // required uint32 viprewarddailygiftts = 28;
  if (has_viprewarddailygiftts()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(28, this->viprewarddailygiftts(), target);
  }

  // required uint32 vipdailyspeedproductcnt = 29;
  if (has_vipdailyspeedproductcnt()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(29, this->vipdailyspeedproductcnt(), target);
  }

  // required uint32 vipdailyremoveordercdcnt = 30;
  if (has_vipdailyremoveordercdcnt()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(30, this->vipdailyremoveordercdcnt(), target);
  }

  // required uint32 switchStatus = 31;
  if (has_switchstatus()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(31, this->switchstatus(), target);
  }

  // required uint32 sharerewarddailygiftts = 32;
  if (has_sharerewarddailygiftts()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(32, this->sharerewarddailygiftts(), target);
  }

  // required uint32 AssistStartTs = 33;
  if (has_assiststartts()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(33, this->assiststartts(), target);
  }

  // required uint32 AssistEndTs = 34;
  if (has_assistendts()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(34, this->assistendts(), target);
  }

  // required bytes expandmap1 = 35;
  if (has_expandmap1()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        35, this->expandmap1(), target);
  }

  // required bytes expandmap2 = 36;
  if (has_expandmap2()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        36, this->expandmap2(), target);
  }

  // required bytes expandmap3 = 37;
  if (has_expandmap3()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        37, this->expandmap3(), target);
  }

  // required uint32 nextrandomboxrefreshts = 38;
  if (has_nextrandomboxrefreshts()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(38, this->nextrandomboxrefreshts(), target);
  }

  // required uint32 flag = 39;
  if (has_flag()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(39, this->flag(), target);
  }

  // required uint32 friendlyvalue = 40;
  if (has_friendlyvalue()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(40, this->friendlyvalue(), target);
  }

  // optional uint32 version = 41;
  if (has_version()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(41, this->version(), target);
  }

  // optional uint32 accthumbsup = 42;
  if (has_accthumbsup()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(42, this->accthumbsup(), target);
  }

  // optional uint32 isUnlockPetResidence = 43;
  if (has_isunlockpetresidence()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(43, this->isunlockpetresidence(), target);
  }

  // optional bytes wxChannel = 44;
  if (has_wxchannel()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        44, this->wxchannel(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:User.Base)
  return target;
}

int Base::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 uid = 1;
    if (has_uid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->uid());
    }

    // required uint32 registerPlatform = 2;
    if (has_registerplatform()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->registerplatform());
    }

    // required uint32 registerTime = 3;
    if (has_registertime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->registertime());
    }

    // required uint32 lastLoginPlatform = 4;
    if (has_lastloginplatform()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->lastloginplatform());
    }

    // required uint32 lastLoginTime = 5;
    if (has_lastlogintime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->lastlogintime());
    }

    // required uint32 loginTimes = 6;
    if (has_logintimes()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->logintimes());
    }

    // required uint32 loginDays = 7;
    if (has_logindays()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->logindays());
    }

    // required uint32 lastActiveTime = 8;
    if (has_lastactivetime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->lastactivetime());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // required uint32 lastOffTime = 9;
    if (has_lastofftime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->lastofftime());
    }

    // required uint32 forbidTs = 10;
    if (has_forbidts()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->forbidts());
    }

    // required bytes forbidReason = 11;
    if (has_forbidreason()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->forbidreason());
    }

    // required uint32 tutorialStage = 12;
    if (has_tutorialstage()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->tutorialstage());
    }

    // required bytes name = 13;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->name());
    }

    // required bytes fig = 14;
    if (has_fig()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->fig());
    }

    // required uint64 exp = 15;
    if (has_exp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->exp());
    }

    // required uint32 level = 16;
    if (has_level()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->level());
    }

  }
  if (_has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    // required uint32 acccharge = 17;
    if (has_acccharge()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->acccharge());
    }

    // required uint32 viplevel = 18;
    if (has_viplevel()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->viplevel());
    }

    // required uint32 cash = 19;
    if (has_cash()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->cash());
    }

    // required uint32 coin = 20;
    if (has_coin()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->coin());
    }

    // required uint32 firstRecharge = 21;
    if (has_firstrecharge()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->firstrecharge());
    }

    // required uint32 allianceId = 22;
    if (has_allianceid()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->allianceid());
    }

    // required bytes barrier = 23;
    if (has_barrier()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->barrier());
    }

    // required uint32 lastcreateadts = 24;
    if (has_lastcreateadts()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->lastcreateadts());
    }

  }
  if (_has_bits_[24 / 32] & (0xffu << (24 % 32))) {
    // required uint32 allianAllowTs = 25;
    if (has_allianallowts()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->allianallowts());
    }

    // required uint32 nextDonationTs = 26;
    if (has_nextdonationts()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->nextdonationts());
    }

    // required uint32 helptimes = 27;
    if (has_helptimes()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->helptimes());
    }

    // required uint32 viprewarddailygiftts = 28;
    if (has_viprewarddailygiftts()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->viprewarddailygiftts());
    }

    // required uint32 vipdailyspeedproductcnt = 29;
    if (has_vipdailyspeedproductcnt()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->vipdailyspeedproductcnt());
    }

    // required uint32 vipdailyremoveordercdcnt = 30;
    if (has_vipdailyremoveordercdcnt()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->vipdailyremoveordercdcnt());
    }

    // required uint32 switchStatus = 31;
    if (has_switchstatus()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->switchstatus());
    }

    // required uint32 sharerewarddailygiftts = 32;
    if (has_sharerewarddailygiftts()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->sharerewarddailygiftts());
    }

  }
  if (_has_bits_[32 / 32] & (0xffu << (32 % 32))) {
    // required uint32 AssistStartTs = 33;
    if (has_assiststartts()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->assiststartts());
    }

    // required uint32 AssistEndTs = 34;
    if (has_assistendts()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->assistendts());
    }

    // required bytes expandmap1 = 35;
    if (has_expandmap1()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->expandmap1());
    }

    // required bytes expandmap2 = 36;
    if (has_expandmap2()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->expandmap2());
    }

    // required bytes expandmap3 = 37;
    if (has_expandmap3()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->expandmap3());
    }

    // required uint32 nextrandomboxrefreshts = 38;
    if (has_nextrandomboxrefreshts()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->nextrandomboxrefreshts());
    }

    // required uint32 flag = 39;
    if (has_flag()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->flag());
    }

    // required uint32 friendlyvalue = 40;
    if (has_friendlyvalue()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->friendlyvalue());
    }

  }
  if (_has_bits_[40 / 32] & (0xffu << (40 % 32))) {
    // optional uint32 version = 41;
    if (has_version()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->version());
    }

    // optional uint32 accthumbsup = 42;
    if (has_accthumbsup()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->accthumbsup());
    }

    // optional uint32 isUnlockPetResidence = 43;
    if (has_isunlockpetresidence()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->isunlockpetresidence());
    }

    // optional bytes wxChannel = 44;
    if (has_wxchannel()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->wxchannel());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Base::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Base* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Base*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Base::MergeFrom(const Base& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_uid()) {
      set_uid(from.uid());
    }
    if (from.has_registerplatform()) {
      set_registerplatform(from.registerplatform());
    }
    if (from.has_registertime()) {
      set_registertime(from.registertime());
    }
    if (from.has_lastloginplatform()) {
      set_lastloginplatform(from.lastloginplatform());
    }
    if (from.has_lastlogintime()) {
      set_lastlogintime(from.lastlogintime());
    }
    if (from.has_logintimes()) {
      set_logintimes(from.logintimes());
    }
    if (from.has_logindays()) {
      set_logindays(from.logindays());
    }
    if (from.has_lastactivetime()) {
      set_lastactivetime(from.lastactivetime());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_lastofftime()) {
      set_lastofftime(from.lastofftime());
    }
    if (from.has_forbidts()) {
      set_forbidts(from.forbidts());
    }
    if (from.has_forbidreason()) {
      set_forbidreason(from.forbidreason());
    }
    if (from.has_tutorialstage()) {
      set_tutorialstage(from.tutorialstage());
    }
    if (from.has_name()) {
      set_name(from.name());
    }
    if (from.has_fig()) {
      set_fig(from.fig());
    }
    if (from.has_exp()) {
      set_exp(from.exp());
    }
    if (from.has_level()) {
      set_level(from.level());
    }
  }
  if (from._has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    if (from.has_acccharge()) {
      set_acccharge(from.acccharge());
    }
    if (from.has_viplevel()) {
      set_viplevel(from.viplevel());
    }
    if (from.has_cash()) {
      set_cash(from.cash());
    }
    if (from.has_coin()) {
      set_coin(from.coin());
    }
    if (from.has_firstrecharge()) {
      set_firstrecharge(from.firstrecharge());
    }
    if (from.has_allianceid()) {
      set_allianceid(from.allianceid());
    }
    if (from.has_barrier()) {
      set_barrier(from.barrier());
    }
    if (from.has_lastcreateadts()) {
      set_lastcreateadts(from.lastcreateadts());
    }
  }
  if (from._has_bits_[24 / 32] & (0xffu << (24 % 32))) {
    if (from.has_allianallowts()) {
      set_allianallowts(from.allianallowts());
    }
    if (from.has_nextdonationts()) {
      set_nextdonationts(from.nextdonationts());
    }
    if (from.has_helptimes()) {
      set_helptimes(from.helptimes());
    }
    if (from.has_viprewarddailygiftts()) {
      set_viprewarddailygiftts(from.viprewarddailygiftts());
    }
    if (from.has_vipdailyspeedproductcnt()) {
      set_vipdailyspeedproductcnt(from.vipdailyspeedproductcnt());
    }
    if (from.has_vipdailyremoveordercdcnt()) {
      set_vipdailyremoveordercdcnt(from.vipdailyremoveordercdcnt());
    }
    if (from.has_switchstatus()) {
      set_switchstatus(from.switchstatus());
    }
    if (from.has_sharerewarddailygiftts()) {
      set_sharerewarddailygiftts(from.sharerewarddailygiftts());
    }
  }
  if (from._has_bits_[32 / 32] & (0xffu << (32 % 32))) {
    if (from.has_assiststartts()) {
      set_assiststartts(from.assiststartts());
    }
    if (from.has_assistendts()) {
      set_assistendts(from.assistendts());
    }
    if (from.has_expandmap1()) {
      set_expandmap1(from.expandmap1());
    }
    if (from.has_expandmap2()) {
      set_expandmap2(from.expandmap2());
    }
    if (from.has_expandmap3()) {
      set_expandmap3(from.expandmap3());
    }
    if (from.has_nextrandomboxrefreshts()) {
      set_nextrandomboxrefreshts(from.nextrandomboxrefreshts());
    }
    if (from.has_flag()) {
      set_flag(from.flag());
    }
    if (from.has_friendlyvalue()) {
      set_friendlyvalue(from.friendlyvalue());
    }
  }
  if (from._has_bits_[40 / 32] & (0xffu << (40 % 32))) {
    if (from.has_version()) {
      set_version(from.version());
    }
    if (from.has_accthumbsup()) {
      set_accthumbsup(from.accthumbsup());
    }
    if (from.has_isunlockpetresidence()) {
      set_isunlockpetresidence(from.isunlockpetresidence());
    }
    if (from.has_wxchannel()) {
      set_wxchannel(from.wxchannel());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Base::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Base::CopyFrom(const Base& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Base::IsInitialized() const {
  if ((_has_bits_[0] & 0xffffffff) != 0xffffffff) return false;
  if ((_has_bits_[1] & 0x000000ff) != 0x000000ff) return false;

  return true;
}

void Base::Swap(Base* other) {
  if (other != this) {
    std::swap(uid_, other->uid_);
    std::swap(registerplatform_, other->registerplatform_);
    std::swap(registertime_, other->registertime_);
    std::swap(lastloginplatform_, other->lastloginplatform_);
    std::swap(lastlogintime_, other->lastlogintime_);
    std::swap(logintimes_, other->logintimes_);
    std::swap(logindays_, other->logindays_);
    std::swap(lastactivetime_, other->lastactivetime_);
    std::swap(lastofftime_, other->lastofftime_);
    std::swap(forbidts_, other->forbidts_);
    std::swap(forbidreason_, other->forbidreason_);
    std::swap(tutorialstage_, other->tutorialstage_);
    std::swap(name_, other->name_);
    std::swap(fig_, other->fig_);
    std::swap(exp_, other->exp_);
    std::swap(level_, other->level_);
    std::swap(acccharge_, other->acccharge_);
    std::swap(viplevel_, other->viplevel_);
    std::swap(cash_, other->cash_);
    std::swap(coin_, other->coin_);
    std::swap(firstrecharge_, other->firstrecharge_);
    std::swap(allianceid_, other->allianceid_);
    std::swap(barrier_, other->barrier_);
    std::swap(lastcreateadts_, other->lastcreateadts_);
    std::swap(allianallowts_, other->allianallowts_);
    std::swap(nextdonationts_, other->nextdonationts_);
    std::swap(helptimes_, other->helptimes_);
    std::swap(viprewarddailygiftts_, other->viprewarddailygiftts_);
    std::swap(vipdailyspeedproductcnt_, other->vipdailyspeedproductcnt_);
    std::swap(vipdailyremoveordercdcnt_, other->vipdailyremoveordercdcnt_);
    std::swap(switchstatus_, other->switchstatus_);
    std::swap(sharerewarddailygiftts_, other->sharerewarddailygiftts_);
    std::swap(assiststartts_, other->assiststartts_);
    std::swap(assistendts_, other->assistendts_);
    std::swap(expandmap1_, other->expandmap1_);
    std::swap(expandmap2_, other->expandmap2_);
    std::swap(expandmap3_, other->expandmap3_);
    std::swap(nextrandomboxrefreshts_, other->nextrandomboxrefreshts_);
    std::swap(flag_, other->flag_);
    std::swap(friendlyvalue_, other->friendlyvalue_);
    std::swap(version_, other->version_);
    std::swap(accthumbsup_, other->accthumbsup_);
    std::swap(isunlockpetresidence_, other->isunlockpetresidence_);
    std::swap(wxchannel_, other->wxchannel_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    std::swap(_has_bits_[1], other->_has_bits_[1]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Base::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Base_descriptor_;
  metadata.reflection = Base_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ActivityItem::kIdFieldNumber;
const int ActivityItem::kBtsFieldNumber;
const int ActivityItem::kEtsFieldNumber;
const int ActivityItem::kVerFieldNumber;
#endif  // !_MSC_VER

ActivityItem::ActivityItem()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:User.ActivityItem)
}

void ActivityItem::InitAsDefaultInstance() {
}

ActivityItem::ActivityItem(const ActivityItem& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:User.ActivityItem)
}

void ActivityItem::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0u;
  bts_ = 0u;
  ets_ = 0u;
  ver_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ActivityItem::~ActivityItem() {
  // @@protoc_insertion_point(destructor:User.ActivityItem)
  SharedDtor();
}

void ActivityItem::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ActivityItem::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ActivityItem::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ActivityItem_descriptor_;
}

const ActivityItem& ActivityItem::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_User_2eproto();
  return *default_instance_;
}

ActivityItem* ActivityItem::default_instance_ = NULL;

ActivityItem* ActivityItem::New() const {
  return new ActivityItem;
}

void ActivityItem::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<ActivityItem*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(id_, ver_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ActivityItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:User.ActivityItem)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_bts;
        break;
      }

      // required uint32 bts = 2;
      case 2: {
        if (tag == 16) {
         parse_bts:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &bts_)));
          set_has_bts();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_ets;
        break;
      }

      // required uint32 ets = 3;
      case 3: {
        if (tag == 24) {
         parse_ets:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ets_)));
          set_has_ets();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_ver;
        break;
      }

      // required uint32 ver = 4;
      case 4: {
        if (tag == 32) {
         parse_ver:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ver_)));
          set_has_ver();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:User.ActivityItem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:User.ActivityItem)
  return false;
#undef DO_
}

void ActivityItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:User.ActivityItem)
  // required uint32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  // required uint32 bts = 2;
  if (has_bts()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->bts(), output);
  }

  // required uint32 ets = 3;
  if (has_ets()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->ets(), output);
  }

  // required uint32 ver = 4;
  if (has_ver()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->ver(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:User.ActivityItem)
}

::google::protobuf::uint8* ActivityItem::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:User.ActivityItem)
  // required uint32 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  // required uint32 bts = 2;
  if (has_bts()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->bts(), target);
  }

  // required uint32 ets = 3;
  if (has_ets()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->ets(), target);
  }

  // required uint32 ver = 4;
  if (has_ver()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->ver(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:User.ActivityItem)
  return target;
}

int ActivityItem::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->id());
    }

    // required uint32 bts = 2;
    if (has_bts()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->bts());
    }

    // required uint32 ets = 3;
    if (has_ets()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->ets());
    }

    // required uint32 ver = 4;
    if (has_ver()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->ver());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ActivityItem::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ActivityItem* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ActivityItem*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ActivityItem::MergeFrom(const ActivityItem& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_bts()) {
      set_bts(from.bts());
    }
    if (from.has_ets()) {
      set_ets(from.ets());
    }
    if (from.has_ver()) {
      set_ver(from.ver());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ActivityItem::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ActivityItem::CopyFrom(const ActivityItem& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ActivityItem::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;

  return true;
}

void ActivityItem::Swap(ActivityItem* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(bts_, other->bts_);
    std::swap(ets_, other->ets_);
    std::swap(ver_, other->ver_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ActivityItem::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ActivityItem_descriptor_;
  metadata.reflection = ActivityItem_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Activity::kActFieldNumber;
#endif  // !_MSC_VER

Activity::Activity()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:User.Activity)
}

void Activity::InitAsDefaultInstance() {
}

Activity::Activity(const Activity& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:User.Activity)
}

void Activity::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Activity::~Activity() {
  // @@protoc_insertion_point(destructor:User.Activity)
  SharedDtor();
}

void Activity::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Activity::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Activity::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Activity_descriptor_;
}

const Activity& Activity::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_User_2eproto();
  return *default_instance_;
}

Activity* Activity::default_instance_ = NULL;

Activity* Activity::New() const {
  return new Activity;
}

void Activity::Clear() {
  act_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Activity::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:User.Activity)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .User.ActivityItem act = 1;
      case 1: {
        if (tag == 10) {
         parse_act:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_act()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_act;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:User.Activity)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:User.Activity)
  return false;
#undef DO_
}

void Activity::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:User.Activity)
  // repeated .User.ActivityItem act = 1;
  for (int i = 0; i < this->act_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->act(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:User.Activity)
}

::google::protobuf::uint8* Activity::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:User.Activity)
  // repeated .User.ActivityItem act = 1;
  for (int i = 0; i < this->act_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->act(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:User.Activity)
  return target;
}

int Activity::ByteSize() const {
  int total_size = 0;

  // repeated .User.ActivityItem act = 1;
  total_size += 1 * this->act_size();
  for (int i = 0; i < this->act_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->act(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Activity::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Activity* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Activity*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Activity::MergeFrom(const Activity& from) {
  GOOGLE_CHECK_NE(&from, this);
  act_.MergeFrom(from.act_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Activity::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Activity::CopyFrom(const Activity& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Activity::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->act())) return false;
  return true;
}

void Activity::Swap(Activity* other) {
  if (other != this) {
    act_.Swap(&other->act_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Activity::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Activity_descriptor_;
  metadata.reflection = Activity_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int User::kBaseFieldNumber;
const int User::kTsFieldNumber;
const int User::kActivityFieldNumber;
const int User::kNotifiesFieldNumber;
const int User::kChargesFieldNumber;
const int User::kGameactivityFieldNumber;
const int User::kItemFieldNumber;
const int User::kBuildsFieldNumber;
const int User::kCroplandFieldNumber;
const int User::kEquipmentsFieldNumber;
const int User::kAnimalsFieldNumber;
const int User::kEquipmentstarsFieldNumber;
const int User::kFruitsFieldNumber;
const int User::kOrdersFieldNumber;
const int User::kTruckFieldNumber;
const int User::kShippingFieldNumber;
const int User::kShipboxesFieldNumber;
const int User::kNpcsellerFieldNumber;
const int User::kOpentsFieldNumber;
const int User::kHasNewDyInfoFieldNumber;
const int User::kThemeFieldNumber;
const int User::kHasNewMsgInfoFieldNumber;
const int User::kPetFieldNumber;
#endif  // !_MSC_VER

User::User()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:User.User)
}

void User::InitAsDefaultInstance() {
  base_ = const_cast< ::User::Base*>(&::User::Base::default_instance());
  activity_ = const_cast< ::User::Activity*>(&::User::Activity::default_instance());
  notifies_ = const_cast< ::ProtoNotify::NotifyItemCPPAll*>(&::ProtoNotify::NotifyItemCPPAll::default_instance());
  charges_ = const_cast< ::User::AccumulateCharge*>(&::User::AccumulateCharge::default_instance());
  gameactivity_ = const_cast< ::ProtoActivity::GameAcitivityAllCPP*>(&::ProtoActivity::GameAcitivityAllCPP::default_instance());
  truck_ = const_cast< ::ProtoOrder::TruckCPP*>(&::ProtoOrder::TruckCPP::default_instance());
  shipping_ = const_cast< ::ProtoShipping::ShippingCPP*>(&::ProtoShipping::ShippingCPP::default_instance());
  npcseller_ = const_cast< ::ProtoNPCSeller::NPCSellerCPP*>(&::ProtoNPCSeller::NPCSellerCPP::default_instance());
  theme_ = const_cast< ::ProtoTheme::ThemeInfoResp*>(&::ProtoTheme::ThemeInfoResp::default_instance());
}

User::User(const User& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:User.User)
}

void User::SharedCtor() {
  _cached_size_ = 0;
  base_ = NULL;
  ts_ = 0u;
  activity_ = NULL;
  notifies_ = NULL;
  charges_ = NULL;
  gameactivity_ = NULL;
  truck_ = NULL;
  shipping_ = NULL;
  npcseller_ = NULL;
  opents_ = 0u;
  hasnewdyinfo_ = false;
  theme_ = NULL;
  hasnewmsginfo_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

User::~User() {
  // @@protoc_insertion_point(destructor:User.User)
  SharedDtor();
}

void User::SharedDtor() {
  if (this != default_instance_) {
    delete base_;
    delete activity_;
    delete notifies_;
    delete charges_;
    delete gameactivity_;
    delete truck_;
    delete shipping_;
    delete npcseller_;
    delete theme_;
  }
}

void User::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* User::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return User_descriptor_;
}

const User& User::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_User_2eproto();
  return *default_instance_;
}

User* User::default_instance_ = NULL;

User* User::New() const {
  return new User;
}

void User::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<User*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 63) {
    if (has_base()) {
      if (base_ != NULL) base_->::User::Base::Clear();
    }
    ts_ = 0u;
    if (has_activity()) {
      if (activity_ != NULL) activity_->::User::Activity::Clear();
    }
    if (has_notifies()) {
      if (notifies_ != NULL) notifies_->::ProtoNotify::NotifyItemCPPAll::Clear();
    }
    if (has_charges()) {
      if (charges_ != NULL) charges_->::User::AccumulateCharge::Clear();
    }
    if (has_gameactivity()) {
      if (gameactivity_ != NULL) gameactivity_->::ProtoActivity::GameAcitivityAllCPP::Clear();
    }
  }
  if (_has_bits_[8 / 32] & 49152) {
    if (has_truck()) {
      if (truck_ != NULL) truck_->::ProtoOrder::TruckCPP::Clear();
    }
    if (has_shipping()) {
      if (shipping_ != NULL) shipping_->::ProtoShipping::ShippingCPP::Clear();
    }
  }
  if (_has_bits_[16 / 32] & 4063232) {
    ZR_(hasnewdyinfo_, hasnewmsginfo_);
    if (has_npcseller()) {
      if (npcseller_ != NULL) npcseller_->::ProtoNPCSeller::NPCSellerCPP::Clear();
    }
    opents_ = 0u;
    if (has_theme()) {
      if (theme_ != NULL) theme_->::ProtoTheme::ThemeInfoResp::Clear();
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  item_.Clear();
  builds_.Clear();
  cropland_.Clear();
  equipments_.Clear();
  animals_.Clear();
  equipmentstars_.Clear();
  fruits_.Clear();
  orders_.Clear();
  shipboxes_.Clear();
  pet_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool User::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:User.User)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .User.Base base = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_base()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_ts;
        break;
      }

      // required uint32 ts = 2;
      case 2: {
        if (tag == 16) {
         parse_ts:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ts_)));
          set_has_ts();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_activity;
        break;
      }

      // required .User.Activity activity = 3;
      case 3: {
        if (tag == 26) {
         parse_activity:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_activity()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_notifies;
        break;
      }

      // optional .ProtoNotify.NotifyItemCPPAll notifies = 4;
      case 4: {
        if (tag == 34) {
         parse_notifies:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_notifies()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_charges;
        break;
      }

      // required .User.AccumulateCharge charges = 5;
      case 5: {
        if (tag == 42) {
         parse_charges:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_charges()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_gameactivity;
        break;
      }

      // required .ProtoActivity.GameAcitivityAllCPP gameactivity = 6;
      case 6: {
        if (tag == 50) {
         parse_gameactivity:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_gameactivity()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_item;
        break;
      }

      // repeated .DataCommon.PropsItemCPP item = 7;
      case 7: {
        if (tag == 58) {
         parse_item:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_item()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_item;
        if (input->ExpectTag(66)) goto parse_builds;
        break;
      }

      // repeated .ProtoBuilding.BuildingCPP builds = 8;
      case 8: {
        if (tag == 66) {
         parse_builds:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_builds()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_builds;
        if (input->ExpectTag(74)) goto parse_cropland;
        break;
      }

      // repeated .ProtoProduce.CropLandCPP cropland = 9;
      case 9: {
        if (tag == 74) {
         parse_cropland:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_cropland()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_cropland;
        if (input->ExpectTag(82)) goto parse_equipments;
        break;
      }

      // repeated .ProtoProduce.ProduceEquipCPP equipments = 10;
      case 10: {
        if (tag == 82) {
         parse_equipments:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_equipments()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_equipments;
        if (input->ExpectTag(90)) goto parse_animals;
        break;
      }

      // repeated .ProtoProduce.AnimalCPP animals = 11;
      case 11: {
        if (tag == 90) {
         parse_animals:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_animals()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(90)) goto parse_animals;
        if (input->ExpectTag(98)) goto parse_equipmentstars;
        break;
      }

      // repeated .ProtoBuilding.EquipmentStarCPP equipmentstars = 12;
      case 12: {
        if (tag == 98) {
         parse_equipmentstars:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_equipmentstars()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(98)) goto parse_equipmentstars;
        if (input->ExpectTag(106)) goto parse_fruits;
        break;
      }

      // repeated .ProtoProduce.FruitCPP fruits = 13;
      case 13: {
        if (tag == 106) {
         parse_fruits:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_fruits()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(106)) goto parse_fruits;
        if (input->ExpectTag(114)) goto parse_orders;
        break;
      }

      // repeated .ProtoOrder.OrderCPP orders = 14;
      case 14: {
        if (tag == 114) {
         parse_orders:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_orders()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(114)) goto parse_orders;
        if (input->ExpectTag(122)) goto parse_truck;
        break;
      }

      // optional .ProtoOrder.TruckCPP truck = 15;
      case 15: {
        if (tag == 122) {
         parse_truck:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_truck()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(130)) goto parse_shipping;
        break;
      }

      // optional .ProtoShipping.ShippingCPP shipping = 16;
      case 16: {
        if (tag == 130) {
         parse_shipping:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_shipping()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(138)) goto parse_shipboxes;
        break;
      }

      // repeated .ProtoShipping.ShippingBoxCPP shipboxes = 17;
      case 17: {
        if (tag == 138) {
         parse_shipboxes:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_shipboxes()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(138)) goto parse_shipboxes;
        if (input->ExpectTag(146)) goto parse_npcseller;
        break;
      }

      // required .ProtoNPCSeller.NPCSellerCPP npcseller = 18;
      case 18: {
        if (tag == 146) {
         parse_npcseller:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_npcseller()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(152)) goto parse_opents;
        break;
      }

      // required uint32 opents = 19;
      case 19: {
        if (tag == 152) {
         parse_opents:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &opents_)));
          set_has_opents();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(160)) goto parse_hasNewDyInfo;
        break;
      }

      // optional bool hasNewDyInfo = 20;
      case 20: {
        if (tag == 160) {
         parse_hasNewDyInfo:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &hasnewdyinfo_)));
          set_has_hasnewdyinfo();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(170)) goto parse_theme;
        break;
      }

      // optional .ProtoTheme.ThemeInfoResp theme = 21;
      case 21: {
        if (tag == 170) {
         parse_theme:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_theme()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(176)) goto parse_hasNewMsgInfo;
        break;
      }

      // optional bool hasNewMsgInfo = 22;
      case 22: {
        if (tag == 176) {
         parse_hasNewMsgInfo:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &hasnewmsginfo_)));
          set_has_hasnewmsginfo();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(186)) goto parse_pet;
        break;
      }

      // repeated .ProtoPet.UnlockPetCPP pet = 23;
      case 23: {
        if (tag == 186) {
         parse_pet:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_pet()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(186)) goto parse_pet;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:User.User)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:User.User)
  return false;
#undef DO_
}

void User::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:User.User)
  // required .User.Base base = 1;
  if (has_base()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->base(), output);
  }

  // required uint32 ts = 2;
  if (has_ts()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->ts(), output);
  }

  // required .User.Activity activity = 3;
  if (has_activity()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->activity(), output);
  }

  // optional .ProtoNotify.NotifyItemCPPAll notifies = 4;
  if (has_notifies()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->notifies(), output);
  }

  // required .User.AccumulateCharge charges = 5;
  if (has_charges()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->charges(), output);
  }

  // required .ProtoActivity.GameAcitivityAllCPP gameactivity = 6;
  if (has_gameactivity()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->gameactivity(), output);
  }

  // repeated .DataCommon.PropsItemCPP item = 7;
  for (int i = 0; i < this->item_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->item(i), output);
  }

  // repeated .ProtoBuilding.BuildingCPP builds = 8;
  for (int i = 0; i < this->builds_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->builds(i), output);
  }

  // repeated .ProtoProduce.CropLandCPP cropland = 9;
  for (int i = 0; i < this->cropland_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->cropland(i), output);
  }

  // repeated .ProtoProduce.ProduceEquipCPP equipments = 10;
  for (int i = 0; i < this->equipments_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->equipments(i), output);
  }

  // repeated .ProtoProduce.AnimalCPP animals = 11;
  for (int i = 0; i < this->animals_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, this->animals(i), output);
  }

  // repeated .ProtoBuilding.EquipmentStarCPP equipmentstars = 12;
  for (int i = 0; i < this->equipmentstars_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, this->equipmentstars(i), output);
  }

  // repeated .ProtoProduce.FruitCPP fruits = 13;
  for (int i = 0; i < this->fruits_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      13, this->fruits(i), output);
  }

  // repeated .ProtoOrder.OrderCPP orders = 14;
  for (int i = 0; i < this->orders_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      14, this->orders(i), output);
  }

  // optional .ProtoOrder.TruckCPP truck = 15;
  if (has_truck()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      15, this->truck(), output);
  }

  // optional .ProtoShipping.ShippingCPP shipping = 16;
  if (has_shipping()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      16, this->shipping(), output);
  }

  // repeated .ProtoShipping.ShippingBoxCPP shipboxes = 17;
  for (int i = 0; i < this->shipboxes_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      17, this->shipboxes(i), output);
  }

  // required .ProtoNPCSeller.NPCSellerCPP npcseller = 18;
  if (has_npcseller()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      18, this->npcseller(), output);
  }

  // required uint32 opents = 19;
  if (has_opents()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(19, this->opents(), output);
  }

  // optional bool hasNewDyInfo = 20;
  if (has_hasnewdyinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(20, this->hasnewdyinfo(), output);
  }

  // optional .ProtoTheme.ThemeInfoResp theme = 21;
  if (has_theme()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      21, this->theme(), output);
  }

  // optional bool hasNewMsgInfo = 22;
  if (has_hasnewmsginfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(22, this->hasnewmsginfo(), output);
  }

  // repeated .ProtoPet.UnlockPetCPP pet = 23;
  for (int i = 0; i < this->pet_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      23, this->pet(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:User.User)
}

::google::protobuf::uint8* User::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:User.User)
  // required .User.Base base = 1;
  if (has_base()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->base(), target);
  }

  // required uint32 ts = 2;
  if (has_ts()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->ts(), target);
  }

  // required .User.Activity activity = 3;
  if (has_activity()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->activity(), target);
  }

  // optional .ProtoNotify.NotifyItemCPPAll notifies = 4;
  if (has_notifies()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->notifies(), target);
  }

  // required .User.AccumulateCharge charges = 5;
  if (has_charges()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->charges(), target);
  }

  // required .ProtoActivity.GameAcitivityAllCPP gameactivity = 6;
  if (has_gameactivity()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        6, this->gameactivity(), target);
  }

  // repeated .DataCommon.PropsItemCPP item = 7;
  for (int i = 0; i < this->item_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        7, this->item(i), target);
  }

  // repeated .ProtoBuilding.BuildingCPP builds = 8;
  for (int i = 0; i < this->builds_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        8, this->builds(i), target);
  }

  // repeated .ProtoProduce.CropLandCPP cropland = 9;
  for (int i = 0; i < this->cropland_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        9, this->cropland(i), target);
  }

  // repeated .ProtoProduce.ProduceEquipCPP equipments = 10;
  for (int i = 0; i < this->equipments_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        10, this->equipments(i), target);
  }

  // repeated .ProtoProduce.AnimalCPP animals = 11;
  for (int i = 0; i < this->animals_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        11, this->animals(i), target);
  }

  // repeated .ProtoBuilding.EquipmentStarCPP equipmentstars = 12;
  for (int i = 0; i < this->equipmentstars_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        12, this->equipmentstars(i), target);
  }

  // repeated .ProtoProduce.FruitCPP fruits = 13;
  for (int i = 0; i < this->fruits_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        13, this->fruits(i), target);
  }

  // repeated .ProtoOrder.OrderCPP orders = 14;
  for (int i = 0; i < this->orders_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        14, this->orders(i), target);
  }

  // optional .ProtoOrder.TruckCPP truck = 15;
  if (has_truck()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        15, this->truck(), target);
  }

  // optional .ProtoShipping.ShippingCPP shipping = 16;
  if (has_shipping()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        16, this->shipping(), target);
  }

  // repeated .ProtoShipping.ShippingBoxCPP shipboxes = 17;
  for (int i = 0; i < this->shipboxes_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        17, this->shipboxes(i), target);
  }

  // required .ProtoNPCSeller.NPCSellerCPP npcseller = 18;
  if (has_npcseller()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        18, this->npcseller(), target);
  }

  // required uint32 opents = 19;
  if (has_opents()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(19, this->opents(), target);
  }

  // optional bool hasNewDyInfo = 20;
  if (has_hasnewdyinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(20, this->hasnewdyinfo(), target);
  }

  // optional .ProtoTheme.ThemeInfoResp theme = 21;
  if (has_theme()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        21, this->theme(), target);
  }

  // optional bool hasNewMsgInfo = 22;
  if (has_hasnewmsginfo()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(22, this->hasnewmsginfo(), target);
  }

  // repeated .ProtoPet.UnlockPetCPP pet = 23;
  for (int i = 0; i < this->pet_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        23, this->pet(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:User.User)
  return target;
}

int User::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .User.Base base = 1;
    if (has_base()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->base());
    }

    // required uint32 ts = 2;
    if (has_ts()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->ts());
    }

    // required .User.Activity activity = 3;
    if (has_activity()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->activity());
    }

    // optional .ProtoNotify.NotifyItemCPPAll notifies = 4;
    if (has_notifies()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->notifies());
    }

    // required .User.AccumulateCharge charges = 5;
    if (has_charges()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->charges());
    }

    // required .ProtoActivity.GameAcitivityAllCPP gameactivity = 6;
    if (has_gameactivity()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->gameactivity());
    }

  }
  if (_has_bits_[14 / 32] & (0xffu << (14 % 32))) {
    // optional .ProtoOrder.TruckCPP truck = 15;
    if (has_truck()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->truck());
    }

    // optional .ProtoShipping.ShippingCPP shipping = 16;
    if (has_shipping()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->shipping());
    }

  }
  if (_has_bits_[17 / 32] & (0xffu << (17 % 32))) {
    // required .ProtoNPCSeller.NPCSellerCPP npcseller = 18;
    if (has_npcseller()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->npcseller());
    }

    // required uint32 opents = 19;
    if (has_opents()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->opents());
    }

    // optional bool hasNewDyInfo = 20;
    if (has_hasnewdyinfo()) {
      total_size += 2 + 1;
    }

    // optional .ProtoTheme.ThemeInfoResp theme = 21;
    if (has_theme()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->theme());
    }

    // optional bool hasNewMsgInfo = 22;
    if (has_hasnewmsginfo()) {
      total_size += 2 + 1;
    }

  }
  // repeated .DataCommon.PropsItemCPP item = 7;
  total_size += 1 * this->item_size();
  for (int i = 0; i < this->item_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->item(i));
  }

  // repeated .ProtoBuilding.BuildingCPP builds = 8;
  total_size += 1 * this->builds_size();
  for (int i = 0; i < this->builds_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->builds(i));
  }

  // repeated .ProtoProduce.CropLandCPP cropland = 9;
  total_size += 1 * this->cropland_size();
  for (int i = 0; i < this->cropland_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->cropland(i));
  }

  // repeated .ProtoProduce.ProduceEquipCPP equipments = 10;
  total_size += 1 * this->equipments_size();
  for (int i = 0; i < this->equipments_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->equipments(i));
  }

  // repeated .ProtoProduce.AnimalCPP animals = 11;
  total_size += 1 * this->animals_size();
  for (int i = 0; i < this->animals_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->animals(i));
  }

  // repeated .ProtoBuilding.EquipmentStarCPP equipmentstars = 12;
  total_size += 1 * this->equipmentstars_size();
  for (int i = 0; i < this->equipmentstars_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->equipmentstars(i));
  }

  // repeated .ProtoProduce.FruitCPP fruits = 13;
  total_size += 1 * this->fruits_size();
  for (int i = 0; i < this->fruits_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->fruits(i));
  }

  // repeated .ProtoOrder.OrderCPP orders = 14;
  total_size += 1 * this->orders_size();
  for (int i = 0; i < this->orders_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->orders(i));
  }

  // repeated .ProtoShipping.ShippingBoxCPP shipboxes = 17;
  total_size += 2 * this->shipboxes_size();
  for (int i = 0; i < this->shipboxes_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->shipboxes(i));
  }

  // repeated .ProtoPet.UnlockPetCPP pet = 23;
  total_size += 2 * this->pet_size();
  for (int i = 0; i < this->pet_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->pet(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void User::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const User* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const User*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void User::MergeFrom(const User& from) {
  GOOGLE_CHECK_NE(&from, this);
  item_.MergeFrom(from.item_);
  builds_.MergeFrom(from.builds_);
  cropland_.MergeFrom(from.cropland_);
  equipments_.MergeFrom(from.equipments_);
  animals_.MergeFrom(from.animals_);
  equipmentstars_.MergeFrom(from.equipmentstars_);
  fruits_.MergeFrom(from.fruits_);
  orders_.MergeFrom(from.orders_);
  shipboxes_.MergeFrom(from.shipboxes_);
  pet_.MergeFrom(from.pet_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_base()) {
      mutable_base()->::User::Base::MergeFrom(from.base());
    }
    if (from.has_ts()) {
      set_ts(from.ts());
    }
    if (from.has_activity()) {
      mutable_activity()->::User::Activity::MergeFrom(from.activity());
    }
    if (from.has_notifies()) {
      mutable_notifies()->::ProtoNotify::NotifyItemCPPAll::MergeFrom(from.notifies());
    }
    if (from.has_charges()) {
      mutable_charges()->::User::AccumulateCharge::MergeFrom(from.charges());
    }
    if (from.has_gameactivity()) {
      mutable_gameactivity()->::ProtoActivity::GameAcitivityAllCPP::MergeFrom(from.gameactivity());
    }
  }
  if (from._has_bits_[14 / 32] & (0xffu << (14 % 32))) {
    if (from.has_truck()) {
      mutable_truck()->::ProtoOrder::TruckCPP::MergeFrom(from.truck());
    }
    if (from.has_shipping()) {
      mutable_shipping()->::ProtoShipping::ShippingCPP::MergeFrom(from.shipping());
    }
  }
  if (from._has_bits_[17 / 32] & (0xffu << (17 % 32))) {
    if (from.has_npcseller()) {
      mutable_npcseller()->::ProtoNPCSeller::NPCSellerCPP::MergeFrom(from.npcseller());
    }
    if (from.has_opents()) {
      set_opents(from.opents());
    }
    if (from.has_hasnewdyinfo()) {
      set_hasnewdyinfo(from.hasnewdyinfo());
    }
    if (from.has_theme()) {
      mutable_theme()->::ProtoTheme::ThemeInfoResp::MergeFrom(from.theme());
    }
    if (from.has_hasnewmsginfo()) {
      set_hasnewmsginfo(from.hasnewmsginfo());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void User::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void User::CopyFrom(const User& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool User::IsInitialized() const {
  if ((_has_bits_[0] & 0x00060037) != 0x00060037) return false;

  if (has_base()) {
    if (!this->base().IsInitialized()) return false;
  }
  if (has_activity()) {
    if (!this->activity().IsInitialized()) return false;
  }
  if (has_notifies()) {
    if (!this->notifies().IsInitialized()) return false;
  }
  if (has_charges()) {
    if (!this->charges().IsInitialized()) return false;
  }
  if (has_gameactivity()) {
    if (!this->gameactivity().IsInitialized()) return false;
  }
  if (!::google::protobuf::internal::AllAreInitialized(this->item())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->builds())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->cropland())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->equipments())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->animals())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->equipmentstars())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->fruits())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->orders())) return false;
  if (has_truck()) {
    if (!this->truck().IsInitialized()) return false;
  }
  if (has_shipping()) {
    if (!this->shipping().IsInitialized()) return false;
  }
  if (!::google::protobuf::internal::AllAreInitialized(this->shipboxes())) return false;
  if (has_npcseller()) {
    if (!this->npcseller().IsInitialized()) return false;
  }
  if (!::google::protobuf::internal::AllAreInitialized(this->pet())) return false;
  return true;
}

void User::Swap(User* other) {
  if (other != this) {
    std::swap(base_, other->base_);
    std::swap(ts_, other->ts_);
    std::swap(activity_, other->activity_);
    std::swap(notifies_, other->notifies_);
    std::swap(charges_, other->charges_);
    std::swap(gameactivity_, other->gameactivity_);
    item_.Swap(&other->item_);
    builds_.Swap(&other->builds_);
    cropland_.Swap(&other->cropland_);
    equipments_.Swap(&other->equipments_);
    animals_.Swap(&other->animals_);
    equipmentstars_.Swap(&other->equipmentstars_);
    fruits_.Swap(&other->fruits_);
    orders_.Swap(&other->orders_);
    std::swap(truck_, other->truck_);
    std::swap(shipping_, other->shipping_);
    shipboxes_.Swap(&other->shipboxes_);
    std::swap(npcseller_, other->npcseller_);
    std::swap(opents_, other->opents_);
    std::swap(hasnewdyinfo_, other->hasnewdyinfo_);
    std::swap(theme_, other->theme_);
    std::swap(hasnewmsginfo_, other->hasnewmsginfo_);
    pet_.Swap(&other->pet_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata User::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = User_descriptor_;
  metadata.reflection = User_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int OthProduceCPP::kUdFieldNumber;
const int OthProduceCPP::kStatusFieldNumber;
#endif  // !_MSC_VER

OthProduceCPP::OthProduceCPP()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:User.OthProduceCPP)
}

void OthProduceCPP::InitAsDefaultInstance() {
}

OthProduceCPP::OthProduceCPP(const OthProduceCPP& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:User.OthProduceCPP)
}

void OthProduceCPP::SharedCtor() {
  _cached_size_ = 0;
  ud_ = 0u;
  status_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

OthProduceCPP::~OthProduceCPP() {
  // @@protoc_insertion_point(destructor:User.OthProduceCPP)
  SharedDtor();
}

void OthProduceCPP::SharedDtor() {
  if (this != default_instance_) {
  }
}

void OthProduceCPP::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OthProduceCPP::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return OthProduceCPP_descriptor_;
}

const OthProduceCPP& OthProduceCPP::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_User_2eproto();
  return *default_instance_;
}

OthProduceCPP* OthProduceCPP::default_instance_ = NULL;

OthProduceCPP* OthProduceCPP::New() const {
  return new OthProduceCPP;
}

void OthProduceCPP::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<OthProduceCPP*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(ud_, status_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool OthProduceCPP::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:User.OthProduceCPP)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 ud = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ud_)));
          set_has_ud();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_status;
        break;
      }

      // required uint32 status = 2;
      case 2: {
        if (tag == 16) {
         parse_status:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &status_)));
          set_has_status();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:User.OthProduceCPP)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:User.OthProduceCPP)
  return false;
#undef DO_
}

void OthProduceCPP::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:User.OthProduceCPP)
  // required uint32 ud = 1;
  if (has_ud()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->ud(), output);
  }

  // required uint32 status = 2;
  if (has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->status(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:User.OthProduceCPP)
}

::google::protobuf::uint8* OthProduceCPP::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:User.OthProduceCPP)
  // required uint32 ud = 1;
  if (has_ud()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->ud(), target);
  }

  // required uint32 status = 2;
  if (has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->status(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:User.OthProduceCPP)
  return target;
}

int OthProduceCPP::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 ud = 1;
    if (has_ud()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->ud());
    }

    // required uint32 status = 2;
    if (has_status()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->status());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OthProduceCPP::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const OthProduceCPP* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const OthProduceCPP*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void OthProduceCPP::MergeFrom(const OthProduceCPP& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_ud()) {
      set_ud(from.ud());
    }
    if (from.has_status()) {
      set_status(from.status());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void OthProduceCPP::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OthProduceCPP::CopyFrom(const OthProduceCPP& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OthProduceCPP::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void OthProduceCPP::Swap(OthProduceCPP* other) {
  if (other != this) {
    std::swap(ud_, other->ud_);
    std::swap(status_, other->status_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata OthProduceCPP::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = OthProduceCPP_descriptor_;
  metadata.reflection = OthProduceCPP_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int RequestOtherUser::kOthuidFieldNumber;
#endif  // !_MSC_VER

RequestOtherUser::RequestOtherUser()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:User.RequestOtherUser)
}

void RequestOtherUser::InitAsDefaultInstance() {
}

RequestOtherUser::RequestOtherUser(const RequestOtherUser& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:User.RequestOtherUser)
}

void RequestOtherUser::SharedCtor() {
  _cached_size_ = 0;
  othuid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RequestOtherUser::~RequestOtherUser() {
  // @@protoc_insertion_point(destructor:User.RequestOtherUser)
  SharedDtor();
}

void RequestOtherUser::SharedDtor() {
  if (this != default_instance_) {
  }
}

void RequestOtherUser::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RequestOtherUser::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RequestOtherUser_descriptor_;
}

const RequestOtherUser& RequestOtherUser::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_User_2eproto();
  return *default_instance_;
}

RequestOtherUser* RequestOtherUser::default_instance_ = NULL;

RequestOtherUser* RequestOtherUser::New() const {
  return new RequestOtherUser;
}

void RequestOtherUser::Clear() {
  othuid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool RequestOtherUser::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:User.RequestOtherUser)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 othuid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &othuid_)));
          set_has_othuid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:User.RequestOtherUser)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:User.RequestOtherUser)
  return false;
#undef DO_
}

void RequestOtherUser::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:User.RequestOtherUser)
  // required uint32 othuid = 1;
  if (has_othuid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->othuid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:User.RequestOtherUser)
}

::google::protobuf::uint8* RequestOtherUser::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:User.RequestOtherUser)
  // required uint32 othuid = 1;
  if (has_othuid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->othuid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:User.RequestOtherUser)
  return target;
}

int RequestOtherUser::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 othuid = 1;
    if (has_othuid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->othuid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RequestOtherUser::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const RequestOtherUser* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const RequestOtherUser*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void RequestOtherUser::MergeFrom(const RequestOtherUser& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_othuid()) {
      set_othuid(from.othuid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void RequestOtherUser::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RequestOtherUser::CopyFrom(const RequestOtherUser& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RequestOtherUser::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void RequestOtherUser::Swap(RequestOtherUser* other) {
  if (other != this) {
    std::swap(othuid_, other->othuid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata RequestOtherUser::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RequestOtherUser_descriptor_;
  metadata.reflection = RequestOtherUser_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int OtherUser::kBaseFieldNumber;
const int OtherUser::kBuildsFieldNumber;
const int OtherUser::kCroplandFieldNumber;
const int OtherUser::kEquipmentsFieldNumber;
const int OtherUser::kAnimalsFieldNumber;
const int OtherUser::kEquipmentstarsFieldNumber;
const int OtherUser::kFruitsFieldNumber;
const int OtherUser::kShopStatusFieldNumber;
const int OtherUser::kShippingFieldNumber;
const int OtherUser::kShipboxesFieldNumber;
const int OtherUser::kFriendlytreeFieldNumber;
const int OtherUser::kThemeFieldNumber;
const int OtherUser::kArraypetFieldNumber;
#endif  // !_MSC_VER

OtherUser::OtherUser()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:User.OtherUser)
}

void OtherUser::InitAsDefaultInstance() {
  base_ = const_cast< ::User::Base*>(&::User::Base::default_instance());
  shipping_ = const_cast< ::ProtoShipping::ShippingCPP*>(&::ProtoShipping::ShippingCPP::default_instance());
  friendlytree_ = const_cast< ::ProtoFriendlyTree::FriendlyTreeCPP*>(&::ProtoFriendlyTree::FriendlyTreeCPP::default_instance());
  theme_ = const_cast< ::ProtoTheme::ThemeInfoResp*>(&::ProtoTheme::ThemeInfoResp::default_instance());
}

OtherUser::OtherUser(const OtherUser& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:User.OtherUser)
}

void OtherUser::SharedCtor() {
  _cached_size_ = 0;
  base_ = NULL;
  shopstatus_ = 0u;
  shipping_ = NULL;
  friendlytree_ = NULL;
  theme_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

OtherUser::~OtherUser() {
  // @@protoc_insertion_point(destructor:User.OtherUser)
  SharedDtor();
}

void OtherUser::SharedDtor() {
  if (this != default_instance_) {
    delete base_;
    delete shipping_;
    delete friendlytree_;
    delete theme_;
  }
}

void OtherUser::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OtherUser::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return OtherUser_descriptor_;
}

const OtherUser& OtherUser::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_User_2eproto();
  return *default_instance_;
}

OtherUser* OtherUser::default_instance_ = NULL;

OtherUser* OtherUser::New() const {
  return new OtherUser;
}

void OtherUser::Clear() {
  if (_has_bits_[0 / 32] & 129) {
    if (has_base()) {
      if (base_ != NULL) base_->::User::Base::Clear();
    }
    shopstatus_ = 0u;
  }
  if (_has_bits_[8 / 32] & 3328) {
    if (has_shipping()) {
      if (shipping_ != NULL) shipping_->::ProtoShipping::ShippingCPP::Clear();
    }
    if (has_friendlytree()) {
      if (friendlytree_ != NULL) friendlytree_->::ProtoFriendlyTree::FriendlyTreeCPP::Clear();
    }
    if (has_theme()) {
      if (theme_ != NULL) theme_->::ProtoTheme::ThemeInfoResp::Clear();
    }
  }
  builds_.Clear();
  cropland_.Clear();
  equipments_.Clear();
  animals_.Clear();
  equipmentstars_.Clear();
  fruits_.Clear();
  shipboxes_.Clear();
  arraypet_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool OtherUser::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:User.OtherUser)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .User.Base base = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_base()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_builds;
        break;
      }

      // repeated .ProtoBuilding.BuildingCPP builds = 2;
      case 2: {
        if (tag == 18) {
         parse_builds:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_builds()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_builds;
        if (input->ExpectTag(26)) goto parse_cropland;
        break;
      }

      // repeated .ProtoProduce.CropLandCPP cropland = 3;
      case 3: {
        if (tag == 26) {
         parse_cropland:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_cropland()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_cropland;
        if (input->ExpectTag(34)) goto parse_equipments;
        break;
      }

      // repeated .User.OthProduceCPP equipments = 4;
      case 4: {
        if (tag == 34) {
         parse_equipments:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_equipments()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_equipments;
        if (input->ExpectTag(42)) goto parse_animals;
        break;
      }

      // repeated .ProtoProduce.AnimalCPP animals = 5;
      case 5: {
        if (tag == 42) {
         parse_animals:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_animals()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_animals;
        if (input->ExpectTag(50)) goto parse_equipmentstars;
        break;
      }

      // repeated .ProtoBuilding.EquipmentStarCPP equipmentstars = 6;
      case 6: {
        if (tag == 50) {
         parse_equipmentstars:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_equipmentstars()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_equipmentstars;
        if (input->ExpectTag(58)) goto parse_fruits;
        break;
      }

      // repeated .ProtoProduce.FruitCPP fruits = 7;
      case 7: {
        if (tag == 58) {
         parse_fruits:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_fruits()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_fruits;
        if (input->ExpectTag(64)) goto parse_shopStatus;
        break;
      }

      // required uint32 shopStatus = 8;
      case 8: {
        if (tag == 64) {
         parse_shopStatus:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &shopstatus_)));
          set_has_shopstatus();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_shipping;
        break;
      }

      // optional .ProtoShipping.ShippingCPP shipping = 9;
      case 9: {
        if (tag == 74) {
         parse_shipping:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_shipping()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_shipboxes;
        break;
      }

      // repeated .ProtoShipping.ShippingBoxCPP shipboxes = 10;
      case 10: {
        if (tag == 82) {
         parse_shipboxes:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_shipboxes()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_shipboxes;
        if (input->ExpectTag(90)) goto parse_friendlytree;
        break;
      }

      // required .ProtoFriendlyTree.FriendlyTreeCPP friendlytree = 11;
      case 11: {
        if (tag == 90) {
         parse_friendlytree:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_friendlytree()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(98)) goto parse_theme;
        break;
      }

      // optional .ProtoTheme.ThemeInfoResp theme = 12;
      case 12: {
        if (tag == 98) {
         parse_theme:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_theme()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(106)) goto parse_arraypet;
        break;
      }

      // repeated .ProtoPet.UnlockPetCPP arraypet = 13;
      case 13: {
        if (tag == 106) {
         parse_arraypet:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_arraypet()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(106)) goto parse_arraypet;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:User.OtherUser)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:User.OtherUser)
  return false;
#undef DO_
}

void OtherUser::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:User.OtherUser)
  // required .User.Base base = 1;
  if (has_base()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->base(), output);
  }

  // repeated .ProtoBuilding.BuildingCPP builds = 2;
  for (int i = 0; i < this->builds_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->builds(i), output);
  }

  // repeated .ProtoProduce.CropLandCPP cropland = 3;
  for (int i = 0; i < this->cropland_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->cropland(i), output);
  }

  // repeated .User.OthProduceCPP equipments = 4;
  for (int i = 0; i < this->equipments_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->equipments(i), output);
  }

  // repeated .ProtoProduce.AnimalCPP animals = 5;
  for (int i = 0; i < this->animals_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->animals(i), output);
  }

  // repeated .ProtoBuilding.EquipmentStarCPP equipmentstars = 6;
  for (int i = 0; i < this->equipmentstars_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->equipmentstars(i), output);
  }

  // repeated .ProtoProduce.FruitCPP fruits = 7;
  for (int i = 0; i < this->fruits_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->fruits(i), output);
  }

  // required uint32 shopStatus = 8;
  if (has_shopstatus()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->shopstatus(), output);
  }

  // optional .ProtoShipping.ShippingCPP shipping = 9;
  if (has_shipping()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->shipping(), output);
  }

  // repeated .ProtoShipping.ShippingBoxCPP shipboxes = 10;
  for (int i = 0; i < this->shipboxes_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->shipboxes(i), output);
  }

  // required .ProtoFriendlyTree.FriendlyTreeCPP friendlytree = 11;
  if (has_friendlytree()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, this->friendlytree(), output);
  }

  // optional .ProtoTheme.ThemeInfoResp theme = 12;
  if (has_theme()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, this->theme(), output);
  }

  // repeated .ProtoPet.UnlockPetCPP arraypet = 13;
  for (int i = 0; i < this->arraypet_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      13, this->arraypet(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:User.OtherUser)
}

::google::protobuf::uint8* OtherUser::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:User.OtherUser)
  // required .User.Base base = 1;
  if (has_base()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->base(), target);
  }

  // repeated .ProtoBuilding.BuildingCPP builds = 2;
  for (int i = 0; i < this->builds_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->builds(i), target);
  }

  // repeated .ProtoProduce.CropLandCPP cropland = 3;
  for (int i = 0; i < this->cropland_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->cropland(i), target);
  }

  // repeated .User.OthProduceCPP equipments = 4;
  for (int i = 0; i < this->equipments_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->equipments(i), target);
  }

  // repeated .ProtoProduce.AnimalCPP animals = 5;
  for (int i = 0; i < this->animals_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->animals(i), target);
  }

  // repeated .ProtoBuilding.EquipmentStarCPP equipmentstars = 6;
  for (int i = 0; i < this->equipmentstars_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        6, this->equipmentstars(i), target);
  }

  // repeated .ProtoProduce.FruitCPP fruits = 7;
  for (int i = 0; i < this->fruits_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        7, this->fruits(i), target);
  }

  // required uint32 shopStatus = 8;
  if (has_shopstatus()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->shopstatus(), target);
  }

  // optional .ProtoShipping.ShippingCPP shipping = 9;
  if (has_shipping()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        9, this->shipping(), target);
  }

  // repeated .ProtoShipping.ShippingBoxCPP shipboxes = 10;
  for (int i = 0; i < this->shipboxes_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        10, this->shipboxes(i), target);
  }

  // required .ProtoFriendlyTree.FriendlyTreeCPP friendlytree = 11;
  if (has_friendlytree()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        11, this->friendlytree(), target);
  }

  // optional .ProtoTheme.ThemeInfoResp theme = 12;
  if (has_theme()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        12, this->theme(), target);
  }

  // repeated .ProtoPet.UnlockPetCPP arraypet = 13;
  for (int i = 0; i < this->arraypet_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        13, this->arraypet(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:User.OtherUser)
  return target;
}

int OtherUser::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .User.Base base = 1;
    if (has_base()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->base());
    }

    // required uint32 shopStatus = 8;
    if (has_shopstatus()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->shopstatus());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional .ProtoShipping.ShippingCPP shipping = 9;
    if (has_shipping()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->shipping());
    }

    // required .ProtoFriendlyTree.FriendlyTreeCPP friendlytree = 11;
    if (has_friendlytree()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->friendlytree());
    }

    // optional .ProtoTheme.ThemeInfoResp theme = 12;
    if (has_theme()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->theme());
    }

  }
  // repeated .ProtoBuilding.BuildingCPP builds = 2;
  total_size += 1 * this->builds_size();
  for (int i = 0; i < this->builds_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->builds(i));
  }

  // repeated .ProtoProduce.CropLandCPP cropland = 3;
  total_size += 1 * this->cropland_size();
  for (int i = 0; i < this->cropland_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->cropland(i));
  }

  // repeated .User.OthProduceCPP equipments = 4;
  total_size += 1 * this->equipments_size();
  for (int i = 0; i < this->equipments_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->equipments(i));
  }

  // repeated .ProtoProduce.AnimalCPP animals = 5;
  total_size += 1 * this->animals_size();
  for (int i = 0; i < this->animals_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->animals(i));
  }

  // repeated .ProtoBuilding.EquipmentStarCPP equipmentstars = 6;
  total_size += 1 * this->equipmentstars_size();
  for (int i = 0; i < this->equipmentstars_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->equipmentstars(i));
  }

  // repeated .ProtoProduce.FruitCPP fruits = 7;
  total_size += 1 * this->fruits_size();
  for (int i = 0; i < this->fruits_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->fruits(i));
  }

  // repeated .ProtoShipping.ShippingBoxCPP shipboxes = 10;
  total_size += 1 * this->shipboxes_size();
  for (int i = 0; i < this->shipboxes_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->shipboxes(i));
  }

  // repeated .ProtoPet.UnlockPetCPP arraypet = 13;
  total_size += 1 * this->arraypet_size();
  for (int i = 0; i < this->arraypet_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->arraypet(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OtherUser::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const OtherUser* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const OtherUser*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void OtherUser::MergeFrom(const OtherUser& from) {
  GOOGLE_CHECK_NE(&from, this);
  builds_.MergeFrom(from.builds_);
  cropland_.MergeFrom(from.cropland_);
  equipments_.MergeFrom(from.equipments_);
  animals_.MergeFrom(from.animals_);
  equipmentstars_.MergeFrom(from.equipmentstars_);
  fruits_.MergeFrom(from.fruits_);
  shipboxes_.MergeFrom(from.shipboxes_);
  arraypet_.MergeFrom(from.arraypet_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_base()) {
      mutable_base()->::User::Base::MergeFrom(from.base());
    }
    if (from.has_shopstatus()) {
      set_shopstatus(from.shopstatus());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_shipping()) {
      mutable_shipping()->::ProtoShipping::ShippingCPP::MergeFrom(from.shipping());
    }
    if (from.has_friendlytree()) {
      mutable_friendlytree()->::ProtoFriendlyTree::FriendlyTreeCPP::MergeFrom(from.friendlytree());
    }
    if (from.has_theme()) {
      mutable_theme()->::ProtoTheme::ThemeInfoResp::MergeFrom(from.theme());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void OtherUser::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OtherUser::CopyFrom(const OtherUser& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OtherUser::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000481) != 0x00000481) return false;

  if (has_base()) {
    if (!this->base().IsInitialized()) return false;
  }
  if (!::google::protobuf::internal::AllAreInitialized(this->builds())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->cropland())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->equipments())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->animals())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->equipmentstars())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->fruits())) return false;
  if (has_shipping()) {
    if (!this->shipping().IsInitialized()) return false;
  }
  if (!::google::protobuf::internal::AllAreInitialized(this->shipboxes())) return false;
  if (has_friendlytree()) {
    if (!this->friendlytree().IsInitialized()) return false;
  }
  if (!::google::protobuf::internal::AllAreInitialized(this->arraypet())) return false;
  return true;
}

void OtherUser::Swap(OtherUser* other) {
  if (other != this) {
    std::swap(base_, other->base_);
    builds_.Swap(&other->builds_);
    cropland_.Swap(&other->cropland_);
    equipments_.Swap(&other->equipments_);
    animals_.Swap(&other->animals_);
    equipmentstars_.Swap(&other->equipmentstars_);
    fruits_.Swap(&other->fruits_);
    std::swap(shopstatus_, other->shopstatus_);
    std::swap(shipping_, other->shipping_);
    shipboxes_.Swap(&other->shipboxes_);
    std::swap(friendlytree_, other->friendlytree_);
    std::swap(theme_, other->theme_);
    arraypet_.Swap(&other->arraypet_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata OtherUser::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = OtherUser_descriptor_;
  metadata.reflection = OtherUser_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int RequestOtherUserBC::kOthuidFieldNumber;
const int RequestOtherUserBC::kMyuidFieldNumber;
#endif  // !_MSC_VER

RequestOtherUserBC::RequestOtherUserBC()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:User.RequestOtherUserBC)
}

void RequestOtherUserBC::InitAsDefaultInstance() {
}

RequestOtherUserBC::RequestOtherUserBC(const RequestOtherUserBC& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:User.RequestOtherUserBC)
}

void RequestOtherUserBC::SharedCtor() {
  _cached_size_ = 0;
  othuid_ = 0u;
  myuid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RequestOtherUserBC::~RequestOtherUserBC() {
  // @@protoc_insertion_point(destructor:User.RequestOtherUserBC)
  SharedDtor();
}

void RequestOtherUserBC::SharedDtor() {
  if (this != default_instance_) {
  }
}

void RequestOtherUserBC::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RequestOtherUserBC::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RequestOtherUserBC_descriptor_;
}

const RequestOtherUserBC& RequestOtherUserBC::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_User_2eproto();
  return *default_instance_;
}

RequestOtherUserBC* RequestOtherUserBC::default_instance_ = NULL;

RequestOtherUserBC* RequestOtherUserBC::New() const {
  return new RequestOtherUserBC;
}

void RequestOtherUserBC::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<RequestOtherUserBC*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(othuid_, myuid_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool RequestOtherUserBC::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:User.RequestOtherUserBC)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 othuid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &othuid_)));
          set_has_othuid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_myuid;
        break;
      }

      // required uint32 myuid = 2;
      case 2: {
        if (tag == 16) {
         parse_myuid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &myuid_)));
          set_has_myuid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:User.RequestOtherUserBC)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:User.RequestOtherUserBC)
  return false;
#undef DO_
}

void RequestOtherUserBC::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:User.RequestOtherUserBC)
  // required uint32 othuid = 1;
  if (has_othuid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->othuid(), output);
  }

  // required uint32 myuid = 2;
  if (has_myuid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->myuid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:User.RequestOtherUserBC)
}

::google::protobuf::uint8* RequestOtherUserBC::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:User.RequestOtherUserBC)
  // required uint32 othuid = 1;
  if (has_othuid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->othuid(), target);
  }

  // required uint32 myuid = 2;
  if (has_myuid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->myuid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:User.RequestOtherUserBC)
  return target;
}

int RequestOtherUserBC::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 othuid = 1;
    if (has_othuid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->othuid());
    }

    // required uint32 myuid = 2;
    if (has_myuid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->myuid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RequestOtherUserBC::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const RequestOtherUserBC* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const RequestOtherUserBC*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void RequestOtherUserBC::MergeFrom(const RequestOtherUserBC& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_othuid()) {
      set_othuid(from.othuid());
    }
    if (from.has_myuid()) {
      set_myuid(from.myuid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void RequestOtherUserBC::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RequestOtherUserBC::CopyFrom(const RequestOtherUserBC& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RequestOtherUserBC::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void RequestOtherUserBC::Swap(RequestOtherUserBC* other) {
  if (other != this) {
    std::swap(othuid_, other->othuid_);
    std::swap(myuid_, other->myuid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata RequestOtherUserBC::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RequestOtherUserBC_descriptor_;
  metadata.reflection = RequestOtherUserBC_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

FetchSelfReq::FetchSelfReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:User.FetchSelfReq)
}

void FetchSelfReq::InitAsDefaultInstance() {
}

FetchSelfReq::FetchSelfReq(const FetchSelfReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:User.FetchSelfReq)
}

void FetchSelfReq::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

FetchSelfReq::~FetchSelfReq() {
  // @@protoc_insertion_point(destructor:User.FetchSelfReq)
  SharedDtor();
}

void FetchSelfReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void FetchSelfReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FetchSelfReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return FetchSelfReq_descriptor_;
}

const FetchSelfReq& FetchSelfReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_User_2eproto();
  return *default_instance_;
}

FetchSelfReq* FetchSelfReq::default_instance_ = NULL;

FetchSelfReq* FetchSelfReq::New() const {
  return new FetchSelfReq;
}

void FetchSelfReq::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool FetchSelfReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:User.FetchSelfReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:User.FetchSelfReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:User.FetchSelfReq)
  return false;
#undef DO_
}

void FetchSelfReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:User.FetchSelfReq)
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:User.FetchSelfReq)
}

::google::protobuf::uint8* FetchSelfReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:User.FetchSelfReq)
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:User.FetchSelfReq)
  return target;
}

int FetchSelfReq::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FetchSelfReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const FetchSelfReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const FetchSelfReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void FetchSelfReq::MergeFrom(const FetchSelfReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void FetchSelfReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FetchSelfReq::CopyFrom(const FetchSelfReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FetchSelfReq::IsInitialized() const {

  return true;
}

void FetchSelfReq::Swap(FetchSelfReq* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata FetchSelfReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = FetchSelfReq_descriptor_;
  metadata.reflection = FetchSelfReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int FetchSelfResp::kPlayerFieldNumber;
#endif  // !_MSC_VER

FetchSelfResp::FetchSelfResp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:User.FetchSelfResp)
}

void FetchSelfResp::InitAsDefaultInstance() {
  player_ = const_cast< ::User::User*>(&::User::User::default_instance());
}

FetchSelfResp::FetchSelfResp(const FetchSelfResp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:User.FetchSelfResp)
}

void FetchSelfResp::SharedCtor() {
  _cached_size_ = 0;
  player_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

FetchSelfResp::~FetchSelfResp() {
  // @@protoc_insertion_point(destructor:User.FetchSelfResp)
  SharedDtor();
}

void FetchSelfResp::SharedDtor() {
  if (this != default_instance_) {
    delete player_;
  }
}

void FetchSelfResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FetchSelfResp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return FetchSelfResp_descriptor_;
}

const FetchSelfResp& FetchSelfResp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_User_2eproto();
  return *default_instance_;
}

FetchSelfResp* FetchSelfResp::default_instance_ = NULL;

FetchSelfResp* FetchSelfResp::New() const {
  return new FetchSelfResp;
}

void FetchSelfResp::Clear() {
  if (has_player()) {
    if (player_ != NULL) player_->::User::User::Clear();
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool FetchSelfResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:User.FetchSelfResp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .User.User player = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_player()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:User.FetchSelfResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:User.FetchSelfResp)
  return false;
#undef DO_
}

void FetchSelfResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:User.FetchSelfResp)
  // required .User.User player = 1;
  if (has_player()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->player(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:User.FetchSelfResp)
}

::google::protobuf::uint8* FetchSelfResp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:User.FetchSelfResp)
  // required .User.User player = 1;
  if (has_player()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->player(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:User.FetchSelfResp)
  return target;
}

int FetchSelfResp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .User.User player = 1;
    if (has_player()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->player());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FetchSelfResp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const FetchSelfResp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const FetchSelfResp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void FetchSelfResp::MergeFrom(const FetchSelfResp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_player()) {
      mutable_player()->::User::User::MergeFrom(from.player());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void FetchSelfResp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FetchSelfResp::CopyFrom(const FetchSelfResp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FetchSelfResp::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (has_player()) {
    if (!this->player().IsInitialized()) return false;
  }
  return true;
}

void FetchSelfResp::Swap(FetchSelfResp* other) {
  if (other != this) {
    std::swap(player_, other->player_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata FetchSelfResp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = FetchSelfResp_descriptor_;
  metadata.reflection = FetchSelfResp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Tutorialstage::kTutorialStageFieldNumber;
#endif  // !_MSC_VER

Tutorialstage::Tutorialstage()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:User.Tutorialstage)
}

void Tutorialstage::InitAsDefaultInstance() {
}

Tutorialstage::Tutorialstage(const Tutorialstage& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:User.Tutorialstage)
}

void Tutorialstage::SharedCtor() {
  _cached_size_ = 0;
  tutorialstage_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Tutorialstage::~Tutorialstage() {
  // @@protoc_insertion_point(destructor:User.Tutorialstage)
  SharedDtor();
}

void Tutorialstage::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Tutorialstage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Tutorialstage::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Tutorialstage_descriptor_;
}

const Tutorialstage& Tutorialstage::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_User_2eproto();
  return *default_instance_;
}

Tutorialstage* Tutorialstage::default_instance_ = NULL;

Tutorialstage* Tutorialstage::New() const {
  return new Tutorialstage;
}

void Tutorialstage::Clear() {
  tutorialstage_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Tutorialstage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:User.Tutorialstage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 tutorialStage = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &tutorialstage_)));
          set_has_tutorialstage();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:User.Tutorialstage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:User.Tutorialstage)
  return false;
#undef DO_
}

void Tutorialstage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:User.Tutorialstage)
  // required uint32 tutorialStage = 1;
  if (has_tutorialstage()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->tutorialstage(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:User.Tutorialstage)
}

::google::protobuf::uint8* Tutorialstage::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:User.Tutorialstage)
  // required uint32 tutorialStage = 1;
  if (has_tutorialstage()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->tutorialstage(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:User.Tutorialstage)
  return target;
}

int Tutorialstage::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 tutorialStage = 1;
    if (has_tutorialstage()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->tutorialstage());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Tutorialstage::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Tutorialstage* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Tutorialstage*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Tutorialstage::MergeFrom(const Tutorialstage& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_tutorialstage()) {
      set_tutorialstage(from.tutorialstage());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Tutorialstage::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Tutorialstage::CopyFrom(const Tutorialstage& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Tutorialstage::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void Tutorialstage::Swap(Tutorialstage* other) {
  if (other != this) {
    std::swap(tutorialstage_, other->tutorialstage_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Tutorialstage::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Tutorialstage_descriptor_;
  metadata.reflection = Tutorialstage_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int SwitchStatus::kSwitchStatusFieldNumber;
#endif  // !_MSC_VER

SwitchStatus::SwitchStatus()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:User.SwitchStatus)
}

void SwitchStatus::InitAsDefaultInstance() {
}

SwitchStatus::SwitchStatus(const SwitchStatus& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:User.SwitchStatus)
}

void SwitchStatus::SharedCtor() {
  _cached_size_ = 0;
  switchstatus_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SwitchStatus::~SwitchStatus() {
  // @@protoc_insertion_point(destructor:User.SwitchStatus)
  SharedDtor();
}

void SwitchStatus::SharedDtor() {
  if (this != default_instance_) {
  }
}

void SwitchStatus::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SwitchStatus::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SwitchStatus_descriptor_;
}

const SwitchStatus& SwitchStatus::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_User_2eproto();
  return *default_instance_;
}

SwitchStatus* SwitchStatus::default_instance_ = NULL;

SwitchStatus* SwitchStatus::New() const {
  return new SwitchStatus;
}

void SwitchStatus::Clear() {
  switchstatus_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool SwitchStatus::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:User.SwitchStatus)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 switchStatus = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &switchstatus_)));
          set_has_switchstatus();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:User.SwitchStatus)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:User.SwitchStatus)
  return false;
#undef DO_
}

void SwitchStatus::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:User.SwitchStatus)
  // required uint32 switchStatus = 1;
  if (has_switchstatus()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->switchstatus(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:User.SwitchStatus)
}

::google::protobuf::uint8* SwitchStatus::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:User.SwitchStatus)
  // required uint32 switchStatus = 1;
  if (has_switchstatus()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->switchstatus(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:User.SwitchStatus)
  return target;
}

int SwitchStatus::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 switchStatus = 1;
    if (has_switchstatus()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->switchstatus());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SwitchStatus::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const SwitchStatus* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const SwitchStatus*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SwitchStatus::MergeFrom(const SwitchStatus& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_switchstatus()) {
      set_switchstatus(from.switchstatus());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void SwitchStatus::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SwitchStatus::CopyFrom(const SwitchStatus& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SwitchStatus::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void SwitchStatus::Swap(SwitchStatus* other) {
  if (other != this) {
    std::swap(switchstatus_, other->switchstatus_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata SwitchStatus::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SwitchStatus_descriptor_;
  metadata.reflection = SwitchStatus_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ServerTime::kTsFieldNumber;
#endif  // !_MSC_VER

ServerTime::ServerTime()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:User.ServerTime)
}

void ServerTime::InitAsDefaultInstance() {
}

ServerTime::ServerTime(const ServerTime& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:User.ServerTime)
}

void ServerTime::SharedCtor() {
  _cached_size_ = 0;
  ts_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ServerTime::~ServerTime() {
  // @@protoc_insertion_point(destructor:User.ServerTime)
  SharedDtor();
}

void ServerTime::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ServerTime::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ServerTime::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ServerTime_descriptor_;
}

const ServerTime& ServerTime::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_User_2eproto();
  return *default_instance_;
}

ServerTime* ServerTime::default_instance_ = NULL;

ServerTime* ServerTime::New() const {
  return new ServerTime;
}

void ServerTime::Clear() {
  ts_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ServerTime::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:User.ServerTime)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 ts = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ts_)));
          set_has_ts();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:User.ServerTime)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:User.ServerTime)
  return false;
#undef DO_
}

void ServerTime::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:User.ServerTime)
  // required uint32 ts = 1;
  if (has_ts()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->ts(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:User.ServerTime)
}

::google::protobuf::uint8* ServerTime::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:User.ServerTime)
  // required uint32 ts = 1;
  if (has_ts()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->ts(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:User.ServerTime)
  return target;
}

int ServerTime::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 ts = 1;
    if (has_ts()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->ts());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ServerTime::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ServerTime* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ServerTime*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ServerTime::MergeFrom(const ServerTime& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_ts()) {
      set_ts(from.ts());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ServerTime::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServerTime::CopyFrom(const ServerTime& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServerTime::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void ServerTime::Swap(ServerTime* other) {
  if (other != this) {
    std::swap(ts_, other->ts_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ServerTime::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ServerTime_descriptor_;
  metadata.reflection = ServerTime_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CostCashReq::kCashFieldNumber;
const int CostCashReq::kOpCodeFieldNumber;
const int CostCashReq::kOperationFieldNumber;
#endif  // !_MSC_VER

CostCashReq::CostCashReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:User.CostCashReq)
}

void CostCashReq::InitAsDefaultInstance() {
}

CostCashReq::CostCashReq(const CostCashReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:User.CostCashReq)
}

void CostCashReq::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  cash_ = 0u;
  opcode_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  operation_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CostCashReq::~CostCashReq() {
  // @@protoc_insertion_point(destructor:User.CostCashReq)
  SharedDtor();
}

void CostCashReq::SharedDtor() {
  if (opcode_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete opcode_;
  }
  if (this != default_instance_) {
  }
}

void CostCashReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CostCashReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CostCashReq_descriptor_;
}

const CostCashReq& CostCashReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_User_2eproto();
  return *default_instance_;
}

CostCashReq* CostCashReq::default_instance_ = NULL;

CostCashReq* CostCashReq::New() const {
  return new CostCashReq;
}

void CostCashReq::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<CostCashReq*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 7) {
    ZR_(cash_, operation_);
    if (has_opcode()) {
      if (opcode_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        opcode_->clear();
      }
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CostCashReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:User.CostCashReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 cash = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &cash_)));
          set_has_cash();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_opCode;
        break;
      }

      // required string opCode = 2;
      case 2: {
        if (tag == 18) {
         parse_opCode:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_opcode()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->opcode().data(), this->opcode().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "opcode");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_operation;
        break;
      }

      // required uint32 operation = 3;
      case 3: {
        if (tag == 24) {
         parse_operation:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &operation_)));
          set_has_operation();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:User.CostCashReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:User.CostCashReq)
  return false;
#undef DO_
}

void CostCashReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:User.CostCashReq)
  // required uint32 cash = 1;
  if (has_cash()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->cash(), output);
  }

  // required string opCode = 2;
  if (has_opcode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->opcode().data(), this->opcode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "opcode");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->opcode(), output);
  }

  // required uint32 operation = 3;
  if (has_operation()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->operation(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:User.CostCashReq)
}

::google::protobuf::uint8* CostCashReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:User.CostCashReq)
  // required uint32 cash = 1;
  if (has_cash()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->cash(), target);
  }

  // required string opCode = 2;
  if (has_opcode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->opcode().data(), this->opcode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "opcode");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->opcode(), target);
  }

  // required uint32 operation = 3;
  if (has_operation()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->operation(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:User.CostCashReq)
  return target;
}

int CostCashReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 cash = 1;
    if (has_cash()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->cash());
    }

    // required string opCode = 2;
    if (has_opcode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->opcode());
    }

    // required uint32 operation = 3;
    if (has_operation()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->operation());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CostCashReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CostCashReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CostCashReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CostCashReq::MergeFrom(const CostCashReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_cash()) {
      set_cash(from.cash());
    }
    if (from.has_opcode()) {
      set_opcode(from.opcode());
    }
    if (from.has_operation()) {
      set_operation(from.operation());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CostCashReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CostCashReq::CopyFrom(const CostCashReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CostCashReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  return true;
}

void CostCashReq::Swap(CostCashReq* other) {
  if (other != this) {
    std::swap(cash_, other->cash_);
    std::swap(opcode_, other->opcode_);
    std::swap(operation_, other->operation_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CostCashReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CostCashReq_descriptor_;
  metadata.reflection = CostCashReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CostCashResp::kCashFieldNumber;
const int CostCashResp::kOperationFieldNumber;
#endif  // !_MSC_VER

CostCashResp::CostCashResp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:User.CostCashResp)
}

void CostCashResp::InitAsDefaultInstance() {
}

CostCashResp::CostCashResp(const CostCashResp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:User.CostCashResp)
}

void CostCashResp::SharedCtor() {
  _cached_size_ = 0;
  cash_ = 0u;
  operation_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CostCashResp::~CostCashResp() {
  // @@protoc_insertion_point(destructor:User.CostCashResp)
  SharedDtor();
}

void CostCashResp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CostCashResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CostCashResp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CostCashResp_descriptor_;
}

const CostCashResp& CostCashResp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_User_2eproto();
  return *default_instance_;
}

CostCashResp* CostCashResp::default_instance_ = NULL;

CostCashResp* CostCashResp::New() const {
  return new CostCashResp;
}

void CostCashResp::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<CostCashResp*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(cash_, operation_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CostCashResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:User.CostCashResp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 cash = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &cash_)));
          set_has_cash();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_operation;
        break;
      }

      // required uint32 operation = 2;
      case 2: {
        if (tag == 16) {
         parse_operation:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &operation_)));
          set_has_operation();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:User.CostCashResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:User.CostCashResp)
  return false;
#undef DO_
}

void CostCashResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:User.CostCashResp)
  // required uint32 cash = 1;
  if (has_cash()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->cash(), output);
  }

  // required uint32 operation = 2;
  if (has_operation()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->operation(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:User.CostCashResp)
}

::google::protobuf::uint8* CostCashResp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:User.CostCashResp)
  // required uint32 cash = 1;
  if (has_cash()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->cash(), target);
  }

  // required uint32 operation = 2;
  if (has_operation()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->operation(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:User.CostCashResp)
  return target;
}

int CostCashResp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 cash = 1;
    if (has_cash()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->cash());
    }

    // required uint32 operation = 2;
    if (has_operation()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->operation());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CostCashResp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CostCashResp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CostCashResp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CostCashResp::MergeFrom(const CostCashResp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_cash()) {
      set_cash(from.cash());
    }
    if (from.has_operation()) {
      set_operation(from.operation());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CostCashResp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CostCashResp::CopyFrom(const CostCashResp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CostCashResp::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void CostCashResp::Swap(CostCashResp* other) {
  if (other != this) {
    std::swap(cash_, other->cash_);
    std::swap(operation_, other->operation_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CostCashResp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CostCashResp_descriptor_;
  metadata.reflection = CostCashResp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ChargeItem::kCashFieldNumber;
const int ChargeItem::kTsFieldNumber;
#endif  // !_MSC_VER

ChargeItem::ChargeItem()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:User.ChargeItem)
}

void ChargeItem::InitAsDefaultInstance() {
}

ChargeItem::ChargeItem(const ChargeItem& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:User.ChargeItem)
}

void ChargeItem::SharedCtor() {
  _cached_size_ = 0;
  cash_ = 0u;
  ts_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ChargeItem::~ChargeItem() {
  // @@protoc_insertion_point(destructor:User.ChargeItem)
  SharedDtor();
}

void ChargeItem::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ChargeItem::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ChargeItem::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ChargeItem_descriptor_;
}

const ChargeItem& ChargeItem::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_User_2eproto();
  return *default_instance_;
}

ChargeItem* ChargeItem::default_instance_ = NULL;

ChargeItem* ChargeItem::New() const {
  return new ChargeItem;
}

void ChargeItem::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<ChargeItem*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(cash_, ts_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ChargeItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:User.ChargeItem)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 cash = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &cash_)));
          set_has_cash();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_ts;
        break;
      }

      // required uint32 ts = 2;
      case 2: {
        if (tag == 16) {
         parse_ts:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ts_)));
          set_has_ts();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:User.ChargeItem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:User.ChargeItem)
  return false;
#undef DO_
}

void ChargeItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:User.ChargeItem)
  // required uint32 cash = 1;
  if (has_cash()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->cash(), output);
  }

  // required uint32 ts = 2;
  if (has_ts()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->ts(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:User.ChargeItem)
}

::google::protobuf::uint8* ChargeItem::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:User.ChargeItem)
  // required uint32 cash = 1;
  if (has_cash()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->cash(), target);
  }

  // required uint32 ts = 2;
  if (has_ts()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->ts(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:User.ChargeItem)
  return target;
}

int ChargeItem::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 cash = 1;
    if (has_cash()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->cash());
    }

    // required uint32 ts = 2;
    if (has_ts()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->ts());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ChargeItem::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ChargeItem* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ChargeItem*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ChargeItem::MergeFrom(const ChargeItem& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_cash()) {
      set_cash(from.cash());
    }
    if (from.has_ts()) {
      set_ts(from.ts());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ChargeItem::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ChargeItem::CopyFrom(const ChargeItem& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ChargeItem::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void ChargeItem::Swap(ChargeItem* other) {
  if (other != this) {
    std::swap(cash_, other->cash_);
    std::swap(ts_, other->ts_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ChargeItem::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ChargeItem_descriptor_;
  metadata.reflection = ChargeItem_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int AccumulateCharge::kAccumulateChargeFieldNumber;
#endif  // !_MSC_VER

AccumulateCharge::AccumulateCharge()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:User.AccumulateCharge)
}

void AccumulateCharge::InitAsDefaultInstance() {
}

AccumulateCharge::AccumulateCharge(const AccumulateCharge& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:User.AccumulateCharge)
}

void AccumulateCharge::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

AccumulateCharge::~AccumulateCharge() {
  // @@protoc_insertion_point(destructor:User.AccumulateCharge)
  SharedDtor();
}

void AccumulateCharge::SharedDtor() {
  if (this != default_instance_) {
  }
}

void AccumulateCharge::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AccumulateCharge::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AccumulateCharge_descriptor_;
}

const AccumulateCharge& AccumulateCharge::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_User_2eproto();
  return *default_instance_;
}

AccumulateCharge* AccumulateCharge::default_instance_ = NULL;

AccumulateCharge* AccumulateCharge::New() const {
  return new AccumulateCharge;
}

void AccumulateCharge::Clear() {
  accumulatecharge_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool AccumulateCharge::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:User.AccumulateCharge)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .User.ChargeItem accumulateCharge = 1;
      case 1: {
        if (tag == 10) {
         parse_accumulateCharge:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_accumulatecharge()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_accumulateCharge;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:User.AccumulateCharge)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:User.AccumulateCharge)
  return false;
#undef DO_
}

void AccumulateCharge::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:User.AccumulateCharge)
  // repeated .User.ChargeItem accumulateCharge = 1;
  for (int i = 0; i < this->accumulatecharge_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->accumulatecharge(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:User.AccumulateCharge)
}

::google::protobuf::uint8* AccumulateCharge::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:User.AccumulateCharge)
  // repeated .User.ChargeItem accumulateCharge = 1;
  for (int i = 0; i < this->accumulatecharge_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->accumulatecharge(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:User.AccumulateCharge)
  return target;
}

int AccumulateCharge::ByteSize() const {
  int total_size = 0;

  // repeated .User.ChargeItem accumulateCharge = 1;
  total_size += 1 * this->accumulatecharge_size();
  for (int i = 0; i < this->accumulatecharge_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->accumulatecharge(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AccumulateCharge::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const AccumulateCharge* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const AccumulateCharge*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void AccumulateCharge::MergeFrom(const AccumulateCharge& from) {
  GOOGLE_CHECK_NE(&from, this);
  accumulatecharge_.MergeFrom(from.accumulatecharge_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void AccumulateCharge::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AccumulateCharge::CopyFrom(const AccumulateCharge& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AccumulateCharge::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->accumulatecharge())) return false;
  return true;
}

void AccumulateCharge::Swap(AccumulateCharge* other) {
  if (other != this) {
    accumulatecharge_.Swap(&other->accumulatecharge_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata AccumulateCharge::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AccumulateCharge_descriptor_;
  metadata.reflection = AccumulateCharge_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PushAccumulateChangeReq::kChangeAccchargeFieldNumber;
#endif  // !_MSC_VER

PushAccumulateChangeReq::PushAccumulateChangeReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:User.PushAccumulateChangeReq)
}

void PushAccumulateChangeReq::InitAsDefaultInstance() {
  changeacccharge_ = const_cast< ::User::AccumulateCharge*>(&::User::AccumulateCharge::default_instance());
}

PushAccumulateChangeReq::PushAccumulateChangeReq(const PushAccumulateChangeReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:User.PushAccumulateChangeReq)
}

void PushAccumulateChangeReq::SharedCtor() {
  _cached_size_ = 0;
  changeacccharge_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PushAccumulateChangeReq::~PushAccumulateChangeReq() {
  // @@protoc_insertion_point(destructor:User.PushAccumulateChangeReq)
  SharedDtor();
}

void PushAccumulateChangeReq::SharedDtor() {
  if (this != default_instance_) {
    delete changeacccharge_;
  }
}

void PushAccumulateChangeReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PushAccumulateChangeReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PushAccumulateChangeReq_descriptor_;
}

const PushAccumulateChangeReq& PushAccumulateChangeReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_User_2eproto();
  return *default_instance_;
}

PushAccumulateChangeReq* PushAccumulateChangeReq::default_instance_ = NULL;

PushAccumulateChangeReq* PushAccumulateChangeReq::New() const {
  return new PushAccumulateChangeReq;
}

void PushAccumulateChangeReq::Clear() {
  if (has_changeacccharge()) {
    if (changeacccharge_ != NULL) changeacccharge_->::User::AccumulateCharge::Clear();
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PushAccumulateChangeReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:User.PushAccumulateChangeReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .User.AccumulateCharge changeAcccharge = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_changeacccharge()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:User.PushAccumulateChangeReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:User.PushAccumulateChangeReq)
  return false;
#undef DO_
}

void PushAccumulateChangeReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:User.PushAccumulateChangeReq)
  // required .User.AccumulateCharge changeAcccharge = 1;
  if (has_changeacccharge()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->changeacccharge(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:User.PushAccumulateChangeReq)
}

::google::protobuf::uint8* PushAccumulateChangeReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:User.PushAccumulateChangeReq)
  // required .User.AccumulateCharge changeAcccharge = 1;
  if (has_changeacccharge()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->changeacccharge(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:User.PushAccumulateChangeReq)
  return target;
}

int PushAccumulateChangeReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .User.AccumulateCharge changeAcccharge = 1;
    if (has_changeacccharge()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->changeacccharge());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PushAccumulateChangeReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PushAccumulateChangeReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PushAccumulateChangeReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PushAccumulateChangeReq::MergeFrom(const PushAccumulateChangeReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_changeacccharge()) {
      mutable_changeacccharge()->::User::AccumulateCharge::MergeFrom(from.changeacccharge());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PushAccumulateChangeReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PushAccumulateChangeReq::CopyFrom(const PushAccumulateChangeReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PushAccumulateChangeReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (has_changeacccharge()) {
    if (!this->changeacccharge().IsInitialized()) return false;
  }
  return true;
}

void PushAccumulateChangeReq::Swap(PushAccumulateChangeReq* other) {
  if (other != this) {
    std::swap(changeacccharge_, other->changeacccharge_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PushAccumulateChangeReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PushAccumulateChangeReq_descriptor_;
  metadata.reflection = PushAccumulateChangeReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int SpeedUpReq::kTypeFieldNumber;
const int SpeedUpReq::kUdFieldNumber;
const int SpeedUpReq::kMethodFieldNumber;
#endif  // !_MSC_VER

SpeedUpReq::SpeedUpReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:User.SpeedUpReq)
}

void SpeedUpReq::InitAsDefaultInstance() {
}

SpeedUpReq::SpeedUpReq(const SpeedUpReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:User.SpeedUpReq)
}

void SpeedUpReq::SharedCtor() {
  _cached_size_ = 0;
  type_ = 0u;
  ud_ = 0u;
  method_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SpeedUpReq::~SpeedUpReq() {
  // @@protoc_insertion_point(destructor:User.SpeedUpReq)
  SharedDtor();
}

void SpeedUpReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void SpeedUpReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SpeedUpReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SpeedUpReq_descriptor_;
}

const SpeedUpReq& SpeedUpReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_User_2eproto();
  return *default_instance_;
}

SpeedUpReq* SpeedUpReq::default_instance_ = NULL;

SpeedUpReq* SpeedUpReq::New() const {
  return new SpeedUpReq;
}

void SpeedUpReq::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<SpeedUpReq*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(type_, method_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool SpeedUpReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:User.SpeedUpReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 type = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_ud;
        break;
      }

      // optional uint32 ud = 2;
      case 2: {
        if (tag == 16) {
         parse_ud:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ud_)));
          set_has_ud();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_method;
        break;
      }

      // optional uint32 method = 3;
      case 3: {
        if (tag == 24) {
         parse_method:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &method_)));
          set_has_method();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:User.SpeedUpReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:User.SpeedUpReq)
  return false;
#undef DO_
}

void SpeedUpReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:User.SpeedUpReq)
  // required uint32 type = 1;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->type(), output);
  }

  // optional uint32 ud = 2;
  if (has_ud()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->ud(), output);
  }

  // optional uint32 method = 3;
  if (has_method()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->method(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:User.SpeedUpReq)
}

::google::protobuf::uint8* SpeedUpReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:User.SpeedUpReq)
  // required uint32 type = 1;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->type(), target);
  }

  // optional uint32 ud = 2;
  if (has_ud()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->ud(), target);
  }

  // optional uint32 method = 3;
  if (has_method()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->method(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:User.SpeedUpReq)
  return target;
}

int SpeedUpReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 type = 1;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->type());
    }

    // optional uint32 ud = 2;
    if (has_ud()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->ud());
    }

    // optional uint32 method = 3;
    if (has_method()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->method());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SpeedUpReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const SpeedUpReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const SpeedUpReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SpeedUpReq::MergeFrom(const SpeedUpReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_ud()) {
      set_ud(from.ud());
    }
    if (from.has_method()) {
      set_method(from.method());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void SpeedUpReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SpeedUpReq::CopyFrom(const SpeedUpReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SpeedUpReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void SpeedUpReq::Swap(SpeedUpReq* other) {
  if (other != this) {
    std::swap(type_, other->type_);
    std::swap(ud_, other->ud_);
    std::swap(method_, other->method_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata SpeedUpReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SpeedUpReq_descriptor_;
  metadata.reflection = SpeedUpReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int SpeedUpResp::kCommonsFieldNumber;
#endif  // !_MSC_VER

SpeedUpResp::SpeedUpResp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:User.SpeedUpResp)
}

void SpeedUpResp::InitAsDefaultInstance() {
  commons_ = const_cast< ::DataCommon::CommonItemsCPP*>(&::DataCommon::CommonItemsCPP::default_instance());
}

SpeedUpResp::SpeedUpResp(const SpeedUpResp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:User.SpeedUpResp)
}

void SpeedUpResp::SharedCtor() {
  _cached_size_ = 0;
  commons_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SpeedUpResp::~SpeedUpResp() {
  // @@protoc_insertion_point(destructor:User.SpeedUpResp)
  SharedDtor();
}

void SpeedUpResp::SharedDtor() {
  if (this != default_instance_) {
    delete commons_;
  }
}

void SpeedUpResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SpeedUpResp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SpeedUpResp_descriptor_;
}

const SpeedUpResp& SpeedUpResp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_User_2eproto();
  return *default_instance_;
}

SpeedUpResp* SpeedUpResp::default_instance_ = NULL;

SpeedUpResp* SpeedUpResp::New() const {
  return new SpeedUpResp;
}

void SpeedUpResp::Clear() {
  if (has_commons()) {
    if (commons_ != NULL) commons_->::DataCommon::CommonItemsCPP::Clear();
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool SpeedUpResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:User.SpeedUpResp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .DataCommon.CommonItemsCPP commons = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_commons()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:User.SpeedUpResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:User.SpeedUpResp)
  return false;
#undef DO_
}

void SpeedUpResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:User.SpeedUpResp)
  // optional .DataCommon.CommonItemsCPP commons = 1;
  if (has_commons()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->commons(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:User.SpeedUpResp)
}

::google::protobuf::uint8* SpeedUpResp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:User.SpeedUpResp)
  // optional .DataCommon.CommonItemsCPP commons = 1;
  if (has_commons()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->commons(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:User.SpeedUpResp)
  return target;
}

int SpeedUpResp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .DataCommon.CommonItemsCPP commons = 1;
    if (has_commons()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->commons());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SpeedUpResp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const SpeedUpResp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const SpeedUpResp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SpeedUpResp::MergeFrom(const SpeedUpResp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_commons()) {
      mutable_commons()->::DataCommon::CommonItemsCPP::MergeFrom(from.commons());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void SpeedUpResp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SpeedUpResp::CopyFrom(const SpeedUpResp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SpeedUpResp::IsInitialized() const {

  if (has_commons()) {
    if (!this->commons().IsInitialized()) return false;
  }
  return true;
}

void SpeedUpResp::Swap(SpeedUpResp* other) {
  if (other != this) {
    std::swap(commons_, other->commons_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata SpeedUpResp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SpeedUpResp_descriptor_;
  metadata.reflection = SpeedUpResp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int BuyMaterialInfo::kPropsidFieldNumber;
const int BuyMaterialInfo::kPropscntFieldNumber;
#endif  // !_MSC_VER

BuyMaterialInfo::BuyMaterialInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:User.BuyMaterialInfo)
}

void BuyMaterialInfo::InitAsDefaultInstance() {
}

BuyMaterialInfo::BuyMaterialInfo(const BuyMaterialInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:User.BuyMaterialInfo)
}

void BuyMaterialInfo::SharedCtor() {
  _cached_size_ = 0;
  propsid_ = 0u;
  propscnt_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BuyMaterialInfo::~BuyMaterialInfo() {
  // @@protoc_insertion_point(destructor:User.BuyMaterialInfo)
  SharedDtor();
}

void BuyMaterialInfo::SharedDtor() {
  if (this != default_instance_) {
  }
}

void BuyMaterialInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BuyMaterialInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BuyMaterialInfo_descriptor_;
}

const BuyMaterialInfo& BuyMaterialInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_User_2eproto();
  return *default_instance_;
}

BuyMaterialInfo* BuyMaterialInfo::default_instance_ = NULL;

BuyMaterialInfo* BuyMaterialInfo::New() const {
  return new BuyMaterialInfo;
}

void BuyMaterialInfo::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<BuyMaterialInfo*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(propsid_, propscnt_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool BuyMaterialInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:User.BuyMaterialInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 propsid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &propsid_)));
          set_has_propsid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_propscnt;
        break;
      }

      // required uint32 propscnt = 2;
      case 2: {
        if (tag == 16) {
         parse_propscnt:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &propscnt_)));
          set_has_propscnt();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:User.BuyMaterialInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:User.BuyMaterialInfo)
  return false;
#undef DO_
}

void BuyMaterialInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:User.BuyMaterialInfo)
  // required uint32 propsid = 1;
  if (has_propsid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->propsid(), output);
  }

  // required uint32 propscnt = 2;
  if (has_propscnt()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->propscnt(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:User.BuyMaterialInfo)
}

::google::protobuf::uint8* BuyMaterialInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:User.BuyMaterialInfo)
  // required uint32 propsid = 1;
  if (has_propsid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->propsid(), target);
  }

  // required uint32 propscnt = 2;
  if (has_propscnt()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->propscnt(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:User.BuyMaterialInfo)
  return target;
}

int BuyMaterialInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 propsid = 1;
    if (has_propsid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->propsid());
    }

    // required uint32 propscnt = 2;
    if (has_propscnt()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->propscnt());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BuyMaterialInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const BuyMaterialInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const BuyMaterialInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void BuyMaterialInfo::MergeFrom(const BuyMaterialInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_propsid()) {
      set_propsid(from.propsid());
    }
    if (from.has_propscnt()) {
      set_propscnt(from.propscnt());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void BuyMaterialInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BuyMaterialInfo::CopyFrom(const BuyMaterialInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BuyMaterialInfo::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void BuyMaterialInfo::Swap(BuyMaterialInfo* other) {
  if (other != this) {
    std::swap(propsid_, other->propsid_);
    std::swap(propscnt_, other->propscnt_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata BuyMaterialInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BuyMaterialInfo_descriptor_;
  metadata.reflection = BuyMaterialInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int BuyMaterialReq::kBuyinfoFieldNumber;
const int BuyMaterialReq::kSeqFieldNumber;
#endif  // !_MSC_VER

BuyMaterialReq::BuyMaterialReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:User.BuyMaterialReq)
}

void BuyMaterialReq::InitAsDefaultInstance() {
}

BuyMaterialReq::BuyMaterialReq(const BuyMaterialReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:User.BuyMaterialReq)
}

void BuyMaterialReq::SharedCtor() {
  _cached_size_ = 0;
  seq_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BuyMaterialReq::~BuyMaterialReq() {
  // @@protoc_insertion_point(destructor:User.BuyMaterialReq)
  SharedDtor();
}

void BuyMaterialReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void BuyMaterialReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BuyMaterialReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BuyMaterialReq_descriptor_;
}

const BuyMaterialReq& BuyMaterialReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_User_2eproto();
  return *default_instance_;
}

BuyMaterialReq* BuyMaterialReq::default_instance_ = NULL;

BuyMaterialReq* BuyMaterialReq::New() const {
  return new BuyMaterialReq;
}

void BuyMaterialReq::Clear() {
  seq_ = 0u;
  buyinfo_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool BuyMaterialReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:User.BuyMaterialReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .User.BuyMaterialInfo buyinfo = 1;
      case 1: {
        if (tag == 10) {
         parse_buyinfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_buyinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_buyinfo;
        if (input->ExpectTag(16)) goto parse_seq;
        break;
      }

      // required uint32 seq = 2;
      case 2: {
        if (tag == 16) {
         parse_seq:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &seq_)));
          set_has_seq();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:User.BuyMaterialReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:User.BuyMaterialReq)
  return false;
#undef DO_
}

void BuyMaterialReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:User.BuyMaterialReq)
  // repeated .User.BuyMaterialInfo buyinfo = 1;
  for (int i = 0; i < this->buyinfo_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->buyinfo(i), output);
  }

  // required uint32 seq = 2;
  if (has_seq()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->seq(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:User.BuyMaterialReq)
}

::google::protobuf::uint8* BuyMaterialReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:User.BuyMaterialReq)
  // repeated .User.BuyMaterialInfo buyinfo = 1;
  for (int i = 0; i < this->buyinfo_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->buyinfo(i), target);
  }

  // required uint32 seq = 2;
  if (has_seq()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->seq(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:User.BuyMaterialReq)
  return target;
}

int BuyMaterialReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // required uint32 seq = 2;
    if (has_seq()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->seq());
    }

  }
  // repeated .User.BuyMaterialInfo buyinfo = 1;
  total_size += 1 * this->buyinfo_size();
  for (int i = 0; i < this->buyinfo_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->buyinfo(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BuyMaterialReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const BuyMaterialReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const BuyMaterialReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void BuyMaterialReq::MergeFrom(const BuyMaterialReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  buyinfo_.MergeFrom(from.buyinfo_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_seq()) {
      set_seq(from.seq());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void BuyMaterialReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BuyMaterialReq::CopyFrom(const BuyMaterialReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BuyMaterialReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000002) != 0x00000002) return false;

  if (!::google::protobuf::internal::AllAreInitialized(this->buyinfo())) return false;
  return true;
}

void BuyMaterialReq::Swap(BuyMaterialReq* other) {
  if (other != this) {
    buyinfo_.Swap(&other->buyinfo_);
    std::swap(seq_, other->seq_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata BuyMaterialReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BuyMaterialReq_descriptor_;
  metadata.reflection = BuyMaterialReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int BuyMaterialResp::kCommonsFieldNumber;
const int BuyMaterialResp::kSeqFieldNumber;
#endif  // !_MSC_VER

BuyMaterialResp::BuyMaterialResp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:User.BuyMaterialResp)
}

void BuyMaterialResp::InitAsDefaultInstance() {
  commons_ = const_cast< ::DataCommon::CommonItemsCPP*>(&::DataCommon::CommonItemsCPP::default_instance());
}

BuyMaterialResp::BuyMaterialResp(const BuyMaterialResp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:User.BuyMaterialResp)
}

void BuyMaterialResp::SharedCtor() {
  _cached_size_ = 0;
  commons_ = NULL;
  seq_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BuyMaterialResp::~BuyMaterialResp() {
  // @@protoc_insertion_point(destructor:User.BuyMaterialResp)
  SharedDtor();
}

void BuyMaterialResp::SharedDtor() {
  if (this != default_instance_) {
    delete commons_;
  }
}

void BuyMaterialResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BuyMaterialResp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BuyMaterialResp_descriptor_;
}

const BuyMaterialResp& BuyMaterialResp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_User_2eproto();
  return *default_instance_;
}

BuyMaterialResp* BuyMaterialResp::default_instance_ = NULL;

BuyMaterialResp* BuyMaterialResp::New() const {
  return new BuyMaterialResp;
}

void BuyMaterialResp::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    if (has_commons()) {
      if (commons_ != NULL) commons_->::DataCommon::CommonItemsCPP::Clear();
    }
    seq_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool BuyMaterialResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:User.BuyMaterialResp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .DataCommon.CommonItemsCPP commons = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_commons()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_seq;
        break;
      }

      // required uint32 seq = 2;
      case 2: {
        if (tag == 16) {
         parse_seq:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &seq_)));
          set_has_seq();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:User.BuyMaterialResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:User.BuyMaterialResp)
  return false;
#undef DO_
}

void BuyMaterialResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:User.BuyMaterialResp)
  // required .DataCommon.CommonItemsCPP commons = 1;
  if (has_commons()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->commons(), output);
  }

  // required uint32 seq = 2;
  if (has_seq()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->seq(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:User.BuyMaterialResp)
}

::google::protobuf::uint8* BuyMaterialResp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:User.BuyMaterialResp)
  // required .DataCommon.CommonItemsCPP commons = 1;
  if (has_commons()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->commons(), target);
  }

  // required uint32 seq = 2;
  if (has_seq()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->seq(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:User.BuyMaterialResp)
  return target;
}

int BuyMaterialResp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .DataCommon.CommonItemsCPP commons = 1;
    if (has_commons()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->commons());
    }

    // required uint32 seq = 2;
    if (has_seq()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->seq());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BuyMaterialResp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const BuyMaterialResp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const BuyMaterialResp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void BuyMaterialResp::MergeFrom(const BuyMaterialResp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_commons()) {
      mutable_commons()->::DataCommon::CommonItemsCPP::MergeFrom(from.commons());
    }
    if (from.has_seq()) {
      set_seq(from.seq());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void BuyMaterialResp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BuyMaterialResp::CopyFrom(const BuyMaterialResp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BuyMaterialResp::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  if (has_commons()) {
    if (!this->commons().IsInitialized()) return false;
  }
  return true;
}

void BuyMaterialResp::Swap(BuyMaterialResp* other) {
  if (other != this) {
    std::swap(commons_, other->commons_);
    std::swap(seq_, other->seq_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata BuyMaterialResp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BuyMaterialResp_descriptor_;
  metadata.reflection = BuyMaterialResp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CriticalRewardsResp::kCommonsFieldNumber;
#endif  // !_MSC_VER

CriticalRewardsResp::CriticalRewardsResp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:User.CriticalRewardsResp)
}

void CriticalRewardsResp::InitAsDefaultInstance() {
  commons_ = const_cast< ::DataCommon::CommonItemsCPP*>(&::DataCommon::CommonItemsCPP::default_instance());
}

CriticalRewardsResp::CriticalRewardsResp(const CriticalRewardsResp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:User.CriticalRewardsResp)
}

void CriticalRewardsResp::SharedCtor() {
  _cached_size_ = 0;
  commons_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CriticalRewardsResp::~CriticalRewardsResp() {
  // @@protoc_insertion_point(destructor:User.CriticalRewardsResp)
  SharedDtor();
}

void CriticalRewardsResp::SharedDtor() {
  if (this != default_instance_) {
    delete commons_;
  }
}

void CriticalRewardsResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CriticalRewardsResp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CriticalRewardsResp_descriptor_;
}

const CriticalRewardsResp& CriticalRewardsResp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_User_2eproto();
  return *default_instance_;
}

CriticalRewardsResp* CriticalRewardsResp::default_instance_ = NULL;

CriticalRewardsResp* CriticalRewardsResp::New() const {
  return new CriticalRewardsResp;
}

void CriticalRewardsResp::Clear() {
  if (has_commons()) {
    if (commons_ != NULL) commons_->::DataCommon::CommonItemsCPP::Clear();
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CriticalRewardsResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:User.CriticalRewardsResp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .DataCommon.CommonItemsCPP commons = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_commons()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:User.CriticalRewardsResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:User.CriticalRewardsResp)
  return false;
#undef DO_
}

void CriticalRewardsResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:User.CriticalRewardsResp)
  // required .DataCommon.CommonItemsCPP commons = 1;
  if (has_commons()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->commons(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:User.CriticalRewardsResp)
}

::google::protobuf::uint8* CriticalRewardsResp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:User.CriticalRewardsResp)
  // required .DataCommon.CommonItemsCPP commons = 1;
  if (has_commons()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->commons(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:User.CriticalRewardsResp)
  return target;
}

int CriticalRewardsResp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .DataCommon.CommonItemsCPP commons = 1;
    if (has_commons()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->commons());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CriticalRewardsResp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CriticalRewardsResp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CriticalRewardsResp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CriticalRewardsResp::MergeFrom(const CriticalRewardsResp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_commons()) {
      mutable_commons()->::DataCommon::CommonItemsCPP::MergeFrom(from.commons());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CriticalRewardsResp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CriticalRewardsResp::CopyFrom(const CriticalRewardsResp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CriticalRewardsResp::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (has_commons()) {
    if (!this->commons().IsInitialized()) return false;
  }
  return true;
}

void CriticalRewardsResp::Swap(CriticalRewardsResp* other) {
  if (other != this) {
    std::swap(commons_, other->commons_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CriticalRewardsResp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CriticalRewardsResp_descriptor_;
  metadata.reflection = CriticalRewardsResp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int LevelRewardsResp::kCommonsFieldNumber;
#endif  // !_MSC_VER

LevelRewardsResp::LevelRewardsResp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:User.LevelRewardsResp)
}

void LevelRewardsResp::InitAsDefaultInstance() {
  commons_ = const_cast< ::DataCommon::CommonItemsCPP*>(&::DataCommon::CommonItemsCPP::default_instance());
}

LevelRewardsResp::LevelRewardsResp(const LevelRewardsResp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:User.LevelRewardsResp)
}

void LevelRewardsResp::SharedCtor() {
  _cached_size_ = 0;
  commons_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

LevelRewardsResp::~LevelRewardsResp() {
  // @@protoc_insertion_point(destructor:User.LevelRewardsResp)
  SharedDtor();
}

void LevelRewardsResp::SharedDtor() {
  if (this != default_instance_) {
    delete commons_;
  }
}

void LevelRewardsResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LevelRewardsResp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return LevelRewardsResp_descriptor_;
}

const LevelRewardsResp& LevelRewardsResp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_User_2eproto();
  return *default_instance_;
}

LevelRewardsResp* LevelRewardsResp::default_instance_ = NULL;

LevelRewardsResp* LevelRewardsResp::New() const {
  return new LevelRewardsResp;
}

void LevelRewardsResp::Clear() {
  if (has_commons()) {
    if (commons_ != NULL) commons_->::DataCommon::CommonItemsCPP::Clear();
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool LevelRewardsResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:User.LevelRewardsResp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .DataCommon.CommonItemsCPP commons = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_commons()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:User.LevelRewardsResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:User.LevelRewardsResp)
  return false;
#undef DO_
}

void LevelRewardsResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:User.LevelRewardsResp)
  // required .DataCommon.CommonItemsCPP commons = 1;
  if (has_commons()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->commons(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:User.LevelRewardsResp)
}

::google::protobuf::uint8* LevelRewardsResp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:User.LevelRewardsResp)
  // required .DataCommon.CommonItemsCPP commons = 1;
  if (has_commons()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->commons(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:User.LevelRewardsResp)
  return target;
}

int LevelRewardsResp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .DataCommon.CommonItemsCPP commons = 1;
    if (has_commons()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->commons());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LevelRewardsResp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const LevelRewardsResp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const LevelRewardsResp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void LevelRewardsResp::MergeFrom(const LevelRewardsResp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_commons()) {
      mutable_commons()->::DataCommon::CommonItemsCPP::MergeFrom(from.commons());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void LevelRewardsResp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LevelRewardsResp::CopyFrom(const LevelRewardsResp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LevelRewardsResp::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (has_commons()) {
    if (!this->commons().IsInitialized()) return false;
  }
  return true;
}

void LevelRewardsResp::Swap(LevelRewardsResp* other) {
  if (other != this) {
    std::swap(commons_, other->commons_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata LevelRewardsResp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = LevelRewardsResp_descriptor_;
  metadata.reflection = LevelRewardsResp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

DaliyShareReq::DaliyShareReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:User.DaliyShareReq)
}

void DaliyShareReq::InitAsDefaultInstance() {
}

DaliyShareReq::DaliyShareReq(const DaliyShareReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:User.DaliyShareReq)
}

void DaliyShareReq::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DaliyShareReq::~DaliyShareReq() {
  // @@protoc_insertion_point(destructor:User.DaliyShareReq)
  SharedDtor();
}

void DaliyShareReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void DaliyShareReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DaliyShareReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DaliyShareReq_descriptor_;
}

const DaliyShareReq& DaliyShareReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_User_2eproto();
  return *default_instance_;
}

DaliyShareReq* DaliyShareReq::default_instance_ = NULL;

DaliyShareReq* DaliyShareReq::New() const {
  return new DaliyShareReq;
}

void DaliyShareReq::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool DaliyShareReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:User.DaliyShareReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:User.DaliyShareReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:User.DaliyShareReq)
  return false;
#undef DO_
}

void DaliyShareReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:User.DaliyShareReq)
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:User.DaliyShareReq)
}

::google::protobuf::uint8* DaliyShareReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:User.DaliyShareReq)
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:User.DaliyShareReq)
  return target;
}

int DaliyShareReq::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DaliyShareReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const DaliyShareReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const DaliyShareReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void DaliyShareReq::MergeFrom(const DaliyShareReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void DaliyShareReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DaliyShareReq::CopyFrom(const DaliyShareReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DaliyShareReq::IsInitialized() const {

  return true;
}

void DaliyShareReq::Swap(DaliyShareReq* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata DaliyShareReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DaliyShareReq_descriptor_;
  metadata.reflection = DaliyShareReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int DaliyShareResp::kDaysFieldNumber;
const int DaliyShareResp::kRewardtsFieldNumber;
#endif  // !_MSC_VER

DaliyShareResp::DaliyShareResp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:User.DaliyShareResp)
}

void DaliyShareResp::InitAsDefaultInstance() {
}

DaliyShareResp::DaliyShareResp(const DaliyShareResp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:User.DaliyShareResp)
}

void DaliyShareResp::SharedCtor() {
  _cached_size_ = 0;
  days_ = 0u;
  rewardts_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DaliyShareResp::~DaliyShareResp() {
  // @@protoc_insertion_point(destructor:User.DaliyShareResp)
  SharedDtor();
}

void DaliyShareResp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void DaliyShareResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DaliyShareResp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DaliyShareResp_descriptor_;
}

const DaliyShareResp& DaliyShareResp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_User_2eproto();
  return *default_instance_;
}

DaliyShareResp* DaliyShareResp::default_instance_ = NULL;

DaliyShareResp* DaliyShareResp::New() const {
  return new DaliyShareResp;
}

void DaliyShareResp::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<DaliyShareResp*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(days_, rewardts_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool DaliyShareResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:User.DaliyShareResp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 days = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &days_)));
          set_has_days();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_rewardts;
        break;
      }

      // required uint32 rewardts = 2;
      case 2: {
        if (tag == 16) {
         parse_rewardts:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &rewardts_)));
          set_has_rewardts();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:User.DaliyShareResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:User.DaliyShareResp)
  return false;
#undef DO_
}

void DaliyShareResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:User.DaliyShareResp)
  // required uint32 days = 1;
  if (has_days()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->days(), output);
  }

  // required uint32 rewardts = 2;
  if (has_rewardts()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->rewardts(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:User.DaliyShareResp)
}

::google::protobuf::uint8* DaliyShareResp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:User.DaliyShareResp)
  // required uint32 days = 1;
  if (has_days()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->days(), target);
  }

  // required uint32 rewardts = 2;
  if (has_rewardts()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->rewardts(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:User.DaliyShareResp)
  return target;
}

int DaliyShareResp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 days = 1;
    if (has_days()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->days());
    }

    // required uint32 rewardts = 2;
    if (has_rewardts()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->rewardts());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DaliyShareResp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const DaliyShareResp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const DaliyShareResp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void DaliyShareResp::MergeFrom(const DaliyShareResp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_days()) {
      set_days(from.days());
    }
    if (from.has_rewardts()) {
      set_rewardts(from.rewardts());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void DaliyShareResp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DaliyShareResp::CopyFrom(const DaliyShareResp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DaliyShareResp::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void DaliyShareResp::Swap(DaliyShareResp* other) {
  if (other != this) {
    std::swap(days_, other->days_);
    std::swap(rewardts_, other->rewardts_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata DaliyShareResp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DaliyShareResp_descriptor_;
  metadata.reflection = DaliyShareResp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

ShareRewardsReq::ShareRewardsReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:User.ShareRewardsReq)
}

void ShareRewardsReq::InitAsDefaultInstance() {
}

ShareRewardsReq::ShareRewardsReq(const ShareRewardsReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:User.ShareRewardsReq)
}

void ShareRewardsReq::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ShareRewardsReq::~ShareRewardsReq() {
  // @@protoc_insertion_point(destructor:User.ShareRewardsReq)
  SharedDtor();
}

void ShareRewardsReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ShareRewardsReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ShareRewardsReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ShareRewardsReq_descriptor_;
}

const ShareRewardsReq& ShareRewardsReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_User_2eproto();
  return *default_instance_;
}

ShareRewardsReq* ShareRewardsReq::default_instance_ = NULL;

ShareRewardsReq* ShareRewardsReq::New() const {
  return new ShareRewardsReq;
}

void ShareRewardsReq::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ShareRewardsReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:User.ShareRewardsReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:User.ShareRewardsReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:User.ShareRewardsReq)
  return false;
#undef DO_
}

void ShareRewardsReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:User.ShareRewardsReq)
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:User.ShareRewardsReq)
}

::google::protobuf::uint8* ShareRewardsReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:User.ShareRewardsReq)
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:User.ShareRewardsReq)
  return target;
}

int ShareRewardsReq::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ShareRewardsReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ShareRewardsReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ShareRewardsReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ShareRewardsReq::MergeFrom(const ShareRewardsReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ShareRewardsReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ShareRewardsReq::CopyFrom(const ShareRewardsReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ShareRewardsReq::IsInitialized() const {

  return true;
}

void ShareRewardsReq::Swap(ShareRewardsReq* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ShareRewardsReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ShareRewardsReq_descriptor_;
  metadata.reflection = ShareRewardsReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ShareRewardsResp::kCommonsFieldNumber;
const int ShareRewardsResp::kRewardtsFieldNumber;
#endif  // !_MSC_VER

ShareRewardsResp::ShareRewardsResp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:User.ShareRewardsResp)
}

void ShareRewardsResp::InitAsDefaultInstance() {
  commons_ = const_cast< ::DataCommon::CommonItemsCPP*>(&::DataCommon::CommonItemsCPP::default_instance());
}

ShareRewardsResp::ShareRewardsResp(const ShareRewardsResp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:User.ShareRewardsResp)
}

void ShareRewardsResp::SharedCtor() {
  _cached_size_ = 0;
  commons_ = NULL;
  rewardts_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ShareRewardsResp::~ShareRewardsResp() {
  // @@protoc_insertion_point(destructor:User.ShareRewardsResp)
  SharedDtor();
}

void ShareRewardsResp::SharedDtor() {
  if (this != default_instance_) {
    delete commons_;
  }
}

void ShareRewardsResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ShareRewardsResp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ShareRewardsResp_descriptor_;
}

const ShareRewardsResp& ShareRewardsResp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_User_2eproto();
  return *default_instance_;
}

ShareRewardsResp* ShareRewardsResp::default_instance_ = NULL;

ShareRewardsResp* ShareRewardsResp::New() const {
  return new ShareRewardsResp;
}

void ShareRewardsResp::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    if (has_commons()) {
      if (commons_ != NULL) commons_->::DataCommon::CommonItemsCPP::Clear();
    }
    rewardts_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ShareRewardsResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:User.ShareRewardsResp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .DataCommon.CommonItemsCPP commons = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_commons()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_rewardts;
        break;
      }

      // required uint32 rewardts = 2;
      case 2: {
        if (tag == 16) {
         parse_rewardts:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &rewardts_)));
          set_has_rewardts();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:User.ShareRewardsResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:User.ShareRewardsResp)
  return false;
#undef DO_
}

void ShareRewardsResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:User.ShareRewardsResp)
  // required .DataCommon.CommonItemsCPP commons = 1;
  if (has_commons()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->commons(), output);
  }

  // required uint32 rewardts = 2;
  if (has_rewardts()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->rewardts(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:User.ShareRewardsResp)
}

::google::protobuf::uint8* ShareRewardsResp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:User.ShareRewardsResp)
  // required .DataCommon.CommonItemsCPP commons = 1;
  if (has_commons()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->commons(), target);
  }

  // required uint32 rewardts = 2;
  if (has_rewardts()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->rewardts(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:User.ShareRewardsResp)
  return target;
}

int ShareRewardsResp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .DataCommon.CommonItemsCPP commons = 1;
    if (has_commons()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->commons());
    }

    // required uint32 rewardts = 2;
    if (has_rewardts()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->rewardts());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ShareRewardsResp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ShareRewardsResp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ShareRewardsResp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ShareRewardsResp::MergeFrom(const ShareRewardsResp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_commons()) {
      mutable_commons()->::DataCommon::CommonItemsCPP::MergeFrom(from.commons());
    }
    if (from.has_rewardts()) {
      set_rewardts(from.rewardts());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ShareRewardsResp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ShareRewardsResp::CopyFrom(const ShareRewardsResp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ShareRewardsResp::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  if (has_commons()) {
    if (!this->commons().IsInitialized()) return false;
  }
  return true;
}

void ShareRewardsResp::Swap(ShareRewardsResp* other) {
  if (other != this) {
    std::swap(commons_, other->commons_);
    std::swap(rewardts_, other->rewardts_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ShareRewardsResp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ShareRewardsResp_descriptor_;
  metadata.reflection = ShareRewardsResp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ShareTotalRewardsReq::kDayFieldNumber;
#endif  // !_MSC_VER

ShareTotalRewardsReq::ShareTotalRewardsReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:User.ShareTotalRewardsReq)
}

void ShareTotalRewardsReq::InitAsDefaultInstance() {
}

ShareTotalRewardsReq::ShareTotalRewardsReq(const ShareTotalRewardsReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:User.ShareTotalRewardsReq)
}

void ShareTotalRewardsReq::SharedCtor() {
  _cached_size_ = 0;
  day_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ShareTotalRewardsReq::~ShareTotalRewardsReq() {
  // @@protoc_insertion_point(destructor:User.ShareTotalRewardsReq)
  SharedDtor();
}

void ShareTotalRewardsReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ShareTotalRewardsReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ShareTotalRewardsReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ShareTotalRewardsReq_descriptor_;
}

const ShareTotalRewardsReq& ShareTotalRewardsReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_User_2eproto();
  return *default_instance_;
}

ShareTotalRewardsReq* ShareTotalRewardsReq::default_instance_ = NULL;

ShareTotalRewardsReq* ShareTotalRewardsReq::New() const {
  return new ShareTotalRewardsReq;
}

void ShareTotalRewardsReq::Clear() {
  day_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ShareTotalRewardsReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:User.ShareTotalRewardsReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 day = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &day_)));
          set_has_day();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:User.ShareTotalRewardsReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:User.ShareTotalRewardsReq)
  return false;
#undef DO_
}

void ShareTotalRewardsReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:User.ShareTotalRewardsReq)
  // required uint32 day = 1;
  if (has_day()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->day(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:User.ShareTotalRewardsReq)
}

::google::protobuf::uint8* ShareTotalRewardsReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:User.ShareTotalRewardsReq)
  // required uint32 day = 1;
  if (has_day()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->day(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:User.ShareTotalRewardsReq)
  return target;
}

int ShareTotalRewardsReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 day = 1;
    if (has_day()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->day());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ShareTotalRewardsReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ShareTotalRewardsReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ShareTotalRewardsReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ShareTotalRewardsReq::MergeFrom(const ShareTotalRewardsReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_day()) {
      set_day(from.day());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ShareTotalRewardsReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ShareTotalRewardsReq::CopyFrom(const ShareTotalRewardsReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ShareTotalRewardsReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void ShareTotalRewardsReq::Swap(ShareTotalRewardsReq* other) {
  if (other != this) {
    std::swap(day_, other->day_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ShareTotalRewardsReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ShareTotalRewardsReq_descriptor_;
  metadata.reflection = ShareTotalRewardsReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ShareTotalRewardsResp::kCommonsFieldNumber;
const int ShareTotalRewardsResp::kMarksFieldNumber;
#endif  // !_MSC_VER

ShareTotalRewardsResp::ShareTotalRewardsResp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:User.ShareTotalRewardsResp)
}

void ShareTotalRewardsResp::InitAsDefaultInstance() {
  commons_ = const_cast< ::DataCommon::CommonItemsCPP*>(&::DataCommon::CommonItemsCPP::default_instance());
}

ShareTotalRewardsResp::ShareTotalRewardsResp(const ShareTotalRewardsResp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:User.ShareTotalRewardsResp)
}

void ShareTotalRewardsResp::SharedCtor() {
  _cached_size_ = 0;
  commons_ = NULL;
  marks_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ShareTotalRewardsResp::~ShareTotalRewardsResp() {
  // @@protoc_insertion_point(destructor:User.ShareTotalRewardsResp)
  SharedDtor();
}

void ShareTotalRewardsResp::SharedDtor() {
  if (this != default_instance_) {
    delete commons_;
  }
}

void ShareTotalRewardsResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ShareTotalRewardsResp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ShareTotalRewardsResp_descriptor_;
}

const ShareTotalRewardsResp& ShareTotalRewardsResp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_User_2eproto();
  return *default_instance_;
}

ShareTotalRewardsResp* ShareTotalRewardsResp::default_instance_ = NULL;

ShareTotalRewardsResp* ShareTotalRewardsResp::New() const {
  return new ShareTotalRewardsResp;
}

void ShareTotalRewardsResp::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    if (has_commons()) {
      if (commons_ != NULL) commons_->::DataCommon::CommonItemsCPP::Clear();
    }
    marks_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ShareTotalRewardsResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:User.ShareTotalRewardsResp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .DataCommon.CommonItemsCPP commons = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_commons()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_marks;
        break;
      }

      // required uint32 marks = 2;
      case 2: {
        if (tag == 16) {
         parse_marks:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &marks_)));
          set_has_marks();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:User.ShareTotalRewardsResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:User.ShareTotalRewardsResp)
  return false;
#undef DO_
}

void ShareTotalRewardsResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:User.ShareTotalRewardsResp)
  // required .DataCommon.CommonItemsCPP commons = 1;
  if (has_commons()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->commons(), output);
  }

  // required uint32 marks = 2;
  if (has_marks()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->marks(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:User.ShareTotalRewardsResp)
}

::google::protobuf::uint8* ShareTotalRewardsResp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:User.ShareTotalRewardsResp)
  // required .DataCommon.CommonItemsCPP commons = 1;
  if (has_commons()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->commons(), target);
  }

  // required uint32 marks = 2;
  if (has_marks()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->marks(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:User.ShareTotalRewardsResp)
  return target;
}

int ShareTotalRewardsResp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .DataCommon.CommonItemsCPP commons = 1;
    if (has_commons()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->commons());
    }

    // required uint32 marks = 2;
    if (has_marks()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->marks());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ShareTotalRewardsResp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ShareTotalRewardsResp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ShareTotalRewardsResp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ShareTotalRewardsResp::MergeFrom(const ShareTotalRewardsResp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_commons()) {
      mutable_commons()->::DataCommon::CommonItemsCPP::MergeFrom(from.commons());
    }
    if (from.has_marks()) {
      set_marks(from.marks());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ShareTotalRewardsResp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ShareTotalRewardsResp::CopyFrom(const ShareTotalRewardsResp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ShareTotalRewardsResp::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  if (has_commons()) {
    if (!this->commons().IsInitialized()) return false;
  }
  return true;
}

void ShareTotalRewardsResp::Swap(ShareTotalRewardsResp* other) {
  if (other != this) {
    std::swap(commons_, other->commons_);
    std::swap(marks_, other->marks_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ShareTotalRewardsResp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ShareTotalRewardsResp_descriptor_;
  metadata.reflection = ShareTotalRewardsResp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PurchaseCoinReq::kIdFieldNumber;
#endif  // !_MSC_VER

PurchaseCoinReq::PurchaseCoinReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:User.PurchaseCoinReq)
}

void PurchaseCoinReq::InitAsDefaultInstance() {
}

PurchaseCoinReq::PurchaseCoinReq(const PurchaseCoinReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:User.PurchaseCoinReq)
}

void PurchaseCoinReq::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PurchaseCoinReq::~PurchaseCoinReq() {
  // @@protoc_insertion_point(destructor:User.PurchaseCoinReq)
  SharedDtor();
}

void PurchaseCoinReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PurchaseCoinReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PurchaseCoinReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PurchaseCoinReq_descriptor_;
}

const PurchaseCoinReq& PurchaseCoinReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_User_2eproto();
  return *default_instance_;
}

PurchaseCoinReq* PurchaseCoinReq::default_instance_ = NULL;

PurchaseCoinReq* PurchaseCoinReq::New() const {
  return new PurchaseCoinReq;
}

void PurchaseCoinReq::Clear() {
  id_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PurchaseCoinReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:User.PurchaseCoinReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:User.PurchaseCoinReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:User.PurchaseCoinReq)
  return false;
#undef DO_
}

void PurchaseCoinReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:User.PurchaseCoinReq)
  // required uint32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:User.PurchaseCoinReq)
}

::google::protobuf::uint8* PurchaseCoinReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:User.PurchaseCoinReq)
  // required uint32 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:User.PurchaseCoinReq)
  return target;
}

int PurchaseCoinReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->id());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PurchaseCoinReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PurchaseCoinReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PurchaseCoinReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PurchaseCoinReq::MergeFrom(const PurchaseCoinReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PurchaseCoinReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PurchaseCoinReq::CopyFrom(const PurchaseCoinReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PurchaseCoinReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void PurchaseCoinReq::Swap(PurchaseCoinReq* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PurchaseCoinReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PurchaseCoinReq_descriptor_;
  metadata.reflection = PurchaseCoinReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PurchaseCoinResp::kCommonsFieldNumber;
#endif  // !_MSC_VER

PurchaseCoinResp::PurchaseCoinResp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:User.PurchaseCoinResp)
}

void PurchaseCoinResp::InitAsDefaultInstance() {
  commons_ = const_cast< ::DataCommon::CommonItemsCPP*>(&::DataCommon::CommonItemsCPP::default_instance());
}

PurchaseCoinResp::PurchaseCoinResp(const PurchaseCoinResp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:User.PurchaseCoinResp)
}

void PurchaseCoinResp::SharedCtor() {
  _cached_size_ = 0;
  commons_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PurchaseCoinResp::~PurchaseCoinResp() {
  // @@protoc_insertion_point(destructor:User.PurchaseCoinResp)
  SharedDtor();
}

void PurchaseCoinResp::SharedDtor() {
  if (this != default_instance_) {
    delete commons_;
  }
}

void PurchaseCoinResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PurchaseCoinResp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PurchaseCoinResp_descriptor_;
}

const PurchaseCoinResp& PurchaseCoinResp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_User_2eproto();
  return *default_instance_;
}

PurchaseCoinResp* PurchaseCoinResp::default_instance_ = NULL;

PurchaseCoinResp* PurchaseCoinResp::New() const {
  return new PurchaseCoinResp;
}

void PurchaseCoinResp::Clear() {
  if (has_commons()) {
    if (commons_ != NULL) commons_->::DataCommon::CommonItemsCPP::Clear();
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PurchaseCoinResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:User.PurchaseCoinResp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .DataCommon.CommonItemsCPP commons = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_commons()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:User.PurchaseCoinResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:User.PurchaseCoinResp)
  return false;
#undef DO_
}

void PurchaseCoinResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:User.PurchaseCoinResp)
  // required .DataCommon.CommonItemsCPP commons = 1;
  if (has_commons()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->commons(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:User.PurchaseCoinResp)
}

::google::protobuf::uint8* PurchaseCoinResp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:User.PurchaseCoinResp)
  // required .DataCommon.CommonItemsCPP commons = 1;
  if (has_commons()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->commons(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:User.PurchaseCoinResp)
  return target;
}

int PurchaseCoinResp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .DataCommon.CommonItemsCPP commons = 1;
    if (has_commons()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->commons());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PurchaseCoinResp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PurchaseCoinResp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PurchaseCoinResp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PurchaseCoinResp::MergeFrom(const PurchaseCoinResp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_commons()) {
      mutable_commons()->::DataCommon::CommonItemsCPP::MergeFrom(from.commons());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PurchaseCoinResp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PurchaseCoinResp::CopyFrom(const PurchaseCoinResp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PurchaseCoinResp::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (has_commons()) {
    if (!this->commons().IsInitialized()) return false;
  }
  return true;
}

void PurchaseCoinResp::Swap(PurchaseCoinResp* other) {
  if (other != this) {
    std::swap(commons_, other->commons_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PurchaseCoinResp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PurchaseCoinResp_descriptor_;
  metadata.reflection = PurchaseCoinResp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int SignInRewardsReq::kDayFieldNumber;
#endif  // !_MSC_VER

SignInRewardsReq::SignInRewardsReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:User.SignInRewardsReq)
}

void SignInRewardsReq::InitAsDefaultInstance() {
}

SignInRewardsReq::SignInRewardsReq(const SignInRewardsReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:User.SignInRewardsReq)
}

void SignInRewardsReq::SharedCtor() {
  _cached_size_ = 0;
  day_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SignInRewardsReq::~SignInRewardsReq() {
  // @@protoc_insertion_point(destructor:User.SignInRewardsReq)
  SharedDtor();
}

void SignInRewardsReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void SignInRewardsReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SignInRewardsReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SignInRewardsReq_descriptor_;
}

const SignInRewardsReq& SignInRewardsReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_User_2eproto();
  return *default_instance_;
}

SignInRewardsReq* SignInRewardsReq::default_instance_ = NULL;

SignInRewardsReq* SignInRewardsReq::New() const {
  return new SignInRewardsReq;
}

void SignInRewardsReq::Clear() {
  day_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool SignInRewardsReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:User.SignInRewardsReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 day = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &day_)));
          set_has_day();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:User.SignInRewardsReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:User.SignInRewardsReq)
  return false;
#undef DO_
}

void SignInRewardsReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:User.SignInRewardsReq)
  // required uint32 day = 1;
  if (has_day()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->day(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:User.SignInRewardsReq)
}

::google::protobuf::uint8* SignInRewardsReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:User.SignInRewardsReq)
  // required uint32 day = 1;
  if (has_day()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->day(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:User.SignInRewardsReq)
  return target;
}

int SignInRewardsReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 day = 1;
    if (has_day()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->day());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SignInRewardsReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const SignInRewardsReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const SignInRewardsReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SignInRewardsReq::MergeFrom(const SignInRewardsReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_day()) {
      set_day(from.day());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void SignInRewardsReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SignInRewardsReq::CopyFrom(const SignInRewardsReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SignInRewardsReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void SignInRewardsReq::Swap(SignInRewardsReq* other) {
  if (other != this) {
    std::swap(day_, other->day_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata SignInRewardsReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SignInRewardsReq_descriptor_;
  metadata.reflection = SignInRewardsReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int SignInRewardsResp::kCommonsFieldNumber;
const int SignInRewardsResp::kMarksFieldNumber;
#endif  // !_MSC_VER

SignInRewardsResp::SignInRewardsResp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:User.SignInRewardsResp)
}

void SignInRewardsResp::InitAsDefaultInstance() {
  commons_ = const_cast< ::DataCommon::CommonItemsCPP*>(&::DataCommon::CommonItemsCPP::default_instance());
}

SignInRewardsResp::SignInRewardsResp(const SignInRewardsResp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:User.SignInRewardsResp)
}

void SignInRewardsResp::SharedCtor() {
  _cached_size_ = 0;
  commons_ = NULL;
  marks_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SignInRewardsResp::~SignInRewardsResp() {
  // @@protoc_insertion_point(destructor:User.SignInRewardsResp)
  SharedDtor();
}

void SignInRewardsResp::SharedDtor() {
  if (this != default_instance_) {
    delete commons_;
  }
}

void SignInRewardsResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SignInRewardsResp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SignInRewardsResp_descriptor_;
}

const SignInRewardsResp& SignInRewardsResp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_User_2eproto();
  return *default_instance_;
}

SignInRewardsResp* SignInRewardsResp::default_instance_ = NULL;

SignInRewardsResp* SignInRewardsResp::New() const {
  return new SignInRewardsResp;
}

void SignInRewardsResp::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    if (has_commons()) {
      if (commons_ != NULL) commons_->::DataCommon::CommonItemsCPP::Clear();
    }
    marks_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool SignInRewardsResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:User.SignInRewardsResp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .DataCommon.CommonItemsCPP commons = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_commons()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_marks;
        break;
      }

      // required uint32 marks = 2;
      case 2: {
        if (tag == 16) {
         parse_marks:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &marks_)));
          set_has_marks();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:User.SignInRewardsResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:User.SignInRewardsResp)
  return false;
#undef DO_
}

void SignInRewardsResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:User.SignInRewardsResp)
  // optional .DataCommon.CommonItemsCPP commons = 1;
  if (has_commons()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->commons(), output);
  }

  // required uint32 marks = 2;
  if (has_marks()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->marks(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:User.SignInRewardsResp)
}

::google::protobuf::uint8* SignInRewardsResp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:User.SignInRewardsResp)
  // optional .DataCommon.CommonItemsCPP commons = 1;
  if (has_commons()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->commons(), target);
  }

  // required uint32 marks = 2;
  if (has_marks()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->marks(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:User.SignInRewardsResp)
  return target;
}

int SignInRewardsResp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .DataCommon.CommonItemsCPP commons = 1;
    if (has_commons()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->commons());
    }

    // required uint32 marks = 2;
    if (has_marks()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->marks());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SignInRewardsResp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const SignInRewardsResp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const SignInRewardsResp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SignInRewardsResp::MergeFrom(const SignInRewardsResp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_commons()) {
      mutable_commons()->::DataCommon::CommonItemsCPP::MergeFrom(from.commons());
    }
    if (from.has_marks()) {
      set_marks(from.marks());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void SignInRewardsResp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SignInRewardsResp::CopyFrom(const SignInRewardsResp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SignInRewardsResp::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000002) != 0x00000002) return false;

  if (has_commons()) {
    if (!this->commons().IsInitialized()) return false;
  }
  return true;
}

void SignInRewardsResp::Swap(SignInRewardsResp* other) {
  if (other != this) {
    std::swap(commons_, other->commons_);
    std::swap(marks_, other->marks_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata SignInRewardsResp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SignInRewardsResp_descriptor_;
  metadata.reflection = SignInRewardsResp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int SetVersion::kVersionFieldNumber;
#endif  // !_MSC_VER

SetVersion::SetVersion()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:User.SetVersion)
}

void SetVersion::InitAsDefaultInstance() {
}

SetVersion::SetVersion(const SetVersion& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:User.SetVersion)
}

void SetVersion::SharedCtor() {
  _cached_size_ = 0;
  version_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SetVersion::~SetVersion() {
  // @@protoc_insertion_point(destructor:User.SetVersion)
  SharedDtor();
}

void SetVersion::SharedDtor() {
  if (this != default_instance_) {
  }
}

void SetVersion::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SetVersion::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SetVersion_descriptor_;
}

const SetVersion& SetVersion::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_User_2eproto();
  return *default_instance_;
}

SetVersion* SetVersion::default_instance_ = NULL;

SetVersion* SetVersion::New() const {
  return new SetVersion;
}

void SetVersion::Clear() {
  version_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool SetVersion::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:User.SetVersion)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 version = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &version_)));
          set_has_version();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:User.SetVersion)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:User.SetVersion)
  return false;
#undef DO_
}

void SetVersion::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:User.SetVersion)
  // required uint32 version = 1;
  if (has_version()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->version(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:User.SetVersion)
}

::google::protobuf::uint8* SetVersion::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:User.SetVersion)
  // required uint32 version = 1;
  if (has_version()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->version(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:User.SetVersion)
  return target;
}

int SetVersion::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 version = 1;
    if (has_version()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->version());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SetVersion::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const SetVersion* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const SetVersion*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SetVersion::MergeFrom(const SetVersion& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_version()) {
      set_version(from.version());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void SetVersion::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetVersion::CopyFrom(const SetVersion& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetVersion::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void SetVersion::Swap(SetVersion* other) {
  if (other != this) {
    std::swap(version_, other->version_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata SetVersion::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SetVersion_descriptor_;
  metadata.reflection = SetVersion_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int SetFlag::kFlagIdFieldNumber;
const int SetFlag::kIsCostDimaondFieldNumber;
#endif  // !_MSC_VER

SetFlag::SetFlag()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:User.SetFlag)
}

void SetFlag::InitAsDefaultInstance() {
}

SetFlag::SetFlag(const SetFlag& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:User.SetFlag)
}

void SetFlag::SharedCtor() {
  _cached_size_ = 0;
  flagid_ = 0u;
  iscostdimaond_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SetFlag::~SetFlag() {
  // @@protoc_insertion_point(destructor:User.SetFlag)
  SharedDtor();
}

void SetFlag::SharedDtor() {
  if (this != default_instance_) {
  }
}

void SetFlag::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SetFlag::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SetFlag_descriptor_;
}

const SetFlag& SetFlag::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_User_2eproto();
  return *default_instance_;
}

SetFlag* SetFlag::default_instance_ = NULL;

SetFlag* SetFlag::New() const {
  return new SetFlag;
}

void SetFlag::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<SetFlag*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(flagid_, iscostdimaond_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool SetFlag::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:User.SetFlag)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 flagId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &flagid_)));
          set_has_flagid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_isCostDimaond;
        break;
      }

      // optional uint32 isCostDimaond = 2;
      case 2: {
        if (tag == 16) {
         parse_isCostDimaond:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &iscostdimaond_)));
          set_has_iscostdimaond();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:User.SetFlag)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:User.SetFlag)
  return false;
#undef DO_
}

void SetFlag::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:User.SetFlag)
  // required uint32 flagId = 1;
  if (has_flagid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->flagid(), output);
  }

  // optional uint32 isCostDimaond = 2;
  if (has_iscostdimaond()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->iscostdimaond(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:User.SetFlag)
}

::google::protobuf::uint8* SetFlag::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:User.SetFlag)
  // required uint32 flagId = 1;
  if (has_flagid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->flagid(), target);
  }

  // optional uint32 isCostDimaond = 2;
  if (has_iscostdimaond()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->iscostdimaond(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:User.SetFlag)
  return target;
}

int SetFlag::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 flagId = 1;
    if (has_flagid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->flagid());
    }

    // optional uint32 isCostDimaond = 2;
    if (has_iscostdimaond()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->iscostdimaond());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SetFlag::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const SetFlag* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const SetFlag*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SetFlag::MergeFrom(const SetFlag& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_flagid()) {
      set_flagid(from.flagid());
    }
    if (from.has_iscostdimaond()) {
      set_iscostdimaond(from.iscostdimaond());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void SetFlag::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetFlag::CopyFrom(const SetFlag& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetFlag::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void SetFlag::Swap(SetFlag* other) {
  if (other != this) {
    std::swap(flagid_, other->flagid_);
    std::swap(iscostdimaond_, other->iscostdimaond_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata SetFlag::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SetFlag_descriptor_;
  metadata.reflection = SetFlag_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GetFlagResp::kFlagFieldNumber;
const int GetFlagResp::kCommonsFieldNumber;
#endif  // !_MSC_VER

GetFlagResp::GetFlagResp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:User.GetFlagResp)
}

void GetFlagResp::InitAsDefaultInstance() {
  commons_ = const_cast< ::DataCommon::CommonItemsCPP*>(&::DataCommon::CommonItemsCPP::default_instance());
}

GetFlagResp::GetFlagResp(const GetFlagResp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:User.GetFlagResp)
}

void GetFlagResp::SharedCtor() {
  _cached_size_ = 0;
  flag_ = 0u;
  commons_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GetFlagResp::~GetFlagResp() {
  // @@protoc_insertion_point(destructor:User.GetFlagResp)
  SharedDtor();
}

void GetFlagResp::SharedDtor() {
  if (this != default_instance_) {
    delete commons_;
  }
}

void GetFlagResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetFlagResp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetFlagResp_descriptor_;
}

const GetFlagResp& GetFlagResp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_User_2eproto();
  return *default_instance_;
}

GetFlagResp* GetFlagResp::default_instance_ = NULL;

GetFlagResp* GetFlagResp::New() const {
  return new GetFlagResp;
}

void GetFlagResp::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    flag_ = 0u;
    if (has_commons()) {
      if (commons_ != NULL) commons_->::DataCommon::CommonItemsCPP::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GetFlagResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:User.GetFlagResp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 flag = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &flag_)));
          set_has_flag();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_commons;
        break;
      }

      // optional .DataCommon.CommonItemsCPP commons = 2;
      case 2: {
        if (tag == 18) {
         parse_commons:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_commons()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:User.GetFlagResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:User.GetFlagResp)
  return false;
#undef DO_
}

void GetFlagResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:User.GetFlagResp)
  // required uint32 flag = 1;
  if (has_flag()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->flag(), output);
  }

  // optional .DataCommon.CommonItemsCPP commons = 2;
  if (has_commons()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->commons(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:User.GetFlagResp)
}

::google::protobuf::uint8* GetFlagResp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:User.GetFlagResp)
  // required uint32 flag = 1;
  if (has_flag()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->flag(), target);
  }

  // optional .DataCommon.CommonItemsCPP commons = 2;
  if (has_commons()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->commons(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:User.GetFlagResp)
  return target;
}

int GetFlagResp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 flag = 1;
    if (has_flag()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->flag());
    }

    // optional .DataCommon.CommonItemsCPP commons = 2;
    if (has_commons()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->commons());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetFlagResp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GetFlagResp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GetFlagResp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GetFlagResp::MergeFrom(const GetFlagResp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_flag()) {
      set_flag(from.flag());
    }
    if (from.has_commons()) {
      mutable_commons()->::DataCommon::CommonItemsCPP::MergeFrom(from.commons());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GetFlagResp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetFlagResp::CopyFrom(const GetFlagResp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetFlagResp::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (has_commons()) {
    if (!this->commons().IsInitialized()) return false;
  }
  return true;
}

void GetFlagResp::Swap(GetFlagResp* other) {
  if (other != this) {
    std::swap(flag_, other->flag_);
    std::swap(commons_, other->commons_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GetFlagResp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetFlagResp_descriptor_;
  metadata.reflection = GetFlagResp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ThumbsUpCPP::kIndexFieldNumber;
#endif  // !_MSC_VER

ThumbsUpCPP::ThumbsUpCPP()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:User.ThumbsUpCPP)
}

void ThumbsUpCPP::InitAsDefaultInstance() {
}

ThumbsUpCPP::ThumbsUpCPP(const ThumbsUpCPP& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:User.ThumbsUpCPP)
}

void ThumbsUpCPP::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ThumbsUpCPP::~ThumbsUpCPP() {
  // @@protoc_insertion_point(destructor:User.ThumbsUpCPP)
  SharedDtor();
}

void ThumbsUpCPP::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ThumbsUpCPP::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ThumbsUpCPP::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ThumbsUpCPP_descriptor_;
}

const ThumbsUpCPP& ThumbsUpCPP::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_User_2eproto();
  return *default_instance_;
}

ThumbsUpCPP* ThumbsUpCPP::default_instance_ = NULL;

ThumbsUpCPP* ThumbsUpCPP::New() const {
  return new ThumbsUpCPP;
}

void ThumbsUpCPP::Clear() {
  index_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ThumbsUpCPP::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:User.ThumbsUpCPP)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint32 index = 1;
      case 1: {
        if (tag == 8) {
         parse_index:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 8, input, this->mutable_index())));
        } else if (tag == 10) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_index())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(8)) goto parse_index;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:User.ThumbsUpCPP)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:User.ThumbsUpCPP)
  return false;
#undef DO_
}

void ThumbsUpCPP::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:User.ThumbsUpCPP)
  // repeated uint32 index = 1;
  for (int i = 0; i < this->index_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      1, this->index(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:User.ThumbsUpCPP)
}

::google::protobuf::uint8* ThumbsUpCPP::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:User.ThumbsUpCPP)
  // repeated uint32 index = 1;
  for (int i = 0; i < this->index_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(1, this->index(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:User.ThumbsUpCPP)
  return target;
}

int ThumbsUpCPP::ByteSize() const {
  int total_size = 0;

  // repeated uint32 index = 1;
  {
    int data_size = 0;
    for (int i = 0; i < this->index_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->index(i));
    }
    total_size += 1 * this->index_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ThumbsUpCPP::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ThumbsUpCPP* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ThumbsUpCPP*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ThumbsUpCPP::MergeFrom(const ThumbsUpCPP& from) {
  GOOGLE_CHECK_NE(&from, this);
  index_.MergeFrom(from.index_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ThumbsUpCPP::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ThumbsUpCPP::CopyFrom(const ThumbsUpCPP& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ThumbsUpCPP::IsInitialized() const {

  return true;
}

void ThumbsUpCPP::Swap(ThumbsUpCPP* other) {
  if (other != this) {
    index_.Swap(&other->index_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ThumbsUpCPP::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ThumbsUpCPP_descriptor_;
  metadata.reflection = ThumbsUpCPP_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

GetThumbsUpReq::GetThumbsUpReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:User.GetThumbsUpReq)
}

void GetThumbsUpReq::InitAsDefaultInstance() {
}

GetThumbsUpReq::GetThumbsUpReq(const GetThumbsUpReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:User.GetThumbsUpReq)
}

void GetThumbsUpReq::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GetThumbsUpReq::~GetThumbsUpReq() {
  // @@protoc_insertion_point(destructor:User.GetThumbsUpReq)
  SharedDtor();
}

void GetThumbsUpReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GetThumbsUpReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetThumbsUpReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetThumbsUpReq_descriptor_;
}

const GetThumbsUpReq& GetThumbsUpReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_User_2eproto();
  return *default_instance_;
}

GetThumbsUpReq* GetThumbsUpReq::default_instance_ = NULL;

GetThumbsUpReq* GetThumbsUpReq::New() const {
  return new GetThumbsUpReq;
}

void GetThumbsUpReq::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GetThumbsUpReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:User.GetThumbsUpReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:User.GetThumbsUpReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:User.GetThumbsUpReq)
  return false;
#undef DO_
}

void GetThumbsUpReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:User.GetThumbsUpReq)
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:User.GetThumbsUpReq)
}

::google::protobuf::uint8* GetThumbsUpReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:User.GetThumbsUpReq)
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:User.GetThumbsUpReq)
  return target;
}

int GetThumbsUpReq::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetThumbsUpReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GetThumbsUpReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GetThumbsUpReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GetThumbsUpReq::MergeFrom(const GetThumbsUpReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GetThumbsUpReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetThumbsUpReq::CopyFrom(const GetThumbsUpReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetThumbsUpReq::IsInitialized() const {

  return true;
}

void GetThumbsUpReq::Swap(GetThumbsUpReq* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GetThumbsUpReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetThumbsUpReq_descriptor_;
  metadata.reflection = GetThumbsUpReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GetThumbsUpResp::kThumbsupFieldNumber;
#endif  // !_MSC_VER

GetThumbsUpResp::GetThumbsUpResp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:User.GetThumbsUpResp)
}

void GetThumbsUpResp::InitAsDefaultInstance() {
  thumbsup_ = const_cast< ::User::ThumbsUpCPP*>(&::User::ThumbsUpCPP::default_instance());
}

GetThumbsUpResp::GetThumbsUpResp(const GetThumbsUpResp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:User.GetThumbsUpResp)
}

void GetThumbsUpResp::SharedCtor() {
  _cached_size_ = 0;
  thumbsup_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GetThumbsUpResp::~GetThumbsUpResp() {
  // @@protoc_insertion_point(destructor:User.GetThumbsUpResp)
  SharedDtor();
}

void GetThumbsUpResp::SharedDtor() {
  if (this != default_instance_) {
    delete thumbsup_;
  }
}

void GetThumbsUpResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetThumbsUpResp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetThumbsUpResp_descriptor_;
}

const GetThumbsUpResp& GetThumbsUpResp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_User_2eproto();
  return *default_instance_;
}

GetThumbsUpResp* GetThumbsUpResp::default_instance_ = NULL;

GetThumbsUpResp* GetThumbsUpResp::New() const {
  return new GetThumbsUpResp;
}

void GetThumbsUpResp::Clear() {
  if (has_thumbsup()) {
    if (thumbsup_ != NULL) thumbsup_->::User::ThumbsUpCPP::Clear();
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GetThumbsUpResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:User.GetThumbsUpResp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .User.ThumbsUpCPP thumbsup = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_thumbsup()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:User.GetThumbsUpResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:User.GetThumbsUpResp)
  return false;
#undef DO_
}

void GetThumbsUpResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:User.GetThumbsUpResp)
  // required .User.ThumbsUpCPP thumbsup = 1;
  if (has_thumbsup()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->thumbsup(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:User.GetThumbsUpResp)
}

::google::protobuf::uint8* GetThumbsUpResp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:User.GetThumbsUpResp)
  // required .User.ThumbsUpCPP thumbsup = 1;
  if (has_thumbsup()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->thumbsup(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:User.GetThumbsUpResp)
  return target;
}

int GetThumbsUpResp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .User.ThumbsUpCPP thumbsup = 1;
    if (has_thumbsup()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->thumbsup());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetThumbsUpResp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GetThumbsUpResp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GetThumbsUpResp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GetThumbsUpResp::MergeFrom(const GetThumbsUpResp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_thumbsup()) {
      mutable_thumbsup()->::User::ThumbsUpCPP::MergeFrom(from.thumbsup());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GetThumbsUpResp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetThumbsUpResp::CopyFrom(const GetThumbsUpResp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetThumbsUpResp::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void GetThumbsUpResp::Swap(GetThumbsUpResp* other) {
  if (other != this) {
    std::swap(thumbsup_, other->thumbsup_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GetThumbsUpResp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetThumbsUpResp_descriptor_;
  metadata.reflection = GetThumbsUpResp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int RankThumbsUpReq::kOthuidFieldNumber;
const int RankThumbsUpReq::kIndex1FieldNumber;
const int RankThumbsUpReq::kIndex2FieldNumber;
#endif  // !_MSC_VER

RankThumbsUpReq::RankThumbsUpReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:User.RankThumbsUpReq)
}

void RankThumbsUpReq::InitAsDefaultInstance() {
}

RankThumbsUpReq::RankThumbsUpReq(const RankThumbsUpReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:User.RankThumbsUpReq)
}

void RankThumbsUpReq::SharedCtor() {
  _cached_size_ = 0;
  othuid_ = 0u;
  index1_ = 0u;
  index2_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RankThumbsUpReq::~RankThumbsUpReq() {
  // @@protoc_insertion_point(destructor:User.RankThumbsUpReq)
  SharedDtor();
}

void RankThumbsUpReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void RankThumbsUpReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RankThumbsUpReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RankThumbsUpReq_descriptor_;
}

const RankThumbsUpReq& RankThumbsUpReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_User_2eproto();
  return *default_instance_;
}

RankThumbsUpReq* RankThumbsUpReq::default_instance_ = NULL;

RankThumbsUpReq* RankThumbsUpReq::New() const {
  return new RankThumbsUpReq;
}

void RankThumbsUpReq::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<RankThumbsUpReq*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(othuid_, index2_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool RankThumbsUpReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:User.RankThumbsUpReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 othuid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &othuid_)));
          set_has_othuid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_index1;
        break;
      }

      // required uint32 index1 = 2;
      case 2: {
        if (tag == 16) {
         parse_index1:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &index1_)));
          set_has_index1();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_index2;
        break;
      }

      // required uint32 index2 = 3;
      case 3: {
        if (tag == 24) {
         parse_index2:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &index2_)));
          set_has_index2();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:User.RankThumbsUpReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:User.RankThumbsUpReq)
  return false;
#undef DO_
}

void RankThumbsUpReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:User.RankThumbsUpReq)
  // required uint32 othuid = 1;
  if (has_othuid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->othuid(), output);
  }

  // required uint32 index1 = 2;
  if (has_index1()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->index1(), output);
  }

  // required uint32 index2 = 3;
  if (has_index2()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->index2(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:User.RankThumbsUpReq)
}

::google::protobuf::uint8* RankThumbsUpReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:User.RankThumbsUpReq)
  // required uint32 othuid = 1;
  if (has_othuid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->othuid(), target);
  }

  // required uint32 index1 = 2;
  if (has_index1()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->index1(), target);
  }

  // required uint32 index2 = 3;
  if (has_index2()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->index2(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:User.RankThumbsUpReq)
  return target;
}

int RankThumbsUpReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 othuid = 1;
    if (has_othuid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->othuid());
    }

    // required uint32 index1 = 2;
    if (has_index1()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->index1());
    }

    // required uint32 index2 = 3;
    if (has_index2()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->index2());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RankThumbsUpReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const RankThumbsUpReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const RankThumbsUpReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void RankThumbsUpReq::MergeFrom(const RankThumbsUpReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_othuid()) {
      set_othuid(from.othuid());
    }
    if (from.has_index1()) {
      set_index1(from.index1());
    }
    if (from.has_index2()) {
      set_index2(from.index2());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void RankThumbsUpReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RankThumbsUpReq::CopyFrom(const RankThumbsUpReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RankThumbsUpReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  return true;
}

void RankThumbsUpReq::Swap(RankThumbsUpReq* other) {
  if (other != this) {
    std::swap(othuid_, other->othuid_);
    std::swap(index1_, other->index1_);
    std::swap(index2_, other->index2_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata RankThumbsUpReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RankThumbsUpReq_descriptor_;
  metadata.reflection = RankThumbsUpReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int RankThumbsUpResp::kThumbsupFieldNumber;
const int RankThumbsUpResp::kCommonsFieldNumber;
#endif  // !_MSC_VER

RankThumbsUpResp::RankThumbsUpResp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:User.RankThumbsUpResp)
}

void RankThumbsUpResp::InitAsDefaultInstance() {
  thumbsup_ = const_cast< ::User::ThumbsUpCPP*>(&::User::ThumbsUpCPP::default_instance());
  commons_ = const_cast< ::DataCommon::CommonItemsCPP*>(&::DataCommon::CommonItemsCPP::default_instance());
}

RankThumbsUpResp::RankThumbsUpResp(const RankThumbsUpResp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:User.RankThumbsUpResp)
}

void RankThumbsUpResp::SharedCtor() {
  _cached_size_ = 0;
  thumbsup_ = NULL;
  commons_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RankThumbsUpResp::~RankThumbsUpResp() {
  // @@protoc_insertion_point(destructor:User.RankThumbsUpResp)
  SharedDtor();
}

void RankThumbsUpResp::SharedDtor() {
  if (this != default_instance_) {
    delete thumbsup_;
    delete commons_;
  }
}

void RankThumbsUpResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RankThumbsUpResp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RankThumbsUpResp_descriptor_;
}

const RankThumbsUpResp& RankThumbsUpResp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_User_2eproto();
  return *default_instance_;
}

RankThumbsUpResp* RankThumbsUpResp::default_instance_ = NULL;

RankThumbsUpResp* RankThumbsUpResp::New() const {
  return new RankThumbsUpResp;
}

void RankThumbsUpResp::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    if (has_thumbsup()) {
      if (thumbsup_ != NULL) thumbsup_->::User::ThumbsUpCPP::Clear();
    }
    if (has_commons()) {
      if (commons_ != NULL) commons_->::DataCommon::CommonItemsCPP::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool RankThumbsUpResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:User.RankThumbsUpResp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .User.ThumbsUpCPP thumbsup = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_thumbsup()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_commons;
        break;
      }

      // required .DataCommon.CommonItemsCPP commons = 2;
      case 2: {
        if (tag == 18) {
         parse_commons:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_commons()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:User.RankThumbsUpResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:User.RankThumbsUpResp)
  return false;
#undef DO_
}

void RankThumbsUpResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:User.RankThumbsUpResp)
  // required .User.ThumbsUpCPP thumbsup = 1;
  if (has_thumbsup()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->thumbsup(), output);
  }

  // required .DataCommon.CommonItemsCPP commons = 2;
  if (has_commons()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->commons(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:User.RankThumbsUpResp)
}

::google::protobuf::uint8* RankThumbsUpResp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:User.RankThumbsUpResp)
  // required .User.ThumbsUpCPP thumbsup = 1;
  if (has_thumbsup()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->thumbsup(), target);
  }

  // required .DataCommon.CommonItemsCPP commons = 2;
  if (has_commons()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->commons(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:User.RankThumbsUpResp)
  return target;
}

int RankThumbsUpResp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .User.ThumbsUpCPP thumbsup = 1;
    if (has_thumbsup()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->thumbsup());
    }

    // required .DataCommon.CommonItemsCPP commons = 2;
    if (has_commons()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->commons());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RankThumbsUpResp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const RankThumbsUpResp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const RankThumbsUpResp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void RankThumbsUpResp::MergeFrom(const RankThumbsUpResp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_thumbsup()) {
      mutable_thumbsup()->::User::ThumbsUpCPP::MergeFrom(from.thumbsup());
    }
    if (from.has_commons()) {
      mutable_commons()->::DataCommon::CommonItemsCPP::MergeFrom(from.commons());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void RankThumbsUpResp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RankThumbsUpResp::CopyFrom(const RankThumbsUpResp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RankThumbsUpResp::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  if (has_commons()) {
    if (!this->commons().IsInitialized()) return false;
  }
  return true;
}

void RankThumbsUpResp::Swap(RankThumbsUpResp* other) {
  if (other != this) {
    std::swap(thumbsup_, other->thumbsup_);
    std::swap(commons_, other->commons_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata RankThumbsUpResp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RankThumbsUpResp_descriptor_;
  metadata.reflection = RankThumbsUpResp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CSRankThumbsUpReq::kMyuidFieldNumber;
const int CSRankThumbsUpReq::kOthuidFieldNumber;
const int CSRankThumbsUpReq::kIndex1FieldNumber;
const int CSRankThumbsUpReq::kIndex2FieldNumber;
#endif  // !_MSC_VER

CSRankThumbsUpReq::CSRankThumbsUpReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:User.CSRankThumbsUpReq)
}

void CSRankThumbsUpReq::InitAsDefaultInstance() {
}

CSRankThumbsUpReq::CSRankThumbsUpReq(const CSRankThumbsUpReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:User.CSRankThumbsUpReq)
}

void CSRankThumbsUpReq::SharedCtor() {
  _cached_size_ = 0;
  myuid_ = 0u;
  othuid_ = 0u;
  index1_ = 0u;
  index2_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CSRankThumbsUpReq::~CSRankThumbsUpReq() {
  // @@protoc_insertion_point(destructor:User.CSRankThumbsUpReq)
  SharedDtor();
}

void CSRankThumbsUpReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CSRankThumbsUpReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CSRankThumbsUpReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CSRankThumbsUpReq_descriptor_;
}

const CSRankThumbsUpReq& CSRankThumbsUpReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_User_2eproto();
  return *default_instance_;
}

CSRankThumbsUpReq* CSRankThumbsUpReq::default_instance_ = NULL;

CSRankThumbsUpReq* CSRankThumbsUpReq::New() const {
  return new CSRankThumbsUpReq;
}

void CSRankThumbsUpReq::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<CSRankThumbsUpReq*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(myuid_, index2_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CSRankThumbsUpReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:User.CSRankThumbsUpReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 myuid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &myuid_)));
          set_has_myuid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_othuid;
        break;
      }

      // required uint32 othuid = 2;
      case 2: {
        if (tag == 16) {
         parse_othuid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &othuid_)));
          set_has_othuid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_index1;
        break;
      }

      // required uint32 index1 = 3;
      case 3: {
        if (tag == 24) {
         parse_index1:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &index1_)));
          set_has_index1();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_index2;
        break;
      }

      // required uint32 index2 = 4;
      case 4: {
        if (tag == 32) {
         parse_index2:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &index2_)));
          set_has_index2();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:User.CSRankThumbsUpReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:User.CSRankThumbsUpReq)
  return false;
#undef DO_
}

void CSRankThumbsUpReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:User.CSRankThumbsUpReq)
  // required uint32 myuid = 1;
  if (has_myuid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->myuid(), output);
  }

  // required uint32 othuid = 2;
  if (has_othuid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->othuid(), output);
  }

  // required uint32 index1 = 3;
  if (has_index1()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->index1(), output);
  }

  // required uint32 index2 = 4;
  if (has_index2()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->index2(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:User.CSRankThumbsUpReq)
}

::google::protobuf::uint8* CSRankThumbsUpReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:User.CSRankThumbsUpReq)
  // required uint32 myuid = 1;
  if (has_myuid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->myuid(), target);
  }

  // required uint32 othuid = 2;
  if (has_othuid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->othuid(), target);
  }

  // required uint32 index1 = 3;
  if (has_index1()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->index1(), target);
  }

  // required uint32 index2 = 4;
  if (has_index2()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->index2(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:User.CSRankThumbsUpReq)
  return target;
}

int CSRankThumbsUpReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 myuid = 1;
    if (has_myuid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->myuid());
    }

    // required uint32 othuid = 2;
    if (has_othuid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->othuid());
    }

    // required uint32 index1 = 3;
    if (has_index1()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->index1());
    }

    // required uint32 index2 = 4;
    if (has_index2()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->index2());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CSRankThumbsUpReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CSRankThumbsUpReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CSRankThumbsUpReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CSRankThumbsUpReq::MergeFrom(const CSRankThumbsUpReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_myuid()) {
      set_myuid(from.myuid());
    }
    if (from.has_othuid()) {
      set_othuid(from.othuid());
    }
    if (from.has_index1()) {
      set_index1(from.index1());
    }
    if (from.has_index2()) {
      set_index2(from.index2());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CSRankThumbsUpReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CSRankThumbsUpReq::CopyFrom(const CSRankThumbsUpReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CSRankThumbsUpReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;

  return true;
}

void CSRankThumbsUpReq::Swap(CSRankThumbsUpReq* other) {
  if (other != this) {
    std::swap(myuid_, other->myuid_);
    std::swap(othuid_, other->othuid_);
    std::swap(index1_, other->index1_);
    std::swap(index2_, other->index2_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CSRankThumbsUpReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CSRankThumbsUpReq_descriptor_;
  metadata.reflection = CSRankThumbsUpReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CSRankThumbsUpResp::kMyuidFieldNumber;
const int CSRankThumbsUpResp::kIndex1FieldNumber;
const int CSRankThumbsUpResp::kIndex2FieldNumber;
#endif  // !_MSC_VER

CSRankThumbsUpResp::CSRankThumbsUpResp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:User.CSRankThumbsUpResp)
}

void CSRankThumbsUpResp::InitAsDefaultInstance() {
}

CSRankThumbsUpResp::CSRankThumbsUpResp(const CSRankThumbsUpResp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:User.CSRankThumbsUpResp)
}

void CSRankThumbsUpResp::SharedCtor() {
  _cached_size_ = 0;
  myuid_ = 0u;
  index1_ = 0u;
  index2_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CSRankThumbsUpResp::~CSRankThumbsUpResp() {
  // @@protoc_insertion_point(destructor:User.CSRankThumbsUpResp)
  SharedDtor();
}

void CSRankThumbsUpResp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CSRankThumbsUpResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CSRankThumbsUpResp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CSRankThumbsUpResp_descriptor_;
}

const CSRankThumbsUpResp& CSRankThumbsUpResp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_User_2eproto();
  return *default_instance_;
}

CSRankThumbsUpResp* CSRankThumbsUpResp::default_instance_ = NULL;

CSRankThumbsUpResp* CSRankThumbsUpResp::New() const {
  return new CSRankThumbsUpResp;
}

void CSRankThumbsUpResp::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<CSRankThumbsUpResp*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(myuid_, index2_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CSRankThumbsUpResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:User.CSRankThumbsUpResp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 myuid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &myuid_)));
          set_has_myuid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_index1;
        break;
      }

      // required uint32 index1 = 2;
      case 2: {
        if (tag == 16) {
         parse_index1:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &index1_)));
          set_has_index1();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_index2;
        break;
      }

      // required uint32 index2 = 3;
      case 3: {
        if (tag == 24) {
         parse_index2:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &index2_)));
          set_has_index2();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:User.CSRankThumbsUpResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:User.CSRankThumbsUpResp)
  return false;
#undef DO_
}

void CSRankThumbsUpResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:User.CSRankThumbsUpResp)
  // required uint32 myuid = 1;
  if (has_myuid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->myuid(), output);
  }

  // required uint32 index1 = 2;
  if (has_index1()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->index1(), output);
  }

  // required uint32 index2 = 3;
  if (has_index2()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->index2(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:User.CSRankThumbsUpResp)
}

::google::protobuf::uint8* CSRankThumbsUpResp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:User.CSRankThumbsUpResp)
  // required uint32 myuid = 1;
  if (has_myuid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->myuid(), target);
  }

  // required uint32 index1 = 2;
  if (has_index1()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->index1(), target);
  }

  // required uint32 index2 = 3;
  if (has_index2()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->index2(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:User.CSRankThumbsUpResp)
  return target;
}

int CSRankThumbsUpResp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 myuid = 1;
    if (has_myuid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->myuid());
    }

    // required uint32 index1 = 2;
    if (has_index1()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->index1());
    }

    // required uint32 index2 = 3;
    if (has_index2()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->index2());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CSRankThumbsUpResp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CSRankThumbsUpResp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CSRankThumbsUpResp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CSRankThumbsUpResp::MergeFrom(const CSRankThumbsUpResp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_myuid()) {
      set_myuid(from.myuid());
    }
    if (from.has_index1()) {
      set_index1(from.index1());
    }
    if (from.has_index2()) {
      set_index2(from.index2());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CSRankThumbsUpResp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CSRankThumbsUpResp::CopyFrom(const CSRankThumbsUpResp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CSRankThumbsUpResp::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  return true;
}

void CSRankThumbsUpResp::Swap(CSRankThumbsUpResp* other) {
  if (other != this) {
    std::swap(myuid_, other->myuid_);
    std::swap(index1_, other->index1_);
    std::swap(index2_, other->index2_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CSRankThumbsUpResp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CSRankThumbsUpResp_descriptor_;
  metadata.reflection = CSRankThumbsUpResp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

GetWorldChannelHelpCntReq::GetWorldChannelHelpCntReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:User.GetWorldChannelHelpCntReq)
}

void GetWorldChannelHelpCntReq::InitAsDefaultInstance() {
}

GetWorldChannelHelpCntReq::GetWorldChannelHelpCntReq(const GetWorldChannelHelpCntReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:User.GetWorldChannelHelpCntReq)
}

void GetWorldChannelHelpCntReq::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GetWorldChannelHelpCntReq::~GetWorldChannelHelpCntReq() {
  // @@protoc_insertion_point(destructor:User.GetWorldChannelHelpCntReq)
  SharedDtor();
}

void GetWorldChannelHelpCntReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GetWorldChannelHelpCntReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetWorldChannelHelpCntReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetWorldChannelHelpCntReq_descriptor_;
}

const GetWorldChannelHelpCntReq& GetWorldChannelHelpCntReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_User_2eproto();
  return *default_instance_;
}

GetWorldChannelHelpCntReq* GetWorldChannelHelpCntReq::default_instance_ = NULL;

GetWorldChannelHelpCntReq* GetWorldChannelHelpCntReq::New() const {
  return new GetWorldChannelHelpCntReq;
}

void GetWorldChannelHelpCntReq::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GetWorldChannelHelpCntReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:User.GetWorldChannelHelpCntReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:User.GetWorldChannelHelpCntReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:User.GetWorldChannelHelpCntReq)
  return false;
#undef DO_
}

void GetWorldChannelHelpCntReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:User.GetWorldChannelHelpCntReq)
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:User.GetWorldChannelHelpCntReq)
}

::google::protobuf::uint8* GetWorldChannelHelpCntReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:User.GetWorldChannelHelpCntReq)
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:User.GetWorldChannelHelpCntReq)
  return target;
}

int GetWorldChannelHelpCntReq::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetWorldChannelHelpCntReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GetWorldChannelHelpCntReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GetWorldChannelHelpCntReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GetWorldChannelHelpCntReq::MergeFrom(const GetWorldChannelHelpCntReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GetWorldChannelHelpCntReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetWorldChannelHelpCntReq::CopyFrom(const GetWorldChannelHelpCntReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetWorldChannelHelpCntReq::IsInitialized() const {

  return true;
}

void GetWorldChannelHelpCntReq::Swap(GetWorldChannelHelpCntReq* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GetWorldChannelHelpCntReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetWorldChannelHelpCntReq_descriptor_;
  metadata.reflection = GetWorldChannelHelpCntReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GetWorldChannelHelpCntResp::kRemainCntFieldNumber;
#endif  // !_MSC_VER

GetWorldChannelHelpCntResp::GetWorldChannelHelpCntResp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:User.GetWorldChannelHelpCntResp)
}

void GetWorldChannelHelpCntResp::InitAsDefaultInstance() {
}

GetWorldChannelHelpCntResp::GetWorldChannelHelpCntResp(const GetWorldChannelHelpCntResp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:User.GetWorldChannelHelpCntResp)
}

void GetWorldChannelHelpCntResp::SharedCtor() {
  _cached_size_ = 0;
  remaincnt_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GetWorldChannelHelpCntResp::~GetWorldChannelHelpCntResp() {
  // @@protoc_insertion_point(destructor:User.GetWorldChannelHelpCntResp)
  SharedDtor();
}

void GetWorldChannelHelpCntResp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GetWorldChannelHelpCntResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetWorldChannelHelpCntResp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetWorldChannelHelpCntResp_descriptor_;
}

const GetWorldChannelHelpCntResp& GetWorldChannelHelpCntResp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_User_2eproto();
  return *default_instance_;
}

GetWorldChannelHelpCntResp* GetWorldChannelHelpCntResp::default_instance_ = NULL;

GetWorldChannelHelpCntResp* GetWorldChannelHelpCntResp::New() const {
  return new GetWorldChannelHelpCntResp;
}

void GetWorldChannelHelpCntResp::Clear() {
  remaincnt_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GetWorldChannelHelpCntResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:User.GetWorldChannelHelpCntResp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 remainCnt = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &remaincnt_)));
          set_has_remaincnt();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:User.GetWorldChannelHelpCntResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:User.GetWorldChannelHelpCntResp)
  return false;
#undef DO_
}

void GetWorldChannelHelpCntResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:User.GetWorldChannelHelpCntResp)
  // required uint32 remainCnt = 1;
  if (has_remaincnt()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->remaincnt(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:User.GetWorldChannelHelpCntResp)
}

::google::protobuf::uint8* GetWorldChannelHelpCntResp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:User.GetWorldChannelHelpCntResp)
  // required uint32 remainCnt = 1;
  if (has_remaincnt()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->remaincnt(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:User.GetWorldChannelHelpCntResp)
  return target;
}

int GetWorldChannelHelpCntResp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 remainCnt = 1;
    if (has_remaincnt()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->remaincnt());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetWorldChannelHelpCntResp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GetWorldChannelHelpCntResp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GetWorldChannelHelpCntResp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GetWorldChannelHelpCntResp::MergeFrom(const GetWorldChannelHelpCntResp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_remaincnt()) {
      set_remaincnt(from.remaincnt());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GetWorldChannelHelpCntResp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetWorldChannelHelpCntResp::CopyFrom(const GetWorldChannelHelpCntResp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetWorldChannelHelpCntResp::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void GetWorldChannelHelpCntResp::Swap(GetWorldChannelHelpCntResp* other) {
  if (other != this) {
    std::swap(remaincnt_, other->remaincnt_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GetWorldChannelHelpCntResp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetWorldChannelHelpCntResp_descriptor_;
  metadata.reflection = GetWorldChannelHelpCntResp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

WorldChannelHelpReq::WorldChannelHelpReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:User.WorldChannelHelpReq)
}

void WorldChannelHelpReq::InitAsDefaultInstance() {
}

WorldChannelHelpReq::WorldChannelHelpReq(const WorldChannelHelpReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:User.WorldChannelHelpReq)
}

void WorldChannelHelpReq::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

WorldChannelHelpReq::~WorldChannelHelpReq() {
  // @@protoc_insertion_point(destructor:User.WorldChannelHelpReq)
  SharedDtor();
}

void WorldChannelHelpReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void WorldChannelHelpReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* WorldChannelHelpReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return WorldChannelHelpReq_descriptor_;
}

const WorldChannelHelpReq& WorldChannelHelpReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_User_2eproto();
  return *default_instance_;
}

WorldChannelHelpReq* WorldChannelHelpReq::default_instance_ = NULL;

WorldChannelHelpReq* WorldChannelHelpReq::New() const {
  return new WorldChannelHelpReq;
}

void WorldChannelHelpReq::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool WorldChannelHelpReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:User.WorldChannelHelpReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:User.WorldChannelHelpReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:User.WorldChannelHelpReq)
  return false;
#undef DO_
}

void WorldChannelHelpReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:User.WorldChannelHelpReq)
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:User.WorldChannelHelpReq)
}

::google::protobuf::uint8* WorldChannelHelpReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:User.WorldChannelHelpReq)
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:User.WorldChannelHelpReq)
  return target;
}

int WorldChannelHelpReq::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void WorldChannelHelpReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const WorldChannelHelpReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const WorldChannelHelpReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void WorldChannelHelpReq::MergeFrom(const WorldChannelHelpReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void WorldChannelHelpReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WorldChannelHelpReq::CopyFrom(const WorldChannelHelpReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WorldChannelHelpReq::IsInitialized() const {

  return true;
}

void WorldChannelHelpReq::Swap(WorldChannelHelpReq* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata WorldChannelHelpReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = WorldChannelHelpReq_descriptor_;
  metadata.reflection = WorldChannelHelpReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int WorldChannelHelpResp::kRemainCntFieldNumber;
#endif  // !_MSC_VER

WorldChannelHelpResp::WorldChannelHelpResp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:User.WorldChannelHelpResp)
}

void WorldChannelHelpResp::InitAsDefaultInstance() {
}

WorldChannelHelpResp::WorldChannelHelpResp(const WorldChannelHelpResp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:User.WorldChannelHelpResp)
}

void WorldChannelHelpResp::SharedCtor() {
  _cached_size_ = 0;
  remaincnt_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

WorldChannelHelpResp::~WorldChannelHelpResp() {
  // @@protoc_insertion_point(destructor:User.WorldChannelHelpResp)
  SharedDtor();
}

void WorldChannelHelpResp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void WorldChannelHelpResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* WorldChannelHelpResp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return WorldChannelHelpResp_descriptor_;
}

const WorldChannelHelpResp& WorldChannelHelpResp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_User_2eproto();
  return *default_instance_;
}

WorldChannelHelpResp* WorldChannelHelpResp::default_instance_ = NULL;

WorldChannelHelpResp* WorldChannelHelpResp::New() const {
  return new WorldChannelHelpResp;
}

void WorldChannelHelpResp::Clear() {
  remaincnt_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool WorldChannelHelpResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:User.WorldChannelHelpResp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 remainCnt = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &remaincnt_)));
          set_has_remaincnt();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:User.WorldChannelHelpResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:User.WorldChannelHelpResp)
  return false;
#undef DO_
}

void WorldChannelHelpResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:User.WorldChannelHelpResp)
  // required uint32 remainCnt = 1;
  if (has_remaincnt()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->remaincnt(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:User.WorldChannelHelpResp)
}

::google::protobuf::uint8* WorldChannelHelpResp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:User.WorldChannelHelpResp)
  // required uint32 remainCnt = 1;
  if (has_remaincnt()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->remaincnt(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:User.WorldChannelHelpResp)
  return target;
}

int WorldChannelHelpResp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 remainCnt = 1;
    if (has_remaincnt()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->remaincnt());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void WorldChannelHelpResp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const WorldChannelHelpResp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const WorldChannelHelpResp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void WorldChannelHelpResp::MergeFrom(const WorldChannelHelpResp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_remaincnt()) {
      set_remaincnt(from.remaincnt());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void WorldChannelHelpResp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WorldChannelHelpResp::CopyFrom(const WorldChannelHelpResp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WorldChannelHelpResp::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void WorldChannelHelpResp::Swap(WorldChannelHelpResp* other) {
  if (other != this) {
    std::swap(remaincnt_, other->remaincnt_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata WorldChannelHelpResp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = WorldChannelHelpResp_descriptor_;
  metadata.reflection = WorldChannelHelpResp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int SysMail::kTsFieldNumber;
const int SysMail::kStatFieldNumber;
const int SysMail::kSysFieldNumber;
const int SysMail::kRewardFieldNumber;
#endif  // !_MSC_VER

SysMail::SysMail()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:User.SysMail)
}

void SysMail::InitAsDefaultInstance() {
}

SysMail::SysMail(const SysMail& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:User.SysMail)
}

void SysMail::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  ts_ = 0u;
  stat_ = 0u;
  sys_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  reward_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SysMail::~SysMail() {
  // @@protoc_insertion_point(destructor:User.SysMail)
  SharedDtor();
}

void SysMail::SharedDtor() {
  if (sys_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete sys_;
  }
  if (reward_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete reward_;
  }
  if (this != default_instance_) {
  }
}

void SysMail::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SysMail::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SysMail_descriptor_;
}

const SysMail& SysMail::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_User_2eproto();
  return *default_instance_;
}

SysMail* SysMail::default_instance_ = NULL;

SysMail* SysMail::New() const {
  return new SysMail;
}

void SysMail::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<SysMail*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 15) {
    ZR_(ts_, stat_);
    if (has_sys()) {
      if (sys_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        sys_->clear();
      }
    }
    if (has_reward()) {
      if (reward_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        reward_->clear();
      }
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool SysMail::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:User.SysMail)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 ts = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ts_)));
          set_has_ts();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_stat;
        break;
      }

      // required uint32 stat = 2;
      case 2: {
        if (tag == 16) {
         parse_stat:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &stat_)));
          set_has_stat();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_sys;
        break;
      }

      // required bytes sys = 3;
      case 3: {
        if (tag == 26) {
         parse_sys:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_sys()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_reward;
        break;
      }

      // required bytes reward = 4;
      case 4: {
        if (tag == 34) {
         parse_reward:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_reward()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:User.SysMail)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:User.SysMail)
  return false;
#undef DO_
}

void SysMail::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:User.SysMail)
  // required uint32 ts = 1;
  if (has_ts()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->ts(), output);
  }

  // required uint32 stat = 2;
  if (has_stat()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->stat(), output);
  }

  // required bytes sys = 3;
  if (has_sys()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->sys(), output);
  }

  // required bytes reward = 4;
  if (has_reward()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->reward(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:User.SysMail)
}

::google::protobuf::uint8* SysMail::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:User.SysMail)
  // required uint32 ts = 1;
  if (has_ts()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->ts(), target);
  }

  // required uint32 stat = 2;
  if (has_stat()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->stat(), target);
  }

  // required bytes sys = 3;
  if (has_sys()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->sys(), target);
  }

  // required bytes reward = 4;
  if (has_reward()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->reward(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:User.SysMail)
  return target;
}

int SysMail::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 ts = 1;
    if (has_ts()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->ts());
    }

    // required uint32 stat = 2;
    if (has_stat()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->stat());
    }

    // required bytes sys = 3;
    if (has_sys()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->sys());
    }

    // required bytes reward = 4;
    if (has_reward()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->reward());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SysMail::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const SysMail* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const SysMail*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SysMail::MergeFrom(const SysMail& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_ts()) {
      set_ts(from.ts());
    }
    if (from.has_stat()) {
      set_stat(from.stat());
    }
    if (from.has_sys()) {
      set_sys(from.sys());
    }
    if (from.has_reward()) {
      set_reward(from.reward());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void SysMail::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SysMail::CopyFrom(const SysMail& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SysMail::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;

  return true;
}

void SysMail::Swap(SysMail* other) {
  if (other != this) {
    std::swap(ts_, other->ts_);
    std::swap(stat_, other->stat_);
    std::swap(sys_, other->sys_);
    std::swap(reward_, other->reward_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata SysMail::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SysMail_descriptor_;
  metadata.reflection = SysMail_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

RequestSysMail::RequestSysMail()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:User.RequestSysMail)
}

void RequestSysMail::InitAsDefaultInstance() {
}

RequestSysMail::RequestSysMail(const RequestSysMail& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:User.RequestSysMail)
}

void RequestSysMail::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RequestSysMail::~RequestSysMail() {
  // @@protoc_insertion_point(destructor:User.RequestSysMail)
  SharedDtor();
}

void RequestSysMail::SharedDtor() {
  if (this != default_instance_) {
  }
}

void RequestSysMail::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RequestSysMail::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RequestSysMail_descriptor_;
}

const RequestSysMail& RequestSysMail::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_User_2eproto();
  return *default_instance_;
}

RequestSysMail* RequestSysMail::default_instance_ = NULL;

RequestSysMail* RequestSysMail::New() const {
  return new RequestSysMail;
}

void RequestSysMail::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool RequestSysMail::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:User.RequestSysMail)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:User.RequestSysMail)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:User.RequestSysMail)
  return false;
#undef DO_
}

void RequestSysMail::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:User.RequestSysMail)
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:User.RequestSysMail)
}

::google::protobuf::uint8* RequestSysMail::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:User.RequestSysMail)
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:User.RequestSysMail)
  return target;
}

int RequestSysMail::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RequestSysMail::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const RequestSysMail* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const RequestSysMail*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void RequestSysMail::MergeFrom(const RequestSysMail& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void RequestSysMail::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RequestSysMail::CopyFrom(const RequestSysMail& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RequestSysMail::IsInitialized() const {

  return true;
}

void RequestSysMail::Swap(RequestSysMail* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata RequestSysMail::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RequestSysMail_descriptor_;
  metadata.reflection = RequestSysMail_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ReplySysMail::kMailFieldNumber;
#endif  // !_MSC_VER

ReplySysMail::ReplySysMail()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:User.ReplySysMail)
}

void ReplySysMail::InitAsDefaultInstance() {
}

ReplySysMail::ReplySysMail(const ReplySysMail& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:User.ReplySysMail)
}

void ReplySysMail::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ReplySysMail::~ReplySysMail() {
  // @@protoc_insertion_point(destructor:User.ReplySysMail)
  SharedDtor();
}

void ReplySysMail::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ReplySysMail::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ReplySysMail::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ReplySysMail_descriptor_;
}

const ReplySysMail& ReplySysMail::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_User_2eproto();
  return *default_instance_;
}

ReplySysMail* ReplySysMail::default_instance_ = NULL;

ReplySysMail* ReplySysMail::New() const {
  return new ReplySysMail;
}

void ReplySysMail::Clear() {
  mail_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ReplySysMail::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:User.ReplySysMail)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .User.SysMail mail = 1;
      case 1: {
        if (tag == 10) {
         parse_mail:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_mail()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_mail;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:User.ReplySysMail)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:User.ReplySysMail)
  return false;
#undef DO_
}

void ReplySysMail::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:User.ReplySysMail)
  // repeated .User.SysMail mail = 1;
  for (int i = 0; i < this->mail_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->mail(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:User.ReplySysMail)
}

::google::protobuf::uint8* ReplySysMail::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:User.ReplySysMail)
  // repeated .User.SysMail mail = 1;
  for (int i = 0; i < this->mail_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->mail(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:User.ReplySysMail)
  return target;
}

int ReplySysMail::ByteSize() const {
  int total_size = 0;

  // repeated .User.SysMail mail = 1;
  total_size += 1 * this->mail_size();
  for (int i = 0; i < this->mail_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->mail(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ReplySysMail::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ReplySysMail* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ReplySysMail*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ReplySysMail::MergeFrom(const ReplySysMail& from) {
  GOOGLE_CHECK_NE(&from, this);
  mail_.MergeFrom(from.mail_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ReplySysMail::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReplySysMail::CopyFrom(const ReplySysMail& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReplySysMail::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->mail())) return false;
  return true;
}

void ReplySysMail::Swap(ReplySysMail* other) {
  if (other != this) {
    mail_.Swap(&other->mail_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ReplySysMail::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ReplySysMail_descriptor_;
  metadata.reflection = ReplySysMail_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int RequestMailRead::kTsFieldNumber;
#endif  // !_MSC_VER

RequestMailRead::RequestMailRead()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:User.RequestMailRead)
}

void RequestMailRead::InitAsDefaultInstance() {
}

RequestMailRead::RequestMailRead(const RequestMailRead& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:User.RequestMailRead)
}

void RequestMailRead::SharedCtor() {
  _cached_size_ = 0;
  ts_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RequestMailRead::~RequestMailRead() {
  // @@protoc_insertion_point(destructor:User.RequestMailRead)
  SharedDtor();
}

void RequestMailRead::SharedDtor() {
  if (this != default_instance_) {
  }
}

void RequestMailRead::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RequestMailRead::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RequestMailRead_descriptor_;
}

const RequestMailRead& RequestMailRead::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_User_2eproto();
  return *default_instance_;
}

RequestMailRead* RequestMailRead::default_instance_ = NULL;

RequestMailRead* RequestMailRead::New() const {
  return new RequestMailRead;
}

void RequestMailRead::Clear() {
  ts_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool RequestMailRead::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:User.RequestMailRead)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 ts = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ts_)));
          set_has_ts();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:User.RequestMailRead)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:User.RequestMailRead)
  return false;
#undef DO_
}

void RequestMailRead::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:User.RequestMailRead)
  // required uint32 ts = 1;
  if (has_ts()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->ts(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:User.RequestMailRead)
}

::google::protobuf::uint8* RequestMailRead::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:User.RequestMailRead)
  // required uint32 ts = 1;
  if (has_ts()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->ts(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:User.RequestMailRead)
  return target;
}

int RequestMailRead::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 ts = 1;
    if (has_ts()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->ts());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RequestMailRead::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const RequestMailRead* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const RequestMailRead*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void RequestMailRead::MergeFrom(const RequestMailRead& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_ts()) {
      set_ts(from.ts());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void RequestMailRead::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RequestMailRead::CopyFrom(const RequestMailRead& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RequestMailRead::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void RequestMailRead::Swap(RequestMailRead* other) {
  if (other != this) {
    std::swap(ts_, other->ts_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata RequestMailRead::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RequestMailRead_descriptor_;
  metadata.reflection = RequestMailRead_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ReplyMailRead::kTsFieldNumber;
const int ReplyMailRead::kStatFieldNumber;
#endif  // !_MSC_VER

ReplyMailRead::ReplyMailRead()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:User.ReplyMailRead)
}

void ReplyMailRead::InitAsDefaultInstance() {
}

ReplyMailRead::ReplyMailRead(const ReplyMailRead& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:User.ReplyMailRead)
}

void ReplyMailRead::SharedCtor() {
  _cached_size_ = 0;
  ts_ = 0u;
  stat_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ReplyMailRead::~ReplyMailRead() {
  // @@protoc_insertion_point(destructor:User.ReplyMailRead)
  SharedDtor();
}

void ReplyMailRead::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ReplyMailRead::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ReplyMailRead::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ReplyMailRead_descriptor_;
}

const ReplyMailRead& ReplyMailRead::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_User_2eproto();
  return *default_instance_;
}

ReplyMailRead* ReplyMailRead::default_instance_ = NULL;

ReplyMailRead* ReplyMailRead::New() const {
  return new ReplyMailRead;
}

void ReplyMailRead::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<ReplyMailRead*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(ts_, stat_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ReplyMailRead::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:User.ReplyMailRead)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 ts = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ts_)));
          set_has_ts();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_stat;
        break;
      }

      // required uint32 stat = 2;
      case 2: {
        if (tag == 16) {
         parse_stat:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &stat_)));
          set_has_stat();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:User.ReplyMailRead)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:User.ReplyMailRead)
  return false;
#undef DO_
}

void ReplyMailRead::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:User.ReplyMailRead)
  // required uint32 ts = 1;
  if (has_ts()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->ts(), output);
  }

  // required uint32 stat = 2;
  if (has_stat()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->stat(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:User.ReplyMailRead)
}

::google::protobuf::uint8* ReplyMailRead::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:User.ReplyMailRead)
  // required uint32 ts = 1;
  if (has_ts()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->ts(), target);
  }

  // required uint32 stat = 2;
  if (has_stat()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->stat(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:User.ReplyMailRead)
  return target;
}

int ReplyMailRead::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 ts = 1;
    if (has_ts()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->ts());
    }

    // required uint32 stat = 2;
    if (has_stat()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->stat());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ReplyMailRead::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ReplyMailRead* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ReplyMailRead*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ReplyMailRead::MergeFrom(const ReplyMailRead& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_ts()) {
      set_ts(from.ts());
    }
    if (from.has_stat()) {
      set_stat(from.stat());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ReplyMailRead::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReplyMailRead::CopyFrom(const ReplyMailRead& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReplyMailRead::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void ReplyMailRead::Swap(ReplyMailRead* other) {
  if (other != this) {
    std::swap(ts_, other->ts_);
    std::swap(stat_, other->stat_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ReplyMailRead::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ReplyMailRead_descriptor_;
  metadata.reflection = ReplyMailRead_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int RequestMailGet::kTsFieldNumber;
#endif  // !_MSC_VER

RequestMailGet::RequestMailGet()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:User.RequestMailGet)
}

void RequestMailGet::InitAsDefaultInstance() {
}

RequestMailGet::RequestMailGet(const RequestMailGet& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:User.RequestMailGet)
}

void RequestMailGet::SharedCtor() {
  _cached_size_ = 0;
  ts_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RequestMailGet::~RequestMailGet() {
  // @@protoc_insertion_point(destructor:User.RequestMailGet)
  SharedDtor();
}

void RequestMailGet::SharedDtor() {
  if (this != default_instance_) {
  }
}

void RequestMailGet::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RequestMailGet::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RequestMailGet_descriptor_;
}

const RequestMailGet& RequestMailGet::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_User_2eproto();
  return *default_instance_;
}

RequestMailGet* RequestMailGet::default_instance_ = NULL;

RequestMailGet* RequestMailGet::New() const {
  return new RequestMailGet;
}

void RequestMailGet::Clear() {
  ts_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool RequestMailGet::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:User.RequestMailGet)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 ts = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ts_)));
          set_has_ts();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:User.RequestMailGet)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:User.RequestMailGet)
  return false;
#undef DO_
}

void RequestMailGet::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:User.RequestMailGet)
  // required uint32 ts = 1;
  if (has_ts()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->ts(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:User.RequestMailGet)
}

::google::protobuf::uint8* RequestMailGet::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:User.RequestMailGet)
  // required uint32 ts = 1;
  if (has_ts()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->ts(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:User.RequestMailGet)
  return target;
}

int RequestMailGet::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 ts = 1;
    if (has_ts()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->ts());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RequestMailGet::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const RequestMailGet* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const RequestMailGet*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void RequestMailGet::MergeFrom(const RequestMailGet& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_ts()) {
      set_ts(from.ts());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void RequestMailGet::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RequestMailGet::CopyFrom(const RequestMailGet& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RequestMailGet::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void RequestMailGet::Swap(RequestMailGet* other) {
  if (other != this) {
    std::swap(ts_, other->ts_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata RequestMailGet::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RequestMailGet_descriptor_;
  metadata.reflection = RequestMailGet_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ReplyMailGet::kTsFieldNumber;
const int ReplyMailGet::kStatFieldNumber;
const int ReplyMailGet::kRewardFieldNumber;
#endif  // !_MSC_VER

ReplyMailGet::ReplyMailGet()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:User.ReplyMailGet)
}

void ReplyMailGet::InitAsDefaultInstance() {
  reward_ = const_cast< ::ProtoReward::RewardInfo*>(&::ProtoReward::RewardInfo::default_instance());
}

ReplyMailGet::ReplyMailGet(const ReplyMailGet& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:User.ReplyMailGet)
}

void ReplyMailGet::SharedCtor() {
  _cached_size_ = 0;
  ts_ = 0u;
  stat_ = 0u;
  reward_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ReplyMailGet::~ReplyMailGet() {
  // @@protoc_insertion_point(destructor:User.ReplyMailGet)
  SharedDtor();
}

void ReplyMailGet::SharedDtor() {
  if (this != default_instance_) {
    delete reward_;
  }
}

void ReplyMailGet::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ReplyMailGet::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ReplyMailGet_descriptor_;
}

const ReplyMailGet& ReplyMailGet::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_User_2eproto();
  return *default_instance_;
}

ReplyMailGet* ReplyMailGet::default_instance_ = NULL;

ReplyMailGet* ReplyMailGet::New() const {
  return new ReplyMailGet;
}

void ReplyMailGet::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<ReplyMailGet*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 7) {
    ZR_(ts_, stat_);
    if (has_reward()) {
      if (reward_ != NULL) reward_->::ProtoReward::RewardInfo::Clear();
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ReplyMailGet::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:User.ReplyMailGet)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 ts = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ts_)));
          set_has_ts();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_stat;
        break;
      }

      // required uint32 stat = 2;
      case 2: {
        if (tag == 16) {
         parse_stat:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &stat_)));
          set_has_stat();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_reward;
        break;
      }

      // optional .ProtoReward.RewardInfo reward = 3;
      case 3: {
        if (tag == 26) {
         parse_reward:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_reward()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:User.ReplyMailGet)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:User.ReplyMailGet)
  return false;
#undef DO_
}

void ReplyMailGet::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:User.ReplyMailGet)
  // required uint32 ts = 1;
  if (has_ts()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->ts(), output);
  }

  // required uint32 stat = 2;
  if (has_stat()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->stat(), output);
  }

  // optional .ProtoReward.RewardInfo reward = 3;
  if (has_reward()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->reward(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:User.ReplyMailGet)
}

::google::protobuf::uint8* ReplyMailGet::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:User.ReplyMailGet)
  // required uint32 ts = 1;
  if (has_ts()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->ts(), target);
  }

  // required uint32 stat = 2;
  if (has_stat()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->stat(), target);
  }

  // optional .ProtoReward.RewardInfo reward = 3;
  if (has_reward()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->reward(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:User.ReplyMailGet)
  return target;
}

int ReplyMailGet::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 ts = 1;
    if (has_ts()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->ts());
    }

    // required uint32 stat = 2;
    if (has_stat()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->stat());
    }

    // optional .ProtoReward.RewardInfo reward = 3;
    if (has_reward()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->reward());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ReplyMailGet::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ReplyMailGet* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ReplyMailGet*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ReplyMailGet::MergeFrom(const ReplyMailGet& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_ts()) {
      set_ts(from.ts());
    }
    if (from.has_stat()) {
      set_stat(from.stat());
    }
    if (from.has_reward()) {
      mutable_reward()->::ProtoReward::RewardInfo::MergeFrom(from.reward());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ReplyMailGet::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReplyMailGet::CopyFrom(const ReplyMailGet& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReplyMailGet::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  if (has_reward()) {
    if (!this->reward().IsInitialized()) return false;
  }
  return true;
}

void ReplyMailGet::Swap(ReplyMailGet* other) {
  if (other != this) {
    std::swap(ts_, other->ts_);
    std::swap(stat_, other->stat_);
    std::swap(reward_, other->reward_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ReplyMailGet::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ReplyMailGet_descriptor_;
  metadata.reflection = ReplyMailGet_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int RequestMailDel::kTsFieldNumber;
#endif  // !_MSC_VER

RequestMailDel::RequestMailDel()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:User.RequestMailDel)
}

void RequestMailDel::InitAsDefaultInstance() {
}

RequestMailDel::RequestMailDel(const RequestMailDel& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:User.RequestMailDel)
}

void RequestMailDel::SharedCtor() {
  _cached_size_ = 0;
  ts_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RequestMailDel::~RequestMailDel() {
  // @@protoc_insertion_point(destructor:User.RequestMailDel)
  SharedDtor();
}

void RequestMailDel::SharedDtor() {
  if (this != default_instance_) {
  }
}

void RequestMailDel::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RequestMailDel::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RequestMailDel_descriptor_;
}

const RequestMailDel& RequestMailDel::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_User_2eproto();
  return *default_instance_;
}

RequestMailDel* RequestMailDel::default_instance_ = NULL;

RequestMailDel* RequestMailDel::New() const {
  return new RequestMailDel;
}

void RequestMailDel::Clear() {
  ts_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool RequestMailDel::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:User.RequestMailDel)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 ts = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ts_)));
          set_has_ts();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:User.RequestMailDel)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:User.RequestMailDel)
  return false;
#undef DO_
}

void RequestMailDel::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:User.RequestMailDel)
  // required uint32 ts = 1;
  if (has_ts()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->ts(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:User.RequestMailDel)
}

::google::protobuf::uint8* RequestMailDel::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:User.RequestMailDel)
  // required uint32 ts = 1;
  if (has_ts()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->ts(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:User.RequestMailDel)
  return target;
}

int RequestMailDel::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 ts = 1;
    if (has_ts()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->ts());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RequestMailDel::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const RequestMailDel* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const RequestMailDel*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void RequestMailDel::MergeFrom(const RequestMailDel& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_ts()) {
      set_ts(from.ts());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void RequestMailDel::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RequestMailDel::CopyFrom(const RequestMailDel& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RequestMailDel::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void RequestMailDel::Swap(RequestMailDel* other) {
  if (other != this) {
    std::swap(ts_, other->ts_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata RequestMailDel::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RequestMailDel_descriptor_;
  metadata.reflection = RequestMailDel_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

RequestMailAllGet::RequestMailAllGet()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:User.RequestMailAllGet)
}

void RequestMailAllGet::InitAsDefaultInstance() {
}

RequestMailAllGet::RequestMailAllGet(const RequestMailAllGet& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:User.RequestMailAllGet)
}

void RequestMailAllGet::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RequestMailAllGet::~RequestMailAllGet() {
  // @@protoc_insertion_point(destructor:User.RequestMailAllGet)
  SharedDtor();
}

void RequestMailAllGet::SharedDtor() {
  if (this != default_instance_) {
  }
}

void RequestMailAllGet::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RequestMailAllGet::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RequestMailAllGet_descriptor_;
}

const RequestMailAllGet& RequestMailAllGet::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_User_2eproto();
  return *default_instance_;
}

RequestMailAllGet* RequestMailAllGet::default_instance_ = NULL;

RequestMailAllGet* RequestMailAllGet::New() const {
  return new RequestMailAllGet;
}

void RequestMailAllGet::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool RequestMailAllGet::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:User.RequestMailAllGet)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:User.RequestMailAllGet)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:User.RequestMailAllGet)
  return false;
#undef DO_
}

void RequestMailAllGet::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:User.RequestMailAllGet)
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:User.RequestMailAllGet)
}

::google::protobuf::uint8* RequestMailAllGet::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:User.RequestMailAllGet)
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:User.RequestMailAllGet)
  return target;
}

int RequestMailAllGet::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RequestMailAllGet::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const RequestMailAllGet* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const RequestMailAllGet*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void RequestMailAllGet::MergeFrom(const RequestMailAllGet& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void RequestMailAllGet::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RequestMailAllGet::CopyFrom(const RequestMailAllGet& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RequestMailAllGet::IsInitialized() const {

  return true;
}

void RequestMailAllGet::Swap(RequestMailAllGet* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata RequestMailAllGet::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RequestMailAllGet_descriptor_;
  metadata.reflection = RequestMailAllGet_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ReplyMailAllGet::kRewardFieldNumber;
#endif  // !_MSC_VER

ReplyMailAllGet::ReplyMailAllGet()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:User.ReplyMailAllGet)
}

void ReplyMailAllGet::InitAsDefaultInstance() {
  reward_ = const_cast< ::ProtoReward::RewardInfo*>(&::ProtoReward::RewardInfo::default_instance());
}

ReplyMailAllGet::ReplyMailAllGet(const ReplyMailAllGet& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:User.ReplyMailAllGet)
}

void ReplyMailAllGet::SharedCtor() {
  _cached_size_ = 0;
  reward_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ReplyMailAllGet::~ReplyMailAllGet() {
  // @@protoc_insertion_point(destructor:User.ReplyMailAllGet)
  SharedDtor();
}

void ReplyMailAllGet::SharedDtor() {
  if (this != default_instance_) {
    delete reward_;
  }
}

void ReplyMailAllGet::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ReplyMailAllGet::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ReplyMailAllGet_descriptor_;
}

const ReplyMailAllGet& ReplyMailAllGet::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_User_2eproto();
  return *default_instance_;
}

ReplyMailAllGet* ReplyMailAllGet::default_instance_ = NULL;

ReplyMailAllGet* ReplyMailAllGet::New() const {
  return new ReplyMailAllGet;
}

void ReplyMailAllGet::Clear() {
  if (has_reward()) {
    if (reward_ != NULL) reward_->::ProtoReward::RewardInfo::Clear();
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ReplyMailAllGet::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:User.ReplyMailAllGet)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .ProtoReward.RewardInfo reward = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_reward()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:User.ReplyMailAllGet)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:User.ReplyMailAllGet)
  return false;
#undef DO_
}

void ReplyMailAllGet::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:User.ReplyMailAllGet)
  // optional .ProtoReward.RewardInfo reward = 1;
  if (has_reward()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->reward(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:User.ReplyMailAllGet)
}

::google::protobuf::uint8* ReplyMailAllGet::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:User.ReplyMailAllGet)
  // optional .ProtoReward.RewardInfo reward = 1;
  if (has_reward()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->reward(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:User.ReplyMailAllGet)
  return target;
}

int ReplyMailAllGet::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .ProtoReward.RewardInfo reward = 1;
    if (has_reward()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->reward());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ReplyMailAllGet::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ReplyMailAllGet* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ReplyMailAllGet*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ReplyMailAllGet::MergeFrom(const ReplyMailAllGet& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_reward()) {
      mutable_reward()->::ProtoReward::RewardInfo::MergeFrom(from.reward());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ReplyMailAllGet::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReplyMailAllGet::CopyFrom(const ReplyMailAllGet& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReplyMailAllGet::IsInitialized() const {

  if (has_reward()) {
    if (!this->reward().IsInitialized()) return false;
  }
  return true;
}

void ReplyMailAllGet::Swap(ReplyMailAllGet* other) {
  if (other != this) {
    std::swap(reward_, other->reward_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ReplyMailAllGet::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ReplyMailAllGet_descriptor_;
  metadata.reflection = ReplyMailAllGet_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

RequestMailAllDel::RequestMailAllDel()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:User.RequestMailAllDel)
}

void RequestMailAllDel::InitAsDefaultInstance() {
}

RequestMailAllDel::RequestMailAllDel(const RequestMailAllDel& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:User.RequestMailAllDel)
}

void RequestMailAllDel::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RequestMailAllDel::~RequestMailAllDel() {
  // @@protoc_insertion_point(destructor:User.RequestMailAllDel)
  SharedDtor();
}

void RequestMailAllDel::SharedDtor() {
  if (this != default_instance_) {
  }
}

void RequestMailAllDel::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RequestMailAllDel::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RequestMailAllDel_descriptor_;
}

const RequestMailAllDel& RequestMailAllDel::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_User_2eproto();
  return *default_instance_;
}

RequestMailAllDel* RequestMailAllDel::default_instance_ = NULL;

RequestMailAllDel* RequestMailAllDel::New() const {
  return new RequestMailAllDel;
}

void RequestMailAllDel::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool RequestMailAllDel::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:User.RequestMailAllDel)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:User.RequestMailAllDel)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:User.RequestMailAllDel)
  return false;
#undef DO_
}

void RequestMailAllDel::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:User.RequestMailAllDel)
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:User.RequestMailAllDel)
}

::google::protobuf::uint8* RequestMailAllDel::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:User.RequestMailAllDel)
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:User.RequestMailAllDel)
  return target;
}

int RequestMailAllDel::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RequestMailAllDel::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const RequestMailAllDel* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const RequestMailAllDel*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void RequestMailAllDel::MergeFrom(const RequestMailAllDel& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void RequestMailAllDel::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RequestMailAllDel::CopyFrom(const RequestMailAllDel& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RequestMailAllDel::IsInitialized() const {

  return true;
}

void RequestMailAllDel::Swap(RequestMailAllDel* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata RequestMailAllDel::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RequestMailAllDel_descriptor_;
  metadata.reflection = RequestMailAllDel_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

ReqNewMsg::ReqNewMsg()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:User.ReqNewMsg)
}

void ReqNewMsg::InitAsDefaultInstance() {
}

ReqNewMsg::ReqNewMsg(const ReqNewMsg& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:User.ReqNewMsg)
}

void ReqNewMsg::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ReqNewMsg::~ReqNewMsg() {
  // @@protoc_insertion_point(destructor:User.ReqNewMsg)
  SharedDtor();
}

void ReqNewMsg::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ReqNewMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ReqNewMsg::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ReqNewMsg_descriptor_;
}

const ReqNewMsg& ReqNewMsg::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_User_2eproto();
  return *default_instance_;
}

ReqNewMsg* ReqNewMsg::default_instance_ = NULL;

ReqNewMsg* ReqNewMsg::New() const {
  return new ReqNewMsg;
}

void ReqNewMsg::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ReqNewMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:User.ReqNewMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:User.ReqNewMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:User.ReqNewMsg)
  return false;
#undef DO_
}

void ReqNewMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:User.ReqNewMsg)
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:User.ReqNewMsg)
}

::google::protobuf::uint8* ReqNewMsg::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:User.ReqNewMsg)
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:User.ReqNewMsg)
  return target;
}

int ReqNewMsg::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ReqNewMsg::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ReqNewMsg* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ReqNewMsg*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ReqNewMsg::MergeFrom(const ReqNewMsg& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ReqNewMsg::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReqNewMsg::CopyFrom(const ReqNewMsg& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReqNewMsg::IsInitialized() const {

  return true;
}

void ReqNewMsg::Swap(ReqNewMsg* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ReqNewMsg::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ReqNewMsg_descriptor_;
  metadata.reflection = ReqNewMsg_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ReplyNewMsg::kTypeFieldNumber;
#endif  // !_MSC_VER

ReplyNewMsg::ReplyNewMsg()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:User.ReplyNewMsg)
}

void ReplyNewMsg::InitAsDefaultInstance() {
}

ReplyNewMsg::ReplyNewMsg(const ReplyNewMsg& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:User.ReplyNewMsg)
}

void ReplyNewMsg::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ReplyNewMsg::~ReplyNewMsg() {
  // @@protoc_insertion_point(destructor:User.ReplyNewMsg)
  SharedDtor();
}

void ReplyNewMsg::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ReplyNewMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ReplyNewMsg::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ReplyNewMsg_descriptor_;
}

const ReplyNewMsg& ReplyNewMsg::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_User_2eproto();
  return *default_instance_;
}

ReplyNewMsg* ReplyNewMsg::default_instance_ = NULL;

ReplyNewMsg* ReplyNewMsg::New() const {
  return new ReplyNewMsg;
}

void ReplyNewMsg::Clear() {
  type_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ReplyNewMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:User.ReplyNewMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint32 type = 1;
      case 1: {
        if (tag == 8) {
         parse_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 8, input, this->mutable_type())));
        } else if (tag == 10) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_type())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(8)) goto parse_type;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:User.ReplyNewMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:User.ReplyNewMsg)
  return false;
#undef DO_
}

void ReplyNewMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:User.ReplyNewMsg)
  // repeated uint32 type = 1;
  for (int i = 0; i < this->type_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      1, this->type(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:User.ReplyNewMsg)
}

::google::protobuf::uint8* ReplyNewMsg::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:User.ReplyNewMsg)
  // repeated uint32 type = 1;
  for (int i = 0; i < this->type_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(1, this->type(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:User.ReplyNewMsg)
  return target;
}

int ReplyNewMsg::ByteSize() const {
  int total_size = 0;

  // repeated uint32 type = 1;
  {
    int data_size = 0;
    for (int i = 0; i < this->type_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->type(i));
    }
    total_size += 1 * this->type_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ReplyNewMsg::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ReplyNewMsg* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ReplyNewMsg*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ReplyNewMsg::MergeFrom(const ReplyNewMsg& from) {
  GOOGLE_CHECK_NE(&from, this);
  type_.MergeFrom(from.type_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ReplyNewMsg::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReplyNewMsg::CopyFrom(const ReplyNewMsg& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReplyNewMsg::IsInitialized() const {

  return true;
}

void ReplyNewMsg::Swap(ReplyNewMsg* other) {
  if (other != this) {
    type_.Swap(&other->type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ReplyNewMsg::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ReplyNewMsg_descriptor_;
  metadata.reflection = ReplyNewMsg_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ReqSendMailBC::kUidFieldNumber;
const int ReqSendMailBC::kTsFieldNumber;
const int ReqSendMailBC::kSysFieldNumber;
const int ReqSendMailBC::kRewardFieldNumber;
#endif  // !_MSC_VER

ReqSendMailBC::ReqSendMailBC()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:User.ReqSendMailBC)
}

void ReqSendMailBC::InitAsDefaultInstance() {
}

ReqSendMailBC::ReqSendMailBC(const ReqSendMailBC& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:User.ReqSendMailBC)
}

void ReqSendMailBC::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  uid_ = 0u;
  ts_ = 0u;
  sys_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  reward_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ReqSendMailBC::~ReqSendMailBC() {
  // @@protoc_insertion_point(destructor:User.ReqSendMailBC)
  SharedDtor();
}

void ReqSendMailBC::SharedDtor() {
  if (sys_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete sys_;
  }
  if (reward_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete reward_;
  }
  if (this != default_instance_) {
  }
}

void ReqSendMailBC::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ReqSendMailBC::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ReqSendMailBC_descriptor_;
}

const ReqSendMailBC& ReqSendMailBC::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_User_2eproto();
  return *default_instance_;
}

ReqSendMailBC* ReqSendMailBC::default_instance_ = NULL;

ReqSendMailBC* ReqSendMailBC::New() const {
  return new ReqSendMailBC;
}

void ReqSendMailBC::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<ReqSendMailBC*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 15) {
    ZR_(uid_, ts_);
    if (has_sys()) {
      if (sys_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        sys_->clear();
      }
    }
    if (has_reward()) {
      if (reward_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        reward_->clear();
      }
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ReqSendMailBC::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:User.ReqSendMailBC)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 uid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uid_)));
          set_has_uid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_ts;
        break;
      }

      // required uint32 ts = 2;
      case 2: {
        if (tag == 16) {
         parse_ts:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ts_)));
          set_has_ts();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_sys;
        break;
      }

      // required bytes sys = 3;
      case 3: {
        if (tag == 26) {
         parse_sys:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_sys()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_reward;
        break;
      }

      // required bytes reward = 4;
      case 4: {
        if (tag == 34) {
         parse_reward:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_reward()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:User.ReqSendMailBC)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:User.ReqSendMailBC)
  return false;
#undef DO_
}

void ReqSendMailBC::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:User.ReqSendMailBC)
  // required uint32 uid = 1;
  if (has_uid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->uid(), output);
  }

  // required uint32 ts = 2;
  if (has_ts()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->ts(), output);
  }

  // required bytes sys = 3;
  if (has_sys()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->sys(), output);
  }

  // required bytes reward = 4;
  if (has_reward()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->reward(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:User.ReqSendMailBC)
}

::google::protobuf::uint8* ReqSendMailBC::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:User.ReqSendMailBC)
  // required uint32 uid = 1;
  if (has_uid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->uid(), target);
  }

  // required uint32 ts = 2;
  if (has_ts()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->ts(), target);
  }

  // required bytes sys = 3;
  if (has_sys()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->sys(), target);
  }

  // required bytes reward = 4;
  if (has_reward()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->reward(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:User.ReqSendMailBC)
  return target;
}

int ReqSendMailBC::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 uid = 1;
    if (has_uid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->uid());
    }

    // required uint32 ts = 2;
    if (has_ts()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->ts());
    }

    // required bytes sys = 3;
    if (has_sys()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->sys());
    }

    // required bytes reward = 4;
    if (has_reward()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->reward());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ReqSendMailBC::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ReqSendMailBC* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ReqSendMailBC*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ReqSendMailBC::MergeFrom(const ReqSendMailBC& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_uid()) {
      set_uid(from.uid());
    }
    if (from.has_ts()) {
      set_ts(from.ts());
    }
    if (from.has_sys()) {
      set_sys(from.sys());
    }
    if (from.has_reward()) {
      set_reward(from.reward());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ReqSendMailBC::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReqSendMailBC::CopyFrom(const ReqSendMailBC& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReqSendMailBC::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;

  return true;
}

void ReqSendMailBC::Swap(ReqSendMailBC* other) {
  if (other != this) {
    std::swap(uid_, other->uid_);
    std::swap(ts_, other->ts_);
    std::swap(sys_, other->sys_);
    std::swap(reward_, other->reward_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ReqSendMailBC::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ReqSendMailBC_descriptor_;
  metadata.reflection = ReqSendMailBC_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PushLoginMsg::kLoginTsFieldNumber;
const int PushLoginMsg::kUidFieldNumber;
#endif  // !_MSC_VER

PushLoginMsg::PushLoginMsg()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:User.PushLoginMsg)
}

void PushLoginMsg::InitAsDefaultInstance() {
}

PushLoginMsg::PushLoginMsg(const PushLoginMsg& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:User.PushLoginMsg)
}

void PushLoginMsg::SharedCtor() {
  _cached_size_ = 0;
  logints_ = 0u;
  uid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PushLoginMsg::~PushLoginMsg() {
  // @@protoc_insertion_point(destructor:User.PushLoginMsg)
  SharedDtor();
}

void PushLoginMsg::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PushLoginMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PushLoginMsg::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PushLoginMsg_descriptor_;
}

const PushLoginMsg& PushLoginMsg::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_User_2eproto();
  return *default_instance_;
}

PushLoginMsg* PushLoginMsg::default_instance_ = NULL;

PushLoginMsg* PushLoginMsg::New() const {
  return new PushLoginMsg;
}

void PushLoginMsg::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<PushLoginMsg*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(logints_, uid_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PushLoginMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:User.PushLoginMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 loginTs = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &logints_)));
          set_has_logints();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_uid;
        break;
      }

      // required uint32 uid = 2;
      case 2: {
        if (tag == 16) {
         parse_uid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uid_)));
          set_has_uid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:User.PushLoginMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:User.PushLoginMsg)
  return false;
#undef DO_
}

void PushLoginMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:User.PushLoginMsg)
  // required uint32 loginTs = 1;
  if (has_logints()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->logints(), output);
  }

  // required uint32 uid = 2;
  if (has_uid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->uid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:User.PushLoginMsg)
}

::google::protobuf::uint8* PushLoginMsg::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:User.PushLoginMsg)
  // required uint32 loginTs = 1;
  if (has_logints()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->logints(), target);
  }

  // required uint32 uid = 2;
  if (has_uid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->uid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:User.PushLoginMsg)
  return target;
}

int PushLoginMsg::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 loginTs = 1;
    if (has_logints()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->logints());
    }

    // required uint32 uid = 2;
    if (has_uid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->uid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PushLoginMsg::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PushLoginMsg* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PushLoginMsg*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PushLoginMsg::MergeFrom(const PushLoginMsg& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_logints()) {
      set_logints(from.logints());
    }
    if (from.has_uid()) {
      set_uid(from.uid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PushLoginMsg::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PushLoginMsg::CopyFrom(const PushLoginMsg& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PushLoginMsg::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void PushLoginMsg::Swap(PushLoginMsg* other) {
  if (other != this) {
    std::swap(logints_, other->logints_);
    std::swap(uid_, other->uid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PushLoginMsg::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PushLoginMsg_descriptor_;
  metadata.reflection = PushLoginMsg_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CSPushLoginMsg::kInviteUidFieldNumber;
const int CSPushLoginMsg::kLoginTsFieldNumber;
const int CSPushLoginMsg::kUidFieldNumber;
#endif  // !_MSC_VER

CSPushLoginMsg::CSPushLoginMsg()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:User.CSPushLoginMsg)
}

void CSPushLoginMsg::InitAsDefaultInstance() {
}

CSPushLoginMsg::CSPushLoginMsg(const CSPushLoginMsg& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:User.CSPushLoginMsg)
}

void CSPushLoginMsg::SharedCtor() {
  _cached_size_ = 0;
  inviteuid_ = 0u;
  logints_ = 0u;
  uid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CSPushLoginMsg::~CSPushLoginMsg() {
  // @@protoc_insertion_point(destructor:User.CSPushLoginMsg)
  SharedDtor();
}

void CSPushLoginMsg::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CSPushLoginMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CSPushLoginMsg::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CSPushLoginMsg_descriptor_;
}

const CSPushLoginMsg& CSPushLoginMsg::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_User_2eproto();
  return *default_instance_;
}

CSPushLoginMsg* CSPushLoginMsg::default_instance_ = NULL;

CSPushLoginMsg* CSPushLoginMsg::New() const {
  return new CSPushLoginMsg;
}

void CSPushLoginMsg::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<CSPushLoginMsg*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(inviteuid_, uid_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CSPushLoginMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:User.CSPushLoginMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 inviteUid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &inviteuid_)));
          set_has_inviteuid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_loginTs;
        break;
      }

      // required uint32 loginTs = 2;
      case 2: {
        if (tag == 16) {
         parse_loginTs:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &logints_)));
          set_has_logints();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_uid;
        break;
      }

      // required uint32 uid = 3;
      case 3: {
        if (tag == 24) {
         parse_uid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uid_)));
          set_has_uid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:User.CSPushLoginMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:User.CSPushLoginMsg)
  return false;
#undef DO_
}

void CSPushLoginMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:User.CSPushLoginMsg)
  // required uint32 inviteUid = 1;
  if (has_inviteuid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->inviteuid(), output);
  }

  // required uint32 loginTs = 2;
  if (has_logints()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->logints(), output);
  }

  // required uint32 uid = 3;
  if (has_uid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->uid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:User.CSPushLoginMsg)
}

::google::protobuf::uint8* CSPushLoginMsg::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:User.CSPushLoginMsg)
  // required uint32 inviteUid = 1;
  if (has_inviteuid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->inviteuid(), target);
  }

  // required uint32 loginTs = 2;
  if (has_logints()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->logints(), target);
  }

  // required uint32 uid = 3;
  if (has_uid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->uid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:User.CSPushLoginMsg)
  return target;
}

int CSPushLoginMsg::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 inviteUid = 1;
    if (has_inviteuid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->inviteuid());
    }

    // required uint32 loginTs = 2;
    if (has_logints()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->logints());
    }

    // required uint32 uid = 3;
    if (has_uid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->uid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CSPushLoginMsg::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CSPushLoginMsg* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CSPushLoginMsg*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CSPushLoginMsg::MergeFrom(const CSPushLoginMsg& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_inviteuid()) {
      set_inviteuid(from.inviteuid());
    }
    if (from.has_logints()) {
      set_logints(from.logints());
    }
    if (from.has_uid()) {
      set_uid(from.uid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CSPushLoginMsg::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CSPushLoginMsg::CopyFrom(const CSPushLoginMsg& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CSPushLoginMsg::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  return true;
}

void CSPushLoginMsg::Swap(CSPushLoginMsg* other) {
  if (other != this) {
    std::swap(inviteuid_, other->inviteuid_);
    std::swap(logints_, other->logints_);
    std::swap(uid_, other->uid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CSPushLoginMsg::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CSPushLoginMsg_descriptor_;
  metadata.reflection = CSPushLoginMsg_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

ViewAdGetSpeedUpCardReq::ViewAdGetSpeedUpCardReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:User.ViewAdGetSpeedUpCardReq)
}

void ViewAdGetSpeedUpCardReq::InitAsDefaultInstance() {
}

ViewAdGetSpeedUpCardReq::ViewAdGetSpeedUpCardReq(const ViewAdGetSpeedUpCardReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:User.ViewAdGetSpeedUpCardReq)
}

void ViewAdGetSpeedUpCardReq::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ViewAdGetSpeedUpCardReq::~ViewAdGetSpeedUpCardReq() {
  // @@protoc_insertion_point(destructor:User.ViewAdGetSpeedUpCardReq)
  SharedDtor();
}

void ViewAdGetSpeedUpCardReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ViewAdGetSpeedUpCardReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ViewAdGetSpeedUpCardReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ViewAdGetSpeedUpCardReq_descriptor_;
}

const ViewAdGetSpeedUpCardReq& ViewAdGetSpeedUpCardReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_User_2eproto();
  return *default_instance_;
}

ViewAdGetSpeedUpCardReq* ViewAdGetSpeedUpCardReq::default_instance_ = NULL;

ViewAdGetSpeedUpCardReq* ViewAdGetSpeedUpCardReq::New() const {
  return new ViewAdGetSpeedUpCardReq;
}

void ViewAdGetSpeedUpCardReq::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ViewAdGetSpeedUpCardReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:User.ViewAdGetSpeedUpCardReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:User.ViewAdGetSpeedUpCardReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:User.ViewAdGetSpeedUpCardReq)
  return false;
#undef DO_
}

void ViewAdGetSpeedUpCardReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:User.ViewAdGetSpeedUpCardReq)
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:User.ViewAdGetSpeedUpCardReq)
}

::google::protobuf::uint8* ViewAdGetSpeedUpCardReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:User.ViewAdGetSpeedUpCardReq)
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:User.ViewAdGetSpeedUpCardReq)
  return target;
}

int ViewAdGetSpeedUpCardReq::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ViewAdGetSpeedUpCardReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ViewAdGetSpeedUpCardReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ViewAdGetSpeedUpCardReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ViewAdGetSpeedUpCardReq::MergeFrom(const ViewAdGetSpeedUpCardReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ViewAdGetSpeedUpCardReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ViewAdGetSpeedUpCardReq::CopyFrom(const ViewAdGetSpeedUpCardReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ViewAdGetSpeedUpCardReq::IsInitialized() const {

  return true;
}

void ViewAdGetSpeedUpCardReq::Swap(ViewAdGetSpeedUpCardReq* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ViewAdGetSpeedUpCardReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ViewAdGetSpeedUpCardReq_descriptor_;
  metadata.reflection = ViewAdGetSpeedUpCardReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ViewAdGetSpeedUpCardResp::kCommonsFieldNumber;
#endif  // !_MSC_VER

ViewAdGetSpeedUpCardResp::ViewAdGetSpeedUpCardResp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:User.ViewAdGetSpeedUpCardResp)
}

void ViewAdGetSpeedUpCardResp::InitAsDefaultInstance() {
  commons_ = const_cast< ::DataCommon::CommonItemsCPP*>(&::DataCommon::CommonItemsCPP::default_instance());
}

ViewAdGetSpeedUpCardResp::ViewAdGetSpeedUpCardResp(const ViewAdGetSpeedUpCardResp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:User.ViewAdGetSpeedUpCardResp)
}

void ViewAdGetSpeedUpCardResp::SharedCtor() {
  _cached_size_ = 0;
  commons_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ViewAdGetSpeedUpCardResp::~ViewAdGetSpeedUpCardResp() {
  // @@protoc_insertion_point(destructor:User.ViewAdGetSpeedUpCardResp)
  SharedDtor();
}

void ViewAdGetSpeedUpCardResp::SharedDtor() {
  if (this != default_instance_) {
    delete commons_;
  }
}

void ViewAdGetSpeedUpCardResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ViewAdGetSpeedUpCardResp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ViewAdGetSpeedUpCardResp_descriptor_;
}

const ViewAdGetSpeedUpCardResp& ViewAdGetSpeedUpCardResp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_User_2eproto();
  return *default_instance_;
}

ViewAdGetSpeedUpCardResp* ViewAdGetSpeedUpCardResp::default_instance_ = NULL;

ViewAdGetSpeedUpCardResp* ViewAdGetSpeedUpCardResp::New() const {
  return new ViewAdGetSpeedUpCardResp;
}

void ViewAdGetSpeedUpCardResp::Clear() {
  if (has_commons()) {
    if (commons_ != NULL) commons_->::DataCommon::CommonItemsCPP::Clear();
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ViewAdGetSpeedUpCardResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:User.ViewAdGetSpeedUpCardResp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .DataCommon.CommonItemsCPP commons = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_commons()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:User.ViewAdGetSpeedUpCardResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:User.ViewAdGetSpeedUpCardResp)
  return false;
#undef DO_
}

void ViewAdGetSpeedUpCardResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:User.ViewAdGetSpeedUpCardResp)
  // required .DataCommon.CommonItemsCPP commons = 1;
  if (has_commons()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->commons(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:User.ViewAdGetSpeedUpCardResp)
}

::google::protobuf::uint8* ViewAdGetSpeedUpCardResp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:User.ViewAdGetSpeedUpCardResp)
  // required .DataCommon.CommonItemsCPP commons = 1;
  if (has_commons()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->commons(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:User.ViewAdGetSpeedUpCardResp)
  return target;
}

int ViewAdGetSpeedUpCardResp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .DataCommon.CommonItemsCPP commons = 1;
    if (has_commons()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->commons());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ViewAdGetSpeedUpCardResp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ViewAdGetSpeedUpCardResp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ViewAdGetSpeedUpCardResp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ViewAdGetSpeedUpCardResp::MergeFrom(const ViewAdGetSpeedUpCardResp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_commons()) {
      mutable_commons()->::DataCommon::CommonItemsCPP::MergeFrom(from.commons());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ViewAdGetSpeedUpCardResp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ViewAdGetSpeedUpCardResp::CopyFrom(const ViewAdGetSpeedUpCardResp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ViewAdGetSpeedUpCardResp::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (has_commons()) {
    if (!this->commons().IsInitialized()) return false;
  }
  return true;
}

void ViewAdGetSpeedUpCardResp::Swap(ViewAdGetSpeedUpCardResp* other) {
  if (other != this) {
    std::swap(commons_, other->commons_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ViewAdGetSpeedUpCardResp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ViewAdGetSpeedUpCardResp_descriptor_;
  metadata.reflection = ViewAdGetSpeedUpCardResp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int NewUserGuideShareReq::kIdFieldNumber;
const int NewUserGuideShareReq::kTypeFieldNumber;
#endif  // !_MSC_VER

NewUserGuideShareReq::NewUserGuideShareReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:User.NewUserGuideShareReq)
}

void NewUserGuideShareReq::InitAsDefaultInstance() {
}

NewUserGuideShareReq::NewUserGuideShareReq(const NewUserGuideShareReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:User.NewUserGuideShareReq)
}

void NewUserGuideShareReq::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0u;
  type_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

NewUserGuideShareReq::~NewUserGuideShareReq() {
  // @@protoc_insertion_point(destructor:User.NewUserGuideShareReq)
  SharedDtor();
}

void NewUserGuideShareReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void NewUserGuideShareReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NewUserGuideShareReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return NewUserGuideShareReq_descriptor_;
}

const NewUserGuideShareReq& NewUserGuideShareReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_User_2eproto();
  return *default_instance_;
}

NewUserGuideShareReq* NewUserGuideShareReq::default_instance_ = NULL;

NewUserGuideShareReq* NewUserGuideShareReq::New() const {
  return new NewUserGuideShareReq;
}

void NewUserGuideShareReq::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<NewUserGuideShareReq*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(id_, type_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool NewUserGuideShareReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:User.NewUserGuideShareReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_type;
        break;
      }

      // required uint32 type = 2;
      case 2: {
        if (tag == 16) {
         parse_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:User.NewUserGuideShareReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:User.NewUserGuideShareReq)
  return false;
#undef DO_
}

void NewUserGuideShareReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:User.NewUserGuideShareReq)
  // required uint32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  // required uint32 type = 2;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->type(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:User.NewUserGuideShareReq)
}

::google::protobuf::uint8* NewUserGuideShareReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:User.NewUserGuideShareReq)
  // required uint32 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  // required uint32 type = 2;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->type(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:User.NewUserGuideShareReq)
  return target;
}

int NewUserGuideShareReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->id());
    }

    // required uint32 type = 2;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->type());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NewUserGuideShareReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const NewUserGuideShareReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const NewUserGuideShareReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void NewUserGuideShareReq::MergeFrom(const NewUserGuideShareReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_type()) {
      set_type(from.type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void NewUserGuideShareReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NewUserGuideShareReq::CopyFrom(const NewUserGuideShareReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NewUserGuideShareReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void NewUserGuideShareReq::Swap(NewUserGuideShareReq* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(type_, other->type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata NewUserGuideShareReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = NewUserGuideShareReq_descriptor_;
  metadata.reflection = NewUserGuideShareReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int NewUserGuideShareResp::kCommonsFieldNumber;
#endif  // !_MSC_VER

NewUserGuideShareResp::NewUserGuideShareResp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:User.NewUserGuideShareResp)
}

void NewUserGuideShareResp::InitAsDefaultInstance() {
  commons_ = const_cast< ::DataCommon::CommonItemsCPP*>(&::DataCommon::CommonItemsCPP::default_instance());
}

NewUserGuideShareResp::NewUserGuideShareResp(const NewUserGuideShareResp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:User.NewUserGuideShareResp)
}

void NewUserGuideShareResp::SharedCtor() {
  _cached_size_ = 0;
  commons_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

NewUserGuideShareResp::~NewUserGuideShareResp() {
  // @@protoc_insertion_point(destructor:User.NewUserGuideShareResp)
  SharedDtor();
}

void NewUserGuideShareResp::SharedDtor() {
  if (this != default_instance_) {
    delete commons_;
  }
}

void NewUserGuideShareResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NewUserGuideShareResp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return NewUserGuideShareResp_descriptor_;
}

const NewUserGuideShareResp& NewUserGuideShareResp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_User_2eproto();
  return *default_instance_;
}

NewUserGuideShareResp* NewUserGuideShareResp::default_instance_ = NULL;

NewUserGuideShareResp* NewUserGuideShareResp::New() const {
  return new NewUserGuideShareResp;
}

void NewUserGuideShareResp::Clear() {
  if (has_commons()) {
    if (commons_ != NULL) commons_->::DataCommon::CommonItemsCPP::Clear();
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool NewUserGuideShareResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:User.NewUserGuideShareResp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .DataCommon.CommonItemsCPP commons = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_commons()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:User.NewUserGuideShareResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:User.NewUserGuideShareResp)
  return false;
#undef DO_
}

void NewUserGuideShareResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:User.NewUserGuideShareResp)
  // required .DataCommon.CommonItemsCPP commons = 1;
  if (has_commons()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->commons(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:User.NewUserGuideShareResp)
}

::google::protobuf::uint8* NewUserGuideShareResp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:User.NewUserGuideShareResp)
  // required .DataCommon.CommonItemsCPP commons = 1;
  if (has_commons()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->commons(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:User.NewUserGuideShareResp)
  return target;
}

int NewUserGuideShareResp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .DataCommon.CommonItemsCPP commons = 1;
    if (has_commons()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->commons());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NewUserGuideShareResp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const NewUserGuideShareResp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const NewUserGuideShareResp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void NewUserGuideShareResp::MergeFrom(const NewUserGuideShareResp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_commons()) {
      mutable_commons()->::DataCommon::CommonItemsCPP::MergeFrom(from.commons());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void NewUserGuideShareResp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NewUserGuideShareResp::CopyFrom(const NewUserGuideShareResp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NewUserGuideShareResp::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (has_commons()) {
    if (!this->commons().IsInitialized()) return false;
  }
  return true;
}

void NewUserGuideShareResp::Swap(NewUserGuideShareResp* other) {
  if (other != this) {
    std::swap(commons_, other->commons_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata NewUserGuideShareResp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = NewUserGuideShareResp_descriptor_;
  metadata.reflection = NewUserGuideShareResp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int UseCdKeyReq::kNumberFieldNumber;
#endif  // !_MSC_VER

UseCdKeyReq::UseCdKeyReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:User.UseCdKeyReq)
}

void UseCdKeyReq::InitAsDefaultInstance() {
}

UseCdKeyReq::UseCdKeyReq(const UseCdKeyReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:User.UseCdKeyReq)
}

void UseCdKeyReq::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  number_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

UseCdKeyReq::~UseCdKeyReq() {
  // @@protoc_insertion_point(destructor:User.UseCdKeyReq)
  SharedDtor();
}

void UseCdKeyReq::SharedDtor() {
  if (number_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete number_;
  }
  if (this != default_instance_) {
  }
}

void UseCdKeyReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UseCdKeyReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UseCdKeyReq_descriptor_;
}

const UseCdKeyReq& UseCdKeyReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_User_2eproto();
  return *default_instance_;
}

UseCdKeyReq* UseCdKeyReq::default_instance_ = NULL;

UseCdKeyReq* UseCdKeyReq::New() const {
  return new UseCdKeyReq;
}

void UseCdKeyReq::Clear() {
  if (has_number()) {
    if (number_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
      number_->clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool UseCdKeyReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:User.UseCdKeyReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string number = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_number()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->number().data(), this->number().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "number");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:User.UseCdKeyReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:User.UseCdKeyReq)
  return false;
#undef DO_
}

void UseCdKeyReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:User.UseCdKeyReq)
  // required string number = 1;
  if (has_number()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->number().data(), this->number().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "number");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->number(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:User.UseCdKeyReq)
}

::google::protobuf::uint8* UseCdKeyReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:User.UseCdKeyReq)
  // required string number = 1;
  if (has_number()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->number().data(), this->number().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "number");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->number(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:User.UseCdKeyReq)
  return target;
}

int UseCdKeyReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string number = 1;
    if (has_number()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->number());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UseCdKeyReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const UseCdKeyReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const UseCdKeyReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void UseCdKeyReq::MergeFrom(const UseCdKeyReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_number()) {
      set_number(from.number());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void UseCdKeyReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UseCdKeyReq::CopyFrom(const UseCdKeyReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UseCdKeyReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void UseCdKeyReq::Swap(UseCdKeyReq* other) {
  if (other != this) {
    std::swap(number_, other->number_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata UseCdKeyReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UseCdKeyReq_descriptor_;
  metadata.reflection = UseCdKeyReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int UseCdKeyResp::kCommonsFieldNumber;
#endif  // !_MSC_VER

UseCdKeyResp::UseCdKeyResp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:User.UseCdKeyResp)
}

void UseCdKeyResp::InitAsDefaultInstance() {
  commons_ = const_cast< ::DataCommon::CommonItemsCPP*>(&::DataCommon::CommonItemsCPP::default_instance());
}

UseCdKeyResp::UseCdKeyResp(const UseCdKeyResp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:User.UseCdKeyResp)
}

void UseCdKeyResp::SharedCtor() {
  _cached_size_ = 0;
  commons_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

UseCdKeyResp::~UseCdKeyResp() {
  // @@protoc_insertion_point(destructor:User.UseCdKeyResp)
  SharedDtor();
}

void UseCdKeyResp::SharedDtor() {
  if (this != default_instance_) {
    delete commons_;
  }
}

void UseCdKeyResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UseCdKeyResp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UseCdKeyResp_descriptor_;
}

const UseCdKeyResp& UseCdKeyResp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_User_2eproto();
  return *default_instance_;
}

UseCdKeyResp* UseCdKeyResp::default_instance_ = NULL;

UseCdKeyResp* UseCdKeyResp::New() const {
  return new UseCdKeyResp;
}

void UseCdKeyResp::Clear() {
  if (has_commons()) {
    if (commons_ != NULL) commons_->::DataCommon::CommonItemsCPP::Clear();
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool UseCdKeyResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:User.UseCdKeyResp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .DataCommon.CommonItemsCPP commons = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_commons()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:User.UseCdKeyResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:User.UseCdKeyResp)
  return false;
#undef DO_
}

void UseCdKeyResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:User.UseCdKeyResp)
  // required .DataCommon.CommonItemsCPP commons = 1;
  if (has_commons()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->commons(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:User.UseCdKeyResp)
}

::google::protobuf::uint8* UseCdKeyResp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:User.UseCdKeyResp)
  // required .DataCommon.CommonItemsCPP commons = 1;
  if (has_commons()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->commons(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:User.UseCdKeyResp)
  return target;
}

int UseCdKeyResp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .DataCommon.CommonItemsCPP commons = 1;
    if (has_commons()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->commons());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UseCdKeyResp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const UseCdKeyResp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const UseCdKeyResp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void UseCdKeyResp::MergeFrom(const UseCdKeyResp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_commons()) {
      mutable_commons()->::DataCommon::CommonItemsCPP::MergeFrom(from.commons());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void UseCdKeyResp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UseCdKeyResp::CopyFrom(const UseCdKeyResp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UseCdKeyResp::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (has_commons()) {
    if (!this->commons().IsInitialized()) return false;
  }
  return true;
}

void UseCdKeyResp::Swap(UseCdKeyResp* other) {
  if (other != this) {
    std::swap(commons_, other->commons_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata UseCdKeyResp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UseCdKeyResp_descriptor_;
  metadata.reflection = UseCdKeyResp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

HeartBeatReq::HeartBeatReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:User.HeartBeatReq)
}

void HeartBeatReq::InitAsDefaultInstance() {
}

HeartBeatReq::HeartBeatReq(const HeartBeatReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:User.HeartBeatReq)
}

void HeartBeatReq::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

HeartBeatReq::~HeartBeatReq() {
  // @@protoc_insertion_point(destructor:User.HeartBeatReq)
  SharedDtor();
}

void HeartBeatReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void HeartBeatReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HeartBeatReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return HeartBeatReq_descriptor_;
}

const HeartBeatReq& HeartBeatReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_User_2eproto();
  return *default_instance_;
}

HeartBeatReq* HeartBeatReq::default_instance_ = NULL;

HeartBeatReq* HeartBeatReq::New() const {
  return new HeartBeatReq;
}

void HeartBeatReq::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool HeartBeatReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:User.HeartBeatReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:User.HeartBeatReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:User.HeartBeatReq)
  return false;
#undef DO_
}

void HeartBeatReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:User.HeartBeatReq)
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:User.HeartBeatReq)
}

::google::protobuf::uint8* HeartBeatReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:User.HeartBeatReq)
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:User.HeartBeatReq)
  return target;
}

int HeartBeatReq::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HeartBeatReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const HeartBeatReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const HeartBeatReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void HeartBeatReq::MergeFrom(const HeartBeatReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void HeartBeatReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HeartBeatReq::CopyFrom(const HeartBeatReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HeartBeatReq::IsInitialized() const {

  return true;
}

void HeartBeatReq::Swap(HeartBeatReq* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata HeartBeatReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = HeartBeatReq_descriptor_;
  metadata.reflection = HeartBeatReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

HeartBeatResp::HeartBeatResp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:User.HeartBeatResp)
}

void HeartBeatResp::InitAsDefaultInstance() {
}

HeartBeatResp::HeartBeatResp(const HeartBeatResp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:User.HeartBeatResp)
}

void HeartBeatResp::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

HeartBeatResp::~HeartBeatResp() {
  // @@protoc_insertion_point(destructor:User.HeartBeatResp)
  SharedDtor();
}

void HeartBeatResp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void HeartBeatResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HeartBeatResp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return HeartBeatResp_descriptor_;
}

const HeartBeatResp& HeartBeatResp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_User_2eproto();
  return *default_instance_;
}

HeartBeatResp* HeartBeatResp::default_instance_ = NULL;

HeartBeatResp* HeartBeatResp::New() const {
  return new HeartBeatResp;
}

void HeartBeatResp::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool HeartBeatResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:User.HeartBeatResp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:User.HeartBeatResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:User.HeartBeatResp)
  return false;
#undef DO_
}

void HeartBeatResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:User.HeartBeatResp)
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:User.HeartBeatResp)
}

::google::protobuf::uint8* HeartBeatResp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:User.HeartBeatResp)
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:User.HeartBeatResp)
  return target;
}

int HeartBeatResp::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HeartBeatResp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const HeartBeatResp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const HeartBeatResp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void HeartBeatResp::MergeFrom(const HeartBeatResp& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void HeartBeatResp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HeartBeatResp::CopyFrom(const HeartBeatResp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HeartBeatResp::IsInitialized() const {

  return true;
}

void HeartBeatResp::Swap(HeartBeatResp* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata HeartBeatResp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = HeartBeatResp_descriptor_;
  metadata.reflection = HeartBeatResp_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace User

// @@protoc_insertion_point(global_scope)
