// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ProtoFriendOrder.proto

#ifndef PROTOBUF_ProtoFriendOrder_2eproto__INCLUDED
#define PROTOBUF_ProtoFriendOrder_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "DataCommon.pb.h"
// @@protoc_insertion_point(includes)

namespace ProtoFriendOrder {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_ProtoFriendOrder_2eproto();
void protobuf_AssignDesc_ProtoFriendOrder_2eproto();
void protobuf_ShutdownFile_ProtoFriendOrder_2eproto();

class FriendOrderInfo;
class GetFriendOrderReq;
class GetFriendOrderResp;
class SendFriendOrderReq;
class SendFriendOrderResp;
class ClickFriendOrderReq;
class ClickFriendOrderResp;
class BuyFriendOrderReq;
class BuyFriendOrderResp;
class GetOrderRewardsReq;
class GetOrderRewardsResp;
class CostDiamondReq;
class CostDiamondResp;
class SendOtherServerReq;
class RecallSourceFoReq;
class RecallCanBuyFoReq;
class ChangeFoStatusReq;
class AnswerWhetherCanBuyReq;

// ===================================================================

class FriendOrderInfo : public ::google::protobuf::Message {
 public:
  FriendOrderInfo();
  virtual ~FriendOrderInfo();

  FriendOrderInfo(const FriendOrderInfo& from);

  inline FriendOrderInfo& operator=(const FriendOrderInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FriendOrderInfo& default_instance();

  void Swap(FriendOrderInfo* other);

  // implements Message ----------------------------------------------

  FriendOrderInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FriendOrderInfo& from);
  void MergeFrom(const FriendOrderInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 status = 1;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 1;
  inline ::google::protobuf::uint32 status() const;
  inline void set_status(::google::protobuf::uint32 value);

  // required uint32 senderUid = 2;
  inline bool has_senderuid() const;
  inline void clear_senderuid();
  static const int kSenderUidFieldNumber = 2;
  inline ::google::protobuf::uint32 senderuid() const;
  inline void set_senderuid(::google::protobuf::uint32 value);

  // required uint32 deadtime = 3;
  inline bool has_deadtime() const;
  inline void clear_deadtime();
  static const int kDeadtimeFieldNumber = 3;
  inline ::google::protobuf::uint32 deadtime() const;
  inline void set_deadtime(::google::protobuf::uint32 value);

  // required uint32 sourceId = 4;
  inline bool has_sourceid() const;
  inline void clear_sourceid();
  static const int kSourceIdFieldNumber = 4;
  inline ::google::protobuf::uint32 sourceid() const;
  inline void set_sourceid(::google::protobuf::uint32 value);

  // optional uint32 HelperUid = 5;
  inline bool has_helperuid() const;
  inline void clear_helperuid();
  static const int kHelperUidFieldNumber = 5;
  inline ::google::protobuf::uint32 helperuid() const;
  inline void set_helperuid(::google::protobuf::uint32 value);

  // required uint32 productId = 6;
  inline bool has_productid() const;
  inline void clear_productid();
  static const int kProductIdFieldNumber = 6;
  inline ::google::protobuf::uint32 productid() const;
  inline void set_productid(::google::protobuf::uint32 value);

  // required uint32 count = 7;
  inline bool has_count() const;
  inline void clear_count();
  static const int kCountFieldNumber = 7;
  inline ::google::protobuf::uint32 count() const;
  inline void set_count(::google::protobuf::uint32 value);

  // required uint32 coin = 8;
  inline bool has_coin() const;
  inline void clear_coin();
  static const int kCoinFieldNumber = 8;
  inline ::google::protobuf::uint32 coin() const;
  inline void set_coin(::google::protobuf::uint32 value);

  // required uint32 index = 9;
  inline bool has_index() const;
  inline void clear_index();
  static const int kIndexFieldNumber = 9;
  inline ::google::protobuf::uint32 index() const;
  inline void set_index(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoFriendOrder.FriendOrderInfo)
 private:
  inline void set_has_status();
  inline void clear_has_status();
  inline void set_has_senderuid();
  inline void clear_has_senderuid();
  inline void set_has_deadtime();
  inline void clear_has_deadtime();
  inline void set_has_sourceid();
  inline void clear_has_sourceid();
  inline void set_has_helperuid();
  inline void clear_has_helperuid();
  inline void set_has_productid();
  inline void clear_has_productid();
  inline void set_has_count();
  inline void clear_has_count();
  inline void set_has_coin();
  inline void clear_has_coin();
  inline void set_has_index();
  inline void clear_has_index();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 status_;
  ::google::protobuf::uint32 senderuid_;
  ::google::protobuf::uint32 deadtime_;
  ::google::protobuf::uint32 sourceid_;
  ::google::protobuf::uint32 helperuid_;
  ::google::protobuf::uint32 productid_;
  ::google::protobuf::uint32 count_;
  ::google::protobuf::uint32 coin_;
  ::google::protobuf::uint32 index_;
  friend void  protobuf_AddDesc_ProtoFriendOrder_2eproto();
  friend void protobuf_AssignDesc_ProtoFriendOrder_2eproto();
  friend void protobuf_ShutdownFile_ProtoFriendOrder_2eproto();

  void InitAsDefaultInstance();
  static FriendOrderInfo* default_instance_;
};
// -------------------------------------------------------------------

class GetFriendOrderReq : public ::google::protobuf::Message {
 public:
  GetFriendOrderReq();
  virtual ~GetFriendOrderReq();

  GetFriendOrderReq(const GetFriendOrderReq& from);

  inline GetFriendOrderReq& operator=(const GetFriendOrderReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetFriendOrderReq& default_instance();

  void Swap(GetFriendOrderReq* other);

  // implements Message ----------------------------------------------

  GetFriendOrderReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetFriendOrderReq& from);
  void MergeFrom(const GetFriendOrderReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:ProtoFriendOrder.GetFriendOrderReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_ProtoFriendOrder_2eproto();
  friend void protobuf_AssignDesc_ProtoFriendOrder_2eproto();
  friend void protobuf_ShutdownFile_ProtoFriendOrder_2eproto();

  void InitAsDefaultInstance();
  static GetFriendOrderReq* default_instance_;
};
// -------------------------------------------------------------------

class GetFriendOrderResp : public ::google::protobuf::Message {
 public:
  GetFriendOrderResp();
  virtual ~GetFriendOrderResp();

  GetFriendOrderResp(const GetFriendOrderResp& from);

  inline GetFriendOrderResp& operator=(const GetFriendOrderResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetFriendOrderResp& default_instance();

  void Swap(GetFriendOrderResp* other);

  // implements Message ----------------------------------------------

  GetFriendOrderResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetFriendOrderResp& from);
  void MergeFrom(const GetFriendOrderResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .ProtoFriendOrder.FriendOrderInfo arrayFoInfo = 1;
  inline int arrayfoinfo_size() const;
  inline void clear_arrayfoinfo();
  static const int kArrayFoInfoFieldNumber = 1;
  inline const ::ProtoFriendOrder::FriendOrderInfo& arrayfoinfo(int index) const;
  inline ::ProtoFriendOrder::FriendOrderInfo* mutable_arrayfoinfo(int index);
  inline ::ProtoFriendOrder::FriendOrderInfo* add_arrayfoinfo();
  inline const ::google::protobuf::RepeatedPtrField< ::ProtoFriendOrder::FriendOrderInfo >&
      arrayfoinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::ProtoFriendOrder::FriendOrderInfo >*
      mutable_arrayfoinfo();

  // @@protoc_insertion_point(class_scope:ProtoFriendOrder.GetFriendOrderResp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::ProtoFriendOrder::FriendOrderInfo > arrayfoinfo_;
  friend void  protobuf_AddDesc_ProtoFriendOrder_2eproto();
  friend void protobuf_AssignDesc_ProtoFriendOrder_2eproto();
  friend void protobuf_ShutdownFile_ProtoFriendOrder_2eproto();

  void InitAsDefaultInstance();
  static GetFriendOrderResp* default_instance_;
};
// -------------------------------------------------------------------

class SendFriendOrderReq : public ::google::protobuf::Message {
 public:
  SendFriendOrderReq();
  virtual ~SendFriendOrderReq();

  SendFriendOrderReq(const SendFriendOrderReq& from);

  inline SendFriendOrderReq& operator=(const SendFriendOrderReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SendFriendOrderReq& default_instance();

  void Swap(SendFriendOrderReq* other);

  // implements Message ----------------------------------------------

  SendFriendOrderReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SendFriendOrderReq& from);
  void MergeFrom(const SendFriendOrderReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 basket = 1;
  inline bool has_basket() const;
  inline void clear_basket();
  static const int kBasketFieldNumber = 1;
  inline ::google::protobuf::uint32 basket() const;
  inline void set_basket(::google::protobuf::uint32 value);

  // required uint32 productId = 2;
  inline bool has_productid() const;
  inline void clear_productid();
  static const int kProductIdFieldNumber = 2;
  inline ::google::protobuf::uint32 productid() const;
  inline void set_productid(::google::protobuf::uint32 value);

  // required uint32 count = 3;
  inline bool has_count() const;
  inline void clear_count();
  static const int kCountFieldNumber = 3;
  inline ::google::protobuf::uint32 count() const;
  inline void set_count(::google::protobuf::uint32 value);

  // required uint32 coin = 4;
  inline bool has_coin() const;
  inline void clear_coin();
  static const int kCoinFieldNumber = 4;
  inline ::google::protobuf::uint32 coin() const;
  inline void set_coin(::google::protobuf::uint32 value);

  // repeated uint32 arrayuid = 5;
  inline int arrayuid_size() const;
  inline void clear_arrayuid();
  static const int kArrayuidFieldNumber = 5;
  inline ::google::protobuf::uint32 arrayuid(int index) const;
  inline void set_arrayuid(int index, ::google::protobuf::uint32 value);
  inline void add_arrayuid(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      arrayuid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_arrayuid();

  // @@protoc_insertion_point(class_scope:ProtoFriendOrder.SendFriendOrderReq)
 private:
  inline void set_has_basket();
  inline void clear_has_basket();
  inline void set_has_productid();
  inline void clear_has_productid();
  inline void set_has_count();
  inline void clear_has_count();
  inline void set_has_coin();
  inline void clear_has_coin();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 basket_;
  ::google::protobuf::uint32 productid_;
  ::google::protobuf::uint32 count_;
  ::google::protobuf::uint32 coin_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > arrayuid_;
  friend void  protobuf_AddDesc_ProtoFriendOrder_2eproto();
  friend void protobuf_AssignDesc_ProtoFriendOrder_2eproto();
  friend void protobuf_ShutdownFile_ProtoFriendOrder_2eproto();

  void InitAsDefaultInstance();
  static SendFriendOrderReq* default_instance_;
};
// -------------------------------------------------------------------

class SendFriendOrderResp : public ::google::protobuf::Message {
 public:
  SendFriendOrderResp();
  virtual ~SendFriendOrderResp();

  SendFriendOrderResp(const SendFriendOrderResp& from);

  inline SendFriendOrderResp& operator=(const SendFriendOrderResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SendFriendOrderResp& default_instance();

  void Swap(SendFriendOrderResp* other);

  // implements Message ----------------------------------------------

  SendFriendOrderResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SendFriendOrderResp& from);
  void MergeFrom(const SendFriendOrderResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 basket = 1;
  inline bool has_basket() const;
  inline void clear_basket();
  static const int kBasketFieldNumber = 1;
  inline ::google::protobuf::uint32 basket() const;
  inline void set_basket(::google::protobuf::uint32 value);

  // required .ProtoFriendOrder.FriendOrderInfo newSourceFo = 2;
  inline bool has_newsourcefo() const;
  inline void clear_newsourcefo();
  static const int kNewSourceFoFieldNumber = 2;
  inline const ::ProtoFriendOrder::FriendOrderInfo& newsourcefo() const;
  inline ::ProtoFriendOrder::FriendOrderInfo* mutable_newsourcefo();
  inline ::ProtoFriendOrder::FriendOrderInfo* release_newsourcefo();
  inline void set_allocated_newsourcefo(::ProtoFriendOrder::FriendOrderInfo* newsourcefo);

  // optional .DataCommon.CommonItemsCPP commons = 3;
  inline bool has_commons() const;
  inline void clear_commons();
  static const int kCommonsFieldNumber = 3;
  inline const ::DataCommon::CommonItemsCPP& commons() const;
  inline ::DataCommon::CommonItemsCPP* mutable_commons();
  inline ::DataCommon::CommonItemsCPP* release_commons();
  inline void set_allocated_commons(::DataCommon::CommonItemsCPP* commons);

  // @@protoc_insertion_point(class_scope:ProtoFriendOrder.SendFriendOrderResp)
 private:
  inline void set_has_basket();
  inline void clear_has_basket();
  inline void set_has_newsourcefo();
  inline void clear_has_newsourcefo();
  inline void set_has_commons();
  inline void clear_has_commons();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::ProtoFriendOrder::FriendOrderInfo* newsourcefo_;
  ::DataCommon::CommonItemsCPP* commons_;
  ::google::protobuf::uint32 basket_;
  friend void  protobuf_AddDesc_ProtoFriendOrder_2eproto();
  friend void protobuf_AssignDesc_ProtoFriendOrder_2eproto();
  friend void protobuf_ShutdownFile_ProtoFriendOrder_2eproto();

  void InitAsDefaultInstance();
  static SendFriendOrderResp* default_instance_;
};
// -------------------------------------------------------------------

class ClickFriendOrderReq : public ::google::protobuf::Message {
 public:
  ClickFriendOrderReq();
  virtual ~ClickFriendOrderReq();

  ClickFriendOrderReq(const ClickFriendOrderReq& from);

  inline ClickFriendOrderReq& operator=(const ClickFriendOrderReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ClickFriendOrderReq& default_instance();

  void Swap(ClickFriendOrderReq* other);

  // implements Message ----------------------------------------------

  ClickFriendOrderReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ClickFriendOrderReq& from);
  void MergeFrom(const ClickFriendOrderReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 index = 1;
  inline bool has_index() const;
  inline void clear_index();
  static const int kIndexFieldNumber = 1;
  inline ::google::protobuf::uint32 index() const;
  inline void set_index(::google::protobuf::uint32 value);

  // required uint32 Status = 2;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 2;
  inline ::google::protobuf::uint32 status() const;
  inline void set_status(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoFriendOrder.ClickFriendOrderReq)
 private:
  inline void set_has_index();
  inline void clear_has_index();
  inline void set_has_status();
  inline void clear_has_status();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 index_;
  ::google::protobuf::uint32 status_;
  friend void  protobuf_AddDesc_ProtoFriendOrder_2eproto();
  friend void protobuf_AssignDesc_ProtoFriendOrder_2eproto();
  friend void protobuf_ShutdownFile_ProtoFriendOrder_2eproto();

  void InitAsDefaultInstance();
  static ClickFriendOrderReq* default_instance_;
};
// -------------------------------------------------------------------

class ClickFriendOrderResp : public ::google::protobuf::Message {
 public:
  ClickFriendOrderResp();
  virtual ~ClickFriendOrderResp();

  ClickFriendOrderResp(const ClickFriendOrderResp& from);

  inline ClickFriendOrderResp& operator=(const ClickFriendOrderResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ClickFriendOrderResp& default_instance();

  void Swap(ClickFriendOrderResp* other);

  // implements Message ----------------------------------------------

  ClickFriendOrderResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ClickFriendOrderResp& from);
  void MergeFrom(const ClickFriendOrderResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 index = 1;
  inline bool has_index() const;
  inline void clear_index();
  static const int kIndexFieldNumber = 1;
  inline ::google::protobuf::uint32 index() const;
  inline void set_index(::google::protobuf::uint32 value);

  // required uint32 newStatus = 2;
  inline bool has_newstatus() const;
  inline void clear_newstatus();
  static const int kNewStatusFieldNumber = 2;
  inline ::google::protobuf::uint32 newstatus() const;
  inline void set_newstatus(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoFriendOrder.ClickFriendOrderResp)
 private:
  inline void set_has_index();
  inline void clear_has_index();
  inline void set_has_newstatus();
  inline void clear_has_newstatus();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 index_;
  ::google::protobuf::uint32 newstatus_;
  friend void  protobuf_AddDesc_ProtoFriendOrder_2eproto();
  friend void protobuf_AssignDesc_ProtoFriendOrder_2eproto();
  friend void protobuf_ShutdownFile_ProtoFriendOrder_2eproto();

  void InitAsDefaultInstance();
  static ClickFriendOrderResp* default_instance_;
};
// -------------------------------------------------------------------

class BuyFriendOrderReq : public ::google::protobuf::Message {
 public:
  BuyFriendOrderReq();
  virtual ~BuyFriendOrderReq();

  BuyFriendOrderReq(const BuyFriendOrderReq& from);

  inline BuyFriendOrderReq& operator=(const BuyFriendOrderReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BuyFriendOrderReq& default_instance();

  void Swap(BuyFriendOrderReq* other);

  // implements Message ----------------------------------------------

  BuyFriendOrderReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BuyFriendOrderReq& from);
  void MergeFrom(const BuyFriendOrderReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 index = 1;
  inline bool has_index() const;
  inline void clear_index();
  static const int kIndexFieldNumber = 1;
  inline ::google::protobuf::uint32 index() const;
  inline void set_index(::google::protobuf::uint32 value);

  // required uint32 Status = 2;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 2;
  inline ::google::protobuf::uint32 status() const;
  inline void set_status(::google::protobuf::uint32 value);

  // required uint32 sourceId = 3;
  inline bool has_sourceid() const;
  inline void clear_sourceid();
  static const int kSourceIdFieldNumber = 3;
  inline ::google::protobuf::uint32 sourceid() const;
  inline void set_sourceid(::google::protobuf::uint32 value);

  // required uint32 senderUid = 4;
  inline bool has_senderuid() const;
  inline void clear_senderuid();
  static const int kSenderUidFieldNumber = 4;
  inline ::google::protobuf::uint32 senderuid() const;
  inline void set_senderuid(::google::protobuf::uint32 value);

  // required uint32 productId = 5;
  inline bool has_productid() const;
  inline void clear_productid();
  static const int kProductIdFieldNumber = 5;
  inline ::google::protobuf::uint32 productid() const;
  inline void set_productid(::google::protobuf::uint32 value);

  // required uint32 count = 6;
  inline bool has_count() const;
  inline void clear_count();
  static const int kCountFieldNumber = 6;
  inline ::google::protobuf::uint32 count() const;
  inline void set_count(::google::protobuf::uint32 value);

  // required uint32 coin = 7;
  inline bool has_coin() const;
  inline void clear_coin();
  static const int kCoinFieldNumber = 7;
  inline ::google::protobuf::uint32 coin() const;
  inline void set_coin(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoFriendOrder.BuyFriendOrderReq)
 private:
  inline void set_has_index();
  inline void clear_has_index();
  inline void set_has_status();
  inline void clear_has_status();
  inline void set_has_sourceid();
  inline void clear_has_sourceid();
  inline void set_has_senderuid();
  inline void clear_has_senderuid();
  inline void set_has_productid();
  inline void clear_has_productid();
  inline void set_has_count();
  inline void clear_has_count();
  inline void set_has_coin();
  inline void clear_has_coin();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 index_;
  ::google::protobuf::uint32 status_;
  ::google::protobuf::uint32 sourceid_;
  ::google::protobuf::uint32 senderuid_;
  ::google::protobuf::uint32 productid_;
  ::google::protobuf::uint32 count_;
  ::google::protobuf::uint32 coin_;
  friend void  protobuf_AddDesc_ProtoFriendOrder_2eproto();
  friend void protobuf_AssignDesc_ProtoFriendOrder_2eproto();
  friend void protobuf_ShutdownFile_ProtoFriendOrder_2eproto();

  void InitAsDefaultInstance();
  static BuyFriendOrderReq* default_instance_;
};
// -------------------------------------------------------------------

class BuyFriendOrderResp : public ::google::protobuf::Message {
 public:
  BuyFriendOrderResp();
  virtual ~BuyFriendOrderResp();

  BuyFriendOrderResp(const BuyFriendOrderResp& from);

  inline BuyFriendOrderResp& operator=(const BuyFriendOrderResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BuyFriendOrderResp& default_instance();

  void Swap(BuyFriendOrderResp* other);

  // implements Message ----------------------------------------------

  BuyFriendOrderResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BuyFriendOrderResp& from);
  void MergeFrom(const BuyFriendOrderResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 index = 1;
  inline bool has_index() const;
  inline void clear_index();
  static const int kIndexFieldNumber = 1;
  inline ::google::protobuf::uint32 index() const;
  inline void set_index(::google::protobuf::uint32 value);

  // required uint32 newstatus = 2;
  inline bool has_newstatus() const;
  inline void clear_newstatus();
  static const int kNewstatusFieldNumber = 2;
  inline ::google::protobuf::uint32 newstatus() const;
  inline void set_newstatus(::google::protobuf::uint32 value);

  // optional .DataCommon.CommonItemsCPP commons = 3;
  inline bool has_commons() const;
  inline void clear_commons();
  static const int kCommonsFieldNumber = 3;
  inline const ::DataCommon::CommonItemsCPP& commons() const;
  inline ::DataCommon::CommonItemsCPP* mutable_commons();
  inline ::DataCommon::CommonItemsCPP* release_commons();
  inline void set_allocated_commons(::DataCommon::CommonItemsCPP* commons);

  // @@protoc_insertion_point(class_scope:ProtoFriendOrder.BuyFriendOrderResp)
 private:
  inline void set_has_index();
  inline void clear_has_index();
  inline void set_has_newstatus();
  inline void clear_has_newstatus();
  inline void set_has_commons();
  inline void clear_has_commons();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 index_;
  ::google::protobuf::uint32 newstatus_;
  ::DataCommon::CommonItemsCPP* commons_;
  friend void  protobuf_AddDesc_ProtoFriendOrder_2eproto();
  friend void protobuf_AssignDesc_ProtoFriendOrder_2eproto();
  friend void protobuf_ShutdownFile_ProtoFriendOrder_2eproto();

  void InitAsDefaultInstance();
  static BuyFriendOrderResp* default_instance_;
};
// -------------------------------------------------------------------

class GetOrderRewardsReq : public ::google::protobuf::Message {
 public:
  GetOrderRewardsReq();
  virtual ~GetOrderRewardsReq();

  GetOrderRewardsReq(const GetOrderRewardsReq& from);

  inline GetOrderRewardsReq& operator=(const GetOrderRewardsReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetOrderRewardsReq& default_instance();

  void Swap(GetOrderRewardsReq* other);

  // implements Message ----------------------------------------------

  GetOrderRewardsReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetOrderRewardsReq& from);
  void MergeFrom(const GetOrderRewardsReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 basket = 1;
  inline bool has_basket() const;
  inline void clear_basket();
  static const int kBasketFieldNumber = 1;
  inline ::google::protobuf::uint32 basket() const;
  inline void set_basket(::google::protobuf::uint32 value);

  // required uint32 Status = 2;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 2;
  inline ::google::protobuf::uint32 status() const;
  inline void set_status(::google::protobuf::uint32 value);

  // required uint32 productId = 3;
  inline bool has_productid() const;
  inline void clear_productid();
  static const int kProductIdFieldNumber = 3;
  inline ::google::protobuf::uint32 productid() const;
  inline void set_productid(::google::protobuf::uint32 value);

  // required uint32 count = 4;
  inline bool has_count() const;
  inline void clear_count();
  static const int kCountFieldNumber = 4;
  inline ::google::protobuf::uint32 count() const;
  inline void set_count(::google::protobuf::uint32 value);

  // required uint32 coin = 5;
  inline bool has_coin() const;
  inline void clear_coin();
  static const int kCoinFieldNumber = 5;
  inline ::google::protobuf::uint32 coin() const;
  inline void set_coin(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoFriendOrder.GetOrderRewardsReq)
 private:
  inline void set_has_basket();
  inline void clear_has_basket();
  inline void set_has_status();
  inline void clear_has_status();
  inline void set_has_productid();
  inline void clear_has_productid();
  inline void set_has_count();
  inline void clear_has_count();
  inline void set_has_coin();
  inline void clear_has_coin();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 basket_;
  ::google::protobuf::uint32 status_;
  ::google::protobuf::uint32 productid_;
  ::google::protobuf::uint32 count_;
  ::google::protobuf::uint32 coin_;
  friend void  protobuf_AddDesc_ProtoFriendOrder_2eproto();
  friend void protobuf_AssignDesc_ProtoFriendOrder_2eproto();
  friend void protobuf_ShutdownFile_ProtoFriendOrder_2eproto();

  void InitAsDefaultInstance();
  static GetOrderRewardsReq* default_instance_;
};
// -------------------------------------------------------------------

class GetOrderRewardsResp : public ::google::protobuf::Message {
 public:
  GetOrderRewardsResp();
  virtual ~GetOrderRewardsResp();

  GetOrderRewardsResp(const GetOrderRewardsResp& from);

  inline GetOrderRewardsResp& operator=(const GetOrderRewardsResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetOrderRewardsResp& default_instance();

  void Swap(GetOrderRewardsResp* other);

  // implements Message ----------------------------------------------

  GetOrderRewardsResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetOrderRewardsResp& from);
  void MergeFrom(const GetOrderRewardsResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 basket = 1;
  inline bool has_basket() const;
  inline void clear_basket();
  static const int kBasketFieldNumber = 1;
  inline ::google::protobuf::uint32 basket() const;
  inline void set_basket(::google::protobuf::uint32 value);

  // required uint32 newstatus = 2;
  inline bool has_newstatus() const;
  inline void clear_newstatus();
  static const int kNewstatusFieldNumber = 2;
  inline ::google::protobuf::uint32 newstatus() const;
  inline void set_newstatus(::google::protobuf::uint32 value);

  // optional .DataCommon.CommonItemsCPP commons = 3;
  inline bool has_commons() const;
  inline void clear_commons();
  static const int kCommonsFieldNumber = 3;
  inline const ::DataCommon::CommonItemsCPP& commons() const;
  inline ::DataCommon::CommonItemsCPP* mutable_commons();
  inline ::DataCommon::CommonItemsCPP* release_commons();
  inline void set_allocated_commons(::DataCommon::CommonItemsCPP* commons);

  // optional uint32 deadtime = 4;
  inline bool has_deadtime() const;
  inline void clear_deadtime();
  static const int kDeadtimeFieldNumber = 4;
  inline ::google::protobuf::uint32 deadtime() const;
  inline void set_deadtime(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoFriendOrder.GetOrderRewardsResp)
 private:
  inline void set_has_basket();
  inline void clear_has_basket();
  inline void set_has_newstatus();
  inline void clear_has_newstatus();
  inline void set_has_commons();
  inline void clear_has_commons();
  inline void set_has_deadtime();
  inline void clear_has_deadtime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 basket_;
  ::google::protobuf::uint32 newstatus_;
  ::DataCommon::CommonItemsCPP* commons_;
  ::google::protobuf::uint32 deadtime_;
  friend void  protobuf_AddDesc_ProtoFriendOrder_2eproto();
  friend void protobuf_AssignDesc_ProtoFriendOrder_2eproto();
  friend void protobuf_ShutdownFile_ProtoFriendOrder_2eproto();

  void InitAsDefaultInstance();
  static GetOrderRewardsResp* default_instance_;
};
// -------------------------------------------------------------------

class CostDiamondReq : public ::google::protobuf::Message {
 public:
  CostDiamondReq();
  virtual ~CostDiamondReq();

  CostDiamondReq(const CostDiamondReq& from);

  inline CostDiamondReq& operator=(const CostDiamondReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CostDiamondReq& default_instance();

  void Swap(CostDiamondReq* other);

  // implements Message ----------------------------------------------

  CostDiamondReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CostDiamondReq& from);
  void MergeFrom(const CostDiamondReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 basket = 1;
  inline bool has_basket() const;
  inline void clear_basket();
  static const int kBasketFieldNumber = 1;
  inline ::google::protobuf::uint32 basket() const;
  inline void set_basket(::google::protobuf::uint32 value);

  // required uint32 status = 2;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 2;
  inline ::google::protobuf::uint32 status() const;
  inline void set_status(::google::protobuf::uint32 value);

  // required uint32 diamonds = 3;
  inline bool has_diamonds() const;
  inline void clear_diamonds();
  static const int kDiamondsFieldNumber = 3;
  inline ::google::protobuf::uint32 diamonds() const;
  inline void set_diamonds(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoFriendOrder.CostDiamondReq)
 private:
  inline void set_has_basket();
  inline void clear_has_basket();
  inline void set_has_status();
  inline void clear_has_status();
  inline void set_has_diamonds();
  inline void clear_has_diamonds();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 basket_;
  ::google::protobuf::uint32 status_;
  ::google::protobuf::uint32 diamonds_;
  friend void  protobuf_AddDesc_ProtoFriendOrder_2eproto();
  friend void protobuf_AssignDesc_ProtoFriendOrder_2eproto();
  friend void protobuf_ShutdownFile_ProtoFriendOrder_2eproto();

  void InitAsDefaultInstance();
  static CostDiamondReq* default_instance_;
};
// -------------------------------------------------------------------

class CostDiamondResp : public ::google::protobuf::Message {
 public:
  CostDiamondResp();
  virtual ~CostDiamondResp();

  CostDiamondResp(const CostDiamondResp& from);

  inline CostDiamondResp& operator=(const CostDiamondResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CostDiamondResp& default_instance();

  void Swap(CostDiamondResp* other);

  // implements Message ----------------------------------------------

  CostDiamondResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CostDiamondResp& from);
  void MergeFrom(const CostDiamondResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 basket = 1;
  inline bool has_basket() const;
  inline void clear_basket();
  static const int kBasketFieldNumber = 1;
  inline ::google::protobuf::uint32 basket() const;
  inline void set_basket(::google::protobuf::uint32 value);

  // required uint32 newstatus = 2;
  inline bool has_newstatus() const;
  inline void clear_newstatus();
  static const int kNewstatusFieldNumber = 2;
  inline ::google::protobuf::uint32 newstatus() const;
  inline void set_newstatus(::google::protobuf::uint32 value);

  // optional .DataCommon.CommonItemsCPP commons = 3;
  inline bool has_commons() const;
  inline void clear_commons();
  static const int kCommonsFieldNumber = 3;
  inline const ::DataCommon::CommonItemsCPP& commons() const;
  inline ::DataCommon::CommonItemsCPP* mutable_commons();
  inline ::DataCommon::CommonItemsCPP* release_commons();
  inline void set_allocated_commons(::DataCommon::CommonItemsCPP* commons);

  // @@protoc_insertion_point(class_scope:ProtoFriendOrder.CostDiamondResp)
 private:
  inline void set_has_basket();
  inline void clear_has_basket();
  inline void set_has_newstatus();
  inline void clear_has_newstatus();
  inline void set_has_commons();
  inline void clear_has_commons();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 basket_;
  ::google::protobuf::uint32 newstatus_;
  ::DataCommon::CommonItemsCPP* commons_;
  friend void  protobuf_AddDesc_ProtoFriendOrder_2eproto();
  friend void protobuf_AssignDesc_ProtoFriendOrder_2eproto();
  friend void protobuf_ShutdownFile_ProtoFriendOrder_2eproto();

  void InitAsDefaultInstance();
  static CostDiamondResp* default_instance_;
};
// -------------------------------------------------------------------

class SendOtherServerReq : public ::google::protobuf::Message {
 public:
  SendOtherServerReq();
  virtual ~SendOtherServerReq();

  SendOtherServerReq(const SendOtherServerReq& from);

  inline SendOtherServerReq& operator=(const SendOtherServerReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SendOtherServerReq& default_instance();

  void Swap(SendOtherServerReq* other);

  // implements Message ----------------------------------------------

  SendOtherServerReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SendOtherServerReq& from);
  void MergeFrom(const SendOtherServerReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 status = 1;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 1;
  inline ::google::protobuf::uint32 status() const;
  inline void set_status(::google::protobuf::uint32 value);

  // required uint32 senderUid = 2;
  inline bool has_senderuid() const;
  inline void clear_senderuid();
  static const int kSenderUidFieldNumber = 2;
  inline ::google::protobuf::uint32 senderuid() const;
  inline void set_senderuid(::google::protobuf::uint32 value);

  // required uint32 deadtime = 3;
  inline bool has_deadtime() const;
  inline void clear_deadtime();
  static const int kDeadtimeFieldNumber = 3;
  inline ::google::protobuf::uint32 deadtime() const;
  inline void set_deadtime(::google::protobuf::uint32 value);

  // required uint32 sourceId = 4;
  inline bool has_sourceid() const;
  inline void clear_sourceid();
  static const int kSourceIdFieldNumber = 4;
  inline ::google::protobuf::uint32 sourceid() const;
  inline void set_sourceid(::google::protobuf::uint32 value);

  // required uint32 productId = 5;
  inline bool has_productid() const;
  inline void clear_productid();
  static const int kProductIdFieldNumber = 5;
  inline ::google::protobuf::uint32 productid() const;
  inline void set_productid(::google::protobuf::uint32 value);

  // required uint32 count = 6;
  inline bool has_count() const;
  inline void clear_count();
  static const int kCountFieldNumber = 6;
  inline ::google::protobuf::uint32 count() const;
  inline void set_count(::google::protobuf::uint32 value);

  // required uint32 coin = 7;
  inline bool has_coin() const;
  inline void clear_coin();
  static const int kCoinFieldNumber = 7;
  inline ::google::protobuf::uint32 coin() const;
  inline void set_coin(::google::protobuf::uint32 value);

  // required uint32 receiverUid = 8;
  inline bool has_receiveruid() const;
  inline void clear_receiveruid();
  static const int kReceiverUidFieldNumber = 8;
  inline ::google::protobuf::uint32 receiveruid() const;
  inline void set_receiveruid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoFriendOrder.SendOtherServerReq)
 private:
  inline void set_has_status();
  inline void clear_has_status();
  inline void set_has_senderuid();
  inline void clear_has_senderuid();
  inline void set_has_deadtime();
  inline void clear_has_deadtime();
  inline void set_has_sourceid();
  inline void clear_has_sourceid();
  inline void set_has_productid();
  inline void clear_has_productid();
  inline void set_has_count();
  inline void clear_has_count();
  inline void set_has_coin();
  inline void clear_has_coin();
  inline void set_has_receiveruid();
  inline void clear_has_receiveruid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 status_;
  ::google::protobuf::uint32 senderuid_;
  ::google::protobuf::uint32 deadtime_;
  ::google::protobuf::uint32 sourceid_;
  ::google::protobuf::uint32 productid_;
  ::google::protobuf::uint32 count_;
  ::google::protobuf::uint32 coin_;
  ::google::protobuf::uint32 receiveruid_;
  friend void  protobuf_AddDesc_ProtoFriendOrder_2eproto();
  friend void protobuf_AssignDesc_ProtoFriendOrder_2eproto();
  friend void protobuf_ShutdownFile_ProtoFriendOrder_2eproto();

  void InitAsDefaultInstance();
  static SendOtherServerReq* default_instance_;
};
// -------------------------------------------------------------------

class RecallSourceFoReq : public ::google::protobuf::Message {
 public:
  RecallSourceFoReq();
  virtual ~RecallSourceFoReq();

  RecallSourceFoReq(const RecallSourceFoReq& from);

  inline RecallSourceFoReq& operator=(const RecallSourceFoReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RecallSourceFoReq& default_instance();

  void Swap(RecallSourceFoReq* other);

  // implements Message ----------------------------------------------

  RecallSourceFoReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RecallSourceFoReq& from);
  void MergeFrom(const RecallSourceFoReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 myuid = 1;
  inline bool has_myuid() const;
  inline void clear_myuid();
  static const int kMyuidFieldNumber = 1;
  inline ::google::protobuf::uint32 myuid() const;
  inline void set_myuid(::google::protobuf::uint32 value);

  // required uint32 myindex = 2;
  inline bool has_myindex() const;
  inline void clear_myindex();
  static const int kMyindexFieldNumber = 2;
  inline ::google::protobuf::uint32 myindex() const;
  inline void set_myindex(::google::protobuf::uint32 value);

  // required uint32 sourceId = 3;
  inline bool has_sourceid() const;
  inline void clear_sourceid();
  static const int kSourceIdFieldNumber = 3;
  inline ::google::protobuf::uint32 sourceid() const;
  inline void set_sourceid(::google::protobuf::uint32 value);

  // optional uint32 senderUid = 4;
  inline bool has_senderuid() const;
  inline void clear_senderuid();
  static const int kSenderUidFieldNumber = 4;
  inline ::google::protobuf::uint32 senderuid() const;
  inline void set_senderuid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoFriendOrder.RecallSourceFoReq)
 private:
  inline void set_has_myuid();
  inline void clear_has_myuid();
  inline void set_has_myindex();
  inline void clear_has_myindex();
  inline void set_has_sourceid();
  inline void clear_has_sourceid();
  inline void set_has_senderuid();
  inline void clear_has_senderuid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 myuid_;
  ::google::protobuf::uint32 myindex_;
  ::google::protobuf::uint32 sourceid_;
  ::google::protobuf::uint32 senderuid_;
  friend void  protobuf_AddDesc_ProtoFriendOrder_2eproto();
  friend void protobuf_AssignDesc_ProtoFriendOrder_2eproto();
  friend void protobuf_ShutdownFile_ProtoFriendOrder_2eproto();

  void InitAsDefaultInstance();
  static RecallSourceFoReq* default_instance_;
};
// -------------------------------------------------------------------

class RecallCanBuyFoReq : public ::google::protobuf::Message {
 public:
  RecallCanBuyFoReq();
  virtual ~RecallCanBuyFoReq();

  RecallCanBuyFoReq(const RecallCanBuyFoReq& from);

  inline RecallCanBuyFoReq& operator=(const RecallCanBuyFoReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RecallCanBuyFoReq& default_instance();

  void Swap(RecallCanBuyFoReq* other);

  // implements Message ----------------------------------------------

  RecallCanBuyFoReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RecallCanBuyFoReq& from);
  void MergeFrom(const RecallCanBuyFoReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 myuid = 1;
  inline bool has_myuid() const;
  inline void clear_myuid();
  static const int kMyuidFieldNumber = 1;
  inline ::google::protobuf::uint32 myuid() const;
  inline void set_myuid(::google::protobuf::uint32 value);

  // required uint32 myindex = 2;
  inline bool has_myindex() const;
  inline void clear_myindex();
  static const int kMyindexFieldNumber = 2;
  inline ::google::protobuf::uint32 myindex() const;
  inline void set_myindex(::google::protobuf::uint32 value);

  // required uint32 sourceId = 3;
  inline bool has_sourceid() const;
  inline void clear_sourceid();
  static const int kSourceIdFieldNumber = 3;
  inline ::google::protobuf::uint32 sourceid() const;
  inline void set_sourceid(::google::protobuf::uint32 value);

  // optional uint32 senderUid = 4;
  inline bool has_senderuid() const;
  inline void clear_senderuid();
  static const int kSenderUidFieldNumber = 4;
  inline ::google::protobuf::uint32 senderuid() const;
  inline void set_senderuid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoFriendOrder.RecallCanBuyFoReq)
 private:
  inline void set_has_myuid();
  inline void clear_has_myuid();
  inline void set_has_myindex();
  inline void clear_has_myindex();
  inline void set_has_sourceid();
  inline void clear_has_sourceid();
  inline void set_has_senderuid();
  inline void clear_has_senderuid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 myuid_;
  ::google::protobuf::uint32 myindex_;
  ::google::protobuf::uint32 sourceid_;
  ::google::protobuf::uint32 senderuid_;
  friend void  protobuf_AddDesc_ProtoFriendOrder_2eproto();
  friend void protobuf_AssignDesc_ProtoFriendOrder_2eproto();
  friend void protobuf_ShutdownFile_ProtoFriendOrder_2eproto();

  void InitAsDefaultInstance();
  static RecallCanBuyFoReq* default_instance_;
};
// -------------------------------------------------------------------

class ChangeFoStatusReq : public ::google::protobuf::Message {
 public:
  ChangeFoStatusReq();
  virtual ~ChangeFoStatusReq();

  ChangeFoStatusReq(const ChangeFoStatusReq& from);

  inline ChangeFoStatusReq& operator=(const ChangeFoStatusReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ChangeFoStatusReq& default_instance();

  void Swap(ChangeFoStatusReq* other);

  // implements Message ----------------------------------------------

  ChangeFoStatusReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ChangeFoStatusReq& from);
  void MergeFrom(const ChangeFoStatusReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 myuid = 1;
  inline bool has_myuid() const;
  inline void clear_myuid();
  static const int kMyuidFieldNumber = 1;
  inline ::google::protobuf::uint32 myuid() const;
  inline void set_myuid(::google::protobuf::uint32 value);

  // required uint32 myindex = 2;
  inline bool has_myindex() const;
  inline void clear_myindex();
  static const int kMyindexFieldNumber = 2;
  inline ::google::protobuf::uint32 myindex() const;
  inline void set_myindex(::google::protobuf::uint32 value);

  // required uint32 newstatus = 3;
  inline bool has_newstatus() const;
  inline void clear_newstatus();
  static const int kNewstatusFieldNumber = 3;
  inline ::google::protobuf::uint32 newstatus() const;
  inline void set_newstatus(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoFriendOrder.ChangeFoStatusReq)
 private:
  inline void set_has_myuid();
  inline void clear_has_myuid();
  inline void set_has_myindex();
  inline void clear_has_myindex();
  inline void set_has_newstatus();
  inline void clear_has_newstatus();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 myuid_;
  ::google::protobuf::uint32 myindex_;
  ::google::protobuf::uint32 newstatus_;
  friend void  protobuf_AddDesc_ProtoFriendOrder_2eproto();
  friend void protobuf_AssignDesc_ProtoFriendOrder_2eproto();
  friend void protobuf_ShutdownFile_ProtoFriendOrder_2eproto();

  void InitAsDefaultInstance();
  static ChangeFoStatusReq* default_instance_;
};
// -------------------------------------------------------------------

class AnswerWhetherCanBuyReq : public ::google::protobuf::Message {
 public:
  AnswerWhetherCanBuyReq();
  virtual ~AnswerWhetherCanBuyReq();

  AnswerWhetherCanBuyReq(const AnswerWhetherCanBuyReq& from);

  inline AnswerWhetherCanBuyReq& operator=(const AnswerWhetherCanBuyReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AnswerWhetherCanBuyReq& default_instance();

  void Swap(AnswerWhetherCanBuyReq* other);

  // implements Message ----------------------------------------------

  AnswerWhetherCanBuyReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AnswerWhetherCanBuyReq& from);
  void MergeFrom(const AnswerWhetherCanBuyReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::uint32 result() const;
  inline void set_result(::google::protobuf::uint32 value);

  // required uint32 myuid = 2;
  inline bool has_myuid() const;
  inline void clear_myuid();
  static const int kMyuidFieldNumber = 2;
  inline ::google::protobuf::uint32 myuid() const;
  inline void set_myuid(::google::protobuf::uint32 value);

  // required uint32 myindex = 3;
  inline bool has_myindex() const;
  inline void clear_myindex();
  static const int kMyindexFieldNumber = 3;
  inline ::google::protobuf::uint32 myindex() const;
  inline void set_myindex(::google::protobuf::uint32 value);

  // required uint32 sourceId = 4;
  inline bool has_sourceid() const;
  inline void clear_sourceid();
  static const int kSourceIdFieldNumber = 4;
  inline ::google::protobuf::uint32 sourceid() const;
  inline void set_sourceid(::google::protobuf::uint32 value);

  // optional uint32 senderUid = 5;
  inline bool has_senderuid() const;
  inline void clear_senderuid();
  static const int kSenderUidFieldNumber = 5;
  inline ::google::protobuf::uint32 senderuid() const;
  inline void set_senderuid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoFriendOrder.AnswerWhetherCanBuyReq)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_myuid();
  inline void clear_has_myuid();
  inline void set_has_myindex();
  inline void clear_has_myindex();
  inline void set_has_sourceid();
  inline void clear_has_sourceid();
  inline void set_has_senderuid();
  inline void clear_has_senderuid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 result_;
  ::google::protobuf::uint32 myuid_;
  ::google::protobuf::uint32 myindex_;
  ::google::protobuf::uint32 sourceid_;
  ::google::protobuf::uint32 senderuid_;
  friend void  protobuf_AddDesc_ProtoFriendOrder_2eproto();
  friend void protobuf_AssignDesc_ProtoFriendOrder_2eproto();
  friend void protobuf_ShutdownFile_ProtoFriendOrder_2eproto();

  void InitAsDefaultInstance();
  static AnswerWhetherCanBuyReq* default_instance_;
};
// ===================================================================


// ===================================================================

// FriendOrderInfo

// required uint32 status = 1;
inline bool FriendOrderInfo::has_status() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FriendOrderInfo::set_has_status() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FriendOrderInfo::clear_has_status() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FriendOrderInfo::clear_status() {
  status_ = 0u;
  clear_has_status();
}
inline ::google::protobuf::uint32 FriendOrderInfo::status() const {
  // @@protoc_insertion_point(field_get:ProtoFriendOrder.FriendOrderInfo.status)
  return status_;
}
inline void FriendOrderInfo::set_status(::google::protobuf::uint32 value) {
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:ProtoFriendOrder.FriendOrderInfo.status)
}

// required uint32 senderUid = 2;
inline bool FriendOrderInfo::has_senderuid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FriendOrderInfo::set_has_senderuid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FriendOrderInfo::clear_has_senderuid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FriendOrderInfo::clear_senderuid() {
  senderuid_ = 0u;
  clear_has_senderuid();
}
inline ::google::protobuf::uint32 FriendOrderInfo::senderuid() const {
  // @@protoc_insertion_point(field_get:ProtoFriendOrder.FriendOrderInfo.senderUid)
  return senderuid_;
}
inline void FriendOrderInfo::set_senderuid(::google::protobuf::uint32 value) {
  set_has_senderuid();
  senderuid_ = value;
  // @@protoc_insertion_point(field_set:ProtoFriendOrder.FriendOrderInfo.senderUid)
}

// required uint32 deadtime = 3;
inline bool FriendOrderInfo::has_deadtime() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void FriendOrderInfo::set_has_deadtime() {
  _has_bits_[0] |= 0x00000004u;
}
inline void FriendOrderInfo::clear_has_deadtime() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void FriendOrderInfo::clear_deadtime() {
  deadtime_ = 0u;
  clear_has_deadtime();
}
inline ::google::protobuf::uint32 FriendOrderInfo::deadtime() const {
  // @@protoc_insertion_point(field_get:ProtoFriendOrder.FriendOrderInfo.deadtime)
  return deadtime_;
}
inline void FriendOrderInfo::set_deadtime(::google::protobuf::uint32 value) {
  set_has_deadtime();
  deadtime_ = value;
  // @@protoc_insertion_point(field_set:ProtoFriendOrder.FriendOrderInfo.deadtime)
}

// required uint32 sourceId = 4;
inline bool FriendOrderInfo::has_sourceid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void FriendOrderInfo::set_has_sourceid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void FriendOrderInfo::clear_has_sourceid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void FriendOrderInfo::clear_sourceid() {
  sourceid_ = 0u;
  clear_has_sourceid();
}
inline ::google::protobuf::uint32 FriendOrderInfo::sourceid() const {
  // @@protoc_insertion_point(field_get:ProtoFriendOrder.FriendOrderInfo.sourceId)
  return sourceid_;
}
inline void FriendOrderInfo::set_sourceid(::google::protobuf::uint32 value) {
  set_has_sourceid();
  sourceid_ = value;
  // @@protoc_insertion_point(field_set:ProtoFriendOrder.FriendOrderInfo.sourceId)
}

// optional uint32 HelperUid = 5;
inline bool FriendOrderInfo::has_helperuid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void FriendOrderInfo::set_has_helperuid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void FriendOrderInfo::clear_has_helperuid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void FriendOrderInfo::clear_helperuid() {
  helperuid_ = 0u;
  clear_has_helperuid();
}
inline ::google::protobuf::uint32 FriendOrderInfo::helperuid() const {
  // @@protoc_insertion_point(field_get:ProtoFriendOrder.FriendOrderInfo.HelperUid)
  return helperuid_;
}
inline void FriendOrderInfo::set_helperuid(::google::protobuf::uint32 value) {
  set_has_helperuid();
  helperuid_ = value;
  // @@protoc_insertion_point(field_set:ProtoFriendOrder.FriendOrderInfo.HelperUid)
}

// required uint32 productId = 6;
inline bool FriendOrderInfo::has_productid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void FriendOrderInfo::set_has_productid() {
  _has_bits_[0] |= 0x00000020u;
}
inline void FriendOrderInfo::clear_has_productid() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void FriendOrderInfo::clear_productid() {
  productid_ = 0u;
  clear_has_productid();
}
inline ::google::protobuf::uint32 FriendOrderInfo::productid() const {
  // @@protoc_insertion_point(field_get:ProtoFriendOrder.FriendOrderInfo.productId)
  return productid_;
}
inline void FriendOrderInfo::set_productid(::google::protobuf::uint32 value) {
  set_has_productid();
  productid_ = value;
  // @@protoc_insertion_point(field_set:ProtoFriendOrder.FriendOrderInfo.productId)
}

// required uint32 count = 7;
inline bool FriendOrderInfo::has_count() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void FriendOrderInfo::set_has_count() {
  _has_bits_[0] |= 0x00000040u;
}
inline void FriendOrderInfo::clear_has_count() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void FriendOrderInfo::clear_count() {
  count_ = 0u;
  clear_has_count();
}
inline ::google::protobuf::uint32 FriendOrderInfo::count() const {
  // @@protoc_insertion_point(field_get:ProtoFriendOrder.FriendOrderInfo.count)
  return count_;
}
inline void FriendOrderInfo::set_count(::google::protobuf::uint32 value) {
  set_has_count();
  count_ = value;
  // @@protoc_insertion_point(field_set:ProtoFriendOrder.FriendOrderInfo.count)
}

// required uint32 coin = 8;
inline bool FriendOrderInfo::has_coin() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void FriendOrderInfo::set_has_coin() {
  _has_bits_[0] |= 0x00000080u;
}
inline void FriendOrderInfo::clear_has_coin() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void FriendOrderInfo::clear_coin() {
  coin_ = 0u;
  clear_has_coin();
}
inline ::google::protobuf::uint32 FriendOrderInfo::coin() const {
  // @@protoc_insertion_point(field_get:ProtoFriendOrder.FriendOrderInfo.coin)
  return coin_;
}
inline void FriendOrderInfo::set_coin(::google::protobuf::uint32 value) {
  set_has_coin();
  coin_ = value;
  // @@protoc_insertion_point(field_set:ProtoFriendOrder.FriendOrderInfo.coin)
}

// required uint32 index = 9;
inline bool FriendOrderInfo::has_index() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void FriendOrderInfo::set_has_index() {
  _has_bits_[0] |= 0x00000100u;
}
inline void FriendOrderInfo::clear_has_index() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void FriendOrderInfo::clear_index() {
  index_ = 0u;
  clear_has_index();
}
inline ::google::protobuf::uint32 FriendOrderInfo::index() const {
  // @@protoc_insertion_point(field_get:ProtoFriendOrder.FriendOrderInfo.index)
  return index_;
}
inline void FriendOrderInfo::set_index(::google::protobuf::uint32 value) {
  set_has_index();
  index_ = value;
  // @@protoc_insertion_point(field_set:ProtoFriendOrder.FriendOrderInfo.index)
}

// -------------------------------------------------------------------

// GetFriendOrderReq

// -------------------------------------------------------------------

// GetFriendOrderResp

// repeated .ProtoFriendOrder.FriendOrderInfo arrayFoInfo = 1;
inline int GetFriendOrderResp::arrayfoinfo_size() const {
  return arrayfoinfo_.size();
}
inline void GetFriendOrderResp::clear_arrayfoinfo() {
  arrayfoinfo_.Clear();
}
inline const ::ProtoFriendOrder::FriendOrderInfo& GetFriendOrderResp::arrayfoinfo(int index) const {
  // @@protoc_insertion_point(field_get:ProtoFriendOrder.GetFriendOrderResp.arrayFoInfo)
  return arrayfoinfo_.Get(index);
}
inline ::ProtoFriendOrder::FriendOrderInfo* GetFriendOrderResp::mutable_arrayfoinfo(int index) {
  // @@protoc_insertion_point(field_mutable:ProtoFriendOrder.GetFriendOrderResp.arrayFoInfo)
  return arrayfoinfo_.Mutable(index);
}
inline ::ProtoFriendOrder::FriendOrderInfo* GetFriendOrderResp::add_arrayfoinfo() {
  // @@protoc_insertion_point(field_add:ProtoFriendOrder.GetFriendOrderResp.arrayFoInfo)
  return arrayfoinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ProtoFriendOrder::FriendOrderInfo >&
GetFriendOrderResp::arrayfoinfo() const {
  // @@protoc_insertion_point(field_list:ProtoFriendOrder.GetFriendOrderResp.arrayFoInfo)
  return arrayfoinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::ProtoFriendOrder::FriendOrderInfo >*
GetFriendOrderResp::mutable_arrayfoinfo() {
  // @@protoc_insertion_point(field_mutable_list:ProtoFriendOrder.GetFriendOrderResp.arrayFoInfo)
  return &arrayfoinfo_;
}

// -------------------------------------------------------------------

// SendFriendOrderReq

// required uint32 basket = 1;
inline bool SendFriendOrderReq::has_basket() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SendFriendOrderReq::set_has_basket() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SendFriendOrderReq::clear_has_basket() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SendFriendOrderReq::clear_basket() {
  basket_ = 0u;
  clear_has_basket();
}
inline ::google::protobuf::uint32 SendFriendOrderReq::basket() const {
  // @@protoc_insertion_point(field_get:ProtoFriendOrder.SendFriendOrderReq.basket)
  return basket_;
}
inline void SendFriendOrderReq::set_basket(::google::protobuf::uint32 value) {
  set_has_basket();
  basket_ = value;
  // @@protoc_insertion_point(field_set:ProtoFriendOrder.SendFriendOrderReq.basket)
}

// required uint32 productId = 2;
inline bool SendFriendOrderReq::has_productid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SendFriendOrderReq::set_has_productid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SendFriendOrderReq::clear_has_productid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SendFriendOrderReq::clear_productid() {
  productid_ = 0u;
  clear_has_productid();
}
inline ::google::protobuf::uint32 SendFriendOrderReq::productid() const {
  // @@protoc_insertion_point(field_get:ProtoFriendOrder.SendFriendOrderReq.productId)
  return productid_;
}
inline void SendFriendOrderReq::set_productid(::google::protobuf::uint32 value) {
  set_has_productid();
  productid_ = value;
  // @@protoc_insertion_point(field_set:ProtoFriendOrder.SendFriendOrderReq.productId)
}

// required uint32 count = 3;
inline bool SendFriendOrderReq::has_count() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SendFriendOrderReq::set_has_count() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SendFriendOrderReq::clear_has_count() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SendFriendOrderReq::clear_count() {
  count_ = 0u;
  clear_has_count();
}
inline ::google::protobuf::uint32 SendFriendOrderReq::count() const {
  // @@protoc_insertion_point(field_get:ProtoFriendOrder.SendFriendOrderReq.count)
  return count_;
}
inline void SendFriendOrderReq::set_count(::google::protobuf::uint32 value) {
  set_has_count();
  count_ = value;
  // @@protoc_insertion_point(field_set:ProtoFriendOrder.SendFriendOrderReq.count)
}

// required uint32 coin = 4;
inline bool SendFriendOrderReq::has_coin() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SendFriendOrderReq::set_has_coin() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SendFriendOrderReq::clear_has_coin() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SendFriendOrderReq::clear_coin() {
  coin_ = 0u;
  clear_has_coin();
}
inline ::google::protobuf::uint32 SendFriendOrderReq::coin() const {
  // @@protoc_insertion_point(field_get:ProtoFriendOrder.SendFriendOrderReq.coin)
  return coin_;
}
inline void SendFriendOrderReq::set_coin(::google::protobuf::uint32 value) {
  set_has_coin();
  coin_ = value;
  // @@protoc_insertion_point(field_set:ProtoFriendOrder.SendFriendOrderReq.coin)
}

// repeated uint32 arrayuid = 5;
inline int SendFriendOrderReq::arrayuid_size() const {
  return arrayuid_.size();
}
inline void SendFriendOrderReq::clear_arrayuid() {
  arrayuid_.Clear();
}
inline ::google::protobuf::uint32 SendFriendOrderReq::arrayuid(int index) const {
  // @@protoc_insertion_point(field_get:ProtoFriendOrder.SendFriendOrderReq.arrayuid)
  return arrayuid_.Get(index);
}
inline void SendFriendOrderReq::set_arrayuid(int index, ::google::protobuf::uint32 value) {
  arrayuid_.Set(index, value);
  // @@protoc_insertion_point(field_set:ProtoFriendOrder.SendFriendOrderReq.arrayuid)
}
inline void SendFriendOrderReq::add_arrayuid(::google::protobuf::uint32 value) {
  arrayuid_.Add(value);
  // @@protoc_insertion_point(field_add:ProtoFriendOrder.SendFriendOrderReq.arrayuid)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
SendFriendOrderReq::arrayuid() const {
  // @@protoc_insertion_point(field_list:ProtoFriendOrder.SendFriendOrderReq.arrayuid)
  return arrayuid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
SendFriendOrderReq::mutable_arrayuid() {
  // @@protoc_insertion_point(field_mutable_list:ProtoFriendOrder.SendFriendOrderReq.arrayuid)
  return &arrayuid_;
}

// -------------------------------------------------------------------

// SendFriendOrderResp

// required uint32 basket = 1;
inline bool SendFriendOrderResp::has_basket() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SendFriendOrderResp::set_has_basket() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SendFriendOrderResp::clear_has_basket() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SendFriendOrderResp::clear_basket() {
  basket_ = 0u;
  clear_has_basket();
}
inline ::google::protobuf::uint32 SendFriendOrderResp::basket() const {
  // @@protoc_insertion_point(field_get:ProtoFriendOrder.SendFriendOrderResp.basket)
  return basket_;
}
inline void SendFriendOrderResp::set_basket(::google::protobuf::uint32 value) {
  set_has_basket();
  basket_ = value;
  // @@protoc_insertion_point(field_set:ProtoFriendOrder.SendFriendOrderResp.basket)
}

// required .ProtoFriendOrder.FriendOrderInfo newSourceFo = 2;
inline bool SendFriendOrderResp::has_newsourcefo() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SendFriendOrderResp::set_has_newsourcefo() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SendFriendOrderResp::clear_has_newsourcefo() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SendFriendOrderResp::clear_newsourcefo() {
  if (newsourcefo_ != NULL) newsourcefo_->::ProtoFriendOrder::FriendOrderInfo::Clear();
  clear_has_newsourcefo();
}
inline const ::ProtoFriendOrder::FriendOrderInfo& SendFriendOrderResp::newsourcefo() const {
  // @@protoc_insertion_point(field_get:ProtoFriendOrder.SendFriendOrderResp.newSourceFo)
  return newsourcefo_ != NULL ? *newsourcefo_ : *default_instance_->newsourcefo_;
}
inline ::ProtoFriendOrder::FriendOrderInfo* SendFriendOrderResp::mutable_newsourcefo() {
  set_has_newsourcefo();
  if (newsourcefo_ == NULL) newsourcefo_ = new ::ProtoFriendOrder::FriendOrderInfo;
  // @@protoc_insertion_point(field_mutable:ProtoFriendOrder.SendFriendOrderResp.newSourceFo)
  return newsourcefo_;
}
inline ::ProtoFriendOrder::FriendOrderInfo* SendFriendOrderResp::release_newsourcefo() {
  clear_has_newsourcefo();
  ::ProtoFriendOrder::FriendOrderInfo* temp = newsourcefo_;
  newsourcefo_ = NULL;
  return temp;
}
inline void SendFriendOrderResp::set_allocated_newsourcefo(::ProtoFriendOrder::FriendOrderInfo* newsourcefo) {
  delete newsourcefo_;
  newsourcefo_ = newsourcefo;
  if (newsourcefo) {
    set_has_newsourcefo();
  } else {
    clear_has_newsourcefo();
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoFriendOrder.SendFriendOrderResp.newSourceFo)
}

// optional .DataCommon.CommonItemsCPP commons = 3;
inline bool SendFriendOrderResp::has_commons() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SendFriendOrderResp::set_has_commons() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SendFriendOrderResp::clear_has_commons() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SendFriendOrderResp::clear_commons() {
  if (commons_ != NULL) commons_->::DataCommon::CommonItemsCPP::Clear();
  clear_has_commons();
}
inline const ::DataCommon::CommonItemsCPP& SendFriendOrderResp::commons() const {
  // @@protoc_insertion_point(field_get:ProtoFriendOrder.SendFriendOrderResp.commons)
  return commons_ != NULL ? *commons_ : *default_instance_->commons_;
}
inline ::DataCommon::CommonItemsCPP* SendFriendOrderResp::mutable_commons() {
  set_has_commons();
  if (commons_ == NULL) commons_ = new ::DataCommon::CommonItemsCPP;
  // @@protoc_insertion_point(field_mutable:ProtoFriendOrder.SendFriendOrderResp.commons)
  return commons_;
}
inline ::DataCommon::CommonItemsCPP* SendFriendOrderResp::release_commons() {
  clear_has_commons();
  ::DataCommon::CommonItemsCPP* temp = commons_;
  commons_ = NULL;
  return temp;
}
inline void SendFriendOrderResp::set_allocated_commons(::DataCommon::CommonItemsCPP* commons) {
  delete commons_;
  commons_ = commons;
  if (commons) {
    set_has_commons();
  } else {
    clear_has_commons();
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoFriendOrder.SendFriendOrderResp.commons)
}

// -------------------------------------------------------------------

// ClickFriendOrderReq

// required uint32 index = 1;
inline bool ClickFriendOrderReq::has_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ClickFriendOrderReq::set_has_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ClickFriendOrderReq::clear_has_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ClickFriendOrderReq::clear_index() {
  index_ = 0u;
  clear_has_index();
}
inline ::google::protobuf::uint32 ClickFriendOrderReq::index() const {
  // @@protoc_insertion_point(field_get:ProtoFriendOrder.ClickFriendOrderReq.index)
  return index_;
}
inline void ClickFriendOrderReq::set_index(::google::protobuf::uint32 value) {
  set_has_index();
  index_ = value;
  // @@protoc_insertion_point(field_set:ProtoFriendOrder.ClickFriendOrderReq.index)
}

// required uint32 Status = 2;
inline bool ClickFriendOrderReq::has_status() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ClickFriendOrderReq::set_has_status() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ClickFriendOrderReq::clear_has_status() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ClickFriendOrderReq::clear_status() {
  status_ = 0u;
  clear_has_status();
}
inline ::google::protobuf::uint32 ClickFriendOrderReq::status() const {
  // @@protoc_insertion_point(field_get:ProtoFriendOrder.ClickFriendOrderReq.Status)
  return status_;
}
inline void ClickFriendOrderReq::set_status(::google::protobuf::uint32 value) {
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:ProtoFriendOrder.ClickFriendOrderReq.Status)
}

// -------------------------------------------------------------------

// ClickFriendOrderResp

// required uint32 index = 1;
inline bool ClickFriendOrderResp::has_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ClickFriendOrderResp::set_has_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ClickFriendOrderResp::clear_has_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ClickFriendOrderResp::clear_index() {
  index_ = 0u;
  clear_has_index();
}
inline ::google::protobuf::uint32 ClickFriendOrderResp::index() const {
  // @@protoc_insertion_point(field_get:ProtoFriendOrder.ClickFriendOrderResp.index)
  return index_;
}
inline void ClickFriendOrderResp::set_index(::google::protobuf::uint32 value) {
  set_has_index();
  index_ = value;
  // @@protoc_insertion_point(field_set:ProtoFriendOrder.ClickFriendOrderResp.index)
}

// required uint32 newStatus = 2;
inline bool ClickFriendOrderResp::has_newstatus() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ClickFriendOrderResp::set_has_newstatus() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ClickFriendOrderResp::clear_has_newstatus() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ClickFriendOrderResp::clear_newstatus() {
  newstatus_ = 0u;
  clear_has_newstatus();
}
inline ::google::protobuf::uint32 ClickFriendOrderResp::newstatus() const {
  // @@protoc_insertion_point(field_get:ProtoFriendOrder.ClickFriendOrderResp.newStatus)
  return newstatus_;
}
inline void ClickFriendOrderResp::set_newstatus(::google::protobuf::uint32 value) {
  set_has_newstatus();
  newstatus_ = value;
  // @@protoc_insertion_point(field_set:ProtoFriendOrder.ClickFriendOrderResp.newStatus)
}

// -------------------------------------------------------------------

// BuyFriendOrderReq

// required uint32 index = 1;
inline bool BuyFriendOrderReq::has_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BuyFriendOrderReq::set_has_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BuyFriendOrderReq::clear_has_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BuyFriendOrderReq::clear_index() {
  index_ = 0u;
  clear_has_index();
}
inline ::google::protobuf::uint32 BuyFriendOrderReq::index() const {
  // @@protoc_insertion_point(field_get:ProtoFriendOrder.BuyFriendOrderReq.index)
  return index_;
}
inline void BuyFriendOrderReq::set_index(::google::protobuf::uint32 value) {
  set_has_index();
  index_ = value;
  // @@protoc_insertion_point(field_set:ProtoFriendOrder.BuyFriendOrderReq.index)
}

// required uint32 Status = 2;
inline bool BuyFriendOrderReq::has_status() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BuyFriendOrderReq::set_has_status() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BuyFriendOrderReq::clear_has_status() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BuyFriendOrderReq::clear_status() {
  status_ = 0u;
  clear_has_status();
}
inline ::google::protobuf::uint32 BuyFriendOrderReq::status() const {
  // @@protoc_insertion_point(field_get:ProtoFriendOrder.BuyFriendOrderReq.Status)
  return status_;
}
inline void BuyFriendOrderReq::set_status(::google::protobuf::uint32 value) {
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:ProtoFriendOrder.BuyFriendOrderReq.Status)
}

// required uint32 sourceId = 3;
inline bool BuyFriendOrderReq::has_sourceid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BuyFriendOrderReq::set_has_sourceid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BuyFriendOrderReq::clear_has_sourceid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BuyFriendOrderReq::clear_sourceid() {
  sourceid_ = 0u;
  clear_has_sourceid();
}
inline ::google::protobuf::uint32 BuyFriendOrderReq::sourceid() const {
  // @@protoc_insertion_point(field_get:ProtoFriendOrder.BuyFriendOrderReq.sourceId)
  return sourceid_;
}
inline void BuyFriendOrderReq::set_sourceid(::google::protobuf::uint32 value) {
  set_has_sourceid();
  sourceid_ = value;
  // @@protoc_insertion_point(field_set:ProtoFriendOrder.BuyFriendOrderReq.sourceId)
}

// required uint32 senderUid = 4;
inline bool BuyFriendOrderReq::has_senderuid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void BuyFriendOrderReq::set_has_senderuid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void BuyFriendOrderReq::clear_has_senderuid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void BuyFriendOrderReq::clear_senderuid() {
  senderuid_ = 0u;
  clear_has_senderuid();
}
inline ::google::protobuf::uint32 BuyFriendOrderReq::senderuid() const {
  // @@protoc_insertion_point(field_get:ProtoFriendOrder.BuyFriendOrderReq.senderUid)
  return senderuid_;
}
inline void BuyFriendOrderReq::set_senderuid(::google::protobuf::uint32 value) {
  set_has_senderuid();
  senderuid_ = value;
  // @@protoc_insertion_point(field_set:ProtoFriendOrder.BuyFriendOrderReq.senderUid)
}

// required uint32 productId = 5;
inline bool BuyFriendOrderReq::has_productid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void BuyFriendOrderReq::set_has_productid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void BuyFriendOrderReq::clear_has_productid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void BuyFriendOrderReq::clear_productid() {
  productid_ = 0u;
  clear_has_productid();
}
inline ::google::protobuf::uint32 BuyFriendOrderReq::productid() const {
  // @@protoc_insertion_point(field_get:ProtoFriendOrder.BuyFriendOrderReq.productId)
  return productid_;
}
inline void BuyFriendOrderReq::set_productid(::google::protobuf::uint32 value) {
  set_has_productid();
  productid_ = value;
  // @@protoc_insertion_point(field_set:ProtoFriendOrder.BuyFriendOrderReq.productId)
}

// required uint32 count = 6;
inline bool BuyFriendOrderReq::has_count() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void BuyFriendOrderReq::set_has_count() {
  _has_bits_[0] |= 0x00000020u;
}
inline void BuyFriendOrderReq::clear_has_count() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void BuyFriendOrderReq::clear_count() {
  count_ = 0u;
  clear_has_count();
}
inline ::google::protobuf::uint32 BuyFriendOrderReq::count() const {
  // @@protoc_insertion_point(field_get:ProtoFriendOrder.BuyFriendOrderReq.count)
  return count_;
}
inline void BuyFriendOrderReq::set_count(::google::protobuf::uint32 value) {
  set_has_count();
  count_ = value;
  // @@protoc_insertion_point(field_set:ProtoFriendOrder.BuyFriendOrderReq.count)
}

// required uint32 coin = 7;
inline bool BuyFriendOrderReq::has_coin() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void BuyFriendOrderReq::set_has_coin() {
  _has_bits_[0] |= 0x00000040u;
}
inline void BuyFriendOrderReq::clear_has_coin() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void BuyFriendOrderReq::clear_coin() {
  coin_ = 0u;
  clear_has_coin();
}
inline ::google::protobuf::uint32 BuyFriendOrderReq::coin() const {
  // @@protoc_insertion_point(field_get:ProtoFriendOrder.BuyFriendOrderReq.coin)
  return coin_;
}
inline void BuyFriendOrderReq::set_coin(::google::protobuf::uint32 value) {
  set_has_coin();
  coin_ = value;
  // @@protoc_insertion_point(field_set:ProtoFriendOrder.BuyFriendOrderReq.coin)
}

// -------------------------------------------------------------------

// BuyFriendOrderResp

// required uint32 index = 1;
inline bool BuyFriendOrderResp::has_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BuyFriendOrderResp::set_has_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BuyFriendOrderResp::clear_has_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BuyFriendOrderResp::clear_index() {
  index_ = 0u;
  clear_has_index();
}
inline ::google::protobuf::uint32 BuyFriendOrderResp::index() const {
  // @@protoc_insertion_point(field_get:ProtoFriendOrder.BuyFriendOrderResp.index)
  return index_;
}
inline void BuyFriendOrderResp::set_index(::google::protobuf::uint32 value) {
  set_has_index();
  index_ = value;
  // @@protoc_insertion_point(field_set:ProtoFriendOrder.BuyFriendOrderResp.index)
}

// required uint32 newstatus = 2;
inline bool BuyFriendOrderResp::has_newstatus() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BuyFriendOrderResp::set_has_newstatus() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BuyFriendOrderResp::clear_has_newstatus() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BuyFriendOrderResp::clear_newstatus() {
  newstatus_ = 0u;
  clear_has_newstatus();
}
inline ::google::protobuf::uint32 BuyFriendOrderResp::newstatus() const {
  // @@protoc_insertion_point(field_get:ProtoFriendOrder.BuyFriendOrderResp.newstatus)
  return newstatus_;
}
inline void BuyFriendOrderResp::set_newstatus(::google::protobuf::uint32 value) {
  set_has_newstatus();
  newstatus_ = value;
  // @@protoc_insertion_point(field_set:ProtoFriendOrder.BuyFriendOrderResp.newstatus)
}

// optional .DataCommon.CommonItemsCPP commons = 3;
inline bool BuyFriendOrderResp::has_commons() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BuyFriendOrderResp::set_has_commons() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BuyFriendOrderResp::clear_has_commons() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BuyFriendOrderResp::clear_commons() {
  if (commons_ != NULL) commons_->::DataCommon::CommonItemsCPP::Clear();
  clear_has_commons();
}
inline const ::DataCommon::CommonItemsCPP& BuyFriendOrderResp::commons() const {
  // @@protoc_insertion_point(field_get:ProtoFriendOrder.BuyFriendOrderResp.commons)
  return commons_ != NULL ? *commons_ : *default_instance_->commons_;
}
inline ::DataCommon::CommonItemsCPP* BuyFriendOrderResp::mutable_commons() {
  set_has_commons();
  if (commons_ == NULL) commons_ = new ::DataCommon::CommonItemsCPP;
  // @@protoc_insertion_point(field_mutable:ProtoFriendOrder.BuyFriendOrderResp.commons)
  return commons_;
}
inline ::DataCommon::CommonItemsCPP* BuyFriendOrderResp::release_commons() {
  clear_has_commons();
  ::DataCommon::CommonItemsCPP* temp = commons_;
  commons_ = NULL;
  return temp;
}
inline void BuyFriendOrderResp::set_allocated_commons(::DataCommon::CommonItemsCPP* commons) {
  delete commons_;
  commons_ = commons;
  if (commons) {
    set_has_commons();
  } else {
    clear_has_commons();
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoFriendOrder.BuyFriendOrderResp.commons)
}

// -------------------------------------------------------------------

// GetOrderRewardsReq

// required uint32 basket = 1;
inline bool GetOrderRewardsReq::has_basket() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetOrderRewardsReq::set_has_basket() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetOrderRewardsReq::clear_has_basket() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetOrderRewardsReq::clear_basket() {
  basket_ = 0u;
  clear_has_basket();
}
inline ::google::protobuf::uint32 GetOrderRewardsReq::basket() const {
  // @@protoc_insertion_point(field_get:ProtoFriendOrder.GetOrderRewardsReq.basket)
  return basket_;
}
inline void GetOrderRewardsReq::set_basket(::google::protobuf::uint32 value) {
  set_has_basket();
  basket_ = value;
  // @@protoc_insertion_point(field_set:ProtoFriendOrder.GetOrderRewardsReq.basket)
}

// required uint32 Status = 2;
inline bool GetOrderRewardsReq::has_status() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetOrderRewardsReq::set_has_status() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetOrderRewardsReq::clear_has_status() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetOrderRewardsReq::clear_status() {
  status_ = 0u;
  clear_has_status();
}
inline ::google::protobuf::uint32 GetOrderRewardsReq::status() const {
  // @@protoc_insertion_point(field_get:ProtoFriendOrder.GetOrderRewardsReq.Status)
  return status_;
}
inline void GetOrderRewardsReq::set_status(::google::protobuf::uint32 value) {
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:ProtoFriendOrder.GetOrderRewardsReq.Status)
}

// required uint32 productId = 3;
inline bool GetOrderRewardsReq::has_productid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GetOrderRewardsReq::set_has_productid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GetOrderRewardsReq::clear_has_productid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GetOrderRewardsReq::clear_productid() {
  productid_ = 0u;
  clear_has_productid();
}
inline ::google::protobuf::uint32 GetOrderRewardsReq::productid() const {
  // @@protoc_insertion_point(field_get:ProtoFriendOrder.GetOrderRewardsReq.productId)
  return productid_;
}
inline void GetOrderRewardsReq::set_productid(::google::protobuf::uint32 value) {
  set_has_productid();
  productid_ = value;
  // @@protoc_insertion_point(field_set:ProtoFriendOrder.GetOrderRewardsReq.productId)
}

// required uint32 count = 4;
inline bool GetOrderRewardsReq::has_count() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GetOrderRewardsReq::set_has_count() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GetOrderRewardsReq::clear_has_count() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GetOrderRewardsReq::clear_count() {
  count_ = 0u;
  clear_has_count();
}
inline ::google::protobuf::uint32 GetOrderRewardsReq::count() const {
  // @@protoc_insertion_point(field_get:ProtoFriendOrder.GetOrderRewardsReq.count)
  return count_;
}
inline void GetOrderRewardsReq::set_count(::google::protobuf::uint32 value) {
  set_has_count();
  count_ = value;
  // @@protoc_insertion_point(field_set:ProtoFriendOrder.GetOrderRewardsReq.count)
}

// required uint32 coin = 5;
inline bool GetOrderRewardsReq::has_coin() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GetOrderRewardsReq::set_has_coin() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GetOrderRewardsReq::clear_has_coin() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GetOrderRewardsReq::clear_coin() {
  coin_ = 0u;
  clear_has_coin();
}
inline ::google::protobuf::uint32 GetOrderRewardsReq::coin() const {
  // @@protoc_insertion_point(field_get:ProtoFriendOrder.GetOrderRewardsReq.coin)
  return coin_;
}
inline void GetOrderRewardsReq::set_coin(::google::protobuf::uint32 value) {
  set_has_coin();
  coin_ = value;
  // @@protoc_insertion_point(field_set:ProtoFriendOrder.GetOrderRewardsReq.coin)
}

// -------------------------------------------------------------------

// GetOrderRewardsResp

// required uint32 basket = 1;
inline bool GetOrderRewardsResp::has_basket() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetOrderRewardsResp::set_has_basket() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetOrderRewardsResp::clear_has_basket() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetOrderRewardsResp::clear_basket() {
  basket_ = 0u;
  clear_has_basket();
}
inline ::google::protobuf::uint32 GetOrderRewardsResp::basket() const {
  // @@protoc_insertion_point(field_get:ProtoFriendOrder.GetOrderRewardsResp.basket)
  return basket_;
}
inline void GetOrderRewardsResp::set_basket(::google::protobuf::uint32 value) {
  set_has_basket();
  basket_ = value;
  // @@protoc_insertion_point(field_set:ProtoFriendOrder.GetOrderRewardsResp.basket)
}

// required uint32 newstatus = 2;
inline bool GetOrderRewardsResp::has_newstatus() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetOrderRewardsResp::set_has_newstatus() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetOrderRewardsResp::clear_has_newstatus() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetOrderRewardsResp::clear_newstatus() {
  newstatus_ = 0u;
  clear_has_newstatus();
}
inline ::google::protobuf::uint32 GetOrderRewardsResp::newstatus() const {
  // @@protoc_insertion_point(field_get:ProtoFriendOrder.GetOrderRewardsResp.newstatus)
  return newstatus_;
}
inline void GetOrderRewardsResp::set_newstatus(::google::protobuf::uint32 value) {
  set_has_newstatus();
  newstatus_ = value;
  // @@protoc_insertion_point(field_set:ProtoFriendOrder.GetOrderRewardsResp.newstatus)
}

// optional .DataCommon.CommonItemsCPP commons = 3;
inline bool GetOrderRewardsResp::has_commons() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GetOrderRewardsResp::set_has_commons() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GetOrderRewardsResp::clear_has_commons() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GetOrderRewardsResp::clear_commons() {
  if (commons_ != NULL) commons_->::DataCommon::CommonItemsCPP::Clear();
  clear_has_commons();
}
inline const ::DataCommon::CommonItemsCPP& GetOrderRewardsResp::commons() const {
  // @@protoc_insertion_point(field_get:ProtoFriendOrder.GetOrderRewardsResp.commons)
  return commons_ != NULL ? *commons_ : *default_instance_->commons_;
}
inline ::DataCommon::CommonItemsCPP* GetOrderRewardsResp::mutable_commons() {
  set_has_commons();
  if (commons_ == NULL) commons_ = new ::DataCommon::CommonItemsCPP;
  // @@protoc_insertion_point(field_mutable:ProtoFriendOrder.GetOrderRewardsResp.commons)
  return commons_;
}
inline ::DataCommon::CommonItemsCPP* GetOrderRewardsResp::release_commons() {
  clear_has_commons();
  ::DataCommon::CommonItemsCPP* temp = commons_;
  commons_ = NULL;
  return temp;
}
inline void GetOrderRewardsResp::set_allocated_commons(::DataCommon::CommonItemsCPP* commons) {
  delete commons_;
  commons_ = commons;
  if (commons) {
    set_has_commons();
  } else {
    clear_has_commons();
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoFriendOrder.GetOrderRewardsResp.commons)
}

// optional uint32 deadtime = 4;
inline bool GetOrderRewardsResp::has_deadtime() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GetOrderRewardsResp::set_has_deadtime() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GetOrderRewardsResp::clear_has_deadtime() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GetOrderRewardsResp::clear_deadtime() {
  deadtime_ = 0u;
  clear_has_deadtime();
}
inline ::google::protobuf::uint32 GetOrderRewardsResp::deadtime() const {
  // @@protoc_insertion_point(field_get:ProtoFriendOrder.GetOrderRewardsResp.deadtime)
  return deadtime_;
}
inline void GetOrderRewardsResp::set_deadtime(::google::protobuf::uint32 value) {
  set_has_deadtime();
  deadtime_ = value;
  // @@protoc_insertion_point(field_set:ProtoFriendOrder.GetOrderRewardsResp.deadtime)
}

// -------------------------------------------------------------------

// CostDiamondReq

// required uint32 basket = 1;
inline bool CostDiamondReq::has_basket() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CostDiamondReq::set_has_basket() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CostDiamondReq::clear_has_basket() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CostDiamondReq::clear_basket() {
  basket_ = 0u;
  clear_has_basket();
}
inline ::google::protobuf::uint32 CostDiamondReq::basket() const {
  // @@protoc_insertion_point(field_get:ProtoFriendOrder.CostDiamondReq.basket)
  return basket_;
}
inline void CostDiamondReq::set_basket(::google::protobuf::uint32 value) {
  set_has_basket();
  basket_ = value;
  // @@protoc_insertion_point(field_set:ProtoFriendOrder.CostDiamondReq.basket)
}

// required uint32 status = 2;
inline bool CostDiamondReq::has_status() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CostDiamondReq::set_has_status() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CostDiamondReq::clear_has_status() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CostDiamondReq::clear_status() {
  status_ = 0u;
  clear_has_status();
}
inline ::google::protobuf::uint32 CostDiamondReq::status() const {
  // @@protoc_insertion_point(field_get:ProtoFriendOrder.CostDiamondReq.status)
  return status_;
}
inline void CostDiamondReq::set_status(::google::protobuf::uint32 value) {
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:ProtoFriendOrder.CostDiamondReq.status)
}

// required uint32 diamonds = 3;
inline bool CostDiamondReq::has_diamonds() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CostDiamondReq::set_has_diamonds() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CostDiamondReq::clear_has_diamonds() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CostDiamondReq::clear_diamonds() {
  diamonds_ = 0u;
  clear_has_diamonds();
}
inline ::google::protobuf::uint32 CostDiamondReq::diamonds() const {
  // @@protoc_insertion_point(field_get:ProtoFriendOrder.CostDiamondReq.diamonds)
  return diamonds_;
}
inline void CostDiamondReq::set_diamonds(::google::protobuf::uint32 value) {
  set_has_diamonds();
  diamonds_ = value;
  // @@protoc_insertion_point(field_set:ProtoFriendOrder.CostDiamondReq.diamonds)
}

// -------------------------------------------------------------------

// CostDiamondResp

// required uint32 basket = 1;
inline bool CostDiamondResp::has_basket() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CostDiamondResp::set_has_basket() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CostDiamondResp::clear_has_basket() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CostDiamondResp::clear_basket() {
  basket_ = 0u;
  clear_has_basket();
}
inline ::google::protobuf::uint32 CostDiamondResp::basket() const {
  // @@protoc_insertion_point(field_get:ProtoFriendOrder.CostDiamondResp.basket)
  return basket_;
}
inline void CostDiamondResp::set_basket(::google::protobuf::uint32 value) {
  set_has_basket();
  basket_ = value;
  // @@protoc_insertion_point(field_set:ProtoFriendOrder.CostDiamondResp.basket)
}

// required uint32 newstatus = 2;
inline bool CostDiamondResp::has_newstatus() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CostDiamondResp::set_has_newstatus() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CostDiamondResp::clear_has_newstatus() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CostDiamondResp::clear_newstatus() {
  newstatus_ = 0u;
  clear_has_newstatus();
}
inline ::google::protobuf::uint32 CostDiamondResp::newstatus() const {
  // @@protoc_insertion_point(field_get:ProtoFriendOrder.CostDiamondResp.newstatus)
  return newstatus_;
}
inline void CostDiamondResp::set_newstatus(::google::protobuf::uint32 value) {
  set_has_newstatus();
  newstatus_ = value;
  // @@protoc_insertion_point(field_set:ProtoFriendOrder.CostDiamondResp.newstatus)
}

// optional .DataCommon.CommonItemsCPP commons = 3;
inline bool CostDiamondResp::has_commons() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CostDiamondResp::set_has_commons() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CostDiamondResp::clear_has_commons() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CostDiamondResp::clear_commons() {
  if (commons_ != NULL) commons_->::DataCommon::CommonItemsCPP::Clear();
  clear_has_commons();
}
inline const ::DataCommon::CommonItemsCPP& CostDiamondResp::commons() const {
  // @@protoc_insertion_point(field_get:ProtoFriendOrder.CostDiamondResp.commons)
  return commons_ != NULL ? *commons_ : *default_instance_->commons_;
}
inline ::DataCommon::CommonItemsCPP* CostDiamondResp::mutable_commons() {
  set_has_commons();
  if (commons_ == NULL) commons_ = new ::DataCommon::CommonItemsCPP;
  // @@protoc_insertion_point(field_mutable:ProtoFriendOrder.CostDiamondResp.commons)
  return commons_;
}
inline ::DataCommon::CommonItemsCPP* CostDiamondResp::release_commons() {
  clear_has_commons();
  ::DataCommon::CommonItemsCPP* temp = commons_;
  commons_ = NULL;
  return temp;
}
inline void CostDiamondResp::set_allocated_commons(::DataCommon::CommonItemsCPP* commons) {
  delete commons_;
  commons_ = commons;
  if (commons) {
    set_has_commons();
  } else {
    clear_has_commons();
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoFriendOrder.CostDiamondResp.commons)
}

// -------------------------------------------------------------------

// SendOtherServerReq

// required uint32 status = 1;
inline bool SendOtherServerReq::has_status() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SendOtherServerReq::set_has_status() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SendOtherServerReq::clear_has_status() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SendOtherServerReq::clear_status() {
  status_ = 0u;
  clear_has_status();
}
inline ::google::protobuf::uint32 SendOtherServerReq::status() const {
  // @@protoc_insertion_point(field_get:ProtoFriendOrder.SendOtherServerReq.status)
  return status_;
}
inline void SendOtherServerReq::set_status(::google::protobuf::uint32 value) {
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:ProtoFriendOrder.SendOtherServerReq.status)
}

// required uint32 senderUid = 2;
inline bool SendOtherServerReq::has_senderuid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SendOtherServerReq::set_has_senderuid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SendOtherServerReq::clear_has_senderuid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SendOtherServerReq::clear_senderuid() {
  senderuid_ = 0u;
  clear_has_senderuid();
}
inline ::google::protobuf::uint32 SendOtherServerReq::senderuid() const {
  // @@protoc_insertion_point(field_get:ProtoFriendOrder.SendOtherServerReq.senderUid)
  return senderuid_;
}
inline void SendOtherServerReq::set_senderuid(::google::protobuf::uint32 value) {
  set_has_senderuid();
  senderuid_ = value;
  // @@protoc_insertion_point(field_set:ProtoFriendOrder.SendOtherServerReq.senderUid)
}

// required uint32 deadtime = 3;
inline bool SendOtherServerReq::has_deadtime() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SendOtherServerReq::set_has_deadtime() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SendOtherServerReq::clear_has_deadtime() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SendOtherServerReq::clear_deadtime() {
  deadtime_ = 0u;
  clear_has_deadtime();
}
inline ::google::protobuf::uint32 SendOtherServerReq::deadtime() const {
  // @@protoc_insertion_point(field_get:ProtoFriendOrder.SendOtherServerReq.deadtime)
  return deadtime_;
}
inline void SendOtherServerReq::set_deadtime(::google::protobuf::uint32 value) {
  set_has_deadtime();
  deadtime_ = value;
  // @@protoc_insertion_point(field_set:ProtoFriendOrder.SendOtherServerReq.deadtime)
}

// required uint32 sourceId = 4;
inline bool SendOtherServerReq::has_sourceid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SendOtherServerReq::set_has_sourceid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SendOtherServerReq::clear_has_sourceid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SendOtherServerReq::clear_sourceid() {
  sourceid_ = 0u;
  clear_has_sourceid();
}
inline ::google::protobuf::uint32 SendOtherServerReq::sourceid() const {
  // @@protoc_insertion_point(field_get:ProtoFriendOrder.SendOtherServerReq.sourceId)
  return sourceid_;
}
inline void SendOtherServerReq::set_sourceid(::google::protobuf::uint32 value) {
  set_has_sourceid();
  sourceid_ = value;
  // @@protoc_insertion_point(field_set:ProtoFriendOrder.SendOtherServerReq.sourceId)
}

// required uint32 productId = 5;
inline bool SendOtherServerReq::has_productid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void SendOtherServerReq::set_has_productid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void SendOtherServerReq::clear_has_productid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void SendOtherServerReq::clear_productid() {
  productid_ = 0u;
  clear_has_productid();
}
inline ::google::protobuf::uint32 SendOtherServerReq::productid() const {
  // @@protoc_insertion_point(field_get:ProtoFriendOrder.SendOtherServerReq.productId)
  return productid_;
}
inline void SendOtherServerReq::set_productid(::google::protobuf::uint32 value) {
  set_has_productid();
  productid_ = value;
  // @@protoc_insertion_point(field_set:ProtoFriendOrder.SendOtherServerReq.productId)
}

// required uint32 count = 6;
inline bool SendOtherServerReq::has_count() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void SendOtherServerReq::set_has_count() {
  _has_bits_[0] |= 0x00000020u;
}
inline void SendOtherServerReq::clear_has_count() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void SendOtherServerReq::clear_count() {
  count_ = 0u;
  clear_has_count();
}
inline ::google::protobuf::uint32 SendOtherServerReq::count() const {
  // @@protoc_insertion_point(field_get:ProtoFriendOrder.SendOtherServerReq.count)
  return count_;
}
inline void SendOtherServerReq::set_count(::google::protobuf::uint32 value) {
  set_has_count();
  count_ = value;
  // @@protoc_insertion_point(field_set:ProtoFriendOrder.SendOtherServerReq.count)
}

// required uint32 coin = 7;
inline bool SendOtherServerReq::has_coin() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void SendOtherServerReq::set_has_coin() {
  _has_bits_[0] |= 0x00000040u;
}
inline void SendOtherServerReq::clear_has_coin() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void SendOtherServerReq::clear_coin() {
  coin_ = 0u;
  clear_has_coin();
}
inline ::google::protobuf::uint32 SendOtherServerReq::coin() const {
  // @@protoc_insertion_point(field_get:ProtoFriendOrder.SendOtherServerReq.coin)
  return coin_;
}
inline void SendOtherServerReq::set_coin(::google::protobuf::uint32 value) {
  set_has_coin();
  coin_ = value;
  // @@protoc_insertion_point(field_set:ProtoFriendOrder.SendOtherServerReq.coin)
}

// required uint32 receiverUid = 8;
inline bool SendOtherServerReq::has_receiveruid() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void SendOtherServerReq::set_has_receiveruid() {
  _has_bits_[0] |= 0x00000080u;
}
inline void SendOtherServerReq::clear_has_receiveruid() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void SendOtherServerReq::clear_receiveruid() {
  receiveruid_ = 0u;
  clear_has_receiveruid();
}
inline ::google::protobuf::uint32 SendOtherServerReq::receiveruid() const {
  // @@protoc_insertion_point(field_get:ProtoFriendOrder.SendOtherServerReq.receiverUid)
  return receiveruid_;
}
inline void SendOtherServerReq::set_receiveruid(::google::protobuf::uint32 value) {
  set_has_receiveruid();
  receiveruid_ = value;
  // @@protoc_insertion_point(field_set:ProtoFriendOrder.SendOtherServerReq.receiverUid)
}

// -------------------------------------------------------------------

// RecallSourceFoReq

// required uint32 myuid = 1;
inline bool RecallSourceFoReq::has_myuid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RecallSourceFoReq::set_has_myuid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RecallSourceFoReq::clear_has_myuid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RecallSourceFoReq::clear_myuid() {
  myuid_ = 0u;
  clear_has_myuid();
}
inline ::google::protobuf::uint32 RecallSourceFoReq::myuid() const {
  // @@protoc_insertion_point(field_get:ProtoFriendOrder.RecallSourceFoReq.myuid)
  return myuid_;
}
inline void RecallSourceFoReq::set_myuid(::google::protobuf::uint32 value) {
  set_has_myuid();
  myuid_ = value;
  // @@protoc_insertion_point(field_set:ProtoFriendOrder.RecallSourceFoReq.myuid)
}

// required uint32 myindex = 2;
inline bool RecallSourceFoReq::has_myindex() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RecallSourceFoReq::set_has_myindex() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RecallSourceFoReq::clear_has_myindex() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RecallSourceFoReq::clear_myindex() {
  myindex_ = 0u;
  clear_has_myindex();
}
inline ::google::protobuf::uint32 RecallSourceFoReq::myindex() const {
  // @@protoc_insertion_point(field_get:ProtoFriendOrder.RecallSourceFoReq.myindex)
  return myindex_;
}
inline void RecallSourceFoReq::set_myindex(::google::protobuf::uint32 value) {
  set_has_myindex();
  myindex_ = value;
  // @@protoc_insertion_point(field_set:ProtoFriendOrder.RecallSourceFoReq.myindex)
}

// required uint32 sourceId = 3;
inline bool RecallSourceFoReq::has_sourceid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RecallSourceFoReq::set_has_sourceid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RecallSourceFoReq::clear_has_sourceid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RecallSourceFoReq::clear_sourceid() {
  sourceid_ = 0u;
  clear_has_sourceid();
}
inline ::google::protobuf::uint32 RecallSourceFoReq::sourceid() const {
  // @@protoc_insertion_point(field_get:ProtoFriendOrder.RecallSourceFoReq.sourceId)
  return sourceid_;
}
inline void RecallSourceFoReq::set_sourceid(::google::protobuf::uint32 value) {
  set_has_sourceid();
  sourceid_ = value;
  // @@protoc_insertion_point(field_set:ProtoFriendOrder.RecallSourceFoReq.sourceId)
}

// optional uint32 senderUid = 4;
inline bool RecallSourceFoReq::has_senderuid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RecallSourceFoReq::set_has_senderuid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void RecallSourceFoReq::clear_has_senderuid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void RecallSourceFoReq::clear_senderuid() {
  senderuid_ = 0u;
  clear_has_senderuid();
}
inline ::google::protobuf::uint32 RecallSourceFoReq::senderuid() const {
  // @@protoc_insertion_point(field_get:ProtoFriendOrder.RecallSourceFoReq.senderUid)
  return senderuid_;
}
inline void RecallSourceFoReq::set_senderuid(::google::protobuf::uint32 value) {
  set_has_senderuid();
  senderuid_ = value;
  // @@protoc_insertion_point(field_set:ProtoFriendOrder.RecallSourceFoReq.senderUid)
}

// -------------------------------------------------------------------

// RecallCanBuyFoReq

// required uint32 myuid = 1;
inline bool RecallCanBuyFoReq::has_myuid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RecallCanBuyFoReq::set_has_myuid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RecallCanBuyFoReq::clear_has_myuid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RecallCanBuyFoReq::clear_myuid() {
  myuid_ = 0u;
  clear_has_myuid();
}
inline ::google::protobuf::uint32 RecallCanBuyFoReq::myuid() const {
  // @@protoc_insertion_point(field_get:ProtoFriendOrder.RecallCanBuyFoReq.myuid)
  return myuid_;
}
inline void RecallCanBuyFoReq::set_myuid(::google::protobuf::uint32 value) {
  set_has_myuid();
  myuid_ = value;
  // @@protoc_insertion_point(field_set:ProtoFriendOrder.RecallCanBuyFoReq.myuid)
}

// required uint32 myindex = 2;
inline bool RecallCanBuyFoReq::has_myindex() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RecallCanBuyFoReq::set_has_myindex() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RecallCanBuyFoReq::clear_has_myindex() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RecallCanBuyFoReq::clear_myindex() {
  myindex_ = 0u;
  clear_has_myindex();
}
inline ::google::protobuf::uint32 RecallCanBuyFoReq::myindex() const {
  // @@protoc_insertion_point(field_get:ProtoFriendOrder.RecallCanBuyFoReq.myindex)
  return myindex_;
}
inline void RecallCanBuyFoReq::set_myindex(::google::protobuf::uint32 value) {
  set_has_myindex();
  myindex_ = value;
  // @@protoc_insertion_point(field_set:ProtoFriendOrder.RecallCanBuyFoReq.myindex)
}

// required uint32 sourceId = 3;
inline bool RecallCanBuyFoReq::has_sourceid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RecallCanBuyFoReq::set_has_sourceid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RecallCanBuyFoReq::clear_has_sourceid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RecallCanBuyFoReq::clear_sourceid() {
  sourceid_ = 0u;
  clear_has_sourceid();
}
inline ::google::protobuf::uint32 RecallCanBuyFoReq::sourceid() const {
  // @@protoc_insertion_point(field_get:ProtoFriendOrder.RecallCanBuyFoReq.sourceId)
  return sourceid_;
}
inline void RecallCanBuyFoReq::set_sourceid(::google::protobuf::uint32 value) {
  set_has_sourceid();
  sourceid_ = value;
  // @@protoc_insertion_point(field_set:ProtoFriendOrder.RecallCanBuyFoReq.sourceId)
}

// optional uint32 senderUid = 4;
inline bool RecallCanBuyFoReq::has_senderuid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RecallCanBuyFoReq::set_has_senderuid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void RecallCanBuyFoReq::clear_has_senderuid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void RecallCanBuyFoReq::clear_senderuid() {
  senderuid_ = 0u;
  clear_has_senderuid();
}
inline ::google::protobuf::uint32 RecallCanBuyFoReq::senderuid() const {
  // @@protoc_insertion_point(field_get:ProtoFriendOrder.RecallCanBuyFoReq.senderUid)
  return senderuid_;
}
inline void RecallCanBuyFoReq::set_senderuid(::google::protobuf::uint32 value) {
  set_has_senderuid();
  senderuid_ = value;
  // @@protoc_insertion_point(field_set:ProtoFriendOrder.RecallCanBuyFoReq.senderUid)
}

// -------------------------------------------------------------------

// ChangeFoStatusReq

// required uint32 myuid = 1;
inline bool ChangeFoStatusReq::has_myuid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ChangeFoStatusReq::set_has_myuid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ChangeFoStatusReq::clear_has_myuid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ChangeFoStatusReq::clear_myuid() {
  myuid_ = 0u;
  clear_has_myuid();
}
inline ::google::protobuf::uint32 ChangeFoStatusReq::myuid() const {
  // @@protoc_insertion_point(field_get:ProtoFriendOrder.ChangeFoStatusReq.myuid)
  return myuid_;
}
inline void ChangeFoStatusReq::set_myuid(::google::protobuf::uint32 value) {
  set_has_myuid();
  myuid_ = value;
  // @@protoc_insertion_point(field_set:ProtoFriendOrder.ChangeFoStatusReq.myuid)
}

// required uint32 myindex = 2;
inline bool ChangeFoStatusReq::has_myindex() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ChangeFoStatusReq::set_has_myindex() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ChangeFoStatusReq::clear_has_myindex() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ChangeFoStatusReq::clear_myindex() {
  myindex_ = 0u;
  clear_has_myindex();
}
inline ::google::protobuf::uint32 ChangeFoStatusReq::myindex() const {
  // @@protoc_insertion_point(field_get:ProtoFriendOrder.ChangeFoStatusReq.myindex)
  return myindex_;
}
inline void ChangeFoStatusReq::set_myindex(::google::protobuf::uint32 value) {
  set_has_myindex();
  myindex_ = value;
  // @@protoc_insertion_point(field_set:ProtoFriendOrder.ChangeFoStatusReq.myindex)
}

// required uint32 newstatus = 3;
inline bool ChangeFoStatusReq::has_newstatus() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ChangeFoStatusReq::set_has_newstatus() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ChangeFoStatusReq::clear_has_newstatus() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ChangeFoStatusReq::clear_newstatus() {
  newstatus_ = 0u;
  clear_has_newstatus();
}
inline ::google::protobuf::uint32 ChangeFoStatusReq::newstatus() const {
  // @@protoc_insertion_point(field_get:ProtoFriendOrder.ChangeFoStatusReq.newstatus)
  return newstatus_;
}
inline void ChangeFoStatusReq::set_newstatus(::google::protobuf::uint32 value) {
  set_has_newstatus();
  newstatus_ = value;
  // @@protoc_insertion_point(field_set:ProtoFriendOrder.ChangeFoStatusReq.newstatus)
}

// -------------------------------------------------------------------

// AnswerWhetherCanBuyReq

// required uint32 result = 1;
inline bool AnswerWhetherCanBuyReq::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AnswerWhetherCanBuyReq::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AnswerWhetherCanBuyReq::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AnswerWhetherCanBuyReq::clear_result() {
  result_ = 0u;
  clear_has_result();
}
inline ::google::protobuf::uint32 AnswerWhetherCanBuyReq::result() const {
  // @@protoc_insertion_point(field_get:ProtoFriendOrder.AnswerWhetherCanBuyReq.result)
  return result_;
}
inline void AnswerWhetherCanBuyReq::set_result(::google::protobuf::uint32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:ProtoFriendOrder.AnswerWhetherCanBuyReq.result)
}

// required uint32 myuid = 2;
inline bool AnswerWhetherCanBuyReq::has_myuid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AnswerWhetherCanBuyReq::set_has_myuid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AnswerWhetherCanBuyReq::clear_has_myuid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AnswerWhetherCanBuyReq::clear_myuid() {
  myuid_ = 0u;
  clear_has_myuid();
}
inline ::google::protobuf::uint32 AnswerWhetherCanBuyReq::myuid() const {
  // @@protoc_insertion_point(field_get:ProtoFriendOrder.AnswerWhetherCanBuyReq.myuid)
  return myuid_;
}
inline void AnswerWhetherCanBuyReq::set_myuid(::google::protobuf::uint32 value) {
  set_has_myuid();
  myuid_ = value;
  // @@protoc_insertion_point(field_set:ProtoFriendOrder.AnswerWhetherCanBuyReq.myuid)
}

// required uint32 myindex = 3;
inline bool AnswerWhetherCanBuyReq::has_myindex() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AnswerWhetherCanBuyReq::set_has_myindex() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AnswerWhetherCanBuyReq::clear_has_myindex() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AnswerWhetherCanBuyReq::clear_myindex() {
  myindex_ = 0u;
  clear_has_myindex();
}
inline ::google::protobuf::uint32 AnswerWhetherCanBuyReq::myindex() const {
  // @@protoc_insertion_point(field_get:ProtoFriendOrder.AnswerWhetherCanBuyReq.myindex)
  return myindex_;
}
inline void AnswerWhetherCanBuyReq::set_myindex(::google::protobuf::uint32 value) {
  set_has_myindex();
  myindex_ = value;
  // @@protoc_insertion_point(field_set:ProtoFriendOrder.AnswerWhetherCanBuyReq.myindex)
}

// required uint32 sourceId = 4;
inline bool AnswerWhetherCanBuyReq::has_sourceid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void AnswerWhetherCanBuyReq::set_has_sourceid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void AnswerWhetherCanBuyReq::clear_has_sourceid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void AnswerWhetherCanBuyReq::clear_sourceid() {
  sourceid_ = 0u;
  clear_has_sourceid();
}
inline ::google::protobuf::uint32 AnswerWhetherCanBuyReq::sourceid() const {
  // @@protoc_insertion_point(field_get:ProtoFriendOrder.AnswerWhetherCanBuyReq.sourceId)
  return sourceid_;
}
inline void AnswerWhetherCanBuyReq::set_sourceid(::google::protobuf::uint32 value) {
  set_has_sourceid();
  sourceid_ = value;
  // @@protoc_insertion_point(field_set:ProtoFriendOrder.AnswerWhetherCanBuyReq.sourceId)
}

// optional uint32 senderUid = 5;
inline bool AnswerWhetherCanBuyReq::has_senderuid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void AnswerWhetherCanBuyReq::set_has_senderuid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void AnswerWhetherCanBuyReq::clear_has_senderuid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void AnswerWhetherCanBuyReq::clear_senderuid() {
  senderuid_ = 0u;
  clear_has_senderuid();
}
inline ::google::protobuf::uint32 AnswerWhetherCanBuyReq::senderuid() const {
  // @@protoc_insertion_point(field_get:ProtoFriendOrder.AnswerWhetherCanBuyReq.senderUid)
  return senderuid_;
}
inline void AnswerWhetherCanBuyReq::set_senderuid(::google::protobuf::uint32 value) {
  set_has_senderuid();
  senderuid_ = value;
  // @@protoc_insertion_point(field_set:ProtoFriendOrder.AnswerWhetherCanBuyReq.senderUid)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace ProtoFriendOrder

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_ProtoFriendOrder_2eproto__INCLUDED
