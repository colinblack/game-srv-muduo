// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ProtoMessageBoard.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "ProtoMessageBoard.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace ProtoMessageBoard {

namespace {

const ::google::protobuf::Descriptor* MessageInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MessageInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetMessageBoardReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetMessageBoardReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetMessageBoardResp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetMessageBoardResp_reflection_ = NULL;
const ::google::protobuf::Descriptor* HasNewLeaveMessageReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  HasNewLeaveMessageReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* HasNewLeaveMessageResp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  HasNewLeaveMessageResp_reflection_ = NULL;
const ::google::protobuf::Descriptor* DeleteMessageBoardReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DeleteMessageBoardReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* LeaveMessageReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  LeaveMessageReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* AnswerLeaveMessageReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AnswerLeaveMessageReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* LeaveMessageResp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  LeaveMessageResp_reflection_ = NULL;
const ::google::protobuf::Descriptor* SendLeaveMsgOverServerReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SendLeaveMsgOverServerReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetMasterVisiableMsgReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetMasterVisiableMsgReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* DeleteMyMsgOverServerReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DeleteMyMsgOverServerReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* FeedbackInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  FeedbackInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetFeedbackReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetFeedbackReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetFeedbackResp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetFeedbackResp_reflection_ = NULL;
const ::google::protobuf::Descriptor* SendFeedbackReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SendFeedbackReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* SendFeedbackResp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SendFeedbackResp_reflection_ = NULL;
const ::google::protobuf::Descriptor* DelFeedbackReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DelFeedbackReq_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_ProtoMessageBoard_2eproto() {
  protobuf_AddDesc_ProtoMessageBoard_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "ProtoMessageBoard.proto");
  GOOGLE_CHECK(file != NULL);
  MessageInfo_descriptor_ = file->message_type(0);
  static const int MessageInfo_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageInfo, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageInfo, ts_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageInfo, typeid__),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageInfo, senderuid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageInfo, words_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageInfo, receiveruid_),
  };
  MessageInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MessageInfo_descriptor_,
      MessageInfo::default_instance_,
      MessageInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MessageInfo));
  GetMessageBoardReq_descriptor_ = file->message_type(1);
  static const int GetMessageBoardReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetMessageBoardReq, masteruid_),
  };
  GetMessageBoardReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GetMessageBoardReq_descriptor_,
      GetMessageBoardReq::default_instance_,
      GetMessageBoardReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetMessageBoardReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetMessageBoardReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GetMessageBoardReq));
  GetMessageBoardResp_descriptor_ = file->message_type(2);
  static const int GetMessageBoardResp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetMessageBoardResp, arraymsgbrd_),
  };
  GetMessageBoardResp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GetMessageBoardResp_descriptor_,
      GetMessageBoardResp::default_instance_,
      GetMessageBoardResp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetMessageBoardResp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetMessageBoardResp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GetMessageBoardResp));
  HasNewLeaveMessageReq_descriptor_ = file->message_type(3);
  static const int HasNewLeaveMessageReq_offsets_[1] = {
  };
  HasNewLeaveMessageReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      HasNewLeaveMessageReq_descriptor_,
      HasNewLeaveMessageReq::default_instance_,
      HasNewLeaveMessageReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HasNewLeaveMessageReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HasNewLeaveMessageReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(HasNewLeaveMessageReq));
  HasNewLeaveMessageResp_descriptor_ = file->message_type(4);
  static const int HasNewLeaveMessageResp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HasNewLeaveMessageResp, hasnewmsg_),
  };
  HasNewLeaveMessageResp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      HasNewLeaveMessageResp_descriptor_,
      HasNewLeaveMessageResp::default_instance_,
      HasNewLeaveMessageResp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HasNewLeaveMessageResp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HasNewLeaveMessageResp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(HasNewLeaveMessageResp));
  DeleteMessageBoardReq_descriptor_ = file->message_type(5);
  static const int DeleteMessageBoardReq_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteMessageBoardReq, masteruid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteMessageBoardReq, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteMessageBoardReq, typeid__),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteMessageBoardReq, senderuid_),
  };
  DeleteMessageBoardReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DeleteMessageBoardReq_descriptor_,
      DeleteMessageBoardReq::default_instance_,
      DeleteMessageBoardReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteMessageBoardReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteMessageBoardReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(DeleteMessageBoardReq));
  LeaveMessageReq_descriptor_ = file->message_type(6);
  static const int LeaveMessageReq_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LeaveMessageReq, masteruid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LeaveMessageReq, typeid__),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LeaveMessageReq, words_),
  };
  LeaveMessageReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      LeaveMessageReq_descriptor_,
      LeaveMessageReq::default_instance_,
      LeaveMessageReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LeaveMessageReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LeaveMessageReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(LeaveMessageReq));
  AnswerLeaveMessageReq_descriptor_ = file->message_type(7);
  static const int AnswerLeaveMessageReq_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AnswerLeaveMessageReq, senderuid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AnswerLeaveMessageReq, typeid__),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AnswerLeaveMessageReq, words_),
  };
  AnswerLeaveMessageReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      AnswerLeaveMessageReq_descriptor_,
      AnswerLeaveMessageReq::default_instance_,
      AnswerLeaveMessageReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AnswerLeaveMessageReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AnswerLeaveMessageReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(AnswerLeaveMessageReq));
  LeaveMessageResp_descriptor_ = file->message_type(8);
  static const int LeaveMessageResp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LeaveMessageResp, newmsg_),
  };
  LeaveMessageResp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      LeaveMessageResp_descriptor_,
      LeaveMessageResp::default_instance_,
      LeaveMessageResp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LeaveMessageResp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LeaveMessageResp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(LeaveMessageResp));
  SendLeaveMsgOverServerReq_descriptor_ = file->message_type(9);
  static const int SendLeaveMsgOverServerReq_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SendLeaveMsgOverServerReq, model_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SendLeaveMsgOverServerReq, sender_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SendLeaveMsgOverServerReq, receiver_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SendLeaveMsgOverServerReq, typeid__),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SendLeaveMsgOverServerReq, words_),
  };
  SendLeaveMsgOverServerReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      SendLeaveMsgOverServerReq_descriptor_,
      SendLeaveMsgOverServerReq::default_instance_,
      SendLeaveMsgOverServerReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SendLeaveMsgOverServerReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SendLeaveMsgOverServerReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(SendLeaveMsgOverServerReq));
  GetMasterVisiableMsgReq_descriptor_ = file->message_type(10);
  static const int GetMasterVisiableMsgReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetMasterVisiableMsgReq, myuid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetMasterVisiableMsgReq, masteruid_),
  };
  GetMasterVisiableMsgReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GetMasterVisiableMsgReq_descriptor_,
      GetMasterVisiableMsgReq::default_instance_,
      GetMasterVisiableMsgReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetMasterVisiableMsgReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetMasterVisiableMsgReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GetMasterVisiableMsgReq));
  DeleteMyMsgOverServerReq_descriptor_ = file->message_type(11);
  static const int DeleteMyMsgOverServerReq_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteMyMsgOverServerReq, myuid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteMyMsgOverServerReq, masteruid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteMyMsgOverServerReq, id_),
  };
  DeleteMyMsgOverServerReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DeleteMyMsgOverServerReq_descriptor_,
      DeleteMyMsgOverServerReq::default_instance_,
      DeleteMyMsgOverServerReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteMyMsgOverServerReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteMyMsgOverServerReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(DeleteMyMsgOverServerReq));
  FeedbackInfo_descriptor_ = file->message_type(12);
  static const int FeedbackInfo_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FeedbackInfo, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FeedbackInfo, ts_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FeedbackInfo, words_),
  };
  FeedbackInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      FeedbackInfo_descriptor_,
      FeedbackInfo::default_instance_,
      FeedbackInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FeedbackInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FeedbackInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(FeedbackInfo));
  GetFeedbackReq_descriptor_ = file->message_type(13);
  static const int GetFeedbackReq_offsets_[1] = {
  };
  GetFeedbackReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GetFeedbackReq_descriptor_,
      GetFeedbackReq::default_instance_,
      GetFeedbackReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetFeedbackReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetFeedbackReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GetFeedbackReq));
  GetFeedbackResp_descriptor_ = file->message_type(14);
  static const int GetFeedbackResp_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetFeedbackResp, resttimes_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetFeedbackResp, arrayfeedback_),
  };
  GetFeedbackResp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GetFeedbackResp_descriptor_,
      GetFeedbackResp::default_instance_,
      GetFeedbackResp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetFeedbackResp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetFeedbackResp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GetFeedbackResp));
  SendFeedbackReq_descriptor_ = file->message_type(15);
  static const int SendFeedbackReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SendFeedbackReq, words_),
  };
  SendFeedbackReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      SendFeedbackReq_descriptor_,
      SendFeedbackReq::default_instance_,
      SendFeedbackReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SendFeedbackReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SendFeedbackReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(SendFeedbackReq));
  SendFeedbackResp_descriptor_ = file->message_type(16);
  static const int SendFeedbackResp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SendFeedbackResp, yourfeedback_),
  };
  SendFeedbackResp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      SendFeedbackResp_descriptor_,
      SendFeedbackResp::default_instance_,
      SendFeedbackResp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SendFeedbackResp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SendFeedbackResp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(SendFeedbackResp));
  DelFeedbackReq_descriptor_ = file->message_type(17);
  static const int DelFeedbackReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DelFeedbackReq, id_),
  };
  DelFeedbackReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DelFeedbackReq_descriptor_,
      DelFeedbackReq::default_instance_,
      DelFeedbackReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DelFeedbackReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DelFeedbackReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(DelFeedbackReq));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_ProtoMessageBoard_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MessageInfo_descriptor_, &MessageInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GetMessageBoardReq_descriptor_, &GetMessageBoardReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GetMessageBoardResp_descriptor_, &GetMessageBoardResp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    HasNewLeaveMessageReq_descriptor_, &HasNewLeaveMessageReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    HasNewLeaveMessageResp_descriptor_, &HasNewLeaveMessageResp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DeleteMessageBoardReq_descriptor_, &DeleteMessageBoardReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    LeaveMessageReq_descriptor_, &LeaveMessageReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    AnswerLeaveMessageReq_descriptor_, &AnswerLeaveMessageReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    LeaveMessageResp_descriptor_, &LeaveMessageResp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    SendLeaveMsgOverServerReq_descriptor_, &SendLeaveMsgOverServerReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GetMasterVisiableMsgReq_descriptor_, &GetMasterVisiableMsgReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DeleteMyMsgOverServerReq_descriptor_, &DeleteMyMsgOverServerReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    FeedbackInfo_descriptor_, &FeedbackInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GetFeedbackReq_descriptor_, &GetFeedbackReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GetFeedbackResp_descriptor_, &GetFeedbackResp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    SendFeedbackReq_descriptor_, &SendFeedbackReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    SendFeedbackResp_descriptor_, &SendFeedbackResp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DelFeedbackReq_descriptor_, &DelFeedbackReq::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_ProtoMessageBoard_2eproto() {
  delete MessageInfo::default_instance_;
  delete MessageInfo_reflection_;
  delete GetMessageBoardReq::default_instance_;
  delete GetMessageBoardReq_reflection_;
  delete GetMessageBoardResp::default_instance_;
  delete GetMessageBoardResp_reflection_;
  delete HasNewLeaveMessageReq::default_instance_;
  delete HasNewLeaveMessageReq_reflection_;
  delete HasNewLeaveMessageResp::default_instance_;
  delete HasNewLeaveMessageResp_reflection_;
  delete DeleteMessageBoardReq::default_instance_;
  delete DeleteMessageBoardReq_reflection_;
  delete LeaveMessageReq::default_instance_;
  delete LeaveMessageReq_reflection_;
  delete AnswerLeaveMessageReq::default_instance_;
  delete AnswerLeaveMessageReq_reflection_;
  delete LeaveMessageResp::default_instance_;
  delete LeaveMessageResp_reflection_;
  delete SendLeaveMsgOverServerReq::default_instance_;
  delete SendLeaveMsgOverServerReq_reflection_;
  delete GetMasterVisiableMsgReq::default_instance_;
  delete GetMasterVisiableMsgReq_reflection_;
  delete DeleteMyMsgOverServerReq::default_instance_;
  delete DeleteMyMsgOverServerReq_reflection_;
  delete FeedbackInfo::default_instance_;
  delete FeedbackInfo_reflection_;
  delete GetFeedbackReq::default_instance_;
  delete GetFeedbackReq_reflection_;
  delete GetFeedbackResp::default_instance_;
  delete GetFeedbackResp_reflection_;
  delete SendFeedbackReq::default_instance_;
  delete SendFeedbackReq_reflection_;
  delete SendFeedbackResp::default_instance_;
  delete SendFeedbackResp_reflection_;
  delete DelFeedbackReq::default_instance_;
  delete DelFeedbackReq_reflection_;
}

void protobuf_AddDesc_ProtoMessageBoard_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\027ProtoMessageBoard.proto\022\021ProtoMessageB"
    "oard\"l\n\013MessageInfo\022\n\n\002id\030\001 \002(\r\022\n\n\002ts\030\002 "
    "\002(\r\022\016\n\006typeId\030\003 \002(\r\022\021\n\tsenderUid\030\004 \002(\r\022\r"
    "\n\005words\030\005 \002(\014\022\023\n\013receiverUid\030\006 \002(\r\"\'\n\022Ge"
    "tMessageBoardReq\022\021\n\tmasteruid\030\001 \002(\r\"J\n\023G"
    "etMessageBoardResp\0223\n\013arrayMsgBrd\030\001 \003(\0132"
    "\036.ProtoMessageBoard.MessageInfo\"\027\n\025HasNe"
    "wLeaveMessageReq\"+\n\026HasNewLeaveMessageRe"
    "sp\022\021\n\tHasNewMsg\030\001 \002(\010\"Y\n\025DeleteMessageBo"
    "ardReq\022\021\n\tmasteruid\030\001 \002(\r\022\n\n\002id\030\002 \002(\r\022\016\n"
    "\006typeId\030\003 \002(\r\022\021\n\tsenderUid\030\004 \002(\r\"C\n\017Leav"
    "eMessageReq\022\021\n\tmasteruid\030\001 \002(\r\022\016\n\006typeId"
    "\030\002 \002(\r\022\r\n\005words\030\003 \002(\014\"I\n\025AnswerLeaveMess"
    "ageReq\022\021\n\tsenderUid\030\001 \002(\r\022\016\n\006typeId\030\002 \002("
    "\r\022\r\n\005words\030\003 \002(\014\"B\n\020LeaveMessageResp\022.\n\006"
    "newMsg\030\001 \002(\0132\036.ProtoMessageBoard.Message"
    "Info\"k\n\031SendLeaveMsgOverServerReq\022\r\n\005mod"
    "el\030\001 \002(\r\022\016\n\006sender\030\002 \002(\r\022\020\n\010receiver\030\003 \002"
    "(\r\022\016\n\006typeid\030\004 \002(\r\022\r\n\005words\030\005 \002(\014\";\n\027Get"
    "MasterVisiableMsgReq\022\r\n\005myuid\030\001 \002(\r\022\021\n\tm"
    "asteruid\030\002 \002(\r\"H\n\030DeleteMyMsgOverServerR"
    "eq\022\r\n\005myuid\030\001 \002(\r\022\021\n\tmasteruid\030\002 \002(\r\022\n\n\002"
    "id\030\003 \002(\r\"5\n\014FeedbackInfo\022\n\n\002id\030\001 \002(\r\022\n\n\002"
    "ts\030\002 \002(\r\022\r\n\005words\030\003 \002(\014\"\020\n\016GetFeedbackRe"
    "q\"\\\n\017GetFeedbackResp\022\021\n\trestTimes\030\001 \002(\r\022"
    "6\n\rarrayFeedback\030\002 \003(\0132\037.ProtoMessageBoa"
    "rd.FeedbackInfo\" \n\017SendFeedbackReq\022\r\n\005wo"
    "rds\030\001 \002(\014\"I\n\020SendFeedbackResp\0225\n\014yourFee"
    "dback\030\001 \002(\0132\037.ProtoMessageBoard.Feedback"
    "Info\"\034\n\016DelFeedbackReq\022\n\n\002id\030\001 \002(\r", 1194);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "ProtoMessageBoard.proto", &protobuf_RegisterTypes);
  MessageInfo::default_instance_ = new MessageInfo();
  GetMessageBoardReq::default_instance_ = new GetMessageBoardReq();
  GetMessageBoardResp::default_instance_ = new GetMessageBoardResp();
  HasNewLeaveMessageReq::default_instance_ = new HasNewLeaveMessageReq();
  HasNewLeaveMessageResp::default_instance_ = new HasNewLeaveMessageResp();
  DeleteMessageBoardReq::default_instance_ = new DeleteMessageBoardReq();
  LeaveMessageReq::default_instance_ = new LeaveMessageReq();
  AnswerLeaveMessageReq::default_instance_ = new AnswerLeaveMessageReq();
  LeaveMessageResp::default_instance_ = new LeaveMessageResp();
  SendLeaveMsgOverServerReq::default_instance_ = new SendLeaveMsgOverServerReq();
  GetMasterVisiableMsgReq::default_instance_ = new GetMasterVisiableMsgReq();
  DeleteMyMsgOverServerReq::default_instance_ = new DeleteMyMsgOverServerReq();
  FeedbackInfo::default_instance_ = new FeedbackInfo();
  GetFeedbackReq::default_instance_ = new GetFeedbackReq();
  GetFeedbackResp::default_instance_ = new GetFeedbackResp();
  SendFeedbackReq::default_instance_ = new SendFeedbackReq();
  SendFeedbackResp::default_instance_ = new SendFeedbackResp();
  DelFeedbackReq::default_instance_ = new DelFeedbackReq();
  MessageInfo::default_instance_->InitAsDefaultInstance();
  GetMessageBoardReq::default_instance_->InitAsDefaultInstance();
  GetMessageBoardResp::default_instance_->InitAsDefaultInstance();
  HasNewLeaveMessageReq::default_instance_->InitAsDefaultInstance();
  HasNewLeaveMessageResp::default_instance_->InitAsDefaultInstance();
  DeleteMessageBoardReq::default_instance_->InitAsDefaultInstance();
  LeaveMessageReq::default_instance_->InitAsDefaultInstance();
  AnswerLeaveMessageReq::default_instance_->InitAsDefaultInstance();
  LeaveMessageResp::default_instance_->InitAsDefaultInstance();
  SendLeaveMsgOverServerReq::default_instance_->InitAsDefaultInstance();
  GetMasterVisiableMsgReq::default_instance_->InitAsDefaultInstance();
  DeleteMyMsgOverServerReq::default_instance_->InitAsDefaultInstance();
  FeedbackInfo::default_instance_->InitAsDefaultInstance();
  GetFeedbackReq::default_instance_->InitAsDefaultInstance();
  GetFeedbackResp::default_instance_->InitAsDefaultInstance();
  SendFeedbackReq::default_instance_->InitAsDefaultInstance();
  SendFeedbackResp::default_instance_->InitAsDefaultInstance();
  DelFeedbackReq::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_ProtoMessageBoard_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_ProtoMessageBoard_2eproto {
  StaticDescriptorInitializer_ProtoMessageBoard_2eproto() {
    protobuf_AddDesc_ProtoMessageBoard_2eproto();
  }
} static_descriptor_initializer_ProtoMessageBoard_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int MessageInfo::kIdFieldNumber;
const int MessageInfo::kTsFieldNumber;
const int MessageInfo::kTypeIdFieldNumber;
const int MessageInfo::kSenderUidFieldNumber;
const int MessageInfo::kWordsFieldNumber;
const int MessageInfo::kReceiverUidFieldNumber;
#endif  // !_MSC_VER

MessageInfo::MessageInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoMessageBoard.MessageInfo)
}

void MessageInfo::InitAsDefaultInstance() {
}

MessageInfo::MessageInfo(const MessageInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ProtoMessageBoard.MessageInfo)
}

void MessageInfo::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  id_ = 0u;
  ts_ = 0u;
  typeid__ = 0u;
  senderuid_ = 0u;
  words_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  receiveruid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MessageInfo::~MessageInfo() {
  // @@protoc_insertion_point(destructor:ProtoMessageBoard.MessageInfo)
  SharedDtor();
}

void MessageInfo::SharedDtor() {
  if (words_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete words_;
  }
  if (this != default_instance_) {
  }
}

void MessageInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MessageInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MessageInfo_descriptor_;
}

const MessageInfo& MessageInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoMessageBoard_2eproto();
  return *default_instance_;
}

MessageInfo* MessageInfo::default_instance_ = NULL;

MessageInfo* MessageInfo::New() const {
  return new MessageInfo;
}

void MessageInfo::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MessageInfo*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 63) {
    ZR_(id_, senderuid_);
    if (has_words()) {
      if (words_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        words_->clear();
      }
    }
    receiveruid_ = 0u;
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MessageInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoMessageBoard.MessageInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_ts;
        break;
      }

      // required uint32 ts = 2;
      case 2: {
        if (tag == 16) {
         parse_ts:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ts_)));
          set_has_ts();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_typeId;
        break;
      }

      // required uint32 typeId = 3;
      case 3: {
        if (tag == 24) {
         parse_typeId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &typeid__)));
          set_has_typeid_();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_senderUid;
        break;
      }

      // required uint32 senderUid = 4;
      case 4: {
        if (tag == 32) {
         parse_senderUid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &senderuid_)));
          set_has_senderuid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_words;
        break;
      }

      // required bytes words = 5;
      case 5: {
        if (tag == 42) {
         parse_words:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_words()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_receiverUid;
        break;
      }

      // required uint32 receiverUid = 6;
      case 6: {
        if (tag == 48) {
         parse_receiverUid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &receiveruid_)));
          set_has_receiveruid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoMessageBoard.MessageInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoMessageBoard.MessageInfo)
  return false;
#undef DO_
}

void MessageInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoMessageBoard.MessageInfo)
  // required uint32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  // required uint32 ts = 2;
  if (has_ts()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->ts(), output);
  }

  // required uint32 typeId = 3;
  if (has_typeid_()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->typeid_(), output);
  }

  // required uint32 senderUid = 4;
  if (has_senderuid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->senderuid(), output);
  }

  // required bytes words = 5;
  if (has_words()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      5, this->words(), output);
  }

  // required uint32 receiverUid = 6;
  if (has_receiveruid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->receiveruid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoMessageBoard.MessageInfo)
}

::google::protobuf::uint8* MessageInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoMessageBoard.MessageInfo)
  // required uint32 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  // required uint32 ts = 2;
  if (has_ts()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->ts(), target);
  }

  // required uint32 typeId = 3;
  if (has_typeid_()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->typeid_(), target);
  }

  // required uint32 senderUid = 4;
  if (has_senderuid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->senderuid(), target);
  }

  // required bytes words = 5;
  if (has_words()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        5, this->words(), target);
  }

  // required uint32 receiverUid = 6;
  if (has_receiveruid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->receiveruid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoMessageBoard.MessageInfo)
  return target;
}

int MessageInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->id());
    }

    // required uint32 ts = 2;
    if (has_ts()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->ts());
    }

    // required uint32 typeId = 3;
    if (has_typeid_()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->typeid_());
    }

    // required uint32 senderUid = 4;
    if (has_senderuid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->senderuid());
    }

    // required bytes words = 5;
    if (has_words()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->words());
    }

    // required uint32 receiverUid = 6;
    if (has_receiveruid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->receiveruid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MessageInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MessageInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MessageInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MessageInfo::MergeFrom(const MessageInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_ts()) {
      set_ts(from.ts());
    }
    if (from.has_typeid_()) {
      set_typeid_(from.typeid_());
    }
    if (from.has_senderuid()) {
      set_senderuid(from.senderuid());
    }
    if (from.has_words()) {
      set_words(from.words());
    }
    if (from.has_receiveruid()) {
      set_receiveruid(from.receiveruid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MessageInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MessageInfo::CopyFrom(const MessageInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MessageInfo::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000003f) != 0x0000003f) return false;

  return true;
}

void MessageInfo::Swap(MessageInfo* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(ts_, other->ts_);
    std::swap(typeid__, other->typeid__);
    std::swap(senderuid_, other->senderuid_);
    std::swap(words_, other->words_);
    std::swap(receiveruid_, other->receiveruid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MessageInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MessageInfo_descriptor_;
  metadata.reflection = MessageInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GetMessageBoardReq::kMasteruidFieldNumber;
#endif  // !_MSC_VER

GetMessageBoardReq::GetMessageBoardReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoMessageBoard.GetMessageBoardReq)
}

void GetMessageBoardReq::InitAsDefaultInstance() {
}

GetMessageBoardReq::GetMessageBoardReq(const GetMessageBoardReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ProtoMessageBoard.GetMessageBoardReq)
}

void GetMessageBoardReq::SharedCtor() {
  _cached_size_ = 0;
  masteruid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GetMessageBoardReq::~GetMessageBoardReq() {
  // @@protoc_insertion_point(destructor:ProtoMessageBoard.GetMessageBoardReq)
  SharedDtor();
}

void GetMessageBoardReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GetMessageBoardReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetMessageBoardReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetMessageBoardReq_descriptor_;
}

const GetMessageBoardReq& GetMessageBoardReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoMessageBoard_2eproto();
  return *default_instance_;
}

GetMessageBoardReq* GetMessageBoardReq::default_instance_ = NULL;

GetMessageBoardReq* GetMessageBoardReq::New() const {
  return new GetMessageBoardReq;
}

void GetMessageBoardReq::Clear() {
  masteruid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GetMessageBoardReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoMessageBoard.GetMessageBoardReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 masteruid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &masteruid_)));
          set_has_masteruid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoMessageBoard.GetMessageBoardReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoMessageBoard.GetMessageBoardReq)
  return false;
#undef DO_
}

void GetMessageBoardReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoMessageBoard.GetMessageBoardReq)
  // required uint32 masteruid = 1;
  if (has_masteruid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->masteruid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoMessageBoard.GetMessageBoardReq)
}

::google::protobuf::uint8* GetMessageBoardReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoMessageBoard.GetMessageBoardReq)
  // required uint32 masteruid = 1;
  if (has_masteruid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->masteruid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoMessageBoard.GetMessageBoardReq)
  return target;
}

int GetMessageBoardReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 masteruid = 1;
    if (has_masteruid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->masteruid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetMessageBoardReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GetMessageBoardReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GetMessageBoardReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GetMessageBoardReq::MergeFrom(const GetMessageBoardReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_masteruid()) {
      set_masteruid(from.masteruid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GetMessageBoardReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetMessageBoardReq::CopyFrom(const GetMessageBoardReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetMessageBoardReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void GetMessageBoardReq::Swap(GetMessageBoardReq* other) {
  if (other != this) {
    std::swap(masteruid_, other->masteruid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GetMessageBoardReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetMessageBoardReq_descriptor_;
  metadata.reflection = GetMessageBoardReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GetMessageBoardResp::kArrayMsgBrdFieldNumber;
#endif  // !_MSC_VER

GetMessageBoardResp::GetMessageBoardResp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoMessageBoard.GetMessageBoardResp)
}

void GetMessageBoardResp::InitAsDefaultInstance() {
}

GetMessageBoardResp::GetMessageBoardResp(const GetMessageBoardResp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ProtoMessageBoard.GetMessageBoardResp)
}

void GetMessageBoardResp::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GetMessageBoardResp::~GetMessageBoardResp() {
  // @@protoc_insertion_point(destructor:ProtoMessageBoard.GetMessageBoardResp)
  SharedDtor();
}

void GetMessageBoardResp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GetMessageBoardResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetMessageBoardResp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetMessageBoardResp_descriptor_;
}

const GetMessageBoardResp& GetMessageBoardResp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoMessageBoard_2eproto();
  return *default_instance_;
}

GetMessageBoardResp* GetMessageBoardResp::default_instance_ = NULL;

GetMessageBoardResp* GetMessageBoardResp::New() const {
  return new GetMessageBoardResp;
}

void GetMessageBoardResp::Clear() {
  arraymsgbrd_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GetMessageBoardResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoMessageBoard.GetMessageBoardResp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ProtoMessageBoard.MessageInfo arrayMsgBrd = 1;
      case 1: {
        if (tag == 10) {
         parse_arrayMsgBrd:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_arraymsgbrd()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_arrayMsgBrd;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoMessageBoard.GetMessageBoardResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoMessageBoard.GetMessageBoardResp)
  return false;
#undef DO_
}

void GetMessageBoardResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoMessageBoard.GetMessageBoardResp)
  // repeated .ProtoMessageBoard.MessageInfo arrayMsgBrd = 1;
  for (int i = 0; i < this->arraymsgbrd_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->arraymsgbrd(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoMessageBoard.GetMessageBoardResp)
}

::google::protobuf::uint8* GetMessageBoardResp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoMessageBoard.GetMessageBoardResp)
  // repeated .ProtoMessageBoard.MessageInfo arrayMsgBrd = 1;
  for (int i = 0; i < this->arraymsgbrd_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->arraymsgbrd(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoMessageBoard.GetMessageBoardResp)
  return target;
}

int GetMessageBoardResp::ByteSize() const {
  int total_size = 0;

  // repeated .ProtoMessageBoard.MessageInfo arrayMsgBrd = 1;
  total_size += 1 * this->arraymsgbrd_size();
  for (int i = 0; i < this->arraymsgbrd_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->arraymsgbrd(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetMessageBoardResp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GetMessageBoardResp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GetMessageBoardResp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GetMessageBoardResp::MergeFrom(const GetMessageBoardResp& from) {
  GOOGLE_CHECK_NE(&from, this);
  arraymsgbrd_.MergeFrom(from.arraymsgbrd_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GetMessageBoardResp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetMessageBoardResp::CopyFrom(const GetMessageBoardResp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetMessageBoardResp::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->arraymsgbrd())) return false;
  return true;
}

void GetMessageBoardResp::Swap(GetMessageBoardResp* other) {
  if (other != this) {
    arraymsgbrd_.Swap(&other->arraymsgbrd_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GetMessageBoardResp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetMessageBoardResp_descriptor_;
  metadata.reflection = GetMessageBoardResp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

HasNewLeaveMessageReq::HasNewLeaveMessageReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoMessageBoard.HasNewLeaveMessageReq)
}

void HasNewLeaveMessageReq::InitAsDefaultInstance() {
}

HasNewLeaveMessageReq::HasNewLeaveMessageReq(const HasNewLeaveMessageReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ProtoMessageBoard.HasNewLeaveMessageReq)
}

void HasNewLeaveMessageReq::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

HasNewLeaveMessageReq::~HasNewLeaveMessageReq() {
  // @@protoc_insertion_point(destructor:ProtoMessageBoard.HasNewLeaveMessageReq)
  SharedDtor();
}

void HasNewLeaveMessageReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void HasNewLeaveMessageReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HasNewLeaveMessageReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return HasNewLeaveMessageReq_descriptor_;
}

const HasNewLeaveMessageReq& HasNewLeaveMessageReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoMessageBoard_2eproto();
  return *default_instance_;
}

HasNewLeaveMessageReq* HasNewLeaveMessageReq::default_instance_ = NULL;

HasNewLeaveMessageReq* HasNewLeaveMessageReq::New() const {
  return new HasNewLeaveMessageReq;
}

void HasNewLeaveMessageReq::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool HasNewLeaveMessageReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoMessageBoard.HasNewLeaveMessageReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoMessageBoard.HasNewLeaveMessageReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoMessageBoard.HasNewLeaveMessageReq)
  return false;
#undef DO_
}

void HasNewLeaveMessageReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoMessageBoard.HasNewLeaveMessageReq)
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoMessageBoard.HasNewLeaveMessageReq)
}

::google::protobuf::uint8* HasNewLeaveMessageReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoMessageBoard.HasNewLeaveMessageReq)
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoMessageBoard.HasNewLeaveMessageReq)
  return target;
}

int HasNewLeaveMessageReq::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HasNewLeaveMessageReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const HasNewLeaveMessageReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const HasNewLeaveMessageReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void HasNewLeaveMessageReq::MergeFrom(const HasNewLeaveMessageReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void HasNewLeaveMessageReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HasNewLeaveMessageReq::CopyFrom(const HasNewLeaveMessageReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HasNewLeaveMessageReq::IsInitialized() const {

  return true;
}

void HasNewLeaveMessageReq::Swap(HasNewLeaveMessageReq* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata HasNewLeaveMessageReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = HasNewLeaveMessageReq_descriptor_;
  metadata.reflection = HasNewLeaveMessageReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int HasNewLeaveMessageResp::kHasNewMsgFieldNumber;
#endif  // !_MSC_VER

HasNewLeaveMessageResp::HasNewLeaveMessageResp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoMessageBoard.HasNewLeaveMessageResp)
}

void HasNewLeaveMessageResp::InitAsDefaultInstance() {
}

HasNewLeaveMessageResp::HasNewLeaveMessageResp(const HasNewLeaveMessageResp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ProtoMessageBoard.HasNewLeaveMessageResp)
}

void HasNewLeaveMessageResp::SharedCtor() {
  _cached_size_ = 0;
  hasnewmsg_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

HasNewLeaveMessageResp::~HasNewLeaveMessageResp() {
  // @@protoc_insertion_point(destructor:ProtoMessageBoard.HasNewLeaveMessageResp)
  SharedDtor();
}

void HasNewLeaveMessageResp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void HasNewLeaveMessageResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HasNewLeaveMessageResp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return HasNewLeaveMessageResp_descriptor_;
}

const HasNewLeaveMessageResp& HasNewLeaveMessageResp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoMessageBoard_2eproto();
  return *default_instance_;
}

HasNewLeaveMessageResp* HasNewLeaveMessageResp::default_instance_ = NULL;

HasNewLeaveMessageResp* HasNewLeaveMessageResp::New() const {
  return new HasNewLeaveMessageResp;
}

void HasNewLeaveMessageResp::Clear() {
  hasnewmsg_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool HasNewLeaveMessageResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoMessageBoard.HasNewLeaveMessageResp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bool HasNewMsg = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &hasnewmsg_)));
          set_has_hasnewmsg();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoMessageBoard.HasNewLeaveMessageResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoMessageBoard.HasNewLeaveMessageResp)
  return false;
#undef DO_
}

void HasNewLeaveMessageResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoMessageBoard.HasNewLeaveMessageResp)
  // required bool HasNewMsg = 1;
  if (has_hasnewmsg()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->hasnewmsg(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoMessageBoard.HasNewLeaveMessageResp)
}

::google::protobuf::uint8* HasNewLeaveMessageResp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoMessageBoard.HasNewLeaveMessageResp)
  // required bool HasNewMsg = 1;
  if (has_hasnewmsg()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->hasnewmsg(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoMessageBoard.HasNewLeaveMessageResp)
  return target;
}

int HasNewLeaveMessageResp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required bool HasNewMsg = 1;
    if (has_hasnewmsg()) {
      total_size += 1 + 1;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HasNewLeaveMessageResp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const HasNewLeaveMessageResp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const HasNewLeaveMessageResp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void HasNewLeaveMessageResp::MergeFrom(const HasNewLeaveMessageResp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_hasnewmsg()) {
      set_hasnewmsg(from.hasnewmsg());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void HasNewLeaveMessageResp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HasNewLeaveMessageResp::CopyFrom(const HasNewLeaveMessageResp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HasNewLeaveMessageResp::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void HasNewLeaveMessageResp::Swap(HasNewLeaveMessageResp* other) {
  if (other != this) {
    std::swap(hasnewmsg_, other->hasnewmsg_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata HasNewLeaveMessageResp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = HasNewLeaveMessageResp_descriptor_;
  metadata.reflection = HasNewLeaveMessageResp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int DeleteMessageBoardReq::kMasteruidFieldNumber;
const int DeleteMessageBoardReq::kIdFieldNumber;
const int DeleteMessageBoardReq::kTypeIdFieldNumber;
const int DeleteMessageBoardReq::kSenderUidFieldNumber;
#endif  // !_MSC_VER

DeleteMessageBoardReq::DeleteMessageBoardReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoMessageBoard.DeleteMessageBoardReq)
}

void DeleteMessageBoardReq::InitAsDefaultInstance() {
}

DeleteMessageBoardReq::DeleteMessageBoardReq(const DeleteMessageBoardReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ProtoMessageBoard.DeleteMessageBoardReq)
}

void DeleteMessageBoardReq::SharedCtor() {
  _cached_size_ = 0;
  masteruid_ = 0u;
  id_ = 0u;
  typeid__ = 0u;
  senderuid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DeleteMessageBoardReq::~DeleteMessageBoardReq() {
  // @@protoc_insertion_point(destructor:ProtoMessageBoard.DeleteMessageBoardReq)
  SharedDtor();
}

void DeleteMessageBoardReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void DeleteMessageBoardReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DeleteMessageBoardReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DeleteMessageBoardReq_descriptor_;
}

const DeleteMessageBoardReq& DeleteMessageBoardReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoMessageBoard_2eproto();
  return *default_instance_;
}

DeleteMessageBoardReq* DeleteMessageBoardReq::default_instance_ = NULL;

DeleteMessageBoardReq* DeleteMessageBoardReq::New() const {
  return new DeleteMessageBoardReq;
}

void DeleteMessageBoardReq::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<DeleteMessageBoardReq*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(masteruid_, senderuid_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool DeleteMessageBoardReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoMessageBoard.DeleteMessageBoardReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 masteruid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &masteruid_)));
          set_has_masteruid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_id;
        break;
      }

      // required uint32 id = 2;
      case 2: {
        if (tag == 16) {
         parse_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_typeId;
        break;
      }

      // required uint32 typeId = 3;
      case 3: {
        if (tag == 24) {
         parse_typeId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &typeid__)));
          set_has_typeid_();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_senderUid;
        break;
      }

      // required uint32 senderUid = 4;
      case 4: {
        if (tag == 32) {
         parse_senderUid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &senderuid_)));
          set_has_senderuid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoMessageBoard.DeleteMessageBoardReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoMessageBoard.DeleteMessageBoardReq)
  return false;
#undef DO_
}

void DeleteMessageBoardReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoMessageBoard.DeleteMessageBoardReq)
  // required uint32 masteruid = 1;
  if (has_masteruid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->masteruid(), output);
  }

  // required uint32 id = 2;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->id(), output);
  }

  // required uint32 typeId = 3;
  if (has_typeid_()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->typeid_(), output);
  }

  // required uint32 senderUid = 4;
  if (has_senderuid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->senderuid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoMessageBoard.DeleteMessageBoardReq)
}

::google::protobuf::uint8* DeleteMessageBoardReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoMessageBoard.DeleteMessageBoardReq)
  // required uint32 masteruid = 1;
  if (has_masteruid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->masteruid(), target);
  }

  // required uint32 id = 2;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->id(), target);
  }

  // required uint32 typeId = 3;
  if (has_typeid_()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->typeid_(), target);
  }

  // required uint32 senderUid = 4;
  if (has_senderuid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->senderuid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoMessageBoard.DeleteMessageBoardReq)
  return target;
}

int DeleteMessageBoardReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 masteruid = 1;
    if (has_masteruid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->masteruid());
    }

    // required uint32 id = 2;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->id());
    }

    // required uint32 typeId = 3;
    if (has_typeid_()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->typeid_());
    }

    // required uint32 senderUid = 4;
    if (has_senderuid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->senderuid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DeleteMessageBoardReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const DeleteMessageBoardReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const DeleteMessageBoardReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void DeleteMessageBoardReq::MergeFrom(const DeleteMessageBoardReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_masteruid()) {
      set_masteruid(from.masteruid());
    }
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_typeid_()) {
      set_typeid_(from.typeid_());
    }
    if (from.has_senderuid()) {
      set_senderuid(from.senderuid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void DeleteMessageBoardReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteMessageBoardReq::CopyFrom(const DeleteMessageBoardReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteMessageBoardReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;

  return true;
}

void DeleteMessageBoardReq::Swap(DeleteMessageBoardReq* other) {
  if (other != this) {
    std::swap(masteruid_, other->masteruid_);
    std::swap(id_, other->id_);
    std::swap(typeid__, other->typeid__);
    std::swap(senderuid_, other->senderuid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata DeleteMessageBoardReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DeleteMessageBoardReq_descriptor_;
  metadata.reflection = DeleteMessageBoardReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int LeaveMessageReq::kMasteruidFieldNumber;
const int LeaveMessageReq::kTypeIdFieldNumber;
const int LeaveMessageReq::kWordsFieldNumber;
#endif  // !_MSC_VER

LeaveMessageReq::LeaveMessageReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoMessageBoard.LeaveMessageReq)
}

void LeaveMessageReq::InitAsDefaultInstance() {
}

LeaveMessageReq::LeaveMessageReq(const LeaveMessageReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ProtoMessageBoard.LeaveMessageReq)
}

void LeaveMessageReq::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  masteruid_ = 0u;
  typeid__ = 0u;
  words_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

LeaveMessageReq::~LeaveMessageReq() {
  // @@protoc_insertion_point(destructor:ProtoMessageBoard.LeaveMessageReq)
  SharedDtor();
}

void LeaveMessageReq::SharedDtor() {
  if (words_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete words_;
  }
  if (this != default_instance_) {
  }
}

void LeaveMessageReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LeaveMessageReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return LeaveMessageReq_descriptor_;
}

const LeaveMessageReq& LeaveMessageReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoMessageBoard_2eproto();
  return *default_instance_;
}

LeaveMessageReq* LeaveMessageReq::default_instance_ = NULL;

LeaveMessageReq* LeaveMessageReq::New() const {
  return new LeaveMessageReq;
}

void LeaveMessageReq::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<LeaveMessageReq*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 7) {
    ZR_(masteruid_, typeid__);
    if (has_words()) {
      if (words_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        words_->clear();
      }
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool LeaveMessageReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoMessageBoard.LeaveMessageReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 masteruid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &masteruid_)));
          set_has_masteruid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_typeId;
        break;
      }

      // required uint32 typeId = 2;
      case 2: {
        if (tag == 16) {
         parse_typeId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &typeid__)));
          set_has_typeid_();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_words;
        break;
      }

      // required bytes words = 3;
      case 3: {
        if (tag == 26) {
         parse_words:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_words()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoMessageBoard.LeaveMessageReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoMessageBoard.LeaveMessageReq)
  return false;
#undef DO_
}

void LeaveMessageReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoMessageBoard.LeaveMessageReq)
  // required uint32 masteruid = 1;
  if (has_masteruid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->masteruid(), output);
  }

  // required uint32 typeId = 2;
  if (has_typeid_()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->typeid_(), output);
  }

  // required bytes words = 3;
  if (has_words()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->words(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoMessageBoard.LeaveMessageReq)
}

::google::protobuf::uint8* LeaveMessageReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoMessageBoard.LeaveMessageReq)
  // required uint32 masteruid = 1;
  if (has_masteruid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->masteruid(), target);
  }

  // required uint32 typeId = 2;
  if (has_typeid_()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->typeid_(), target);
  }

  // required bytes words = 3;
  if (has_words()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->words(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoMessageBoard.LeaveMessageReq)
  return target;
}

int LeaveMessageReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 masteruid = 1;
    if (has_masteruid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->masteruid());
    }

    // required uint32 typeId = 2;
    if (has_typeid_()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->typeid_());
    }

    // required bytes words = 3;
    if (has_words()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->words());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LeaveMessageReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const LeaveMessageReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const LeaveMessageReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void LeaveMessageReq::MergeFrom(const LeaveMessageReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_masteruid()) {
      set_masteruid(from.masteruid());
    }
    if (from.has_typeid_()) {
      set_typeid_(from.typeid_());
    }
    if (from.has_words()) {
      set_words(from.words());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void LeaveMessageReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LeaveMessageReq::CopyFrom(const LeaveMessageReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LeaveMessageReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  return true;
}

void LeaveMessageReq::Swap(LeaveMessageReq* other) {
  if (other != this) {
    std::swap(masteruid_, other->masteruid_);
    std::swap(typeid__, other->typeid__);
    std::swap(words_, other->words_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata LeaveMessageReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = LeaveMessageReq_descriptor_;
  metadata.reflection = LeaveMessageReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int AnswerLeaveMessageReq::kSenderUidFieldNumber;
const int AnswerLeaveMessageReq::kTypeIdFieldNumber;
const int AnswerLeaveMessageReq::kWordsFieldNumber;
#endif  // !_MSC_VER

AnswerLeaveMessageReq::AnswerLeaveMessageReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoMessageBoard.AnswerLeaveMessageReq)
}

void AnswerLeaveMessageReq::InitAsDefaultInstance() {
}

AnswerLeaveMessageReq::AnswerLeaveMessageReq(const AnswerLeaveMessageReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ProtoMessageBoard.AnswerLeaveMessageReq)
}

void AnswerLeaveMessageReq::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  senderuid_ = 0u;
  typeid__ = 0u;
  words_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

AnswerLeaveMessageReq::~AnswerLeaveMessageReq() {
  // @@protoc_insertion_point(destructor:ProtoMessageBoard.AnswerLeaveMessageReq)
  SharedDtor();
}

void AnswerLeaveMessageReq::SharedDtor() {
  if (words_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete words_;
  }
  if (this != default_instance_) {
  }
}

void AnswerLeaveMessageReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AnswerLeaveMessageReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AnswerLeaveMessageReq_descriptor_;
}

const AnswerLeaveMessageReq& AnswerLeaveMessageReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoMessageBoard_2eproto();
  return *default_instance_;
}

AnswerLeaveMessageReq* AnswerLeaveMessageReq::default_instance_ = NULL;

AnswerLeaveMessageReq* AnswerLeaveMessageReq::New() const {
  return new AnswerLeaveMessageReq;
}

void AnswerLeaveMessageReq::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<AnswerLeaveMessageReq*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 7) {
    ZR_(senderuid_, typeid__);
    if (has_words()) {
      if (words_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        words_->clear();
      }
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool AnswerLeaveMessageReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoMessageBoard.AnswerLeaveMessageReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 senderUid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &senderuid_)));
          set_has_senderuid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_typeId;
        break;
      }

      // required uint32 typeId = 2;
      case 2: {
        if (tag == 16) {
         parse_typeId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &typeid__)));
          set_has_typeid_();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_words;
        break;
      }

      // required bytes words = 3;
      case 3: {
        if (tag == 26) {
         parse_words:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_words()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoMessageBoard.AnswerLeaveMessageReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoMessageBoard.AnswerLeaveMessageReq)
  return false;
#undef DO_
}

void AnswerLeaveMessageReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoMessageBoard.AnswerLeaveMessageReq)
  // required uint32 senderUid = 1;
  if (has_senderuid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->senderuid(), output);
  }

  // required uint32 typeId = 2;
  if (has_typeid_()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->typeid_(), output);
  }

  // required bytes words = 3;
  if (has_words()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->words(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoMessageBoard.AnswerLeaveMessageReq)
}

::google::protobuf::uint8* AnswerLeaveMessageReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoMessageBoard.AnswerLeaveMessageReq)
  // required uint32 senderUid = 1;
  if (has_senderuid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->senderuid(), target);
  }

  // required uint32 typeId = 2;
  if (has_typeid_()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->typeid_(), target);
  }

  // required bytes words = 3;
  if (has_words()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->words(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoMessageBoard.AnswerLeaveMessageReq)
  return target;
}

int AnswerLeaveMessageReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 senderUid = 1;
    if (has_senderuid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->senderuid());
    }

    // required uint32 typeId = 2;
    if (has_typeid_()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->typeid_());
    }

    // required bytes words = 3;
    if (has_words()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->words());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AnswerLeaveMessageReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const AnswerLeaveMessageReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const AnswerLeaveMessageReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void AnswerLeaveMessageReq::MergeFrom(const AnswerLeaveMessageReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_senderuid()) {
      set_senderuid(from.senderuid());
    }
    if (from.has_typeid_()) {
      set_typeid_(from.typeid_());
    }
    if (from.has_words()) {
      set_words(from.words());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void AnswerLeaveMessageReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AnswerLeaveMessageReq::CopyFrom(const AnswerLeaveMessageReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AnswerLeaveMessageReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  return true;
}

void AnswerLeaveMessageReq::Swap(AnswerLeaveMessageReq* other) {
  if (other != this) {
    std::swap(senderuid_, other->senderuid_);
    std::swap(typeid__, other->typeid__);
    std::swap(words_, other->words_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata AnswerLeaveMessageReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AnswerLeaveMessageReq_descriptor_;
  metadata.reflection = AnswerLeaveMessageReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int LeaveMessageResp::kNewMsgFieldNumber;
#endif  // !_MSC_VER

LeaveMessageResp::LeaveMessageResp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoMessageBoard.LeaveMessageResp)
}

void LeaveMessageResp::InitAsDefaultInstance() {
  newmsg_ = const_cast< ::ProtoMessageBoard::MessageInfo*>(&::ProtoMessageBoard::MessageInfo::default_instance());
}

LeaveMessageResp::LeaveMessageResp(const LeaveMessageResp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ProtoMessageBoard.LeaveMessageResp)
}

void LeaveMessageResp::SharedCtor() {
  _cached_size_ = 0;
  newmsg_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

LeaveMessageResp::~LeaveMessageResp() {
  // @@protoc_insertion_point(destructor:ProtoMessageBoard.LeaveMessageResp)
  SharedDtor();
}

void LeaveMessageResp::SharedDtor() {
  if (this != default_instance_) {
    delete newmsg_;
  }
}

void LeaveMessageResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LeaveMessageResp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return LeaveMessageResp_descriptor_;
}

const LeaveMessageResp& LeaveMessageResp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoMessageBoard_2eproto();
  return *default_instance_;
}

LeaveMessageResp* LeaveMessageResp::default_instance_ = NULL;

LeaveMessageResp* LeaveMessageResp::New() const {
  return new LeaveMessageResp;
}

void LeaveMessageResp::Clear() {
  if (has_newmsg()) {
    if (newmsg_ != NULL) newmsg_->::ProtoMessageBoard::MessageInfo::Clear();
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool LeaveMessageResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoMessageBoard.LeaveMessageResp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .ProtoMessageBoard.MessageInfo newMsg = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_newmsg()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoMessageBoard.LeaveMessageResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoMessageBoard.LeaveMessageResp)
  return false;
#undef DO_
}

void LeaveMessageResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoMessageBoard.LeaveMessageResp)
  // required .ProtoMessageBoard.MessageInfo newMsg = 1;
  if (has_newmsg()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->newmsg(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoMessageBoard.LeaveMessageResp)
}

::google::protobuf::uint8* LeaveMessageResp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoMessageBoard.LeaveMessageResp)
  // required .ProtoMessageBoard.MessageInfo newMsg = 1;
  if (has_newmsg()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->newmsg(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoMessageBoard.LeaveMessageResp)
  return target;
}

int LeaveMessageResp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .ProtoMessageBoard.MessageInfo newMsg = 1;
    if (has_newmsg()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->newmsg());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LeaveMessageResp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const LeaveMessageResp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const LeaveMessageResp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void LeaveMessageResp::MergeFrom(const LeaveMessageResp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_newmsg()) {
      mutable_newmsg()->::ProtoMessageBoard::MessageInfo::MergeFrom(from.newmsg());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void LeaveMessageResp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LeaveMessageResp::CopyFrom(const LeaveMessageResp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LeaveMessageResp::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (has_newmsg()) {
    if (!this->newmsg().IsInitialized()) return false;
  }
  return true;
}

void LeaveMessageResp::Swap(LeaveMessageResp* other) {
  if (other != this) {
    std::swap(newmsg_, other->newmsg_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata LeaveMessageResp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = LeaveMessageResp_descriptor_;
  metadata.reflection = LeaveMessageResp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int SendLeaveMsgOverServerReq::kModelFieldNumber;
const int SendLeaveMsgOverServerReq::kSenderFieldNumber;
const int SendLeaveMsgOverServerReq::kReceiverFieldNumber;
const int SendLeaveMsgOverServerReq::kTypeidFieldNumber;
const int SendLeaveMsgOverServerReq::kWordsFieldNumber;
#endif  // !_MSC_VER

SendLeaveMsgOverServerReq::SendLeaveMsgOverServerReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoMessageBoard.SendLeaveMsgOverServerReq)
}

void SendLeaveMsgOverServerReq::InitAsDefaultInstance() {
}

SendLeaveMsgOverServerReq::SendLeaveMsgOverServerReq(const SendLeaveMsgOverServerReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ProtoMessageBoard.SendLeaveMsgOverServerReq)
}

void SendLeaveMsgOverServerReq::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  model_ = 0u;
  sender_ = 0u;
  receiver_ = 0u;
  typeid__ = 0u;
  words_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SendLeaveMsgOverServerReq::~SendLeaveMsgOverServerReq() {
  // @@protoc_insertion_point(destructor:ProtoMessageBoard.SendLeaveMsgOverServerReq)
  SharedDtor();
}

void SendLeaveMsgOverServerReq::SharedDtor() {
  if (words_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete words_;
  }
  if (this != default_instance_) {
  }
}

void SendLeaveMsgOverServerReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SendLeaveMsgOverServerReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SendLeaveMsgOverServerReq_descriptor_;
}

const SendLeaveMsgOverServerReq& SendLeaveMsgOverServerReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoMessageBoard_2eproto();
  return *default_instance_;
}

SendLeaveMsgOverServerReq* SendLeaveMsgOverServerReq::default_instance_ = NULL;

SendLeaveMsgOverServerReq* SendLeaveMsgOverServerReq::New() const {
  return new SendLeaveMsgOverServerReq;
}

void SendLeaveMsgOverServerReq::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<SendLeaveMsgOverServerReq*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 31) {
    ZR_(model_, typeid__);
    if (has_words()) {
      if (words_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        words_->clear();
      }
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool SendLeaveMsgOverServerReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoMessageBoard.SendLeaveMsgOverServerReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 model = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &model_)));
          set_has_model();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_sender;
        break;
      }

      // required uint32 sender = 2;
      case 2: {
        if (tag == 16) {
         parse_sender:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &sender_)));
          set_has_sender();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_receiver;
        break;
      }

      // required uint32 receiver = 3;
      case 3: {
        if (tag == 24) {
         parse_receiver:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &receiver_)));
          set_has_receiver();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_typeid;
        break;
      }

      // required uint32 typeid = 4;
      case 4: {
        if (tag == 32) {
         parse_typeid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &typeid__)));
          set_has_typeid_();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_words;
        break;
      }

      // required bytes words = 5;
      case 5: {
        if (tag == 42) {
         parse_words:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_words()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoMessageBoard.SendLeaveMsgOverServerReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoMessageBoard.SendLeaveMsgOverServerReq)
  return false;
#undef DO_
}

void SendLeaveMsgOverServerReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoMessageBoard.SendLeaveMsgOverServerReq)
  // required uint32 model = 1;
  if (has_model()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->model(), output);
  }

  // required uint32 sender = 2;
  if (has_sender()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->sender(), output);
  }

  // required uint32 receiver = 3;
  if (has_receiver()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->receiver(), output);
  }

  // required uint32 typeid = 4;
  if (has_typeid_()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->typeid_(), output);
  }

  // required bytes words = 5;
  if (has_words()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      5, this->words(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoMessageBoard.SendLeaveMsgOverServerReq)
}

::google::protobuf::uint8* SendLeaveMsgOverServerReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoMessageBoard.SendLeaveMsgOverServerReq)
  // required uint32 model = 1;
  if (has_model()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->model(), target);
  }

  // required uint32 sender = 2;
  if (has_sender()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->sender(), target);
  }

  // required uint32 receiver = 3;
  if (has_receiver()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->receiver(), target);
  }

  // required uint32 typeid = 4;
  if (has_typeid_()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->typeid_(), target);
  }

  // required bytes words = 5;
  if (has_words()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        5, this->words(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoMessageBoard.SendLeaveMsgOverServerReq)
  return target;
}

int SendLeaveMsgOverServerReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 model = 1;
    if (has_model()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->model());
    }

    // required uint32 sender = 2;
    if (has_sender()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->sender());
    }

    // required uint32 receiver = 3;
    if (has_receiver()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->receiver());
    }

    // required uint32 typeid = 4;
    if (has_typeid_()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->typeid_());
    }

    // required bytes words = 5;
    if (has_words()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->words());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SendLeaveMsgOverServerReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const SendLeaveMsgOverServerReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const SendLeaveMsgOverServerReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SendLeaveMsgOverServerReq::MergeFrom(const SendLeaveMsgOverServerReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_model()) {
      set_model(from.model());
    }
    if (from.has_sender()) {
      set_sender(from.sender());
    }
    if (from.has_receiver()) {
      set_receiver(from.receiver());
    }
    if (from.has_typeid_()) {
      set_typeid_(from.typeid_());
    }
    if (from.has_words()) {
      set_words(from.words());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void SendLeaveMsgOverServerReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SendLeaveMsgOverServerReq::CopyFrom(const SendLeaveMsgOverServerReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SendLeaveMsgOverServerReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000001f) != 0x0000001f) return false;

  return true;
}

void SendLeaveMsgOverServerReq::Swap(SendLeaveMsgOverServerReq* other) {
  if (other != this) {
    std::swap(model_, other->model_);
    std::swap(sender_, other->sender_);
    std::swap(receiver_, other->receiver_);
    std::swap(typeid__, other->typeid__);
    std::swap(words_, other->words_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata SendLeaveMsgOverServerReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SendLeaveMsgOverServerReq_descriptor_;
  metadata.reflection = SendLeaveMsgOverServerReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GetMasterVisiableMsgReq::kMyuidFieldNumber;
const int GetMasterVisiableMsgReq::kMasteruidFieldNumber;
#endif  // !_MSC_VER

GetMasterVisiableMsgReq::GetMasterVisiableMsgReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoMessageBoard.GetMasterVisiableMsgReq)
}

void GetMasterVisiableMsgReq::InitAsDefaultInstance() {
}

GetMasterVisiableMsgReq::GetMasterVisiableMsgReq(const GetMasterVisiableMsgReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ProtoMessageBoard.GetMasterVisiableMsgReq)
}

void GetMasterVisiableMsgReq::SharedCtor() {
  _cached_size_ = 0;
  myuid_ = 0u;
  masteruid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GetMasterVisiableMsgReq::~GetMasterVisiableMsgReq() {
  // @@protoc_insertion_point(destructor:ProtoMessageBoard.GetMasterVisiableMsgReq)
  SharedDtor();
}

void GetMasterVisiableMsgReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GetMasterVisiableMsgReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetMasterVisiableMsgReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetMasterVisiableMsgReq_descriptor_;
}

const GetMasterVisiableMsgReq& GetMasterVisiableMsgReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoMessageBoard_2eproto();
  return *default_instance_;
}

GetMasterVisiableMsgReq* GetMasterVisiableMsgReq::default_instance_ = NULL;

GetMasterVisiableMsgReq* GetMasterVisiableMsgReq::New() const {
  return new GetMasterVisiableMsgReq;
}

void GetMasterVisiableMsgReq::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<GetMasterVisiableMsgReq*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(myuid_, masteruid_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GetMasterVisiableMsgReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoMessageBoard.GetMasterVisiableMsgReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 myuid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &myuid_)));
          set_has_myuid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_masteruid;
        break;
      }

      // required uint32 masteruid = 2;
      case 2: {
        if (tag == 16) {
         parse_masteruid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &masteruid_)));
          set_has_masteruid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoMessageBoard.GetMasterVisiableMsgReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoMessageBoard.GetMasterVisiableMsgReq)
  return false;
#undef DO_
}

void GetMasterVisiableMsgReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoMessageBoard.GetMasterVisiableMsgReq)
  // required uint32 myuid = 1;
  if (has_myuid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->myuid(), output);
  }

  // required uint32 masteruid = 2;
  if (has_masteruid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->masteruid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoMessageBoard.GetMasterVisiableMsgReq)
}

::google::protobuf::uint8* GetMasterVisiableMsgReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoMessageBoard.GetMasterVisiableMsgReq)
  // required uint32 myuid = 1;
  if (has_myuid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->myuid(), target);
  }

  // required uint32 masteruid = 2;
  if (has_masteruid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->masteruid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoMessageBoard.GetMasterVisiableMsgReq)
  return target;
}

int GetMasterVisiableMsgReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 myuid = 1;
    if (has_myuid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->myuid());
    }

    // required uint32 masteruid = 2;
    if (has_masteruid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->masteruid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetMasterVisiableMsgReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GetMasterVisiableMsgReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GetMasterVisiableMsgReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GetMasterVisiableMsgReq::MergeFrom(const GetMasterVisiableMsgReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_myuid()) {
      set_myuid(from.myuid());
    }
    if (from.has_masteruid()) {
      set_masteruid(from.masteruid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GetMasterVisiableMsgReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetMasterVisiableMsgReq::CopyFrom(const GetMasterVisiableMsgReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetMasterVisiableMsgReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void GetMasterVisiableMsgReq::Swap(GetMasterVisiableMsgReq* other) {
  if (other != this) {
    std::swap(myuid_, other->myuid_);
    std::swap(masteruid_, other->masteruid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GetMasterVisiableMsgReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetMasterVisiableMsgReq_descriptor_;
  metadata.reflection = GetMasterVisiableMsgReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int DeleteMyMsgOverServerReq::kMyuidFieldNumber;
const int DeleteMyMsgOverServerReq::kMasteruidFieldNumber;
const int DeleteMyMsgOverServerReq::kIdFieldNumber;
#endif  // !_MSC_VER

DeleteMyMsgOverServerReq::DeleteMyMsgOverServerReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoMessageBoard.DeleteMyMsgOverServerReq)
}

void DeleteMyMsgOverServerReq::InitAsDefaultInstance() {
}

DeleteMyMsgOverServerReq::DeleteMyMsgOverServerReq(const DeleteMyMsgOverServerReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ProtoMessageBoard.DeleteMyMsgOverServerReq)
}

void DeleteMyMsgOverServerReq::SharedCtor() {
  _cached_size_ = 0;
  myuid_ = 0u;
  masteruid_ = 0u;
  id_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DeleteMyMsgOverServerReq::~DeleteMyMsgOverServerReq() {
  // @@protoc_insertion_point(destructor:ProtoMessageBoard.DeleteMyMsgOverServerReq)
  SharedDtor();
}

void DeleteMyMsgOverServerReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void DeleteMyMsgOverServerReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DeleteMyMsgOverServerReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DeleteMyMsgOverServerReq_descriptor_;
}

const DeleteMyMsgOverServerReq& DeleteMyMsgOverServerReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoMessageBoard_2eproto();
  return *default_instance_;
}

DeleteMyMsgOverServerReq* DeleteMyMsgOverServerReq::default_instance_ = NULL;

DeleteMyMsgOverServerReq* DeleteMyMsgOverServerReq::New() const {
  return new DeleteMyMsgOverServerReq;
}

void DeleteMyMsgOverServerReq::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<DeleteMyMsgOverServerReq*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(myuid_, id_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool DeleteMyMsgOverServerReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoMessageBoard.DeleteMyMsgOverServerReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 myuid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &myuid_)));
          set_has_myuid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_masteruid;
        break;
      }

      // required uint32 masteruid = 2;
      case 2: {
        if (tag == 16) {
         parse_masteruid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &masteruid_)));
          set_has_masteruid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_id;
        break;
      }

      // required uint32 id = 3;
      case 3: {
        if (tag == 24) {
         parse_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoMessageBoard.DeleteMyMsgOverServerReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoMessageBoard.DeleteMyMsgOverServerReq)
  return false;
#undef DO_
}

void DeleteMyMsgOverServerReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoMessageBoard.DeleteMyMsgOverServerReq)
  // required uint32 myuid = 1;
  if (has_myuid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->myuid(), output);
  }

  // required uint32 masteruid = 2;
  if (has_masteruid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->masteruid(), output);
  }

  // required uint32 id = 3;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoMessageBoard.DeleteMyMsgOverServerReq)
}

::google::protobuf::uint8* DeleteMyMsgOverServerReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoMessageBoard.DeleteMyMsgOverServerReq)
  // required uint32 myuid = 1;
  if (has_myuid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->myuid(), target);
  }

  // required uint32 masteruid = 2;
  if (has_masteruid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->masteruid(), target);
  }

  // required uint32 id = 3;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoMessageBoard.DeleteMyMsgOverServerReq)
  return target;
}

int DeleteMyMsgOverServerReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 myuid = 1;
    if (has_myuid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->myuid());
    }

    // required uint32 masteruid = 2;
    if (has_masteruid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->masteruid());
    }

    // required uint32 id = 3;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->id());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DeleteMyMsgOverServerReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const DeleteMyMsgOverServerReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const DeleteMyMsgOverServerReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void DeleteMyMsgOverServerReq::MergeFrom(const DeleteMyMsgOverServerReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_myuid()) {
      set_myuid(from.myuid());
    }
    if (from.has_masteruid()) {
      set_masteruid(from.masteruid());
    }
    if (from.has_id()) {
      set_id(from.id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void DeleteMyMsgOverServerReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteMyMsgOverServerReq::CopyFrom(const DeleteMyMsgOverServerReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteMyMsgOverServerReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  return true;
}

void DeleteMyMsgOverServerReq::Swap(DeleteMyMsgOverServerReq* other) {
  if (other != this) {
    std::swap(myuid_, other->myuid_);
    std::swap(masteruid_, other->masteruid_);
    std::swap(id_, other->id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata DeleteMyMsgOverServerReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DeleteMyMsgOverServerReq_descriptor_;
  metadata.reflection = DeleteMyMsgOverServerReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int FeedbackInfo::kIdFieldNumber;
const int FeedbackInfo::kTsFieldNumber;
const int FeedbackInfo::kWordsFieldNumber;
#endif  // !_MSC_VER

FeedbackInfo::FeedbackInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoMessageBoard.FeedbackInfo)
}

void FeedbackInfo::InitAsDefaultInstance() {
}

FeedbackInfo::FeedbackInfo(const FeedbackInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ProtoMessageBoard.FeedbackInfo)
}

void FeedbackInfo::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  id_ = 0u;
  ts_ = 0u;
  words_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

FeedbackInfo::~FeedbackInfo() {
  // @@protoc_insertion_point(destructor:ProtoMessageBoard.FeedbackInfo)
  SharedDtor();
}

void FeedbackInfo::SharedDtor() {
  if (words_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete words_;
  }
  if (this != default_instance_) {
  }
}

void FeedbackInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FeedbackInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return FeedbackInfo_descriptor_;
}

const FeedbackInfo& FeedbackInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoMessageBoard_2eproto();
  return *default_instance_;
}

FeedbackInfo* FeedbackInfo::default_instance_ = NULL;

FeedbackInfo* FeedbackInfo::New() const {
  return new FeedbackInfo;
}

void FeedbackInfo::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<FeedbackInfo*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 7) {
    ZR_(id_, ts_);
    if (has_words()) {
      if (words_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        words_->clear();
      }
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool FeedbackInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoMessageBoard.FeedbackInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_ts;
        break;
      }

      // required uint32 ts = 2;
      case 2: {
        if (tag == 16) {
         parse_ts:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ts_)));
          set_has_ts();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_words;
        break;
      }

      // required bytes words = 3;
      case 3: {
        if (tag == 26) {
         parse_words:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_words()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoMessageBoard.FeedbackInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoMessageBoard.FeedbackInfo)
  return false;
#undef DO_
}

void FeedbackInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoMessageBoard.FeedbackInfo)
  // required uint32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  // required uint32 ts = 2;
  if (has_ts()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->ts(), output);
  }

  // required bytes words = 3;
  if (has_words()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->words(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoMessageBoard.FeedbackInfo)
}

::google::protobuf::uint8* FeedbackInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoMessageBoard.FeedbackInfo)
  // required uint32 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  // required uint32 ts = 2;
  if (has_ts()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->ts(), target);
  }

  // required bytes words = 3;
  if (has_words()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->words(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoMessageBoard.FeedbackInfo)
  return target;
}

int FeedbackInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->id());
    }

    // required uint32 ts = 2;
    if (has_ts()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->ts());
    }

    // required bytes words = 3;
    if (has_words()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->words());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FeedbackInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const FeedbackInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const FeedbackInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void FeedbackInfo::MergeFrom(const FeedbackInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_ts()) {
      set_ts(from.ts());
    }
    if (from.has_words()) {
      set_words(from.words());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void FeedbackInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FeedbackInfo::CopyFrom(const FeedbackInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FeedbackInfo::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  return true;
}

void FeedbackInfo::Swap(FeedbackInfo* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(ts_, other->ts_);
    std::swap(words_, other->words_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata FeedbackInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = FeedbackInfo_descriptor_;
  metadata.reflection = FeedbackInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

GetFeedbackReq::GetFeedbackReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoMessageBoard.GetFeedbackReq)
}

void GetFeedbackReq::InitAsDefaultInstance() {
}

GetFeedbackReq::GetFeedbackReq(const GetFeedbackReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ProtoMessageBoard.GetFeedbackReq)
}

void GetFeedbackReq::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GetFeedbackReq::~GetFeedbackReq() {
  // @@protoc_insertion_point(destructor:ProtoMessageBoard.GetFeedbackReq)
  SharedDtor();
}

void GetFeedbackReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GetFeedbackReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetFeedbackReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetFeedbackReq_descriptor_;
}

const GetFeedbackReq& GetFeedbackReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoMessageBoard_2eproto();
  return *default_instance_;
}

GetFeedbackReq* GetFeedbackReq::default_instance_ = NULL;

GetFeedbackReq* GetFeedbackReq::New() const {
  return new GetFeedbackReq;
}

void GetFeedbackReq::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GetFeedbackReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoMessageBoard.GetFeedbackReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoMessageBoard.GetFeedbackReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoMessageBoard.GetFeedbackReq)
  return false;
#undef DO_
}

void GetFeedbackReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoMessageBoard.GetFeedbackReq)
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoMessageBoard.GetFeedbackReq)
}

::google::protobuf::uint8* GetFeedbackReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoMessageBoard.GetFeedbackReq)
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoMessageBoard.GetFeedbackReq)
  return target;
}

int GetFeedbackReq::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetFeedbackReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GetFeedbackReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GetFeedbackReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GetFeedbackReq::MergeFrom(const GetFeedbackReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GetFeedbackReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetFeedbackReq::CopyFrom(const GetFeedbackReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetFeedbackReq::IsInitialized() const {

  return true;
}

void GetFeedbackReq::Swap(GetFeedbackReq* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GetFeedbackReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetFeedbackReq_descriptor_;
  metadata.reflection = GetFeedbackReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GetFeedbackResp::kRestTimesFieldNumber;
const int GetFeedbackResp::kArrayFeedbackFieldNumber;
#endif  // !_MSC_VER

GetFeedbackResp::GetFeedbackResp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoMessageBoard.GetFeedbackResp)
}

void GetFeedbackResp::InitAsDefaultInstance() {
}

GetFeedbackResp::GetFeedbackResp(const GetFeedbackResp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ProtoMessageBoard.GetFeedbackResp)
}

void GetFeedbackResp::SharedCtor() {
  _cached_size_ = 0;
  resttimes_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GetFeedbackResp::~GetFeedbackResp() {
  // @@protoc_insertion_point(destructor:ProtoMessageBoard.GetFeedbackResp)
  SharedDtor();
}

void GetFeedbackResp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GetFeedbackResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetFeedbackResp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetFeedbackResp_descriptor_;
}

const GetFeedbackResp& GetFeedbackResp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoMessageBoard_2eproto();
  return *default_instance_;
}

GetFeedbackResp* GetFeedbackResp::default_instance_ = NULL;

GetFeedbackResp* GetFeedbackResp::New() const {
  return new GetFeedbackResp;
}

void GetFeedbackResp::Clear() {
  resttimes_ = 0u;
  arrayfeedback_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GetFeedbackResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoMessageBoard.GetFeedbackResp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 restTimes = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &resttimes_)));
          set_has_resttimes();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_arrayFeedback;
        break;
      }

      // repeated .ProtoMessageBoard.FeedbackInfo arrayFeedback = 2;
      case 2: {
        if (tag == 18) {
         parse_arrayFeedback:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_arrayfeedback()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_arrayFeedback;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoMessageBoard.GetFeedbackResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoMessageBoard.GetFeedbackResp)
  return false;
#undef DO_
}

void GetFeedbackResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoMessageBoard.GetFeedbackResp)
  // required uint32 restTimes = 1;
  if (has_resttimes()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->resttimes(), output);
  }

  // repeated .ProtoMessageBoard.FeedbackInfo arrayFeedback = 2;
  for (int i = 0; i < this->arrayfeedback_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->arrayfeedback(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoMessageBoard.GetFeedbackResp)
}

::google::protobuf::uint8* GetFeedbackResp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoMessageBoard.GetFeedbackResp)
  // required uint32 restTimes = 1;
  if (has_resttimes()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->resttimes(), target);
  }

  // repeated .ProtoMessageBoard.FeedbackInfo arrayFeedback = 2;
  for (int i = 0; i < this->arrayfeedback_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->arrayfeedback(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoMessageBoard.GetFeedbackResp)
  return target;
}

int GetFeedbackResp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 restTimes = 1;
    if (has_resttimes()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->resttimes());
    }

  }
  // repeated .ProtoMessageBoard.FeedbackInfo arrayFeedback = 2;
  total_size += 1 * this->arrayfeedback_size();
  for (int i = 0; i < this->arrayfeedback_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->arrayfeedback(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetFeedbackResp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GetFeedbackResp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GetFeedbackResp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GetFeedbackResp::MergeFrom(const GetFeedbackResp& from) {
  GOOGLE_CHECK_NE(&from, this);
  arrayfeedback_.MergeFrom(from.arrayfeedback_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_resttimes()) {
      set_resttimes(from.resttimes());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GetFeedbackResp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetFeedbackResp::CopyFrom(const GetFeedbackResp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetFeedbackResp::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (!::google::protobuf::internal::AllAreInitialized(this->arrayfeedback())) return false;
  return true;
}

void GetFeedbackResp::Swap(GetFeedbackResp* other) {
  if (other != this) {
    std::swap(resttimes_, other->resttimes_);
    arrayfeedback_.Swap(&other->arrayfeedback_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GetFeedbackResp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetFeedbackResp_descriptor_;
  metadata.reflection = GetFeedbackResp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int SendFeedbackReq::kWordsFieldNumber;
#endif  // !_MSC_VER

SendFeedbackReq::SendFeedbackReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoMessageBoard.SendFeedbackReq)
}

void SendFeedbackReq::InitAsDefaultInstance() {
}

SendFeedbackReq::SendFeedbackReq(const SendFeedbackReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ProtoMessageBoard.SendFeedbackReq)
}

void SendFeedbackReq::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  words_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SendFeedbackReq::~SendFeedbackReq() {
  // @@protoc_insertion_point(destructor:ProtoMessageBoard.SendFeedbackReq)
  SharedDtor();
}

void SendFeedbackReq::SharedDtor() {
  if (words_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete words_;
  }
  if (this != default_instance_) {
  }
}

void SendFeedbackReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SendFeedbackReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SendFeedbackReq_descriptor_;
}

const SendFeedbackReq& SendFeedbackReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoMessageBoard_2eproto();
  return *default_instance_;
}

SendFeedbackReq* SendFeedbackReq::default_instance_ = NULL;

SendFeedbackReq* SendFeedbackReq::New() const {
  return new SendFeedbackReq;
}

void SendFeedbackReq::Clear() {
  if (has_words()) {
    if (words_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
      words_->clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool SendFeedbackReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoMessageBoard.SendFeedbackReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bytes words = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_words()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoMessageBoard.SendFeedbackReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoMessageBoard.SendFeedbackReq)
  return false;
#undef DO_
}

void SendFeedbackReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoMessageBoard.SendFeedbackReq)
  // required bytes words = 1;
  if (has_words()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->words(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoMessageBoard.SendFeedbackReq)
}

::google::protobuf::uint8* SendFeedbackReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoMessageBoard.SendFeedbackReq)
  // required bytes words = 1;
  if (has_words()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->words(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoMessageBoard.SendFeedbackReq)
  return target;
}

int SendFeedbackReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required bytes words = 1;
    if (has_words()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->words());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SendFeedbackReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const SendFeedbackReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const SendFeedbackReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SendFeedbackReq::MergeFrom(const SendFeedbackReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_words()) {
      set_words(from.words());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void SendFeedbackReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SendFeedbackReq::CopyFrom(const SendFeedbackReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SendFeedbackReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void SendFeedbackReq::Swap(SendFeedbackReq* other) {
  if (other != this) {
    std::swap(words_, other->words_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata SendFeedbackReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SendFeedbackReq_descriptor_;
  metadata.reflection = SendFeedbackReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int SendFeedbackResp::kYourFeedbackFieldNumber;
#endif  // !_MSC_VER

SendFeedbackResp::SendFeedbackResp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoMessageBoard.SendFeedbackResp)
}

void SendFeedbackResp::InitAsDefaultInstance() {
  yourfeedback_ = const_cast< ::ProtoMessageBoard::FeedbackInfo*>(&::ProtoMessageBoard::FeedbackInfo::default_instance());
}

SendFeedbackResp::SendFeedbackResp(const SendFeedbackResp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ProtoMessageBoard.SendFeedbackResp)
}

void SendFeedbackResp::SharedCtor() {
  _cached_size_ = 0;
  yourfeedback_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SendFeedbackResp::~SendFeedbackResp() {
  // @@protoc_insertion_point(destructor:ProtoMessageBoard.SendFeedbackResp)
  SharedDtor();
}

void SendFeedbackResp::SharedDtor() {
  if (this != default_instance_) {
    delete yourfeedback_;
  }
}

void SendFeedbackResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SendFeedbackResp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SendFeedbackResp_descriptor_;
}

const SendFeedbackResp& SendFeedbackResp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoMessageBoard_2eproto();
  return *default_instance_;
}

SendFeedbackResp* SendFeedbackResp::default_instance_ = NULL;

SendFeedbackResp* SendFeedbackResp::New() const {
  return new SendFeedbackResp;
}

void SendFeedbackResp::Clear() {
  if (has_yourfeedback()) {
    if (yourfeedback_ != NULL) yourfeedback_->::ProtoMessageBoard::FeedbackInfo::Clear();
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool SendFeedbackResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoMessageBoard.SendFeedbackResp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .ProtoMessageBoard.FeedbackInfo yourFeedback = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_yourfeedback()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoMessageBoard.SendFeedbackResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoMessageBoard.SendFeedbackResp)
  return false;
#undef DO_
}

void SendFeedbackResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoMessageBoard.SendFeedbackResp)
  // required .ProtoMessageBoard.FeedbackInfo yourFeedback = 1;
  if (has_yourfeedback()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->yourfeedback(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoMessageBoard.SendFeedbackResp)
}

::google::protobuf::uint8* SendFeedbackResp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoMessageBoard.SendFeedbackResp)
  // required .ProtoMessageBoard.FeedbackInfo yourFeedback = 1;
  if (has_yourfeedback()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->yourfeedback(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoMessageBoard.SendFeedbackResp)
  return target;
}

int SendFeedbackResp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .ProtoMessageBoard.FeedbackInfo yourFeedback = 1;
    if (has_yourfeedback()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->yourfeedback());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SendFeedbackResp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const SendFeedbackResp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const SendFeedbackResp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SendFeedbackResp::MergeFrom(const SendFeedbackResp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_yourfeedback()) {
      mutable_yourfeedback()->::ProtoMessageBoard::FeedbackInfo::MergeFrom(from.yourfeedback());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void SendFeedbackResp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SendFeedbackResp::CopyFrom(const SendFeedbackResp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SendFeedbackResp::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (has_yourfeedback()) {
    if (!this->yourfeedback().IsInitialized()) return false;
  }
  return true;
}

void SendFeedbackResp::Swap(SendFeedbackResp* other) {
  if (other != this) {
    std::swap(yourfeedback_, other->yourfeedback_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata SendFeedbackResp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SendFeedbackResp_descriptor_;
  metadata.reflection = SendFeedbackResp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int DelFeedbackReq::kIdFieldNumber;
#endif  // !_MSC_VER

DelFeedbackReq::DelFeedbackReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoMessageBoard.DelFeedbackReq)
}

void DelFeedbackReq::InitAsDefaultInstance() {
}

DelFeedbackReq::DelFeedbackReq(const DelFeedbackReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ProtoMessageBoard.DelFeedbackReq)
}

void DelFeedbackReq::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DelFeedbackReq::~DelFeedbackReq() {
  // @@protoc_insertion_point(destructor:ProtoMessageBoard.DelFeedbackReq)
  SharedDtor();
}

void DelFeedbackReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void DelFeedbackReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DelFeedbackReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DelFeedbackReq_descriptor_;
}

const DelFeedbackReq& DelFeedbackReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoMessageBoard_2eproto();
  return *default_instance_;
}

DelFeedbackReq* DelFeedbackReq::default_instance_ = NULL;

DelFeedbackReq* DelFeedbackReq::New() const {
  return new DelFeedbackReq;
}

void DelFeedbackReq::Clear() {
  id_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool DelFeedbackReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoMessageBoard.DelFeedbackReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoMessageBoard.DelFeedbackReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoMessageBoard.DelFeedbackReq)
  return false;
#undef DO_
}

void DelFeedbackReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoMessageBoard.DelFeedbackReq)
  // required uint32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoMessageBoard.DelFeedbackReq)
}

::google::protobuf::uint8* DelFeedbackReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoMessageBoard.DelFeedbackReq)
  // required uint32 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoMessageBoard.DelFeedbackReq)
  return target;
}

int DelFeedbackReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->id());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DelFeedbackReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const DelFeedbackReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const DelFeedbackReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void DelFeedbackReq::MergeFrom(const DelFeedbackReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void DelFeedbackReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DelFeedbackReq::CopyFrom(const DelFeedbackReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DelFeedbackReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void DelFeedbackReq::Swap(DelFeedbackReq* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata DelFeedbackReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DelFeedbackReq_descriptor_;
  metadata.reflection = DelFeedbackReq_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace ProtoMessageBoard

// @@protoc_insertion_point(global_scope)
