// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: DataCommon.proto

#ifndef PROTOBUF_DataCommon_2eproto__INCLUDED
#define PROTOBUF_DataCommon_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace DataCommon {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_DataCommon_2eproto();
void protobuf_AssignDesc_DataCommon_2eproto();
void protobuf_ShutdownFile_DataCommon_2eproto();

class BaseItemCPP;
class UserBaseChangeCPP;
class PropsItemCPP;
class PropsChangeCPP;
class PropsAllChangeCPP;
class CommonItemsCPP;

// ===================================================================

class BaseItemCPP : public ::google::protobuf::Message {
 public:
  BaseItemCPP();
  virtual ~BaseItemCPP();

  BaseItemCPP(const BaseItemCPP& from);

  inline BaseItemCPP& operator=(const BaseItemCPP& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BaseItemCPP& default_instance();

  void Swap(BaseItemCPP* other);

  // implements Message ----------------------------------------------

  BaseItemCPP* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BaseItemCPP& from);
  void MergeFrom(const BaseItemCPP& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);

  // required int32 change = 2;
  inline bool has_change() const;
  inline void clear_change();
  static const int kChangeFieldNumber = 2;
  inline ::google::protobuf::int32 change() const;
  inline void set_change(::google::protobuf::int32 value);

  // required uint64 totalValue = 3;
  inline bool has_totalvalue() const;
  inline void clear_totalvalue();
  static const int kTotalValueFieldNumber = 3;
  inline ::google::protobuf::uint64 totalvalue() const;
  inline void set_totalvalue(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:DataCommon.BaseItemCPP)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_change();
  inline void clear_has_change();
  inline void set_has_totalvalue();
  inline void clear_has_totalvalue();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 type_;
  ::google::protobuf::int32 change_;
  ::google::protobuf::uint64 totalvalue_;
  friend void  protobuf_AddDesc_DataCommon_2eproto();
  friend void protobuf_AssignDesc_DataCommon_2eproto();
  friend void protobuf_ShutdownFile_DataCommon_2eproto();

  void InitAsDefaultInstance();
  static BaseItemCPP* default_instance_;
};
// -------------------------------------------------------------------

class UserBaseChangeCPP : public ::google::protobuf::Message {
 public:
  UserBaseChangeCPP();
  virtual ~UserBaseChangeCPP();

  UserBaseChangeCPP(const UserBaseChangeCPP& from);

  inline UserBaseChangeCPP& operator=(const UserBaseChangeCPP& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UserBaseChangeCPP& default_instance();

  void Swap(UserBaseChangeCPP* other);

  // implements Message ----------------------------------------------

  UserBaseChangeCPP* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UserBaseChangeCPP& from);
  void MergeFrom(const UserBaseChangeCPP& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .DataCommon.BaseItemCPP baseItem = 1;
  inline int baseitem_size() const;
  inline void clear_baseitem();
  static const int kBaseItemFieldNumber = 1;
  inline const ::DataCommon::BaseItemCPP& baseitem(int index) const;
  inline ::DataCommon::BaseItemCPP* mutable_baseitem(int index);
  inline ::DataCommon::BaseItemCPP* add_baseitem();
  inline const ::google::protobuf::RepeatedPtrField< ::DataCommon::BaseItemCPP >&
      baseitem() const;
  inline ::google::protobuf::RepeatedPtrField< ::DataCommon::BaseItemCPP >*
      mutable_baseitem();

  // @@protoc_insertion_point(class_scope:DataCommon.UserBaseChangeCPP)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::DataCommon::BaseItemCPP > baseitem_;
  friend void  protobuf_AddDesc_DataCommon_2eproto();
  friend void protobuf_AssignDesc_DataCommon_2eproto();
  friend void protobuf_ShutdownFile_DataCommon_2eproto();

  void InitAsDefaultInstance();
  static UserBaseChangeCPP* default_instance_;
};
// -------------------------------------------------------------------

class PropsItemCPP : public ::google::protobuf::Message {
 public:
  PropsItemCPP();
  virtual ~PropsItemCPP();

  PropsItemCPP(const PropsItemCPP& from);

  inline PropsItemCPP& operator=(const PropsItemCPP& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PropsItemCPP& default_instance();

  void Swap(PropsItemCPP* other);

  // implements Message ----------------------------------------------

  PropsItemCPP* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PropsItemCPP& from);
  void MergeFrom(const PropsItemCPP& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 ud = 1;
  inline bool has_ud() const;
  inline void clear_ud();
  static const int kUdFieldNumber = 1;
  inline ::google::protobuf::uint32 ud() const;
  inline void set_ud(::google::protobuf::uint32 value);

  // required uint32 propsId = 2;
  inline bool has_propsid() const;
  inline void clear_propsid();
  static const int kPropsIdFieldNumber = 2;
  inline ::google::protobuf::uint32 propsid() const;
  inline void set_propsid(::google::protobuf::uint32 value);

  // required uint32 itemCnt = 3;
  inline bool has_itemcnt() const;
  inline void clear_itemcnt();
  static const int kItemCntFieldNumber = 3;
  inline ::google::protobuf::uint32 itemcnt() const;
  inline void set_itemcnt(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:DataCommon.PropsItemCPP)
 private:
  inline void set_has_ud();
  inline void clear_has_ud();
  inline void set_has_propsid();
  inline void clear_has_propsid();
  inline void set_has_itemcnt();
  inline void clear_has_itemcnt();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 ud_;
  ::google::protobuf::uint32 propsid_;
  ::google::protobuf::uint32 itemcnt_;
  friend void  protobuf_AddDesc_DataCommon_2eproto();
  friend void protobuf_AssignDesc_DataCommon_2eproto();
  friend void protobuf_ShutdownFile_DataCommon_2eproto();

  void InitAsDefaultInstance();
  static PropsItemCPP* default_instance_;
};
// -------------------------------------------------------------------

class PropsChangeCPP : public ::google::protobuf::Message {
 public:
  PropsChangeCPP();
  virtual ~PropsChangeCPP();

  PropsChangeCPP(const PropsChangeCPP& from);

  inline PropsChangeCPP& operator=(const PropsChangeCPP& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PropsChangeCPP& default_instance();

  void Swap(PropsChangeCPP* other);

  // implements Message ----------------------------------------------

  PropsChangeCPP* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PropsChangeCPP& from);
  void MergeFrom(const PropsChangeCPP& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 change = 1;
  inline bool has_change() const;
  inline void clear_change();
  static const int kChangeFieldNumber = 1;
  inline ::google::protobuf::int32 change() const;
  inline void set_change(::google::protobuf::int32 value);

  // required .DataCommon.PropsItemCPP props = 2;
  inline bool has_props() const;
  inline void clear_props();
  static const int kPropsFieldNumber = 2;
  inline const ::DataCommon::PropsItemCPP& props() const;
  inline ::DataCommon::PropsItemCPP* mutable_props();
  inline ::DataCommon::PropsItemCPP* release_props();
  inline void set_allocated_props(::DataCommon::PropsItemCPP* props);

  // @@protoc_insertion_point(class_scope:DataCommon.PropsChangeCPP)
 private:
  inline void set_has_change();
  inline void clear_has_change();
  inline void set_has_props();
  inline void clear_has_props();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::DataCommon::PropsItemCPP* props_;
  ::google::protobuf::int32 change_;
  friend void  protobuf_AddDesc_DataCommon_2eproto();
  friend void protobuf_AssignDesc_DataCommon_2eproto();
  friend void protobuf_ShutdownFile_DataCommon_2eproto();

  void InitAsDefaultInstance();
  static PropsChangeCPP* default_instance_;
};
// -------------------------------------------------------------------

class PropsAllChangeCPP : public ::google::protobuf::Message {
 public:
  PropsAllChangeCPP();
  virtual ~PropsAllChangeCPP();

  PropsAllChangeCPP(const PropsAllChangeCPP& from);

  inline PropsAllChangeCPP& operator=(const PropsAllChangeCPP& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PropsAllChangeCPP& default_instance();

  void Swap(PropsAllChangeCPP* other);

  // implements Message ----------------------------------------------

  PropsAllChangeCPP* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PropsAllChangeCPP& from);
  void MergeFrom(const PropsAllChangeCPP& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .DataCommon.PropsChangeCPP propsitem = 1;
  inline int propsitem_size() const;
  inline void clear_propsitem();
  static const int kPropsitemFieldNumber = 1;
  inline const ::DataCommon::PropsChangeCPP& propsitem(int index) const;
  inline ::DataCommon::PropsChangeCPP* mutable_propsitem(int index);
  inline ::DataCommon::PropsChangeCPP* add_propsitem();
  inline const ::google::protobuf::RepeatedPtrField< ::DataCommon::PropsChangeCPP >&
      propsitem() const;
  inline ::google::protobuf::RepeatedPtrField< ::DataCommon::PropsChangeCPP >*
      mutable_propsitem();

  // @@protoc_insertion_point(class_scope:DataCommon.PropsAllChangeCPP)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::DataCommon::PropsChangeCPP > propsitem_;
  friend void  protobuf_AddDesc_DataCommon_2eproto();
  friend void protobuf_AssignDesc_DataCommon_2eproto();
  friend void protobuf_ShutdownFile_DataCommon_2eproto();

  void InitAsDefaultInstance();
  static PropsAllChangeCPP* default_instance_;
};
// -------------------------------------------------------------------

class CommonItemsCPP : public ::google::protobuf::Message {
 public:
  CommonItemsCPP();
  virtual ~CommonItemsCPP();

  CommonItemsCPP(const CommonItemsCPP& from);

  inline CommonItemsCPP& operator=(const CommonItemsCPP& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CommonItemsCPP& default_instance();

  void Swap(CommonItemsCPP* other);

  // implements Message ----------------------------------------------

  CommonItemsCPP* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CommonItemsCPP& from);
  void MergeFrom(const CommonItemsCPP& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .DataCommon.UserBaseChangeCPP userbase = 1;
  inline bool has_userbase() const;
  inline void clear_userbase();
  static const int kUserbaseFieldNumber = 1;
  inline const ::DataCommon::UserBaseChangeCPP& userbase() const;
  inline ::DataCommon::UserBaseChangeCPP* mutable_userbase();
  inline ::DataCommon::UserBaseChangeCPP* release_userbase();
  inline void set_allocated_userbase(::DataCommon::UserBaseChangeCPP* userbase);

  // optional .DataCommon.PropsAllChangeCPP props = 2;
  inline bool has_props() const;
  inline void clear_props();
  static const int kPropsFieldNumber = 2;
  inline const ::DataCommon::PropsAllChangeCPP& props() const;
  inline ::DataCommon::PropsAllChangeCPP* mutable_props();
  inline ::DataCommon::PropsAllChangeCPP* release_props();
  inline void set_allocated_props(::DataCommon::PropsAllChangeCPP* props);

  // optional uint32 from = 3;
  inline bool has_from() const;
  inline void clear_from();
  static const int kFromFieldNumber = 3;
  inline ::google::protobuf::uint32 from() const;
  inline void set_from(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:DataCommon.CommonItemsCPP)
 private:
  inline void set_has_userbase();
  inline void clear_has_userbase();
  inline void set_has_props();
  inline void clear_has_props();
  inline void set_has_from();
  inline void clear_has_from();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::DataCommon::UserBaseChangeCPP* userbase_;
  ::DataCommon::PropsAllChangeCPP* props_;
  ::google::protobuf::uint32 from_;
  friend void  protobuf_AddDesc_DataCommon_2eproto();
  friend void protobuf_AssignDesc_DataCommon_2eproto();
  friend void protobuf_ShutdownFile_DataCommon_2eproto();

  void InitAsDefaultInstance();
  static CommonItemsCPP* default_instance_;
};
// ===================================================================


// ===================================================================

// BaseItemCPP

// required uint32 type = 1;
inline bool BaseItemCPP::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BaseItemCPP::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BaseItemCPP::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BaseItemCPP::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 BaseItemCPP::type() const {
  // @@protoc_insertion_point(field_get:DataCommon.BaseItemCPP.type)
  return type_;
}
inline void BaseItemCPP::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:DataCommon.BaseItemCPP.type)
}

// required int32 change = 2;
inline bool BaseItemCPP::has_change() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BaseItemCPP::set_has_change() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BaseItemCPP::clear_has_change() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BaseItemCPP::clear_change() {
  change_ = 0;
  clear_has_change();
}
inline ::google::protobuf::int32 BaseItemCPP::change() const {
  // @@protoc_insertion_point(field_get:DataCommon.BaseItemCPP.change)
  return change_;
}
inline void BaseItemCPP::set_change(::google::protobuf::int32 value) {
  set_has_change();
  change_ = value;
  // @@protoc_insertion_point(field_set:DataCommon.BaseItemCPP.change)
}

// required uint64 totalValue = 3;
inline bool BaseItemCPP::has_totalvalue() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BaseItemCPP::set_has_totalvalue() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BaseItemCPP::clear_has_totalvalue() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BaseItemCPP::clear_totalvalue() {
  totalvalue_ = GOOGLE_ULONGLONG(0);
  clear_has_totalvalue();
}
inline ::google::protobuf::uint64 BaseItemCPP::totalvalue() const {
  // @@protoc_insertion_point(field_get:DataCommon.BaseItemCPP.totalValue)
  return totalvalue_;
}
inline void BaseItemCPP::set_totalvalue(::google::protobuf::uint64 value) {
  set_has_totalvalue();
  totalvalue_ = value;
  // @@protoc_insertion_point(field_set:DataCommon.BaseItemCPP.totalValue)
}

// -------------------------------------------------------------------

// UserBaseChangeCPP

// repeated .DataCommon.BaseItemCPP baseItem = 1;
inline int UserBaseChangeCPP::baseitem_size() const {
  return baseitem_.size();
}
inline void UserBaseChangeCPP::clear_baseitem() {
  baseitem_.Clear();
}
inline const ::DataCommon::BaseItemCPP& UserBaseChangeCPP::baseitem(int index) const {
  // @@protoc_insertion_point(field_get:DataCommon.UserBaseChangeCPP.baseItem)
  return baseitem_.Get(index);
}
inline ::DataCommon::BaseItemCPP* UserBaseChangeCPP::mutable_baseitem(int index) {
  // @@protoc_insertion_point(field_mutable:DataCommon.UserBaseChangeCPP.baseItem)
  return baseitem_.Mutable(index);
}
inline ::DataCommon::BaseItemCPP* UserBaseChangeCPP::add_baseitem() {
  // @@protoc_insertion_point(field_add:DataCommon.UserBaseChangeCPP.baseItem)
  return baseitem_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::DataCommon::BaseItemCPP >&
UserBaseChangeCPP::baseitem() const {
  // @@protoc_insertion_point(field_list:DataCommon.UserBaseChangeCPP.baseItem)
  return baseitem_;
}
inline ::google::protobuf::RepeatedPtrField< ::DataCommon::BaseItemCPP >*
UserBaseChangeCPP::mutable_baseitem() {
  // @@protoc_insertion_point(field_mutable_list:DataCommon.UserBaseChangeCPP.baseItem)
  return &baseitem_;
}

// -------------------------------------------------------------------

// PropsItemCPP

// required uint32 ud = 1;
inline bool PropsItemCPP::has_ud() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PropsItemCPP::set_has_ud() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PropsItemCPP::clear_has_ud() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PropsItemCPP::clear_ud() {
  ud_ = 0u;
  clear_has_ud();
}
inline ::google::protobuf::uint32 PropsItemCPP::ud() const {
  // @@protoc_insertion_point(field_get:DataCommon.PropsItemCPP.ud)
  return ud_;
}
inline void PropsItemCPP::set_ud(::google::protobuf::uint32 value) {
  set_has_ud();
  ud_ = value;
  // @@protoc_insertion_point(field_set:DataCommon.PropsItemCPP.ud)
}

// required uint32 propsId = 2;
inline bool PropsItemCPP::has_propsid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PropsItemCPP::set_has_propsid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PropsItemCPP::clear_has_propsid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PropsItemCPP::clear_propsid() {
  propsid_ = 0u;
  clear_has_propsid();
}
inline ::google::protobuf::uint32 PropsItemCPP::propsid() const {
  // @@protoc_insertion_point(field_get:DataCommon.PropsItemCPP.propsId)
  return propsid_;
}
inline void PropsItemCPP::set_propsid(::google::protobuf::uint32 value) {
  set_has_propsid();
  propsid_ = value;
  // @@protoc_insertion_point(field_set:DataCommon.PropsItemCPP.propsId)
}

// required uint32 itemCnt = 3;
inline bool PropsItemCPP::has_itemcnt() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PropsItemCPP::set_has_itemcnt() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PropsItemCPP::clear_has_itemcnt() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PropsItemCPP::clear_itemcnt() {
  itemcnt_ = 0u;
  clear_has_itemcnt();
}
inline ::google::protobuf::uint32 PropsItemCPP::itemcnt() const {
  // @@protoc_insertion_point(field_get:DataCommon.PropsItemCPP.itemCnt)
  return itemcnt_;
}
inline void PropsItemCPP::set_itemcnt(::google::protobuf::uint32 value) {
  set_has_itemcnt();
  itemcnt_ = value;
  // @@protoc_insertion_point(field_set:DataCommon.PropsItemCPP.itemCnt)
}

// -------------------------------------------------------------------

// PropsChangeCPP

// required int32 change = 1;
inline bool PropsChangeCPP::has_change() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PropsChangeCPP::set_has_change() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PropsChangeCPP::clear_has_change() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PropsChangeCPP::clear_change() {
  change_ = 0;
  clear_has_change();
}
inline ::google::protobuf::int32 PropsChangeCPP::change() const {
  // @@protoc_insertion_point(field_get:DataCommon.PropsChangeCPP.change)
  return change_;
}
inline void PropsChangeCPP::set_change(::google::protobuf::int32 value) {
  set_has_change();
  change_ = value;
  // @@protoc_insertion_point(field_set:DataCommon.PropsChangeCPP.change)
}

// required .DataCommon.PropsItemCPP props = 2;
inline bool PropsChangeCPP::has_props() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PropsChangeCPP::set_has_props() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PropsChangeCPP::clear_has_props() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PropsChangeCPP::clear_props() {
  if (props_ != NULL) props_->::DataCommon::PropsItemCPP::Clear();
  clear_has_props();
}
inline const ::DataCommon::PropsItemCPP& PropsChangeCPP::props() const {
  // @@protoc_insertion_point(field_get:DataCommon.PropsChangeCPP.props)
  return props_ != NULL ? *props_ : *default_instance_->props_;
}
inline ::DataCommon::PropsItemCPP* PropsChangeCPP::mutable_props() {
  set_has_props();
  if (props_ == NULL) props_ = new ::DataCommon::PropsItemCPP;
  // @@protoc_insertion_point(field_mutable:DataCommon.PropsChangeCPP.props)
  return props_;
}
inline ::DataCommon::PropsItemCPP* PropsChangeCPP::release_props() {
  clear_has_props();
  ::DataCommon::PropsItemCPP* temp = props_;
  props_ = NULL;
  return temp;
}
inline void PropsChangeCPP::set_allocated_props(::DataCommon::PropsItemCPP* props) {
  delete props_;
  props_ = props;
  if (props) {
    set_has_props();
  } else {
    clear_has_props();
  }
  // @@protoc_insertion_point(field_set_allocated:DataCommon.PropsChangeCPP.props)
}

// -------------------------------------------------------------------

// PropsAllChangeCPP

// repeated .DataCommon.PropsChangeCPP propsitem = 1;
inline int PropsAllChangeCPP::propsitem_size() const {
  return propsitem_.size();
}
inline void PropsAllChangeCPP::clear_propsitem() {
  propsitem_.Clear();
}
inline const ::DataCommon::PropsChangeCPP& PropsAllChangeCPP::propsitem(int index) const {
  // @@protoc_insertion_point(field_get:DataCommon.PropsAllChangeCPP.propsitem)
  return propsitem_.Get(index);
}
inline ::DataCommon::PropsChangeCPP* PropsAllChangeCPP::mutable_propsitem(int index) {
  // @@protoc_insertion_point(field_mutable:DataCommon.PropsAllChangeCPP.propsitem)
  return propsitem_.Mutable(index);
}
inline ::DataCommon::PropsChangeCPP* PropsAllChangeCPP::add_propsitem() {
  // @@protoc_insertion_point(field_add:DataCommon.PropsAllChangeCPP.propsitem)
  return propsitem_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::DataCommon::PropsChangeCPP >&
PropsAllChangeCPP::propsitem() const {
  // @@protoc_insertion_point(field_list:DataCommon.PropsAllChangeCPP.propsitem)
  return propsitem_;
}
inline ::google::protobuf::RepeatedPtrField< ::DataCommon::PropsChangeCPP >*
PropsAllChangeCPP::mutable_propsitem() {
  // @@protoc_insertion_point(field_mutable_list:DataCommon.PropsAllChangeCPP.propsitem)
  return &propsitem_;
}

// -------------------------------------------------------------------

// CommonItemsCPP

// optional .DataCommon.UserBaseChangeCPP userbase = 1;
inline bool CommonItemsCPP::has_userbase() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CommonItemsCPP::set_has_userbase() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CommonItemsCPP::clear_has_userbase() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CommonItemsCPP::clear_userbase() {
  if (userbase_ != NULL) userbase_->::DataCommon::UserBaseChangeCPP::Clear();
  clear_has_userbase();
}
inline const ::DataCommon::UserBaseChangeCPP& CommonItemsCPP::userbase() const {
  // @@protoc_insertion_point(field_get:DataCommon.CommonItemsCPP.userbase)
  return userbase_ != NULL ? *userbase_ : *default_instance_->userbase_;
}
inline ::DataCommon::UserBaseChangeCPP* CommonItemsCPP::mutable_userbase() {
  set_has_userbase();
  if (userbase_ == NULL) userbase_ = new ::DataCommon::UserBaseChangeCPP;
  // @@protoc_insertion_point(field_mutable:DataCommon.CommonItemsCPP.userbase)
  return userbase_;
}
inline ::DataCommon::UserBaseChangeCPP* CommonItemsCPP::release_userbase() {
  clear_has_userbase();
  ::DataCommon::UserBaseChangeCPP* temp = userbase_;
  userbase_ = NULL;
  return temp;
}
inline void CommonItemsCPP::set_allocated_userbase(::DataCommon::UserBaseChangeCPP* userbase) {
  delete userbase_;
  userbase_ = userbase;
  if (userbase) {
    set_has_userbase();
  } else {
    clear_has_userbase();
  }
  // @@protoc_insertion_point(field_set_allocated:DataCommon.CommonItemsCPP.userbase)
}

// optional .DataCommon.PropsAllChangeCPP props = 2;
inline bool CommonItemsCPP::has_props() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CommonItemsCPP::set_has_props() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CommonItemsCPP::clear_has_props() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CommonItemsCPP::clear_props() {
  if (props_ != NULL) props_->::DataCommon::PropsAllChangeCPP::Clear();
  clear_has_props();
}
inline const ::DataCommon::PropsAllChangeCPP& CommonItemsCPP::props() const {
  // @@protoc_insertion_point(field_get:DataCommon.CommonItemsCPP.props)
  return props_ != NULL ? *props_ : *default_instance_->props_;
}
inline ::DataCommon::PropsAllChangeCPP* CommonItemsCPP::mutable_props() {
  set_has_props();
  if (props_ == NULL) props_ = new ::DataCommon::PropsAllChangeCPP;
  // @@protoc_insertion_point(field_mutable:DataCommon.CommonItemsCPP.props)
  return props_;
}
inline ::DataCommon::PropsAllChangeCPP* CommonItemsCPP::release_props() {
  clear_has_props();
  ::DataCommon::PropsAllChangeCPP* temp = props_;
  props_ = NULL;
  return temp;
}
inline void CommonItemsCPP::set_allocated_props(::DataCommon::PropsAllChangeCPP* props) {
  delete props_;
  props_ = props;
  if (props) {
    set_has_props();
  } else {
    clear_has_props();
  }
  // @@protoc_insertion_point(field_set_allocated:DataCommon.CommonItemsCPP.props)
}

// optional uint32 from = 3;
inline bool CommonItemsCPP::has_from() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CommonItemsCPP::set_has_from() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CommonItemsCPP::clear_has_from() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CommonItemsCPP::clear_from() {
  from_ = 0u;
  clear_has_from();
}
inline ::google::protobuf::uint32 CommonItemsCPP::from() const {
  // @@protoc_insertion_point(field_get:DataCommon.CommonItemsCPP.from)
  return from_;
}
inline void CommonItemsCPP::set_from(::google::protobuf::uint32 value) {
  set_has_from();
  from_ = value;
  // @@protoc_insertion_point(field_set:DataCommon.CommonItemsCPP.from)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace DataCommon

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_DataCommon_2eproto__INCLUDED
