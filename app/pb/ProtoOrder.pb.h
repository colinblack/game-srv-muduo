// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ProtoOrder.proto

#ifndef PROTOBUF_ProtoOrder_2eproto__INCLUDED
#define PROTOBUF_ProtoOrder_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "DataCommon.pb.h"
// @@protoc_insertion_point(includes)

namespace ProtoOrder {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_ProtoOrder_2eproto();
void protobuf_AssignDesc_ProtoOrder_2eproto();
void protobuf_ShutdownFile_ProtoOrder_2eproto();

class NeedCost;
class OrderCPP;
class TruckCPP;
class OrderQueryReq;
class OrderResp;
class TruckQueryReq;
class TruckResp;
class StartOrderReq;
class StartOrderResp;
class DeleteOrderReq;
class DeleteOrderResp;
class RewardOrderReq;
class RewardOrderResp;
class OrderADBonusCPP;
class OrderDiamondBonusCPP;
class OrderVIPBonusCPP;
class GetOrderBonusInfoReq;
class GetOrderBonusInfoResp;
class ViewAdReq;
class ViewAdResp;
class BuyOrderBonusReq;
class BuyOrderBonusResp;

// ===================================================================

class NeedCost : public ::google::protobuf::Message {
 public:
  NeedCost();
  virtual ~NeedCost();

  NeedCost(const NeedCost& from);

  inline NeedCost& operator=(const NeedCost& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NeedCost& default_instance();

  void Swap(NeedCost* other);

  // implements Message ----------------------------------------------

  NeedCost* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NeedCost& from);
  void MergeFrom(const NeedCost& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // required uint32 count = 2;
  inline bool has_count() const;
  inline void clear_count();
  static const int kCountFieldNumber = 2;
  inline ::google::protobuf::uint32 count() const;
  inline void set_count(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoOrder.NeedCost)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_count();
  inline void clear_has_count();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 count_;
  friend void  protobuf_AddDesc_ProtoOrder_2eproto();
  friend void protobuf_AssignDesc_ProtoOrder_2eproto();
  friend void protobuf_ShutdownFile_ProtoOrder_2eproto();

  void InitAsDefaultInstance();
  static NeedCost* default_instance_;
};
// -------------------------------------------------------------------

class OrderCPP : public ::google::protobuf::Message {
 public:
  OrderCPP();
  virtual ~OrderCPP();

  OrderCPP(const OrderCPP& from);

  inline OrderCPP& operator=(const OrderCPP& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OrderCPP& default_instance();

  void Swap(OrderCPP* other);

  // implements Message ----------------------------------------------

  OrderCPP* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const OrderCPP& from);
  void MergeFrom(const OrderCPP& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 slot = 1;
  inline bool has_slot() const;
  inline void clear_slot();
  static const int kSlotFieldNumber = 1;
  inline ::google::protobuf::uint32 slot() const;
  inline void set_slot(::google::protobuf::uint32 value);

  // required uint32 coin = 2;
  inline bool has_coin() const;
  inline void clear_coin();
  static const int kCoinFieldNumber = 2;
  inline ::google::protobuf::uint32 coin() const;
  inline void set_coin(::google::protobuf::uint32 value);

  // required uint32 exp = 3;
  inline bool has_exp() const;
  inline void clear_exp();
  static const int kExpFieldNumber = 3;
  inline ::google::protobuf::uint32 exp() const;
  inline void set_exp(::google::protobuf::uint32 value);

  // required uint32 end_ts = 4;
  inline bool has_end_ts() const;
  inline void clear_end_ts();
  static const int kEndTsFieldNumber = 4;
  inline ::google::protobuf::uint32 end_ts() const;
  inline void set_end_ts(::google::protobuf::uint32 value);

  // repeated .ProtoOrder.NeedCost needcost = 5;
  inline int needcost_size() const;
  inline void clear_needcost();
  static const int kNeedcostFieldNumber = 5;
  inline const ::ProtoOrder::NeedCost& needcost(int index) const;
  inline ::ProtoOrder::NeedCost* mutable_needcost(int index);
  inline ::ProtoOrder::NeedCost* add_needcost();
  inline const ::google::protobuf::RepeatedPtrField< ::ProtoOrder::NeedCost >&
      needcost() const;
  inline ::google::protobuf::RepeatedPtrField< ::ProtoOrder::NeedCost >*
      mutable_needcost();

  // required uint32 discardcdtime = 6;
  inline bool has_discardcdtime() const;
  inline void clear_discardcdtime();
  static const int kDiscardcdtimeFieldNumber = 6;
  inline ::google::protobuf::uint32 discardcdtime() const;
  inline void set_discardcdtime(::google::protobuf::uint32 value);

  // required uint32 storageid = 7;
  inline bool has_storageid() const;
  inline void clear_storageid();
  static const int kStorageidFieldNumber = 7;
  inline ::google::protobuf::uint32 storageid() const;
  inline void set_storageid(::google::protobuf::uint32 value);

  // required uint32 levelid = 8;
  inline bool has_levelid() const;
  inline void clear_levelid();
  static const int kLevelidFieldNumber = 8;
  inline ::google::protobuf::uint32 levelid() const;
  inline void set_levelid(::google::protobuf::uint32 value);

  // required bytes orderid = 9;
  inline bool has_orderid() const;
  inline void clear_orderid();
  static const int kOrderidFieldNumber = 9;
  inline const ::std::string& orderid() const;
  inline void set_orderid(const ::std::string& value);
  inline void set_orderid(const char* value);
  inline void set_orderid(const void* value, size_t size);
  inline ::std::string* mutable_orderid();
  inline ::std::string* release_orderid();
  inline void set_allocated_orderid(::std::string* orderid);

  // @@protoc_insertion_point(class_scope:ProtoOrder.OrderCPP)
 private:
  inline void set_has_slot();
  inline void clear_has_slot();
  inline void set_has_coin();
  inline void clear_has_coin();
  inline void set_has_exp();
  inline void clear_has_exp();
  inline void set_has_end_ts();
  inline void clear_has_end_ts();
  inline void set_has_discardcdtime();
  inline void clear_has_discardcdtime();
  inline void set_has_storageid();
  inline void clear_has_storageid();
  inline void set_has_levelid();
  inline void clear_has_levelid();
  inline void set_has_orderid();
  inline void clear_has_orderid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 slot_;
  ::google::protobuf::uint32 coin_;
  ::google::protobuf::uint32 exp_;
  ::google::protobuf::uint32 end_ts_;
  ::google::protobuf::RepeatedPtrField< ::ProtoOrder::NeedCost > needcost_;
  ::google::protobuf::uint32 discardcdtime_;
  ::google::protobuf::uint32 storageid_;
  ::std::string* orderid_;
  ::google::protobuf::uint32 levelid_;
  friend void  protobuf_AddDesc_ProtoOrder_2eproto();
  friend void protobuf_AssignDesc_ProtoOrder_2eproto();
  friend void protobuf_ShutdownFile_ProtoOrder_2eproto();

  void InitAsDefaultInstance();
  static OrderCPP* default_instance_;
};
// -------------------------------------------------------------------

class TruckCPP : public ::google::protobuf::Message {
 public:
  TruckCPP();
  virtual ~TruckCPP();

  TruckCPP(const TruckCPP& from);

  inline TruckCPP& operator=(const TruckCPP& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TruckCPP& default_instance();

  void Swap(TruckCPP* other);

  // implements Message ----------------------------------------------

  TruckCPP* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TruckCPP& from);
  void MergeFrom(const TruckCPP& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 state = 1;
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 1;
  inline ::google::protobuf::uint32 state() const;
  inline void set_state(::google::protobuf::uint32 value);

  // required uint32 end_ts = 2;
  inline bool has_end_ts() const;
  inline void clear_end_ts();
  static const int kEndTsFieldNumber = 2;
  inline ::google::protobuf::uint32 end_ts() const;
  inline void set_end_ts(::google::protobuf::uint32 value);

  // required uint32 coin = 3;
  inline bool has_coin() const;
  inline void clear_coin();
  static const int kCoinFieldNumber = 3;
  inline ::google::protobuf::uint32 coin() const;
  inline void set_coin(::google::protobuf::uint32 value);

  // required uint32 exp = 4;
  inline bool has_exp() const;
  inline void clear_exp();
  static const int kExpFieldNumber = 4;
  inline ::google::protobuf::uint32 exp() const;
  inline void set_exp(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoOrder.TruckCPP)
 private:
  inline void set_has_state();
  inline void clear_has_state();
  inline void set_has_end_ts();
  inline void clear_has_end_ts();
  inline void set_has_coin();
  inline void clear_has_coin();
  inline void set_has_exp();
  inline void clear_has_exp();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 state_;
  ::google::protobuf::uint32 end_ts_;
  ::google::protobuf::uint32 coin_;
  ::google::protobuf::uint32 exp_;
  friend void  protobuf_AddDesc_ProtoOrder_2eproto();
  friend void protobuf_AssignDesc_ProtoOrder_2eproto();
  friend void protobuf_ShutdownFile_ProtoOrder_2eproto();

  void InitAsDefaultInstance();
  static TruckCPP* default_instance_;
};
// -------------------------------------------------------------------

class OrderQueryReq : public ::google::protobuf::Message {
 public:
  OrderQueryReq();
  virtual ~OrderQueryReq();

  OrderQueryReq(const OrderQueryReq& from);

  inline OrderQueryReq& operator=(const OrderQueryReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OrderQueryReq& default_instance();

  void Swap(OrderQueryReq* other);

  // implements Message ----------------------------------------------

  OrderQueryReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const OrderQueryReq& from);
  void MergeFrom(const OrderQueryReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 uid = 1;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 1;
  inline ::google::protobuf::uint32 uid() const;
  inline void set_uid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoOrder.OrderQueryReq)
 private:
  inline void set_has_uid();
  inline void clear_has_uid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 uid_;
  friend void  protobuf_AddDesc_ProtoOrder_2eproto();
  friend void protobuf_AssignDesc_ProtoOrder_2eproto();
  friend void protobuf_ShutdownFile_ProtoOrder_2eproto();

  void InitAsDefaultInstance();
  static OrderQueryReq* default_instance_;
};
// -------------------------------------------------------------------

class OrderResp : public ::google::protobuf::Message {
 public:
  OrderResp();
  virtual ~OrderResp();

  OrderResp(const OrderResp& from);

  inline OrderResp& operator=(const OrderResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OrderResp& default_instance();

  void Swap(OrderResp* other);

  // implements Message ----------------------------------------------

  OrderResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const OrderResp& from);
  void MergeFrom(const OrderResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .ProtoOrder.OrderCPP order = 1;
  inline int order_size() const;
  inline void clear_order();
  static const int kOrderFieldNumber = 1;
  inline const ::ProtoOrder::OrderCPP& order(int index) const;
  inline ::ProtoOrder::OrderCPP* mutable_order(int index);
  inline ::ProtoOrder::OrderCPP* add_order();
  inline const ::google::protobuf::RepeatedPtrField< ::ProtoOrder::OrderCPP >&
      order() const;
  inline ::google::protobuf::RepeatedPtrField< ::ProtoOrder::OrderCPP >*
      mutable_order();

  // @@protoc_insertion_point(class_scope:ProtoOrder.OrderResp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::ProtoOrder::OrderCPP > order_;
  friend void  protobuf_AddDesc_ProtoOrder_2eproto();
  friend void protobuf_AssignDesc_ProtoOrder_2eproto();
  friend void protobuf_ShutdownFile_ProtoOrder_2eproto();

  void InitAsDefaultInstance();
  static OrderResp* default_instance_;
};
// -------------------------------------------------------------------

class TruckQueryReq : public ::google::protobuf::Message {
 public:
  TruckQueryReq();
  virtual ~TruckQueryReq();

  TruckQueryReq(const TruckQueryReq& from);

  inline TruckQueryReq& operator=(const TruckQueryReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TruckQueryReq& default_instance();

  void Swap(TruckQueryReq* other);

  // implements Message ----------------------------------------------

  TruckQueryReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TruckQueryReq& from);
  void MergeFrom(const TruckQueryReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 uid = 1;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 1;
  inline ::google::protobuf::uint32 uid() const;
  inline void set_uid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoOrder.TruckQueryReq)
 private:
  inline void set_has_uid();
  inline void clear_has_uid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 uid_;
  friend void  protobuf_AddDesc_ProtoOrder_2eproto();
  friend void protobuf_AssignDesc_ProtoOrder_2eproto();
  friend void protobuf_ShutdownFile_ProtoOrder_2eproto();

  void InitAsDefaultInstance();
  static TruckQueryReq* default_instance_;
};
// -------------------------------------------------------------------

class TruckResp : public ::google::protobuf::Message {
 public:
  TruckResp();
  virtual ~TruckResp();

  TruckResp(const TruckResp& from);

  inline TruckResp& operator=(const TruckResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TruckResp& default_instance();

  void Swap(TruckResp* other);

  // implements Message ----------------------------------------------

  TruckResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TruckResp& from);
  void MergeFrom(const TruckResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .ProtoOrder.TruckCPP truck = 1;
  inline bool has_truck() const;
  inline void clear_truck();
  static const int kTruckFieldNumber = 1;
  inline const ::ProtoOrder::TruckCPP& truck() const;
  inline ::ProtoOrder::TruckCPP* mutable_truck();
  inline ::ProtoOrder::TruckCPP* release_truck();
  inline void set_allocated_truck(::ProtoOrder::TruckCPP* truck);

  // @@protoc_insertion_point(class_scope:ProtoOrder.TruckResp)
 private:
  inline void set_has_truck();
  inline void clear_has_truck();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::ProtoOrder::TruckCPP* truck_;
  friend void  protobuf_AddDesc_ProtoOrder_2eproto();
  friend void protobuf_AssignDesc_ProtoOrder_2eproto();
  friend void protobuf_ShutdownFile_ProtoOrder_2eproto();

  void InitAsDefaultInstance();
  static TruckResp* default_instance_;
};
// -------------------------------------------------------------------

class StartOrderReq : public ::google::protobuf::Message {
 public:
  StartOrderReq();
  virtual ~StartOrderReq();

  StartOrderReq(const StartOrderReq& from);

  inline StartOrderReq& operator=(const StartOrderReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const StartOrderReq& default_instance();

  void Swap(StartOrderReq* other);

  // implements Message ----------------------------------------------

  StartOrderReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const StartOrderReq& from);
  void MergeFrom(const StartOrderReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 slot = 1;
  inline bool has_slot() const;
  inline void clear_slot();
  static const int kSlotFieldNumber = 1;
  inline ::google::protobuf::uint32 slot() const;
  inline void set_slot(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoOrder.StartOrderReq)
 private:
  inline void set_has_slot();
  inline void clear_has_slot();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 slot_;
  friend void  protobuf_AddDesc_ProtoOrder_2eproto();
  friend void protobuf_AssignDesc_ProtoOrder_2eproto();
  friend void protobuf_ShutdownFile_ProtoOrder_2eproto();

  void InitAsDefaultInstance();
  static StartOrderReq* default_instance_;
};
// -------------------------------------------------------------------

class StartOrderResp : public ::google::protobuf::Message {
 public:
  StartOrderResp();
  virtual ~StartOrderResp();

  StartOrderResp(const StartOrderResp& from);

  inline StartOrderResp& operator=(const StartOrderResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const StartOrderResp& default_instance();

  void Swap(StartOrderResp* other);

  // implements Message ----------------------------------------------

  StartOrderResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const StartOrderResp& from);
  void MergeFrom(const StartOrderResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bool result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline bool result() const;
  inline void set_result(bool value);

  // required .DataCommon.CommonItemsCPP commons = 2;
  inline bool has_commons() const;
  inline void clear_commons();
  static const int kCommonsFieldNumber = 2;
  inline const ::DataCommon::CommonItemsCPP& commons() const;
  inline ::DataCommon::CommonItemsCPP* mutable_commons();
  inline ::DataCommon::CommonItemsCPP* release_commons();
  inline void set_allocated_commons(::DataCommon::CommonItemsCPP* commons);

  // required .ProtoOrder.OrderCPP order = 3;
  inline bool has_order() const;
  inline void clear_order();
  static const int kOrderFieldNumber = 3;
  inline const ::ProtoOrder::OrderCPP& order() const;
  inline ::ProtoOrder::OrderCPP* mutable_order();
  inline ::ProtoOrder::OrderCPP* release_order();
  inline void set_allocated_order(::ProtoOrder::OrderCPP* order);

  // required .ProtoOrder.TruckCPP truck = 4;
  inline bool has_truck() const;
  inline void clear_truck();
  static const int kTruckFieldNumber = 4;
  inline const ::ProtoOrder::TruckCPP& truck() const;
  inline ::ProtoOrder::TruckCPP* mutable_truck();
  inline ::ProtoOrder::TruckCPP* release_truck();
  inline void set_allocated_truck(::ProtoOrder::TruckCPP* truck);

  // optional .ProtoOrder.OrderADBonusCPP adBonus = 5;
  inline bool has_adbonus() const;
  inline void clear_adbonus();
  static const int kAdBonusFieldNumber = 5;
  inline const ::ProtoOrder::OrderADBonusCPP& adbonus() const;
  inline ::ProtoOrder::OrderADBonusCPP* mutable_adbonus();
  inline ::ProtoOrder::OrderADBonusCPP* release_adbonus();
  inline void set_allocated_adbonus(::ProtoOrder::OrderADBonusCPP* adbonus);

  // optional .ProtoOrder.OrderDiamondBonusCPP diamondBounus = 6;
  inline bool has_diamondbounus() const;
  inline void clear_diamondbounus();
  static const int kDiamondBounusFieldNumber = 6;
  inline const ::ProtoOrder::OrderDiamondBonusCPP& diamondbounus() const;
  inline ::ProtoOrder::OrderDiamondBonusCPP* mutable_diamondbounus();
  inline ::ProtoOrder::OrderDiamondBonusCPP* release_diamondbounus();
  inline void set_allocated_diamondbounus(::ProtoOrder::OrderDiamondBonusCPP* diamondbounus);

  // optional .ProtoOrder.OrderVIPBonusCPP vipBonus = 7;
  inline bool has_vipbonus() const;
  inline void clear_vipbonus();
  static const int kVipBonusFieldNumber = 7;
  inline const ::ProtoOrder::OrderVIPBonusCPP& vipbonus() const;
  inline ::ProtoOrder::OrderVIPBonusCPP* mutable_vipbonus();
  inline ::ProtoOrder::OrderVIPBonusCPP* release_vipbonus();
  inline void set_allocated_vipbonus(::ProtoOrder::OrderVIPBonusCPP* vipbonus);

  // @@protoc_insertion_point(class_scope:ProtoOrder.StartOrderResp)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_commons();
  inline void clear_has_commons();
  inline void set_has_order();
  inline void clear_has_order();
  inline void set_has_truck();
  inline void clear_has_truck();
  inline void set_has_adbonus();
  inline void clear_has_adbonus();
  inline void set_has_diamondbounus();
  inline void clear_has_diamondbounus();
  inline void set_has_vipbonus();
  inline void clear_has_vipbonus();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::DataCommon::CommonItemsCPP* commons_;
  ::ProtoOrder::OrderCPP* order_;
  ::ProtoOrder::TruckCPP* truck_;
  ::ProtoOrder::OrderADBonusCPP* adbonus_;
  ::ProtoOrder::OrderDiamondBonusCPP* diamondbounus_;
  ::ProtoOrder::OrderVIPBonusCPP* vipbonus_;
  bool result_;
  friend void  protobuf_AddDesc_ProtoOrder_2eproto();
  friend void protobuf_AssignDesc_ProtoOrder_2eproto();
  friend void protobuf_ShutdownFile_ProtoOrder_2eproto();

  void InitAsDefaultInstance();
  static StartOrderResp* default_instance_;
};
// -------------------------------------------------------------------

class DeleteOrderReq : public ::google::protobuf::Message {
 public:
  DeleteOrderReq();
  virtual ~DeleteOrderReq();

  DeleteOrderReq(const DeleteOrderReq& from);

  inline DeleteOrderReq& operator=(const DeleteOrderReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DeleteOrderReq& default_instance();

  void Swap(DeleteOrderReq* other);

  // implements Message ----------------------------------------------

  DeleteOrderReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DeleteOrderReq& from);
  void MergeFrom(const DeleteOrderReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 slot = 1;
  inline bool has_slot() const;
  inline void clear_slot();
  static const int kSlotFieldNumber = 1;
  inline ::google::protobuf::uint32 slot() const;
  inline void set_slot(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoOrder.DeleteOrderReq)
 private:
  inline void set_has_slot();
  inline void clear_has_slot();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 slot_;
  friend void  protobuf_AddDesc_ProtoOrder_2eproto();
  friend void protobuf_AssignDesc_ProtoOrder_2eproto();
  friend void protobuf_ShutdownFile_ProtoOrder_2eproto();

  void InitAsDefaultInstance();
  static DeleteOrderReq* default_instance_;
};
// -------------------------------------------------------------------

class DeleteOrderResp : public ::google::protobuf::Message {
 public:
  DeleteOrderResp();
  virtual ~DeleteOrderResp();

  DeleteOrderResp(const DeleteOrderResp& from);

  inline DeleteOrderResp& operator=(const DeleteOrderResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DeleteOrderResp& default_instance();

  void Swap(DeleteOrderResp* other);

  // implements Message ----------------------------------------------

  DeleteOrderResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DeleteOrderResp& from);
  void MergeFrom(const DeleteOrderResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bool result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline bool result() const;
  inline void set_result(bool value);

  // required .ProtoOrder.OrderCPP order = 2;
  inline bool has_order() const;
  inline void clear_order();
  static const int kOrderFieldNumber = 2;
  inline const ::ProtoOrder::OrderCPP& order() const;
  inline ::ProtoOrder::OrderCPP* mutable_order();
  inline ::ProtoOrder::OrderCPP* release_order();
  inline void set_allocated_order(::ProtoOrder::OrderCPP* order);

  // @@protoc_insertion_point(class_scope:ProtoOrder.DeleteOrderResp)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_order();
  inline void clear_has_order();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::ProtoOrder::OrderCPP* order_;
  bool result_;
  friend void  protobuf_AddDesc_ProtoOrder_2eproto();
  friend void protobuf_AssignDesc_ProtoOrder_2eproto();
  friend void protobuf_ShutdownFile_ProtoOrder_2eproto();

  void InitAsDefaultInstance();
  static DeleteOrderResp* default_instance_;
};
// -------------------------------------------------------------------

class RewardOrderReq : public ::google::protobuf::Message {
 public:
  RewardOrderReq();
  virtual ~RewardOrderReq();

  RewardOrderReq(const RewardOrderReq& from);

  inline RewardOrderReq& operator=(const RewardOrderReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RewardOrderReq& default_instance();

  void Swap(RewardOrderReq* other);

  // implements Message ----------------------------------------------

  RewardOrderReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RewardOrderReq& from);
  void MergeFrom(const RewardOrderReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 uid = 1;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 1;
  inline ::google::protobuf::uint32 uid() const;
  inline void set_uid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoOrder.RewardOrderReq)
 private:
  inline void set_has_uid();
  inline void clear_has_uid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 uid_;
  friend void  protobuf_AddDesc_ProtoOrder_2eproto();
  friend void protobuf_AssignDesc_ProtoOrder_2eproto();
  friend void protobuf_ShutdownFile_ProtoOrder_2eproto();

  void InitAsDefaultInstance();
  static RewardOrderReq* default_instance_;
};
// -------------------------------------------------------------------

class RewardOrderResp : public ::google::protobuf::Message {
 public:
  RewardOrderResp();
  virtual ~RewardOrderResp();

  RewardOrderResp(const RewardOrderResp& from);

  inline RewardOrderResp& operator=(const RewardOrderResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RewardOrderResp& default_instance();

  void Swap(RewardOrderResp* other);

  // implements Message ----------------------------------------------

  RewardOrderResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RewardOrderResp& from);
  void MergeFrom(const RewardOrderResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bool result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline bool result() const;
  inline void set_result(bool value);

  // required .DataCommon.CommonItemsCPP commons = 2;
  inline bool has_commons() const;
  inline void clear_commons();
  static const int kCommonsFieldNumber = 2;
  inline const ::DataCommon::CommonItemsCPP& commons() const;
  inline ::DataCommon::CommonItemsCPP* mutable_commons();
  inline ::DataCommon::CommonItemsCPP* release_commons();
  inline void set_allocated_commons(::DataCommon::CommonItemsCPP* commons);

  // required .ProtoOrder.TruckCPP truck = 3;
  inline bool has_truck() const;
  inline void clear_truck();
  static const int kTruckFieldNumber = 3;
  inline const ::ProtoOrder::TruckCPP& truck() const;
  inline ::ProtoOrder::TruckCPP* mutable_truck();
  inline ::ProtoOrder::TruckCPP* release_truck();
  inline void set_allocated_truck(::ProtoOrder::TruckCPP* truck);

  // @@protoc_insertion_point(class_scope:ProtoOrder.RewardOrderResp)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_commons();
  inline void clear_has_commons();
  inline void set_has_truck();
  inline void clear_has_truck();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::DataCommon::CommonItemsCPP* commons_;
  ::ProtoOrder::TruckCPP* truck_;
  bool result_;
  friend void  protobuf_AddDesc_ProtoOrder_2eproto();
  friend void protobuf_AssignDesc_ProtoOrder_2eproto();
  friend void protobuf_ShutdownFile_ProtoOrder_2eproto();

  void InitAsDefaultInstance();
  static RewardOrderResp* default_instance_;
};
// -------------------------------------------------------------------

class OrderADBonusCPP : public ::google::protobuf::Message {
 public:
  OrderADBonusCPP();
  virtual ~OrderADBonusCPP();

  OrderADBonusCPP(const OrderADBonusCPP& from);

  inline OrderADBonusCPP& operator=(const OrderADBonusCPP& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OrderADBonusCPP& default_instance();

  void Swap(OrderADBonusCPP* other);

  // implements Message ----------------------------------------------

  OrderADBonusCPP* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const OrderADBonusCPP& from);
  void MergeFrom(const OrderADBonusCPP& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 viewedAdCnt = 1;
  inline bool has_viewedadcnt() const;
  inline void clear_viewedadcnt();
  static const int kViewedAdCntFieldNumber = 1;
  inline ::google::protobuf::uint32 viewedadcnt() const;
  inline void set_viewedadcnt(::google::protobuf::uint32 value);

  // required uint32 remianAdBonusCnt = 2;
  inline bool has_remianadbonuscnt() const;
  inline void clear_remianadbonuscnt();
  static const int kRemianAdBonusCntFieldNumber = 2;
  inline ::google::protobuf::uint32 remianadbonuscnt() const;
  inline void set_remianadbonuscnt(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoOrder.OrderADBonusCPP)
 private:
  inline void set_has_viewedadcnt();
  inline void clear_has_viewedadcnt();
  inline void set_has_remianadbonuscnt();
  inline void clear_has_remianadbonuscnt();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 viewedadcnt_;
  ::google::protobuf::uint32 remianadbonuscnt_;
  friend void  protobuf_AddDesc_ProtoOrder_2eproto();
  friend void protobuf_AssignDesc_ProtoOrder_2eproto();
  friend void protobuf_ShutdownFile_ProtoOrder_2eproto();

  void InitAsDefaultInstance();
  static OrderADBonusCPP* default_instance_;
};
// -------------------------------------------------------------------

class OrderDiamondBonusCPP : public ::google::protobuf::Message {
 public:
  OrderDiamondBonusCPP();
  virtual ~OrderDiamondBonusCPP();

  OrderDiamondBonusCPP(const OrderDiamondBonusCPP& from);

  inline OrderDiamondBonusCPP& operator=(const OrderDiamondBonusCPP& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OrderDiamondBonusCPP& default_instance();

  void Swap(OrderDiamondBonusCPP* other);

  // implements Message ----------------------------------------------

  OrderDiamondBonusCPP* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const OrderDiamondBonusCPP& from);
  void MergeFrom(const OrderDiamondBonusCPP& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 remainDiamondBonusCnt = 1;
  inline bool has_remaindiamondbonuscnt() const;
  inline void clear_remaindiamondbonuscnt();
  static const int kRemainDiamondBonusCntFieldNumber = 1;
  inline ::google::protobuf::uint32 remaindiamondbonuscnt() const;
  inline void set_remaindiamondbonuscnt(::google::protobuf::uint32 value);

  // required uint32 diamondBonusEndTs = 2;
  inline bool has_diamondbonusendts() const;
  inline void clear_diamondbonusendts();
  static const int kDiamondBonusEndTsFieldNumber = 2;
  inline ::google::protobuf::uint32 diamondbonusendts() const;
  inline void set_diamondbonusendts(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoOrder.OrderDiamondBonusCPP)
 private:
  inline void set_has_remaindiamondbonuscnt();
  inline void clear_has_remaindiamondbonuscnt();
  inline void set_has_diamondbonusendts();
  inline void clear_has_diamondbonusendts();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 remaindiamondbonuscnt_;
  ::google::protobuf::uint32 diamondbonusendts_;
  friend void  protobuf_AddDesc_ProtoOrder_2eproto();
  friend void protobuf_AssignDesc_ProtoOrder_2eproto();
  friend void protobuf_ShutdownFile_ProtoOrder_2eproto();

  void InitAsDefaultInstance();
  static OrderDiamondBonusCPP* default_instance_;
};
// -------------------------------------------------------------------

class OrderVIPBonusCPP : public ::google::protobuf::Message {
 public:
  OrderVIPBonusCPP();
  virtual ~OrderVIPBonusCPP();

  OrderVIPBonusCPP(const OrderVIPBonusCPP& from);

  inline OrderVIPBonusCPP& operator=(const OrderVIPBonusCPP& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OrderVIPBonusCPP& default_instance();

  void Swap(OrderVIPBonusCPP* other);

  // implements Message ----------------------------------------------

  OrderVIPBonusCPP* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const OrderVIPBonusCPP& from);
  void MergeFrom(const OrderVIPBonusCPP& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 remainVipBonusCnt = 1;
  inline bool has_remainvipbonuscnt() const;
  inline void clear_remainvipbonuscnt();
  static const int kRemainVipBonusCntFieldNumber = 1;
  inline ::google::protobuf::uint32 remainvipbonuscnt() const;
  inline void set_remainvipbonuscnt(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoOrder.OrderVIPBonusCPP)
 private:
  inline void set_has_remainvipbonuscnt();
  inline void clear_has_remainvipbonuscnt();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 remainvipbonuscnt_;
  friend void  protobuf_AddDesc_ProtoOrder_2eproto();
  friend void protobuf_AssignDesc_ProtoOrder_2eproto();
  friend void protobuf_ShutdownFile_ProtoOrder_2eproto();

  void InitAsDefaultInstance();
  static OrderVIPBonusCPP* default_instance_;
};
// -------------------------------------------------------------------

class GetOrderBonusInfoReq : public ::google::protobuf::Message {
 public:
  GetOrderBonusInfoReq();
  virtual ~GetOrderBonusInfoReq();

  GetOrderBonusInfoReq(const GetOrderBonusInfoReq& from);

  inline GetOrderBonusInfoReq& operator=(const GetOrderBonusInfoReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetOrderBonusInfoReq& default_instance();

  void Swap(GetOrderBonusInfoReq* other);

  // implements Message ----------------------------------------------

  GetOrderBonusInfoReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetOrderBonusInfoReq& from);
  void MergeFrom(const GetOrderBonusInfoReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:ProtoOrder.GetOrderBonusInfoReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_ProtoOrder_2eproto();
  friend void protobuf_AssignDesc_ProtoOrder_2eproto();
  friend void protobuf_ShutdownFile_ProtoOrder_2eproto();

  void InitAsDefaultInstance();
  static GetOrderBonusInfoReq* default_instance_;
};
// -------------------------------------------------------------------

class GetOrderBonusInfoResp : public ::google::protobuf::Message {
 public:
  GetOrderBonusInfoResp();
  virtual ~GetOrderBonusInfoResp();

  GetOrderBonusInfoResp(const GetOrderBonusInfoResp& from);

  inline GetOrderBonusInfoResp& operator=(const GetOrderBonusInfoResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetOrderBonusInfoResp& default_instance();

  void Swap(GetOrderBonusInfoResp* other);

  // implements Message ----------------------------------------------

  GetOrderBonusInfoResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetOrderBonusInfoResp& from);
  void MergeFrom(const GetOrderBonusInfoResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .ProtoOrder.OrderADBonusCPP adBonus = 1;
  inline bool has_adbonus() const;
  inline void clear_adbonus();
  static const int kAdBonusFieldNumber = 1;
  inline const ::ProtoOrder::OrderADBonusCPP& adbonus() const;
  inline ::ProtoOrder::OrderADBonusCPP* mutable_adbonus();
  inline ::ProtoOrder::OrderADBonusCPP* release_adbonus();
  inline void set_allocated_adbonus(::ProtoOrder::OrderADBonusCPP* adbonus);

  // required .ProtoOrder.OrderDiamondBonusCPP diamondBounus = 2;
  inline bool has_diamondbounus() const;
  inline void clear_diamondbounus();
  static const int kDiamondBounusFieldNumber = 2;
  inline const ::ProtoOrder::OrderDiamondBonusCPP& diamondbounus() const;
  inline ::ProtoOrder::OrderDiamondBonusCPP* mutable_diamondbounus();
  inline ::ProtoOrder::OrderDiamondBonusCPP* release_diamondbounus();
  inline void set_allocated_diamondbounus(::ProtoOrder::OrderDiamondBonusCPP* diamondbounus);

  // optional .ProtoOrder.OrderVIPBonusCPP vipBonus = 3;
  inline bool has_vipbonus() const;
  inline void clear_vipbonus();
  static const int kVipBonusFieldNumber = 3;
  inline const ::ProtoOrder::OrderVIPBonusCPP& vipbonus() const;
  inline ::ProtoOrder::OrderVIPBonusCPP* mutable_vipbonus();
  inline ::ProtoOrder::OrderVIPBonusCPP* release_vipbonus();
  inline void set_allocated_vipbonus(::ProtoOrder::OrderVIPBonusCPP* vipbonus);

  // @@protoc_insertion_point(class_scope:ProtoOrder.GetOrderBonusInfoResp)
 private:
  inline void set_has_adbonus();
  inline void clear_has_adbonus();
  inline void set_has_diamondbounus();
  inline void clear_has_diamondbounus();
  inline void set_has_vipbonus();
  inline void clear_has_vipbonus();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::ProtoOrder::OrderADBonusCPP* adbonus_;
  ::ProtoOrder::OrderDiamondBonusCPP* diamondbounus_;
  ::ProtoOrder::OrderVIPBonusCPP* vipbonus_;
  friend void  protobuf_AddDesc_ProtoOrder_2eproto();
  friend void protobuf_AssignDesc_ProtoOrder_2eproto();
  friend void protobuf_ShutdownFile_ProtoOrder_2eproto();

  void InitAsDefaultInstance();
  static GetOrderBonusInfoResp* default_instance_;
};
// -------------------------------------------------------------------

class ViewAdReq : public ::google::protobuf::Message {
 public:
  ViewAdReq();
  virtual ~ViewAdReq();

  ViewAdReq(const ViewAdReq& from);

  inline ViewAdReq& operator=(const ViewAdReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ViewAdReq& default_instance();

  void Swap(ViewAdReq* other);

  // implements Message ----------------------------------------------

  ViewAdReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ViewAdReq& from);
  void MergeFrom(const ViewAdReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:ProtoOrder.ViewAdReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_ProtoOrder_2eproto();
  friend void protobuf_AssignDesc_ProtoOrder_2eproto();
  friend void protobuf_ShutdownFile_ProtoOrder_2eproto();

  void InitAsDefaultInstance();
  static ViewAdReq* default_instance_;
};
// -------------------------------------------------------------------

class ViewAdResp : public ::google::protobuf::Message {
 public:
  ViewAdResp();
  virtual ~ViewAdResp();

  ViewAdResp(const ViewAdResp& from);

  inline ViewAdResp& operator=(const ViewAdResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ViewAdResp& default_instance();

  void Swap(ViewAdResp* other);

  // implements Message ----------------------------------------------

  ViewAdResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ViewAdResp& from);
  void MergeFrom(const ViewAdResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .ProtoOrder.OrderADBonusCPP adBonus = 1;
  inline bool has_adbonus() const;
  inline void clear_adbonus();
  static const int kAdBonusFieldNumber = 1;
  inline const ::ProtoOrder::OrderADBonusCPP& adbonus() const;
  inline ::ProtoOrder::OrderADBonusCPP* mutable_adbonus();
  inline ::ProtoOrder::OrderADBonusCPP* release_adbonus();
  inline void set_allocated_adbonus(::ProtoOrder::OrderADBonusCPP* adbonus);

  // @@protoc_insertion_point(class_scope:ProtoOrder.ViewAdResp)
 private:
  inline void set_has_adbonus();
  inline void clear_has_adbonus();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::ProtoOrder::OrderADBonusCPP* adbonus_;
  friend void  protobuf_AddDesc_ProtoOrder_2eproto();
  friend void protobuf_AssignDesc_ProtoOrder_2eproto();
  friend void protobuf_ShutdownFile_ProtoOrder_2eproto();

  void InitAsDefaultInstance();
  static ViewAdResp* default_instance_;
};
// -------------------------------------------------------------------

class BuyOrderBonusReq : public ::google::protobuf::Message {
 public:
  BuyOrderBonusReq();
  virtual ~BuyOrderBonusReq();

  BuyOrderBonusReq(const BuyOrderBonusReq& from);

  inline BuyOrderBonusReq& operator=(const BuyOrderBonusReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BuyOrderBonusReq& default_instance();

  void Swap(BuyOrderBonusReq* other);

  // implements Message ----------------------------------------------

  BuyOrderBonusReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BuyOrderBonusReq& from);
  void MergeFrom(const BuyOrderBonusReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:ProtoOrder.BuyOrderBonusReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_ProtoOrder_2eproto();
  friend void protobuf_AssignDesc_ProtoOrder_2eproto();
  friend void protobuf_ShutdownFile_ProtoOrder_2eproto();

  void InitAsDefaultInstance();
  static BuyOrderBonusReq* default_instance_;
};
// -------------------------------------------------------------------

class BuyOrderBonusResp : public ::google::protobuf::Message {
 public:
  BuyOrderBonusResp();
  virtual ~BuyOrderBonusResp();

  BuyOrderBonusResp(const BuyOrderBonusResp& from);

  inline BuyOrderBonusResp& operator=(const BuyOrderBonusResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BuyOrderBonusResp& default_instance();

  void Swap(BuyOrderBonusResp* other);

  // implements Message ----------------------------------------------

  BuyOrderBonusResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BuyOrderBonusResp& from);
  void MergeFrom(const BuyOrderBonusResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .DataCommon.CommonItemsCPP commons = 1;
  inline bool has_commons() const;
  inline void clear_commons();
  static const int kCommonsFieldNumber = 1;
  inline const ::DataCommon::CommonItemsCPP& commons() const;
  inline ::DataCommon::CommonItemsCPP* mutable_commons();
  inline ::DataCommon::CommonItemsCPP* release_commons();
  inline void set_allocated_commons(::DataCommon::CommonItemsCPP* commons);

  // required .ProtoOrder.OrderDiamondBonusCPP diamondBounus = 2;
  inline bool has_diamondbounus() const;
  inline void clear_diamondbounus();
  static const int kDiamondBounusFieldNumber = 2;
  inline const ::ProtoOrder::OrderDiamondBonusCPP& diamondbounus() const;
  inline ::ProtoOrder::OrderDiamondBonusCPP* mutable_diamondbounus();
  inline ::ProtoOrder::OrderDiamondBonusCPP* release_diamondbounus();
  inline void set_allocated_diamondbounus(::ProtoOrder::OrderDiamondBonusCPP* diamondbounus);

  // @@protoc_insertion_point(class_scope:ProtoOrder.BuyOrderBonusResp)
 private:
  inline void set_has_commons();
  inline void clear_has_commons();
  inline void set_has_diamondbounus();
  inline void clear_has_diamondbounus();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::DataCommon::CommonItemsCPP* commons_;
  ::ProtoOrder::OrderDiamondBonusCPP* diamondbounus_;
  friend void  protobuf_AddDesc_ProtoOrder_2eproto();
  friend void protobuf_AssignDesc_ProtoOrder_2eproto();
  friend void protobuf_ShutdownFile_ProtoOrder_2eproto();

  void InitAsDefaultInstance();
  static BuyOrderBonusResp* default_instance_;
};
// ===================================================================


// ===================================================================

// NeedCost

// required uint32 id = 1;
inline bool NeedCost::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NeedCost::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NeedCost::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NeedCost::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 NeedCost::id() const {
  // @@protoc_insertion_point(field_get:ProtoOrder.NeedCost.id)
  return id_;
}
inline void NeedCost::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:ProtoOrder.NeedCost.id)
}

// required uint32 count = 2;
inline bool NeedCost::has_count() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void NeedCost::set_has_count() {
  _has_bits_[0] |= 0x00000002u;
}
inline void NeedCost::clear_has_count() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void NeedCost::clear_count() {
  count_ = 0u;
  clear_has_count();
}
inline ::google::protobuf::uint32 NeedCost::count() const {
  // @@protoc_insertion_point(field_get:ProtoOrder.NeedCost.count)
  return count_;
}
inline void NeedCost::set_count(::google::protobuf::uint32 value) {
  set_has_count();
  count_ = value;
  // @@protoc_insertion_point(field_set:ProtoOrder.NeedCost.count)
}

// -------------------------------------------------------------------

// OrderCPP

// required uint32 slot = 1;
inline bool OrderCPP::has_slot() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OrderCPP::set_has_slot() {
  _has_bits_[0] |= 0x00000001u;
}
inline void OrderCPP::clear_has_slot() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void OrderCPP::clear_slot() {
  slot_ = 0u;
  clear_has_slot();
}
inline ::google::protobuf::uint32 OrderCPP::slot() const {
  // @@protoc_insertion_point(field_get:ProtoOrder.OrderCPP.slot)
  return slot_;
}
inline void OrderCPP::set_slot(::google::protobuf::uint32 value) {
  set_has_slot();
  slot_ = value;
  // @@protoc_insertion_point(field_set:ProtoOrder.OrderCPP.slot)
}

// required uint32 coin = 2;
inline bool OrderCPP::has_coin() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void OrderCPP::set_has_coin() {
  _has_bits_[0] |= 0x00000002u;
}
inline void OrderCPP::clear_has_coin() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void OrderCPP::clear_coin() {
  coin_ = 0u;
  clear_has_coin();
}
inline ::google::protobuf::uint32 OrderCPP::coin() const {
  // @@protoc_insertion_point(field_get:ProtoOrder.OrderCPP.coin)
  return coin_;
}
inline void OrderCPP::set_coin(::google::protobuf::uint32 value) {
  set_has_coin();
  coin_ = value;
  // @@protoc_insertion_point(field_set:ProtoOrder.OrderCPP.coin)
}

// required uint32 exp = 3;
inline bool OrderCPP::has_exp() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void OrderCPP::set_has_exp() {
  _has_bits_[0] |= 0x00000004u;
}
inline void OrderCPP::clear_has_exp() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void OrderCPP::clear_exp() {
  exp_ = 0u;
  clear_has_exp();
}
inline ::google::protobuf::uint32 OrderCPP::exp() const {
  // @@protoc_insertion_point(field_get:ProtoOrder.OrderCPP.exp)
  return exp_;
}
inline void OrderCPP::set_exp(::google::protobuf::uint32 value) {
  set_has_exp();
  exp_ = value;
  // @@protoc_insertion_point(field_set:ProtoOrder.OrderCPP.exp)
}

// required uint32 end_ts = 4;
inline bool OrderCPP::has_end_ts() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void OrderCPP::set_has_end_ts() {
  _has_bits_[0] |= 0x00000008u;
}
inline void OrderCPP::clear_has_end_ts() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void OrderCPP::clear_end_ts() {
  end_ts_ = 0u;
  clear_has_end_ts();
}
inline ::google::protobuf::uint32 OrderCPP::end_ts() const {
  // @@protoc_insertion_point(field_get:ProtoOrder.OrderCPP.end_ts)
  return end_ts_;
}
inline void OrderCPP::set_end_ts(::google::protobuf::uint32 value) {
  set_has_end_ts();
  end_ts_ = value;
  // @@protoc_insertion_point(field_set:ProtoOrder.OrderCPP.end_ts)
}

// repeated .ProtoOrder.NeedCost needcost = 5;
inline int OrderCPP::needcost_size() const {
  return needcost_.size();
}
inline void OrderCPP::clear_needcost() {
  needcost_.Clear();
}
inline const ::ProtoOrder::NeedCost& OrderCPP::needcost(int index) const {
  // @@protoc_insertion_point(field_get:ProtoOrder.OrderCPP.needcost)
  return needcost_.Get(index);
}
inline ::ProtoOrder::NeedCost* OrderCPP::mutable_needcost(int index) {
  // @@protoc_insertion_point(field_mutable:ProtoOrder.OrderCPP.needcost)
  return needcost_.Mutable(index);
}
inline ::ProtoOrder::NeedCost* OrderCPP::add_needcost() {
  // @@protoc_insertion_point(field_add:ProtoOrder.OrderCPP.needcost)
  return needcost_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ProtoOrder::NeedCost >&
OrderCPP::needcost() const {
  // @@protoc_insertion_point(field_list:ProtoOrder.OrderCPP.needcost)
  return needcost_;
}
inline ::google::protobuf::RepeatedPtrField< ::ProtoOrder::NeedCost >*
OrderCPP::mutable_needcost() {
  // @@protoc_insertion_point(field_mutable_list:ProtoOrder.OrderCPP.needcost)
  return &needcost_;
}

// required uint32 discardcdtime = 6;
inline bool OrderCPP::has_discardcdtime() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void OrderCPP::set_has_discardcdtime() {
  _has_bits_[0] |= 0x00000020u;
}
inline void OrderCPP::clear_has_discardcdtime() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void OrderCPP::clear_discardcdtime() {
  discardcdtime_ = 0u;
  clear_has_discardcdtime();
}
inline ::google::protobuf::uint32 OrderCPP::discardcdtime() const {
  // @@protoc_insertion_point(field_get:ProtoOrder.OrderCPP.discardcdtime)
  return discardcdtime_;
}
inline void OrderCPP::set_discardcdtime(::google::protobuf::uint32 value) {
  set_has_discardcdtime();
  discardcdtime_ = value;
  // @@protoc_insertion_point(field_set:ProtoOrder.OrderCPP.discardcdtime)
}

// required uint32 storageid = 7;
inline bool OrderCPP::has_storageid() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void OrderCPP::set_has_storageid() {
  _has_bits_[0] |= 0x00000040u;
}
inline void OrderCPP::clear_has_storageid() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void OrderCPP::clear_storageid() {
  storageid_ = 0u;
  clear_has_storageid();
}
inline ::google::protobuf::uint32 OrderCPP::storageid() const {
  // @@protoc_insertion_point(field_get:ProtoOrder.OrderCPP.storageid)
  return storageid_;
}
inline void OrderCPP::set_storageid(::google::protobuf::uint32 value) {
  set_has_storageid();
  storageid_ = value;
  // @@protoc_insertion_point(field_set:ProtoOrder.OrderCPP.storageid)
}

// required uint32 levelid = 8;
inline bool OrderCPP::has_levelid() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void OrderCPP::set_has_levelid() {
  _has_bits_[0] |= 0x00000080u;
}
inline void OrderCPP::clear_has_levelid() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void OrderCPP::clear_levelid() {
  levelid_ = 0u;
  clear_has_levelid();
}
inline ::google::protobuf::uint32 OrderCPP::levelid() const {
  // @@protoc_insertion_point(field_get:ProtoOrder.OrderCPP.levelid)
  return levelid_;
}
inline void OrderCPP::set_levelid(::google::protobuf::uint32 value) {
  set_has_levelid();
  levelid_ = value;
  // @@protoc_insertion_point(field_set:ProtoOrder.OrderCPP.levelid)
}

// required bytes orderid = 9;
inline bool OrderCPP::has_orderid() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void OrderCPP::set_has_orderid() {
  _has_bits_[0] |= 0x00000100u;
}
inline void OrderCPP::clear_has_orderid() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void OrderCPP::clear_orderid() {
  if (orderid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    orderid_->clear();
  }
  clear_has_orderid();
}
inline const ::std::string& OrderCPP::orderid() const {
  // @@protoc_insertion_point(field_get:ProtoOrder.OrderCPP.orderid)
  return *orderid_;
}
inline void OrderCPP::set_orderid(const ::std::string& value) {
  set_has_orderid();
  if (orderid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    orderid_ = new ::std::string;
  }
  orderid_->assign(value);
  // @@protoc_insertion_point(field_set:ProtoOrder.OrderCPP.orderid)
}
inline void OrderCPP::set_orderid(const char* value) {
  set_has_orderid();
  if (orderid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    orderid_ = new ::std::string;
  }
  orderid_->assign(value);
  // @@protoc_insertion_point(field_set_char:ProtoOrder.OrderCPP.orderid)
}
inline void OrderCPP::set_orderid(const void* value, size_t size) {
  set_has_orderid();
  if (orderid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    orderid_ = new ::std::string;
  }
  orderid_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ProtoOrder.OrderCPP.orderid)
}
inline ::std::string* OrderCPP::mutable_orderid() {
  set_has_orderid();
  if (orderid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    orderid_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:ProtoOrder.OrderCPP.orderid)
  return orderid_;
}
inline ::std::string* OrderCPP::release_orderid() {
  clear_has_orderid();
  if (orderid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = orderid_;
    orderid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void OrderCPP::set_allocated_orderid(::std::string* orderid) {
  if (orderid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete orderid_;
  }
  if (orderid) {
    set_has_orderid();
    orderid_ = orderid;
  } else {
    clear_has_orderid();
    orderid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoOrder.OrderCPP.orderid)
}

// -------------------------------------------------------------------

// TruckCPP

// required uint32 state = 1;
inline bool TruckCPP::has_state() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TruckCPP::set_has_state() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TruckCPP::clear_has_state() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TruckCPP::clear_state() {
  state_ = 0u;
  clear_has_state();
}
inline ::google::protobuf::uint32 TruckCPP::state() const {
  // @@protoc_insertion_point(field_get:ProtoOrder.TruckCPP.state)
  return state_;
}
inline void TruckCPP::set_state(::google::protobuf::uint32 value) {
  set_has_state();
  state_ = value;
  // @@protoc_insertion_point(field_set:ProtoOrder.TruckCPP.state)
}

// required uint32 end_ts = 2;
inline bool TruckCPP::has_end_ts() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TruckCPP::set_has_end_ts() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TruckCPP::clear_has_end_ts() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TruckCPP::clear_end_ts() {
  end_ts_ = 0u;
  clear_has_end_ts();
}
inline ::google::protobuf::uint32 TruckCPP::end_ts() const {
  // @@protoc_insertion_point(field_get:ProtoOrder.TruckCPP.end_ts)
  return end_ts_;
}
inline void TruckCPP::set_end_ts(::google::protobuf::uint32 value) {
  set_has_end_ts();
  end_ts_ = value;
  // @@protoc_insertion_point(field_set:ProtoOrder.TruckCPP.end_ts)
}

// required uint32 coin = 3;
inline bool TruckCPP::has_coin() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TruckCPP::set_has_coin() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TruckCPP::clear_has_coin() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TruckCPP::clear_coin() {
  coin_ = 0u;
  clear_has_coin();
}
inline ::google::protobuf::uint32 TruckCPP::coin() const {
  // @@protoc_insertion_point(field_get:ProtoOrder.TruckCPP.coin)
  return coin_;
}
inline void TruckCPP::set_coin(::google::protobuf::uint32 value) {
  set_has_coin();
  coin_ = value;
  // @@protoc_insertion_point(field_set:ProtoOrder.TruckCPP.coin)
}

// required uint32 exp = 4;
inline bool TruckCPP::has_exp() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void TruckCPP::set_has_exp() {
  _has_bits_[0] |= 0x00000008u;
}
inline void TruckCPP::clear_has_exp() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void TruckCPP::clear_exp() {
  exp_ = 0u;
  clear_has_exp();
}
inline ::google::protobuf::uint32 TruckCPP::exp() const {
  // @@protoc_insertion_point(field_get:ProtoOrder.TruckCPP.exp)
  return exp_;
}
inline void TruckCPP::set_exp(::google::protobuf::uint32 value) {
  set_has_exp();
  exp_ = value;
  // @@protoc_insertion_point(field_set:ProtoOrder.TruckCPP.exp)
}

// -------------------------------------------------------------------

// OrderQueryReq

// required uint32 uid = 1;
inline bool OrderQueryReq::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OrderQueryReq::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void OrderQueryReq::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void OrderQueryReq::clear_uid() {
  uid_ = 0u;
  clear_has_uid();
}
inline ::google::protobuf::uint32 OrderQueryReq::uid() const {
  // @@protoc_insertion_point(field_get:ProtoOrder.OrderQueryReq.uid)
  return uid_;
}
inline void OrderQueryReq::set_uid(::google::protobuf::uint32 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:ProtoOrder.OrderQueryReq.uid)
}

// -------------------------------------------------------------------

// OrderResp

// repeated .ProtoOrder.OrderCPP order = 1;
inline int OrderResp::order_size() const {
  return order_.size();
}
inline void OrderResp::clear_order() {
  order_.Clear();
}
inline const ::ProtoOrder::OrderCPP& OrderResp::order(int index) const {
  // @@protoc_insertion_point(field_get:ProtoOrder.OrderResp.order)
  return order_.Get(index);
}
inline ::ProtoOrder::OrderCPP* OrderResp::mutable_order(int index) {
  // @@protoc_insertion_point(field_mutable:ProtoOrder.OrderResp.order)
  return order_.Mutable(index);
}
inline ::ProtoOrder::OrderCPP* OrderResp::add_order() {
  // @@protoc_insertion_point(field_add:ProtoOrder.OrderResp.order)
  return order_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ProtoOrder::OrderCPP >&
OrderResp::order() const {
  // @@protoc_insertion_point(field_list:ProtoOrder.OrderResp.order)
  return order_;
}
inline ::google::protobuf::RepeatedPtrField< ::ProtoOrder::OrderCPP >*
OrderResp::mutable_order() {
  // @@protoc_insertion_point(field_mutable_list:ProtoOrder.OrderResp.order)
  return &order_;
}

// -------------------------------------------------------------------

// TruckQueryReq

// required uint32 uid = 1;
inline bool TruckQueryReq::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TruckQueryReq::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TruckQueryReq::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TruckQueryReq::clear_uid() {
  uid_ = 0u;
  clear_has_uid();
}
inline ::google::protobuf::uint32 TruckQueryReq::uid() const {
  // @@protoc_insertion_point(field_get:ProtoOrder.TruckQueryReq.uid)
  return uid_;
}
inline void TruckQueryReq::set_uid(::google::protobuf::uint32 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:ProtoOrder.TruckQueryReq.uid)
}

// -------------------------------------------------------------------

// TruckResp

// required .ProtoOrder.TruckCPP truck = 1;
inline bool TruckResp::has_truck() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TruckResp::set_has_truck() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TruckResp::clear_has_truck() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TruckResp::clear_truck() {
  if (truck_ != NULL) truck_->::ProtoOrder::TruckCPP::Clear();
  clear_has_truck();
}
inline const ::ProtoOrder::TruckCPP& TruckResp::truck() const {
  // @@protoc_insertion_point(field_get:ProtoOrder.TruckResp.truck)
  return truck_ != NULL ? *truck_ : *default_instance_->truck_;
}
inline ::ProtoOrder::TruckCPP* TruckResp::mutable_truck() {
  set_has_truck();
  if (truck_ == NULL) truck_ = new ::ProtoOrder::TruckCPP;
  // @@protoc_insertion_point(field_mutable:ProtoOrder.TruckResp.truck)
  return truck_;
}
inline ::ProtoOrder::TruckCPP* TruckResp::release_truck() {
  clear_has_truck();
  ::ProtoOrder::TruckCPP* temp = truck_;
  truck_ = NULL;
  return temp;
}
inline void TruckResp::set_allocated_truck(::ProtoOrder::TruckCPP* truck) {
  delete truck_;
  truck_ = truck;
  if (truck) {
    set_has_truck();
  } else {
    clear_has_truck();
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoOrder.TruckResp.truck)
}

// -------------------------------------------------------------------

// StartOrderReq

// required uint32 slot = 1;
inline bool StartOrderReq::has_slot() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void StartOrderReq::set_has_slot() {
  _has_bits_[0] |= 0x00000001u;
}
inline void StartOrderReq::clear_has_slot() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void StartOrderReq::clear_slot() {
  slot_ = 0u;
  clear_has_slot();
}
inline ::google::protobuf::uint32 StartOrderReq::slot() const {
  // @@protoc_insertion_point(field_get:ProtoOrder.StartOrderReq.slot)
  return slot_;
}
inline void StartOrderReq::set_slot(::google::protobuf::uint32 value) {
  set_has_slot();
  slot_ = value;
  // @@protoc_insertion_point(field_set:ProtoOrder.StartOrderReq.slot)
}

// -------------------------------------------------------------------

// StartOrderResp

// required bool result = 1;
inline bool StartOrderResp::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void StartOrderResp::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void StartOrderResp::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void StartOrderResp::clear_result() {
  result_ = false;
  clear_has_result();
}
inline bool StartOrderResp::result() const {
  // @@protoc_insertion_point(field_get:ProtoOrder.StartOrderResp.result)
  return result_;
}
inline void StartOrderResp::set_result(bool value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:ProtoOrder.StartOrderResp.result)
}

// required .DataCommon.CommonItemsCPP commons = 2;
inline bool StartOrderResp::has_commons() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void StartOrderResp::set_has_commons() {
  _has_bits_[0] |= 0x00000002u;
}
inline void StartOrderResp::clear_has_commons() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void StartOrderResp::clear_commons() {
  if (commons_ != NULL) commons_->::DataCommon::CommonItemsCPP::Clear();
  clear_has_commons();
}
inline const ::DataCommon::CommonItemsCPP& StartOrderResp::commons() const {
  // @@protoc_insertion_point(field_get:ProtoOrder.StartOrderResp.commons)
  return commons_ != NULL ? *commons_ : *default_instance_->commons_;
}
inline ::DataCommon::CommonItemsCPP* StartOrderResp::mutable_commons() {
  set_has_commons();
  if (commons_ == NULL) commons_ = new ::DataCommon::CommonItemsCPP;
  // @@protoc_insertion_point(field_mutable:ProtoOrder.StartOrderResp.commons)
  return commons_;
}
inline ::DataCommon::CommonItemsCPP* StartOrderResp::release_commons() {
  clear_has_commons();
  ::DataCommon::CommonItemsCPP* temp = commons_;
  commons_ = NULL;
  return temp;
}
inline void StartOrderResp::set_allocated_commons(::DataCommon::CommonItemsCPP* commons) {
  delete commons_;
  commons_ = commons;
  if (commons) {
    set_has_commons();
  } else {
    clear_has_commons();
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoOrder.StartOrderResp.commons)
}

// required .ProtoOrder.OrderCPP order = 3;
inline bool StartOrderResp::has_order() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void StartOrderResp::set_has_order() {
  _has_bits_[0] |= 0x00000004u;
}
inline void StartOrderResp::clear_has_order() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void StartOrderResp::clear_order() {
  if (order_ != NULL) order_->::ProtoOrder::OrderCPP::Clear();
  clear_has_order();
}
inline const ::ProtoOrder::OrderCPP& StartOrderResp::order() const {
  // @@protoc_insertion_point(field_get:ProtoOrder.StartOrderResp.order)
  return order_ != NULL ? *order_ : *default_instance_->order_;
}
inline ::ProtoOrder::OrderCPP* StartOrderResp::mutable_order() {
  set_has_order();
  if (order_ == NULL) order_ = new ::ProtoOrder::OrderCPP;
  // @@protoc_insertion_point(field_mutable:ProtoOrder.StartOrderResp.order)
  return order_;
}
inline ::ProtoOrder::OrderCPP* StartOrderResp::release_order() {
  clear_has_order();
  ::ProtoOrder::OrderCPP* temp = order_;
  order_ = NULL;
  return temp;
}
inline void StartOrderResp::set_allocated_order(::ProtoOrder::OrderCPP* order) {
  delete order_;
  order_ = order;
  if (order) {
    set_has_order();
  } else {
    clear_has_order();
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoOrder.StartOrderResp.order)
}

// required .ProtoOrder.TruckCPP truck = 4;
inline bool StartOrderResp::has_truck() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void StartOrderResp::set_has_truck() {
  _has_bits_[0] |= 0x00000008u;
}
inline void StartOrderResp::clear_has_truck() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void StartOrderResp::clear_truck() {
  if (truck_ != NULL) truck_->::ProtoOrder::TruckCPP::Clear();
  clear_has_truck();
}
inline const ::ProtoOrder::TruckCPP& StartOrderResp::truck() const {
  // @@protoc_insertion_point(field_get:ProtoOrder.StartOrderResp.truck)
  return truck_ != NULL ? *truck_ : *default_instance_->truck_;
}
inline ::ProtoOrder::TruckCPP* StartOrderResp::mutable_truck() {
  set_has_truck();
  if (truck_ == NULL) truck_ = new ::ProtoOrder::TruckCPP;
  // @@protoc_insertion_point(field_mutable:ProtoOrder.StartOrderResp.truck)
  return truck_;
}
inline ::ProtoOrder::TruckCPP* StartOrderResp::release_truck() {
  clear_has_truck();
  ::ProtoOrder::TruckCPP* temp = truck_;
  truck_ = NULL;
  return temp;
}
inline void StartOrderResp::set_allocated_truck(::ProtoOrder::TruckCPP* truck) {
  delete truck_;
  truck_ = truck;
  if (truck) {
    set_has_truck();
  } else {
    clear_has_truck();
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoOrder.StartOrderResp.truck)
}

// optional .ProtoOrder.OrderADBonusCPP adBonus = 5;
inline bool StartOrderResp::has_adbonus() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void StartOrderResp::set_has_adbonus() {
  _has_bits_[0] |= 0x00000010u;
}
inline void StartOrderResp::clear_has_adbonus() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void StartOrderResp::clear_adbonus() {
  if (adbonus_ != NULL) adbonus_->::ProtoOrder::OrderADBonusCPP::Clear();
  clear_has_adbonus();
}
inline const ::ProtoOrder::OrderADBonusCPP& StartOrderResp::adbonus() const {
  // @@protoc_insertion_point(field_get:ProtoOrder.StartOrderResp.adBonus)
  return adbonus_ != NULL ? *adbonus_ : *default_instance_->adbonus_;
}
inline ::ProtoOrder::OrderADBonusCPP* StartOrderResp::mutable_adbonus() {
  set_has_adbonus();
  if (adbonus_ == NULL) adbonus_ = new ::ProtoOrder::OrderADBonusCPP;
  // @@protoc_insertion_point(field_mutable:ProtoOrder.StartOrderResp.adBonus)
  return adbonus_;
}
inline ::ProtoOrder::OrderADBonusCPP* StartOrderResp::release_adbonus() {
  clear_has_adbonus();
  ::ProtoOrder::OrderADBonusCPP* temp = adbonus_;
  adbonus_ = NULL;
  return temp;
}
inline void StartOrderResp::set_allocated_adbonus(::ProtoOrder::OrderADBonusCPP* adbonus) {
  delete adbonus_;
  adbonus_ = adbonus;
  if (adbonus) {
    set_has_adbonus();
  } else {
    clear_has_adbonus();
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoOrder.StartOrderResp.adBonus)
}

// optional .ProtoOrder.OrderDiamondBonusCPP diamondBounus = 6;
inline bool StartOrderResp::has_diamondbounus() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void StartOrderResp::set_has_diamondbounus() {
  _has_bits_[0] |= 0x00000020u;
}
inline void StartOrderResp::clear_has_diamondbounus() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void StartOrderResp::clear_diamondbounus() {
  if (diamondbounus_ != NULL) diamondbounus_->::ProtoOrder::OrderDiamondBonusCPP::Clear();
  clear_has_diamondbounus();
}
inline const ::ProtoOrder::OrderDiamondBonusCPP& StartOrderResp::diamondbounus() const {
  // @@protoc_insertion_point(field_get:ProtoOrder.StartOrderResp.diamondBounus)
  return diamondbounus_ != NULL ? *diamondbounus_ : *default_instance_->diamondbounus_;
}
inline ::ProtoOrder::OrderDiamondBonusCPP* StartOrderResp::mutable_diamondbounus() {
  set_has_diamondbounus();
  if (diamondbounus_ == NULL) diamondbounus_ = new ::ProtoOrder::OrderDiamondBonusCPP;
  // @@protoc_insertion_point(field_mutable:ProtoOrder.StartOrderResp.diamondBounus)
  return diamondbounus_;
}
inline ::ProtoOrder::OrderDiamondBonusCPP* StartOrderResp::release_diamondbounus() {
  clear_has_diamondbounus();
  ::ProtoOrder::OrderDiamondBonusCPP* temp = diamondbounus_;
  diamondbounus_ = NULL;
  return temp;
}
inline void StartOrderResp::set_allocated_diamondbounus(::ProtoOrder::OrderDiamondBonusCPP* diamondbounus) {
  delete diamondbounus_;
  diamondbounus_ = diamondbounus;
  if (diamondbounus) {
    set_has_diamondbounus();
  } else {
    clear_has_diamondbounus();
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoOrder.StartOrderResp.diamondBounus)
}

// optional .ProtoOrder.OrderVIPBonusCPP vipBonus = 7;
inline bool StartOrderResp::has_vipbonus() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void StartOrderResp::set_has_vipbonus() {
  _has_bits_[0] |= 0x00000040u;
}
inline void StartOrderResp::clear_has_vipbonus() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void StartOrderResp::clear_vipbonus() {
  if (vipbonus_ != NULL) vipbonus_->::ProtoOrder::OrderVIPBonusCPP::Clear();
  clear_has_vipbonus();
}
inline const ::ProtoOrder::OrderVIPBonusCPP& StartOrderResp::vipbonus() const {
  // @@protoc_insertion_point(field_get:ProtoOrder.StartOrderResp.vipBonus)
  return vipbonus_ != NULL ? *vipbonus_ : *default_instance_->vipbonus_;
}
inline ::ProtoOrder::OrderVIPBonusCPP* StartOrderResp::mutable_vipbonus() {
  set_has_vipbonus();
  if (vipbonus_ == NULL) vipbonus_ = new ::ProtoOrder::OrderVIPBonusCPP;
  // @@protoc_insertion_point(field_mutable:ProtoOrder.StartOrderResp.vipBonus)
  return vipbonus_;
}
inline ::ProtoOrder::OrderVIPBonusCPP* StartOrderResp::release_vipbonus() {
  clear_has_vipbonus();
  ::ProtoOrder::OrderVIPBonusCPP* temp = vipbonus_;
  vipbonus_ = NULL;
  return temp;
}
inline void StartOrderResp::set_allocated_vipbonus(::ProtoOrder::OrderVIPBonusCPP* vipbonus) {
  delete vipbonus_;
  vipbonus_ = vipbonus;
  if (vipbonus) {
    set_has_vipbonus();
  } else {
    clear_has_vipbonus();
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoOrder.StartOrderResp.vipBonus)
}

// -------------------------------------------------------------------

// DeleteOrderReq

// required uint32 slot = 1;
inline bool DeleteOrderReq::has_slot() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DeleteOrderReq::set_has_slot() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DeleteOrderReq::clear_has_slot() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DeleteOrderReq::clear_slot() {
  slot_ = 0u;
  clear_has_slot();
}
inline ::google::protobuf::uint32 DeleteOrderReq::slot() const {
  // @@protoc_insertion_point(field_get:ProtoOrder.DeleteOrderReq.slot)
  return slot_;
}
inline void DeleteOrderReq::set_slot(::google::protobuf::uint32 value) {
  set_has_slot();
  slot_ = value;
  // @@protoc_insertion_point(field_set:ProtoOrder.DeleteOrderReq.slot)
}

// -------------------------------------------------------------------

// DeleteOrderResp

// required bool result = 1;
inline bool DeleteOrderResp::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DeleteOrderResp::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DeleteOrderResp::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DeleteOrderResp::clear_result() {
  result_ = false;
  clear_has_result();
}
inline bool DeleteOrderResp::result() const {
  // @@protoc_insertion_point(field_get:ProtoOrder.DeleteOrderResp.result)
  return result_;
}
inline void DeleteOrderResp::set_result(bool value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:ProtoOrder.DeleteOrderResp.result)
}

// required .ProtoOrder.OrderCPP order = 2;
inline bool DeleteOrderResp::has_order() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DeleteOrderResp::set_has_order() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DeleteOrderResp::clear_has_order() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DeleteOrderResp::clear_order() {
  if (order_ != NULL) order_->::ProtoOrder::OrderCPP::Clear();
  clear_has_order();
}
inline const ::ProtoOrder::OrderCPP& DeleteOrderResp::order() const {
  // @@protoc_insertion_point(field_get:ProtoOrder.DeleteOrderResp.order)
  return order_ != NULL ? *order_ : *default_instance_->order_;
}
inline ::ProtoOrder::OrderCPP* DeleteOrderResp::mutable_order() {
  set_has_order();
  if (order_ == NULL) order_ = new ::ProtoOrder::OrderCPP;
  // @@protoc_insertion_point(field_mutable:ProtoOrder.DeleteOrderResp.order)
  return order_;
}
inline ::ProtoOrder::OrderCPP* DeleteOrderResp::release_order() {
  clear_has_order();
  ::ProtoOrder::OrderCPP* temp = order_;
  order_ = NULL;
  return temp;
}
inline void DeleteOrderResp::set_allocated_order(::ProtoOrder::OrderCPP* order) {
  delete order_;
  order_ = order;
  if (order) {
    set_has_order();
  } else {
    clear_has_order();
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoOrder.DeleteOrderResp.order)
}

// -------------------------------------------------------------------

// RewardOrderReq

// required uint32 uid = 1;
inline bool RewardOrderReq::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RewardOrderReq::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RewardOrderReq::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RewardOrderReq::clear_uid() {
  uid_ = 0u;
  clear_has_uid();
}
inline ::google::protobuf::uint32 RewardOrderReq::uid() const {
  // @@protoc_insertion_point(field_get:ProtoOrder.RewardOrderReq.uid)
  return uid_;
}
inline void RewardOrderReq::set_uid(::google::protobuf::uint32 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:ProtoOrder.RewardOrderReq.uid)
}

// -------------------------------------------------------------------

// RewardOrderResp

// required bool result = 1;
inline bool RewardOrderResp::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RewardOrderResp::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RewardOrderResp::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RewardOrderResp::clear_result() {
  result_ = false;
  clear_has_result();
}
inline bool RewardOrderResp::result() const {
  // @@protoc_insertion_point(field_get:ProtoOrder.RewardOrderResp.result)
  return result_;
}
inline void RewardOrderResp::set_result(bool value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:ProtoOrder.RewardOrderResp.result)
}

// required .DataCommon.CommonItemsCPP commons = 2;
inline bool RewardOrderResp::has_commons() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RewardOrderResp::set_has_commons() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RewardOrderResp::clear_has_commons() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RewardOrderResp::clear_commons() {
  if (commons_ != NULL) commons_->::DataCommon::CommonItemsCPP::Clear();
  clear_has_commons();
}
inline const ::DataCommon::CommonItemsCPP& RewardOrderResp::commons() const {
  // @@protoc_insertion_point(field_get:ProtoOrder.RewardOrderResp.commons)
  return commons_ != NULL ? *commons_ : *default_instance_->commons_;
}
inline ::DataCommon::CommonItemsCPP* RewardOrderResp::mutable_commons() {
  set_has_commons();
  if (commons_ == NULL) commons_ = new ::DataCommon::CommonItemsCPP;
  // @@protoc_insertion_point(field_mutable:ProtoOrder.RewardOrderResp.commons)
  return commons_;
}
inline ::DataCommon::CommonItemsCPP* RewardOrderResp::release_commons() {
  clear_has_commons();
  ::DataCommon::CommonItemsCPP* temp = commons_;
  commons_ = NULL;
  return temp;
}
inline void RewardOrderResp::set_allocated_commons(::DataCommon::CommonItemsCPP* commons) {
  delete commons_;
  commons_ = commons;
  if (commons) {
    set_has_commons();
  } else {
    clear_has_commons();
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoOrder.RewardOrderResp.commons)
}

// required .ProtoOrder.TruckCPP truck = 3;
inline bool RewardOrderResp::has_truck() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RewardOrderResp::set_has_truck() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RewardOrderResp::clear_has_truck() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RewardOrderResp::clear_truck() {
  if (truck_ != NULL) truck_->::ProtoOrder::TruckCPP::Clear();
  clear_has_truck();
}
inline const ::ProtoOrder::TruckCPP& RewardOrderResp::truck() const {
  // @@protoc_insertion_point(field_get:ProtoOrder.RewardOrderResp.truck)
  return truck_ != NULL ? *truck_ : *default_instance_->truck_;
}
inline ::ProtoOrder::TruckCPP* RewardOrderResp::mutable_truck() {
  set_has_truck();
  if (truck_ == NULL) truck_ = new ::ProtoOrder::TruckCPP;
  // @@protoc_insertion_point(field_mutable:ProtoOrder.RewardOrderResp.truck)
  return truck_;
}
inline ::ProtoOrder::TruckCPP* RewardOrderResp::release_truck() {
  clear_has_truck();
  ::ProtoOrder::TruckCPP* temp = truck_;
  truck_ = NULL;
  return temp;
}
inline void RewardOrderResp::set_allocated_truck(::ProtoOrder::TruckCPP* truck) {
  delete truck_;
  truck_ = truck;
  if (truck) {
    set_has_truck();
  } else {
    clear_has_truck();
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoOrder.RewardOrderResp.truck)
}

// -------------------------------------------------------------------

// OrderADBonusCPP

// required uint32 viewedAdCnt = 1;
inline bool OrderADBonusCPP::has_viewedadcnt() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OrderADBonusCPP::set_has_viewedadcnt() {
  _has_bits_[0] |= 0x00000001u;
}
inline void OrderADBonusCPP::clear_has_viewedadcnt() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void OrderADBonusCPP::clear_viewedadcnt() {
  viewedadcnt_ = 0u;
  clear_has_viewedadcnt();
}
inline ::google::protobuf::uint32 OrderADBonusCPP::viewedadcnt() const {
  // @@protoc_insertion_point(field_get:ProtoOrder.OrderADBonusCPP.viewedAdCnt)
  return viewedadcnt_;
}
inline void OrderADBonusCPP::set_viewedadcnt(::google::protobuf::uint32 value) {
  set_has_viewedadcnt();
  viewedadcnt_ = value;
  // @@protoc_insertion_point(field_set:ProtoOrder.OrderADBonusCPP.viewedAdCnt)
}

// required uint32 remianAdBonusCnt = 2;
inline bool OrderADBonusCPP::has_remianadbonuscnt() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void OrderADBonusCPP::set_has_remianadbonuscnt() {
  _has_bits_[0] |= 0x00000002u;
}
inline void OrderADBonusCPP::clear_has_remianadbonuscnt() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void OrderADBonusCPP::clear_remianadbonuscnt() {
  remianadbonuscnt_ = 0u;
  clear_has_remianadbonuscnt();
}
inline ::google::protobuf::uint32 OrderADBonusCPP::remianadbonuscnt() const {
  // @@protoc_insertion_point(field_get:ProtoOrder.OrderADBonusCPP.remianAdBonusCnt)
  return remianadbonuscnt_;
}
inline void OrderADBonusCPP::set_remianadbonuscnt(::google::protobuf::uint32 value) {
  set_has_remianadbonuscnt();
  remianadbonuscnt_ = value;
  // @@protoc_insertion_point(field_set:ProtoOrder.OrderADBonusCPP.remianAdBonusCnt)
}

// -------------------------------------------------------------------

// OrderDiamondBonusCPP

// required uint32 remainDiamondBonusCnt = 1;
inline bool OrderDiamondBonusCPP::has_remaindiamondbonuscnt() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OrderDiamondBonusCPP::set_has_remaindiamondbonuscnt() {
  _has_bits_[0] |= 0x00000001u;
}
inline void OrderDiamondBonusCPP::clear_has_remaindiamondbonuscnt() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void OrderDiamondBonusCPP::clear_remaindiamondbonuscnt() {
  remaindiamondbonuscnt_ = 0u;
  clear_has_remaindiamondbonuscnt();
}
inline ::google::protobuf::uint32 OrderDiamondBonusCPP::remaindiamondbonuscnt() const {
  // @@protoc_insertion_point(field_get:ProtoOrder.OrderDiamondBonusCPP.remainDiamondBonusCnt)
  return remaindiamondbonuscnt_;
}
inline void OrderDiamondBonusCPP::set_remaindiamondbonuscnt(::google::protobuf::uint32 value) {
  set_has_remaindiamondbonuscnt();
  remaindiamondbonuscnt_ = value;
  // @@protoc_insertion_point(field_set:ProtoOrder.OrderDiamondBonusCPP.remainDiamondBonusCnt)
}

// required uint32 diamondBonusEndTs = 2;
inline bool OrderDiamondBonusCPP::has_diamondbonusendts() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void OrderDiamondBonusCPP::set_has_diamondbonusendts() {
  _has_bits_[0] |= 0x00000002u;
}
inline void OrderDiamondBonusCPP::clear_has_diamondbonusendts() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void OrderDiamondBonusCPP::clear_diamondbonusendts() {
  diamondbonusendts_ = 0u;
  clear_has_diamondbonusendts();
}
inline ::google::protobuf::uint32 OrderDiamondBonusCPP::diamondbonusendts() const {
  // @@protoc_insertion_point(field_get:ProtoOrder.OrderDiamondBonusCPP.diamondBonusEndTs)
  return diamondbonusendts_;
}
inline void OrderDiamondBonusCPP::set_diamondbonusendts(::google::protobuf::uint32 value) {
  set_has_diamondbonusendts();
  diamondbonusendts_ = value;
  // @@protoc_insertion_point(field_set:ProtoOrder.OrderDiamondBonusCPP.diamondBonusEndTs)
}

// -------------------------------------------------------------------

// OrderVIPBonusCPP

// required uint32 remainVipBonusCnt = 1;
inline bool OrderVIPBonusCPP::has_remainvipbonuscnt() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OrderVIPBonusCPP::set_has_remainvipbonuscnt() {
  _has_bits_[0] |= 0x00000001u;
}
inline void OrderVIPBonusCPP::clear_has_remainvipbonuscnt() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void OrderVIPBonusCPP::clear_remainvipbonuscnt() {
  remainvipbonuscnt_ = 0u;
  clear_has_remainvipbonuscnt();
}
inline ::google::protobuf::uint32 OrderVIPBonusCPP::remainvipbonuscnt() const {
  // @@protoc_insertion_point(field_get:ProtoOrder.OrderVIPBonusCPP.remainVipBonusCnt)
  return remainvipbonuscnt_;
}
inline void OrderVIPBonusCPP::set_remainvipbonuscnt(::google::protobuf::uint32 value) {
  set_has_remainvipbonuscnt();
  remainvipbonuscnt_ = value;
  // @@protoc_insertion_point(field_set:ProtoOrder.OrderVIPBonusCPP.remainVipBonusCnt)
}

// -------------------------------------------------------------------

// GetOrderBonusInfoReq

// -------------------------------------------------------------------

// GetOrderBonusInfoResp

// required .ProtoOrder.OrderADBonusCPP adBonus = 1;
inline bool GetOrderBonusInfoResp::has_adbonus() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetOrderBonusInfoResp::set_has_adbonus() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetOrderBonusInfoResp::clear_has_adbonus() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetOrderBonusInfoResp::clear_adbonus() {
  if (adbonus_ != NULL) adbonus_->::ProtoOrder::OrderADBonusCPP::Clear();
  clear_has_adbonus();
}
inline const ::ProtoOrder::OrderADBonusCPP& GetOrderBonusInfoResp::adbonus() const {
  // @@protoc_insertion_point(field_get:ProtoOrder.GetOrderBonusInfoResp.adBonus)
  return adbonus_ != NULL ? *adbonus_ : *default_instance_->adbonus_;
}
inline ::ProtoOrder::OrderADBonusCPP* GetOrderBonusInfoResp::mutable_adbonus() {
  set_has_adbonus();
  if (adbonus_ == NULL) adbonus_ = new ::ProtoOrder::OrderADBonusCPP;
  // @@protoc_insertion_point(field_mutable:ProtoOrder.GetOrderBonusInfoResp.adBonus)
  return adbonus_;
}
inline ::ProtoOrder::OrderADBonusCPP* GetOrderBonusInfoResp::release_adbonus() {
  clear_has_adbonus();
  ::ProtoOrder::OrderADBonusCPP* temp = adbonus_;
  adbonus_ = NULL;
  return temp;
}
inline void GetOrderBonusInfoResp::set_allocated_adbonus(::ProtoOrder::OrderADBonusCPP* adbonus) {
  delete adbonus_;
  adbonus_ = adbonus;
  if (adbonus) {
    set_has_adbonus();
  } else {
    clear_has_adbonus();
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoOrder.GetOrderBonusInfoResp.adBonus)
}

// required .ProtoOrder.OrderDiamondBonusCPP diamondBounus = 2;
inline bool GetOrderBonusInfoResp::has_diamondbounus() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetOrderBonusInfoResp::set_has_diamondbounus() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetOrderBonusInfoResp::clear_has_diamondbounus() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetOrderBonusInfoResp::clear_diamondbounus() {
  if (diamondbounus_ != NULL) diamondbounus_->::ProtoOrder::OrderDiamondBonusCPP::Clear();
  clear_has_diamondbounus();
}
inline const ::ProtoOrder::OrderDiamondBonusCPP& GetOrderBonusInfoResp::diamondbounus() const {
  // @@protoc_insertion_point(field_get:ProtoOrder.GetOrderBonusInfoResp.diamondBounus)
  return diamondbounus_ != NULL ? *diamondbounus_ : *default_instance_->diamondbounus_;
}
inline ::ProtoOrder::OrderDiamondBonusCPP* GetOrderBonusInfoResp::mutable_diamondbounus() {
  set_has_diamondbounus();
  if (diamondbounus_ == NULL) diamondbounus_ = new ::ProtoOrder::OrderDiamondBonusCPP;
  // @@protoc_insertion_point(field_mutable:ProtoOrder.GetOrderBonusInfoResp.diamondBounus)
  return diamondbounus_;
}
inline ::ProtoOrder::OrderDiamondBonusCPP* GetOrderBonusInfoResp::release_diamondbounus() {
  clear_has_diamondbounus();
  ::ProtoOrder::OrderDiamondBonusCPP* temp = diamondbounus_;
  diamondbounus_ = NULL;
  return temp;
}
inline void GetOrderBonusInfoResp::set_allocated_diamondbounus(::ProtoOrder::OrderDiamondBonusCPP* diamondbounus) {
  delete diamondbounus_;
  diamondbounus_ = diamondbounus;
  if (diamondbounus) {
    set_has_diamondbounus();
  } else {
    clear_has_diamondbounus();
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoOrder.GetOrderBonusInfoResp.diamondBounus)
}

// optional .ProtoOrder.OrderVIPBonusCPP vipBonus = 3;
inline bool GetOrderBonusInfoResp::has_vipbonus() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GetOrderBonusInfoResp::set_has_vipbonus() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GetOrderBonusInfoResp::clear_has_vipbonus() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GetOrderBonusInfoResp::clear_vipbonus() {
  if (vipbonus_ != NULL) vipbonus_->::ProtoOrder::OrderVIPBonusCPP::Clear();
  clear_has_vipbonus();
}
inline const ::ProtoOrder::OrderVIPBonusCPP& GetOrderBonusInfoResp::vipbonus() const {
  // @@protoc_insertion_point(field_get:ProtoOrder.GetOrderBonusInfoResp.vipBonus)
  return vipbonus_ != NULL ? *vipbonus_ : *default_instance_->vipbonus_;
}
inline ::ProtoOrder::OrderVIPBonusCPP* GetOrderBonusInfoResp::mutable_vipbonus() {
  set_has_vipbonus();
  if (vipbonus_ == NULL) vipbonus_ = new ::ProtoOrder::OrderVIPBonusCPP;
  // @@protoc_insertion_point(field_mutable:ProtoOrder.GetOrderBonusInfoResp.vipBonus)
  return vipbonus_;
}
inline ::ProtoOrder::OrderVIPBonusCPP* GetOrderBonusInfoResp::release_vipbonus() {
  clear_has_vipbonus();
  ::ProtoOrder::OrderVIPBonusCPP* temp = vipbonus_;
  vipbonus_ = NULL;
  return temp;
}
inline void GetOrderBonusInfoResp::set_allocated_vipbonus(::ProtoOrder::OrderVIPBonusCPP* vipbonus) {
  delete vipbonus_;
  vipbonus_ = vipbonus;
  if (vipbonus) {
    set_has_vipbonus();
  } else {
    clear_has_vipbonus();
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoOrder.GetOrderBonusInfoResp.vipBonus)
}

// -------------------------------------------------------------------

// ViewAdReq

// -------------------------------------------------------------------

// ViewAdResp

// required .ProtoOrder.OrderADBonusCPP adBonus = 1;
inline bool ViewAdResp::has_adbonus() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ViewAdResp::set_has_adbonus() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ViewAdResp::clear_has_adbonus() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ViewAdResp::clear_adbonus() {
  if (adbonus_ != NULL) adbonus_->::ProtoOrder::OrderADBonusCPP::Clear();
  clear_has_adbonus();
}
inline const ::ProtoOrder::OrderADBonusCPP& ViewAdResp::adbonus() const {
  // @@protoc_insertion_point(field_get:ProtoOrder.ViewAdResp.adBonus)
  return adbonus_ != NULL ? *adbonus_ : *default_instance_->adbonus_;
}
inline ::ProtoOrder::OrderADBonusCPP* ViewAdResp::mutable_adbonus() {
  set_has_adbonus();
  if (adbonus_ == NULL) adbonus_ = new ::ProtoOrder::OrderADBonusCPP;
  // @@protoc_insertion_point(field_mutable:ProtoOrder.ViewAdResp.adBonus)
  return adbonus_;
}
inline ::ProtoOrder::OrderADBonusCPP* ViewAdResp::release_adbonus() {
  clear_has_adbonus();
  ::ProtoOrder::OrderADBonusCPP* temp = adbonus_;
  adbonus_ = NULL;
  return temp;
}
inline void ViewAdResp::set_allocated_adbonus(::ProtoOrder::OrderADBonusCPP* adbonus) {
  delete adbonus_;
  adbonus_ = adbonus;
  if (adbonus) {
    set_has_adbonus();
  } else {
    clear_has_adbonus();
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoOrder.ViewAdResp.adBonus)
}

// -------------------------------------------------------------------

// BuyOrderBonusReq

// -------------------------------------------------------------------

// BuyOrderBonusResp

// required .DataCommon.CommonItemsCPP commons = 1;
inline bool BuyOrderBonusResp::has_commons() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BuyOrderBonusResp::set_has_commons() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BuyOrderBonusResp::clear_has_commons() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BuyOrderBonusResp::clear_commons() {
  if (commons_ != NULL) commons_->::DataCommon::CommonItemsCPP::Clear();
  clear_has_commons();
}
inline const ::DataCommon::CommonItemsCPP& BuyOrderBonusResp::commons() const {
  // @@protoc_insertion_point(field_get:ProtoOrder.BuyOrderBonusResp.commons)
  return commons_ != NULL ? *commons_ : *default_instance_->commons_;
}
inline ::DataCommon::CommonItemsCPP* BuyOrderBonusResp::mutable_commons() {
  set_has_commons();
  if (commons_ == NULL) commons_ = new ::DataCommon::CommonItemsCPP;
  // @@protoc_insertion_point(field_mutable:ProtoOrder.BuyOrderBonusResp.commons)
  return commons_;
}
inline ::DataCommon::CommonItemsCPP* BuyOrderBonusResp::release_commons() {
  clear_has_commons();
  ::DataCommon::CommonItemsCPP* temp = commons_;
  commons_ = NULL;
  return temp;
}
inline void BuyOrderBonusResp::set_allocated_commons(::DataCommon::CommonItemsCPP* commons) {
  delete commons_;
  commons_ = commons;
  if (commons) {
    set_has_commons();
  } else {
    clear_has_commons();
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoOrder.BuyOrderBonusResp.commons)
}

// required .ProtoOrder.OrderDiamondBonusCPP diamondBounus = 2;
inline bool BuyOrderBonusResp::has_diamondbounus() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BuyOrderBonusResp::set_has_diamondbounus() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BuyOrderBonusResp::clear_has_diamondbounus() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BuyOrderBonusResp::clear_diamondbounus() {
  if (diamondbounus_ != NULL) diamondbounus_->::ProtoOrder::OrderDiamondBonusCPP::Clear();
  clear_has_diamondbounus();
}
inline const ::ProtoOrder::OrderDiamondBonusCPP& BuyOrderBonusResp::diamondbounus() const {
  // @@protoc_insertion_point(field_get:ProtoOrder.BuyOrderBonusResp.diamondBounus)
  return diamondbounus_ != NULL ? *diamondbounus_ : *default_instance_->diamondbounus_;
}
inline ::ProtoOrder::OrderDiamondBonusCPP* BuyOrderBonusResp::mutable_diamondbounus() {
  set_has_diamondbounus();
  if (diamondbounus_ == NULL) diamondbounus_ = new ::ProtoOrder::OrderDiamondBonusCPP;
  // @@protoc_insertion_point(field_mutable:ProtoOrder.BuyOrderBonusResp.diamondBounus)
  return diamondbounus_;
}
inline ::ProtoOrder::OrderDiamondBonusCPP* BuyOrderBonusResp::release_diamondbounus() {
  clear_has_diamondbounus();
  ::ProtoOrder::OrderDiamondBonusCPP* temp = diamondbounus_;
  diamondbounus_ = NULL;
  return temp;
}
inline void BuyOrderBonusResp::set_allocated_diamondbounus(::ProtoOrder::OrderDiamondBonusCPP* diamondbounus) {
  delete diamondbounus_;
  diamondbounus_ = diamondbounus;
  if (diamondbounus) {
    set_has_diamondbounus();
  } else {
    clear_has_diamondbounus();
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoOrder.BuyOrderBonusResp.diamondBounus)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace ProtoOrder

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_ProtoOrder_2eproto__INCLUDED
