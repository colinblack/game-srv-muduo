// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ProtoFriend.proto

#ifndef PROTOBUF_ProtoFriend_2eproto__INCLUDED
#define PROTOBUF_ProtoFriend_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace ProtoFriend {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_ProtoFriend_2eproto();
void protobuf_AssignDesc_ProtoFriend_2eproto();
void protobuf_ShutdownFile_ProtoFriend_2eproto();

class FolkCPP;
class ConcernFolkCPP;
class FansCPP;
class GetAllFriendsReq;
class GetAllFriendsResp;
class ConcernReq;
class ConcernResp;
class CSGetFriendInfoReq;
class CSGetFriendInfoResp;
class GetFriendHelpInfoReq;
class CSGetFriendHelpInfoReq;
class CSGetFriendHelpInfoResp;
class CSConcernReq;
class CSConcernResp;
class FansPushReq;
class CancelConcernReq;
class CancelConcernResp;
class CSCancelConcernReq;
class CSCancelConcernResp;
class StripFansPushReq;
class RemoveFansReq;
class RemoveFansResp;

// ===================================================================

class FolkCPP : public ::google::protobuf::Message {
 public:
  FolkCPP();
  virtual ~FolkCPP();

  FolkCPP(const FolkCPP& from);

  inline FolkCPP& operator=(const FolkCPP& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FolkCPP& default_instance();

  void Swap(FolkCPP* other);

  // implements Message ----------------------------------------------

  FolkCPP* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FolkCPP& from);
  void MergeFrom(const FolkCPP& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 folkUid = 1;
  inline bool has_folkuid() const;
  inline void clear_folkuid();
  static const int kFolkUidFieldNumber = 1;
  inline ::google::protobuf::uint32 folkuid() const;
  inline void set_folkuid(::google::protobuf::uint32 value);

  // optional uint32 level = 2;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 2;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);

  // optional bytes fig = 3;
  inline bool has_fig() const;
  inline void clear_fig();
  static const int kFigFieldNumber = 3;
  inline const ::std::string& fig() const;
  inline void set_fig(const ::std::string& value);
  inline void set_fig(const char* value);
  inline void set_fig(const void* value, size_t size);
  inline ::std::string* mutable_fig();
  inline ::std::string* release_fig();
  inline void set_allocated_fig(::std::string* fig);

  // optional bytes name = 4;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 4;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const void* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // optional bool needhelp = 5;
  inline bool has_needhelp() const;
  inline void clear_needhelp();
  static const int kNeedhelpFieldNumber = 5;
  inline bool needhelp() const;
  inline void set_needhelp(bool value);

  // optional uint32 blueInfo = 6;
  inline bool has_blueinfo() const;
  inline void clear_blueinfo();
  static const int kBlueInfoFieldNumber = 6;
  inline ::google::protobuf::uint32 blueinfo() const;
  inline void set_blueinfo(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoFriend.FolkCPP)
 private:
  inline void set_has_folkuid();
  inline void clear_has_folkuid();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_fig();
  inline void clear_has_fig();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_needhelp();
  inline void clear_has_needhelp();
  inline void set_has_blueinfo();
  inline void clear_has_blueinfo();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 folkuid_;
  ::google::protobuf::uint32 level_;
  ::std::string* fig_;
  ::std::string* name_;
  bool needhelp_;
  ::google::protobuf::uint32 blueinfo_;
  friend void  protobuf_AddDesc_ProtoFriend_2eproto();
  friend void protobuf_AssignDesc_ProtoFriend_2eproto();
  friend void protobuf_ShutdownFile_ProtoFriend_2eproto();

  void InitAsDefaultInstance();
  static FolkCPP* default_instance_;
};
// -------------------------------------------------------------------

class ConcernFolkCPP : public ::google::protobuf::Message {
 public:
  ConcernFolkCPP();
  virtual ~ConcernFolkCPP();

  ConcernFolkCPP(const ConcernFolkCPP& from);

  inline ConcernFolkCPP& operator=(const ConcernFolkCPP& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ConcernFolkCPP& default_instance();

  void Swap(ConcernFolkCPP* other);

  // implements Message ----------------------------------------------

  ConcernFolkCPP* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ConcernFolkCPP& from);
  void MergeFrom(const ConcernFolkCPP& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .ProtoFriend.FolkCPP concernfolk = 1;
  inline bool has_concernfolk() const;
  inline void clear_concernfolk();
  static const int kConcernfolkFieldNumber = 1;
  inline const ::ProtoFriend::FolkCPP& concernfolk() const;
  inline ::ProtoFriend::FolkCPP* mutable_concernfolk();
  inline ::ProtoFriend::FolkCPP* release_concernfolk();
  inline void set_allocated_concernfolk(::ProtoFriend::FolkCPP* concernfolk);

  // @@protoc_insertion_point(class_scope:ProtoFriend.ConcernFolkCPP)
 private:
  inline void set_has_concernfolk();
  inline void clear_has_concernfolk();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::ProtoFriend::FolkCPP* concernfolk_;
  friend void  protobuf_AddDesc_ProtoFriend_2eproto();
  friend void protobuf_AssignDesc_ProtoFriend_2eproto();
  friend void protobuf_ShutdownFile_ProtoFriend_2eproto();

  void InitAsDefaultInstance();
  static ConcernFolkCPP* default_instance_;
};
// -------------------------------------------------------------------

class FansCPP : public ::google::protobuf::Message {
 public:
  FansCPP();
  virtual ~FansCPP();

  FansCPP(const FansCPP& from);

  inline FansCPP& operator=(const FansCPP& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FansCPP& default_instance();

  void Swap(FansCPP* other);

  // implements Message ----------------------------------------------

  FansCPP* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FansCPP& from);
  void MergeFrom(const FansCPP& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .ProtoFriend.FolkCPP fan = 1;
  inline bool has_fan() const;
  inline void clear_fan();
  static const int kFanFieldNumber = 1;
  inline const ::ProtoFriend::FolkCPP& fan() const;
  inline ::ProtoFriend::FolkCPP* mutable_fan();
  inline ::ProtoFriend::FolkCPP* release_fan();
  inline void set_allocated_fan(::ProtoFriend::FolkCPP* fan);

  // @@protoc_insertion_point(class_scope:ProtoFriend.FansCPP)
 private:
  inline void set_has_fan();
  inline void clear_has_fan();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::ProtoFriend::FolkCPP* fan_;
  friend void  protobuf_AddDesc_ProtoFriend_2eproto();
  friend void protobuf_AssignDesc_ProtoFriend_2eproto();
  friend void protobuf_ShutdownFile_ProtoFriend_2eproto();

  void InitAsDefaultInstance();
  static FansCPP* default_instance_;
};
// -------------------------------------------------------------------

class GetAllFriendsReq : public ::google::protobuf::Message {
 public:
  GetAllFriendsReq();
  virtual ~GetAllFriendsReq();

  GetAllFriendsReq(const GetAllFriendsReq& from);

  inline GetAllFriendsReq& operator=(const GetAllFriendsReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetAllFriendsReq& default_instance();

  void Swap(GetAllFriendsReq* other);

  // implements Message ----------------------------------------------

  GetAllFriendsReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetAllFriendsReq& from);
  void MergeFrom(const GetAllFriendsReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:ProtoFriend.GetAllFriendsReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_ProtoFriend_2eproto();
  friend void protobuf_AssignDesc_ProtoFriend_2eproto();
  friend void protobuf_ShutdownFile_ProtoFriend_2eproto();

  void InitAsDefaultInstance();
  static GetAllFriendsReq* default_instance_;
};
// -------------------------------------------------------------------

class GetAllFriendsResp : public ::google::protobuf::Message {
 public:
  GetAllFriendsResp();
  virtual ~GetAllFriendsResp();

  GetAllFriendsResp(const GetAllFriendsResp& from);

  inline GetAllFriendsResp& operator=(const GetAllFriendsResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetAllFriendsResp& default_instance();

  void Swap(GetAllFriendsResp* other);

  // implements Message ----------------------------------------------

  GetAllFriendsResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetAllFriendsResp& from);
  void MergeFrom(const GetAllFriendsResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .ProtoFriend.ConcernFolkCPP concerns = 1;
  inline int concerns_size() const;
  inline void clear_concerns();
  static const int kConcernsFieldNumber = 1;
  inline const ::ProtoFriend::ConcernFolkCPP& concerns(int index) const;
  inline ::ProtoFriend::ConcernFolkCPP* mutable_concerns(int index);
  inline ::ProtoFriend::ConcernFolkCPP* add_concerns();
  inline const ::google::protobuf::RepeatedPtrField< ::ProtoFriend::ConcernFolkCPP >&
      concerns() const;
  inline ::google::protobuf::RepeatedPtrField< ::ProtoFriend::ConcernFolkCPP >*
      mutable_concerns();

  // repeated .ProtoFriend.FansCPP fans = 2;
  inline int fans_size() const;
  inline void clear_fans();
  static const int kFansFieldNumber = 2;
  inline const ::ProtoFriend::FansCPP& fans(int index) const;
  inline ::ProtoFriend::FansCPP* mutable_fans(int index);
  inline ::ProtoFriend::FansCPP* add_fans();
  inline const ::google::protobuf::RepeatedPtrField< ::ProtoFriend::FansCPP >&
      fans() const;
  inline ::google::protobuf::RepeatedPtrField< ::ProtoFriend::FansCPP >*
      mutable_fans();

  // repeated .ProtoFriend.FolkCPP helpers = 3;
  inline int helpers_size() const;
  inline void clear_helpers();
  static const int kHelpersFieldNumber = 3;
  inline const ::ProtoFriend::FolkCPP& helpers(int index) const;
  inline ::ProtoFriend::FolkCPP* mutable_helpers(int index);
  inline ::ProtoFriend::FolkCPP* add_helpers();
  inline const ::google::protobuf::RepeatedPtrField< ::ProtoFriend::FolkCPP >&
      helpers() const;
  inline ::google::protobuf::RepeatedPtrField< ::ProtoFriend::FolkCPP >*
      mutable_helpers();

  // @@protoc_insertion_point(class_scope:ProtoFriend.GetAllFriendsResp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::ProtoFriend::ConcernFolkCPP > concerns_;
  ::google::protobuf::RepeatedPtrField< ::ProtoFriend::FansCPP > fans_;
  ::google::protobuf::RepeatedPtrField< ::ProtoFriend::FolkCPP > helpers_;
  friend void  protobuf_AddDesc_ProtoFriend_2eproto();
  friend void protobuf_AssignDesc_ProtoFriend_2eproto();
  friend void protobuf_ShutdownFile_ProtoFriend_2eproto();

  void InitAsDefaultInstance();
  static GetAllFriendsResp* default_instance_;
};
// -------------------------------------------------------------------

class ConcernReq : public ::google::protobuf::Message {
 public:
  ConcernReq();
  virtual ~ConcernReq();

  ConcernReq(const ConcernReq& from);

  inline ConcernReq& operator=(const ConcernReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ConcernReq& default_instance();

  void Swap(ConcernReq* other);

  // implements Message ----------------------------------------------

  ConcernReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ConcernReq& from);
  void MergeFrom(const ConcernReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 othuid = 1;
  inline bool has_othuid() const;
  inline void clear_othuid();
  static const int kOthuidFieldNumber = 1;
  inline ::google::protobuf::uint32 othuid() const;
  inline void set_othuid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoFriend.ConcernReq)
 private:
  inline void set_has_othuid();
  inline void clear_has_othuid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 othuid_;
  friend void  protobuf_AddDesc_ProtoFriend_2eproto();
  friend void protobuf_AssignDesc_ProtoFriend_2eproto();
  friend void protobuf_ShutdownFile_ProtoFriend_2eproto();

  void InitAsDefaultInstance();
  static ConcernReq* default_instance_;
};
// -------------------------------------------------------------------

class ConcernResp : public ::google::protobuf::Message {
 public:
  ConcernResp();
  virtual ~ConcernResp();

  ConcernResp(const ConcernResp& from);

  inline ConcernResp& operator=(const ConcernResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ConcernResp& default_instance();

  void Swap(ConcernResp* other);

  // implements Message ----------------------------------------------

  ConcernResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ConcernResp& from);
  void MergeFrom(const ConcernResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .ProtoFriend.ConcernFolkCPP concern = 1;
  inline bool has_concern() const;
  inline void clear_concern();
  static const int kConcernFieldNumber = 1;
  inline const ::ProtoFriend::ConcernFolkCPP& concern() const;
  inline ::ProtoFriend::ConcernFolkCPP* mutable_concern();
  inline ::ProtoFriend::ConcernFolkCPP* release_concern();
  inline void set_allocated_concern(::ProtoFriend::ConcernFolkCPP* concern);

  // @@protoc_insertion_point(class_scope:ProtoFriend.ConcernResp)
 private:
  inline void set_has_concern();
  inline void clear_has_concern();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::ProtoFriend::ConcernFolkCPP* concern_;
  friend void  protobuf_AddDesc_ProtoFriend_2eproto();
  friend void protobuf_AssignDesc_ProtoFriend_2eproto();
  friend void protobuf_ShutdownFile_ProtoFriend_2eproto();

  void InitAsDefaultInstance();
  static ConcernResp* default_instance_;
};
// -------------------------------------------------------------------

class CSGetFriendInfoReq : public ::google::protobuf::Message {
 public:
  CSGetFriendInfoReq();
  virtual ~CSGetFriendInfoReq();

  CSGetFriendInfoReq(const CSGetFriendInfoReq& from);

  inline CSGetFriendInfoReq& operator=(const CSGetFriendInfoReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSGetFriendInfoReq& default_instance();

  void Swap(CSGetFriendInfoReq* other);

  // implements Message ----------------------------------------------

  CSGetFriendInfoReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSGetFriendInfoReq& from);
  void MergeFrom(const CSGetFriendInfoReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);

  // required uint32 myuid = 2;
  inline bool has_myuid() const;
  inline void clear_myuid();
  static const int kMyuidFieldNumber = 2;
  inline ::google::protobuf::uint32 myuid() const;
  inline void set_myuid(::google::protobuf::uint32 value);

  // repeated uint32 othuid = 3;
  inline int othuid_size() const;
  inline void clear_othuid();
  static const int kOthuidFieldNumber = 3;
  inline ::google::protobuf::uint32 othuid(int index) const;
  inline void set_othuid(int index, ::google::protobuf::uint32 value);
  inline void add_othuid(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      othuid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_othuid();

  // @@protoc_insertion_point(class_scope:ProtoFriend.CSGetFriendInfoReq)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_myuid();
  inline void clear_has_myuid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 type_;
  ::google::protobuf::uint32 myuid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > othuid_;
  friend void  protobuf_AddDesc_ProtoFriend_2eproto();
  friend void protobuf_AssignDesc_ProtoFriend_2eproto();
  friend void protobuf_ShutdownFile_ProtoFriend_2eproto();

  void InitAsDefaultInstance();
  static CSGetFriendInfoReq* default_instance_;
};
// -------------------------------------------------------------------

class CSGetFriendInfoResp : public ::google::protobuf::Message {
 public:
  CSGetFriendInfoResp();
  virtual ~CSGetFriendInfoResp();

  CSGetFriendInfoResp(const CSGetFriendInfoResp& from);

  inline CSGetFriendInfoResp& operator=(const CSGetFriendInfoResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSGetFriendInfoResp& default_instance();

  void Swap(CSGetFriendInfoResp* other);

  // implements Message ----------------------------------------------

  CSGetFriendInfoResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSGetFriendInfoResp& from);
  void MergeFrom(const CSGetFriendInfoResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);

  // required uint32 myuid = 2;
  inline bool has_myuid() const;
  inline void clear_myuid();
  static const int kMyuidFieldNumber = 2;
  inline ::google::protobuf::uint32 myuid() const;
  inline void set_myuid(::google::protobuf::uint32 value);

  // repeated .ProtoFriend.FolkCPP folk = 3;
  inline int folk_size() const;
  inline void clear_folk();
  static const int kFolkFieldNumber = 3;
  inline const ::ProtoFriend::FolkCPP& folk(int index) const;
  inline ::ProtoFriend::FolkCPP* mutable_folk(int index);
  inline ::ProtoFriend::FolkCPP* add_folk();
  inline const ::google::protobuf::RepeatedPtrField< ::ProtoFriend::FolkCPP >&
      folk() const;
  inline ::google::protobuf::RepeatedPtrField< ::ProtoFriend::FolkCPP >*
      mutable_folk();

  // @@protoc_insertion_point(class_scope:ProtoFriend.CSGetFriendInfoResp)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_myuid();
  inline void clear_has_myuid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 type_;
  ::google::protobuf::uint32 myuid_;
  ::google::protobuf::RepeatedPtrField< ::ProtoFriend::FolkCPP > folk_;
  friend void  protobuf_AddDesc_ProtoFriend_2eproto();
  friend void protobuf_AssignDesc_ProtoFriend_2eproto();
  friend void protobuf_ShutdownFile_ProtoFriend_2eproto();

  void InitAsDefaultInstance();
  static CSGetFriendInfoResp* default_instance_;
};
// -------------------------------------------------------------------

class GetFriendHelpInfoReq : public ::google::protobuf::Message {
 public:
  GetFriendHelpInfoReq();
  virtual ~GetFriendHelpInfoReq();

  GetFriendHelpInfoReq(const GetFriendHelpInfoReq& from);

  inline GetFriendHelpInfoReq& operator=(const GetFriendHelpInfoReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetFriendHelpInfoReq& default_instance();

  void Swap(GetFriendHelpInfoReq* other);

  // implements Message ----------------------------------------------

  GetFriendHelpInfoReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetFriendHelpInfoReq& from);
  void MergeFrom(const GetFriendHelpInfoReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:ProtoFriend.GetFriendHelpInfoReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_ProtoFriend_2eproto();
  friend void protobuf_AssignDesc_ProtoFriend_2eproto();
  friend void protobuf_ShutdownFile_ProtoFriend_2eproto();

  void InitAsDefaultInstance();
  static GetFriendHelpInfoReq* default_instance_;
};
// -------------------------------------------------------------------

class CSGetFriendHelpInfoReq : public ::google::protobuf::Message {
 public:
  CSGetFriendHelpInfoReq();
  virtual ~CSGetFriendHelpInfoReq();

  CSGetFriendHelpInfoReq(const CSGetFriendHelpInfoReq& from);

  inline CSGetFriendHelpInfoReq& operator=(const CSGetFriendHelpInfoReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSGetFriendHelpInfoReq& default_instance();

  void Swap(CSGetFriendHelpInfoReq* other);

  // implements Message ----------------------------------------------

  CSGetFriendHelpInfoReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSGetFriendHelpInfoReq& from);
  void MergeFrom(const CSGetFriendHelpInfoReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 myuid = 1;
  inline bool has_myuid() const;
  inline void clear_myuid();
  static const int kMyuidFieldNumber = 1;
  inline ::google::protobuf::uint32 myuid() const;
  inline void set_myuid(::google::protobuf::uint32 value);

  // repeated uint32 othuid = 2;
  inline int othuid_size() const;
  inline void clear_othuid();
  static const int kOthuidFieldNumber = 2;
  inline ::google::protobuf::uint32 othuid(int index) const;
  inline void set_othuid(int index, ::google::protobuf::uint32 value);
  inline void add_othuid(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      othuid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_othuid();

  // @@protoc_insertion_point(class_scope:ProtoFriend.CSGetFriendHelpInfoReq)
 private:
  inline void set_has_myuid();
  inline void clear_has_myuid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > othuid_;
  ::google::protobuf::uint32 myuid_;
  friend void  protobuf_AddDesc_ProtoFriend_2eproto();
  friend void protobuf_AssignDesc_ProtoFriend_2eproto();
  friend void protobuf_ShutdownFile_ProtoFriend_2eproto();

  void InitAsDefaultInstance();
  static CSGetFriendHelpInfoReq* default_instance_;
};
// -------------------------------------------------------------------

class CSGetFriendHelpInfoResp : public ::google::protobuf::Message {
 public:
  CSGetFriendHelpInfoResp();
  virtual ~CSGetFriendHelpInfoResp();

  CSGetFriendHelpInfoResp(const CSGetFriendHelpInfoResp& from);

  inline CSGetFriendHelpInfoResp& operator=(const CSGetFriendHelpInfoResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSGetFriendHelpInfoResp& default_instance();

  void Swap(CSGetFriendHelpInfoResp* other);

  // implements Message ----------------------------------------------

  CSGetFriendHelpInfoResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSGetFriendHelpInfoResp& from);
  void MergeFrom(const CSGetFriendHelpInfoResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 othuid = 1;
  inline int othuid_size() const;
  inline void clear_othuid();
  static const int kOthuidFieldNumber = 1;
  inline ::google::protobuf::uint32 othuid(int index) const;
  inline void set_othuid(int index, ::google::protobuf::uint32 value);
  inline void add_othuid(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      othuid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_othuid();

  // @@protoc_insertion_point(class_scope:ProtoFriend.CSGetFriendHelpInfoResp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > othuid_;
  friend void  protobuf_AddDesc_ProtoFriend_2eproto();
  friend void protobuf_AssignDesc_ProtoFriend_2eproto();
  friend void protobuf_ShutdownFile_ProtoFriend_2eproto();

  void InitAsDefaultInstance();
  static CSGetFriendHelpInfoResp* default_instance_;
};
// -------------------------------------------------------------------

class CSConcernReq : public ::google::protobuf::Message {
 public:
  CSConcernReq();
  virtual ~CSConcernReq();

  CSConcernReq(const CSConcernReq& from);

  inline CSConcernReq& operator=(const CSConcernReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSConcernReq& default_instance();

  void Swap(CSConcernReq* other);

  // implements Message ----------------------------------------------

  CSConcernReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSConcernReq& from);
  void MergeFrom(const CSConcernReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 myuid = 1;
  inline bool has_myuid() const;
  inline void clear_myuid();
  static const int kMyuidFieldNumber = 1;
  inline ::google::protobuf::uint32 myuid() const;
  inline void set_myuid(::google::protobuf::uint32 value);

  // required uint32 othuid = 2;
  inline bool has_othuid() const;
  inline void clear_othuid();
  static const int kOthuidFieldNumber = 2;
  inline ::google::protobuf::uint32 othuid() const;
  inline void set_othuid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoFriend.CSConcernReq)
 private:
  inline void set_has_myuid();
  inline void clear_has_myuid();
  inline void set_has_othuid();
  inline void clear_has_othuid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 myuid_;
  ::google::protobuf::uint32 othuid_;
  friend void  protobuf_AddDesc_ProtoFriend_2eproto();
  friend void protobuf_AssignDesc_ProtoFriend_2eproto();
  friend void protobuf_ShutdownFile_ProtoFriend_2eproto();

  void InitAsDefaultInstance();
  static CSConcernReq* default_instance_;
};
// -------------------------------------------------------------------

class CSConcernResp : public ::google::protobuf::Message {
 public:
  CSConcernResp();
  virtual ~CSConcernResp();

  CSConcernResp(const CSConcernResp& from);

  inline CSConcernResp& operator=(const CSConcernResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSConcernResp& default_instance();

  void Swap(CSConcernResp* other);

  // implements Message ----------------------------------------------

  CSConcernResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSConcernResp& from);
  void MergeFrom(const CSConcernResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 myuid = 1;
  inline bool has_myuid() const;
  inline void clear_myuid();
  static const int kMyuidFieldNumber = 1;
  inline ::google::protobuf::uint32 myuid() const;
  inline void set_myuid(::google::protobuf::uint32 value);

  // required .ProtoFriend.ConcernResp folkResp = 2;
  inline bool has_folkresp() const;
  inline void clear_folkresp();
  static const int kFolkRespFieldNumber = 2;
  inline const ::ProtoFriend::ConcernResp& folkresp() const;
  inline ::ProtoFriend::ConcernResp* mutable_folkresp();
  inline ::ProtoFriend::ConcernResp* release_folkresp();
  inline void set_allocated_folkresp(::ProtoFriend::ConcernResp* folkresp);

  // @@protoc_insertion_point(class_scope:ProtoFriend.CSConcernResp)
 private:
  inline void set_has_myuid();
  inline void clear_has_myuid();
  inline void set_has_folkresp();
  inline void clear_has_folkresp();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::ProtoFriend::ConcernResp* folkresp_;
  ::google::protobuf::uint32 myuid_;
  friend void  protobuf_AddDesc_ProtoFriend_2eproto();
  friend void protobuf_AssignDesc_ProtoFriend_2eproto();
  friend void protobuf_ShutdownFile_ProtoFriend_2eproto();

  void InitAsDefaultInstance();
  static CSConcernResp* default_instance_;
};
// -------------------------------------------------------------------

class FansPushReq : public ::google::protobuf::Message {
 public:
  FansPushReq();
  virtual ~FansPushReq();

  FansPushReq(const FansPushReq& from);

  inline FansPushReq& operator=(const FansPushReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FansPushReq& default_instance();

  void Swap(FansPushReq* other);

  // implements Message ----------------------------------------------

  FansPushReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FansPushReq& from);
  void MergeFrom(const FansPushReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .ProtoFriend.FansCPP fan = 1;
  inline bool has_fan() const;
  inline void clear_fan();
  static const int kFanFieldNumber = 1;
  inline const ::ProtoFriend::FansCPP& fan() const;
  inline ::ProtoFriend::FansCPP* mutable_fan();
  inline ::ProtoFriend::FansCPP* release_fan();
  inline void set_allocated_fan(::ProtoFriend::FansCPP* fan);

  // @@protoc_insertion_point(class_scope:ProtoFriend.FansPushReq)
 private:
  inline void set_has_fan();
  inline void clear_has_fan();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::ProtoFriend::FansCPP* fan_;
  friend void  protobuf_AddDesc_ProtoFriend_2eproto();
  friend void protobuf_AssignDesc_ProtoFriend_2eproto();
  friend void protobuf_ShutdownFile_ProtoFriend_2eproto();

  void InitAsDefaultInstance();
  static FansPushReq* default_instance_;
};
// -------------------------------------------------------------------

class CancelConcernReq : public ::google::protobuf::Message {
 public:
  CancelConcernReq();
  virtual ~CancelConcernReq();

  CancelConcernReq(const CancelConcernReq& from);

  inline CancelConcernReq& operator=(const CancelConcernReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CancelConcernReq& default_instance();

  void Swap(CancelConcernReq* other);

  // implements Message ----------------------------------------------

  CancelConcernReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CancelConcernReq& from);
  void MergeFrom(const CancelConcernReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 othuid = 1;
  inline bool has_othuid() const;
  inline void clear_othuid();
  static const int kOthuidFieldNumber = 1;
  inline ::google::protobuf::uint32 othuid() const;
  inline void set_othuid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoFriend.CancelConcernReq)
 private:
  inline void set_has_othuid();
  inline void clear_has_othuid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 othuid_;
  friend void  protobuf_AddDesc_ProtoFriend_2eproto();
  friend void protobuf_AssignDesc_ProtoFriend_2eproto();
  friend void protobuf_ShutdownFile_ProtoFriend_2eproto();

  void InitAsDefaultInstance();
  static CancelConcernReq* default_instance_;
};
// -------------------------------------------------------------------

class CancelConcernResp : public ::google::protobuf::Message {
 public:
  CancelConcernResp();
  virtual ~CancelConcernResp();

  CancelConcernResp(const CancelConcernResp& from);

  inline CancelConcernResp& operator=(const CancelConcernResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CancelConcernResp& default_instance();

  void Swap(CancelConcernResp* other);

  // implements Message ----------------------------------------------

  CancelConcernResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CancelConcernResp& from);
  void MergeFrom(const CancelConcernResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 deluid = 1;
  inline bool has_deluid() const;
  inline void clear_deluid();
  static const int kDeluidFieldNumber = 1;
  inline ::google::protobuf::uint32 deluid() const;
  inline void set_deluid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoFriend.CancelConcernResp)
 private:
  inline void set_has_deluid();
  inline void clear_has_deluid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 deluid_;
  friend void  protobuf_AddDesc_ProtoFriend_2eproto();
  friend void protobuf_AssignDesc_ProtoFriend_2eproto();
  friend void protobuf_ShutdownFile_ProtoFriend_2eproto();

  void InitAsDefaultInstance();
  static CancelConcernResp* default_instance_;
};
// -------------------------------------------------------------------

class CSCancelConcernReq : public ::google::protobuf::Message {
 public:
  CSCancelConcernReq();
  virtual ~CSCancelConcernReq();

  CSCancelConcernReq(const CSCancelConcernReq& from);

  inline CSCancelConcernReq& operator=(const CSCancelConcernReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSCancelConcernReq& default_instance();

  void Swap(CSCancelConcernReq* other);

  // implements Message ----------------------------------------------

  CSCancelConcernReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSCancelConcernReq& from);
  void MergeFrom(const CSCancelConcernReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 myuid = 1;
  inline bool has_myuid() const;
  inline void clear_myuid();
  static const int kMyuidFieldNumber = 1;
  inline ::google::protobuf::uint32 myuid() const;
  inline void set_myuid(::google::protobuf::uint32 value);

  // required uint32 othuid = 2;
  inline bool has_othuid() const;
  inline void clear_othuid();
  static const int kOthuidFieldNumber = 2;
  inline ::google::protobuf::uint32 othuid() const;
  inline void set_othuid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoFriend.CSCancelConcernReq)
 private:
  inline void set_has_myuid();
  inline void clear_has_myuid();
  inline void set_has_othuid();
  inline void clear_has_othuid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 myuid_;
  ::google::protobuf::uint32 othuid_;
  friend void  protobuf_AddDesc_ProtoFriend_2eproto();
  friend void protobuf_AssignDesc_ProtoFriend_2eproto();
  friend void protobuf_ShutdownFile_ProtoFriend_2eproto();

  void InitAsDefaultInstance();
  static CSCancelConcernReq* default_instance_;
};
// -------------------------------------------------------------------

class CSCancelConcernResp : public ::google::protobuf::Message {
 public:
  CSCancelConcernResp();
  virtual ~CSCancelConcernResp();

  CSCancelConcernResp(const CSCancelConcernResp& from);

  inline CSCancelConcernResp& operator=(const CSCancelConcernResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSCancelConcernResp& default_instance();

  void Swap(CSCancelConcernResp* other);

  // implements Message ----------------------------------------------

  CSCancelConcernResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSCancelConcernResp& from);
  void MergeFrom(const CSCancelConcernResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 myuid = 1;
  inline bool has_myuid() const;
  inline void clear_myuid();
  static const int kMyuidFieldNumber = 1;
  inline ::google::protobuf::uint32 myuid() const;
  inline void set_myuid(::google::protobuf::uint32 value);

  // required .ProtoFriend.CancelConcernResp resp = 2;
  inline bool has_resp() const;
  inline void clear_resp();
  static const int kRespFieldNumber = 2;
  inline const ::ProtoFriend::CancelConcernResp& resp() const;
  inline ::ProtoFriend::CancelConcernResp* mutable_resp();
  inline ::ProtoFriend::CancelConcernResp* release_resp();
  inline void set_allocated_resp(::ProtoFriend::CancelConcernResp* resp);

  // @@protoc_insertion_point(class_scope:ProtoFriend.CSCancelConcernResp)
 private:
  inline void set_has_myuid();
  inline void clear_has_myuid();
  inline void set_has_resp();
  inline void clear_has_resp();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::ProtoFriend::CancelConcernResp* resp_;
  ::google::protobuf::uint32 myuid_;
  friend void  protobuf_AddDesc_ProtoFriend_2eproto();
  friend void protobuf_AssignDesc_ProtoFriend_2eproto();
  friend void protobuf_ShutdownFile_ProtoFriend_2eproto();

  void InitAsDefaultInstance();
  static CSCancelConcernResp* default_instance_;
};
// -------------------------------------------------------------------

class StripFansPushReq : public ::google::protobuf::Message {
 public:
  StripFansPushReq();
  virtual ~StripFansPushReq();

  StripFansPushReq(const StripFansPushReq& from);

  inline StripFansPushReq& operator=(const StripFansPushReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const StripFansPushReq& default_instance();

  void Swap(StripFansPushReq* other);

  // implements Message ----------------------------------------------

  StripFansPushReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const StripFansPushReq& from);
  void MergeFrom(const StripFansPushReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 deluid = 1;
  inline bool has_deluid() const;
  inline void clear_deluid();
  static const int kDeluidFieldNumber = 1;
  inline ::google::protobuf::uint32 deluid() const;
  inline void set_deluid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoFriend.StripFansPushReq)
 private:
  inline void set_has_deluid();
  inline void clear_has_deluid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 deluid_;
  friend void  protobuf_AddDesc_ProtoFriend_2eproto();
  friend void protobuf_AssignDesc_ProtoFriend_2eproto();
  friend void protobuf_ShutdownFile_ProtoFriend_2eproto();

  void InitAsDefaultInstance();
  static StripFansPushReq* default_instance_;
};
// -------------------------------------------------------------------

class RemoveFansReq : public ::google::protobuf::Message {
 public:
  RemoveFansReq();
  virtual ~RemoveFansReq();

  RemoveFansReq(const RemoveFansReq& from);

  inline RemoveFansReq& operator=(const RemoveFansReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RemoveFansReq& default_instance();

  void Swap(RemoveFansReq* other);

  // implements Message ----------------------------------------------

  RemoveFansReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RemoveFansReq& from);
  void MergeFrom(const RemoveFansReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 deluid = 1;
  inline bool has_deluid() const;
  inline void clear_deluid();
  static const int kDeluidFieldNumber = 1;
  inline ::google::protobuf::uint32 deluid() const;
  inline void set_deluid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoFriend.RemoveFansReq)
 private:
  inline void set_has_deluid();
  inline void clear_has_deluid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 deluid_;
  friend void  protobuf_AddDesc_ProtoFriend_2eproto();
  friend void protobuf_AssignDesc_ProtoFriend_2eproto();
  friend void protobuf_ShutdownFile_ProtoFriend_2eproto();

  void InitAsDefaultInstance();
  static RemoveFansReq* default_instance_;
};
// -------------------------------------------------------------------

class RemoveFansResp : public ::google::protobuf::Message {
 public:
  RemoveFansResp();
  virtual ~RemoveFansResp();

  RemoveFansResp(const RemoveFansResp& from);

  inline RemoveFansResp& operator=(const RemoveFansResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RemoveFansResp& default_instance();

  void Swap(RemoveFansResp* other);

  // implements Message ----------------------------------------------

  RemoveFansResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RemoveFansResp& from);
  void MergeFrom(const RemoveFansResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 deluid = 1;
  inline bool has_deluid() const;
  inline void clear_deluid();
  static const int kDeluidFieldNumber = 1;
  inline ::google::protobuf::uint32 deluid() const;
  inline void set_deluid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoFriend.RemoveFansResp)
 private:
  inline void set_has_deluid();
  inline void clear_has_deluid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 deluid_;
  friend void  protobuf_AddDesc_ProtoFriend_2eproto();
  friend void protobuf_AssignDesc_ProtoFriend_2eproto();
  friend void protobuf_ShutdownFile_ProtoFriend_2eproto();

  void InitAsDefaultInstance();
  static RemoveFansResp* default_instance_;
};
// ===================================================================


// ===================================================================

// FolkCPP

// required uint32 folkUid = 1;
inline bool FolkCPP::has_folkuid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FolkCPP::set_has_folkuid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FolkCPP::clear_has_folkuid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FolkCPP::clear_folkuid() {
  folkuid_ = 0u;
  clear_has_folkuid();
}
inline ::google::protobuf::uint32 FolkCPP::folkuid() const {
  // @@protoc_insertion_point(field_get:ProtoFriend.FolkCPP.folkUid)
  return folkuid_;
}
inline void FolkCPP::set_folkuid(::google::protobuf::uint32 value) {
  set_has_folkuid();
  folkuid_ = value;
  // @@protoc_insertion_point(field_set:ProtoFriend.FolkCPP.folkUid)
}

// optional uint32 level = 2;
inline bool FolkCPP::has_level() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FolkCPP::set_has_level() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FolkCPP::clear_has_level() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FolkCPP::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 FolkCPP::level() const {
  // @@protoc_insertion_point(field_get:ProtoFriend.FolkCPP.level)
  return level_;
}
inline void FolkCPP::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:ProtoFriend.FolkCPP.level)
}

// optional bytes fig = 3;
inline bool FolkCPP::has_fig() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void FolkCPP::set_has_fig() {
  _has_bits_[0] |= 0x00000004u;
}
inline void FolkCPP::clear_has_fig() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void FolkCPP::clear_fig() {
  if (fig_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    fig_->clear();
  }
  clear_has_fig();
}
inline const ::std::string& FolkCPP::fig() const {
  // @@protoc_insertion_point(field_get:ProtoFriend.FolkCPP.fig)
  return *fig_;
}
inline void FolkCPP::set_fig(const ::std::string& value) {
  set_has_fig();
  if (fig_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    fig_ = new ::std::string;
  }
  fig_->assign(value);
  // @@protoc_insertion_point(field_set:ProtoFriend.FolkCPP.fig)
}
inline void FolkCPP::set_fig(const char* value) {
  set_has_fig();
  if (fig_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    fig_ = new ::std::string;
  }
  fig_->assign(value);
  // @@protoc_insertion_point(field_set_char:ProtoFriend.FolkCPP.fig)
}
inline void FolkCPP::set_fig(const void* value, size_t size) {
  set_has_fig();
  if (fig_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    fig_ = new ::std::string;
  }
  fig_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ProtoFriend.FolkCPP.fig)
}
inline ::std::string* FolkCPP::mutable_fig() {
  set_has_fig();
  if (fig_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    fig_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:ProtoFriend.FolkCPP.fig)
  return fig_;
}
inline ::std::string* FolkCPP::release_fig() {
  clear_has_fig();
  if (fig_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = fig_;
    fig_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void FolkCPP::set_allocated_fig(::std::string* fig) {
  if (fig_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete fig_;
  }
  if (fig) {
    set_has_fig();
    fig_ = fig;
  } else {
    clear_has_fig();
    fig_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoFriend.FolkCPP.fig)
}

// optional bytes name = 4;
inline bool FolkCPP::has_name() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void FolkCPP::set_has_name() {
  _has_bits_[0] |= 0x00000008u;
}
inline void FolkCPP::clear_has_name() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void FolkCPP::clear_name() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& FolkCPP::name() const {
  // @@protoc_insertion_point(field_get:ProtoFriend.FolkCPP.name)
  return *name_;
}
inline void FolkCPP::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set:ProtoFriend.FolkCPP.name)
}
inline void FolkCPP::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set_char:ProtoFriend.FolkCPP.name)
}
inline void FolkCPP::set_name(const void* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ProtoFriend.FolkCPP.name)
}
inline ::std::string* FolkCPP::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:ProtoFriend.FolkCPP.name)
  return name_;
}
inline ::std::string* FolkCPP::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void FolkCPP::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoFriend.FolkCPP.name)
}

// optional bool needhelp = 5;
inline bool FolkCPP::has_needhelp() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void FolkCPP::set_has_needhelp() {
  _has_bits_[0] |= 0x00000010u;
}
inline void FolkCPP::clear_has_needhelp() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void FolkCPP::clear_needhelp() {
  needhelp_ = false;
  clear_has_needhelp();
}
inline bool FolkCPP::needhelp() const {
  // @@protoc_insertion_point(field_get:ProtoFriend.FolkCPP.needhelp)
  return needhelp_;
}
inline void FolkCPP::set_needhelp(bool value) {
  set_has_needhelp();
  needhelp_ = value;
  // @@protoc_insertion_point(field_set:ProtoFriend.FolkCPP.needhelp)
}

// optional uint32 blueInfo = 6;
inline bool FolkCPP::has_blueinfo() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void FolkCPP::set_has_blueinfo() {
  _has_bits_[0] |= 0x00000020u;
}
inline void FolkCPP::clear_has_blueinfo() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void FolkCPP::clear_blueinfo() {
  blueinfo_ = 0u;
  clear_has_blueinfo();
}
inline ::google::protobuf::uint32 FolkCPP::blueinfo() const {
  // @@protoc_insertion_point(field_get:ProtoFriend.FolkCPP.blueInfo)
  return blueinfo_;
}
inline void FolkCPP::set_blueinfo(::google::protobuf::uint32 value) {
  set_has_blueinfo();
  blueinfo_ = value;
  // @@protoc_insertion_point(field_set:ProtoFriend.FolkCPP.blueInfo)
}

// -------------------------------------------------------------------

// ConcernFolkCPP

// required .ProtoFriend.FolkCPP concernfolk = 1;
inline bool ConcernFolkCPP::has_concernfolk() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ConcernFolkCPP::set_has_concernfolk() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ConcernFolkCPP::clear_has_concernfolk() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ConcernFolkCPP::clear_concernfolk() {
  if (concernfolk_ != NULL) concernfolk_->::ProtoFriend::FolkCPP::Clear();
  clear_has_concernfolk();
}
inline const ::ProtoFriend::FolkCPP& ConcernFolkCPP::concernfolk() const {
  // @@protoc_insertion_point(field_get:ProtoFriend.ConcernFolkCPP.concernfolk)
  return concernfolk_ != NULL ? *concernfolk_ : *default_instance_->concernfolk_;
}
inline ::ProtoFriend::FolkCPP* ConcernFolkCPP::mutable_concernfolk() {
  set_has_concernfolk();
  if (concernfolk_ == NULL) concernfolk_ = new ::ProtoFriend::FolkCPP;
  // @@protoc_insertion_point(field_mutable:ProtoFriend.ConcernFolkCPP.concernfolk)
  return concernfolk_;
}
inline ::ProtoFriend::FolkCPP* ConcernFolkCPP::release_concernfolk() {
  clear_has_concernfolk();
  ::ProtoFriend::FolkCPP* temp = concernfolk_;
  concernfolk_ = NULL;
  return temp;
}
inline void ConcernFolkCPP::set_allocated_concernfolk(::ProtoFriend::FolkCPP* concernfolk) {
  delete concernfolk_;
  concernfolk_ = concernfolk;
  if (concernfolk) {
    set_has_concernfolk();
  } else {
    clear_has_concernfolk();
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoFriend.ConcernFolkCPP.concernfolk)
}

// -------------------------------------------------------------------

// FansCPP

// required .ProtoFriend.FolkCPP fan = 1;
inline bool FansCPP::has_fan() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FansCPP::set_has_fan() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FansCPP::clear_has_fan() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FansCPP::clear_fan() {
  if (fan_ != NULL) fan_->::ProtoFriend::FolkCPP::Clear();
  clear_has_fan();
}
inline const ::ProtoFriend::FolkCPP& FansCPP::fan() const {
  // @@protoc_insertion_point(field_get:ProtoFriend.FansCPP.fan)
  return fan_ != NULL ? *fan_ : *default_instance_->fan_;
}
inline ::ProtoFriend::FolkCPP* FansCPP::mutable_fan() {
  set_has_fan();
  if (fan_ == NULL) fan_ = new ::ProtoFriend::FolkCPP;
  // @@protoc_insertion_point(field_mutable:ProtoFriend.FansCPP.fan)
  return fan_;
}
inline ::ProtoFriend::FolkCPP* FansCPP::release_fan() {
  clear_has_fan();
  ::ProtoFriend::FolkCPP* temp = fan_;
  fan_ = NULL;
  return temp;
}
inline void FansCPP::set_allocated_fan(::ProtoFriend::FolkCPP* fan) {
  delete fan_;
  fan_ = fan;
  if (fan) {
    set_has_fan();
  } else {
    clear_has_fan();
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoFriend.FansCPP.fan)
}

// -------------------------------------------------------------------

// GetAllFriendsReq

// -------------------------------------------------------------------

// GetAllFriendsResp

// repeated .ProtoFriend.ConcernFolkCPP concerns = 1;
inline int GetAllFriendsResp::concerns_size() const {
  return concerns_.size();
}
inline void GetAllFriendsResp::clear_concerns() {
  concerns_.Clear();
}
inline const ::ProtoFriend::ConcernFolkCPP& GetAllFriendsResp::concerns(int index) const {
  // @@protoc_insertion_point(field_get:ProtoFriend.GetAllFriendsResp.concerns)
  return concerns_.Get(index);
}
inline ::ProtoFriend::ConcernFolkCPP* GetAllFriendsResp::mutable_concerns(int index) {
  // @@protoc_insertion_point(field_mutable:ProtoFriend.GetAllFriendsResp.concerns)
  return concerns_.Mutable(index);
}
inline ::ProtoFriend::ConcernFolkCPP* GetAllFriendsResp::add_concerns() {
  // @@protoc_insertion_point(field_add:ProtoFriend.GetAllFriendsResp.concerns)
  return concerns_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ProtoFriend::ConcernFolkCPP >&
GetAllFriendsResp::concerns() const {
  // @@protoc_insertion_point(field_list:ProtoFriend.GetAllFriendsResp.concerns)
  return concerns_;
}
inline ::google::protobuf::RepeatedPtrField< ::ProtoFriend::ConcernFolkCPP >*
GetAllFriendsResp::mutable_concerns() {
  // @@protoc_insertion_point(field_mutable_list:ProtoFriend.GetAllFriendsResp.concerns)
  return &concerns_;
}

// repeated .ProtoFriend.FansCPP fans = 2;
inline int GetAllFriendsResp::fans_size() const {
  return fans_.size();
}
inline void GetAllFriendsResp::clear_fans() {
  fans_.Clear();
}
inline const ::ProtoFriend::FansCPP& GetAllFriendsResp::fans(int index) const {
  // @@protoc_insertion_point(field_get:ProtoFriend.GetAllFriendsResp.fans)
  return fans_.Get(index);
}
inline ::ProtoFriend::FansCPP* GetAllFriendsResp::mutable_fans(int index) {
  // @@protoc_insertion_point(field_mutable:ProtoFriend.GetAllFriendsResp.fans)
  return fans_.Mutable(index);
}
inline ::ProtoFriend::FansCPP* GetAllFriendsResp::add_fans() {
  // @@protoc_insertion_point(field_add:ProtoFriend.GetAllFriendsResp.fans)
  return fans_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ProtoFriend::FansCPP >&
GetAllFriendsResp::fans() const {
  // @@protoc_insertion_point(field_list:ProtoFriend.GetAllFriendsResp.fans)
  return fans_;
}
inline ::google::protobuf::RepeatedPtrField< ::ProtoFriend::FansCPP >*
GetAllFriendsResp::mutable_fans() {
  // @@protoc_insertion_point(field_mutable_list:ProtoFriend.GetAllFriendsResp.fans)
  return &fans_;
}

// repeated .ProtoFriend.FolkCPP helpers = 3;
inline int GetAllFriendsResp::helpers_size() const {
  return helpers_.size();
}
inline void GetAllFriendsResp::clear_helpers() {
  helpers_.Clear();
}
inline const ::ProtoFriend::FolkCPP& GetAllFriendsResp::helpers(int index) const {
  // @@protoc_insertion_point(field_get:ProtoFriend.GetAllFriendsResp.helpers)
  return helpers_.Get(index);
}
inline ::ProtoFriend::FolkCPP* GetAllFriendsResp::mutable_helpers(int index) {
  // @@protoc_insertion_point(field_mutable:ProtoFriend.GetAllFriendsResp.helpers)
  return helpers_.Mutable(index);
}
inline ::ProtoFriend::FolkCPP* GetAllFriendsResp::add_helpers() {
  // @@protoc_insertion_point(field_add:ProtoFriend.GetAllFriendsResp.helpers)
  return helpers_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ProtoFriend::FolkCPP >&
GetAllFriendsResp::helpers() const {
  // @@protoc_insertion_point(field_list:ProtoFriend.GetAllFriendsResp.helpers)
  return helpers_;
}
inline ::google::protobuf::RepeatedPtrField< ::ProtoFriend::FolkCPP >*
GetAllFriendsResp::mutable_helpers() {
  // @@protoc_insertion_point(field_mutable_list:ProtoFriend.GetAllFriendsResp.helpers)
  return &helpers_;
}

// -------------------------------------------------------------------

// ConcernReq

// required uint32 othuid = 1;
inline bool ConcernReq::has_othuid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ConcernReq::set_has_othuid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ConcernReq::clear_has_othuid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ConcernReq::clear_othuid() {
  othuid_ = 0u;
  clear_has_othuid();
}
inline ::google::protobuf::uint32 ConcernReq::othuid() const {
  // @@protoc_insertion_point(field_get:ProtoFriend.ConcernReq.othuid)
  return othuid_;
}
inline void ConcernReq::set_othuid(::google::protobuf::uint32 value) {
  set_has_othuid();
  othuid_ = value;
  // @@protoc_insertion_point(field_set:ProtoFriend.ConcernReq.othuid)
}

// -------------------------------------------------------------------

// ConcernResp

// required .ProtoFriend.ConcernFolkCPP concern = 1;
inline bool ConcernResp::has_concern() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ConcernResp::set_has_concern() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ConcernResp::clear_has_concern() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ConcernResp::clear_concern() {
  if (concern_ != NULL) concern_->::ProtoFriend::ConcernFolkCPP::Clear();
  clear_has_concern();
}
inline const ::ProtoFriend::ConcernFolkCPP& ConcernResp::concern() const {
  // @@protoc_insertion_point(field_get:ProtoFriend.ConcernResp.concern)
  return concern_ != NULL ? *concern_ : *default_instance_->concern_;
}
inline ::ProtoFriend::ConcernFolkCPP* ConcernResp::mutable_concern() {
  set_has_concern();
  if (concern_ == NULL) concern_ = new ::ProtoFriend::ConcernFolkCPP;
  // @@protoc_insertion_point(field_mutable:ProtoFriend.ConcernResp.concern)
  return concern_;
}
inline ::ProtoFriend::ConcernFolkCPP* ConcernResp::release_concern() {
  clear_has_concern();
  ::ProtoFriend::ConcernFolkCPP* temp = concern_;
  concern_ = NULL;
  return temp;
}
inline void ConcernResp::set_allocated_concern(::ProtoFriend::ConcernFolkCPP* concern) {
  delete concern_;
  concern_ = concern;
  if (concern) {
    set_has_concern();
  } else {
    clear_has_concern();
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoFriend.ConcernResp.concern)
}

// -------------------------------------------------------------------

// CSGetFriendInfoReq

// required uint32 type = 1;
inline bool CSGetFriendInfoReq::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSGetFriendInfoReq::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSGetFriendInfoReq::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSGetFriendInfoReq::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 CSGetFriendInfoReq::type() const {
  // @@protoc_insertion_point(field_get:ProtoFriend.CSGetFriendInfoReq.type)
  return type_;
}
inline void CSGetFriendInfoReq::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:ProtoFriend.CSGetFriendInfoReq.type)
}

// required uint32 myuid = 2;
inline bool CSGetFriendInfoReq::has_myuid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSGetFriendInfoReq::set_has_myuid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSGetFriendInfoReq::clear_has_myuid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSGetFriendInfoReq::clear_myuid() {
  myuid_ = 0u;
  clear_has_myuid();
}
inline ::google::protobuf::uint32 CSGetFriendInfoReq::myuid() const {
  // @@protoc_insertion_point(field_get:ProtoFriend.CSGetFriendInfoReq.myuid)
  return myuid_;
}
inline void CSGetFriendInfoReq::set_myuid(::google::protobuf::uint32 value) {
  set_has_myuid();
  myuid_ = value;
  // @@protoc_insertion_point(field_set:ProtoFriend.CSGetFriendInfoReq.myuid)
}

// repeated uint32 othuid = 3;
inline int CSGetFriendInfoReq::othuid_size() const {
  return othuid_.size();
}
inline void CSGetFriendInfoReq::clear_othuid() {
  othuid_.Clear();
}
inline ::google::protobuf::uint32 CSGetFriendInfoReq::othuid(int index) const {
  // @@protoc_insertion_point(field_get:ProtoFriend.CSGetFriendInfoReq.othuid)
  return othuid_.Get(index);
}
inline void CSGetFriendInfoReq::set_othuid(int index, ::google::protobuf::uint32 value) {
  othuid_.Set(index, value);
  // @@protoc_insertion_point(field_set:ProtoFriend.CSGetFriendInfoReq.othuid)
}
inline void CSGetFriendInfoReq::add_othuid(::google::protobuf::uint32 value) {
  othuid_.Add(value);
  // @@protoc_insertion_point(field_add:ProtoFriend.CSGetFriendInfoReq.othuid)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CSGetFriendInfoReq::othuid() const {
  // @@protoc_insertion_point(field_list:ProtoFriend.CSGetFriendInfoReq.othuid)
  return othuid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CSGetFriendInfoReq::mutable_othuid() {
  // @@protoc_insertion_point(field_mutable_list:ProtoFriend.CSGetFriendInfoReq.othuid)
  return &othuid_;
}

// -------------------------------------------------------------------

// CSGetFriendInfoResp

// required uint32 type = 1;
inline bool CSGetFriendInfoResp::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSGetFriendInfoResp::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSGetFriendInfoResp::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSGetFriendInfoResp::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 CSGetFriendInfoResp::type() const {
  // @@protoc_insertion_point(field_get:ProtoFriend.CSGetFriendInfoResp.type)
  return type_;
}
inline void CSGetFriendInfoResp::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:ProtoFriend.CSGetFriendInfoResp.type)
}

// required uint32 myuid = 2;
inline bool CSGetFriendInfoResp::has_myuid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSGetFriendInfoResp::set_has_myuid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSGetFriendInfoResp::clear_has_myuid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSGetFriendInfoResp::clear_myuid() {
  myuid_ = 0u;
  clear_has_myuid();
}
inline ::google::protobuf::uint32 CSGetFriendInfoResp::myuid() const {
  // @@protoc_insertion_point(field_get:ProtoFriend.CSGetFriendInfoResp.myuid)
  return myuid_;
}
inline void CSGetFriendInfoResp::set_myuid(::google::protobuf::uint32 value) {
  set_has_myuid();
  myuid_ = value;
  // @@protoc_insertion_point(field_set:ProtoFriend.CSGetFriendInfoResp.myuid)
}

// repeated .ProtoFriend.FolkCPP folk = 3;
inline int CSGetFriendInfoResp::folk_size() const {
  return folk_.size();
}
inline void CSGetFriendInfoResp::clear_folk() {
  folk_.Clear();
}
inline const ::ProtoFriend::FolkCPP& CSGetFriendInfoResp::folk(int index) const {
  // @@protoc_insertion_point(field_get:ProtoFriend.CSGetFriendInfoResp.folk)
  return folk_.Get(index);
}
inline ::ProtoFriend::FolkCPP* CSGetFriendInfoResp::mutable_folk(int index) {
  // @@protoc_insertion_point(field_mutable:ProtoFriend.CSGetFriendInfoResp.folk)
  return folk_.Mutable(index);
}
inline ::ProtoFriend::FolkCPP* CSGetFriendInfoResp::add_folk() {
  // @@protoc_insertion_point(field_add:ProtoFriend.CSGetFriendInfoResp.folk)
  return folk_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ProtoFriend::FolkCPP >&
CSGetFriendInfoResp::folk() const {
  // @@protoc_insertion_point(field_list:ProtoFriend.CSGetFriendInfoResp.folk)
  return folk_;
}
inline ::google::protobuf::RepeatedPtrField< ::ProtoFriend::FolkCPP >*
CSGetFriendInfoResp::mutable_folk() {
  // @@protoc_insertion_point(field_mutable_list:ProtoFriend.CSGetFriendInfoResp.folk)
  return &folk_;
}

// -------------------------------------------------------------------

// GetFriendHelpInfoReq

// -------------------------------------------------------------------

// CSGetFriendHelpInfoReq

// required uint32 myuid = 1;
inline bool CSGetFriendHelpInfoReq::has_myuid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSGetFriendHelpInfoReq::set_has_myuid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSGetFriendHelpInfoReq::clear_has_myuid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSGetFriendHelpInfoReq::clear_myuid() {
  myuid_ = 0u;
  clear_has_myuid();
}
inline ::google::protobuf::uint32 CSGetFriendHelpInfoReq::myuid() const {
  // @@protoc_insertion_point(field_get:ProtoFriend.CSGetFriendHelpInfoReq.myuid)
  return myuid_;
}
inline void CSGetFriendHelpInfoReq::set_myuid(::google::protobuf::uint32 value) {
  set_has_myuid();
  myuid_ = value;
  // @@protoc_insertion_point(field_set:ProtoFriend.CSGetFriendHelpInfoReq.myuid)
}

// repeated uint32 othuid = 2;
inline int CSGetFriendHelpInfoReq::othuid_size() const {
  return othuid_.size();
}
inline void CSGetFriendHelpInfoReq::clear_othuid() {
  othuid_.Clear();
}
inline ::google::protobuf::uint32 CSGetFriendHelpInfoReq::othuid(int index) const {
  // @@protoc_insertion_point(field_get:ProtoFriend.CSGetFriendHelpInfoReq.othuid)
  return othuid_.Get(index);
}
inline void CSGetFriendHelpInfoReq::set_othuid(int index, ::google::protobuf::uint32 value) {
  othuid_.Set(index, value);
  // @@protoc_insertion_point(field_set:ProtoFriend.CSGetFriendHelpInfoReq.othuid)
}
inline void CSGetFriendHelpInfoReq::add_othuid(::google::protobuf::uint32 value) {
  othuid_.Add(value);
  // @@protoc_insertion_point(field_add:ProtoFriend.CSGetFriendHelpInfoReq.othuid)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CSGetFriendHelpInfoReq::othuid() const {
  // @@protoc_insertion_point(field_list:ProtoFriend.CSGetFriendHelpInfoReq.othuid)
  return othuid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CSGetFriendHelpInfoReq::mutable_othuid() {
  // @@protoc_insertion_point(field_mutable_list:ProtoFriend.CSGetFriendHelpInfoReq.othuid)
  return &othuid_;
}

// -------------------------------------------------------------------

// CSGetFriendHelpInfoResp

// repeated uint32 othuid = 1;
inline int CSGetFriendHelpInfoResp::othuid_size() const {
  return othuid_.size();
}
inline void CSGetFriendHelpInfoResp::clear_othuid() {
  othuid_.Clear();
}
inline ::google::protobuf::uint32 CSGetFriendHelpInfoResp::othuid(int index) const {
  // @@protoc_insertion_point(field_get:ProtoFriend.CSGetFriendHelpInfoResp.othuid)
  return othuid_.Get(index);
}
inline void CSGetFriendHelpInfoResp::set_othuid(int index, ::google::protobuf::uint32 value) {
  othuid_.Set(index, value);
  // @@protoc_insertion_point(field_set:ProtoFriend.CSGetFriendHelpInfoResp.othuid)
}
inline void CSGetFriendHelpInfoResp::add_othuid(::google::protobuf::uint32 value) {
  othuid_.Add(value);
  // @@protoc_insertion_point(field_add:ProtoFriend.CSGetFriendHelpInfoResp.othuid)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CSGetFriendHelpInfoResp::othuid() const {
  // @@protoc_insertion_point(field_list:ProtoFriend.CSGetFriendHelpInfoResp.othuid)
  return othuid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CSGetFriendHelpInfoResp::mutable_othuid() {
  // @@protoc_insertion_point(field_mutable_list:ProtoFriend.CSGetFriendHelpInfoResp.othuid)
  return &othuid_;
}

// -------------------------------------------------------------------

// CSConcernReq

// required uint32 myuid = 1;
inline bool CSConcernReq::has_myuid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSConcernReq::set_has_myuid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSConcernReq::clear_has_myuid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSConcernReq::clear_myuid() {
  myuid_ = 0u;
  clear_has_myuid();
}
inline ::google::protobuf::uint32 CSConcernReq::myuid() const {
  // @@protoc_insertion_point(field_get:ProtoFriend.CSConcernReq.myuid)
  return myuid_;
}
inline void CSConcernReq::set_myuid(::google::protobuf::uint32 value) {
  set_has_myuid();
  myuid_ = value;
  // @@protoc_insertion_point(field_set:ProtoFriend.CSConcernReq.myuid)
}

// required uint32 othuid = 2;
inline bool CSConcernReq::has_othuid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSConcernReq::set_has_othuid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSConcernReq::clear_has_othuid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSConcernReq::clear_othuid() {
  othuid_ = 0u;
  clear_has_othuid();
}
inline ::google::protobuf::uint32 CSConcernReq::othuid() const {
  // @@protoc_insertion_point(field_get:ProtoFriend.CSConcernReq.othuid)
  return othuid_;
}
inline void CSConcernReq::set_othuid(::google::protobuf::uint32 value) {
  set_has_othuid();
  othuid_ = value;
  // @@protoc_insertion_point(field_set:ProtoFriend.CSConcernReq.othuid)
}

// -------------------------------------------------------------------

// CSConcernResp

// required uint32 myuid = 1;
inline bool CSConcernResp::has_myuid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSConcernResp::set_has_myuid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSConcernResp::clear_has_myuid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSConcernResp::clear_myuid() {
  myuid_ = 0u;
  clear_has_myuid();
}
inline ::google::protobuf::uint32 CSConcernResp::myuid() const {
  // @@protoc_insertion_point(field_get:ProtoFriend.CSConcernResp.myuid)
  return myuid_;
}
inline void CSConcernResp::set_myuid(::google::protobuf::uint32 value) {
  set_has_myuid();
  myuid_ = value;
  // @@protoc_insertion_point(field_set:ProtoFriend.CSConcernResp.myuid)
}

// required .ProtoFriend.ConcernResp folkResp = 2;
inline bool CSConcernResp::has_folkresp() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSConcernResp::set_has_folkresp() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSConcernResp::clear_has_folkresp() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSConcernResp::clear_folkresp() {
  if (folkresp_ != NULL) folkresp_->::ProtoFriend::ConcernResp::Clear();
  clear_has_folkresp();
}
inline const ::ProtoFriend::ConcernResp& CSConcernResp::folkresp() const {
  // @@protoc_insertion_point(field_get:ProtoFriend.CSConcernResp.folkResp)
  return folkresp_ != NULL ? *folkresp_ : *default_instance_->folkresp_;
}
inline ::ProtoFriend::ConcernResp* CSConcernResp::mutable_folkresp() {
  set_has_folkresp();
  if (folkresp_ == NULL) folkresp_ = new ::ProtoFriend::ConcernResp;
  // @@protoc_insertion_point(field_mutable:ProtoFriend.CSConcernResp.folkResp)
  return folkresp_;
}
inline ::ProtoFriend::ConcernResp* CSConcernResp::release_folkresp() {
  clear_has_folkresp();
  ::ProtoFriend::ConcernResp* temp = folkresp_;
  folkresp_ = NULL;
  return temp;
}
inline void CSConcernResp::set_allocated_folkresp(::ProtoFriend::ConcernResp* folkresp) {
  delete folkresp_;
  folkresp_ = folkresp;
  if (folkresp) {
    set_has_folkresp();
  } else {
    clear_has_folkresp();
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoFriend.CSConcernResp.folkResp)
}

// -------------------------------------------------------------------

// FansPushReq

// required .ProtoFriend.FansCPP fan = 1;
inline bool FansPushReq::has_fan() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FansPushReq::set_has_fan() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FansPushReq::clear_has_fan() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FansPushReq::clear_fan() {
  if (fan_ != NULL) fan_->::ProtoFriend::FansCPP::Clear();
  clear_has_fan();
}
inline const ::ProtoFriend::FansCPP& FansPushReq::fan() const {
  // @@protoc_insertion_point(field_get:ProtoFriend.FansPushReq.fan)
  return fan_ != NULL ? *fan_ : *default_instance_->fan_;
}
inline ::ProtoFriend::FansCPP* FansPushReq::mutable_fan() {
  set_has_fan();
  if (fan_ == NULL) fan_ = new ::ProtoFriend::FansCPP;
  // @@protoc_insertion_point(field_mutable:ProtoFriend.FansPushReq.fan)
  return fan_;
}
inline ::ProtoFriend::FansCPP* FansPushReq::release_fan() {
  clear_has_fan();
  ::ProtoFriend::FansCPP* temp = fan_;
  fan_ = NULL;
  return temp;
}
inline void FansPushReq::set_allocated_fan(::ProtoFriend::FansCPP* fan) {
  delete fan_;
  fan_ = fan;
  if (fan) {
    set_has_fan();
  } else {
    clear_has_fan();
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoFriend.FansPushReq.fan)
}

// -------------------------------------------------------------------

// CancelConcernReq

// required uint32 othuid = 1;
inline bool CancelConcernReq::has_othuid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CancelConcernReq::set_has_othuid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CancelConcernReq::clear_has_othuid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CancelConcernReq::clear_othuid() {
  othuid_ = 0u;
  clear_has_othuid();
}
inline ::google::protobuf::uint32 CancelConcernReq::othuid() const {
  // @@protoc_insertion_point(field_get:ProtoFriend.CancelConcernReq.othuid)
  return othuid_;
}
inline void CancelConcernReq::set_othuid(::google::protobuf::uint32 value) {
  set_has_othuid();
  othuid_ = value;
  // @@protoc_insertion_point(field_set:ProtoFriend.CancelConcernReq.othuid)
}

// -------------------------------------------------------------------

// CancelConcernResp

// required uint32 deluid = 1;
inline bool CancelConcernResp::has_deluid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CancelConcernResp::set_has_deluid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CancelConcernResp::clear_has_deluid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CancelConcernResp::clear_deluid() {
  deluid_ = 0u;
  clear_has_deluid();
}
inline ::google::protobuf::uint32 CancelConcernResp::deluid() const {
  // @@protoc_insertion_point(field_get:ProtoFriend.CancelConcernResp.deluid)
  return deluid_;
}
inline void CancelConcernResp::set_deluid(::google::protobuf::uint32 value) {
  set_has_deluid();
  deluid_ = value;
  // @@protoc_insertion_point(field_set:ProtoFriend.CancelConcernResp.deluid)
}

// -------------------------------------------------------------------

// CSCancelConcernReq

// required uint32 myuid = 1;
inline bool CSCancelConcernReq::has_myuid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSCancelConcernReq::set_has_myuid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSCancelConcernReq::clear_has_myuid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSCancelConcernReq::clear_myuid() {
  myuid_ = 0u;
  clear_has_myuid();
}
inline ::google::protobuf::uint32 CSCancelConcernReq::myuid() const {
  // @@protoc_insertion_point(field_get:ProtoFriend.CSCancelConcernReq.myuid)
  return myuid_;
}
inline void CSCancelConcernReq::set_myuid(::google::protobuf::uint32 value) {
  set_has_myuid();
  myuid_ = value;
  // @@protoc_insertion_point(field_set:ProtoFriend.CSCancelConcernReq.myuid)
}

// required uint32 othuid = 2;
inline bool CSCancelConcernReq::has_othuid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSCancelConcernReq::set_has_othuid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSCancelConcernReq::clear_has_othuid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSCancelConcernReq::clear_othuid() {
  othuid_ = 0u;
  clear_has_othuid();
}
inline ::google::protobuf::uint32 CSCancelConcernReq::othuid() const {
  // @@protoc_insertion_point(field_get:ProtoFriend.CSCancelConcernReq.othuid)
  return othuid_;
}
inline void CSCancelConcernReq::set_othuid(::google::protobuf::uint32 value) {
  set_has_othuid();
  othuid_ = value;
  // @@protoc_insertion_point(field_set:ProtoFriend.CSCancelConcernReq.othuid)
}

// -------------------------------------------------------------------

// CSCancelConcernResp

// required uint32 myuid = 1;
inline bool CSCancelConcernResp::has_myuid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSCancelConcernResp::set_has_myuid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSCancelConcernResp::clear_has_myuid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSCancelConcernResp::clear_myuid() {
  myuid_ = 0u;
  clear_has_myuid();
}
inline ::google::protobuf::uint32 CSCancelConcernResp::myuid() const {
  // @@protoc_insertion_point(field_get:ProtoFriend.CSCancelConcernResp.myuid)
  return myuid_;
}
inline void CSCancelConcernResp::set_myuid(::google::protobuf::uint32 value) {
  set_has_myuid();
  myuid_ = value;
  // @@protoc_insertion_point(field_set:ProtoFriend.CSCancelConcernResp.myuid)
}

// required .ProtoFriend.CancelConcernResp resp = 2;
inline bool CSCancelConcernResp::has_resp() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSCancelConcernResp::set_has_resp() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSCancelConcernResp::clear_has_resp() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSCancelConcernResp::clear_resp() {
  if (resp_ != NULL) resp_->::ProtoFriend::CancelConcernResp::Clear();
  clear_has_resp();
}
inline const ::ProtoFriend::CancelConcernResp& CSCancelConcernResp::resp() const {
  // @@protoc_insertion_point(field_get:ProtoFriend.CSCancelConcernResp.resp)
  return resp_ != NULL ? *resp_ : *default_instance_->resp_;
}
inline ::ProtoFriend::CancelConcernResp* CSCancelConcernResp::mutable_resp() {
  set_has_resp();
  if (resp_ == NULL) resp_ = new ::ProtoFriend::CancelConcernResp;
  // @@protoc_insertion_point(field_mutable:ProtoFriend.CSCancelConcernResp.resp)
  return resp_;
}
inline ::ProtoFriend::CancelConcernResp* CSCancelConcernResp::release_resp() {
  clear_has_resp();
  ::ProtoFriend::CancelConcernResp* temp = resp_;
  resp_ = NULL;
  return temp;
}
inline void CSCancelConcernResp::set_allocated_resp(::ProtoFriend::CancelConcernResp* resp) {
  delete resp_;
  resp_ = resp;
  if (resp) {
    set_has_resp();
  } else {
    clear_has_resp();
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoFriend.CSCancelConcernResp.resp)
}

// -------------------------------------------------------------------

// StripFansPushReq

// required uint32 deluid = 1;
inline bool StripFansPushReq::has_deluid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void StripFansPushReq::set_has_deluid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void StripFansPushReq::clear_has_deluid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void StripFansPushReq::clear_deluid() {
  deluid_ = 0u;
  clear_has_deluid();
}
inline ::google::protobuf::uint32 StripFansPushReq::deluid() const {
  // @@protoc_insertion_point(field_get:ProtoFriend.StripFansPushReq.deluid)
  return deluid_;
}
inline void StripFansPushReq::set_deluid(::google::protobuf::uint32 value) {
  set_has_deluid();
  deluid_ = value;
  // @@protoc_insertion_point(field_set:ProtoFriend.StripFansPushReq.deluid)
}

// -------------------------------------------------------------------

// RemoveFansReq

// required uint32 deluid = 1;
inline bool RemoveFansReq::has_deluid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RemoveFansReq::set_has_deluid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RemoveFansReq::clear_has_deluid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RemoveFansReq::clear_deluid() {
  deluid_ = 0u;
  clear_has_deluid();
}
inline ::google::protobuf::uint32 RemoveFansReq::deluid() const {
  // @@protoc_insertion_point(field_get:ProtoFriend.RemoveFansReq.deluid)
  return deluid_;
}
inline void RemoveFansReq::set_deluid(::google::protobuf::uint32 value) {
  set_has_deluid();
  deluid_ = value;
  // @@protoc_insertion_point(field_set:ProtoFriend.RemoveFansReq.deluid)
}

// -------------------------------------------------------------------

// RemoveFansResp

// required uint32 deluid = 1;
inline bool RemoveFansResp::has_deluid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RemoveFansResp::set_has_deluid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RemoveFansResp::clear_has_deluid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RemoveFansResp::clear_deluid() {
  deluid_ = 0u;
  clear_has_deluid();
}
inline ::google::protobuf::uint32 RemoveFansResp::deluid() const {
  // @@protoc_insertion_point(field_get:ProtoFriend.RemoveFansResp.deluid)
  return deluid_;
}
inline void RemoveFansResp::set_deluid(::google::protobuf::uint32 value) {
  set_has_deluid();
  deluid_ = value;
  // @@protoc_insertion_point(field_set:ProtoFriend.RemoveFansResp.deluid)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace ProtoFriend

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_ProtoFriend_2eproto__INCLUDED
