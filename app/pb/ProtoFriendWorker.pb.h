// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ProtoFriendWorker.proto

#ifndef PROTOBUF_ProtoFriendWorker_2eproto__INCLUDED
#define PROTOBUF_ProtoFriendWorker_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "DataCommon.pb.h"
// @@protoc_insertion_point(includes)

namespace ProtoFriendWorker {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_ProtoFriendWorker_2eproto();
void protobuf_AssignDesc_ProtoFriendWorker_2eproto();
void protobuf_ShutdownFile_ProtoFriendWorker_2eproto();

class FriendWorkerCPP;
class SetFriendWorkerReq;
class SetFriendWorkerResp;
class PushInviteReardMsg;
class CSSetFriendWorkerReq;
class CSSetFriendWorkerResp;
class GetWorkerSpeedUpReq;
class GetWorkerSpeedUpResp;
class SelectWorkerReq;
class SelectWorkerResp;
class ThanksWorkerReq;
class ThanksWorkerResp;

// ===================================================================

class FriendWorkerCPP : public ::google::protobuf::Message {
 public:
  FriendWorkerCPP();
  virtual ~FriendWorkerCPP();

  FriendWorkerCPP(const FriendWorkerCPP& from);

  inline FriendWorkerCPP& operator=(const FriendWorkerCPP& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FriendWorkerCPP& default_instance();

  void Swap(FriendWorkerCPP* other);

  // implements Message ----------------------------------------------

  FriendWorkerCPP* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FriendWorkerCPP& from);
  void MergeFrom(const FriendWorkerCPP& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 workerUid = 1;
  inline bool has_workeruid() const;
  inline void clear_workeruid();
  static const int kWorkerUidFieldNumber = 1;
  inline ::google::protobuf::uint32 workeruid() const;
  inline void set_workeruid(::google::protobuf::uint32 value);

  // required uint32 workerEndTs = 2;
  inline bool has_workerendts() const;
  inline void clear_workerendts();
  static const int kWorkerEndTsFieldNumber = 2;
  inline ::google::protobuf::uint32 workerendts() const;
  inline void set_workerendts(::google::protobuf::uint32 value);

  // required uint32 workerSlotPos = 3;
  inline bool has_workerslotpos() const;
  inline void clear_workerslotpos();
  static const int kWorkerSlotPosFieldNumber = 3;
  inline ::google::protobuf::uint32 workerslotpos() const;
  inline void set_workerslotpos(::google::protobuf::uint32 value);

  // optional uint32 workerInvitedTs = 4;
  inline bool has_workerinvitedts() const;
  inline void clear_workerinvitedts();
  static const int kWorkerInvitedTsFieldNumber = 4;
  inline ::google::protobuf::uint32 workerinvitedts() const;
  inline void set_workerinvitedts(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoFriendWorker.FriendWorkerCPP)
 private:
  inline void set_has_workeruid();
  inline void clear_has_workeruid();
  inline void set_has_workerendts();
  inline void clear_has_workerendts();
  inline void set_has_workerslotpos();
  inline void clear_has_workerslotpos();
  inline void set_has_workerinvitedts();
  inline void clear_has_workerinvitedts();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 workeruid_;
  ::google::protobuf::uint32 workerendts_;
  ::google::protobuf::uint32 workerslotpos_;
  ::google::protobuf::uint32 workerinvitedts_;
  friend void  protobuf_AddDesc_ProtoFriendWorker_2eproto();
  friend void protobuf_AssignDesc_ProtoFriendWorker_2eproto();
  friend void protobuf_ShutdownFile_ProtoFriendWorker_2eproto();

  void InitAsDefaultInstance();
  static FriendWorkerCPP* default_instance_;
};
// -------------------------------------------------------------------

class SetFriendWorkerReq : public ::google::protobuf::Message {
 public:
  SetFriendWorkerReq();
  virtual ~SetFriendWorkerReq();

  SetFriendWorkerReq(const SetFriendWorkerReq& from);

  inline SetFriendWorkerReq& operator=(const SetFriendWorkerReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SetFriendWorkerReq& default_instance();

  void Swap(SetFriendWorkerReq* other);

  // implements Message ----------------------------------------------

  SetFriendWorkerReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SetFriendWorkerReq& from);
  void MergeFrom(const SetFriendWorkerReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 othuid = 1;
  inline bool has_othuid() const;
  inline void clear_othuid();
  static const int kOthuidFieldNumber = 1;
  inline ::google::protobuf::uint32 othuid() const;
  inline void set_othuid(::google::protobuf::uint32 value);

  // optional uint32 propsid = 2;
  inline bool has_propsid() const;
  inline void clear_propsid();
  static const int kPropsidFieldNumber = 2;
  inline ::google::protobuf::uint32 propsid() const;
  inline void set_propsid(::google::protobuf::uint32 value);

  // repeated uint32 source = 3;
  inline int source_size() const;
  inline void clear_source();
  static const int kSourceFieldNumber = 3;
  inline ::google::protobuf::uint32 source(int index) const;
  inline void set_source(int index, ::google::protobuf::uint32 value);
  inline void add_source(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      source() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_source();

  // @@protoc_insertion_point(class_scope:ProtoFriendWorker.SetFriendWorkerReq)
 private:
  inline void set_has_othuid();
  inline void clear_has_othuid();
  inline void set_has_propsid();
  inline void clear_has_propsid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 othuid_;
  ::google::protobuf::uint32 propsid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > source_;
  friend void  protobuf_AddDesc_ProtoFriendWorker_2eproto();
  friend void protobuf_AssignDesc_ProtoFriendWorker_2eproto();
  friend void protobuf_ShutdownFile_ProtoFriendWorker_2eproto();

  void InitAsDefaultInstance();
  static SetFriendWorkerReq* default_instance_;
};
// -------------------------------------------------------------------

class SetFriendWorkerResp : public ::google::protobuf::Message {
 public:
  SetFriendWorkerResp();
  virtual ~SetFriendWorkerResp();

  SetFriendWorkerResp(const SetFriendWorkerResp& from);

  inline SetFriendWorkerResp& operator=(const SetFriendWorkerResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SetFriendWorkerResp& default_instance();

  void Swap(SetFriendWorkerResp* other);

  // implements Message ----------------------------------------------

  SetFriendWorkerResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SetFriendWorkerResp& from);
  void MergeFrom(const SetFriendWorkerResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 status = 1;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 1;
  inline ::google::protobuf::uint32 status() const;
  inline void set_status(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoFriendWorker.SetFriendWorkerResp)
 private:
  inline void set_has_status();
  inline void clear_has_status();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 status_;
  friend void  protobuf_AddDesc_ProtoFriendWorker_2eproto();
  friend void protobuf_AssignDesc_ProtoFriendWorker_2eproto();
  friend void protobuf_ShutdownFile_ProtoFriendWorker_2eproto();

  void InitAsDefaultInstance();
  static SetFriendWorkerResp* default_instance_;
};
// -------------------------------------------------------------------

class PushInviteReardMsg : public ::google::protobuf::Message {
 public:
  PushInviteReardMsg();
  virtual ~PushInviteReardMsg();

  PushInviteReardMsg(const PushInviteReardMsg& from);

  inline PushInviteReardMsg& operator=(const PushInviteReardMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PushInviteReardMsg& default_instance();

  void Swap(PushInviteReardMsg* other);

  // implements Message ----------------------------------------------

  PushInviteReardMsg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PushInviteReardMsg& from);
  void MergeFrom(const PushInviteReardMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .DataCommon.CommonItemsCPP commons = 1;
  inline bool has_commons() const;
  inline void clear_commons();
  static const int kCommonsFieldNumber = 1;
  inline const ::DataCommon::CommonItemsCPP& commons() const;
  inline ::DataCommon::CommonItemsCPP* mutable_commons();
  inline ::DataCommon::CommonItemsCPP* release_commons();
  inline void set_allocated_commons(::DataCommon::CommonItemsCPP* commons);

  // @@protoc_insertion_point(class_scope:ProtoFriendWorker.PushInviteReardMsg)
 private:
  inline void set_has_commons();
  inline void clear_has_commons();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::DataCommon::CommonItemsCPP* commons_;
  friend void  protobuf_AddDesc_ProtoFriendWorker_2eproto();
  friend void protobuf_AssignDesc_ProtoFriendWorker_2eproto();
  friend void protobuf_ShutdownFile_ProtoFriendWorker_2eproto();

  void InitAsDefaultInstance();
  static PushInviteReardMsg* default_instance_;
};
// -------------------------------------------------------------------

class CSSetFriendWorkerReq : public ::google::protobuf::Message {
 public:
  CSSetFriendWorkerReq();
  virtual ~CSSetFriendWorkerReq();

  CSSetFriendWorkerReq(const CSSetFriendWorkerReq& from);

  inline CSSetFriendWorkerReq& operator=(const CSSetFriendWorkerReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSSetFriendWorkerReq& default_instance();

  void Swap(CSSetFriendWorkerReq* other);

  // implements Message ----------------------------------------------

  CSSetFriendWorkerReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSSetFriendWorkerReq& from);
  void MergeFrom(const CSSetFriendWorkerReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 othuid = 1;
  inline bool has_othuid() const;
  inline void clear_othuid();
  static const int kOthuidFieldNumber = 1;
  inline ::google::protobuf::uint32 othuid() const;
  inline void set_othuid(::google::protobuf::uint32 value);

  // required uint32 myuid = 2;
  inline bool has_myuid() const;
  inline void clear_myuid();
  static const int kMyuidFieldNumber = 2;
  inline ::google::protobuf::uint32 myuid() const;
  inline void set_myuid(::google::protobuf::uint32 value);

  // required uint32 propisid = 3;
  inline bool has_propisid() const;
  inline void clear_propisid();
  static const int kPropisidFieldNumber = 3;
  inline ::google::protobuf::uint32 propisid() const;
  inline void set_propisid(::google::protobuf::uint32 value);

  // required uint32 sourceType = 4;
  inline bool has_sourcetype() const;
  inline void clear_sourcetype();
  static const int kSourceTypeFieldNumber = 4;
  inline ::google::protobuf::uint32 sourcetype() const;
  inline void set_sourcetype(::google::protobuf::uint32 value);

  // required uint32 sourceFlag = 5;
  inline bool has_sourceflag() const;
  inline void clear_sourceflag();
  static const int kSourceFlagFieldNumber = 5;
  inline ::google::protobuf::uint32 sourceflag() const;
  inline void set_sourceflag(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoFriendWorker.CSSetFriendWorkerReq)
 private:
  inline void set_has_othuid();
  inline void clear_has_othuid();
  inline void set_has_myuid();
  inline void clear_has_myuid();
  inline void set_has_propisid();
  inline void clear_has_propisid();
  inline void set_has_sourcetype();
  inline void clear_has_sourcetype();
  inline void set_has_sourceflag();
  inline void clear_has_sourceflag();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 othuid_;
  ::google::protobuf::uint32 myuid_;
  ::google::protobuf::uint32 propisid_;
  ::google::protobuf::uint32 sourcetype_;
  ::google::protobuf::uint32 sourceflag_;
  friend void  protobuf_AddDesc_ProtoFriendWorker_2eproto();
  friend void protobuf_AssignDesc_ProtoFriendWorker_2eproto();
  friend void protobuf_ShutdownFile_ProtoFriendWorker_2eproto();

  void InitAsDefaultInstance();
  static CSSetFriendWorkerReq* default_instance_;
};
// -------------------------------------------------------------------

class CSSetFriendWorkerResp : public ::google::protobuf::Message {
 public:
  CSSetFriendWorkerResp();
  virtual ~CSSetFriendWorkerResp();

  CSSetFriendWorkerResp(const CSSetFriendWorkerResp& from);

  inline CSSetFriendWorkerResp& operator=(const CSSetFriendWorkerResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSSetFriendWorkerResp& default_instance();

  void Swap(CSSetFriendWorkerResp* other);

  // implements Message ----------------------------------------------

  CSSetFriendWorkerResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSSetFriendWorkerResp& from);
  void MergeFrom(const CSSetFriendWorkerResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 othuid = 1;
  inline bool has_othuid() const;
  inline void clear_othuid();
  static const int kOthuidFieldNumber = 1;
  inline ::google::protobuf::uint32 othuid() const;
  inline void set_othuid(::google::protobuf::uint32 value);

  // required uint32 myuid = 2;
  inline bool has_myuid() const;
  inline void clear_myuid();
  static const int kMyuidFieldNumber = 2;
  inline ::google::protobuf::uint32 myuid() const;
  inline void set_myuid(::google::protobuf::uint32 value);

  // required uint32 stauts = 3;
  inline bool has_stauts() const;
  inline void clear_stauts();
  static const int kStautsFieldNumber = 3;
  inline ::google::protobuf::uint32 stauts() const;
  inline void set_stauts(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoFriendWorker.CSSetFriendWorkerResp)
 private:
  inline void set_has_othuid();
  inline void clear_has_othuid();
  inline void set_has_myuid();
  inline void clear_has_myuid();
  inline void set_has_stauts();
  inline void clear_has_stauts();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 othuid_;
  ::google::protobuf::uint32 myuid_;
  ::google::protobuf::uint32 stauts_;
  friend void  protobuf_AddDesc_ProtoFriendWorker_2eproto();
  friend void protobuf_AssignDesc_ProtoFriendWorker_2eproto();
  friend void protobuf_ShutdownFile_ProtoFriendWorker_2eproto();

  void InitAsDefaultInstance();
  static CSSetFriendWorkerResp* default_instance_;
};
// -------------------------------------------------------------------

class GetWorkerSpeedUpReq : public ::google::protobuf::Message {
 public:
  GetWorkerSpeedUpReq();
  virtual ~GetWorkerSpeedUpReq();

  GetWorkerSpeedUpReq(const GetWorkerSpeedUpReq& from);

  inline GetWorkerSpeedUpReq& operator=(const GetWorkerSpeedUpReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetWorkerSpeedUpReq& default_instance();

  void Swap(GetWorkerSpeedUpReq* other);

  // implements Message ----------------------------------------------

  GetWorkerSpeedUpReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetWorkerSpeedUpReq& from);
  void MergeFrom(const GetWorkerSpeedUpReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:ProtoFriendWorker.GetWorkerSpeedUpReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_ProtoFriendWorker_2eproto();
  friend void protobuf_AssignDesc_ProtoFriendWorker_2eproto();
  friend void protobuf_ShutdownFile_ProtoFriendWorker_2eproto();

  void InitAsDefaultInstance();
  static GetWorkerSpeedUpReq* default_instance_;
};
// -------------------------------------------------------------------

class GetWorkerSpeedUpResp : public ::google::protobuf::Message {
 public:
  GetWorkerSpeedUpResp();
  virtual ~GetWorkerSpeedUpResp();

  GetWorkerSpeedUpResp(const GetWorkerSpeedUpResp& from);

  inline GetWorkerSpeedUpResp& operator=(const GetWorkerSpeedUpResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetWorkerSpeedUpResp& default_instance();

  void Swap(GetWorkerSpeedUpResp* other);

  // implements Message ----------------------------------------------

  GetWorkerSpeedUpResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetWorkerSpeedUpResp& from);
  void MergeFrom(const GetWorkerSpeedUpResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .ProtoFriendWorker.FriendWorkerCPP friendworker = 1;
  inline int friendworker_size() const;
  inline void clear_friendworker();
  static const int kFriendworkerFieldNumber = 1;
  inline const ::ProtoFriendWorker::FriendWorkerCPP& friendworker(int index) const;
  inline ::ProtoFriendWorker::FriendWorkerCPP* mutable_friendworker(int index);
  inline ::ProtoFriendWorker::FriendWorkerCPP* add_friendworker();
  inline const ::google::protobuf::RepeatedPtrField< ::ProtoFriendWorker::FriendWorkerCPP >&
      friendworker() const;
  inline ::google::protobuf::RepeatedPtrField< ::ProtoFriendWorker::FriendWorkerCPP >*
      mutable_friendworker();

  // @@protoc_insertion_point(class_scope:ProtoFriendWorker.GetWorkerSpeedUpResp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::ProtoFriendWorker::FriendWorkerCPP > friendworker_;
  friend void  protobuf_AddDesc_ProtoFriendWorker_2eproto();
  friend void protobuf_AssignDesc_ProtoFriendWorker_2eproto();
  friend void protobuf_ShutdownFile_ProtoFriendWorker_2eproto();

  void InitAsDefaultInstance();
  static GetWorkerSpeedUpResp* default_instance_;
};
// -------------------------------------------------------------------

class SelectWorkerReq : public ::google::protobuf::Message {
 public:
  SelectWorkerReq();
  virtual ~SelectWorkerReq();

  SelectWorkerReq(const SelectWorkerReq& from);

  inline SelectWorkerReq& operator=(const SelectWorkerReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SelectWorkerReq& default_instance();

  void Swap(SelectWorkerReq* other);

  // implements Message ----------------------------------------------

  SelectWorkerReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SelectWorkerReq& from);
  void MergeFrom(const SelectWorkerReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 workerUid = 1;
  inline bool has_workeruid() const;
  inline void clear_workeruid();
  static const int kWorkerUidFieldNumber = 1;
  inline ::google::protobuf::uint32 workeruid() const;
  inline void set_workeruid(::google::protobuf::uint32 value);

  // required uint32 pos = 2;
  inline bool has_pos() const;
  inline void clear_pos();
  static const int kPosFieldNumber = 2;
  inline ::google::protobuf::uint32 pos() const;
  inline void set_pos(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoFriendWorker.SelectWorkerReq)
 private:
  inline void set_has_workeruid();
  inline void clear_has_workeruid();
  inline void set_has_pos();
  inline void clear_has_pos();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 workeruid_;
  ::google::protobuf::uint32 pos_;
  friend void  protobuf_AddDesc_ProtoFriendWorker_2eproto();
  friend void protobuf_AssignDesc_ProtoFriendWorker_2eproto();
  friend void protobuf_ShutdownFile_ProtoFriendWorker_2eproto();

  void InitAsDefaultInstance();
  static SelectWorkerReq* default_instance_;
};
// -------------------------------------------------------------------

class SelectWorkerResp : public ::google::protobuf::Message {
 public:
  SelectWorkerResp();
  virtual ~SelectWorkerResp();

  SelectWorkerResp(const SelectWorkerResp& from);

  inline SelectWorkerResp& operator=(const SelectWorkerResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SelectWorkerResp& default_instance();

  void Swap(SelectWorkerResp* other);

  // implements Message ----------------------------------------------

  SelectWorkerResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SelectWorkerResp& from);
  void MergeFrom(const SelectWorkerResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .ProtoFriendWorker.FriendWorkerCPP friendworker = 1;
  inline bool has_friendworker() const;
  inline void clear_friendworker();
  static const int kFriendworkerFieldNumber = 1;
  inline const ::ProtoFriendWorker::FriendWorkerCPP& friendworker() const;
  inline ::ProtoFriendWorker::FriendWorkerCPP* mutable_friendworker();
  inline ::ProtoFriendWorker::FriendWorkerCPP* release_friendworker();
  inline void set_allocated_friendworker(::ProtoFriendWorker::FriendWorkerCPP* friendworker);

  // @@protoc_insertion_point(class_scope:ProtoFriendWorker.SelectWorkerResp)
 private:
  inline void set_has_friendworker();
  inline void clear_has_friendworker();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::ProtoFriendWorker::FriendWorkerCPP* friendworker_;
  friend void  protobuf_AddDesc_ProtoFriendWorker_2eproto();
  friend void protobuf_AssignDesc_ProtoFriendWorker_2eproto();
  friend void protobuf_ShutdownFile_ProtoFriendWorker_2eproto();

  void InitAsDefaultInstance();
  static SelectWorkerResp* default_instance_;
};
// -------------------------------------------------------------------

class ThanksWorkerReq : public ::google::protobuf::Message {
 public:
  ThanksWorkerReq();
  virtual ~ThanksWorkerReq();

  ThanksWorkerReq(const ThanksWorkerReq& from);

  inline ThanksWorkerReq& operator=(const ThanksWorkerReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ThanksWorkerReq& default_instance();

  void Swap(ThanksWorkerReq* other);

  // implements Message ----------------------------------------------

  ThanksWorkerReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ThanksWorkerReq& from);
  void MergeFrom(const ThanksWorkerReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 workerUid = 1;
  inline bool has_workeruid() const;
  inline void clear_workeruid();
  static const int kWorkerUidFieldNumber = 1;
  inline ::google::protobuf::uint32 workeruid() const;
  inline void set_workeruid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoFriendWorker.ThanksWorkerReq)
 private:
  inline void set_has_workeruid();
  inline void clear_has_workeruid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 workeruid_;
  friend void  protobuf_AddDesc_ProtoFriendWorker_2eproto();
  friend void protobuf_AssignDesc_ProtoFriendWorker_2eproto();
  friend void protobuf_ShutdownFile_ProtoFriendWorker_2eproto();

  void InitAsDefaultInstance();
  static ThanksWorkerReq* default_instance_;
};
// -------------------------------------------------------------------

class ThanksWorkerResp : public ::google::protobuf::Message {
 public:
  ThanksWorkerResp();
  virtual ~ThanksWorkerResp();

  ThanksWorkerResp(const ThanksWorkerResp& from);

  inline ThanksWorkerResp& operator=(const ThanksWorkerResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ThanksWorkerResp& default_instance();

  void Swap(ThanksWorkerResp* other);

  // implements Message ----------------------------------------------

  ThanksWorkerResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ThanksWorkerResp& from);
  void MergeFrom(const ThanksWorkerResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .ProtoFriendWorker.FriendWorkerCPP friendworker = 1;
  inline bool has_friendworker() const;
  inline void clear_friendworker();
  static const int kFriendworkerFieldNumber = 1;
  inline const ::ProtoFriendWorker::FriendWorkerCPP& friendworker() const;
  inline ::ProtoFriendWorker::FriendWorkerCPP* mutable_friendworker();
  inline ::ProtoFriendWorker::FriendWorkerCPP* release_friendworker();
  inline void set_allocated_friendworker(::ProtoFriendWorker::FriendWorkerCPP* friendworker);

  // @@protoc_insertion_point(class_scope:ProtoFriendWorker.ThanksWorkerResp)
 private:
  inline void set_has_friendworker();
  inline void clear_has_friendworker();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::ProtoFriendWorker::FriendWorkerCPP* friendworker_;
  friend void  protobuf_AddDesc_ProtoFriendWorker_2eproto();
  friend void protobuf_AssignDesc_ProtoFriendWorker_2eproto();
  friend void protobuf_ShutdownFile_ProtoFriendWorker_2eproto();

  void InitAsDefaultInstance();
  static ThanksWorkerResp* default_instance_;
};
// ===================================================================


// ===================================================================

// FriendWorkerCPP

// required uint32 workerUid = 1;
inline bool FriendWorkerCPP::has_workeruid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FriendWorkerCPP::set_has_workeruid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FriendWorkerCPP::clear_has_workeruid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FriendWorkerCPP::clear_workeruid() {
  workeruid_ = 0u;
  clear_has_workeruid();
}
inline ::google::protobuf::uint32 FriendWorkerCPP::workeruid() const {
  // @@protoc_insertion_point(field_get:ProtoFriendWorker.FriendWorkerCPP.workerUid)
  return workeruid_;
}
inline void FriendWorkerCPP::set_workeruid(::google::protobuf::uint32 value) {
  set_has_workeruid();
  workeruid_ = value;
  // @@protoc_insertion_point(field_set:ProtoFriendWorker.FriendWorkerCPP.workerUid)
}

// required uint32 workerEndTs = 2;
inline bool FriendWorkerCPP::has_workerendts() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FriendWorkerCPP::set_has_workerendts() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FriendWorkerCPP::clear_has_workerendts() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FriendWorkerCPP::clear_workerendts() {
  workerendts_ = 0u;
  clear_has_workerendts();
}
inline ::google::protobuf::uint32 FriendWorkerCPP::workerendts() const {
  // @@protoc_insertion_point(field_get:ProtoFriendWorker.FriendWorkerCPP.workerEndTs)
  return workerendts_;
}
inline void FriendWorkerCPP::set_workerendts(::google::protobuf::uint32 value) {
  set_has_workerendts();
  workerendts_ = value;
  // @@protoc_insertion_point(field_set:ProtoFriendWorker.FriendWorkerCPP.workerEndTs)
}

// required uint32 workerSlotPos = 3;
inline bool FriendWorkerCPP::has_workerslotpos() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void FriendWorkerCPP::set_has_workerslotpos() {
  _has_bits_[0] |= 0x00000004u;
}
inline void FriendWorkerCPP::clear_has_workerslotpos() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void FriendWorkerCPP::clear_workerslotpos() {
  workerslotpos_ = 0u;
  clear_has_workerslotpos();
}
inline ::google::protobuf::uint32 FriendWorkerCPP::workerslotpos() const {
  // @@protoc_insertion_point(field_get:ProtoFriendWorker.FriendWorkerCPP.workerSlotPos)
  return workerslotpos_;
}
inline void FriendWorkerCPP::set_workerslotpos(::google::protobuf::uint32 value) {
  set_has_workerslotpos();
  workerslotpos_ = value;
  // @@protoc_insertion_point(field_set:ProtoFriendWorker.FriendWorkerCPP.workerSlotPos)
}

// optional uint32 workerInvitedTs = 4;
inline bool FriendWorkerCPP::has_workerinvitedts() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void FriendWorkerCPP::set_has_workerinvitedts() {
  _has_bits_[0] |= 0x00000008u;
}
inline void FriendWorkerCPP::clear_has_workerinvitedts() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void FriendWorkerCPP::clear_workerinvitedts() {
  workerinvitedts_ = 0u;
  clear_has_workerinvitedts();
}
inline ::google::protobuf::uint32 FriendWorkerCPP::workerinvitedts() const {
  // @@protoc_insertion_point(field_get:ProtoFriendWorker.FriendWorkerCPP.workerInvitedTs)
  return workerinvitedts_;
}
inline void FriendWorkerCPP::set_workerinvitedts(::google::protobuf::uint32 value) {
  set_has_workerinvitedts();
  workerinvitedts_ = value;
  // @@protoc_insertion_point(field_set:ProtoFriendWorker.FriendWorkerCPP.workerInvitedTs)
}

// -------------------------------------------------------------------

// SetFriendWorkerReq

// required uint32 othuid = 1;
inline bool SetFriendWorkerReq::has_othuid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SetFriendWorkerReq::set_has_othuid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SetFriendWorkerReq::clear_has_othuid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SetFriendWorkerReq::clear_othuid() {
  othuid_ = 0u;
  clear_has_othuid();
}
inline ::google::protobuf::uint32 SetFriendWorkerReq::othuid() const {
  // @@protoc_insertion_point(field_get:ProtoFriendWorker.SetFriendWorkerReq.othuid)
  return othuid_;
}
inline void SetFriendWorkerReq::set_othuid(::google::protobuf::uint32 value) {
  set_has_othuid();
  othuid_ = value;
  // @@protoc_insertion_point(field_set:ProtoFriendWorker.SetFriendWorkerReq.othuid)
}

// optional uint32 propsid = 2;
inline bool SetFriendWorkerReq::has_propsid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SetFriendWorkerReq::set_has_propsid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SetFriendWorkerReq::clear_has_propsid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SetFriendWorkerReq::clear_propsid() {
  propsid_ = 0u;
  clear_has_propsid();
}
inline ::google::protobuf::uint32 SetFriendWorkerReq::propsid() const {
  // @@protoc_insertion_point(field_get:ProtoFriendWorker.SetFriendWorkerReq.propsid)
  return propsid_;
}
inline void SetFriendWorkerReq::set_propsid(::google::protobuf::uint32 value) {
  set_has_propsid();
  propsid_ = value;
  // @@protoc_insertion_point(field_set:ProtoFriendWorker.SetFriendWorkerReq.propsid)
}

// repeated uint32 source = 3;
inline int SetFriendWorkerReq::source_size() const {
  return source_.size();
}
inline void SetFriendWorkerReq::clear_source() {
  source_.Clear();
}
inline ::google::protobuf::uint32 SetFriendWorkerReq::source(int index) const {
  // @@protoc_insertion_point(field_get:ProtoFriendWorker.SetFriendWorkerReq.source)
  return source_.Get(index);
}
inline void SetFriendWorkerReq::set_source(int index, ::google::protobuf::uint32 value) {
  source_.Set(index, value);
  // @@protoc_insertion_point(field_set:ProtoFriendWorker.SetFriendWorkerReq.source)
}
inline void SetFriendWorkerReq::add_source(::google::protobuf::uint32 value) {
  source_.Add(value);
  // @@protoc_insertion_point(field_add:ProtoFriendWorker.SetFriendWorkerReq.source)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
SetFriendWorkerReq::source() const {
  // @@protoc_insertion_point(field_list:ProtoFriendWorker.SetFriendWorkerReq.source)
  return source_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
SetFriendWorkerReq::mutable_source() {
  // @@protoc_insertion_point(field_mutable_list:ProtoFriendWorker.SetFriendWorkerReq.source)
  return &source_;
}

// -------------------------------------------------------------------

// SetFriendWorkerResp

// required uint32 status = 1;
inline bool SetFriendWorkerResp::has_status() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SetFriendWorkerResp::set_has_status() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SetFriendWorkerResp::clear_has_status() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SetFriendWorkerResp::clear_status() {
  status_ = 0u;
  clear_has_status();
}
inline ::google::protobuf::uint32 SetFriendWorkerResp::status() const {
  // @@protoc_insertion_point(field_get:ProtoFriendWorker.SetFriendWorkerResp.status)
  return status_;
}
inline void SetFriendWorkerResp::set_status(::google::protobuf::uint32 value) {
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:ProtoFriendWorker.SetFriendWorkerResp.status)
}

// -------------------------------------------------------------------

// PushInviteReardMsg

// required .DataCommon.CommonItemsCPP commons = 1;
inline bool PushInviteReardMsg::has_commons() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PushInviteReardMsg::set_has_commons() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PushInviteReardMsg::clear_has_commons() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PushInviteReardMsg::clear_commons() {
  if (commons_ != NULL) commons_->::DataCommon::CommonItemsCPP::Clear();
  clear_has_commons();
}
inline const ::DataCommon::CommonItemsCPP& PushInviteReardMsg::commons() const {
  // @@protoc_insertion_point(field_get:ProtoFriendWorker.PushInviteReardMsg.commons)
  return commons_ != NULL ? *commons_ : *default_instance_->commons_;
}
inline ::DataCommon::CommonItemsCPP* PushInviteReardMsg::mutable_commons() {
  set_has_commons();
  if (commons_ == NULL) commons_ = new ::DataCommon::CommonItemsCPP;
  // @@protoc_insertion_point(field_mutable:ProtoFriendWorker.PushInviteReardMsg.commons)
  return commons_;
}
inline ::DataCommon::CommonItemsCPP* PushInviteReardMsg::release_commons() {
  clear_has_commons();
  ::DataCommon::CommonItemsCPP* temp = commons_;
  commons_ = NULL;
  return temp;
}
inline void PushInviteReardMsg::set_allocated_commons(::DataCommon::CommonItemsCPP* commons) {
  delete commons_;
  commons_ = commons;
  if (commons) {
    set_has_commons();
  } else {
    clear_has_commons();
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoFriendWorker.PushInviteReardMsg.commons)
}

// -------------------------------------------------------------------

// CSSetFriendWorkerReq

// required uint32 othuid = 1;
inline bool CSSetFriendWorkerReq::has_othuid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSSetFriendWorkerReq::set_has_othuid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSSetFriendWorkerReq::clear_has_othuid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSSetFriendWorkerReq::clear_othuid() {
  othuid_ = 0u;
  clear_has_othuid();
}
inline ::google::protobuf::uint32 CSSetFriendWorkerReq::othuid() const {
  // @@protoc_insertion_point(field_get:ProtoFriendWorker.CSSetFriendWorkerReq.othuid)
  return othuid_;
}
inline void CSSetFriendWorkerReq::set_othuid(::google::protobuf::uint32 value) {
  set_has_othuid();
  othuid_ = value;
  // @@protoc_insertion_point(field_set:ProtoFriendWorker.CSSetFriendWorkerReq.othuid)
}

// required uint32 myuid = 2;
inline bool CSSetFriendWorkerReq::has_myuid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSSetFriendWorkerReq::set_has_myuid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSSetFriendWorkerReq::clear_has_myuid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSSetFriendWorkerReq::clear_myuid() {
  myuid_ = 0u;
  clear_has_myuid();
}
inline ::google::protobuf::uint32 CSSetFriendWorkerReq::myuid() const {
  // @@protoc_insertion_point(field_get:ProtoFriendWorker.CSSetFriendWorkerReq.myuid)
  return myuid_;
}
inline void CSSetFriendWorkerReq::set_myuid(::google::protobuf::uint32 value) {
  set_has_myuid();
  myuid_ = value;
  // @@protoc_insertion_point(field_set:ProtoFriendWorker.CSSetFriendWorkerReq.myuid)
}

// required uint32 propisid = 3;
inline bool CSSetFriendWorkerReq::has_propisid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSSetFriendWorkerReq::set_has_propisid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSSetFriendWorkerReq::clear_has_propisid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSSetFriendWorkerReq::clear_propisid() {
  propisid_ = 0u;
  clear_has_propisid();
}
inline ::google::protobuf::uint32 CSSetFriendWorkerReq::propisid() const {
  // @@protoc_insertion_point(field_get:ProtoFriendWorker.CSSetFriendWorkerReq.propisid)
  return propisid_;
}
inline void CSSetFriendWorkerReq::set_propisid(::google::protobuf::uint32 value) {
  set_has_propisid();
  propisid_ = value;
  // @@protoc_insertion_point(field_set:ProtoFriendWorker.CSSetFriendWorkerReq.propisid)
}

// required uint32 sourceType = 4;
inline bool CSSetFriendWorkerReq::has_sourcetype() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CSSetFriendWorkerReq::set_has_sourcetype() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CSSetFriendWorkerReq::clear_has_sourcetype() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CSSetFriendWorkerReq::clear_sourcetype() {
  sourcetype_ = 0u;
  clear_has_sourcetype();
}
inline ::google::protobuf::uint32 CSSetFriendWorkerReq::sourcetype() const {
  // @@protoc_insertion_point(field_get:ProtoFriendWorker.CSSetFriendWorkerReq.sourceType)
  return sourcetype_;
}
inline void CSSetFriendWorkerReq::set_sourcetype(::google::protobuf::uint32 value) {
  set_has_sourcetype();
  sourcetype_ = value;
  // @@protoc_insertion_point(field_set:ProtoFriendWorker.CSSetFriendWorkerReq.sourceType)
}

// required uint32 sourceFlag = 5;
inline bool CSSetFriendWorkerReq::has_sourceflag() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CSSetFriendWorkerReq::set_has_sourceflag() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CSSetFriendWorkerReq::clear_has_sourceflag() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CSSetFriendWorkerReq::clear_sourceflag() {
  sourceflag_ = 0u;
  clear_has_sourceflag();
}
inline ::google::protobuf::uint32 CSSetFriendWorkerReq::sourceflag() const {
  // @@protoc_insertion_point(field_get:ProtoFriendWorker.CSSetFriendWorkerReq.sourceFlag)
  return sourceflag_;
}
inline void CSSetFriendWorkerReq::set_sourceflag(::google::protobuf::uint32 value) {
  set_has_sourceflag();
  sourceflag_ = value;
  // @@protoc_insertion_point(field_set:ProtoFriendWorker.CSSetFriendWorkerReq.sourceFlag)
}

// -------------------------------------------------------------------

// CSSetFriendWorkerResp

// required uint32 othuid = 1;
inline bool CSSetFriendWorkerResp::has_othuid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSSetFriendWorkerResp::set_has_othuid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSSetFriendWorkerResp::clear_has_othuid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSSetFriendWorkerResp::clear_othuid() {
  othuid_ = 0u;
  clear_has_othuid();
}
inline ::google::protobuf::uint32 CSSetFriendWorkerResp::othuid() const {
  // @@protoc_insertion_point(field_get:ProtoFriendWorker.CSSetFriendWorkerResp.othuid)
  return othuid_;
}
inline void CSSetFriendWorkerResp::set_othuid(::google::protobuf::uint32 value) {
  set_has_othuid();
  othuid_ = value;
  // @@protoc_insertion_point(field_set:ProtoFriendWorker.CSSetFriendWorkerResp.othuid)
}

// required uint32 myuid = 2;
inline bool CSSetFriendWorkerResp::has_myuid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSSetFriendWorkerResp::set_has_myuid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSSetFriendWorkerResp::clear_has_myuid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSSetFriendWorkerResp::clear_myuid() {
  myuid_ = 0u;
  clear_has_myuid();
}
inline ::google::protobuf::uint32 CSSetFriendWorkerResp::myuid() const {
  // @@protoc_insertion_point(field_get:ProtoFriendWorker.CSSetFriendWorkerResp.myuid)
  return myuid_;
}
inline void CSSetFriendWorkerResp::set_myuid(::google::protobuf::uint32 value) {
  set_has_myuid();
  myuid_ = value;
  // @@protoc_insertion_point(field_set:ProtoFriendWorker.CSSetFriendWorkerResp.myuid)
}

// required uint32 stauts = 3;
inline bool CSSetFriendWorkerResp::has_stauts() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSSetFriendWorkerResp::set_has_stauts() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSSetFriendWorkerResp::clear_has_stauts() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSSetFriendWorkerResp::clear_stauts() {
  stauts_ = 0u;
  clear_has_stauts();
}
inline ::google::protobuf::uint32 CSSetFriendWorkerResp::stauts() const {
  // @@protoc_insertion_point(field_get:ProtoFriendWorker.CSSetFriendWorkerResp.stauts)
  return stauts_;
}
inline void CSSetFriendWorkerResp::set_stauts(::google::protobuf::uint32 value) {
  set_has_stauts();
  stauts_ = value;
  // @@protoc_insertion_point(field_set:ProtoFriendWorker.CSSetFriendWorkerResp.stauts)
}

// -------------------------------------------------------------------

// GetWorkerSpeedUpReq

// -------------------------------------------------------------------

// GetWorkerSpeedUpResp

// repeated .ProtoFriendWorker.FriendWorkerCPP friendworker = 1;
inline int GetWorkerSpeedUpResp::friendworker_size() const {
  return friendworker_.size();
}
inline void GetWorkerSpeedUpResp::clear_friendworker() {
  friendworker_.Clear();
}
inline const ::ProtoFriendWorker::FriendWorkerCPP& GetWorkerSpeedUpResp::friendworker(int index) const {
  // @@protoc_insertion_point(field_get:ProtoFriendWorker.GetWorkerSpeedUpResp.friendworker)
  return friendworker_.Get(index);
}
inline ::ProtoFriendWorker::FriendWorkerCPP* GetWorkerSpeedUpResp::mutable_friendworker(int index) {
  // @@protoc_insertion_point(field_mutable:ProtoFriendWorker.GetWorkerSpeedUpResp.friendworker)
  return friendworker_.Mutable(index);
}
inline ::ProtoFriendWorker::FriendWorkerCPP* GetWorkerSpeedUpResp::add_friendworker() {
  // @@protoc_insertion_point(field_add:ProtoFriendWorker.GetWorkerSpeedUpResp.friendworker)
  return friendworker_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ProtoFriendWorker::FriendWorkerCPP >&
GetWorkerSpeedUpResp::friendworker() const {
  // @@protoc_insertion_point(field_list:ProtoFriendWorker.GetWorkerSpeedUpResp.friendworker)
  return friendworker_;
}
inline ::google::protobuf::RepeatedPtrField< ::ProtoFriendWorker::FriendWorkerCPP >*
GetWorkerSpeedUpResp::mutable_friendworker() {
  // @@protoc_insertion_point(field_mutable_list:ProtoFriendWorker.GetWorkerSpeedUpResp.friendworker)
  return &friendworker_;
}

// -------------------------------------------------------------------

// SelectWorkerReq

// required uint32 workerUid = 1;
inline bool SelectWorkerReq::has_workeruid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SelectWorkerReq::set_has_workeruid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SelectWorkerReq::clear_has_workeruid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SelectWorkerReq::clear_workeruid() {
  workeruid_ = 0u;
  clear_has_workeruid();
}
inline ::google::protobuf::uint32 SelectWorkerReq::workeruid() const {
  // @@protoc_insertion_point(field_get:ProtoFriendWorker.SelectWorkerReq.workerUid)
  return workeruid_;
}
inline void SelectWorkerReq::set_workeruid(::google::protobuf::uint32 value) {
  set_has_workeruid();
  workeruid_ = value;
  // @@protoc_insertion_point(field_set:ProtoFriendWorker.SelectWorkerReq.workerUid)
}

// required uint32 pos = 2;
inline bool SelectWorkerReq::has_pos() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SelectWorkerReq::set_has_pos() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SelectWorkerReq::clear_has_pos() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SelectWorkerReq::clear_pos() {
  pos_ = 0u;
  clear_has_pos();
}
inline ::google::protobuf::uint32 SelectWorkerReq::pos() const {
  // @@protoc_insertion_point(field_get:ProtoFriendWorker.SelectWorkerReq.pos)
  return pos_;
}
inline void SelectWorkerReq::set_pos(::google::protobuf::uint32 value) {
  set_has_pos();
  pos_ = value;
  // @@protoc_insertion_point(field_set:ProtoFriendWorker.SelectWorkerReq.pos)
}

// -------------------------------------------------------------------

// SelectWorkerResp

// required .ProtoFriendWorker.FriendWorkerCPP friendworker = 1;
inline bool SelectWorkerResp::has_friendworker() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SelectWorkerResp::set_has_friendworker() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SelectWorkerResp::clear_has_friendworker() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SelectWorkerResp::clear_friendworker() {
  if (friendworker_ != NULL) friendworker_->::ProtoFriendWorker::FriendWorkerCPP::Clear();
  clear_has_friendworker();
}
inline const ::ProtoFriendWorker::FriendWorkerCPP& SelectWorkerResp::friendworker() const {
  // @@protoc_insertion_point(field_get:ProtoFriendWorker.SelectWorkerResp.friendworker)
  return friendworker_ != NULL ? *friendworker_ : *default_instance_->friendworker_;
}
inline ::ProtoFriendWorker::FriendWorkerCPP* SelectWorkerResp::mutable_friendworker() {
  set_has_friendworker();
  if (friendworker_ == NULL) friendworker_ = new ::ProtoFriendWorker::FriendWorkerCPP;
  // @@protoc_insertion_point(field_mutable:ProtoFriendWorker.SelectWorkerResp.friendworker)
  return friendworker_;
}
inline ::ProtoFriendWorker::FriendWorkerCPP* SelectWorkerResp::release_friendworker() {
  clear_has_friendworker();
  ::ProtoFriendWorker::FriendWorkerCPP* temp = friendworker_;
  friendworker_ = NULL;
  return temp;
}
inline void SelectWorkerResp::set_allocated_friendworker(::ProtoFriendWorker::FriendWorkerCPP* friendworker) {
  delete friendworker_;
  friendworker_ = friendworker;
  if (friendworker) {
    set_has_friendworker();
  } else {
    clear_has_friendworker();
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoFriendWorker.SelectWorkerResp.friendworker)
}

// -------------------------------------------------------------------

// ThanksWorkerReq

// required uint32 workerUid = 1;
inline bool ThanksWorkerReq::has_workeruid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ThanksWorkerReq::set_has_workeruid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ThanksWorkerReq::clear_has_workeruid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ThanksWorkerReq::clear_workeruid() {
  workeruid_ = 0u;
  clear_has_workeruid();
}
inline ::google::protobuf::uint32 ThanksWorkerReq::workeruid() const {
  // @@protoc_insertion_point(field_get:ProtoFriendWorker.ThanksWorkerReq.workerUid)
  return workeruid_;
}
inline void ThanksWorkerReq::set_workeruid(::google::protobuf::uint32 value) {
  set_has_workeruid();
  workeruid_ = value;
  // @@protoc_insertion_point(field_set:ProtoFriendWorker.ThanksWorkerReq.workerUid)
}

// -------------------------------------------------------------------

// ThanksWorkerResp

// required .ProtoFriendWorker.FriendWorkerCPP friendworker = 1;
inline bool ThanksWorkerResp::has_friendworker() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ThanksWorkerResp::set_has_friendworker() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ThanksWorkerResp::clear_has_friendworker() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ThanksWorkerResp::clear_friendworker() {
  if (friendworker_ != NULL) friendworker_->::ProtoFriendWorker::FriendWorkerCPP::Clear();
  clear_has_friendworker();
}
inline const ::ProtoFriendWorker::FriendWorkerCPP& ThanksWorkerResp::friendworker() const {
  // @@protoc_insertion_point(field_get:ProtoFriendWorker.ThanksWorkerResp.friendworker)
  return friendworker_ != NULL ? *friendworker_ : *default_instance_->friendworker_;
}
inline ::ProtoFriendWorker::FriendWorkerCPP* ThanksWorkerResp::mutable_friendworker() {
  set_has_friendworker();
  if (friendworker_ == NULL) friendworker_ = new ::ProtoFriendWorker::FriendWorkerCPP;
  // @@protoc_insertion_point(field_mutable:ProtoFriendWorker.ThanksWorkerResp.friendworker)
  return friendworker_;
}
inline ::ProtoFriendWorker::FriendWorkerCPP* ThanksWorkerResp::release_friendworker() {
  clear_has_friendworker();
  ::ProtoFriendWorker::FriendWorkerCPP* temp = friendworker_;
  friendworker_ = NULL;
  return temp;
}
inline void ThanksWorkerResp::set_allocated_friendworker(::ProtoFriendWorker::FriendWorkerCPP* friendworker) {
  delete friendworker_;
  friendworker_ = friendworker;
  if (friendworker) {
    set_has_friendworker();
  } else {
    clear_has_friendworker();
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoFriendWorker.ThanksWorkerResp.friendworker)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace ProtoFriendWorker

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_ProtoFriendWorker_2eproto__INCLUDED
