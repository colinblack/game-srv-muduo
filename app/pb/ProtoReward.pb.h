// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ProtoReward.proto

#ifndef PROTOBUF_ProtoReward_2eproto__INCLUDED
#define PROTOBUF_ProtoReward_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "DataCommon.pb.h"
#include "ProtoTheme.pb.h"
// @@protoc_insertion_point(includes)

namespace ProtoReward {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_ProtoReward_2eproto();
void protobuf_AssignDesc_ProtoReward_2eproto();
void protobuf_ShutdownFile_ProtoReward_2eproto();

class GetFirstRechargeRewardReq;
class GetFirstRechargeRewardResp;
class GetFollowPublicRewardReq;
class GetFollowPublicRewardResp;
class RewardInfo;
class FetchProductWatchAdsReward;
class FetchProductWatchAdsRewardReq;
class FetchProductWatchAdsRewardResp;

// ===================================================================

class GetFirstRechargeRewardReq : public ::google::protobuf::Message {
 public:
  GetFirstRechargeRewardReq();
  virtual ~GetFirstRechargeRewardReq();

  GetFirstRechargeRewardReq(const GetFirstRechargeRewardReq& from);

  inline GetFirstRechargeRewardReq& operator=(const GetFirstRechargeRewardReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetFirstRechargeRewardReq& default_instance();

  void Swap(GetFirstRechargeRewardReq* other);

  // implements Message ----------------------------------------------

  GetFirstRechargeRewardReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetFirstRechargeRewardReq& from);
  void MergeFrom(const GetFirstRechargeRewardReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:ProtoReward.GetFirstRechargeRewardReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_ProtoReward_2eproto();
  friend void protobuf_AssignDesc_ProtoReward_2eproto();
  friend void protobuf_ShutdownFile_ProtoReward_2eproto();

  void InitAsDefaultInstance();
  static GetFirstRechargeRewardReq* default_instance_;
};
// -------------------------------------------------------------------

class GetFirstRechargeRewardResp : public ::google::protobuf::Message {
 public:
  GetFirstRechargeRewardResp();
  virtual ~GetFirstRechargeRewardResp();

  GetFirstRechargeRewardResp(const GetFirstRechargeRewardResp& from);

  inline GetFirstRechargeRewardResp& operator=(const GetFirstRechargeRewardResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetFirstRechargeRewardResp& default_instance();

  void Swap(GetFirstRechargeRewardResp* other);

  // implements Message ----------------------------------------------

  GetFirstRechargeRewardResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetFirstRechargeRewardResp& from);
  void MergeFrom(const GetFirstRechargeRewardResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 firstRecharge = 1;
  inline bool has_firstrecharge() const;
  inline void clear_firstrecharge();
  static const int kFirstRechargeFieldNumber = 1;
  inline ::google::protobuf::uint32 firstrecharge() const;
  inline void set_firstrecharge(::google::protobuf::uint32 value);

  // required .DataCommon.CommonItemsCPP common = 2;
  inline bool has_common() const;
  inline void clear_common();
  static const int kCommonFieldNumber = 2;
  inline const ::DataCommon::CommonItemsCPP& common() const;
  inline ::DataCommon::CommonItemsCPP* mutable_common();
  inline ::DataCommon::CommonItemsCPP* release_common();
  inline void set_allocated_common(::DataCommon::CommonItemsCPP* common);

  // optional .ProtoTheme.ThemeInfoResp theme = 3;
  inline bool has_theme() const;
  inline void clear_theme();
  static const int kThemeFieldNumber = 3;
  inline const ::ProtoTheme::ThemeInfoResp& theme() const;
  inline ::ProtoTheme::ThemeInfoResp* mutable_theme();
  inline ::ProtoTheme::ThemeInfoResp* release_theme();
  inline void set_allocated_theme(::ProtoTheme::ThemeInfoResp* theme);

  // @@protoc_insertion_point(class_scope:ProtoReward.GetFirstRechargeRewardResp)
 private:
  inline void set_has_firstrecharge();
  inline void clear_has_firstrecharge();
  inline void set_has_common();
  inline void clear_has_common();
  inline void set_has_theme();
  inline void clear_has_theme();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::DataCommon::CommonItemsCPP* common_;
  ::ProtoTheme::ThemeInfoResp* theme_;
  ::google::protobuf::uint32 firstrecharge_;
  friend void  protobuf_AddDesc_ProtoReward_2eproto();
  friend void protobuf_AssignDesc_ProtoReward_2eproto();
  friend void protobuf_ShutdownFile_ProtoReward_2eproto();

  void InitAsDefaultInstance();
  static GetFirstRechargeRewardResp* default_instance_;
};
// -------------------------------------------------------------------

class GetFollowPublicRewardReq : public ::google::protobuf::Message {
 public:
  GetFollowPublicRewardReq();
  virtual ~GetFollowPublicRewardReq();

  GetFollowPublicRewardReq(const GetFollowPublicRewardReq& from);

  inline GetFollowPublicRewardReq& operator=(const GetFollowPublicRewardReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetFollowPublicRewardReq& default_instance();

  void Swap(GetFollowPublicRewardReq* other);

  // implements Message ----------------------------------------------

  GetFollowPublicRewardReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetFollowPublicRewardReq& from);
  void MergeFrom(const GetFollowPublicRewardReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:ProtoReward.GetFollowPublicRewardReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_ProtoReward_2eproto();
  friend void protobuf_AssignDesc_ProtoReward_2eproto();
  friend void protobuf_ShutdownFile_ProtoReward_2eproto();

  void InitAsDefaultInstance();
  static GetFollowPublicRewardReq* default_instance_;
};
// -------------------------------------------------------------------

class GetFollowPublicRewardResp : public ::google::protobuf::Message {
 public:
  GetFollowPublicRewardResp();
  virtual ~GetFollowPublicRewardResp();

  GetFollowPublicRewardResp(const GetFollowPublicRewardResp& from);

  inline GetFollowPublicRewardResp& operator=(const GetFollowPublicRewardResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetFollowPublicRewardResp& default_instance();

  void Swap(GetFollowPublicRewardResp* other);

  // implements Message ----------------------------------------------

  GetFollowPublicRewardResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetFollowPublicRewardResp& from);
  void MergeFrom(const GetFollowPublicRewardResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .DataCommon.CommonItemsCPP common = 1;
  inline bool has_common() const;
  inline void clear_common();
  static const int kCommonFieldNumber = 1;
  inline const ::DataCommon::CommonItemsCPP& common() const;
  inline ::DataCommon::CommonItemsCPP* mutable_common();
  inline ::DataCommon::CommonItemsCPP* release_common();
  inline void set_allocated_common(::DataCommon::CommonItemsCPP* common);

  // @@protoc_insertion_point(class_scope:ProtoReward.GetFollowPublicRewardResp)
 private:
  inline void set_has_common();
  inline void clear_has_common();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::DataCommon::CommonItemsCPP* common_;
  friend void  protobuf_AddDesc_ProtoReward_2eproto();
  friend void protobuf_AssignDesc_ProtoReward_2eproto();
  friend void protobuf_ShutdownFile_ProtoReward_2eproto();

  void InitAsDefaultInstance();
  static GetFollowPublicRewardResp* default_instance_;
};
// -------------------------------------------------------------------

class RewardInfo : public ::google::protobuf::Message {
 public:
  RewardInfo();
  virtual ~RewardInfo();

  RewardInfo(const RewardInfo& from);

  inline RewardInfo& operator=(const RewardInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RewardInfo& default_instance();

  void Swap(RewardInfo* other);

  // implements Message ----------------------------------------------

  RewardInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RewardInfo& from);
  void MergeFrom(const RewardInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .DataCommon.CommonItemsCPP common = 1;
  inline bool has_common() const;
  inline void clear_common();
  static const int kCommonFieldNumber = 1;
  inline const ::DataCommon::CommonItemsCPP& common() const;
  inline ::DataCommon::CommonItemsCPP* mutable_common();
  inline ::DataCommon::CommonItemsCPP* release_common();
  inline void set_allocated_common(::DataCommon::CommonItemsCPP* common);

  // @@protoc_insertion_point(class_scope:ProtoReward.RewardInfo)
 private:
  inline void set_has_common();
  inline void clear_has_common();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::DataCommon::CommonItemsCPP* common_;
  friend void  protobuf_AddDesc_ProtoReward_2eproto();
  friend void protobuf_AssignDesc_ProtoReward_2eproto();
  friend void protobuf_ShutdownFile_ProtoReward_2eproto();

  void InitAsDefaultInstance();
  static RewardInfo* default_instance_;
};
// -------------------------------------------------------------------

class FetchProductWatchAdsReward : public ::google::protobuf::Message {
 public:
  FetchProductWatchAdsReward();
  virtual ~FetchProductWatchAdsReward();

  FetchProductWatchAdsReward(const FetchProductWatchAdsReward& from);

  inline FetchProductWatchAdsReward& operator=(const FetchProductWatchAdsReward& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FetchProductWatchAdsReward& default_instance();

  void Swap(FetchProductWatchAdsReward* other);

  // implements Message ----------------------------------------------

  FetchProductWatchAdsReward* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FetchProductWatchAdsReward& from);
  void MergeFrom(const FetchProductWatchAdsReward& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 propsId = 1;
  inline bool has_propsid() const;
  inline void clear_propsid();
  static const int kPropsIdFieldNumber = 1;
  inline ::google::protobuf::uint32 propsid() const;
  inline void set_propsid(::google::protobuf::uint32 value);

  // required uint32 count = 2;
  inline bool has_count() const;
  inline void clear_count();
  static const int kCountFieldNumber = 2;
  inline ::google::protobuf::uint32 count() const;
  inline void set_count(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoReward.FetchProductWatchAdsReward)
 private:
  inline void set_has_propsid();
  inline void clear_has_propsid();
  inline void set_has_count();
  inline void clear_has_count();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 propsid_;
  ::google::protobuf::uint32 count_;
  friend void  protobuf_AddDesc_ProtoReward_2eproto();
  friend void protobuf_AssignDesc_ProtoReward_2eproto();
  friend void protobuf_ShutdownFile_ProtoReward_2eproto();

  void InitAsDefaultInstance();
  static FetchProductWatchAdsReward* default_instance_;
};
// -------------------------------------------------------------------

class FetchProductWatchAdsRewardReq : public ::google::protobuf::Message {
 public:
  FetchProductWatchAdsRewardReq();
  virtual ~FetchProductWatchAdsRewardReq();

  FetchProductWatchAdsRewardReq(const FetchProductWatchAdsRewardReq& from);

  inline FetchProductWatchAdsRewardReq& operator=(const FetchProductWatchAdsRewardReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FetchProductWatchAdsRewardReq& default_instance();

  void Swap(FetchProductWatchAdsRewardReq* other);

  // implements Message ----------------------------------------------

  FetchProductWatchAdsRewardReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FetchProductWatchAdsRewardReq& from);
  void MergeFrom(const FetchProductWatchAdsRewardReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:ProtoReward.FetchProductWatchAdsRewardReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_ProtoReward_2eproto();
  friend void protobuf_AssignDesc_ProtoReward_2eproto();
  friend void protobuf_ShutdownFile_ProtoReward_2eproto();

  void InitAsDefaultInstance();
  static FetchProductWatchAdsRewardReq* default_instance_;
};
// -------------------------------------------------------------------

class FetchProductWatchAdsRewardResp : public ::google::protobuf::Message {
 public:
  FetchProductWatchAdsRewardResp();
  virtual ~FetchProductWatchAdsRewardResp();

  FetchProductWatchAdsRewardResp(const FetchProductWatchAdsRewardResp& from);

  inline FetchProductWatchAdsRewardResp& operator=(const FetchProductWatchAdsRewardResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FetchProductWatchAdsRewardResp& default_instance();

  void Swap(FetchProductWatchAdsRewardResp* other);

  // implements Message ----------------------------------------------

  FetchProductWatchAdsRewardResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FetchProductWatchAdsRewardResp& from);
  void MergeFrom(const FetchProductWatchAdsRewardResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .DataCommon.CommonItemsCPP common = 1;
  inline bool has_common() const;
  inline void clear_common();
  static const int kCommonFieldNumber = 1;
  inline const ::DataCommon::CommonItemsCPP& common() const;
  inline ::DataCommon::CommonItemsCPP* mutable_common();
  inline ::DataCommon::CommonItemsCPP* release_common();
  inline void set_allocated_common(::DataCommon::CommonItemsCPP* common);

  // @@protoc_insertion_point(class_scope:ProtoReward.FetchProductWatchAdsRewardResp)
 private:
  inline void set_has_common();
  inline void clear_has_common();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::DataCommon::CommonItemsCPP* common_;
  friend void  protobuf_AddDesc_ProtoReward_2eproto();
  friend void protobuf_AssignDesc_ProtoReward_2eproto();
  friend void protobuf_ShutdownFile_ProtoReward_2eproto();

  void InitAsDefaultInstance();
  static FetchProductWatchAdsRewardResp* default_instance_;
};
// ===================================================================


// ===================================================================

// GetFirstRechargeRewardReq

// -------------------------------------------------------------------

// GetFirstRechargeRewardResp

// required uint32 firstRecharge = 1;
inline bool GetFirstRechargeRewardResp::has_firstrecharge() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetFirstRechargeRewardResp::set_has_firstrecharge() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetFirstRechargeRewardResp::clear_has_firstrecharge() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetFirstRechargeRewardResp::clear_firstrecharge() {
  firstrecharge_ = 0u;
  clear_has_firstrecharge();
}
inline ::google::protobuf::uint32 GetFirstRechargeRewardResp::firstrecharge() const {
  // @@protoc_insertion_point(field_get:ProtoReward.GetFirstRechargeRewardResp.firstRecharge)
  return firstrecharge_;
}
inline void GetFirstRechargeRewardResp::set_firstrecharge(::google::protobuf::uint32 value) {
  set_has_firstrecharge();
  firstrecharge_ = value;
  // @@protoc_insertion_point(field_set:ProtoReward.GetFirstRechargeRewardResp.firstRecharge)
}

// required .DataCommon.CommonItemsCPP common = 2;
inline bool GetFirstRechargeRewardResp::has_common() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetFirstRechargeRewardResp::set_has_common() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetFirstRechargeRewardResp::clear_has_common() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetFirstRechargeRewardResp::clear_common() {
  if (common_ != NULL) common_->::DataCommon::CommonItemsCPP::Clear();
  clear_has_common();
}
inline const ::DataCommon::CommonItemsCPP& GetFirstRechargeRewardResp::common() const {
  // @@protoc_insertion_point(field_get:ProtoReward.GetFirstRechargeRewardResp.common)
  return common_ != NULL ? *common_ : *default_instance_->common_;
}
inline ::DataCommon::CommonItemsCPP* GetFirstRechargeRewardResp::mutable_common() {
  set_has_common();
  if (common_ == NULL) common_ = new ::DataCommon::CommonItemsCPP;
  // @@protoc_insertion_point(field_mutable:ProtoReward.GetFirstRechargeRewardResp.common)
  return common_;
}
inline ::DataCommon::CommonItemsCPP* GetFirstRechargeRewardResp::release_common() {
  clear_has_common();
  ::DataCommon::CommonItemsCPP* temp = common_;
  common_ = NULL;
  return temp;
}
inline void GetFirstRechargeRewardResp::set_allocated_common(::DataCommon::CommonItemsCPP* common) {
  delete common_;
  common_ = common;
  if (common) {
    set_has_common();
  } else {
    clear_has_common();
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoReward.GetFirstRechargeRewardResp.common)
}

// optional .ProtoTheme.ThemeInfoResp theme = 3;
inline bool GetFirstRechargeRewardResp::has_theme() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GetFirstRechargeRewardResp::set_has_theme() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GetFirstRechargeRewardResp::clear_has_theme() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GetFirstRechargeRewardResp::clear_theme() {
  if (theme_ != NULL) theme_->::ProtoTheme::ThemeInfoResp::Clear();
  clear_has_theme();
}
inline const ::ProtoTheme::ThemeInfoResp& GetFirstRechargeRewardResp::theme() const {
  // @@protoc_insertion_point(field_get:ProtoReward.GetFirstRechargeRewardResp.theme)
  return theme_ != NULL ? *theme_ : *default_instance_->theme_;
}
inline ::ProtoTheme::ThemeInfoResp* GetFirstRechargeRewardResp::mutable_theme() {
  set_has_theme();
  if (theme_ == NULL) theme_ = new ::ProtoTheme::ThemeInfoResp;
  // @@protoc_insertion_point(field_mutable:ProtoReward.GetFirstRechargeRewardResp.theme)
  return theme_;
}
inline ::ProtoTheme::ThemeInfoResp* GetFirstRechargeRewardResp::release_theme() {
  clear_has_theme();
  ::ProtoTheme::ThemeInfoResp* temp = theme_;
  theme_ = NULL;
  return temp;
}
inline void GetFirstRechargeRewardResp::set_allocated_theme(::ProtoTheme::ThemeInfoResp* theme) {
  delete theme_;
  theme_ = theme;
  if (theme) {
    set_has_theme();
  } else {
    clear_has_theme();
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoReward.GetFirstRechargeRewardResp.theme)
}

// -------------------------------------------------------------------

// GetFollowPublicRewardReq

// -------------------------------------------------------------------

// GetFollowPublicRewardResp

// required .DataCommon.CommonItemsCPP common = 1;
inline bool GetFollowPublicRewardResp::has_common() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetFollowPublicRewardResp::set_has_common() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetFollowPublicRewardResp::clear_has_common() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetFollowPublicRewardResp::clear_common() {
  if (common_ != NULL) common_->::DataCommon::CommonItemsCPP::Clear();
  clear_has_common();
}
inline const ::DataCommon::CommonItemsCPP& GetFollowPublicRewardResp::common() const {
  // @@protoc_insertion_point(field_get:ProtoReward.GetFollowPublicRewardResp.common)
  return common_ != NULL ? *common_ : *default_instance_->common_;
}
inline ::DataCommon::CommonItemsCPP* GetFollowPublicRewardResp::mutable_common() {
  set_has_common();
  if (common_ == NULL) common_ = new ::DataCommon::CommonItemsCPP;
  // @@protoc_insertion_point(field_mutable:ProtoReward.GetFollowPublicRewardResp.common)
  return common_;
}
inline ::DataCommon::CommonItemsCPP* GetFollowPublicRewardResp::release_common() {
  clear_has_common();
  ::DataCommon::CommonItemsCPP* temp = common_;
  common_ = NULL;
  return temp;
}
inline void GetFollowPublicRewardResp::set_allocated_common(::DataCommon::CommonItemsCPP* common) {
  delete common_;
  common_ = common;
  if (common) {
    set_has_common();
  } else {
    clear_has_common();
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoReward.GetFollowPublicRewardResp.common)
}

// -------------------------------------------------------------------

// RewardInfo

// required .DataCommon.CommonItemsCPP common = 1;
inline bool RewardInfo::has_common() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RewardInfo::set_has_common() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RewardInfo::clear_has_common() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RewardInfo::clear_common() {
  if (common_ != NULL) common_->::DataCommon::CommonItemsCPP::Clear();
  clear_has_common();
}
inline const ::DataCommon::CommonItemsCPP& RewardInfo::common() const {
  // @@protoc_insertion_point(field_get:ProtoReward.RewardInfo.common)
  return common_ != NULL ? *common_ : *default_instance_->common_;
}
inline ::DataCommon::CommonItemsCPP* RewardInfo::mutable_common() {
  set_has_common();
  if (common_ == NULL) common_ = new ::DataCommon::CommonItemsCPP;
  // @@protoc_insertion_point(field_mutable:ProtoReward.RewardInfo.common)
  return common_;
}
inline ::DataCommon::CommonItemsCPP* RewardInfo::release_common() {
  clear_has_common();
  ::DataCommon::CommonItemsCPP* temp = common_;
  common_ = NULL;
  return temp;
}
inline void RewardInfo::set_allocated_common(::DataCommon::CommonItemsCPP* common) {
  delete common_;
  common_ = common;
  if (common) {
    set_has_common();
  } else {
    clear_has_common();
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoReward.RewardInfo.common)
}

// -------------------------------------------------------------------

// FetchProductWatchAdsReward

// required uint32 propsId = 1;
inline bool FetchProductWatchAdsReward::has_propsid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FetchProductWatchAdsReward::set_has_propsid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FetchProductWatchAdsReward::clear_has_propsid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FetchProductWatchAdsReward::clear_propsid() {
  propsid_ = 0u;
  clear_has_propsid();
}
inline ::google::protobuf::uint32 FetchProductWatchAdsReward::propsid() const {
  // @@protoc_insertion_point(field_get:ProtoReward.FetchProductWatchAdsReward.propsId)
  return propsid_;
}
inline void FetchProductWatchAdsReward::set_propsid(::google::protobuf::uint32 value) {
  set_has_propsid();
  propsid_ = value;
  // @@protoc_insertion_point(field_set:ProtoReward.FetchProductWatchAdsReward.propsId)
}

// required uint32 count = 2;
inline bool FetchProductWatchAdsReward::has_count() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FetchProductWatchAdsReward::set_has_count() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FetchProductWatchAdsReward::clear_has_count() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FetchProductWatchAdsReward::clear_count() {
  count_ = 0u;
  clear_has_count();
}
inline ::google::protobuf::uint32 FetchProductWatchAdsReward::count() const {
  // @@protoc_insertion_point(field_get:ProtoReward.FetchProductWatchAdsReward.count)
  return count_;
}
inline void FetchProductWatchAdsReward::set_count(::google::protobuf::uint32 value) {
  set_has_count();
  count_ = value;
  // @@protoc_insertion_point(field_set:ProtoReward.FetchProductWatchAdsReward.count)
}

// -------------------------------------------------------------------

// FetchProductWatchAdsRewardReq

// -------------------------------------------------------------------

// FetchProductWatchAdsRewardResp

// required .DataCommon.CommonItemsCPP common = 1;
inline bool FetchProductWatchAdsRewardResp::has_common() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FetchProductWatchAdsRewardResp::set_has_common() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FetchProductWatchAdsRewardResp::clear_has_common() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FetchProductWatchAdsRewardResp::clear_common() {
  if (common_ != NULL) common_->::DataCommon::CommonItemsCPP::Clear();
  clear_has_common();
}
inline const ::DataCommon::CommonItemsCPP& FetchProductWatchAdsRewardResp::common() const {
  // @@protoc_insertion_point(field_get:ProtoReward.FetchProductWatchAdsRewardResp.common)
  return common_ != NULL ? *common_ : *default_instance_->common_;
}
inline ::DataCommon::CommonItemsCPP* FetchProductWatchAdsRewardResp::mutable_common() {
  set_has_common();
  if (common_ == NULL) common_ = new ::DataCommon::CommonItemsCPP;
  // @@protoc_insertion_point(field_mutable:ProtoReward.FetchProductWatchAdsRewardResp.common)
  return common_;
}
inline ::DataCommon::CommonItemsCPP* FetchProductWatchAdsRewardResp::release_common() {
  clear_has_common();
  ::DataCommon::CommonItemsCPP* temp = common_;
  common_ = NULL;
  return temp;
}
inline void FetchProductWatchAdsRewardResp::set_allocated_common(::DataCommon::CommonItemsCPP* common) {
  delete common_;
  common_ = common;
  if (common) {
    set_has_common();
  } else {
    clear_has_common();
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoReward.FetchProductWatchAdsRewardResp.common)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace ProtoReward

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_ProtoReward_2eproto__INCLUDED
