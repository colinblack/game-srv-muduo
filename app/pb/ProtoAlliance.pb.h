// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ProtoAlliance.proto

#ifndef PROTOBUF_ProtoAlliance_2eproto__INCLUDED
#define PROTOBUF_ProtoAlliance_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "DataCommon.pb.h"
// @@protoc_insertion_point(includes)

namespace ProtoAlliance {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_ProtoAlliance_2eproto();
void protobuf_AssignDesc_ProtoAlliance_2eproto();
void protobuf_ShutdownFile_ProtoAlliance_2eproto();

class AllianceCPP;
class AllianceMemberCPP;
class AllianceApplyCPP;
class AllianceInvitedCPP;
class CheckNameAvailableReq;
class CheckNameAvailableResp;
class CreateAllianceReq;
class CreateAllianceResp;
class RecommendllianceReq;
class PartAllianceCPP;
class RecommendllianceResp;
class GetPartAllianceInfoReq;
class GetPartAllianceInfoResp;
class ApplyJoinReq;
class RequestApplyJoinBC;
class ReplyApplyJoinBC;
class ApplyJoinResp;
class ApproveJoinReq;
class RequestApproveJoinAllianceBC;
class RequestApproveJoinUserBC;
class ReplyApproveJoinBC;
class ApproveJoinResp;
class ExitAllianceReq;
class RequestExitAllianceBC;
class ReplyExitAllianceBC;
class ExitAllianceResp;
class PostionChangePushReq;
class InviteJoinReq;
class RequestInviteJoinBC;
class RequestInviteJoinUserBC;
class ReplyInviteJoinBC;
class InviteJoinResp;
class InvitedPushReq;
class AcceptInviteReq;
class RequestAcceptInviteBC;
class ReplyAcceptInviteBC;
class AcceptInviteResp;
class ManipulateMemberReq;
class RequestManipulateMemberBC;
class ReplyManipulateMemberBC;
class ManipulateMemberResp;
class KickOutReq;
class RequestKickOutBC;
class ReplyKickOutBC;
class RequestKickOutMemberBC;
class KickOutResp;
class TransferReq;
class RequestTransferBC;
class ReplyTransferBC;
class TransferResp;
class EditAllianceReq;
class RequestEditAllianceBC;
class ReplyEditAllianceBC;
class EditAllianceResp;
class AllianceDonationCPP;
class SeekDonationReq;
class RequestSeekDonationBC;
class ReplySeekDonationBC;
class SeekDonationResp;
class CutUpDonationCDReq;
class CutUpDonationCDResp;
class OfferDonationReq;
class RequestOfferDonationBC;
class ReplyOfferDonationBC;
class OfferDonationResp;
class FetchDonationReq;
class RequestFetchDonationBC;
class ReplyFetchDonationBC;
class FetchDonationResp;
class AllianceNotifyCPP;
class SendNotifyReq;
class RequestSendNotifyBC;
class ReplySendNotifyBC;
class SendNotifyResp;
class DelNotifyReq;
class RequestDelNotifyBC;
class ReplyDelNotifyBC;
class DelNotifyResp;
class AidInfoCPP;
class GetAllianceFunctionReq;
class GetAllianceFunctionResp;
class RequestAllianceFunctionBC;
class ReplyAllianceFunctionBC;
class GetNotifyReq;
class GetNotifyResp;
class RequestAllianceNotifyBC;
class ReplyAllianceNotifyBC;
class GetMemberReq;
class RequestAllianceMemberBC;
class ReplyAllianceMemberBC;
class GetMemberResp;
class RequestAlliance;
class RequestAllianceBC;
class ReplyAllianceBC;
class RequestUpdateMemberBC;
class RequestAddMemberHelpTimesBC;
class RequestAllianceRaceSetFlag;
class RequestAllianceRaceSetFlagBC;
class RequestAllianceRaceMemberProgress;
class RequestAllianceRaceMemberProgressBC;
class ReplyAllianceRaceMemberProgress;
class RequestAllianceRaceInfo;
class RequestAllianceRaceInfoBC;
class ReplyAllianceRaceInfo;
class AllianceRaceOrder;
class AllianceRaceMemberOrder;
class RequestAllianceRaceOrder;
class RequestAllianceRaceOrderBC;
class ReplyAllianceRaceOrder;
class RequestAllianceRaceOperateOrder;
class RequestAllianceRaceOperateOrderBC;
class ReplyAllianceRaceOperateOrder;
class RequestAllianceRaceMemberDelOrder;
class RequestAllianceRaceMemberDelOrderBC;
class RequestAllianceRaceMemberUpdateOrderBC;
class RequestAllianceRaceBuyOrder;
class RequestAllianceRaceBuyOrderBC;
class ReplyAllianceRaceBuyOrder;
class RequestAllianceRaceWatchAd;
class ReplyAllianceRaceWatchAd;
class RequestAllianceRaceWatchAdBC;
class RequestAllianceRaceReward;
class RequestAllianceRaceRewardBC;
class ReplyAllianceRaceReward;
class RequestAllianceRaceTakeGradeReward;
class RequestAllianceRaceTakeGradeRewardBC;
class ReplyAllianceRaceTakeGradeReward;
class RequestAllianceRaceTakeStageReward;
class RequestAllianceRaceTakeStageRewardBC;
class ReplyAllianceRaceTakeStageReward;
class RequestAllianceRaceRefreshStageReward;
class RequestAllianceRaceRefreshStageRewardBC;
class ReplyAllianceRaceRefreshStageReward;
class AllianceRaceMemberOrderLogItem;
class RequestAllianceRaceMemberOrderLog;
class RequestAllianceRaceMemberOrderLogBC;
class ReplyAllianceRaceMemberOrderLog;
class AllianceRacePersonOrderLogItem;
class RequestAllianceRacePersonOrderLog;
class RequestAllianceRacePersonOrderLogBC;
class ReplyAllianceRacePersonOrderLog;
class SetAllianceRaceGroupPointBC;
class AllianceRaceGroupMember;
class RequestAllianceRaceGroupMember;
class RequestAllianceRaceGroupMemberBC;
class ReplyAllianceRaceGroupMember;

// ===================================================================

class AllianceCPP : public ::google::protobuf::Message {
 public:
  AllianceCPP();
  virtual ~AllianceCPP();

  AllianceCPP(const AllianceCPP& from);

  inline AllianceCPP& operator=(const AllianceCPP& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AllianceCPP& default_instance();

  void Swap(AllianceCPP* other);

  // implements Message ----------------------------------------------

  AllianceCPP* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AllianceCPP& from);
  void MergeFrom(const AllianceCPP& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 allianceId = 1;
  inline bool has_allianceid() const;
  inline void clear_allianceid();
  static const int kAllianceIdFieldNumber = 1;
  inline ::google::protobuf::uint32 allianceid() const;
  inline void set_allianceid(::google::protobuf::uint32 value);

  // required bytes name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const void* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // required uint32 flag = 3;
  inline bool has_flag() const;
  inline void clear_flag();
  static const int kFlagFieldNumber = 3;
  inline ::google::protobuf::uint32 flag() const;
  inline void set_flag(::google::protobuf::uint32 value);

  // required uint32 createUid = 4;
  inline bool has_createuid() const;
  inline void clear_createuid();
  static const int kCreateUidFieldNumber = 4;
  inline ::google::protobuf::uint32 createuid() const;
  inline void set_createuid(::google::protobuf::uint32 value);

  // required bytes username = 5;
  inline bool has_username() const;
  inline void clear_username();
  static const int kUsernameFieldNumber = 5;
  inline const ::std::string& username() const;
  inline void set_username(const ::std::string& value);
  inline void set_username(const char* value);
  inline void set_username(const void* value, size_t size);
  inline ::std::string* mutable_username();
  inline ::std::string* release_username();
  inline void set_allocated_username(::std::string* username);

  // required uint32 createTime = 6;
  inline bool has_createtime() const;
  inline void clear_createtime();
  static const int kCreateTimeFieldNumber = 6;
  inline ::google::protobuf::uint32 createtime() const;
  inline void set_createtime(::google::protobuf::uint32 value);

  // required uint32 applyType = 7;
  inline bool has_applytype() const;
  inline void clear_applytype();
  static const int kApplyTypeFieldNumber = 7;
  inline ::google::protobuf::uint32 applytype() const;
  inline void set_applytype(::google::protobuf::uint32 value);

  // required uint32 applyLevelLimit = 8;
  inline bool has_applylevellimit() const;
  inline void clear_applylevellimit();
  static const int kApplyLevelLimitFieldNumber = 8;
  inline ::google::protobuf::uint32 applylevellimit() const;
  inline void set_applylevellimit(::google::protobuf::uint32 value);

  // optional bytes description = 9;
  inline bool has_description() const;
  inline void clear_description();
  static const int kDescriptionFieldNumber = 9;
  inline const ::std::string& description() const;
  inline void set_description(const ::std::string& value);
  inline void set_description(const char* value);
  inline void set_description(const void* value, size_t size);
  inline ::std::string* mutable_description();
  inline ::std::string* release_description();
  inline void set_allocated_description(::std::string* description);

  // required uint32 qqgroup = 10;
  inline bool has_qqgroup() const;
  inline void clear_qqgroup();
  static const int kQqgroupFieldNumber = 10;
  inline ::google::protobuf::uint32 qqgroup() const;
  inline void set_qqgroup(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoAlliance.AllianceCPP)
 private:
  inline void set_has_allianceid();
  inline void clear_has_allianceid();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_flag();
  inline void clear_has_flag();
  inline void set_has_createuid();
  inline void clear_has_createuid();
  inline void set_has_username();
  inline void clear_has_username();
  inline void set_has_createtime();
  inline void clear_has_createtime();
  inline void set_has_applytype();
  inline void clear_has_applytype();
  inline void set_has_applylevellimit();
  inline void clear_has_applylevellimit();
  inline void set_has_description();
  inline void clear_has_description();
  inline void set_has_qqgroup();
  inline void clear_has_qqgroup();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* name_;
  ::google::protobuf::uint32 allianceid_;
  ::google::protobuf::uint32 flag_;
  ::std::string* username_;
  ::google::protobuf::uint32 createuid_;
  ::google::protobuf::uint32 createtime_;
  ::google::protobuf::uint32 applytype_;
  ::google::protobuf::uint32 applylevellimit_;
  ::std::string* description_;
  ::google::protobuf::uint32 qqgroup_;
  friend void  protobuf_AddDesc_ProtoAlliance_2eproto();
  friend void protobuf_AssignDesc_ProtoAlliance_2eproto();
  friend void protobuf_ShutdownFile_ProtoAlliance_2eproto();

  void InitAsDefaultInstance();
  static AllianceCPP* default_instance_;
};
// -------------------------------------------------------------------

class AllianceMemberCPP : public ::google::protobuf::Message {
 public:
  AllianceMemberCPP();
  virtual ~AllianceMemberCPP();

  AllianceMemberCPP(const AllianceMemberCPP& from);

  inline AllianceMemberCPP& operator=(const AllianceMemberCPP& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AllianceMemberCPP& default_instance();

  void Swap(AllianceMemberCPP* other);

  // implements Message ----------------------------------------------

  AllianceMemberCPP* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AllianceMemberCPP& from);
  void MergeFrom(const AllianceMemberCPP& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 memberUid = 1;
  inline bool has_memberuid() const;
  inline void clear_memberuid();
  static const int kMemberUidFieldNumber = 1;
  inline ::google::protobuf::uint32 memberuid() const;
  inline void set_memberuid(::google::protobuf::uint32 value);

  // optional bytes name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const void* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // required uint32 position = 3;
  inline bool has_position() const;
  inline void clear_position();
  static const int kPositionFieldNumber = 3;
  inline ::google::protobuf::uint32 position() const;
  inline void set_position(::google::protobuf::uint32 value);

  // required uint32 authority = 4;
  inline bool has_authority() const;
  inline void clear_authority();
  static const int kAuthorityFieldNumber = 4;
  inline ::google::protobuf::uint32 authority() const;
  inline void set_authority(::google::protobuf::uint32 value);

  // required uint32 helptimes = 5;
  inline bool has_helptimes() const;
  inline void clear_helptimes();
  static const int kHelptimesFieldNumber = 5;
  inline ::google::protobuf::uint32 helptimes() const;
  inline void set_helptimes(::google::protobuf::uint32 value);

  // required uint32 onlineTs = 6;
  inline bool has_onlinets() const;
  inline void clear_onlinets();
  static const int kOnlineTsFieldNumber = 6;
  inline ::google::protobuf::uint32 onlinets() const;
  inline void set_onlinets(::google::protobuf::uint32 value);

  // optional uint32 helpTs = 7;
  inline bool has_helpts() const;
  inline void clear_helpts();
  static const int kHelpTsFieldNumber = 7;
  inline ::google::protobuf::uint32 helpts() const;
  inline void set_helpts(::google::protobuf::uint32 value);

  // required uint32 level = 8;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 8;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);

  // optional bytes fig = 9;
  inline bool has_fig() const;
  inline void clear_fig();
  static const int kFigFieldNumber = 9;
  inline const ::std::string& fig() const;
  inline void set_fig(const ::std::string& value);
  inline void set_fig(const char* value);
  inline void set_fig(const void* value, size_t size);
  inline ::std::string* mutable_fig();
  inline ::std::string* release_fig();
  inline void set_allocated_fig(::std::string* fig);

  // optional uint32 joinTs = 10;
  inline bool has_joints() const;
  inline void clear_joints();
  static const int kJoinTsFieldNumber = 10;
  inline ::google::protobuf::uint32 joints() const;
  inline void set_joints(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoAlliance.AllianceMemberCPP)
 private:
  inline void set_has_memberuid();
  inline void clear_has_memberuid();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_position();
  inline void clear_has_position();
  inline void set_has_authority();
  inline void clear_has_authority();
  inline void set_has_helptimes();
  inline void clear_has_helptimes();
  inline void set_has_onlinets();
  inline void clear_has_onlinets();
  inline void set_has_helpts();
  inline void clear_has_helpts();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_fig();
  inline void clear_has_fig();
  inline void set_has_joints();
  inline void clear_has_joints();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* name_;
  ::google::protobuf::uint32 memberuid_;
  ::google::protobuf::uint32 position_;
  ::google::protobuf::uint32 authority_;
  ::google::protobuf::uint32 helptimes_;
  ::google::protobuf::uint32 onlinets_;
  ::google::protobuf::uint32 helpts_;
  ::std::string* fig_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint32 joints_;
  friend void  protobuf_AddDesc_ProtoAlliance_2eproto();
  friend void protobuf_AssignDesc_ProtoAlliance_2eproto();
  friend void protobuf_ShutdownFile_ProtoAlliance_2eproto();

  void InitAsDefaultInstance();
  static AllianceMemberCPP* default_instance_;
};
// -------------------------------------------------------------------

class AllianceApplyCPP : public ::google::protobuf::Message {
 public:
  AllianceApplyCPP();
  virtual ~AllianceApplyCPP();

  AllianceApplyCPP(const AllianceApplyCPP& from);

  inline AllianceApplyCPP& operator=(const AllianceApplyCPP& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AllianceApplyCPP& default_instance();

  void Swap(AllianceApplyCPP* other);

  // implements Message ----------------------------------------------

  AllianceApplyCPP* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AllianceApplyCPP& from);
  void MergeFrom(const AllianceApplyCPP& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 applyUid = 1;
  inline bool has_applyuid() const;
  inline void clear_applyuid();
  static const int kApplyUidFieldNumber = 1;
  inline ::google::protobuf::uint32 applyuid() const;
  inline void set_applyuid(::google::protobuf::uint32 value);

  // optional bytes name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const void* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // required bytes reason = 3;
  inline bool has_reason() const;
  inline void clear_reason();
  static const int kReasonFieldNumber = 3;
  inline const ::std::string& reason() const;
  inline void set_reason(const ::std::string& value);
  inline void set_reason(const char* value);
  inline void set_reason(const void* value, size_t size);
  inline ::std::string* mutable_reason();
  inline ::std::string* release_reason();
  inline void set_allocated_reason(::std::string* reason);

  // required uint32 applyts = 4;
  inline bool has_applyts() const;
  inline void clear_applyts();
  static const int kApplytsFieldNumber = 4;
  inline ::google::protobuf::uint32 applyts() const;
  inline void set_applyts(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoAlliance.AllianceApplyCPP)
 private:
  inline void set_has_applyuid();
  inline void clear_has_applyuid();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_reason();
  inline void clear_has_reason();
  inline void set_has_applyts();
  inline void clear_has_applyts();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* name_;
  ::google::protobuf::uint32 applyuid_;
  ::google::protobuf::uint32 applyts_;
  ::std::string* reason_;
  friend void  protobuf_AddDesc_ProtoAlliance_2eproto();
  friend void protobuf_AssignDesc_ProtoAlliance_2eproto();
  friend void protobuf_ShutdownFile_ProtoAlliance_2eproto();

  void InitAsDefaultInstance();
  static AllianceApplyCPP* default_instance_;
};
// -------------------------------------------------------------------

class AllianceInvitedCPP : public ::google::protobuf::Message {
 public:
  AllianceInvitedCPP();
  virtual ~AllianceInvitedCPP();

  AllianceInvitedCPP(const AllianceInvitedCPP& from);

  inline AllianceInvitedCPP& operator=(const AllianceInvitedCPP& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AllianceInvitedCPP& default_instance();

  void Swap(AllianceInvitedCPP* other);

  // implements Message ----------------------------------------------

  AllianceInvitedCPP* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AllianceInvitedCPP& from);
  void MergeFrom(const AllianceInvitedCPP& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 inviteUid = 1;
  inline bool has_inviteuid() const;
  inline void clear_inviteuid();
  static const int kInviteUidFieldNumber = 1;
  inline ::google::protobuf::uint32 inviteuid() const;
  inline void set_inviteuid(::google::protobuf::uint32 value);

  // required uint32 allianceId = 2;
  inline bool has_allianceid() const;
  inline void clear_allianceid();
  static const int kAllianceIdFieldNumber = 2;
  inline ::google::protobuf::uint32 allianceid() const;
  inline void set_allianceid(::google::protobuf::uint32 value);

  // required bytes allianceName = 4;
  inline bool has_alliancename() const;
  inline void clear_alliancename();
  static const int kAllianceNameFieldNumber = 4;
  inline const ::std::string& alliancename() const;
  inline void set_alliancename(const ::std::string& value);
  inline void set_alliancename(const char* value);
  inline void set_alliancename(const void* value, size_t size);
  inline ::std::string* mutable_alliancename();
  inline ::std::string* release_alliancename();
  inline void set_allocated_alliancename(::std::string* alliancename);

  // required uint32 flag = 5;
  inline bool has_flag() const;
  inline void clear_flag();
  static const int kFlagFieldNumber = 5;
  inline ::google::protobuf::uint32 flag() const;
  inline void set_flag(::google::protobuf::uint32 value);

  // required bytes inviteName = 6;
  inline bool has_invitename() const;
  inline void clear_invitename();
  static const int kInviteNameFieldNumber = 6;
  inline const ::std::string& invitename() const;
  inline void set_invitename(const ::std::string& value);
  inline void set_invitename(const char* value);
  inline void set_invitename(const void* value, size_t size);
  inline ::std::string* mutable_invitename();
  inline ::std::string* release_invitename();
  inline void set_allocated_invitename(::std::string* invitename);

  // required uint32 invitets = 7;
  inline bool has_invitets() const;
  inline void clear_invitets();
  static const int kInvitetsFieldNumber = 7;
  inline ::google::protobuf::uint32 invitets() const;
  inline void set_invitets(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoAlliance.AllianceInvitedCPP)
 private:
  inline void set_has_inviteuid();
  inline void clear_has_inviteuid();
  inline void set_has_allianceid();
  inline void clear_has_allianceid();
  inline void set_has_alliancename();
  inline void clear_has_alliancename();
  inline void set_has_flag();
  inline void clear_has_flag();
  inline void set_has_invitename();
  inline void clear_has_invitename();
  inline void set_has_invitets();
  inline void clear_has_invitets();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 inviteuid_;
  ::google::protobuf::uint32 allianceid_;
  ::std::string* alliancename_;
  ::std::string* invitename_;
  ::google::protobuf::uint32 flag_;
  ::google::protobuf::uint32 invitets_;
  friend void  protobuf_AddDesc_ProtoAlliance_2eproto();
  friend void protobuf_AssignDesc_ProtoAlliance_2eproto();
  friend void protobuf_ShutdownFile_ProtoAlliance_2eproto();

  void InitAsDefaultInstance();
  static AllianceInvitedCPP* default_instance_;
};
// -------------------------------------------------------------------

class CheckNameAvailableReq : public ::google::protobuf::Message {
 public:
  CheckNameAvailableReq();
  virtual ~CheckNameAvailableReq();

  CheckNameAvailableReq(const CheckNameAvailableReq& from);

  inline CheckNameAvailableReq& operator=(const CheckNameAvailableReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CheckNameAvailableReq& default_instance();

  void Swap(CheckNameAvailableReq* other);

  // implements Message ----------------------------------------------

  CheckNameAvailableReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CheckNameAvailableReq& from);
  void MergeFrom(const CheckNameAvailableReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bytes name = 1;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 1;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const void* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:ProtoAlliance.CheckNameAvailableReq)
 private:
  inline void set_has_name();
  inline void clear_has_name();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* name_;
  friend void  protobuf_AddDesc_ProtoAlliance_2eproto();
  friend void protobuf_AssignDesc_ProtoAlliance_2eproto();
  friend void protobuf_ShutdownFile_ProtoAlliance_2eproto();

  void InitAsDefaultInstance();
  static CheckNameAvailableReq* default_instance_;
};
// -------------------------------------------------------------------

class CheckNameAvailableResp : public ::google::protobuf::Message {
 public:
  CheckNameAvailableResp();
  virtual ~CheckNameAvailableResp();

  CheckNameAvailableResp(const CheckNameAvailableResp& from);

  inline CheckNameAvailableResp& operator=(const CheckNameAvailableResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CheckNameAvailableResp& default_instance();

  void Swap(CheckNameAvailableResp* other);

  // implements Message ----------------------------------------------

  CheckNameAvailableResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CheckNameAvailableResp& from);
  void MergeFrom(const CheckNameAvailableResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bytes name = 1;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 1;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const void* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // required bool isAvailable = 2;
  inline bool has_isavailable() const;
  inline void clear_isavailable();
  static const int kIsAvailableFieldNumber = 2;
  inline bool isavailable() const;
  inline void set_isavailable(bool value);

  // optional bytes reason = 3;
  inline bool has_reason() const;
  inline void clear_reason();
  static const int kReasonFieldNumber = 3;
  inline const ::std::string& reason() const;
  inline void set_reason(const ::std::string& value);
  inline void set_reason(const char* value);
  inline void set_reason(const void* value, size_t size);
  inline ::std::string* mutable_reason();
  inline ::std::string* release_reason();
  inline void set_allocated_reason(::std::string* reason);

  // @@protoc_insertion_point(class_scope:ProtoAlliance.CheckNameAvailableResp)
 private:
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_isavailable();
  inline void clear_has_isavailable();
  inline void set_has_reason();
  inline void clear_has_reason();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* name_;
  ::std::string* reason_;
  bool isavailable_;
  friend void  protobuf_AddDesc_ProtoAlliance_2eproto();
  friend void protobuf_AssignDesc_ProtoAlliance_2eproto();
  friend void protobuf_ShutdownFile_ProtoAlliance_2eproto();

  void InitAsDefaultInstance();
  static CheckNameAvailableResp* default_instance_;
};
// -------------------------------------------------------------------

class CreateAllianceReq : public ::google::protobuf::Message {
 public:
  CreateAllianceReq();
  virtual ~CreateAllianceReq();

  CreateAllianceReq(const CreateAllianceReq& from);

  inline CreateAllianceReq& operator=(const CreateAllianceReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CreateAllianceReq& default_instance();

  void Swap(CreateAllianceReq* other);

  // implements Message ----------------------------------------------

  CreateAllianceReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CreateAllianceReq& from);
  void MergeFrom(const CreateAllianceReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 flag = 1;
  inline bool has_flag() const;
  inline void clear_flag();
  static const int kFlagFieldNumber = 1;
  inline ::google::protobuf::uint32 flag() const;
  inline void set_flag(::google::protobuf::uint32 value);

  // required bytes name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const void* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // required bytes description = 3;
  inline bool has_description() const;
  inline void clear_description();
  static const int kDescriptionFieldNumber = 3;
  inline const ::std::string& description() const;
  inline void set_description(const ::std::string& value);
  inline void set_description(const char* value);
  inline void set_description(const void* value, size_t size);
  inline ::std::string* mutable_description();
  inline ::std::string* release_description();
  inline void set_allocated_description(::std::string* description);

  // required uint32 applyType = 4;
  inline bool has_applytype() const;
  inline void clear_applytype();
  static const int kApplyTypeFieldNumber = 4;
  inline ::google::protobuf::uint32 applytype() const;
  inline void set_applytype(::google::protobuf::uint32 value);

  // required uint32 applyLevelLimit = 5;
  inline bool has_applylevellimit() const;
  inline void clear_applylevellimit();
  static const int kApplyLevelLimitFieldNumber = 5;
  inline ::google::protobuf::uint32 applylevellimit() const;
  inline void set_applylevellimit(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoAlliance.CreateAllianceReq)
 private:
  inline void set_has_flag();
  inline void clear_has_flag();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_description();
  inline void clear_has_description();
  inline void set_has_applytype();
  inline void clear_has_applytype();
  inline void set_has_applylevellimit();
  inline void clear_has_applylevellimit();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* name_;
  ::google::protobuf::uint32 flag_;
  ::google::protobuf::uint32 applytype_;
  ::std::string* description_;
  ::google::protobuf::uint32 applylevellimit_;
  friend void  protobuf_AddDesc_ProtoAlliance_2eproto();
  friend void protobuf_AssignDesc_ProtoAlliance_2eproto();
  friend void protobuf_ShutdownFile_ProtoAlliance_2eproto();

  void InitAsDefaultInstance();
  static CreateAllianceReq* default_instance_;
};
// -------------------------------------------------------------------

class CreateAllianceResp : public ::google::protobuf::Message {
 public:
  CreateAllianceResp();
  virtual ~CreateAllianceResp();

  CreateAllianceResp(const CreateAllianceResp& from);

  inline CreateAllianceResp& operator=(const CreateAllianceResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CreateAllianceResp& default_instance();

  void Swap(CreateAllianceResp* other);

  // implements Message ----------------------------------------------

  CreateAllianceResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CreateAllianceResp& from);
  void MergeFrom(const CreateAllianceResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .ProtoAlliance.AllianceCPP alliance = 1;
  inline bool has_alliance() const;
  inline void clear_alliance();
  static const int kAllianceFieldNumber = 1;
  inline const ::ProtoAlliance::AllianceCPP& alliance() const;
  inline ::ProtoAlliance::AllianceCPP* mutable_alliance();
  inline ::ProtoAlliance::AllianceCPP* release_alliance();
  inline void set_allocated_alliance(::ProtoAlliance::AllianceCPP* alliance);

  // required .ProtoAlliance.AllianceMemberCPP member = 2;
  inline bool has_member() const;
  inline void clear_member();
  static const int kMemberFieldNumber = 2;
  inline const ::ProtoAlliance::AllianceMemberCPP& member() const;
  inline ::ProtoAlliance::AllianceMemberCPP* mutable_member();
  inline ::ProtoAlliance::AllianceMemberCPP* release_member();
  inline void set_allocated_member(::ProtoAlliance::AllianceMemberCPP* member);

  // required .DataCommon.CommonItemsCPP commons = 3;
  inline bool has_commons() const;
  inline void clear_commons();
  static const int kCommonsFieldNumber = 3;
  inline const ::DataCommon::CommonItemsCPP& commons() const;
  inline ::DataCommon::CommonItemsCPP* mutable_commons();
  inline ::DataCommon::CommonItemsCPP* release_commons();
  inline void set_allocated_commons(::DataCommon::CommonItemsCPP* commons);

  // @@protoc_insertion_point(class_scope:ProtoAlliance.CreateAllianceResp)
 private:
  inline void set_has_alliance();
  inline void clear_has_alliance();
  inline void set_has_member();
  inline void clear_has_member();
  inline void set_has_commons();
  inline void clear_has_commons();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::ProtoAlliance::AllianceCPP* alliance_;
  ::ProtoAlliance::AllianceMemberCPP* member_;
  ::DataCommon::CommonItemsCPP* commons_;
  friend void  protobuf_AddDesc_ProtoAlliance_2eproto();
  friend void protobuf_AssignDesc_ProtoAlliance_2eproto();
  friend void protobuf_ShutdownFile_ProtoAlliance_2eproto();

  void InitAsDefaultInstance();
  static CreateAllianceResp* default_instance_;
};
// -------------------------------------------------------------------

class RecommendllianceReq : public ::google::protobuf::Message {
 public:
  RecommendllianceReq();
  virtual ~RecommendllianceReq();

  RecommendllianceReq(const RecommendllianceReq& from);

  inline RecommendllianceReq& operator=(const RecommendllianceReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RecommendllianceReq& default_instance();

  void Swap(RecommendllianceReq* other);

  // implements Message ----------------------------------------------

  RecommendllianceReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RecommendllianceReq& from);
  void MergeFrom(const RecommendllianceReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:ProtoAlliance.RecommendllianceReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_ProtoAlliance_2eproto();
  friend void protobuf_AssignDesc_ProtoAlliance_2eproto();
  friend void protobuf_ShutdownFile_ProtoAlliance_2eproto();

  void InitAsDefaultInstance();
  static RecommendllianceReq* default_instance_;
};
// -------------------------------------------------------------------

class PartAllianceCPP : public ::google::protobuf::Message {
 public:
  PartAllianceCPP();
  virtual ~PartAllianceCPP();

  PartAllianceCPP(const PartAllianceCPP& from);

  inline PartAllianceCPP& operator=(const PartAllianceCPP& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PartAllianceCPP& default_instance();

  void Swap(PartAllianceCPP* other);

  // implements Message ----------------------------------------------

  PartAllianceCPP* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PartAllianceCPP& from);
  void MergeFrom(const PartAllianceCPP& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 allianceId = 1;
  inline bool has_allianceid() const;
  inline void clear_allianceid();
  static const int kAllianceIdFieldNumber = 1;
  inline ::google::protobuf::uint32 allianceid() const;
  inline void set_allianceid(::google::protobuf::uint32 value);

  // required bytes name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const void* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // required uint32 flag = 3;
  inline bool has_flag() const;
  inline void clear_flag();
  static const int kFlagFieldNumber = 3;
  inline ::google::protobuf::uint32 flag() const;
  inline void set_flag(::google::protobuf::uint32 value);

  // required uint32 applyType = 4;
  inline bool has_applytype() const;
  inline void clear_applytype();
  static const int kApplyTypeFieldNumber = 4;
  inline ::google::protobuf::uint32 applytype() const;
  inline void set_applytype(::google::protobuf::uint32 value);

  // required uint32 applyLevelLimit = 5;
  inline bool has_applylevellimit() const;
  inline void clear_applylevellimit();
  static const int kApplyLevelLimitFieldNumber = 5;
  inline ::google::protobuf::uint32 applylevellimit() const;
  inline void set_applylevellimit(::google::protobuf::uint32 value);

  // required uint32 memberCount = 6;
  inline bool has_membercount() const;
  inline void clear_membercount();
  static const int kMemberCountFieldNumber = 6;
  inline ::google::protobuf::uint32 membercount() const;
  inline void set_membercount(::google::protobuf::uint32 value);

  // optional bytes description = 7;
  inline bool has_description() const;
  inline void clear_description();
  static const int kDescriptionFieldNumber = 7;
  inline const ::std::string& description() const;
  inline void set_description(const ::std::string& value);
  inline void set_description(const char* value);
  inline void set_description(const void* value, size_t size);
  inline ::std::string* mutable_description();
  inline ::std::string* release_description();
  inline void set_allocated_description(::std::string* description);

  // optional uint32 onlineNum = 8;
  inline bool has_onlinenum() const;
  inline void clear_onlinenum();
  static const int kOnlineNumFieldNumber = 8;
  inline ::google::protobuf::uint32 onlinenum() const;
  inline void set_onlinenum(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoAlliance.PartAllianceCPP)
 private:
  inline void set_has_allianceid();
  inline void clear_has_allianceid();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_flag();
  inline void clear_has_flag();
  inline void set_has_applytype();
  inline void clear_has_applytype();
  inline void set_has_applylevellimit();
  inline void clear_has_applylevellimit();
  inline void set_has_membercount();
  inline void clear_has_membercount();
  inline void set_has_description();
  inline void clear_has_description();
  inline void set_has_onlinenum();
  inline void clear_has_onlinenum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* name_;
  ::google::protobuf::uint32 allianceid_;
  ::google::protobuf::uint32 flag_;
  ::google::protobuf::uint32 applytype_;
  ::google::protobuf::uint32 applylevellimit_;
  ::std::string* description_;
  ::google::protobuf::uint32 membercount_;
  ::google::protobuf::uint32 onlinenum_;
  friend void  protobuf_AddDesc_ProtoAlliance_2eproto();
  friend void protobuf_AssignDesc_ProtoAlliance_2eproto();
  friend void protobuf_ShutdownFile_ProtoAlliance_2eproto();

  void InitAsDefaultInstance();
  static PartAllianceCPP* default_instance_;
};
// -------------------------------------------------------------------

class RecommendllianceResp : public ::google::protobuf::Message {
 public:
  RecommendllianceResp();
  virtual ~RecommendllianceResp();

  RecommendllianceResp(const RecommendllianceResp& from);

  inline RecommendllianceResp& operator=(const RecommendllianceResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RecommendllianceResp& default_instance();

  void Swap(RecommendllianceResp* other);

  // implements Message ----------------------------------------------

  RecommendllianceResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RecommendllianceResp& from);
  void MergeFrom(const RecommendllianceResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .ProtoAlliance.PartAllianceCPP allianceBrief = 1;
  inline int alliancebrief_size() const;
  inline void clear_alliancebrief();
  static const int kAllianceBriefFieldNumber = 1;
  inline const ::ProtoAlliance::PartAllianceCPP& alliancebrief(int index) const;
  inline ::ProtoAlliance::PartAllianceCPP* mutable_alliancebrief(int index);
  inline ::ProtoAlliance::PartAllianceCPP* add_alliancebrief();
  inline const ::google::protobuf::RepeatedPtrField< ::ProtoAlliance::PartAllianceCPP >&
      alliancebrief() const;
  inline ::google::protobuf::RepeatedPtrField< ::ProtoAlliance::PartAllianceCPP >*
      mutable_alliancebrief();

  // @@protoc_insertion_point(class_scope:ProtoAlliance.RecommendllianceResp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::ProtoAlliance::PartAllianceCPP > alliancebrief_;
  friend void  protobuf_AddDesc_ProtoAlliance_2eproto();
  friend void protobuf_AssignDesc_ProtoAlliance_2eproto();
  friend void protobuf_ShutdownFile_ProtoAlliance_2eproto();

  void InitAsDefaultInstance();
  static RecommendllianceResp* default_instance_;
};
// -------------------------------------------------------------------

class GetPartAllianceInfoReq : public ::google::protobuf::Message {
 public:
  GetPartAllianceInfoReq();
  virtual ~GetPartAllianceInfoReq();

  GetPartAllianceInfoReq(const GetPartAllianceInfoReq& from);

  inline GetPartAllianceInfoReq& operator=(const GetPartAllianceInfoReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetPartAllianceInfoReq& default_instance();

  void Swap(GetPartAllianceInfoReq* other);

  // implements Message ----------------------------------------------

  GetPartAllianceInfoReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetPartAllianceInfoReq& from);
  void MergeFrom(const GetPartAllianceInfoReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 allianceId = 1;
  inline int allianceid_size() const;
  inline void clear_allianceid();
  static const int kAllianceIdFieldNumber = 1;
  inline ::google::protobuf::uint32 allianceid(int index) const;
  inline void set_allianceid(int index, ::google::protobuf::uint32 value);
  inline void add_allianceid(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      allianceid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_allianceid();

  // @@protoc_insertion_point(class_scope:ProtoAlliance.GetPartAllianceInfoReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > allianceid_;
  friend void  protobuf_AddDesc_ProtoAlliance_2eproto();
  friend void protobuf_AssignDesc_ProtoAlliance_2eproto();
  friend void protobuf_ShutdownFile_ProtoAlliance_2eproto();

  void InitAsDefaultInstance();
  static GetPartAllianceInfoReq* default_instance_;
};
// -------------------------------------------------------------------

class GetPartAllianceInfoResp : public ::google::protobuf::Message {
 public:
  GetPartAllianceInfoResp();
  virtual ~GetPartAllianceInfoResp();

  GetPartAllianceInfoResp(const GetPartAllianceInfoResp& from);

  inline GetPartAllianceInfoResp& operator=(const GetPartAllianceInfoResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetPartAllianceInfoResp& default_instance();

  void Swap(GetPartAllianceInfoResp* other);

  // implements Message ----------------------------------------------

  GetPartAllianceInfoResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetPartAllianceInfoResp& from);
  void MergeFrom(const GetPartAllianceInfoResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .ProtoAlliance.PartAllianceCPP allianceBrief = 1;
  inline int alliancebrief_size() const;
  inline void clear_alliancebrief();
  static const int kAllianceBriefFieldNumber = 1;
  inline const ::ProtoAlliance::PartAllianceCPP& alliancebrief(int index) const;
  inline ::ProtoAlliance::PartAllianceCPP* mutable_alliancebrief(int index);
  inline ::ProtoAlliance::PartAllianceCPP* add_alliancebrief();
  inline const ::google::protobuf::RepeatedPtrField< ::ProtoAlliance::PartAllianceCPP >&
      alliancebrief() const;
  inline ::google::protobuf::RepeatedPtrField< ::ProtoAlliance::PartAllianceCPP >*
      mutable_alliancebrief();

  // @@protoc_insertion_point(class_scope:ProtoAlliance.GetPartAllianceInfoResp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::ProtoAlliance::PartAllianceCPP > alliancebrief_;
  friend void  protobuf_AddDesc_ProtoAlliance_2eproto();
  friend void protobuf_AssignDesc_ProtoAlliance_2eproto();
  friend void protobuf_ShutdownFile_ProtoAlliance_2eproto();

  void InitAsDefaultInstance();
  static GetPartAllianceInfoResp* default_instance_;
};
// -------------------------------------------------------------------

class ApplyJoinReq : public ::google::protobuf::Message {
 public:
  ApplyJoinReq();
  virtual ~ApplyJoinReq();

  ApplyJoinReq(const ApplyJoinReq& from);

  inline ApplyJoinReq& operator=(const ApplyJoinReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ApplyJoinReq& default_instance();

  void Swap(ApplyJoinReq* other);

  // implements Message ----------------------------------------------

  ApplyJoinReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ApplyJoinReq& from);
  void MergeFrom(const ApplyJoinReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 allianceId = 1;
  inline bool has_allianceid() const;
  inline void clear_allianceid();
  static const int kAllianceIdFieldNumber = 1;
  inline ::google::protobuf::uint32 allianceid() const;
  inline void set_allianceid(::google::protobuf::uint32 value);

  // required bytes reason = 2;
  inline bool has_reason() const;
  inline void clear_reason();
  static const int kReasonFieldNumber = 2;
  inline const ::std::string& reason() const;
  inline void set_reason(const ::std::string& value);
  inline void set_reason(const char* value);
  inline void set_reason(const void* value, size_t size);
  inline ::std::string* mutable_reason();
  inline ::std::string* release_reason();
  inline void set_allocated_reason(::std::string* reason);

  // @@protoc_insertion_point(class_scope:ProtoAlliance.ApplyJoinReq)
 private:
  inline void set_has_allianceid();
  inline void clear_has_allianceid();
  inline void set_has_reason();
  inline void clear_has_reason();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* reason_;
  ::google::protobuf::uint32 allianceid_;
  friend void  protobuf_AddDesc_ProtoAlliance_2eproto();
  friend void protobuf_AssignDesc_ProtoAlliance_2eproto();
  friend void protobuf_ShutdownFile_ProtoAlliance_2eproto();

  void InitAsDefaultInstance();
  static ApplyJoinReq* default_instance_;
};
// -------------------------------------------------------------------

class RequestApplyJoinBC : public ::google::protobuf::Message {
 public:
  RequestApplyJoinBC();
  virtual ~RequestApplyJoinBC();

  RequestApplyJoinBC(const RequestApplyJoinBC& from);

  inline RequestApplyJoinBC& operator=(const RequestApplyJoinBC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RequestApplyJoinBC& default_instance();

  void Swap(RequestApplyJoinBC* other);

  // implements Message ----------------------------------------------

  RequestApplyJoinBC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RequestApplyJoinBC& from);
  void MergeFrom(const RequestApplyJoinBC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 allianceId = 1;
  inline bool has_allianceid() const;
  inline void clear_allianceid();
  static const int kAllianceIdFieldNumber = 1;
  inline ::google::protobuf::uint32 allianceid() const;
  inline void set_allianceid(::google::protobuf::uint32 value);

  // required bytes reason = 2;
  inline bool has_reason() const;
  inline void clear_reason();
  static const int kReasonFieldNumber = 2;
  inline const ::std::string& reason() const;
  inline void set_reason(const ::std::string& value);
  inline void set_reason(const char* value);
  inline void set_reason(const void* value, size_t size);
  inline ::std::string* mutable_reason();
  inline ::std::string* release_reason();
  inline void set_allocated_reason(::std::string* reason);

  // required .ProtoAlliance.AllianceMemberCPP member = 3;
  inline bool has_member() const;
  inline void clear_member();
  static const int kMemberFieldNumber = 3;
  inline const ::ProtoAlliance::AllianceMemberCPP& member() const;
  inline ::ProtoAlliance::AllianceMemberCPP* mutable_member();
  inline ::ProtoAlliance::AllianceMemberCPP* release_member();
  inline void set_allocated_member(::ProtoAlliance::AllianceMemberCPP* member);

  // @@protoc_insertion_point(class_scope:ProtoAlliance.RequestApplyJoinBC)
 private:
  inline void set_has_allianceid();
  inline void clear_has_allianceid();
  inline void set_has_reason();
  inline void clear_has_reason();
  inline void set_has_member();
  inline void clear_has_member();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* reason_;
  ::ProtoAlliance::AllianceMemberCPP* member_;
  ::google::protobuf::uint32 allianceid_;
  friend void  protobuf_AddDesc_ProtoAlliance_2eproto();
  friend void protobuf_AssignDesc_ProtoAlliance_2eproto();
  friend void protobuf_ShutdownFile_ProtoAlliance_2eproto();

  void InitAsDefaultInstance();
  static RequestApplyJoinBC* default_instance_;
};
// -------------------------------------------------------------------

class ReplyApplyJoinBC : public ::google::protobuf::Message {
 public:
  ReplyApplyJoinBC();
  virtual ~ReplyApplyJoinBC();

  ReplyApplyJoinBC(const ReplyApplyJoinBC& from);

  inline ReplyApplyJoinBC& operator=(const ReplyApplyJoinBC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReplyApplyJoinBC& default_instance();

  void Swap(ReplyApplyJoinBC* other);

  // implements Message ----------------------------------------------

  ReplyApplyJoinBC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReplyApplyJoinBC& from);
  void MergeFrom(const ReplyApplyJoinBC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 uid = 1;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 1;
  inline ::google::protobuf::uint32 uid() const;
  inline void set_uid(::google::protobuf::uint32 value);

  // required uint32 allianceId = 2;
  inline bool has_allianceid() const;
  inline void clear_allianceid();
  static const int kAllianceIdFieldNumber = 2;
  inline ::google::protobuf::uint32 allianceid() const;
  inline void set_allianceid(::google::protobuf::uint32 value);

  // required int32 ret = 3;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 3;
  inline ::google::protobuf::int32 ret() const;
  inline void set_ret(::google::protobuf::int32 value);

  // optional .ProtoAlliance.ApplyJoinResp alliance = 4;
  inline bool has_alliance() const;
  inline void clear_alliance();
  static const int kAllianceFieldNumber = 4;
  inline const ::ProtoAlliance::ApplyJoinResp& alliance() const;
  inline ::ProtoAlliance::ApplyJoinResp* mutable_alliance();
  inline ::ProtoAlliance::ApplyJoinResp* release_alliance();
  inline void set_allocated_alliance(::ProtoAlliance::ApplyJoinResp* alliance);

  // @@protoc_insertion_point(class_scope:ProtoAlliance.ReplyApplyJoinBC)
 private:
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_allianceid();
  inline void clear_has_allianceid();
  inline void set_has_ret();
  inline void clear_has_ret();
  inline void set_has_alliance();
  inline void clear_has_alliance();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 uid_;
  ::google::protobuf::uint32 allianceid_;
  ::ProtoAlliance::ApplyJoinResp* alliance_;
  ::google::protobuf::int32 ret_;
  friend void  protobuf_AddDesc_ProtoAlliance_2eproto();
  friend void protobuf_AssignDesc_ProtoAlliance_2eproto();
  friend void protobuf_ShutdownFile_ProtoAlliance_2eproto();

  void InitAsDefaultInstance();
  static ReplyApplyJoinBC* default_instance_;
};
// -------------------------------------------------------------------

class ApplyJoinResp : public ::google::protobuf::Message {
 public:
  ApplyJoinResp();
  virtual ~ApplyJoinResp();

  ApplyJoinResp(const ApplyJoinResp& from);

  inline ApplyJoinResp& operator=(const ApplyJoinResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ApplyJoinResp& default_instance();

  void Swap(ApplyJoinResp* other);

  // implements Message ----------------------------------------------

  ApplyJoinResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ApplyJoinResp& from);
  void MergeFrom(const ApplyJoinResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 ret = 1;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 1;
  inline ::google::protobuf::int32 ret() const;
  inline void set_ret(::google::protobuf::int32 value);

  // optional .ProtoAlliance.AllianceApplyCPP apply = 2;
  inline bool has_apply() const;
  inline void clear_apply();
  static const int kApplyFieldNumber = 2;
  inline const ::ProtoAlliance::AllianceApplyCPP& apply() const;
  inline ::ProtoAlliance::AllianceApplyCPP* mutable_apply();
  inline ::ProtoAlliance::AllianceApplyCPP* release_apply();
  inline void set_allocated_apply(::ProtoAlliance::AllianceApplyCPP* apply);

  // optional .ProtoAlliance.AllianceMemberCPP member = 3;
  inline bool has_member() const;
  inline void clear_member();
  static const int kMemberFieldNumber = 3;
  inline const ::ProtoAlliance::AllianceMemberCPP& member() const;
  inline ::ProtoAlliance::AllianceMemberCPP* mutable_member();
  inline ::ProtoAlliance::AllianceMemberCPP* release_member();
  inline void set_allocated_member(::ProtoAlliance::AllianceMemberCPP* member);

  // optional .DataCommon.CommonItemsCPP commons = 4;
  inline bool has_commons() const;
  inline void clear_commons();
  static const int kCommonsFieldNumber = 4;
  inline const ::DataCommon::CommonItemsCPP& commons() const;
  inline ::DataCommon::CommonItemsCPP* mutable_commons();
  inline ::DataCommon::CommonItemsCPP* release_commons();
  inline void set_allocated_commons(::DataCommon::CommonItemsCPP* commons);

  // optional .ProtoAlliance.AllianceCPP alliance = 5;
  inline bool has_alliance() const;
  inline void clear_alliance();
  static const int kAllianceFieldNumber = 5;
  inline const ::ProtoAlliance::AllianceCPP& alliance() const;
  inline ::ProtoAlliance::AllianceCPP* mutable_alliance();
  inline ::ProtoAlliance::AllianceCPP* release_alliance();
  inline void set_allocated_alliance(::ProtoAlliance::AllianceCPP* alliance);

  // @@protoc_insertion_point(class_scope:ProtoAlliance.ApplyJoinResp)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();
  inline void set_has_apply();
  inline void clear_has_apply();
  inline void set_has_member();
  inline void clear_has_member();
  inline void set_has_commons();
  inline void clear_has_commons();
  inline void set_has_alliance();
  inline void clear_has_alliance();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::ProtoAlliance::AllianceApplyCPP* apply_;
  ::ProtoAlliance::AllianceMemberCPP* member_;
  ::DataCommon::CommonItemsCPP* commons_;
  ::ProtoAlliance::AllianceCPP* alliance_;
  ::google::protobuf::int32 ret_;
  friend void  protobuf_AddDesc_ProtoAlliance_2eproto();
  friend void protobuf_AssignDesc_ProtoAlliance_2eproto();
  friend void protobuf_ShutdownFile_ProtoAlliance_2eproto();

  void InitAsDefaultInstance();
  static ApplyJoinResp* default_instance_;
};
// -------------------------------------------------------------------

class ApproveJoinReq : public ::google::protobuf::Message {
 public:
  ApproveJoinReq();
  virtual ~ApproveJoinReq();

  ApproveJoinReq(const ApproveJoinReq& from);

  inline ApproveJoinReq& operator=(const ApproveJoinReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ApproveJoinReq& default_instance();

  void Swap(ApproveJoinReq* other);

  // implements Message ----------------------------------------------

  ApproveJoinReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ApproveJoinReq& from);
  void MergeFrom(const ApproveJoinReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 applyUid = 1;
  inline bool has_applyuid() const;
  inline void clear_applyuid();
  static const int kApplyUidFieldNumber = 1;
  inline ::google::protobuf::uint32 applyuid() const;
  inline void set_applyuid(::google::protobuf::uint32 value);

  // required uint32 operate = 2;
  inline bool has_operate() const;
  inline void clear_operate();
  static const int kOperateFieldNumber = 2;
  inline ::google::protobuf::uint32 operate() const;
  inline void set_operate(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoAlliance.ApproveJoinReq)
 private:
  inline void set_has_applyuid();
  inline void clear_has_applyuid();
  inline void set_has_operate();
  inline void clear_has_operate();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 applyuid_;
  ::google::protobuf::uint32 operate_;
  friend void  protobuf_AddDesc_ProtoAlliance_2eproto();
  friend void protobuf_AssignDesc_ProtoAlliance_2eproto();
  friend void protobuf_ShutdownFile_ProtoAlliance_2eproto();

  void InitAsDefaultInstance();
  static ApproveJoinReq* default_instance_;
};
// -------------------------------------------------------------------

class RequestApproveJoinAllianceBC : public ::google::protobuf::Message {
 public:
  RequestApproveJoinAllianceBC();
  virtual ~RequestApproveJoinAllianceBC();

  RequestApproveJoinAllianceBC(const RequestApproveJoinAllianceBC& from);

  inline RequestApproveJoinAllianceBC& operator=(const RequestApproveJoinAllianceBC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RequestApproveJoinAllianceBC& default_instance();

  void Swap(RequestApproveJoinAllianceBC* other);

  // implements Message ----------------------------------------------

  RequestApproveJoinAllianceBC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RequestApproveJoinAllianceBC& from);
  void MergeFrom(const RequestApproveJoinAllianceBC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 aid = 1;
  inline bool has_aid() const;
  inline void clear_aid();
  static const int kAidFieldNumber = 1;
  inline ::google::protobuf::uint32 aid() const;
  inline void set_aid(::google::protobuf::uint32 value);

  // required uint32 uid = 2;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 2;
  inline ::google::protobuf::uint32 uid() const;
  inline void set_uid(::google::protobuf::uint32 value);

  // required uint32 operate = 3;
  inline bool has_operate() const;
  inline void clear_operate();
  static const int kOperateFieldNumber = 3;
  inline ::google::protobuf::uint32 operate() const;
  inline void set_operate(::google::protobuf::uint32 value);

  // required .ProtoAlliance.AllianceMemberCPP member = 4;
  inline bool has_member() const;
  inline void clear_member();
  static const int kMemberFieldNumber = 4;
  inline const ::ProtoAlliance::AllianceMemberCPP& member() const;
  inline ::ProtoAlliance::AllianceMemberCPP* mutable_member();
  inline ::ProtoAlliance::AllianceMemberCPP* release_member();
  inline void set_allocated_member(::ProtoAlliance::AllianceMemberCPP* member);

  // @@protoc_insertion_point(class_scope:ProtoAlliance.RequestApproveJoinAllianceBC)
 private:
  inline void set_has_aid();
  inline void clear_has_aid();
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_operate();
  inline void clear_has_operate();
  inline void set_has_member();
  inline void clear_has_member();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 aid_;
  ::google::protobuf::uint32 uid_;
  ::ProtoAlliance::AllianceMemberCPP* member_;
  ::google::protobuf::uint32 operate_;
  friend void  protobuf_AddDesc_ProtoAlliance_2eproto();
  friend void protobuf_AssignDesc_ProtoAlliance_2eproto();
  friend void protobuf_ShutdownFile_ProtoAlliance_2eproto();

  void InitAsDefaultInstance();
  static RequestApproveJoinAllianceBC* default_instance_;
};
// -------------------------------------------------------------------

class RequestApproveJoinUserBC : public ::google::protobuf::Message {
 public:
  RequestApproveJoinUserBC();
  virtual ~RequestApproveJoinUserBC();

  RequestApproveJoinUserBC(const RequestApproveJoinUserBC& from);

  inline RequestApproveJoinUserBC& operator=(const RequestApproveJoinUserBC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RequestApproveJoinUserBC& default_instance();

  void Swap(RequestApproveJoinUserBC* other);

  // implements Message ----------------------------------------------

  RequestApproveJoinUserBC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RequestApproveJoinUserBC& from);
  void MergeFrom(const RequestApproveJoinUserBC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 aid = 1;
  inline bool has_aid() const;
  inline void clear_aid();
  static const int kAidFieldNumber = 1;
  inline ::google::protobuf::uint32 aid() const;
  inline void set_aid(::google::protobuf::uint32 value);

  // required uint32 uid = 2;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 2;
  inline ::google::protobuf::uint32 uid() const;
  inline void set_uid(::google::protobuf::uint32 value);

  // required uint32 applyUid = 3;
  inline bool has_applyuid() const;
  inline void clear_applyuid();
  static const int kApplyUidFieldNumber = 3;
  inline ::google::protobuf::uint32 applyuid() const;
  inline void set_applyuid(::google::protobuf::uint32 value);

  // required uint32 operate = 4;
  inline bool has_operate() const;
  inline void clear_operate();
  static const int kOperateFieldNumber = 4;
  inline ::google::protobuf::uint32 operate() const;
  inline void set_operate(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoAlliance.RequestApproveJoinUserBC)
 private:
  inline void set_has_aid();
  inline void clear_has_aid();
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_applyuid();
  inline void clear_has_applyuid();
  inline void set_has_operate();
  inline void clear_has_operate();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 aid_;
  ::google::protobuf::uint32 uid_;
  ::google::protobuf::uint32 applyuid_;
  ::google::protobuf::uint32 operate_;
  friend void  protobuf_AddDesc_ProtoAlliance_2eproto();
  friend void protobuf_AssignDesc_ProtoAlliance_2eproto();
  friend void protobuf_ShutdownFile_ProtoAlliance_2eproto();

  void InitAsDefaultInstance();
  static RequestApproveJoinUserBC* default_instance_;
};
// -------------------------------------------------------------------

class ReplyApproveJoinBC : public ::google::protobuf::Message {
 public:
  ReplyApproveJoinBC();
  virtual ~ReplyApproveJoinBC();

  ReplyApproveJoinBC(const ReplyApproveJoinBC& from);

  inline ReplyApproveJoinBC& operator=(const ReplyApproveJoinBC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReplyApproveJoinBC& default_instance();

  void Swap(ReplyApproveJoinBC* other);

  // implements Message ----------------------------------------------

  ReplyApproveJoinBC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReplyApproveJoinBC& from);
  void MergeFrom(const ReplyApproveJoinBC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 uid = 1;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 1;
  inline ::google::protobuf::uint32 uid() const;
  inline void set_uid(::google::protobuf::uint32 value);

  // optional .ProtoAlliance.ApproveJoinResp alliance = 2;
  inline bool has_alliance() const;
  inline void clear_alliance();
  static const int kAllianceFieldNumber = 2;
  inline const ::ProtoAlliance::ApproveJoinResp& alliance() const;
  inline ::ProtoAlliance::ApproveJoinResp* mutable_alliance();
  inline ::ProtoAlliance::ApproveJoinResp* release_alliance();
  inline void set_allocated_alliance(::ProtoAlliance::ApproveJoinResp* alliance);

  // @@protoc_insertion_point(class_scope:ProtoAlliance.ReplyApproveJoinBC)
 private:
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_alliance();
  inline void clear_has_alliance();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::ProtoAlliance::ApproveJoinResp* alliance_;
  ::google::protobuf::uint32 uid_;
  friend void  protobuf_AddDesc_ProtoAlliance_2eproto();
  friend void protobuf_AssignDesc_ProtoAlliance_2eproto();
  friend void protobuf_ShutdownFile_ProtoAlliance_2eproto();

  void InitAsDefaultInstance();
  static ReplyApproveJoinBC* default_instance_;
};
// -------------------------------------------------------------------

class ApproveJoinResp : public ::google::protobuf::Message {
 public:
  ApproveJoinResp();
  virtual ~ApproveJoinResp();

  ApproveJoinResp(const ApproveJoinResp& from);

  inline ApproveJoinResp& operator=(const ApproveJoinResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ApproveJoinResp& default_instance();

  void Swap(ApproveJoinResp* other);

  // implements Message ----------------------------------------------

  ApproveJoinResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ApproveJoinResp& from);
  void MergeFrom(const ApproveJoinResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 applyUid = 1;
  inline bool has_applyuid() const;
  inline void clear_applyuid();
  static const int kApplyUidFieldNumber = 1;
  inline ::google::protobuf::uint32 applyuid() const;
  inline void set_applyuid(::google::protobuf::uint32 value);

  // required uint32 operate = 2;
  inline bool has_operate() const;
  inline void clear_operate();
  static const int kOperateFieldNumber = 2;
  inline ::google::protobuf::uint32 operate() const;
  inline void set_operate(::google::protobuf::uint32 value);

  // optional .ProtoAlliance.AllianceMemberCPP member = 3;
  inline bool has_member() const;
  inline void clear_member();
  static const int kMemberFieldNumber = 3;
  inline const ::ProtoAlliance::AllianceMemberCPP& member() const;
  inline ::ProtoAlliance::AllianceMemberCPP* mutable_member();
  inline ::ProtoAlliance::AllianceMemberCPP* release_member();
  inline void set_allocated_member(::ProtoAlliance::AllianceMemberCPP* member);

  // @@protoc_insertion_point(class_scope:ProtoAlliance.ApproveJoinResp)
 private:
  inline void set_has_applyuid();
  inline void clear_has_applyuid();
  inline void set_has_operate();
  inline void clear_has_operate();
  inline void set_has_member();
  inline void clear_has_member();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 applyuid_;
  ::google::protobuf::uint32 operate_;
  ::ProtoAlliance::AllianceMemberCPP* member_;
  friend void  protobuf_AddDesc_ProtoAlliance_2eproto();
  friend void protobuf_AssignDesc_ProtoAlliance_2eproto();
  friend void protobuf_ShutdownFile_ProtoAlliance_2eproto();

  void InitAsDefaultInstance();
  static ApproveJoinResp* default_instance_;
};
// -------------------------------------------------------------------

class ExitAllianceReq : public ::google::protobuf::Message {
 public:
  ExitAllianceReq();
  virtual ~ExitAllianceReq();

  ExitAllianceReq(const ExitAllianceReq& from);

  inline ExitAllianceReq& operator=(const ExitAllianceReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ExitAllianceReq& default_instance();

  void Swap(ExitAllianceReq* other);

  // implements Message ----------------------------------------------

  ExitAllianceReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ExitAllianceReq& from);
  void MergeFrom(const ExitAllianceReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:ProtoAlliance.ExitAllianceReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_ProtoAlliance_2eproto();
  friend void protobuf_AssignDesc_ProtoAlliance_2eproto();
  friend void protobuf_ShutdownFile_ProtoAlliance_2eproto();

  void InitAsDefaultInstance();
  static ExitAllianceReq* default_instance_;
};
// -------------------------------------------------------------------

class RequestExitAllianceBC : public ::google::protobuf::Message {
 public:
  RequestExitAllianceBC();
  virtual ~RequestExitAllianceBC();

  RequestExitAllianceBC(const RequestExitAllianceBC& from);

  inline RequestExitAllianceBC& operator=(const RequestExitAllianceBC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RequestExitAllianceBC& default_instance();

  void Swap(RequestExitAllianceBC* other);

  // implements Message ----------------------------------------------

  RequestExitAllianceBC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RequestExitAllianceBC& from);
  void MergeFrom(const RequestExitAllianceBC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 aid = 1;
  inline bool has_aid() const;
  inline void clear_aid();
  static const int kAidFieldNumber = 1;
  inline ::google::protobuf::uint32 aid() const;
  inline void set_aid(::google::protobuf::uint32 value);

  // required uint32 uid = 2;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 2;
  inline ::google::protobuf::uint32 uid() const;
  inline void set_uid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoAlliance.RequestExitAllianceBC)
 private:
  inline void set_has_aid();
  inline void clear_has_aid();
  inline void set_has_uid();
  inline void clear_has_uid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 aid_;
  ::google::protobuf::uint32 uid_;
  friend void  protobuf_AddDesc_ProtoAlliance_2eproto();
  friend void protobuf_AssignDesc_ProtoAlliance_2eproto();
  friend void protobuf_ShutdownFile_ProtoAlliance_2eproto();

  void InitAsDefaultInstance();
  static RequestExitAllianceBC* default_instance_;
};
// -------------------------------------------------------------------

class ReplyExitAllianceBC : public ::google::protobuf::Message {
 public:
  ReplyExitAllianceBC();
  virtual ~ReplyExitAllianceBC();

  ReplyExitAllianceBC(const ReplyExitAllianceBC& from);

  inline ReplyExitAllianceBC& operator=(const ReplyExitAllianceBC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReplyExitAllianceBC& default_instance();

  void Swap(ReplyExitAllianceBC* other);

  // implements Message ----------------------------------------------

  ReplyExitAllianceBC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReplyExitAllianceBC& from);
  void MergeFrom(const ReplyExitAllianceBC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 uid = 1;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 1;
  inline ::google::protobuf::uint32 uid() const;
  inline void set_uid(::google::protobuf::uint32 value);

  // required uint32 aid = 2;
  inline bool has_aid() const;
  inline void clear_aid();
  static const int kAidFieldNumber = 2;
  inline ::google::protobuf::uint32 aid() const;
  inline void set_aid(::google::protobuf::uint32 value);

  // optional .ProtoAlliance.ExitAllianceResp alliance = 3;
  inline bool has_alliance() const;
  inline void clear_alliance();
  static const int kAllianceFieldNumber = 3;
  inline const ::ProtoAlliance::ExitAllianceResp& alliance() const;
  inline ::ProtoAlliance::ExitAllianceResp* mutable_alliance();
  inline ::ProtoAlliance::ExitAllianceResp* release_alliance();
  inline void set_allocated_alliance(::ProtoAlliance::ExitAllianceResp* alliance);

  // @@protoc_insertion_point(class_scope:ProtoAlliance.ReplyExitAllianceBC)
 private:
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_aid();
  inline void clear_has_aid();
  inline void set_has_alliance();
  inline void clear_has_alliance();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 uid_;
  ::google::protobuf::uint32 aid_;
  ::ProtoAlliance::ExitAllianceResp* alliance_;
  friend void  protobuf_AddDesc_ProtoAlliance_2eproto();
  friend void protobuf_AssignDesc_ProtoAlliance_2eproto();
  friend void protobuf_ShutdownFile_ProtoAlliance_2eproto();

  void InitAsDefaultInstance();
  static ReplyExitAllianceBC* default_instance_;
};
// -------------------------------------------------------------------

class ExitAllianceResp : public ::google::protobuf::Message {
 public:
  ExitAllianceResp();
  virtual ~ExitAllianceResp();

  ExitAllianceResp(const ExitAllianceResp& from);

  inline ExitAllianceResp& operator=(const ExitAllianceResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ExitAllianceResp& default_instance();

  void Swap(ExitAllianceResp* other);

  // implements Message ----------------------------------------------

  ExitAllianceResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ExitAllianceResp& from);
  void MergeFrom(const ExitAllianceResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .DataCommon.CommonItemsCPP commons = 1;
  inline bool has_commons() const;
  inline void clear_commons();
  static const int kCommonsFieldNumber = 1;
  inline const ::DataCommon::CommonItemsCPP& commons() const;
  inline ::DataCommon::CommonItemsCPP* mutable_commons();
  inline ::DataCommon::CommonItemsCPP* release_commons();
  inline void set_allocated_commons(::DataCommon::CommonItemsCPP* commons);

  // @@protoc_insertion_point(class_scope:ProtoAlliance.ExitAllianceResp)
 private:
  inline void set_has_commons();
  inline void clear_has_commons();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::DataCommon::CommonItemsCPP* commons_;
  friend void  protobuf_AddDesc_ProtoAlliance_2eproto();
  friend void protobuf_AssignDesc_ProtoAlliance_2eproto();
  friend void protobuf_ShutdownFile_ProtoAlliance_2eproto();

  void InitAsDefaultInstance();
  static ExitAllianceResp* default_instance_;
};
// -------------------------------------------------------------------

class PostionChangePushReq : public ::google::protobuf::Message {
 public:
  PostionChangePushReq();
  virtual ~PostionChangePushReq();

  PostionChangePushReq(const PostionChangePushReq& from);

  inline PostionChangePushReq& operator=(const PostionChangePushReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PostionChangePushReq& default_instance();

  void Swap(PostionChangePushReq* other);

  // implements Message ----------------------------------------------

  PostionChangePushReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PostionChangePushReq& from);
  void MergeFrom(const PostionChangePushReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 oldpos = 1;
  inline bool has_oldpos() const;
  inline void clear_oldpos();
  static const int kOldposFieldNumber = 1;
  inline ::google::protobuf::uint32 oldpos() const;
  inline void set_oldpos(::google::protobuf::uint32 value);

  // required uint32 newpos = 2;
  inline bool has_newpos() const;
  inline void clear_newpos();
  static const int kNewposFieldNumber = 2;
  inline ::google::protobuf::uint32 newpos() const;
  inline void set_newpos(::google::protobuf::uint32 value);

  // optional .ProtoAlliance.AllianceCPP alliance = 3;
  inline bool has_alliance() const;
  inline void clear_alliance();
  static const int kAllianceFieldNumber = 3;
  inline const ::ProtoAlliance::AllianceCPP& alliance() const;
  inline ::ProtoAlliance::AllianceCPP* mutable_alliance();
  inline ::ProtoAlliance::AllianceCPP* release_alliance();
  inline void set_allocated_alliance(::ProtoAlliance::AllianceCPP* alliance);

  // @@protoc_insertion_point(class_scope:ProtoAlliance.PostionChangePushReq)
 private:
  inline void set_has_oldpos();
  inline void clear_has_oldpos();
  inline void set_has_newpos();
  inline void clear_has_newpos();
  inline void set_has_alliance();
  inline void clear_has_alliance();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 oldpos_;
  ::google::protobuf::uint32 newpos_;
  ::ProtoAlliance::AllianceCPP* alliance_;
  friend void  protobuf_AddDesc_ProtoAlliance_2eproto();
  friend void protobuf_AssignDesc_ProtoAlliance_2eproto();
  friend void protobuf_ShutdownFile_ProtoAlliance_2eproto();

  void InitAsDefaultInstance();
  static PostionChangePushReq* default_instance_;
};
// -------------------------------------------------------------------

class InviteJoinReq : public ::google::protobuf::Message {
 public:
  InviteJoinReq();
  virtual ~InviteJoinReq();

  InviteJoinReq(const InviteJoinReq& from);

  inline InviteJoinReq& operator=(const InviteJoinReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const InviteJoinReq& default_instance();

  void Swap(InviteJoinReq* other);

  // implements Message ----------------------------------------------

  InviteJoinReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const InviteJoinReq& from);
  void MergeFrom(const InviteJoinReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 invitedUid = 1;
  inline bool has_inviteduid() const;
  inline void clear_inviteduid();
  static const int kInvitedUidFieldNumber = 1;
  inline ::google::protobuf::uint32 inviteduid() const;
  inline void set_inviteduid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoAlliance.InviteJoinReq)
 private:
  inline void set_has_inviteduid();
  inline void clear_has_inviteduid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 inviteduid_;
  friend void  protobuf_AddDesc_ProtoAlliance_2eproto();
  friend void protobuf_AssignDesc_ProtoAlliance_2eproto();
  friend void protobuf_ShutdownFile_ProtoAlliance_2eproto();

  void InitAsDefaultInstance();
  static InviteJoinReq* default_instance_;
};
// -------------------------------------------------------------------

class RequestInviteJoinBC : public ::google::protobuf::Message {
 public:
  RequestInviteJoinBC();
  virtual ~RequestInviteJoinBC();

  RequestInviteJoinBC(const RequestInviteJoinBC& from);

  inline RequestInviteJoinBC& operator=(const RequestInviteJoinBC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RequestInviteJoinBC& default_instance();

  void Swap(RequestInviteJoinBC* other);

  // implements Message ----------------------------------------------

  RequestInviteJoinBC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RequestInviteJoinBC& from);
  void MergeFrom(const RequestInviteJoinBC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 aid = 1;
  inline bool has_aid() const;
  inline void clear_aid();
  static const int kAidFieldNumber = 1;
  inline ::google::protobuf::uint32 aid() const;
  inline void set_aid(::google::protobuf::uint32 value);

  // required uint32 uid = 2;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 2;
  inline ::google::protobuf::uint32 uid() const;
  inline void set_uid(::google::protobuf::uint32 value);

  // required uint32 invitedUid = 3;
  inline bool has_inviteduid() const;
  inline void clear_inviteduid();
  static const int kInvitedUidFieldNumber = 3;
  inline ::google::protobuf::uint32 inviteduid() const;
  inline void set_inviteduid(::google::protobuf::uint32 value);

  // required bytes name = 4;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 4;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const void* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:ProtoAlliance.RequestInviteJoinBC)
 private:
  inline void set_has_aid();
  inline void clear_has_aid();
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_inviteduid();
  inline void clear_has_inviteduid();
  inline void set_has_name();
  inline void clear_has_name();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 aid_;
  ::google::protobuf::uint32 uid_;
  ::std::string* name_;
  ::google::protobuf::uint32 inviteduid_;
  friend void  protobuf_AddDesc_ProtoAlliance_2eproto();
  friend void protobuf_AssignDesc_ProtoAlliance_2eproto();
  friend void protobuf_ShutdownFile_ProtoAlliance_2eproto();

  void InitAsDefaultInstance();
  static RequestInviteJoinBC* default_instance_;
};
// -------------------------------------------------------------------

class RequestInviteJoinUserBC : public ::google::protobuf::Message {
 public:
  RequestInviteJoinUserBC();
  virtual ~RequestInviteJoinUserBC();

  RequestInviteJoinUserBC(const RequestInviteJoinUserBC& from);

  inline RequestInviteJoinUserBC& operator=(const RequestInviteJoinUserBC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RequestInviteJoinUserBC& default_instance();

  void Swap(RequestInviteJoinUserBC* other);

  // implements Message ----------------------------------------------

  RequestInviteJoinUserBC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RequestInviteJoinUserBC& from);
  void MergeFrom(const RequestInviteJoinUserBC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 aid = 1;
  inline bool has_aid() const;
  inline void clear_aid();
  static const int kAidFieldNumber = 1;
  inline ::google::protobuf::uint32 aid() const;
  inline void set_aid(::google::protobuf::uint32 value);

  // required uint32 uid = 2;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 2;
  inline ::google::protobuf::uint32 uid() const;
  inline void set_uid(::google::protobuf::uint32 value);

  // required uint32 invitedUid = 3;
  inline bool has_inviteduid() const;
  inline void clear_inviteduid();
  static const int kInvitedUidFieldNumber = 3;
  inline ::google::protobuf::uint32 inviteduid() const;
  inline void set_inviteduid(::google::protobuf::uint32 value);

  // required uint32 allianceFlag = 4;
  inline bool has_allianceflag() const;
  inline void clear_allianceflag();
  static const int kAllianceFlagFieldNumber = 4;
  inline ::google::protobuf::uint32 allianceflag() const;
  inline void set_allianceflag(::google::protobuf::uint32 value);

  // required bytes name = 5;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 5;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const void* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // required bytes allianceName = 6;
  inline bool has_alliancename() const;
  inline void clear_alliancename();
  static const int kAllianceNameFieldNumber = 6;
  inline const ::std::string& alliancename() const;
  inline void set_alliancename(const ::std::string& value);
  inline void set_alliancename(const char* value);
  inline void set_alliancename(const void* value, size_t size);
  inline ::std::string* mutable_alliancename();
  inline ::std::string* release_alliancename();
  inline void set_allocated_alliancename(::std::string* alliancename);

  // @@protoc_insertion_point(class_scope:ProtoAlliance.RequestInviteJoinUserBC)
 private:
  inline void set_has_aid();
  inline void clear_has_aid();
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_inviteduid();
  inline void clear_has_inviteduid();
  inline void set_has_allianceflag();
  inline void clear_has_allianceflag();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_alliancename();
  inline void clear_has_alliancename();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 aid_;
  ::google::protobuf::uint32 uid_;
  ::google::protobuf::uint32 inviteduid_;
  ::google::protobuf::uint32 allianceflag_;
  ::std::string* name_;
  ::std::string* alliancename_;
  friend void  protobuf_AddDesc_ProtoAlliance_2eproto();
  friend void protobuf_AssignDesc_ProtoAlliance_2eproto();
  friend void protobuf_ShutdownFile_ProtoAlliance_2eproto();

  void InitAsDefaultInstance();
  static RequestInviteJoinUserBC* default_instance_;
};
// -------------------------------------------------------------------

class ReplyInviteJoinBC : public ::google::protobuf::Message {
 public:
  ReplyInviteJoinBC();
  virtual ~ReplyInviteJoinBC();

  ReplyInviteJoinBC(const ReplyInviteJoinBC& from);

  inline ReplyInviteJoinBC& operator=(const ReplyInviteJoinBC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReplyInviteJoinBC& default_instance();

  void Swap(ReplyInviteJoinBC* other);

  // implements Message ----------------------------------------------

  ReplyInviteJoinBC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReplyInviteJoinBC& from);
  void MergeFrom(const ReplyInviteJoinBC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 uid = 1;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 1;
  inline ::google::protobuf::uint32 uid() const;
  inline void set_uid(::google::protobuf::uint32 value);

  // optional .ProtoAlliance.InviteJoinResp alliance = 2;
  inline bool has_alliance() const;
  inline void clear_alliance();
  static const int kAllianceFieldNumber = 2;
  inline const ::ProtoAlliance::InviteJoinResp& alliance() const;
  inline ::ProtoAlliance::InviteJoinResp* mutable_alliance();
  inline ::ProtoAlliance::InviteJoinResp* release_alliance();
  inline void set_allocated_alliance(::ProtoAlliance::InviteJoinResp* alliance);

  // @@protoc_insertion_point(class_scope:ProtoAlliance.ReplyInviteJoinBC)
 private:
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_alliance();
  inline void clear_has_alliance();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::ProtoAlliance::InviteJoinResp* alliance_;
  ::google::protobuf::uint32 uid_;
  friend void  protobuf_AddDesc_ProtoAlliance_2eproto();
  friend void protobuf_AssignDesc_ProtoAlliance_2eproto();
  friend void protobuf_ShutdownFile_ProtoAlliance_2eproto();

  void InitAsDefaultInstance();
  static ReplyInviteJoinBC* default_instance_;
};
// -------------------------------------------------------------------

class InviteJoinResp : public ::google::protobuf::Message {
 public:
  InviteJoinResp();
  virtual ~InviteJoinResp();

  InviteJoinResp(const InviteJoinResp& from);

  inline InviteJoinResp& operator=(const InviteJoinResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const InviteJoinResp& default_instance();

  void Swap(InviteJoinResp* other);

  // implements Message ----------------------------------------------

  InviteJoinResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const InviteJoinResp& from);
  void MergeFrom(const InviteJoinResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 invitedUid = 1;
  inline bool has_inviteduid() const;
  inline void clear_inviteduid();
  static const int kInvitedUidFieldNumber = 1;
  inline ::google::protobuf::uint32 inviteduid() const;
  inline void set_inviteduid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoAlliance.InviteJoinResp)
 private:
  inline void set_has_inviteduid();
  inline void clear_has_inviteduid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 inviteduid_;
  friend void  protobuf_AddDesc_ProtoAlliance_2eproto();
  friend void protobuf_AssignDesc_ProtoAlliance_2eproto();
  friend void protobuf_ShutdownFile_ProtoAlliance_2eproto();

  void InitAsDefaultInstance();
  static InviteJoinResp* default_instance_;
};
// -------------------------------------------------------------------

class InvitedPushReq : public ::google::protobuf::Message {
 public:
  InvitedPushReq();
  virtual ~InvitedPushReq();

  InvitedPushReq(const InvitedPushReq& from);

  inline InvitedPushReq& operator=(const InvitedPushReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const InvitedPushReq& default_instance();

  void Swap(InvitedPushReq* other);

  // implements Message ----------------------------------------------

  InvitedPushReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const InvitedPushReq& from);
  void MergeFrom(const InvitedPushReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .ProtoAlliance.AllianceInvitedCPP invite = 1;
  inline bool has_invite() const;
  inline void clear_invite();
  static const int kInviteFieldNumber = 1;
  inline const ::ProtoAlliance::AllianceInvitedCPP& invite() const;
  inline ::ProtoAlliance::AllianceInvitedCPP* mutable_invite();
  inline ::ProtoAlliance::AllianceInvitedCPP* release_invite();
  inline void set_allocated_invite(::ProtoAlliance::AllianceInvitedCPP* invite);

  // @@protoc_insertion_point(class_scope:ProtoAlliance.InvitedPushReq)
 private:
  inline void set_has_invite();
  inline void clear_has_invite();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::ProtoAlliance::AllianceInvitedCPP* invite_;
  friend void  protobuf_AddDesc_ProtoAlliance_2eproto();
  friend void protobuf_AssignDesc_ProtoAlliance_2eproto();
  friend void protobuf_ShutdownFile_ProtoAlliance_2eproto();

  void InitAsDefaultInstance();
  static InvitedPushReq* default_instance_;
};
// -------------------------------------------------------------------

class AcceptInviteReq : public ::google::protobuf::Message {
 public:
  AcceptInviteReq();
  virtual ~AcceptInviteReq();

  AcceptInviteReq(const AcceptInviteReq& from);

  inline AcceptInviteReq& operator=(const AcceptInviteReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AcceptInviteReq& default_instance();

  void Swap(AcceptInviteReq* other);

  // implements Message ----------------------------------------------

  AcceptInviteReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AcceptInviteReq& from);
  void MergeFrom(const AcceptInviteReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 allianceId = 1;
  inline bool has_allianceid() const;
  inline void clear_allianceid();
  static const int kAllianceIdFieldNumber = 1;
  inline ::google::protobuf::uint32 allianceid() const;
  inline void set_allianceid(::google::protobuf::uint32 value);

  // required uint32 operate = 2;
  inline bool has_operate() const;
  inline void clear_operate();
  static const int kOperateFieldNumber = 2;
  inline ::google::protobuf::uint32 operate() const;
  inline void set_operate(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoAlliance.AcceptInviteReq)
 private:
  inline void set_has_allianceid();
  inline void clear_has_allianceid();
  inline void set_has_operate();
  inline void clear_has_operate();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 allianceid_;
  ::google::protobuf::uint32 operate_;
  friend void  protobuf_AddDesc_ProtoAlliance_2eproto();
  friend void protobuf_AssignDesc_ProtoAlliance_2eproto();
  friend void protobuf_ShutdownFile_ProtoAlliance_2eproto();

  void InitAsDefaultInstance();
  static AcceptInviteReq* default_instance_;
};
// -------------------------------------------------------------------

class RequestAcceptInviteBC : public ::google::protobuf::Message {
 public:
  RequestAcceptInviteBC();
  virtual ~RequestAcceptInviteBC();

  RequestAcceptInviteBC(const RequestAcceptInviteBC& from);

  inline RequestAcceptInviteBC& operator=(const RequestAcceptInviteBC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RequestAcceptInviteBC& default_instance();

  void Swap(RequestAcceptInviteBC* other);

  // implements Message ----------------------------------------------

  RequestAcceptInviteBC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RequestAcceptInviteBC& from);
  void MergeFrom(const RequestAcceptInviteBC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 allianceId = 1;
  inline bool has_allianceid() const;
  inline void clear_allianceid();
  static const int kAllianceIdFieldNumber = 1;
  inline ::google::protobuf::uint32 allianceid() const;
  inline void set_allianceid(::google::protobuf::uint32 value);

  // required uint32 inviteUid = 2;
  inline bool has_inviteuid() const;
  inline void clear_inviteuid();
  static const int kInviteUidFieldNumber = 2;
  inline ::google::protobuf::uint32 inviteuid() const;
  inline void set_inviteuid(::google::protobuf::uint32 value);

  // required uint32 operate = 3;
  inline bool has_operate() const;
  inline void clear_operate();
  static const int kOperateFieldNumber = 3;
  inline ::google::protobuf::uint32 operate() const;
  inline void set_operate(::google::protobuf::uint32 value);

  // optional .ProtoAlliance.AllianceMemberCPP member = 4;
  inline bool has_member() const;
  inline void clear_member();
  static const int kMemberFieldNumber = 4;
  inline const ::ProtoAlliance::AllianceMemberCPP& member() const;
  inline ::ProtoAlliance::AllianceMemberCPP* mutable_member();
  inline ::ProtoAlliance::AllianceMemberCPP* release_member();
  inline void set_allocated_member(::ProtoAlliance::AllianceMemberCPP* member);

  // @@protoc_insertion_point(class_scope:ProtoAlliance.RequestAcceptInviteBC)
 private:
  inline void set_has_allianceid();
  inline void clear_has_allianceid();
  inline void set_has_inviteuid();
  inline void clear_has_inviteuid();
  inline void set_has_operate();
  inline void clear_has_operate();
  inline void set_has_member();
  inline void clear_has_member();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 allianceid_;
  ::google::protobuf::uint32 inviteuid_;
  ::ProtoAlliance::AllianceMemberCPP* member_;
  ::google::protobuf::uint32 operate_;
  friend void  protobuf_AddDesc_ProtoAlliance_2eproto();
  friend void protobuf_AssignDesc_ProtoAlliance_2eproto();
  friend void protobuf_ShutdownFile_ProtoAlliance_2eproto();

  void InitAsDefaultInstance();
  static RequestAcceptInviteBC* default_instance_;
};
// -------------------------------------------------------------------

class ReplyAcceptInviteBC : public ::google::protobuf::Message {
 public:
  ReplyAcceptInviteBC();
  virtual ~ReplyAcceptInviteBC();

  ReplyAcceptInviteBC(const ReplyAcceptInviteBC& from);

  inline ReplyAcceptInviteBC& operator=(const ReplyAcceptInviteBC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReplyAcceptInviteBC& default_instance();

  void Swap(ReplyAcceptInviteBC* other);

  // implements Message ----------------------------------------------

  ReplyAcceptInviteBC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReplyAcceptInviteBC& from);
  void MergeFrom(const ReplyAcceptInviteBC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 uid = 1;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 1;
  inline ::google::protobuf::uint32 uid() const;
  inline void set_uid(::google::protobuf::uint32 value);

  // optional .ProtoAlliance.AcceptInviteResp alliance = 2;
  inline bool has_alliance() const;
  inline void clear_alliance();
  static const int kAllianceFieldNumber = 2;
  inline const ::ProtoAlliance::AcceptInviteResp& alliance() const;
  inline ::ProtoAlliance::AcceptInviteResp* mutable_alliance();
  inline ::ProtoAlliance::AcceptInviteResp* release_alliance();
  inline void set_allocated_alliance(::ProtoAlliance::AcceptInviteResp* alliance);

  // @@protoc_insertion_point(class_scope:ProtoAlliance.ReplyAcceptInviteBC)
 private:
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_alliance();
  inline void clear_has_alliance();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::ProtoAlliance::AcceptInviteResp* alliance_;
  ::google::protobuf::uint32 uid_;
  friend void  protobuf_AddDesc_ProtoAlliance_2eproto();
  friend void protobuf_AssignDesc_ProtoAlliance_2eproto();
  friend void protobuf_ShutdownFile_ProtoAlliance_2eproto();

  void InitAsDefaultInstance();
  static ReplyAcceptInviteBC* default_instance_;
};
// -------------------------------------------------------------------

class AcceptInviteResp : public ::google::protobuf::Message {
 public:
  AcceptInviteResp();
  virtual ~AcceptInviteResp();

  AcceptInviteResp(const AcceptInviteResp& from);

  inline AcceptInviteResp& operator=(const AcceptInviteResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AcceptInviteResp& default_instance();

  void Swap(AcceptInviteResp* other);

  // implements Message ----------------------------------------------

  AcceptInviteResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AcceptInviteResp& from);
  void MergeFrom(const AcceptInviteResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 allianceId = 1;
  inline bool has_allianceid() const;
  inline void clear_allianceid();
  static const int kAllianceIdFieldNumber = 1;
  inline ::google::protobuf::uint32 allianceid() const;
  inline void set_allianceid(::google::protobuf::uint32 value);

  // required uint32 operate = 2;
  inline bool has_operate() const;
  inline void clear_operate();
  static const int kOperateFieldNumber = 2;
  inline ::google::protobuf::uint32 operate() const;
  inline void set_operate(::google::protobuf::uint32 value);

  // optional .ProtoAlliance.AllianceMemberCPP member = 3;
  inline bool has_member() const;
  inline void clear_member();
  static const int kMemberFieldNumber = 3;
  inline const ::ProtoAlliance::AllianceMemberCPP& member() const;
  inline ::ProtoAlliance::AllianceMemberCPP* mutable_member();
  inline ::ProtoAlliance::AllianceMemberCPP* release_member();
  inline void set_allocated_member(::ProtoAlliance::AllianceMemberCPP* member);

  // optional .DataCommon.CommonItemsCPP commons = 4;
  inline bool has_commons() const;
  inline void clear_commons();
  static const int kCommonsFieldNumber = 4;
  inline const ::DataCommon::CommonItemsCPP& commons() const;
  inline ::DataCommon::CommonItemsCPP* mutable_commons();
  inline ::DataCommon::CommonItemsCPP* release_commons();
  inline void set_allocated_commons(::DataCommon::CommonItemsCPP* commons);

  // optional .ProtoAlliance.AllianceCPP alliance = 5;
  inline bool has_alliance() const;
  inline void clear_alliance();
  static const int kAllianceFieldNumber = 5;
  inline const ::ProtoAlliance::AllianceCPP& alliance() const;
  inline ::ProtoAlliance::AllianceCPP* mutable_alliance();
  inline ::ProtoAlliance::AllianceCPP* release_alliance();
  inline void set_allocated_alliance(::ProtoAlliance::AllianceCPP* alliance);

  // @@protoc_insertion_point(class_scope:ProtoAlliance.AcceptInviteResp)
 private:
  inline void set_has_allianceid();
  inline void clear_has_allianceid();
  inline void set_has_operate();
  inline void clear_has_operate();
  inline void set_has_member();
  inline void clear_has_member();
  inline void set_has_commons();
  inline void clear_has_commons();
  inline void set_has_alliance();
  inline void clear_has_alliance();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 allianceid_;
  ::google::protobuf::uint32 operate_;
  ::ProtoAlliance::AllianceMemberCPP* member_;
  ::DataCommon::CommonItemsCPP* commons_;
  ::ProtoAlliance::AllianceCPP* alliance_;
  friend void  protobuf_AddDesc_ProtoAlliance_2eproto();
  friend void protobuf_AssignDesc_ProtoAlliance_2eproto();
  friend void protobuf_ShutdownFile_ProtoAlliance_2eproto();

  void InitAsDefaultInstance();
  static AcceptInviteResp* default_instance_;
};
// -------------------------------------------------------------------

class ManipulateMemberReq : public ::google::protobuf::Message {
 public:
  ManipulateMemberReq();
  virtual ~ManipulateMemberReq();

  ManipulateMemberReq(const ManipulateMemberReq& from);

  inline ManipulateMemberReq& operator=(const ManipulateMemberReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ManipulateMemberReq& default_instance();

  void Swap(ManipulateMemberReq* other);

  // implements Message ----------------------------------------------

  ManipulateMemberReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ManipulateMemberReq& from);
  void MergeFrom(const ManipulateMemberReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 memberUid = 1;
  inline bool has_memberuid() const;
  inline void clear_memberuid();
  static const int kMemberUidFieldNumber = 1;
  inline ::google::protobuf::uint32 memberuid() const;
  inline void set_memberuid(::google::protobuf::uint32 value);

  // required uint32 operate = 2;
  inline bool has_operate() const;
  inline void clear_operate();
  static const int kOperateFieldNumber = 2;
  inline ::google::protobuf::uint32 operate() const;
  inline void set_operate(::google::protobuf::uint32 value);

  // required uint32 type = 3;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 3;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);

  // required uint32 destination = 4;
  inline bool has_destination() const;
  inline void clear_destination();
  static const int kDestinationFieldNumber = 4;
  inline ::google::protobuf::uint32 destination() const;
  inline void set_destination(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoAlliance.ManipulateMemberReq)
 private:
  inline void set_has_memberuid();
  inline void clear_has_memberuid();
  inline void set_has_operate();
  inline void clear_has_operate();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_destination();
  inline void clear_has_destination();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 memberuid_;
  ::google::protobuf::uint32 operate_;
  ::google::protobuf::uint32 type_;
  ::google::protobuf::uint32 destination_;
  friend void  protobuf_AddDesc_ProtoAlliance_2eproto();
  friend void protobuf_AssignDesc_ProtoAlliance_2eproto();
  friend void protobuf_ShutdownFile_ProtoAlliance_2eproto();

  void InitAsDefaultInstance();
  static ManipulateMemberReq* default_instance_;
};
// -------------------------------------------------------------------

class RequestManipulateMemberBC : public ::google::protobuf::Message {
 public:
  RequestManipulateMemberBC();
  virtual ~RequestManipulateMemberBC();

  RequestManipulateMemberBC(const RequestManipulateMemberBC& from);

  inline RequestManipulateMemberBC& operator=(const RequestManipulateMemberBC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RequestManipulateMemberBC& default_instance();

  void Swap(RequestManipulateMemberBC* other);

  // implements Message ----------------------------------------------

  RequestManipulateMemberBC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RequestManipulateMemberBC& from);
  void MergeFrom(const RequestManipulateMemberBC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 aid = 1;
  inline bool has_aid() const;
  inline void clear_aid();
  static const int kAidFieldNumber = 1;
  inline ::google::protobuf::uint32 aid() const;
  inline void set_aid(::google::protobuf::uint32 value);

  // required uint32 uid = 2;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 2;
  inline ::google::protobuf::uint32 uid() const;
  inline void set_uid(::google::protobuf::uint32 value);

  // required .ProtoAlliance.ManipulateMemberReq info = 3;
  inline bool has_info() const;
  inline void clear_info();
  static const int kInfoFieldNumber = 3;
  inline const ::ProtoAlliance::ManipulateMemberReq& info() const;
  inline ::ProtoAlliance::ManipulateMemberReq* mutable_info();
  inline ::ProtoAlliance::ManipulateMemberReq* release_info();
  inline void set_allocated_info(::ProtoAlliance::ManipulateMemberReq* info);

  // @@protoc_insertion_point(class_scope:ProtoAlliance.RequestManipulateMemberBC)
 private:
  inline void set_has_aid();
  inline void clear_has_aid();
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_info();
  inline void clear_has_info();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 aid_;
  ::google::protobuf::uint32 uid_;
  ::ProtoAlliance::ManipulateMemberReq* info_;
  friend void  protobuf_AddDesc_ProtoAlliance_2eproto();
  friend void protobuf_AssignDesc_ProtoAlliance_2eproto();
  friend void protobuf_ShutdownFile_ProtoAlliance_2eproto();

  void InitAsDefaultInstance();
  static RequestManipulateMemberBC* default_instance_;
};
// -------------------------------------------------------------------

class ReplyManipulateMemberBC : public ::google::protobuf::Message {
 public:
  ReplyManipulateMemberBC();
  virtual ~ReplyManipulateMemberBC();

  ReplyManipulateMemberBC(const ReplyManipulateMemberBC& from);

  inline ReplyManipulateMemberBC& operator=(const ReplyManipulateMemberBC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReplyManipulateMemberBC& default_instance();

  void Swap(ReplyManipulateMemberBC* other);

  // implements Message ----------------------------------------------

  ReplyManipulateMemberBC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReplyManipulateMemberBC& from);
  void MergeFrom(const ReplyManipulateMemberBC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 uid = 1;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 1;
  inline ::google::protobuf::uint32 uid() const;
  inline void set_uid(::google::protobuf::uint32 value);

  // optional .ProtoAlliance.ManipulateMemberResp alliance = 2;
  inline bool has_alliance() const;
  inline void clear_alliance();
  static const int kAllianceFieldNumber = 2;
  inline const ::ProtoAlliance::ManipulateMemberResp& alliance() const;
  inline ::ProtoAlliance::ManipulateMemberResp* mutable_alliance();
  inline ::ProtoAlliance::ManipulateMemberResp* release_alliance();
  inline void set_allocated_alliance(::ProtoAlliance::ManipulateMemberResp* alliance);

  // @@protoc_insertion_point(class_scope:ProtoAlliance.ReplyManipulateMemberBC)
 private:
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_alliance();
  inline void clear_has_alliance();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::ProtoAlliance::ManipulateMemberResp* alliance_;
  ::google::protobuf::uint32 uid_;
  friend void  protobuf_AddDesc_ProtoAlliance_2eproto();
  friend void protobuf_AssignDesc_ProtoAlliance_2eproto();
  friend void protobuf_ShutdownFile_ProtoAlliance_2eproto();

  void InitAsDefaultInstance();
  static ReplyManipulateMemberBC* default_instance_;
};
// -------------------------------------------------------------------

class ManipulateMemberResp : public ::google::protobuf::Message {
 public:
  ManipulateMemberResp();
  virtual ~ManipulateMemberResp();

  ManipulateMemberResp(const ManipulateMemberResp& from);

  inline ManipulateMemberResp& operator=(const ManipulateMemberResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ManipulateMemberResp& default_instance();

  void Swap(ManipulateMemberResp* other);

  // implements Message ----------------------------------------------

  ManipulateMemberResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ManipulateMemberResp& from);
  void MergeFrom(const ManipulateMemberResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .ProtoAlliance.AllianceMemberCPP member = 1;
  inline bool has_member() const;
  inline void clear_member();
  static const int kMemberFieldNumber = 1;
  inline const ::ProtoAlliance::AllianceMemberCPP& member() const;
  inline ::ProtoAlliance::AllianceMemberCPP* mutable_member();
  inline ::ProtoAlliance::AllianceMemberCPP* release_member();
  inline void set_allocated_member(::ProtoAlliance::AllianceMemberCPP* member);

  // @@protoc_insertion_point(class_scope:ProtoAlliance.ManipulateMemberResp)
 private:
  inline void set_has_member();
  inline void clear_has_member();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::ProtoAlliance::AllianceMemberCPP* member_;
  friend void  protobuf_AddDesc_ProtoAlliance_2eproto();
  friend void protobuf_AssignDesc_ProtoAlliance_2eproto();
  friend void protobuf_ShutdownFile_ProtoAlliance_2eproto();

  void InitAsDefaultInstance();
  static ManipulateMemberResp* default_instance_;
};
// -------------------------------------------------------------------

class KickOutReq : public ::google::protobuf::Message {
 public:
  KickOutReq();
  virtual ~KickOutReq();

  KickOutReq(const KickOutReq& from);

  inline KickOutReq& operator=(const KickOutReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const KickOutReq& default_instance();

  void Swap(KickOutReq* other);

  // implements Message ----------------------------------------------

  KickOutReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const KickOutReq& from);
  void MergeFrom(const KickOutReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 memberUid = 1;
  inline bool has_memberuid() const;
  inline void clear_memberuid();
  static const int kMemberUidFieldNumber = 1;
  inline ::google::protobuf::uint32 memberuid() const;
  inline void set_memberuid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoAlliance.KickOutReq)
 private:
  inline void set_has_memberuid();
  inline void clear_has_memberuid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 memberuid_;
  friend void  protobuf_AddDesc_ProtoAlliance_2eproto();
  friend void protobuf_AssignDesc_ProtoAlliance_2eproto();
  friend void protobuf_ShutdownFile_ProtoAlliance_2eproto();

  void InitAsDefaultInstance();
  static KickOutReq* default_instance_;
};
// -------------------------------------------------------------------

class RequestKickOutBC : public ::google::protobuf::Message {
 public:
  RequestKickOutBC();
  virtual ~RequestKickOutBC();

  RequestKickOutBC(const RequestKickOutBC& from);

  inline RequestKickOutBC& operator=(const RequestKickOutBC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RequestKickOutBC& default_instance();

  void Swap(RequestKickOutBC* other);

  // implements Message ----------------------------------------------

  RequestKickOutBC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RequestKickOutBC& from);
  void MergeFrom(const RequestKickOutBC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 aid = 1;
  inline bool has_aid() const;
  inline void clear_aid();
  static const int kAidFieldNumber = 1;
  inline ::google::protobuf::uint32 aid() const;
  inline void set_aid(::google::protobuf::uint32 value);

  // required uint32 uid = 2;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 2;
  inline ::google::protobuf::uint32 uid() const;
  inline void set_uid(::google::protobuf::uint32 value);

  // required uint32 memberUid = 3;
  inline bool has_memberuid() const;
  inline void clear_memberuid();
  static const int kMemberUidFieldNumber = 3;
  inline ::google::protobuf::uint32 memberuid() const;
  inline void set_memberuid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoAlliance.RequestKickOutBC)
 private:
  inline void set_has_aid();
  inline void clear_has_aid();
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_memberuid();
  inline void clear_has_memberuid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 aid_;
  ::google::protobuf::uint32 uid_;
  ::google::protobuf::uint32 memberuid_;
  friend void  protobuf_AddDesc_ProtoAlliance_2eproto();
  friend void protobuf_AssignDesc_ProtoAlliance_2eproto();
  friend void protobuf_ShutdownFile_ProtoAlliance_2eproto();

  void InitAsDefaultInstance();
  static RequestKickOutBC* default_instance_;
};
// -------------------------------------------------------------------

class ReplyKickOutBC : public ::google::protobuf::Message {
 public:
  ReplyKickOutBC();
  virtual ~ReplyKickOutBC();

  ReplyKickOutBC(const ReplyKickOutBC& from);

  inline ReplyKickOutBC& operator=(const ReplyKickOutBC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReplyKickOutBC& default_instance();

  void Swap(ReplyKickOutBC* other);

  // implements Message ----------------------------------------------

  ReplyKickOutBC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReplyKickOutBC& from);
  void MergeFrom(const ReplyKickOutBC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 uid = 1;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 1;
  inline ::google::protobuf::uint32 uid() const;
  inline void set_uid(::google::protobuf::uint32 value);

  // optional .ProtoAlliance.KickOutResp alliance = 2;
  inline bool has_alliance() const;
  inline void clear_alliance();
  static const int kAllianceFieldNumber = 2;
  inline const ::ProtoAlliance::KickOutResp& alliance() const;
  inline ::ProtoAlliance::KickOutResp* mutable_alliance();
  inline ::ProtoAlliance::KickOutResp* release_alliance();
  inline void set_allocated_alliance(::ProtoAlliance::KickOutResp* alliance);

  // @@protoc_insertion_point(class_scope:ProtoAlliance.ReplyKickOutBC)
 private:
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_alliance();
  inline void clear_has_alliance();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::ProtoAlliance::KickOutResp* alliance_;
  ::google::protobuf::uint32 uid_;
  friend void  protobuf_AddDesc_ProtoAlliance_2eproto();
  friend void protobuf_AssignDesc_ProtoAlliance_2eproto();
  friend void protobuf_ShutdownFile_ProtoAlliance_2eproto();

  void InitAsDefaultInstance();
  static ReplyKickOutBC* default_instance_;
};
// -------------------------------------------------------------------

class RequestKickOutMemberBC : public ::google::protobuf::Message {
 public:
  RequestKickOutMemberBC();
  virtual ~RequestKickOutMemberBC();

  RequestKickOutMemberBC(const RequestKickOutMemberBC& from);

  inline RequestKickOutMemberBC& operator=(const RequestKickOutMemberBC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RequestKickOutMemberBC& default_instance();

  void Swap(RequestKickOutMemberBC* other);

  // implements Message ----------------------------------------------

  RequestKickOutMemberBC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RequestKickOutMemberBC& from);
  void MergeFrom(const RequestKickOutMemberBC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 aid = 1;
  inline bool has_aid() const;
  inline void clear_aid();
  static const int kAidFieldNumber = 1;
  inline ::google::protobuf::uint32 aid() const;
  inline void set_aid(::google::protobuf::uint32 value);

  // required uint32 uid = 2;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 2;
  inline ::google::protobuf::uint32 uid() const;
  inline void set_uid(::google::protobuf::uint32 value);

  // required uint32 memberUid = 3;
  inline bool has_memberuid() const;
  inline void clear_memberuid();
  static const int kMemberUidFieldNumber = 3;
  inline ::google::protobuf::uint32 memberuid() const;
  inline void set_memberuid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoAlliance.RequestKickOutMemberBC)
 private:
  inline void set_has_aid();
  inline void clear_has_aid();
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_memberuid();
  inline void clear_has_memberuid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 aid_;
  ::google::protobuf::uint32 uid_;
  ::google::protobuf::uint32 memberuid_;
  friend void  protobuf_AddDesc_ProtoAlliance_2eproto();
  friend void protobuf_AssignDesc_ProtoAlliance_2eproto();
  friend void protobuf_ShutdownFile_ProtoAlliance_2eproto();

  void InitAsDefaultInstance();
  static RequestKickOutMemberBC* default_instance_;
};
// -------------------------------------------------------------------

class KickOutResp : public ::google::protobuf::Message {
 public:
  KickOutResp();
  virtual ~KickOutResp();

  KickOutResp(const KickOutResp& from);

  inline KickOutResp& operator=(const KickOutResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const KickOutResp& default_instance();

  void Swap(KickOutResp* other);

  // implements Message ----------------------------------------------

  KickOutResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const KickOutResp& from);
  void MergeFrom(const KickOutResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 memberUid = 1;
  inline bool has_memberuid() const;
  inline void clear_memberuid();
  static const int kMemberUidFieldNumber = 1;
  inline ::google::protobuf::uint32 memberuid() const;
  inline void set_memberuid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoAlliance.KickOutResp)
 private:
  inline void set_has_memberuid();
  inline void clear_has_memberuid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 memberuid_;
  friend void  protobuf_AddDesc_ProtoAlliance_2eproto();
  friend void protobuf_AssignDesc_ProtoAlliance_2eproto();
  friend void protobuf_ShutdownFile_ProtoAlliance_2eproto();

  void InitAsDefaultInstance();
  static KickOutResp* default_instance_;
};
// -------------------------------------------------------------------

class TransferReq : public ::google::protobuf::Message {
 public:
  TransferReq();
  virtual ~TransferReq();

  TransferReq(const TransferReq& from);

  inline TransferReq& operator=(const TransferReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TransferReq& default_instance();

  void Swap(TransferReq* other);

  // implements Message ----------------------------------------------

  TransferReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TransferReq& from);
  void MergeFrom(const TransferReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 memberUid = 1;
  inline bool has_memberuid() const;
  inline void clear_memberuid();
  static const int kMemberUidFieldNumber = 1;
  inline ::google::protobuf::uint32 memberuid() const;
  inline void set_memberuid(::google::protobuf::uint32 value);

  // required bytes otherName = 2;
  inline bool has_othername() const;
  inline void clear_othername();
  static const int kOtherNameFieldNumber = 2;
  inline const ::std::string& othername() const;
  inline void set_othername(const ::std::string& value);
  inline void set_othername(const char* value);
  inline void set_othername(const void* value, size_t size);
  inline ::std::string* mutable_othername();
  inline ::std::string* release_othername();
  inline void set_allocated_othername(::std::string* othername);

  // @@protoc_insertion_point(class_scope:ProtoAlliance.TransferReq)
 private:
  inline void set_has_memberuid();
  inline void clear_has_memberuid();
  inline void set_has_othername();
  inline void clear_has_othername();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* othername_;
  ::google::protobuf::uint32 memberuid_;
  friend void  protobuf_AddDesc_ProtoAlliance_2eproto();
  friend void protobuf_AssignDesc_ProtoAlliance_2eproto();
  friend void protobuf_ShutdownFile_ProtoAlliance_2eproto();

  void InitAsDefaultInstance();
  static TransferReq* default_instance_;
};
// -------------------------------------------------------------------

class RequestTransferBC : public ::google::protobuf::Message {
 public:
  RequestTransferBC();
  virtual ~RequestTransferBC();

  RequestTransferBC(const RequestTransferBC& from);

  inline RequestTransferBC& operator=(const RequestTransferBC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RequestTransferBC& default_instance();

  void Swap(RequestTransferBC* other);

  // implements Message ----------------------------------------------

  RequestTransferBC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RequestTransferBC& from);
  void MergeFrom(const RequestTransferBC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 aid = 1;
  inline bool has_aid() const;
  inline void clear_aid();
  static const int kAidFieldNumber = 1;
  inline ::google::protobuf::uint32 aid() const;
  inline void set_aid(::google::protobuf::uint32 value);

  // required uint32 uid = 2;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 2;
  inline ::google::protobuf::uint32 uid() const;
  inline void set_uid(::google::protobuf::uint32 value);

  // required uint32 memberUid = 3;
  inline bool has_memberuid() const;
  inline void clear_memberuid();
  static const int kMemberUidFieldNumber = 3;
  inline ::google::protobuf::uint32 memberuid() const;
  inline void set_memberuid(::google::protobuf::uint32 value);

  // required bytes otherName = 4;
  inline bool has_othername() const;
  inline void clear_othername();
  static const int kOtherNameFieldNumber = 4;
  inline const ::std::string& othername() const;
  inline void set_othername(const ::std::string& value);
  inline void set_othername(const char* value);
  inline void set_othername(const void* value, size_t size);
  inline ::std::string* mutable_othername();
  inline ::std::string* release_othername();
  inline void set_allocated_othername(::std::string* othername);

  // @@protoc_insertion_point(class_scope:ProtoAlliance.RequestTransferBC)
 private:
  inline void set_has_aid();
  inline void clear_has_aid();
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_memberuid();
  inline void clear_has_memberuid();
  inline void set_has_othername();
  inline void clear_has_othername();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 aid_;
  ::google::protobuf::uint32 uid_;
  ::std::string* othername_;
  ::google::protobuf::uint32 memberuid_;
  friend void  protobuf_AddDesc_ProtoAlliance_2eproto();
  friend void protobuf_AssignDesc_ProtoAlliance_2eproto();
  friend void protobuf_ShutdownFile_ProtoAlliance_2eproto();

  void InitAsDefaultInstance();
  static RequestTransferBC* default_instance_;
};
// -------------------------------------------------------------------

class ReplyTransferBC : public ::google::protobuf::Message {
 public:
  ReplyTransferBC();
  virtual ~ReplyTransferBC();

  ReplyTransferBC(const ReplyTransferBC& from);

  inline ReplyTransferBC& operator=(const ReplyTransferBC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReplyTransferBC& default_instance();

  void Swap(ReplyTransferBC* other);

  // implements Message ----------------------------------------------

  ReplyTransferBC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReplyTransferBC& from);
  void MergeFrom(const ReplyTransferBC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 uid = 1;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 1;
  inline ::google::protobuf::uint32 uid() const;
  inline void set_uid(::google::protobuf::uint32 value);

  // optional .ProtoAlliance.TransferResp alliance = 2;
  inline bool has_alliance() const;
  inline void clear_alliance();
  static const int kAllianceFieldNumber = 2;
  inline const ::ProtoAlliance::TransferResp& alliance() const;
  inline ::ProtoAlliance::TransferResp* mutable_alliance();
  inline ::ProtoAlliance::TransferResp* release_alliance();
  inline void set_allocated_alliance(::ProtoAlliance::TransferResp* alliance);

  // @@protoc_insertion_point(class_scope:ProtoAlliance.ReplyTransferBC)
 private:
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_alliance();
  inline void clear_has_alliance();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::ProtoAlliance::TransferResp* alliance_;
  ::google::protobuf::uint32 uid_;
  friend void  protobuf_AddDesc_ProtoAlliance_2eproto();
  friend void protobuf_AssignDesc_ProtoAlliance_2eproto();
  friend void protobuf_ShutdownFile_ProtoAlliance_2eproto();

  void InitAsDefaultInstance();
  static ReplyTransferBC* default_instance_;
};
// -------------------------------------------------------------------

class TransferResp : public ::google::protobuf::Message {
 public:
  TransferResp();
  virtual ~TransferResp();

  TransferResp(const TransferResp& from);

  inline TransferResp& operator=(const TransferResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TransferResp& default_instance();

  void Swap(TransferResp* other);

  // implements Message ----------------------------------------------

  TransferResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TransferResp& from);
  void MergeFrom(const TransferResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .ProtoAlliance.AllianceMemberCPP myself = 1;
  inline bool has_myself() const;
  inline void clear_myself();
  static const int kMyselfFieldNumber = 1;
  inline const ::ProtoAlliance::AllianceMemberCPP& myself() const;
  inline ::ProtoAlliance::AllianceMemberCPP* mutable_myself();
  inline ::ProtoAlliance::AllianceMemberCPP* release_myself();
  inline void set_allocated_myself(::ProtoAlliance::AllianceMemberCPP* myself);

  // required .ProtoAlliance.AllianceMemberCPP other = 2;
  inline bool has_other() const;
  inline void clear_other();
  static const int kOtherFieldNumber = 2;
  inline const ::ProtoAlliance::AllianceMemberCPP& other() const;
  inline ::ProtoAlliance::AllianceMemberCPP* mutable_other();
  inline ::ProtoAlliance::AllianceMemberCPP* release_other();
  inline void set_allocated_other(::ProtoAlliance::AllianceMemberCPP* other);

  // required .ProtoAlliance.AllianceCPP alliance = 3;
  inline bool has_alliance() const;
  inline void clear_alliance();
  static const int kAllianceFieldNumber = 3;
  inline const ::ProtoAlliance::AllianceCPP& alliance() const;
  inline ::ProtoAlliance::AllianceCPP* mutable_alliance();
  inline ::ProtoAlliance::AllianceCPP* release_alliance();
  inline void set_allocated_alliance(::ProtoAlliance::AllianceCPP* alliance);

  // @@protoc_insertion_point(class_scope:ProtoAlliance.TransferResp)
 private:
  inline void set_has_myself();
  inline void clear_has_myself();
  inline void set_has_other();
  inline void clear_has_other();
  inline void set_has_alliance();
  inline void clear_has_alliance();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::ProtoAlliance::AllianceMemberCPP* myself_;
  ::ProtoAlliance::AllianceMemberCPP* other_;
  ::ProtoAlliance::AllianceCPP* alliance_;
  friend void  protobuf_AddDesc_ProtoAlliance_2eproto();
  friend void protobuf_AssignDesc_ProtoAlliance_2eproto();
  friend void protobuf_ShutdownFile_ProtoAlliance_2eproto();

  void InitAsDefaultInstance();
  static TransferResp* default_instance_;
};
// -------------------------------------------------------------------

class EditAllianceReq : public ::google::protobuf::Message {
 public:
  EditAllianceReq();
  virtual ~EditAllianceReq();

  EditAllianceReq(const EditAllianceReq& from);

  inline EditAllianceReq& operator=(const EditAllianceReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EditAllianceReq& default_instance();

  void Swap(EditAllianceReq* other);

  // implements Message ----------------------------------------------

  EditAllianceReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const EditAllianceReq& from);
  void MergeFrom(const EditAllianceReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 flag = 1;
  inline bool has_flag() const;
  inline void clear_flag();
  static const int kFlagFieldNumber = 1;
  inline ::google::protobuf::uint32 flag() const;
  inline void set_flag(::google::protobuf::uint32 value);

  // required bytes description = 2;
  inline bool has_description() const;
  inline void clear_description();
  static const int kDescriptionFieldNumber = 2;
  inline const ::std::string& description() const;
  inline void set_description(const ::std::string& value);
  inline void set_description(const char* value);
  inline void set_description(const void* value, size_t size);
  inline ::std::string* mutable_description();
  inline ::std::string* release_description();
  inline void set_allocated_description(::std::string* description);

  // required uint32 applyType = 3;
  inline bool has_applytype() const;
  inline void clear_applytype();
  static const int kApplyTypeFieldNumber = 3;
  inline ::google::protobuf::uint32 applytype() const;
  inline void set_applytype(::google::protobuf::uint32 value);

  // required uint32 applyLevelLimit = 4;
  inline bool has_applylevellimit() const;
  inline void clear_applylevellimit();
  static const int kApplyLevelLimitFieldNumber = 4;
  inline ::google::protobuf::uint32 applylevellimit() const;
  inline void set_applylevellimit(::google::protobuf::uint32 value);

  // optional uint32 qqgroup = 5;
  inline bool has_qqgroup() const;
  inline void clear_qqgroup();
  static const int kQqgroupFieldNumber = 5;
  inline ::google::protobuf::uint32 qqgroup() const;
  inline void set_qqgroup(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoAlliance.EditAllianceReq)
 private:
  inline void set_has_flag();
  inline void clear_has_flag();
  inline void set_has_description();
  inline void clear_has_description();
  inline void set_has_applytype();
  inline void clear_has_applytype();
  inline void set_has_applylevellimit();
  inline void clear_has_applylevellimit();
  inline void set_has_qqgroup();
  inline void clear_has_qqgroup();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* description_;
  ::google::protobuf::uint32 flag_;
  ::google::protobuf::uint32 applytype_;
  ::google::protobuf::uint32 applylevellimit_;
  ::google::protobuf::uint32 qqgroup_;
  friend void  protobuf_AddDesc_ProtoAlliance_2eproto();
  friend void protobuf_AssignDesc_ProtoAlliance_2eproto();
  friend void protobuf_ShutdownFile_ProtoAlliance_2eproto();

  void InitAsDefaultInstance();
  static EditAllianceReq* default_instance_;
};
// -------------------------------------------------------------------

class RequestEditAllianceBC : public ::google::protobuf::Message {
 public:
  RequestEditAllianceBC();
  virtual ~RequestEditAllianceBC();

  RequestEditAllianceBC(const RequestEditAllianceBC& from);

  inline RequestEditAllianceBC& operator=(const RequestEditAllianceBC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RequestEditAllianceBC& default_instance();

  void Swap(RequestEditAllianceBC* other);

  // implements Message ----------------------------------------------

  RequestEditAllianceBC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RequestEditAllianceBC& from);
  void MergeFrom(const RequestEditAllianceBC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 aid = 1;
  inline bool has_aid() const;
  inline void clear_aid();
  static const int kAidFieldNumber = 1;
  inline ::google::protobuf::uint32 aid() const;
  inline void set_aid(::google::protobuf::uint32 value);

  // required uint32 uid = 2;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 2;
  inline ::google::protobuf::uint32 uid() const;
  inline void set_uid(::google::protobuf::uint32 value);

  // required .ProtoAlliance.EditAllianceReq info = 3;
  inline bool has_info() const;
  inline void clear_info();
  static const int kInfoFieldNumber = 3;
  inline const ::ProtoAlliance::EditAllianceReq& info() const;
  inline ::ProtoAlliance::EditAllianceReq* mutable_info();
  inline ::ProtoAlliance::EditAllianceReq* release_info();
  inline void set_allocated_info(::ProtoAlliance::EditAllianceReq* info);

  // @@protoc_insertion_point(class_scope:ProtoAlliance.RequestEditAllianceBC)
 private:
  inline void set_has_aid();
  inline void clear_has_aid();
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_info();
  inline void clear_has_info();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 aid_;
  ::google::protobuf::uint32 uid_;
  ::ProtoAlliance::EditAllianceReq* info_;
  friend void  protobuf_AddDesc_ProtoAlliance_2eproto();
  friend void protobuf_AssignDesc_ProtoAlliance_2eproto();
  friend void protobuf_ShutdownFile_ProtoAlliance_2eproto();

  void InitAsDefaultInstance();
  static RequestEditAllianceBC* default_instance_;
};
// -------------------------------------------------------------------

class ReplyEditAllianceBC : public ::google::protobuf::Message {
 public:
  ReplyEditAllianceBC();
  virtual ~ReplyEditAllianceBC();

  ReplyEditAllianceBC(const ReplyEditAllianceBC& from);

  inline ReplyEditAllianceBC& operator=(const ReplyEditAllianceBC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReplyEditAllianceBC& default_instance();

  void Swap(ReplyEditAllianceBC* other);

  // implements Message ----------------------------------------------

  ReplyEditAllianceBC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReplyEditAllianceBC& from);
  void MergeFrom(const ReplyEditAllianceBC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 uid = 1;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 1;
  inline ::google::protobuf::uint32 uid() const;
  inline void set_uid(::google::protobuf::uint32 value);

  // optional .ProtoAlliance.EditAllianceResp alliance = 2;
  inline bool has_alliance() const;
  inline void clear_alliance();
  static const int kAllianceFieldNumber = 2;
  inline const ::ProtoAlliance::EditAllianceResp& alliance() const;
  inline ::ProtoAlliance::EditAllianceResp* mutable_alliance();
  inline ::ProtoAlliance::EditAllianceResp* release_alliance();
  inline void set_allocated_alliance(::ProtoAlliance::EditAllianceResp* alliance);

  // @@protoc_insertion_point(class_scope:ProtoAlliance.ReplyEditAllianceBC)
 private:
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_alliance();
  inline void clear_has_alliance();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::ProtoAlliance::EditAllianceResp* alliance_;
  ::google::protobuf::uint32 uid_;
  friend void  protobuf_AddDesc_ProtoAlliance_2eproto();
  friend void protobuf_AssignDesc_ProtoAlliance_2eproto();
  friend void protobuf_ShutdownFile_ProtoAlliance_2eproto();

  void InitAsDefaultInstance();
  static ReplyEditAllianceBC* default_instance_;
};
// -------------------------------------------------------------------

class EditAllianceResp : public ::google::protobuf::Message {
 public:
  EditAllianceResp();
  virtual ~EditAllianceResp();

  EditAllianceResp(const EditAllianceResp& from);

  inline EditAllianceResp& operator=(const EditAllianceResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EditAllianceResp& default_instance();

  void Swap(EditAllianceResp* other);

  // implements Message ----------------------------------------------

  EditAllianceResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const EditAllianceResp& from);
  void MergeFrom(const EditAllianceResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .ProtoAlliance.AllianceCPP alliance = 1;
  inline bool has_alliance() const;
  inline void clear_alliance();
  static const int kAllianceFieldNumber = 1;
  inline const ::ProtoAlliance::AllianceCPP& alliance() const;
  inline ::ProtoAlliance::AllianceCPP* mutable_alliance();
  inline ::ProtoAlliance::AllianceCPP* release_alliance();
  inline void set_allocated_alliance(::ProtoAlliance::AllianceCPP* alliance);

  // @@protoc_insertion_point(class_scope:ProtoAlliance.EditAllianceResp)
 private:
  inline void set_has_alliance();
  inline void clear_has_alliance();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::ProtoAlliance::AllianceCPP* alliance_;
  friend void  protobuf_AddDesc_ProtoAlliance_2eproto();
  friend void protobuf_AssignDesc_ProtoAlliance_2eproto();
  friend void protobuf_ShutdownFile_ProtoAlliance_2eproto();

  void InitAsDefaultInstance();
  static EditAllianceResp* default_instance_;
};
// -------------------------------------------------------------------

class AllianceDonationCPP : public ::google::protobuf::Message {
 public:
  AllianceDonationCPP();
  virtual ~AllianceDonationCPP();

  AllianceDonationCPP(const AllianceDonationCPP& from);

  inline AllianceDonationCPP& operator=(const AllianceDonationCPP& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AllianceDonationCPP& default_instance();

  void Swap(AllianceDonationCPP* other);

  // implements Message ----------------------------------------------

  AllianceDonationCPP* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AllianceDonationCPP& from);
  void MergeFrom(const AllianceDonationCPP& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 applyUid = 1;
  inline bool has_applyuid() const;
  inline void clear_applyuid();
  static const int kApplyUidFieldNumber = 1;
  inline ::google::protobuf::uint32 applyuid() const;
  inline void set_applyuid(::google::protobuf::uint32 value);

  // required uint32 propsid = 2;
  inline bool has_propsid() const;
  inline void clear_propsid();
  static const int kPropsidFieldNumber = 2;
  inline ::google::protobuf::uint32 propsid() const;
  inline void set_propsid(::google::protobuf::uint32 value);

  // required uint32 count = 3;
  inline bool has_count() const;
  inline void clear_count();
  static const int kCountFieldNumber = 3;
  inline ::google::protobuf::uint32 count() const;
  inline void set_count(::google::protobuf::uint32 value);

  // required uint32 donateCount = 4;
  inline bool has_donatecount() const;
  inline void clear_donatecount();
  static const int kDonateCountFieldNumber = 4;
  inline ::google::protobuf::uint32 donatecount() const;
  inline void set_donatecount(::google::protobuf::uint32 value);

  // required uint32 fetchCount = 5;
  inline bool has_fetchcount() const;
  inline void clear_fetchcount();
  static const int kFetchCountFieldNumber = 5;
  inline ::google::protobuf::uint32 fetchcount() const;
  inline void set_fetchcount(::google::protobuf::uint32 value);

  // required uint32 status = 6;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 6;
  inline ::google::protobuf::uint32 status() const;
  inline void set_status(::google::protobuf::uint32 value);

  // required bytes name = 7;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 7;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const void* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // repeated uint32 donateUid = 8;
  inline int donateuid_size() const;
  inline void clear_donateuid();
  static const int kDonateUidFieldNumber = 8;
  inline ::google::protobuf::uint32 donateuid(int index) const;
  inline void set_donateuid(int index, ::google::protobuf::uint32 value);
  inline void add_donateuid(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      donateuid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_donateuid();

  // repeated uint32 donateTimes = 9;
  inline int donatetimes_size() const;
  inline void clear_donatetimes();
  static const int kDonateTimesFieldNumber = 9;
  inline ::google::protobuf::uint32 donatetimes(int index) const;
  inline void set_donatetimes(int index, ::google::protobuf::uint32 value);
  inline void add_donatetimes(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      donatetimes() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_donatetimes();

  // repeated bytes donateName = 10;
  inline int donatename_size() const;
  inline void clear_donatename();
  static const int kDonateNameFieldNumber = 10;
  inline const ::std::string& donatename(int index) const;
  inline ::std::string* mutable_donatename(int index);
  inline void set_donatename(int index, const ::std::string& value);
  inline void set_donatename(int index, const char* value);
  inline void set_donatename(int index, const void* value, size_t size);
  inline ::std::string* add_donatename();
  inline void add_donatename(const ::std::string& value);
  inline void add_donatename(const char* value);
  inline void add_donatename(const void* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& donatename() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_donatename();

  // required uint32 applyts = 11;
  inline bool has_applyts() const;
  inline void clear_applyts();
  static const int kApplytsFieldNumber = 11;
  inline ::google::protobuf::uint32 applyts() const;
  inline void set_applyts(::google::protobuf::uint32 value);

  // required uint32 level = 12;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 12;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoAlliance.AllianceDonationCPP)
 private:
  inline void set_has_applyuid();
  inline void clear_has_applyuid();
  inline void set_has_propsid();
  inline void clear_has_propsid();
  inline void set_has_count();
  inline void clear_has_count();
  inline void set_has_donatecount();
  inline void clear_has_donatecount();
  inline void set_has_fetchcount();
  inline void clear_has_fetchcount();
  inline void set_has_status();
  inline void clear_has_status();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_applyts();
  inline void clear_has_applyts();
  inline void set_has_level();
  inline void clear_has_level();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 applyuid_;
  ::google::protobuf::uint32 propsid_;
  ::google::protobuf::uint32 count_;
  ::google::protobuf::uint32 donatecount_;
  ::google::protobuf::uint32 fetchcount_;
  ::google::protobuf::uint32 status_;
  ::std::string* name_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > donateuid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > donatetimes_;
  ::google::protobuf::RepeatedPtrField< ::std::string> donatename_;
  ::google::protobuf::uint32 applyts_;
  ::google::protobuf::uint32 level_;
  friend void  protobuf_AddDesc_ProtoAlliance_2eproto();
  friend void protobuf_AssignDesc_ProtoAlliance_2eproto();
  friend void protobuf_ShutdownFile_ProtoAlliance_2eproto();

  void InitAsDefaultInstance();
  static AllianceDonationCPP* default_instance_;
};
// -------------------------------------------------------------------

class SeekDonationReq : public ::google::protobuf::Message {
 public:
  SeekDonationReq();
  virtual ~SeekDonationReq();

  SeekDonationReq(const SeekDonationReq& from);

  inline SeekDonationReq& operator=(const SeekDonationReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SeekDonationReq& default_instance();

  void Swap(SeekDonationReq* other);

  // implements Message ----------------------------------------------

  SeekDonationReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SeekDonationReq& from);
  void MergeFrom(const SeekDonationReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 propsid = 1;
  inline bool has_propsid() const;
  inline void clear_propsid();
  static const int kPropsidFieldNumber = 1;
  inline ::google::protobuf::uint32 propsid() const;
  inline void set_propsid(::google::protobuf::uint32 value);

  // required uint32 count = 2;
  inline bool has_count() const;
  inline void clear_count();
  static const int kCountFieldNumber = 2;
  inline ::google::protobuf::uint32 count() const;
  inline void set_count(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoAlliance.SeekDonationReq)
 private:
  inline void set_has_propsid();
  inline void clear_has_propsid();
  inline void set_has_count();
  inline void clear_has_count();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 propsid_;
  ::google::protobuf::uint32 count_;
  friend void  protobuf_AddDesc_ProtoAlliance_2eproto();
  friend void protobuf_AssignDesc_ProtoAlliance_2eproto();
  friend void protobuf_ShutdownFile_ProtoAlliance_2eproto();

  void InitAsDefaultInstance();
  static SeekDonationReq* default_instance_;
};
// -------------------------------------------------------------------

class RequestSeekDonationBC : public ::google::protobuf::Message {
 public:
  RequestSeekDonationBC();
  virtual ~RequestSeekDonationBC();

  RequestSeekDonationBC(const RequestSeekDonationBC& from);

  inline RequestSeekDonationBC& operator=(const RequestSeekDonationBC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RequestSeekDonationBC& default_instance();

  void Swap(RequestSeekDonationBC* other);

  // implements Message ----------------------------------------------

  RequestSeekDonationBC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RequestSeekDonationBC& from);
  void MergeFrom(const RequestSeekDonationBC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 uid = 1;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 1;
  inline ::google::protobuf::uint32 uid() const;
  inline void set_uid(::google::protobuf::uint32 value);

  // required uint32 count = 2;
  inline bool has_count() const;
  inline void clear_count();
  static const int kCountFieldNumber = 2;
  inline ::google::protobuf::uint32 count() const;
  inline void set_count(::google::protobuf::uint32 value);

  // required uint32 aid = 3;
  inline bool has_aid() const;
  inline void clear_aid();
  static const int kAidFieldNumber = 3;
  inline ::google::protobuf::uint32 aid() const;
  inline void set_aid(::google::protobuf::uint32 value);

  // required uint32 propsid = 4;
  inline bool has_propsid() const;
  inline void clear_propsid();
  static const int kPropsidFieldNumber = 4;
  inline ::google::protobuf::uint32 propsid() const;
  inline void set_propsid(::google::protobuf::uint32 value);

  // required uint32 cdtime = 5;
  inline bool has_cdtime() const;
  inline void clear_cdtime();
  static const int kCdtimeFieldNumber = 5;
  inline ::google::protobuf::uint32 cdtime() const;
  inline void set_cdtime(::google::protobuf::uint32 value);

  // required bytes name = 6;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 6;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const void* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // required uint32 level = 7;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 7;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoAlliance.RequestSeekDonationBC)
 private:
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_count();
  inline void clear_has_count();
  inline void set_has_aid();
  inline void clear_has_aid();
  inline void set_has_propsid();
  inline void clear_has_propsid();
  inline void set_has_cdtime();
  inline void clear_has_cdtime();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_level();
  inline void clear_has_level();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 uid_;
  ::google::protobuf::uint32 count_;
  ::google::protobuf::uint32 aid_;
  ::google::protobuf::uint32 propsid_;
  ::std::string* name_;
  ::google::protobuf::uint32 cdtime_;
  ::google::protobuf::uint32 level_;
  friend void  protobuf_AddDesc_ProtoAlliance_2eproto();
  friend void protobuf_AssignDesc_ProtoAlliance_2eproto();
  friend void protobuf_ShutdownFile_ProtoAlliance_2eproto();

  void InitAsDefaultInstance();
  static RequestSeekDonationBC* default_instance_;
};
// -------------------------------------------------------------------

class ReplySeekDonationBC : public ::google::protobuf::Message {
 public:
  ReplySeekDonationBC();
  virtual ~ReplySeekDonationBC();

  ReplySeekDonationBC(const ReplySeekDonationBC& from);

  inline ReplySeekDonationBC& operator=(const ReplySeekDonationBC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReplySeekDonationBC& default_instance();

  void Swap(ReplySeekDonationBC* other);

  // implements Message ----------------------------------------------

  ReplySeekDonationBC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReplySeekDonationBC& from);
  void MergeFrom(const ReplySeekDonationBC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 uid = 1;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 1;
  inline ::google::protobuf::uint32 uid() const;
  inline void set_uid(::google::protobuf::uint32 value);

  // required uint32 cdtime = 2;
  inline bool has_cdtime() const;
  inline void clear_cdtime();
  static const int kCdtimeFieldNumber = 2;
  inline ::google::protobuf::uint32 cdtime() const;
  inline void set_cdtime(::google::protobuf::uint32 value);

  // optional .ProtoAlliance.SeekDonationResp alliance = 3;
  inline bool has_alliance() const;
  inline void clear_alliance();
  static const int kAllianceFieldNumber = 3;
  inline const ::ProtoAlliance::SeekDonationResp& alliance() const;
  inline ::ProtoAlliance::SeekDonationResp* mutable_alliance();
  inline ::ProtoAlliance::SeekDonationResp* release_alliance();
  inline void set_allocated_alliance(::ProtoAlliance::SeekDonationResp* alliance);

  // @@protoc_insertion_point(class_scope:ProtoAlliance.ReplySeekDonationBC)
 private:
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_cdtime();
  inline void clear_has_cdtime();
  inline void set_has_alliance();
  inline void clear_has_alliance();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 uid_;
  ::google::protobuf::uint32 cdtime_;
  ::ProtoAlliance::SeekDonationResp* alliance_;
  friend void  protobuf_AddDesc_ProtoAlliance_2eproto();
  friend void protobuf_AssignDesc_ProtoAlliance_2eproto();
  friend void protobuf_ShutdownFile_ProtoAlliance_2eproto();

  void InitAsDefaultInstance();
  static ReplySeekDonationBC* default_instance_;
};
// -------------------------------------------------------------------

class SeekDonationResp : public ::google::protobuf::Message {
 public:
  SeekDonationResp();
  virtual ~SeekDonationResp();

  SeekDonationResp(const SeekDonationResp& from);

  inline SeekDonationResp& operator=(const SeekDonationResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SeekDonationResp& default_instance();

  void Swap(SeekDonationResp* other);

  // implements Message ----------------------------------------------

  SeekDonationResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SeekDonationResp& from);
  void MergeFrom(const SeekDonationResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .ProtoAlliance.AllianceDonationCPP donation = 1;
  inline bool has_donation() const;
  inline void clear_donation();
  static const int kDonationFieldNumber = 1;
  inline const ::ProtoAlliance::AllianceDonationCPP& donation() const;
  inline ::ProtoAlliance::AllianceDonationCPP* mutable_donation();
  inline ::ProtoAlliance::AllianceDonationCPP* release_donation();
  inline void set_allocated_donation(::ProtoAlliance::AllianceDonationCPP* donation);

  // required uint32 nextDonationTs = 2;
  inline bool has_nextdonationts() const;
  inline void clear_nextdonationts();
  static const int kNextDonationTsFieldNumber = 2;
  inline ::google::protobuf::uint32 nextdonationts() const;
  inline void set_nextdonationts(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoAlliance.SeekDonationResp)
 private:
  inline void set_has_donation();
  inline void clear_has_donation();
  inline void set_has_nextdonationts();
  inline void clear_has_nextdonationts();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::ProtoAlliance::AllianceDonationCPP* donation_;
  ::google::protobuf::uint32 nextdonationts_;
  friend void  protobuf_AddDesc_ProtoAlliance_2eproto();
  friend void protobuf_AssignDesc_ProtoAlliance_2eproto();
  friend void protobuf_ShutdownFile_ProtoAlliance_2eproto();

  void InitAsDefaultInstance();
  static SeekDonationResp* default_instance_;
};
// -------------------------------------------------------------------

class CutUpDonationCDReq : public ::google::protobuf::Message {
 public:
  CutUpDonationCDReq();
  virtual ~CutUpDonationCDReq();

  CutUpDonationCDReq(const CutUpDonationCDReq& from);

  inline CutUpDonationCDReq& operator=(const CutUpDonationCDReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CutUpDonationCDReq& default_instance();

  void Swap(CutUpDonationCDReq* other);

  // implements Message ----------------------------------------------

  CutUpDonationCDReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CutUpDonationCDReq& from);
  void MergeFrom(const CutUpDonationCDReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoAlliance.CutUpDonationCDReq)
 private:
  inline void set_has_type();
  inline void clear_has_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 type_;
  friend void  protobuf_AddDesc_ProtoAlliance_2eproto();
  friend void protobuf_AssignDesc_ProtoAlliance_2eproto();
  friend void protobuf_ShutdownFile_ProtoAlliance_2eproto();

  void InitAsDefaultInstance();
  static CutUpDonationCDReq* default_instance_;
};
// -------------------------------------------------------------------

class CutUpDonationCDResp : public ::google::protobuf::Message {
 public:
  CutUpDonationCDResp();
  virtual ~CutUpDonationCDResp();

  CutUpDonationCDResp(const CutUpDonationCDResp& from);

  inline CutUpDonationCDResp& operator=(const CutUpDonationCDResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CutUpDonationCDResp& default_instance();

  void Swap(CutUpDonationCDResp* other);

  // implements Message ----------------------------------------------

  CutUpDonationCDResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CutUpDonationCDResp& from);
  void MergeFrom(const CutUpDonationCDResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 nextDonationTs = 1;
  inline bool has_nextdonationts() const;
  inline void clear_nextdonationts();
  static const int kNextDonationTsFieldNumber = 1;
  inline ::google::protobuf::uint32 nextdonationts() const;
  inline void set_nextdonationts(::google::protobuf::uint32 value);

  // optional .DataCommon.CommonItemsCPP commons = 2;
  inline bool has_commons() const;
  inline void clear_commons();
  static const int kCommonsFieldNumber = 2;
  inline const ::DataCommon::CommonItemsCPP& commons() const;
  inline ::DataCommon::CommonItemsCPP* mutable_commons();
  inline ::DataCommon::CommonItemsCPP* release_commons();
  inline void set_allocated_commons(::DataCommon::CommonItemsCPP* commons);

  // @@protoc_insertion_point(class_scope:ProtoAlliance.CutUpDonationCDResp)
 private:
  inline void set_has_nextdonationts();
  inline void clear_has_nextdonationts();
  inline void set_has_commons();
  inline void clear_has_commons();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::DataCommon::CommonItemsCPP* commons_;
  ::google::protobuf::uint32 nextdonationts_;
  friend void  protobuf_AddDesc_ProtoAlliance_2eproto();
  friend void protobuf_AssignDesc_ProtoAlliance_2eproto();
  friend void protobuf_ShutdownFile_ProtoAlliance_2eproto();

  void InitAsDefaultInstance();
  static CutUpDonationCDResp* default_instance_;
};
// -------------------------------------------------------------------

class OfferDonationReq : public ::google::protobuf::Message {
 public:
  OfferDonationReq();
  virtual ~OfferDonationReq();

  OfferDonationReq(const OfferDonationReq& from);

  inline OfferDonationReq& operator=(const OfferDonationReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OfferDonationReq& default_instance();

  void Swap(OfferDonationReq* other);

  // implements Message ----------------------------------------------

  OfferDonationReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const OfferDonationReq& from);
  void MergeFrom(const OfferDonationReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 applyUid = 1;
  inline bool has_applyuid() const;
  inline void clear_applyuid();
  static const int kApplyUidFieldNumber = 1;
  inline ::google::protobuf::uint32 applyuid() const;
  inline void set_applyuid(::google::protobuf::uint32 value);

  // required uint32 propsid = 2;
  inline bool has_propsid() const;
  inline void clear_propsid();
  static const int kPropsidFieldNumber = 2;
  inline ::google::protobuf::uint32 propsid() const;
  inline void set_propsid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoAlliance.OfferDonationReq)
 private:
  inline void set_has_applyuid();
  inline void clear_has_applyuid();
  inline void set_has_propsid();
  inline void clear_has_propsid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 applyuid_;
  ::google::protobuf::uint32 propsid_;
  friend void  protobuf_AddDesc_ProtoAlliance_2eproto();
  friend void protobuf_AssignDesc_ProtoAlliance_2eproto();
  friend void protobuf_ShutdownFile_ProtoAlliance_2eproto();

  void InitAsDefaultInstance();
  static OfferDonationReq* default_instance_;
};
// -------------------------------------------------------------------

class RequestOfferDonationBC : public ::google::protobuf::Message {
 public:
  RequestOfferDonationBC();
  virtual ~RequestOfferDonationBC();

  RequestOfferDonationBC(const RequestOfferDonationBC& from);

  inline RequestOfferDonationBC& operator=(const RequestOfferDonationBC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RequestOfferDonationBC& default_instance();

  void Swap(RequestOfferDonationBC* other);

  // implements Message ----------------------------------------------

  RequestOfferDonationBC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RequestOfferDonationBC& from);
  void MergeFrom(const RequestOfferDonationBC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 uid = 1;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 1;
  inline ::google::protobuf::uint32 uid() const;
  inline void set_uid(::google::protobuf::uint32 value);

  // required uint32 applyUid = 2;
  inline bool has_applyuid() const;
  inline void clear_applyuid();
  static const int kApplyUidFieldNumber = 2;
  inline ::google::protobuf::uint32 applyuid() const;
  inline void set_applyuid(::google::protobuf::uint32 value);

  // required uint32 aid = 3;
  inline bool has_aid() const;
  inline void clear_aid();
  static const int kAidFieldNumber = 3;
  inline ::google::protobuf::uint32 aid() const;
  inline void set_aid(::google::protobuf::uint32 value);

  // required uint32 propsid = 4;
  inline bool has_propsid() const;
  inline void clear_propsid();
  static const int kPropsidFieldNumber = 4;
  inline ::google::protobuf::uint32 propsid() const;
  inline void set_propsid(::google::protobuf::uint32 value);

  // required bytes name = 5;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 5;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const void* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // required .DataCommon.CommonItemsCPP commons = 6;
  inline bool has_commons() const;
  inline void clear_commons();
  static const int kCommonsFieldNumber = 6;
  inline const ::DataCommon::CommonItemsCPP& commons() const;
  inline ::DataCommon::CommonItemsCPP* mutable_commons();
  inline ::DataCommon::CommonItemsCPP* release_commons();
  inline void set_allocated_commons(::DataCommon::CommonItemsCPP* commons);

  // @@protoc_insertion_point(class_scope:ProtoAlliance.RequestOfferDonationBC)
 private:
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_applyuid();
  inline void clear_has_applyuid();
  inline void set_has_aid();
  inline void clear_has_aid();
  inline void set_has_propsid();
  inline void clear_has_propsid();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_commons();
  inline void clear_has_commons();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 uid_;
  ::google::protobuf::uint32 applyuid_;
  ::google::protobuf::uint32 aid_;
  ::google::protobuf::uint32 propsid_;
  ::std::string* name_;
  ::DataCommon::CommonItemsCPP* commons_;
  friend void  protobuf_AddDesc_ProtoAlliance_2eproto();
  friend void protobuf_AssignDesc_ProtoAlliance_2eproto();
  friend void protobuf_ShutdownFile_ProtoAlliance_2eproto();

  void InitAsDefaultInstance();
  static RequestOfferDonationBC* default_instance_;
};
// -------------------------------------------------------------------

class ReplyOfferDonationBC : public ::google::protobuf::Message {
 public:
  ReplyOfferDonationBC();
  virtual ~ReplyOfferDonationBC();

  ReplyOfferDonationBC(const ReplyOfferDonationBC& from);

  inline ReplyOfferDonationBC& operator=(const ReplyOfferDonationBC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReplyOfferDonationBC& default_instance();

  void Swap(ReplyOfferDonationBC* other);

  // implements Message ----------------------------------------------

  ReplyOfferDonationBC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReplyOfferDonationBC& from);
  void MergeFrom(const ReplyOfferDonationBC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 uid = 1;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 1;
  inline ::google::protobuf::uint32 uid() const;
  inline void set_uid(::google::protobuf::uint32 value);

  // required uint32 aid = 2;
  inline bool has_aid() const;
  inline void clear_aid();
  static const int kAidFieldNumber = 2;
  inline ::google::protobuf::uint32 aid() const;
  inline void set_aid(::google::protobuf::uint32 value);

  // required uint32 propsid = 3;
  inline bool has_propsid() const;
  inline void clear_propsid();
  static const int kPropsidFieldNumber = 3;
  inline ::google::protobuf::uint32 propsid() const;
  inline void set_propsid(::google::protobuf::uint32 value);

  // optional .ProtoAlliance.OfferDonationResp alliance = 4;
  inline bool has_alliance() const;
  inline void clear_alliance();
  static const int kAllianceFieldNumber = 4;
  inline const ::ProtoAlliance::OfferDonationResp& alliance() const;
  inline ::ProtoAlliance::OfferDonationResp* mutable_alliance();
  inline ::ProtoAlliance::OfferDonationResp* release_alliance();
  inline void set_allocated_alliance(::ProtoAlliance::OfferDonationResp* alliance);

  // @@protoc_insertion_point(class_scope:ProtoAlliance.ReplyOfferDonationBC)
 private:
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_aid();
  inline void clear_has_aid();
  inline void set_has_propsid();
  inline void clear_has_propsid();
  inline void set_has_alliance();
  inline void clear_has_alliance();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 uid_;
  ::google::protobuf::uint32 aid_;
  ::ProtoAlliance::OfferDonationResp* alliance_;
  ::google::protobuf::uint32 propsid_;
  friend void  protobuf_AddDesc_ProtoAlliance_2eproto();
  friend void protobuf_AssignDesc_ProtoAlliance_2eproto();
  friend void protobuf_ShutdownFile_ProtoAlliance_2eproto();

  void InitAsDefaultInstance();
  static ReplyOfferDonationBC* default_instance_;
};
// -------------------------------------------------------------------

class OfferDonationResp : public ::google::protobuf::Message {
 public:
  OfferDonationResp();
  virtual ~OfferDonationResp();

  OfferDonationResp(const OfferDonationResp& from);

  inline OfferDonationResp& operator=(const OfferDonationResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OfferDonationResp& default_instance();

  void Swap(OfferDonationResp* other);

  // implements Message ----------------------------------------------

  OfferDonationResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const OfferDonationResp& from);
  void MergeFrom(const OfferDonationResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .DataCommon.CommonItemsCPP commons = 1;
  inline bool has_commons() const;
  inline void clear_commons();
  static const int kCommonsFieldNumber = 1;
  inline const ::DataCommon::CommonItemsCPP& commons() const;
  inline ::DataCommon::CommonItemsCPP* mutable_commons();
  inline ::DataCommon::CommonItemsCPP* release_commons();
  inline void set_allocated_commons(::DataCommon::CommonItemsCPP* commons);

  // required .ProtoAlliance.AllianceDonationCPP donation = 2;
  inline bool has_donation() const;
  inline void clear_donation();
  static const int kDonationFieldNumber = 2;
  inline const ::ProtoAlliance::AllianceDonationCPP& donation() const;
  inline ::ProtoAlliance::AllianceDonationCPP* mutable_donation();
  inline ::ProtoAlliance::AllianceDonationCPP* release_donation();
  inline void set_allocated_donation(::ProtoAlliance::AllianceDonationCPP* donation);

  // @@protoc_insertion_point(class_scope:ProtoAlliance.OfferDonationResp)
 private:
  inline void set_has_commons();
  inline void clear_has_commons();
  inline void set_has_donation();
  inline void clear_has_donation();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::DataCommon::CommonItemsCPP* commons_;
  ::ProtoAlliance::AllianceDonationCPP* donation_;
  friend void  protobuf_AddDesc_ProtoAlliance_2eproto();
  friend void protobuf_AssignDesc_ProtoAlliance_2eproto();
  friend void protobuf_ShutdownFile_ProtoAlliance_2eproto();

  void InitAsDefaultInstance();
  static OfferDonationResp* default_instance_;
};
// -------------------------------------------------------------------

class FetchDonationReq : public ::google::protobuf::Message {
 public:
  FetchDonationReq();
  virtual ~FetchDonationReq();

  FetchDonationReq(const FetchDonationReq& from);

  inline FetchDonationReq& operator=(const FetchDonationReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FetchDonationReq& default_instance();

  void Swap(FetchDonationReq* other);

  // implements Message ----------------------------------------------

  FetchDonationReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FetchDonationReq& from);
  void MergeFrom(const FetchDonationReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:ProtoAlliance.FetchDonationReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_ProtoAlliance_2eproto();
  friend void protobuf_AssignDesc_ProtoAlliance_2eproto();
  friend void protobuf_ShutdownFile_ProtoAlliance_2eproto();

  void InitAsDefaultInstance();
  static FetchDonationReq* default_instance_;
};
// -------------------------------------------------------------------

class RequestFetchDonationBC : public ::google::protobuf::Message {
 public:
  RequestFetchDonationBC();
  virtual ~RequestFetchDonationBC();

  RequestFetchDonationBC(const RequestFetchDonationBC& from);

  inline RequestFetchDonationBC& operator=(const RequestFetchDonationBC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RequestFetchDonationBC& default_instance();

  void Swap(RequestFetchDonationBC* other);

  // implements Message ----------------------------------------------

  RequestFetchDonationBC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RequestFetchDonationBC& from);
  void MergeFrom(const RequestFetchDonationBC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 aid = 1;
  inline bool has_aid() const;
  inline void clear_aid();
  static const int kAidFieldNumber = 1;
  inline ::google::protobuf::uint32 aid() const;
  inline void set_aid(::google::protobuf::uint32 value);

  // required uint32 uid = 2;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 2;
  inline ::google::protobuf::uint32 uid() const;
  inline void set_uid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoAlliance.RequestFetchDonationBC)
 private:
  inline void set_has_aid();
  inline void clear_has_aid();
  inline void set_has_uid();
  inline void clear_has_uid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 aid_;
  ::google::protobuf::uint32 uid_;
  friend void  protobuf_AddDesc_ProtoAlliance_2eproto();
  friend void protobuf_AssignDesc_ProtoAlliance_2eproto();
  friend void protobuf_ShutdownFile_ProtoAlliance_2eproto();

  void InitAsDefaultInstance();
  static RequestFetchDonationBC* default_instance_;
};
// -------------------------------------------------------------------

class ReplyFetchDonationBC : public ::google::protobuf::Message {
 public:
  ReplyFetchDonationBC();
  virtual ~ReplyFetchDonationBC();

  ReplyFetchDonationBC(const ReplyFetchDonationBC& from);

  inline ReplyFetchDonationBC& operator=(const ReplyFetchDonationBC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReplyFetchDonationBC& default_instance();

  void Swap(ReplyFetchDonationBC* other);

  // implements Message ----------------------------------------------

  ReplyFetchDonationBC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReplyFetchDonationBC& from);
  void MergeFrom(const ReplyFetchDonationBC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 uid = 1;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 1;
  inline ::google::protobuf::uint32 uid() const;
  inline void set_uid(::google::protobuf::uint32 value);

  // required uint32 propsid = 2;
  inline bool has_propsid() const;
  inline void clear_propsid();
  static const int kPropsidFieldNumber = 2;
  inline ::google::protobuf::uint32 propsid() const;
  inline void set_propsid(::google::protobuf::uint32 value);

  // optional .ProtoAlliance.FetchDonationResp alliance = 3;
  inline bool has_alliance() const;
  inline void clear_alliance();
  static const int kAllianceFieldNumber = 3;
  inline const ::ProtoAlliance::FetchDonationResp& alliance() const;
  inline ::ProtoAlliance::FetchDonationResp* mutable_alliance();
  inline ::ProtoAlliance::FetchDonationResp* release_alliance();
  inline void set_allocated_alliance(::ProtoAlliance::FetchDonationResp* alliance);

  // @@protoc_insertion_point(class_scope:ProtoAlliance.ReplyFetchDonationBC)
 private:
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_propsid();
  inline void clear_has_propsid();
  inline void set_has_alliance();
  inline void clear_has_alliance();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 uid_;
  ::google::protobuf::uint32 propsid_;
  ::ProtoAlliance::FetchDonationResp* alliance_;
  friend void  protobuf_AddDesc_ProtoAlliance_2eproto();
  friend void protobuf_AssignDesc_ProtoAlliance_2eproto();
  friend void protobuf_ShutdownFile_ProtoAlliance_2eproto();

  void InitAsDefaultInstance();
  static ReplyFetchDonationBC* default_instance_;
};
// -------------------------------------------------------------------

class FetchDonationResp : public ::google::protobuf::Message {
 public:
  FetchDonationResp();
  virtual ~FetchDonationResp();

  FetchDonationResp(const FetchDonationResp& from);

  inline FetchDonationResp& operator=(const FetchDonationResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FetchDonationResp& default_instance();

  void Swap(FetchDonationResp* other);

  // implements Message ----------------------------------------------

  FetchDonationResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FetchDonationResp& from);
  void MergeFrom(const FetchDonationResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .DataCommon.CommonItemsCPP commons = 1;
  inline bool has_commons() const;
  inline void clear_commons();
  static const int kCommonsFieldNumber = 1;
  inline const ::DataCommon::CommonItemsCPP& commons() const;
  inline ::DataCommon::CommonItemsCPP* mutable_commons();
  inline ::DataCommon::CommonItemsCPP* release_commons();
  inline void set_allocated_commons(::DataCommon::CommonItemsCPP* commons);

  // optional .ProtoAlliance.AllianceDonationCPP donation = 2;
  inline bool has_donation() const;
  inline void clear_donation();
  static const int kDonationFieldNumber = 2;
  inline const ::ProtoAlliance::AllianceDonationCPP& donation() const;
  inline ::ProtoAlliance::AllianceDonationCPP* mutable_donation();
  inline ::ProtoAlliance::AllianceDonationCPP* release_donation();
  inline void set_allocated_donation(::ProtoAlliance::AllianceDonationCPP* donation);

  // @@protoc_insertion_point(class_scope:ProtoAlliance.FetchDonationResp)
 private:
  inline void set_has_commons();
  inline void clear_has_commons();
  inline void set_has_donation();
  inline void clear_has_donation();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::DataCommon::CommonItemsCPP* commons_;
  ::ProtoAlliance::AllianceDonationCPP* donation_;
  friend void  protobuf_AddDesc_ProtoAlliance_2eproto();
  friend void protobuf_AssignDesc_ProtoAlliance_2eproto();
  friend void protobuf_ShutdownFile_ProtoAlliance_2eproto();

  void InitAsDefaultInstance();
  static FetchDonationResp* default_instance_;
};
// -------------------------------------------------------------------

class AllianceNotifyCPP : public ::google::protobuf::Message {
 public:
  AllianceNotifyCPP();
  virtual ~AllianceNotifyCPP();

  AllianceNotifyCPP(const AllianceNotifyCPP& from);

  inline AllianceNotifyCPP& operator=(const AllianceNotifyCPP& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AllianceNotifyCPP& default_instance();

  void Swap(AllianceNotifyCPP* other);

  // implements Message ----------------------------------------------

  AllianceNotifyCPP* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AllianceNotifyCPP& from);
  void MergeFrom(const AllianceNotifyCPP& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // required uint32 announcer = 2;
  inline bool has_announcer() const;
  inline void clear_announcer();
  static const int kAnnouncerFieldNumber = 2;
  inline ::google::protobuf::uint32 announcer() const;
  inline void set_announcer(::google::protobuf::uint32 value);

  // required bytes name = 3;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 3;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const void* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // required bytes content = 4;
  inline bool has_content() const;
  inline void clear_content();
  static const int kContentFieldNumber = 4;
  inline const ::std::string& content() const;
  inline void set_content(const ::std::string& value);
  inline void set_content(const char* value);
  inline void set_content(const void* value, size_t size);
  inline ::std::string* mutable_content();
  inline ::std::string* release_content();
  inline void set_allocated_content(::std::string* content);

  // required uint32 createts = 5;
  inline bool has_createts() const;
  inline void clear_createts();
  static const int kCreatetsFieldNumber = 5;
  inline ::google::protobuf::uint32 createts() const;
  inline void set_createts(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoAlliance.AllianceNotifyCPP)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_announcer();
  inline void clear_has_announcer();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_content();
  inline void clear_has_content();
  inline void set_has_createts();
  inline void clear_has_createts();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 announcer_;
  ::std::string* name_;
  ::std::string* content_;
  ::google::protobuf::uint32 createts_;
  friend void  protobuf_AddDesc_ProtoAlliance_2eproto();
  friend void protobuf_AssignDesc_ProtoAlliance_2eproto();
  friend void protobuf_ShutdownFile_ProtoAlliance_2eproto();

  void InitAsDefaultInstance();
  static AllianceNotifyCPP* default_instance_;
};
// -------------------------------------------------------------------

class SendNotifyReq : public ::google::protobuf::Message {
 public:
  SendNotifyReq();
  virtual ~SendNotifyReq();

  SendNotifyReq(const SendNotifyReq& from);

  inline SendNotifyReq& operator=(const SendNotifyReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SendNotifyReq& default_instance();

  void Swap(SendNotifyReq* other);

  // implements Message ----------------------------------------------

  SendNotifyReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SendNotifyReq& from);
  void MergeFrom(const SendNotifyReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bytes content = 1;
  inline bool has_content() const;
  inline void clear_content();
  static const int kContentFieldNumber = 1;
  inline const ::std::string& content() const;
  inline void set_content(const ::std::string& value);
  inline void set_content(const char* value);
  inline void set_content(const void* value, size_t size);
  inline ::std::string* mutable_content();
  inline ::std::string* release_content();
  inline void set_allocated_content(::std::string* content);

  // @@protoc_insertion_point(class_scope:ProtoAlliance.SendNotifyReq)
 private:
  inline void set_has_content();
  inline void clear_has_content();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* content_;
  friend void  protobuf_AddDesc_ProtoAlliance_2eproto();
  friend void protobuf_AssignDesc_ProtoAlliance_2eproto();
  friend void protobuf_ShutdownFile_ProtoAlliance_2eproto();

  void InitAsDefaultInstance();
  static SendNotifyReq* default_instance_;
};
// -------------------------------------------------------------------

class RequestSendNotifyBC : public ::google::protobuf::Message {
 public:
  RequestSendNotifyBC();
  virtual ~RequestSendNotifyBC();

  RequestSendNotifyBC(const RequestSendNotifyBC& from);

  inline RequestSendNotifyBC& operator=(const RequestSendNotifyBC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RequestSendNotifyBC& default_instance();

  void Swap(RequestSendNotifyBC* other);

  // implements Message ----------------------------------------------

  RequestSendNotifyBC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RequestSendNotifyBC& from);
  void MergeFrom(const RequestSendNotifyBC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 aid = 1;
  inline bool has_aid() const;
  inline void clear_aid();
  static const int kAidFieldNumber = 1;
  inline ::google::protobuf::uint32 aid() const;
  inline void set_aid(::google::protobuf::uint32 value);

  // required uint32 uid = 2;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 2;
  inline ::google::protobuf::uint32 uid() const;
  inline void set_uid(::google::protobuf::uint32 value);

  // required bytes content = 3;
  inline bool has_content() const;
  inline void clear_content();
  static const int kContentFieldNumber = 3;
  inline const ::std::string& content() const;
  inline void set_content(const ::std::string& value);
  inline void set_content(const char* value);
  inline void set_content(const void* value, size_t size);
  inline ::std::string* mutable_content();
  inline ::std::string* release_content();
  inline void set_allocated_content(::std::string* content);

  // required bytes name = 4;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 4;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const void* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:ProtoAlliance.RequestSendNotifyBC)
 private:
  inline void set_has_aid();
  inline void clear_has_aid();
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_content();
  inline void clear_has_content();
  inline void set_has_name();
  inline void clear_has_name();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 aid_;
  ::google::protobuf::uint32 uid_;
  ::std::string* content_;
  ::std::string* name_;
  friend void  protobuf_AddDesc_ProtoAlliance_2eproto();
  friend void protobuf_AssignDesc_ProtoAlliance_2eproto();
  friend void protobuf_ShutdownFile_ProtoAlliance_2eproto();

  void InitAsDefaultInstance();
  static RequestSendNotifyBC* default_instance_;
};
// -------------------------------------------------------------------

class ReplySendNotifyBC : public ::google::protobuf::Message {
 public:
  ReplySendNotifyBC();
  virtual ~ReplySendNotifyBC();

  ReplySendNotifyBC(const ReplySendNotifyBC& from);

  inline ReplySendNotifyBC& operator=(const ReplySendNotifyBC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReplySendNotifyBC& default_instance();

  void Swap(ReplySendNotifyBC* other);

  // implements Message ----------------------------------------------

  ReplySendNotifyBC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReplySendNotifyBC& from);
  void MergeFrom(const ReplySendNotifyBC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 uid = 1;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 1;
  inline ::google::protobuf::uint32 uid() const;
  inline void set_uid(::google::protobuf::uint32 value);

  // optional .ProtoAlliance.SendNotifyResp alliance = 2;
  inline bool has_alliance() const;
  inline void clear_alliance();
  static const int kAllianceFieldNumber = 2;
  inline const ::ProtoAlliance::SendNotifyResp& alliance() const;
  inline ::ProtoAlliance::SendNotifyResp* mutable_alliance();
  inline ::ProtoAlliance::SendNotifyResp* release_alliance();
  inline void set_allocated_alliance(::ProtoAlliance::SendNotifyResp* alliance);

  // @@protoc_insertion_point(class_scope:ProtoAlliance.ReplySendNotifyBC)
 private:
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_alliance();
  inline void clear_has_alliance();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::ProtoAlliance::SendNotifyResp* alliance_;
  ::google::protobuf::uint32 uid_;
  friend void  protobuf_AddDesc_ProtoAlliance_2eproto();
  friend void protobuf_AssignDesc_ProtoAlliance_2eproto();
  friend void protobuf_ShutdownFile_ProtoAlliance_2eproto();

  void InitAsDefaultInstance();
  static ReplySendNotifyBC* default_instance_;
};
// -------------------------------------------------------------------

class SendNotifyResp : public ::google::protobuf::Message {
 public:
  SendNotifyResp();
  virtual ~SendNotifyResp();

  SendNotifyResp(const SendNotifyResp& from);

  inline SendNotifyResp& operator=(const SendNotifyResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SendNotifyResp& default_instance();

  void Swap(SendNotifyResp* other);

  // implements Message ----------------------------------------------

  SendNotifyResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SendNotifyResp& from);
  void MergeFrom(const SendNotifyResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .ProtoAlliance.AllianceNotifyCPP notify = 1;
  inline bool has_notify() const;
  inline void clear_notify();
  static const int kNotifyFieldNumber = 1;
  inline const ::ProtoAlliance::AllianceNotifyCPP& notify() const;
  inline ::ProtoAlliance::AllianceNotifyCPP* mutable_notify();
  inline ::ProtoAlliance::AllianceNotifyCPP* release_notify();
  inline void set_allocated_notify(::ProtoAlliance::AllianceNotifyCPP* notify);

  // @@protoc_insertion_point(class_scope:ProtoAlliance.SendNotifyResp)
 private:
  inline void set_has_notify();
  inline void clear_has_notify();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::ProtoAlliance::AllianceNotifyCPP* notify_;
  friend void  protobuf_AddDesc_ProtoAlliance_2eproto();
  friend void protobuf_AssignDesc_ProtoAlliance_2eproto();
  friend void protobuf_ShutdownFile_ProtoAlliance_2eproto();

  void InitAsDefaultInstance();
  static SendNotifyResp* default_instance_;
};
// -------------------------------------------------------------------

class DelNotifyReq : public ::google::protobuf::Message {
 public:
  DelNotifyReq();
  virtual ~DelNotifyReq();

  DelNotifyReq(const DelNotifyReq& from);

  inline DelNotifyReq& operator=(const DelNotifyReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DelNotifyReq& default_instance();

  void Swap(DelNotifyReq* other);

  // implements Message ----------------------------------------------

  DelNotifyReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DelNotifyReq& from);
  void MergeFrom(const DelNotifyReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoAlliance.DelNotifyReq)
 private:
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 id_;
  friend void  protobuf_AddDesc_ProtoAlliance_2eproto();
  friend void protobuf_AssignDesc_ProtoAlliance_2eproto();
  friend void protobuf_ShutdownFile_ProtoAlliance_2eproto();

  void InitAsDefaultInstance();
  static DelNotifyReq* default_instance_;
};
// -------------------------------------------------------------------

class RequestDelNotifyBC : public ::google::protobuf::Message {
 public:
  RequestDelNotifyBC();
  virtual ~RequestDelNotifyBC();

  RequestDelNotifyBC(const RequestDelNotifyBC& from);

  inline RequestDelNotifyBC& operator=(const RequestDelNotifyBC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RequestDelNotifyBC& default_instance();

  void Swap(RequestDelNotifyBC* other);

  // implements Message ----------------------------------------------

  RequestDelNotifyBC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RequestDelNotifyBC& from);
  void MergeFrom(const RequestDelNotifyBC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 aid = 1;
  inline bool has_aid() const;
  inline void clear_aid();
  static const int kAidFieldNumber = 1;
  inline ::google::protobuf::uint32 aid() const;
  inline void set_aid(::google::protobuf::uint32 value);

  // required uint32 uid = 2;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 2;
  inline ::google::protobuf::uint32 uid() const;
  inline void set_uid(::google::protobuf::uint32 value);

  // required uint32 id = 3;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 3;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoAlliance.RequestDelNotifyBC)
 private:
  inline void set_has_aid();
  inline void clear_has_aid();
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 aid_;
  ::google::protobuf::uint32 uid_;
  ::google::protobuf::uint32 id_;
  friend void  protobuf_AddDesc_ProtoAlliance_2eproto();
  friend void protobuf_AssignDesc_ProtoAlliance_2eproto();
  friend void protobuf_ShutdownFile_ProtoAlliance_2eproto();

  void InitAsDefaultInstance();
  static RequestDelNotifyBC* default_instance_;
};
// -------------------------------------------------------------------

class ReplyDelNotifyBC : public ::google::protobuf::Message {
 public:
  ReplyDelNotifyBC();
  virtual ~ReplyDelNotifyBC();

  ReplyDelNotifyBC(const ReplyDelNotifyBC& from);

  inline ReplyDelNotifyBC& operator=(const ReplyDelNotifyBC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReplyDelNotifyBC& default_instance();

  void Swap(ReplyDelNotifyBC* other);

  // implements Message ----------------------------------------------

  ReplyDelNotifyBC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReplyDelNotifyBC& from);
  void MergeFrom(const ReplyDelNotifyBC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 uid = 1;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 1;
  inline ::google::protobuf::uint32 uid() const;
  inline void set_uid(::google::protobuf::uint32 value);

  // optional .ProtoAlliance.DelNotifyResp alliance = 2;
  inline bool has_alliance() const;
  inline void clear_alliance();
  static const int kAllianceFieldNumber = 2;
  inline const ::ProtoAlliance::DelNotifyResp& alliance() const;
  inline ::ProtoAlliance::DelNotifyResp* mutable_alliance();
  inline ::ProtoAlliance::DelNotifyResp* release_alliance();
  inline void set_allocated_alliance(::ProtoAlliance::DelNotifyResp* alliance);

  // @@protoc_insertion_point(class_scope:ProtoAlliance.ReplyDelNotifyBC)
 private:
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_alliance();
  inline void clear_has_alliance();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::ProtoAlliance::DelNotifyResp* alliance_;
  ::google::protobuf::uint32 uid_;
  friend void  protobuf_AddDesc_ProtoAlliance_2eproto();
  friend void protobuf_AssignDesc_ProtoAlliance_2eproto();
  friend void protobuf_ShutdownFile_ProtoAlliance_2eproto();

  void InitAsDefaultInstance();
  static ReplyDelNotifyBC* default_instance_;
};
// -------------------------------------------------------------------

class DelNotifyResp : public ::google::protobuf::Message {
 public:
  DelNotifyResp();
  virtual ~DelNotifyResp();

  DelNotifyResp(const DelNotifyResp& from);

  inline DelNotifyResp& operator=(const DelNotifyResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DelNotifyResp& default_instance();

  void Swap(DelNotifyResp* other);

  // implements Message ----------------------------------------------

  DelNotifyResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DelNotifyResp& from);
  void MergeFrom(const DelNotifyResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoAlliance.DelNotifyResp)
 private:
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 id_;
  friend void  protobuf_AddDesc_ProtoAlliance_2eproto();
  friend void protobuf_AssignDesc_ProtoAlliance_2eproto();
  friend void protobuf_ShutdownFile_ProtoAlliance_2eproto();

  void InitAsDefaultInstance();
  static DelNotifyResp* default_instance_;
};
// -------------------------------------------------------------------

class AidInfoCPP : public ::google::protobuf::Message {
 public:
  AidInfoCPP();
  virtual ~AidInfoCPP();

  AidInfoCPP(const AidInfoCPP& from);

  inline AidInfoCPP& operator=(const AidInfoCPP& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AidInfoCPP& default_instance();

  void Swap(AidInfoCPP* other);

  // implements Message ----------------------------------------------

  AidInfoCPP* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AidInfoCPP& from);
  void MergeFrom(const AidInfoCPP& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 uid = 1;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 1;
  inline ::google::protobuf::uint32 uid() const;
  inline void set_uid(::google::protobuf::uint32 value);

  // required bytes name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const void* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:ProtoAlliance.AidInfoCPP)
 private:
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_name();
  inline void clear_has_name();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* name_;
  ::google::protobuf::uint32 uid_;
  friend void  protobuf_AddDesc_ProtoAlliance_2eproto();
  friend void protobuf_AssignDesc_ProtoAlliance_2eproto();
  friend void protobuf_ShutdownFile_ProtoAlliance_2eproto();

  void InitAsDefaultInstance();
  static AidInfoCPP* default_instance_;
};
// -------------------------------------------------------------------

class GetAllianceFunctionReq : public ::google::protobuf::Message {
 public:
  GetAllianceFunctionReq();
  virtual ~GetAllianceFunctionReq();

  GetAllianceFunctionReq(const GetAllianceFunctionReq& from);

  inline GetAllianceFunctionReq& operator=(const GetAllianceFunctionReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetAllianceFunctionReq& default_instance();

  void Swap(GetAllianceFunctionReq* other);

  // implements Message ----------------------------------------------

  GetAllianceFunctionReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetAllianceFunctionReq& from);
  void MergeFrom(const GetAllianceFunctionReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoAlliance.GetAllianceFunctionReq)
 private:
  inline void set_has_type();
  inline void clear_has_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 type_;
  friend void  protobuf_AddDesc_ProtoAlliance_2eproto();
  friend void protobuf_AssignDesc_ProtoAlliance_2eproto();
  friend void protobuf_ShutdownFile_ProtoAlliance_2eproto();

  void InitAsDefaultInstance();
  static GetAllianceFunctionReq* default_instance_;
};
// -------------------------------------------------------------------

class GetAllianceFunctionResp : public ::google::protobuf::Message {
 public:
  GetAllianceFunctionResp();
  virtual ~GetAllianceFunctionResp();

  GetAllianceFunctionResp(const GetAllianceFunctionResp& from);

  inline GetAllianceFunctionResp& operator=(const GetAllianceFunctionResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetAllianceFunctionResp& default_instance();

  void Swap(GetAllianceFunctionResp* other);

  // implements Message ----------------------------------------------

  GetAllianceFunctionResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetAllianceFunctionResp& from);
  void MergeFrom(const GetAllianceFunctionResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .ProtoAlliance.AllianceApplyCPP applyList = 1;
  inline int applylist_size() const;
  inline void clear_applylist();
  static const int kApplyListFieldNumber = 1;
  inline const ::ProtoAlliance::AllianceApplyCPP& applylist(int index) const;
  inline ::ProtoAlliance::AllianceApplyCPP* mutable_applylist(int index);
  inline ::ProtoAlliance::AllianceApplyCPP* add_applylist();
  inline const ::google::protobuf::RepeatedPtrField< ::ProtoAlliance::AllianceApplyCPP >&
      applylist() const;
  inline ::google::protobuf::RepeatedPtrField< ::ProtoAlliance::AllianceApplyCPP >*
      mutable_applylist();

  // repeated .ProtoAlliance.AllianceDonationCPP donations = 2;
  inline int donations_size() const;
  inline void clear_donations();
  static const int kDonationsFieldNumber = 2;
  inline const ::ProtoAlliance::AllianceDonationCPP& donations(int index) const;
  inline ::ProtoAlliance::AllianceDonationCPP* mutable_donations(int index);
  inline ::ProtoAlliance::AllianceDonationCPP* add_donations();
  inline const ::google::protobuf::RepeatedPtrField< ::ProtoAlliance::AllianceDonationCPP >&
      donations() const;
  inline ::google::protobuf::RepeatedPtrField< ::ProtoAlliance::AllianceDonationCPP >*
      mutable_donations();

  // repeated .ProtoAlliance.AidInfoCPP aidlist = 3;
  inline int aidlist_size() const;
  inline void clear_aidlist();
  static const int kAidlistFieldNumber = 3;
  inline const ::ProtoAlliance::AidInfoCPP& aidlist(int index) const;
  inline ::ProtoAlliance::AidInfoCPP* mutable_aidlist(int index);
  inline ::ProtoAlliance::AidInfoCPP* add_aidlist();
  inline const ::google::protobuf::RepeatedPtrField< ::ProtoAlliance::AidInfoCPP >&
      aidlist() const;
  inline ::google::protobuf::RepeatedPtrField< ::ProtoAlliance::AidInfoCPP >*
      mutable_aidlist();

  // repeated .ProtoAlliance.AllianceInvitedCPP invitelist = 4;
  inline int invitelist_size() const;
  inline void clear_invitelist();
  static const int kInvitelistFieldNumber = 4;
  inline const ::ProtoAlliance::AllianceInvitedCPP& invitelist(int index) const;
  inline ::ProtoAlliance::AllianceInvitedCPP* mutable_invitelist(int index);
  inline ::ProtoAlliance::AllianceInvitedCPP* add_invitelist();
  inline const ::google::protobuf::RepeatedPtrField< ::ProtoAlliance::AllianceInvitedCPP >&
      invitelist() const;
  inline ::google::protobuf::RepeatedPtrField< ::ProtoAlliance::AllianceInvitedCPP >*
      mutable_invitelist();

  // @@protoc_insertion_point(class_scope:ProtoAlliance.GetAllianceFunctionResp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::ProtoAlliance::AllianceApplyCPP > applylist_;
  ::google::protobuf::RepeatedPtrField< ::ProtoAlliance::AllianceDonationCPP > donations_;
  ::google::protobuf::RepeatedPtrField< ::ProtoAlliance::AidInfoCPP > aidlist_;
  ::google::protobuf::RepeatedPtrField< ::ProtoAlliance::AllianceInvitedCPP > invitelist_;
  friend void  protobuf_AddDesc_ProtoAlliance_2eproto();
  friend void protobuf_AssignDesc_ProtoAlliance_2eproto();
  friend void protobuf_ShutdownFile_ProtoAlliance_2eproto();

  void InitAsDefaultInstance();
  static GetAllianceFunctionResp* default_instance_;
};
// -------------------------------------------------------------------

class RequestAllianceFunctionBC : public ::google::protobuf::Message {
 public:
  RequestAllianceFunctionBC();
  virtual ~RequestAllianceFunctionBC();

  RequestAllianceFunctionBC(const RequestAllianceFunctionBC& from);

  inline RequestAllianceFunctionBC& operator=(const RequestAllianceFunctionBC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RequestAllianceFunctionBC& default_instance();

  void Swap(RequestAllianceFunctionBC* other);

  // implements Message ----------------------------------------------

  RequestAllianceFunctionBC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RequestAllianceFunctionBC& from);
  void MergeFrom(const RequestAllianceFunctionBC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 aid = 1;
  inline bool has_aid() const;
  inline void clear_aid();
  static const int kAidFieldNumber = 1;
  inline ::google::protobuf::uint32 aid() const;
  inline void set_aid(::google::protobuf::uint32 value);

  // required uint32 uid = 2;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 2;
  inline ::google::protobuf::uint32 uid() const;
  inline void set_uid(::google::protobuf::uint32 value);

  // required uint32 type = 3;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 3;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoAlliance.RequestAllianceFunctionBC)
 private:
  inline void set_has_aid();
  inline void clear_has_aid();
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_type();
  inline void clear_has_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 aid_;
  ::google::protobuf::uint32 uid_;
  ::google::protobuf::uint32 type_;
  friend void  protobuf_AddDesc_ProtoAlliance_2eproto();
  friend void protobuf_AssignDesc_ProtoAlliance_2eproto();
  friend void protobuf_ShutdownFile_ProtoAlliance_2eproto();

  void InitAsDefaultInstance();
  static RequestAllianceFunctionBC* default_instance_;
};
// -------------------------------------------------------------------

class ReplyAllianceFunctionBC : public ::google::protobuf::Message {
 public:
  ReplyAllianceFunctionBC();
  virtual ~ReplyAllianceFunctionBC();

  ReplyAllianceFunctionBC(const ReplyAllianceFunctionBC& from);

  inline ReplyAllianceFunctionBC& operator=(const ReplyAllianceFunctionBC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReplyAllianceFunctionBC& default_instance();

  void Swap(ReplyAllianceFunctionBC* other);

  // implements Message ----------------------------------------------

  ReplyAllianceFunctionBC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReplyAllianceFunctionBC& from);
  void MergeFrom(const ReplyAllianceFunctionBC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 uid = 1;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 1;
  inline ::google::protobuf::uint32 uid() const;
  inline void set_uid(::google::protobuf::uint32 value);

  // required uint32 type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);

  // optional .ProtoAlliance.GetAllianceFunctionResp alliance = 3;
  inline bool has_alliance() const;
  inline void clear_alliance();
  static const int kAllianceFieldNumber = 3;
  inline const ::ProtoAlliance::GetAllianceFunctionResp& alliance() const;
  inline ::ProtoAlliance::GetAllianceFunctionResp* mutable_alliance();
  inline ::ProtoAlliance::GetAllianceFunctionResp* release_alliance();
  inline void set_allocated_alliance(::ProtoAlliance::GetAllianceFunctionResp* alliance);

  // @@protoc_insertion_point(class_scope:ProtoAlliance.ReplyAllianceFunctionBC)
 private:
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_alliance();
  inline void clear_has_alliance();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 uid_;
  ::google::protobuf::uint32 type_;
  ::ProtoAlliance::GetAllianceFunctionResp* alliance_;
  friend void  protobuf_AddDesc_ProtoAlliance_2eproto();
  friend void protobuf_AssignDesc_ProtoAlliance_2eproto();
  friend void protobuf_ShutdownFile_ProtoAlliance_2eproto();

  void InitAsDefaultInstance();
  static ReplyAllianceFunctionBC* default_instance_;
};
// -------------------------------------------------------------------

class GetNotifyReq : public ::google::protobuf::Message {
 public:
  GetNotifyReq();
  virtual ~GetNotifyReq();

  GetNotifyReq(const GetNotifyReq& from);

  inline GetNotifyReq& operator=(const GetNotifyReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetNotifyReq& default_instance();

  void Swap(GetNotifyReq* other);

  // implements Message ----------------------------------------------

  GetNotifyReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetNotifyReq& from);
  void MergeFrom(const GetNotifyReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:ProtoAlliance.GetNotifyReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_ProtoAlliance_2eproto();
  friend void protobuf_AssignDesc_ProtoAlliance_2eproto();
  friend void protobuf_ShutdownFile_ProtoAlliance_2eproto();

  void InitAsDefaultInstance();
  static GetNotifyReq* default_instance_;
};
// -------------------------------------------------------------------

class GetNotifyResp : public ::google::protobuf::Message {
 public:
  GetNotifyResp();
  virtual ~GetNotifyResp();

  GetNotifyResp(const GetNotifyResp& from);

  inline GetNotifyResp& operator=(const GetNotifyResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetNotifyResp& default_instance();

  void Swap(GetNotifyResp* other);

  // implements Message ----------------------------------------------

  GetNotifyResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetNotifyResp& from);
  void MergeFrom(const GetNotifyResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .ProtoAlliance.AllianceNotifyCPP notifies = 1;
  inline int notifies_size() const;
  inline void clear_notifies();
  static const int kNotifiesFieldNumber = 1;
  inline const ::ProtoAlliance::AllianceNotifyCPP& notifies(int index) const;
  inline ::ProtoAlliance::AllianceNotifyCPP* mutable_notifies(int index);
  inline ::ProtoAlliance::AllianceNotifyCPP* add_notifies();
  inline const ::google::protobuf::RepeatedPtrField< ::ProtoAlliance::AllianceNotifyCPP >&
      notifies() const;
  inline ::google::protobuf::RepeatedPtrField< ::ProtoAlliance::AllianceNotifyCPP >*
      mutable_notifies();

  // @@protoc_insertion_point(class_scope:ProtoAlliance.GetNotifyResp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::ProtoAlliance::AllianceNotifyCPP > notifies_;
  friend void  protobuf_AddDesc_ProtoAlliance_2eproto();
  friend void protobuf_AssignDesc_ProtoAlliance_2eproto();
  friend void protobuf_ShutdownFile_ProtoAlliance_2eproto();

  void InitAsDefaultInstance();
  static GetNotifyResp* default_instance_;
};
// -------------------------------------------------------------------

class RequestAllianceNotifyBC : public ::google::protobuf::Message {
 public:
  RequestAllianceNotifyBC();
  virtual ~RequestAllianceNotifyBC();

  RequestAllianceNotifyBC(const RequestAllianceNotifyBC& from);

  inline RequestAllianceNotifyBC& operator=(const RequestAllianceNotifyBC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RequestAllianceNotifyBC& default_instance();

  void Swap(RequestAllianceNotifyBC* other);

  // implements Message ----------------------------------------------

  RequestAllianceNotifyBC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RequestAllianceNotifyBC& from);
  void MergeFrom(const RequestAllianceNotifyBC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 aid = 1;
  inline bool has_aid() const;
  inline void clear_aid();
  static const int kAidFieldNumber = 1;
  inline ::google::protobuf::uint32 aid() const;
  inline void set_aid(::google::protobuf::uint32 value);

  // required uint32 uid = 2;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 2;
  inline ::google::protobuf::uint32 uid() const;
  inline void set_uid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoAlliance.RequestAllianceNotifyBC)
 private:
  inline void set_has_aid();
  inline void clear_has_aid();
  inline void set_has_uid();
  inline void clear_has_uid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 aid_;
  ::google::protobuf::uint32 uid_;
  friend void  protobuf_AddDesc_ProtoAlliance_2eproto();
  friend void protobuf_AssignDesc_ProtoAlliance_2eproto();
  friend void protobuf_ShutdownFile_ProtoAlliance_2eproto();

  void InitAsDefaultInstance();
  static RequestAllianceNotifyBC* default_instance_;
};
// -------------------------------------------------------------------

class ReplyAllianceNotifyBC : public ::google::protobuf::Message {
 public:
  ReplyAllianceNotifyBC();
  virtual ~ReplyAllianceNotifyBC();

  ReplyAllianceNotifyBC(const ReplyAllianceNotifyBC& from);

  inline ReplyAllianceNotifyBC& operator=(const ReplyAllianceNotifyBC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReplyAllianceNotifyBC& default_instance();

  void Swap(ReplyAllianceNotifyBC* other);

  // implements Message ----------------------------------------------

  ReplyAllianceNotifyBC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReplyAllianceNotifyBC& from);
  void MergeFrom(const ReplyAllianceNotifyBC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 uid = 1;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 1;
  inline ::google::protobuf::uint32 uid() const;
  inline void set_uid(::google::protobuf::uint32 value);

  // optional .ProtoAlliance.GetNotifyResp alliance = 2;
  inline bool has_alliance() const;
  inline void clear_alliance();
  static const int kAllianceFieldNumber = 2;
  inline const ::ProtoAlliance::GetNotifyResp& alliance() const;
  inline ::ProtoAlliance::GetNotifyResp* mutable_alliance();
  inline ::ProtoAlliance::GetNotifyResp* release_alliance();
  inline void set_allocated_alliance(::ProtoAlliance::GetNotifyResp* alliance);

  // @@protoc_insertion_point(class_scope:ProtoAlliance.ReplyAllianceNotifyBC)
 private:
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_alliance();
  inline void clear_has_alliance();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::ProtoAlliance::GetNotifyResp* alliance_;
  ::google::protobuf::uint32 uid_;
  friend void  protobuf_AddDesc_ProtoAlliance_2eproto();
  friend void protobuf_AssignDesc_ProtoAlliance_2eproto();
  friend void protobuf_ShutdownFile_ProtoAlliance_2eproto();

  void InitAsDefaultInstance();
  static ReplyAllianceNotifyBC* default_instance_;
};
// -------------------------------------------------------------------

class GetMemberReq : public ::google::protobuf::Message {
 public:
  GetMemberReq();
  virtual ~GetMemberReq();

  GetMemberReq(const GetMemberReq& from);

  inline GetMemberReq& operator=(const GetMemberReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetMemberReq& default_instance();

  void Swap(GetMemberReq* other);

  // implements Message ----------------------------------------------

  GetMemberReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetMemberReq& from);
  void MergeFrom(const GetMemberReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 allianceId = 1;
  inline bool has_allianceid() const;
  inline void clear_allianceid();
  static const int kAllianceIdFieldNumber = 1;
  inline ::google::protobuf::uint32 allianceid() const;
  inline void set_allianceid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoAlliance.GetMemberReq)
 private:
  inline void set_has_allianceid();
  inline void clear_has_allianceid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 allianceid_;
  friend void  protobuf_AddDesc_ProtoAlliance_2eproto();
  friend void protobuf_AssignDesc_ProtoAlliance_2eproto();
  friend void protobuf_ShutdownFile_ProtoAlliance_2eproto();

  void InitAsDefaultInstance();
  static GetMemberReq* default_instance_;
};
// -------------------------------------------------------------------

class RequestAllianceMemberBC : public ::google::protobuf::Message {
 public:
  RequestAllianceMemberBC();
  virtual ~RequestAllianceMemberBC();

  RequestAllianceMemberBC(const RequestAllianceMemberBC& from);

  inline RequestAllianceMemberBC& operator=(const RequestAllianceMemberBC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RequestAllianceMemberBC& default_instance();

  void Swap(RequestAllianceMemberBC* other);

  // implements Message ----------------------------------------------

  RequestAllianceMemberBC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RequestAllianceMemberBC& from);
  void MergeFrom(const RequestAllianceMemberBC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 aid = 1;
  inline bool has_aid() const;
  inline void clear_aid();
  static const int kAidFieldNumber = 1;
  inline ::google::protobuf::uint32 aid() const;
  inline void set_aid(::google::protobuf::uint32 value);

  // required uint32 uid = 2;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 2;
  inline ::google::protobuf::uint32 uid() const;
  inline void set_uid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoAlliance.RequestAllianceMemberBC)
 private:
  inline void set_has_aid();
  inline void clear_has_aid();
  inline void set_has_uid();
  inline void clear_has_uid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 aid_;
  ::google::protobuf::uint32 uid_;
  friend void  protobuf_AddDesc_ProtoAlliance_2eproto();
  friend void protobuf_AssignDesc_ProtoAlliance_2eproto();
  friend void protobuf_ShutdownFile_ProtoAlliance_2eproto();

  void InitAsDefaultInstance();
  static RequestAllianceMemberBC* default_instance_;
};
// -------------------------------------------------------------------

class ReplyAllianceMemberBC : public ::google::protobuf::Message {
 public:
  ReplyAllianceMemberBC();
  virtual ~ReplyAllianceMemberBC();

  ReplyAllianceMemberBC(const ReplyAllianceMemberBC& from);

  inline ReplyAllianceMemberBC& operator=(const ReplyAllianceMemberBC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReplyAllianceMemberBC& default_instance();

  void Swap(ReplyAllianceMemberBC* other);

  // implements Message ----------------------------------------------

  ReplyAllianceMemberBC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReplyAllianceMemberBC& from);
  void MergeFrom(const ReplyAllianceMemberBC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 uid = 1;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 1;
  inline ::google::protobuf::uint32 uid() const;
  inline void set_uid(::google::protobuf::uint32 value);

  // optional .ProtoAlliance.GetMemberResp alliance = 2;
  inline bool has_alliance() const;
  inline void clear_alliance();
  static const int kAllianceFieldNumber = 2;
  inline const ::ProtoAlliance::GetMemberResp& alliance() const;
  inline ::ProtoAlliance::GetMemberResp* mutable_alliance();
  inline ::ProtoAlliance::GetMemberResp* release_alliance();
  inline void set_allocated_alliance(::ProtoAlliance::GetMemberResp* alliance);

  // @@protoc_insertion_point(class_scope:ProtoAlliance.ReplyAllianceMemberBC)
 private:
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_alliance();
  inline void clear_has_alliance();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::ProtoAlliance::GetMemberResp* alliance_;
  ::google::protobuf::uint32 uid_;
  friend void  protobuf_AddDesc_ProtoAlliance_2eproto();
  friend void protobuf_AssignDesc_ProtoAlliance_2eproto();
  friend void protobuf_ShutdownFile_ProtoAlliance_2eproto();

  void InitAsDefaultInstance();
  static ReplyAllianceMemberBC* default_instance_;
};
// -------------------------------------------------------------------

class GetMemberResp : public ::google::protobuf::Message {
 public:
  GetMemberResp();
  virtual ~GetMemberResp();

  GetMemberResp(const GetMemberResp& from);

  inline GetMemberResp& operator=(const GetMemberResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetMemberResp& default_instance();

  void Swap(GetMemberResp* other);

  // implements Message ----------------------------------------------

  GetMemberResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetMemberResp& from);
  void MergeFrom(const GetMemberResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .ProtoAlliance.AllianceMemberCPP members = 1;
  inline int members_size() const;
  inline void clear_members();
  static const int kMembersFieldNumber = 1;
  inline const ::ProtoAlliance::AllianceMemberCPP& members(int index) const;
  inline ::ProtoAlliance::AllianceMemberCPP* mutable_members(int index);
  inline ::ProtoAlliance::AllianceMemberCPP* add_members();
  inline const ::google::protobuf::RepeatedPtrField< ::ProtoAlliance::AllianceMemberCPP >&
      members() const;
  inline ::google::protobuf::RepeatedPtrField< ::ProtoAlliance::AllianceMemberCPP >*
      mutable_members();

  // required uint32 allianceId = 2;
  inline bool has_allianceid() const;
  inline void clear_allianceid();
  static const int kAllianceIdFieldNumber = 2;
  inline ::google::protobuf::uint32 allianceid() const;
  inline void set_allianceid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoAlliance.GetMemberResp)
 private:
  inline void set_has_allianceid();
  inline void clear_has_allianceid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::ProtoAlliance::AllianceMemberCPP > members_;
  ::google::protobuf::uint32 allianceid_;
  friend void  protobuf_AddDesc_ProtoAlliance_2eproto();
  friend void protobuf_AssignDesc_ProtoAlliance_2eproto();
  friend void protobuf_ShutdownFile_ProtoAlliance_2eproto();

  void InitAsDefaultInstance();
  static GetMemberResp* default_instance_;
};
// -------------------------------------------------------------------

class RequestAlliance : public ::google::protobuf::Message {
 public:
  RequestAlliance();
  virtual ~RequestAlliance();

  RequestAlliance(const RequestAlliance& from);

  inline RequestAlliance& operator=(const RequestAlliance& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RequestAlliance& default_instance();

  void Swap(RequestAlliance* other);

  // implements Message ----------------------------------------------

  RequestAlliance* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RequestAlliance& from);
  void MergeFrom(const RequestAlliance& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:ProtoAlliance.RequestAlliance)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_ProtoAlliance_2eproto();
  friend void protobuf_AssignDesc_ProtoAlliance_2eproto();
  friend void protobuf_ShutdownFile_ProtoAlliance_2eproto();

  void InitAsDefaultInstance();
  static RequestAlliance* default_instance_;
};
// -------------------------------------------------------------------

class RequestAllianceBC : public ::google::protobuf::Message {
 public:
  RequestAllianceBC();
  virtual ~RequestAllianceBC();

  RequestAllianceBC(const RequestAllianceBC& from);

  inline RequestAllianceBC& operator=(const RequestAllianceBC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RequestAllianceBC& default_instance();

  void Swap(RequestAllianceBC* other);

  // implements Message ----------------------------------------------

  RequestAllianceBC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RequestAllianceBC& from);
  void MergeFrom(const RequestAllianceBC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 aid = 1;
  inline bool has_aid() const;
  inline void clear_aid();
  static const int kAidFieldNumber = 1;
  inline ::google::protobuf::uint32 aid() const;
  inline void set_aid(::google::protobuf::uint32 value);

  // required uint32 uid = 2;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 2;
  inline ::google::protobuf::uint32 uid() const;
  inline void set_uid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoAlliance.RequestAllianceBC)
 private:
  inline void set_has_aid();
  inline void clear_has_aid();
  inline void set_has_uid();
  inline void clear_has_uid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 aid_;
  ::google::protobuf::uint32 uid_;
  friend void  protobuf_AddDesc_ProtoAlliance_2eproto();
  friend void protobuf_AssignDesc_ProtoAlliance_2eproto();
  friend void protobuf_ShutdownFile_ProtoAlliance_2eproto();

  void InitAsDefaultInstance();
  static RequestAllianceBC* default_instance_;
};
// -------------------------------------------------------------------

class ReplyAllianceBC : public ::google::protobuf::Message {
 public:
  ReplyAllianceBC();
  virtual ~ReplyAllianceBC();

  ReplyAllianceBC(const ReplyAllianceBC& from);

  inline ReplyAllianceBC& operator=(const ReplyAllianceBC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReplyAllianceBC& default_instance();

  void Swap(ReplyAllianceBC* other);

  // implements Message ----------------------------------------------

  ReplyAllianceBC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReplyAllianceBC& from);
  void MergeFrom(const ReplyAllianceBC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 uid = 1;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 1;
  inline ::google::protobuf::uint32 uid() const;
  inline void set_uid(::google::protobuf::uint32 value);

  // optional .ProtoAlliance.AllianceCPP alliance = 2;
  inline bool has_alliance() const;
  inline void clear_alliance();
  static const int kAllianceFieldNumber = 2;
  inline const ::ProtoAlliance::AllianceCPP& alliance() const;
  inline ::ProtoAlliance::AllianceCPP* mutable_alliance();
  inline ::ProtoAlliance::AllianceCPP* release_alliance();
  inline void set_allocated_alliance(::ProtoAlliance::AllianceCPP* alliance);

  // @@protoc_insertion_point(class_scope:ProtoAlliance.ReplyAllianceBC)
 private:
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_alliance();
  inline void clear_has_alliance();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::ProtoAlliance::AllianceCPP* alliance_;
  ::google::protobuf::uint32 uid_;
  friend void  protobuf_AddDesc_ProtoAlliance_2eproto();
  friend void protobuf_AssignDesc_ProtoAlliance_2eproto();
  friend void protobuf_ShutdownFile_ProtoAlliance_2eproto();

  void InitAsDefaultInstance();
  static ReplyAllianceBC* default_instance_;
};
// -------------------------------------------------------------------

class RequestUpdateMemberBC : public ::google::protobuf::Message {
 public:
  RequestUpdateMemberBC();
  virtual ~RequestUpdateMemberBC();

  RequestUpdateMemberBC(const RequestUpdateMemberBC& from);

  inline RequestUpdateMemberBC& operator=(const RequestUpdateMemberBC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RequestUpdateMemberBC& default_instance();

  void Swap(RequestUpdateMemberBC* other);

  // implements Message ----------------------------------------------

  RequestUpdateMemberBC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RequestUpdateMemberBC& from);
  void MergeFrom(const RequestUpdateMemberBC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 aid = 1;
  inline bool has_aid() const;
  inline void clear_aid();
  static const int kAidFieldNumber = 1;
  inline ::google::protobuf::uint32 aid() const;
  inline void set_aid(::google::protobuf::uint32 value);

  // required uint32 uid = 2;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 2;
  inline ::google::protobuf::uint32 uid() const;
  inline void set_uid(::google::protobuf::uint32 value);

  // optional uint32 onlineTs = 3;
  inline bool has_onlinets() const;
  inline void clear_onlinets();
  static const int kOnlineTsFieldNumber = 3;
  inline ::google::protobuf::uint32 onlinets() const;
  inline void set_onlinets(::google::protobuf::uint32 value);

  // optional uint32 helpTs = 4;
  inline bool has_helpts() const;
  inline void clear_helpts();
  static const int kHelpTsFieldNumber = 4;
  inline ::google::protobuf::uint32 helpts() const;
  inline void set_helpts(::google::protobuf::uint32 value);

  // optional uint32 level = 5;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 5;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);

  // optional bytes name = 6;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 6;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const void* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // optional uint32 vipLevel = 7;
  inline bool has_viplevel() const;
  inline void clear_viplevel();
  static const int kVipLevelFieldNumber = 7;
  inline ::google::protobuf::uint32 viplevel() const;
  inline void set_viplevel(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoAlliance.RequestUpdateMemberBC)
 private:
  inline void set_has_aid();
  inline void clear_has_aid();
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_onlinets();
  inline void clear_has_onlinets();
  inline void set_has_helpts();
  inline void clear_has_helpts();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_viplevel();
  inline void clear_has_viplevel();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 aid_;
  ::google::protobuf::uint32 uid_;
  ::google::protobuf::uint32 onlinets_;
  ::google::protobuf::uint32 helpts_;
  ::std::string* name_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint32 viplevel_;
  friend void  protobuf_AddDesc_ProtoAlliance_2eproto();
  friend void protobuf_AssignDesc_ProtoAlliance_2eproto();
  friend void protobuf_ShutdownFile_ProtoAlliance_2eproto();

  void InitAsDefaultInstance();
  static RequestUpdateMemberBC* default_instance_;
};
// -------------------------------------------------------------------

class RequestAddMemberHelpTimesBC : public ::google::protobuf::Message {
 public:
  RequestAddMemberHelpTimesBC();
  virtual ~RequestAddMemberHelpTimesBC();

  RequestAddMemberHelpTimesBC(const RequestAddMemberHelpTimesBC& from);

  inline RequestAddMemberHelpTimesBC& operator=(const RequestAddMemberHelpTimesBC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RequestAddMemberHelpTimesBC& default_instance();

  void Swap(RequestAddMemberHelpTimesBC* other);

  // implements Message ----------------------------------------------

  RequestAddMemberHelpTimesBC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RequestAddMemberHelpTimesBC& from);
  void MergeFrom(const RequestAddMemberHelpTimesBC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 aid = 1;
  inline bool has_aid() const;
  inline void clear_aid();
  static const int kAidFieldNumber = 1;
  inline ::google::protobuf::uint32 aid() const;
  inline void set_aid(::google::protobuf::uint32 value);

  // required uint32 uid = 2;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 2;
  inline ::google::protobuf::uint32 uid() const;
  inline void set_uid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoAlliance.RequestAddMemberHelpTimesBC)
 private:
  inline void set_has_aid();
  inline void clear_has_aid();
  inline void set_has_uid();
  inline void clear_has_uid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 aid_;
  ::google::protobuf::uint32 uid_;
  friend void  protobuf_AddDesc_ProtoAlliance_2eproto();
  friend void protobuf_AssignDesc_ProtoAlliance_2eproto();
  friend void protobuf_ShutdownFile_ProtoAlliance_2eproto();

  void InitAsDefaultInstance();
  static RequestAddMemberHelpTimesBC* default_instance_;
};
// -------------------------------------------------------------------

class RequestAllianceRaceSetFlag : public ::google::protobuf::Message {
 public:
  RequestAllianceRaceSetFlag();
  virtual ~RequestAllianceRaceSetFlag();

  RequestAllianceRaceSetFlag(const RequestAllianceRaceSetFlag& from);

  inline RequestAllianceRaceSetFlag& operator=(const RequestAllianceRaceSetFlag& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RequestAllianceRaceSetFlag& default_instance();

  void Swap(RequestAllianceRaceSetFlag* other);

  // implements Message ----------------------------------------------

  RequestAllianceRaceSetFlag* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RequestAllianceRaceSetFlag& from);
  void MergeFrom(const RequestAllianceRaceSetFlag& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoAlliance.RequestAllianceRaceSetFlag)
 private:
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 id_;
  friend void  protobuf_AddDesc_ProtoAlliance_2eproto();
  friend void protobuf_AssignDesc_ProtoAlliance_2eproto();
  friend void protobuf_ShutdownFile_ProtoAlliance_2eproto();

  void InitAsDefaultInstance();
  static RequestAllianceRaceSetFlag* default_instance_;
};
// -------------------------------------------------------------------

class RequestAllianceRaceSetFlagBC : public ::google::protobuf::Message {
 public:
  RequestAllianceRaceSetFlagBC();
  virtual ~RequestAllianceRaceSetFlagBC();

  RequestAllianceRaceSetFlagBC(const RequestAllianceRaceSetFlagBC& from);

  inline RequestAllianceRaceSetFlagBC& operator=(const RequestAllianceRaceSetFlagBC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RequestAllianceRaceSetFlagBC& default_instance();

  void Swap(RequestAllianceRaceSetFlagBC* other);

  // implements Message ----------------------------------------------

  RequestAllianceRaceSetFlagBC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RequestAllianceRaceSetFlagBC& from);
  void MergeFrom(const RequestAllianceRaceSetFlagBC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 aid = 1;
  inline bool has_aid() const;
  inline void clear_aid();
  static const int kAidFieldNumber = 1;
  inline ::google::protobuf::uint32 aid() const;
  inline void set_aid(::google::protobuf::uint32 value);

  // required uint32 uid = 2;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 2;
  inline ::google::protobuf::uint32 uid() const;
  inline void set_uid(::google::protobuf::uint32 value);

  // required uint32 id = 3;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 3;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoAlliance.RequestAllianceRaceSetFlagBC)
 private:
  inline void set_has_aid();
  inline void clear_has_aid();
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 aid_;
  ::google::protobuf::uint32 uid_;
  ::google::protobuf::uint32 id_;
  friend void  protobuf_AddDesc_ProtoAlliance_2eproto();
  friend void protobuf_AssignDesc_ProtoAlliance_2eproto();
  friend void protobuf_ShutdownFile_ProtoAlliance_2eproto();

  void InitAsDefaultInstance();
  static RequestAllianceRaceSetFlagBC* default_instance_;
};
// -------------------------------------------------------------------

class RequestAllianceRaceMemberProgress : public ::google::protobuf::Message {
 public:
  RequestAllianceRaceMemberProgress();
  virtual ~RequestAllianceRaceMemberProgress();

  RequestAllianceRaceMemberProgress(const RequestAllianceRaceMemberProgress& from);

  inline RequestAllianceRaceMemberProgress& operator=(const RequestAllianceRaceMemberProgress& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RequestAllianceRaceMemberProgress& default_instance();

  void Swap(RequestAllianceRaceMemberProgress* other);

  // implements Message ----------------------------------------------

  RequestAllianceRaceMemberProgress* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RequestAllianceRaceMemberProgress& from);
  void MergeFrom(const RequestAllianceRaceMemberProgress& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:ProtoAlliance.RequestAllianceRaceMemberProgress)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_ProtoAlliance_2eproto();
  friend void protobuf_AssignDesc_ProtoAlliance_2eproto();
  friend void protobuf_ShutdownFile_ProtoAlliance_2eproto();

  void InitAsDefaultInstance();
  static RequestAllianceRaceMemberProgress* default_instance_;
};
// -------------------------------------------------------------------

class RequestAllianceRaceMemberProgressBC : public ::google::protobuf::Message {
 public:
  RequestAllianceRaceMemberProgressBC();
  virtual ~RequestAllianceRaceMemberProgressBC();

  RequestAllianceRaceMemberProgressBC(const RequestAllianceRaceMemberProgressBC& from);

  inline RequestAllianceRaceMemberProgressBC& operator=(const RequestAllianceRaceMemberProgressBC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RequestAllianceRaceMemberProgressBC& default_instance();

  void Swap(RequestAllianceRaceMemberProgressBC* other);

  // implements Message ----------------------------------------------

  RequestAllianceRaceMemberProgressBC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RequestAllianceRaceMemberProgressBC& from);
  void MergeFrom(const RequestAllianceRaceMemberProgressBC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 aid = 1;
  inline bool has_aid() const;
  inline void clear_aid();
  static const int kAidFieldNumber = 1;
  inline ::google::protobuf::uint32 aid() const;
  inline void set_aid(::google::protobuf::uint32 value);

  // required uint32 uid = 2;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 2;
  inline ::google::protobuf::uint32 uid() const;
  inline void set_uid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoAlliance.RequestAllianceRaceMemberProgressBC)
 private:
  inline void set_has_aid();
  inline void clear_has_aid();
  inline void set_has_uid();
  inline void clear_has_uid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 aid_;
  ::google::protobuf::uint32 uid_;
  friend void  protobuf_AddDesc_ProtoAlliance_2eproto();
  friend void protobuf_AssignDesc_ProtoAlliance_2eproto();
  friend void protobuf_ShutdownFile_ProtoAlliance_2eproto();

  void InitAsDefaultInstance();
  static RequestAllianceRaceMemberProgressBC* default_instance_;
};
// -------------------------------------------------------------------

class ReplyAllianceRaceMemberProgress : public ::google::protobuf::Message {
 public:
  ReplyAllianceRaceMemberProgress();
  virtual ~ReplyAllianceRaceMemberProgress();

  ReplyAllianceRaceMemberProgress(const ReplyAllianceRaceMemberProgress& from);

  inline ReplyAllianceRaceMemberProgress& operator=(const ReplyAllianceRaceMemberProgress& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReplyAllianceRaceMemberProgress& default_instance();

  void Swap(ReplyAllianceRaceMemberProgress* other);

  // implements Message ----------------------------------------------

  ReplyAllianceRaceMemberProgress* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReplyAllianceRaceMemberProgress& from);
  void MergeFrom(const ReplyAllianceRaceMemberProgress& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 orderId = 1;
  inline bool has_orderid() const;
  inline void clear_orderid();
  static const int kOrderIdFieldNumber = 1;
  inline ::google::protobuf::uint32 orderid() const;
  inline void set_orderid(::google::protobuf::uint32 value);

  // required uint32 finish = 2;
  inline bool has_finish() const;
  inline void clear_finish();
  static const int kFinishFieldNumber = 2;
  inline ::google::protobuf::uint32 finish() const;
  inline void set_finish(::google::protobuf::uint32 value);

  // required uint32 ts = 3;
  inline bool has_ts() const;
  inline void clear_ts();
  static const int kTsFieldNumber = 3;
  inline ::google::protobuf::uint32 ts() const;
  inline void set_ts(::google::protobuf::uint32 value);

  // repeated uint32 progress = 4;
  inline int progress_size() const;
  inline void clear_progress();
  static const int kProgressFieldNumber = 4;
  inline ::google::protobuf::uint32 progress(int index) const;
  inline void set_progress(int index, ::google::protobuf::uint32 value);
  inline void add_progress(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      progress() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_progress();

  // @@protoc_insertion_point(class_scope:ProtoAlliance.ReplyAllianceRaceMemberProgress)
 private:
  inline void set_has_orderid();
  inline void clear_has_orderid();
  inline void set_has_finish();
  inline void clear_has_finish();
  inline void set_has_ts();
  inline void clear_has_ts();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 orderid_;
  ::google::protobuf::uint32 finish_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > progress_;
  ::google::protobuf::uint32 ts_;
  friend void  protobuf_AddDesc_ProtoAlliance_2eproto();
  friend void protobuf_AssignDesc_ProtoAlliance_2eproto();
  friend void protobuf_ShutdownFile_ProtoAlliance_2eproto();

  void InitAsDefaultInstance();
  static ReplyAllianceRaceMemberProgress* default_instance_;
};
// -------------------------------------------------------------------

class RequestAllianceRaceInfo : public ::google::protobuf::Message {
 public:
  RequestAllianceRaceInfo();
  virtual ~RequestAllianceRaceInfo();

  RequestAllianceRaceInfo(const RequestAllianceRaceInfo& from);

  inline RequestAllianceRaceInfo& operator=(const RequestAllianceRaceInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RequestAllianceRaceInfo& default_instance();

  void Swap(RequestAllianceRaceInfo* other);

  // implements Message ----------------------------------------------

  RequestAllianceRaceInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RequestAllianceRaceInfo& from);
  void MergeFrom(const RequestAllianceRaceInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:ProtoAlliance.RequestAllianceRaceInfo)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_ProtoAlliance_2eproto();
  friend void protobuf_AssignDesc_ProtoAlliance_2eproto();
  friend void protobuf_ShutdownFile_ProtoAlliance_2eproto();

  void InitAsDefaultInstance();
  static RequestAllianceRaceInfo* default_instance_;
};
// -------------------------------------------------------------------

class RequestAllianceRaceInfoBC : public ::google::protobuf::Message {
 public:
  RequestAllianceRaceInfoBC();
  virtual ~RequestAllianceRaceInfoBC();

  RequestAllianceRaceInfoBC(const RequestAllianceRaceInfoBC& from);

  inline RequestAllianceRaceInfoBC& operator=(const RequestAllianceRaceInfoBC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RequestAllianceRaceInfoBC& default_instance();

  void Swap(RequestAllianceRaceInfoBC* other);

  // implements Message ----------------------------------------------

  RequestAllianceRaceInfoBC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RequestAllianceRaceInfoBC& from);
  void MergeFrom(const RequestAllianceRaceInfoBC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 aid = 1;
  inline bool has_aid() const;
  inline void clear_aid();
  static const int kAidFieldNumber = 1;
  inline ::google::protobuf::uint32 aid() const;
  inline void set_aid(::google::protobuf::uint32 value);

  // required uint32 uid = 2;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 2;
  inline ::google::protobuf::uint32 uid() const;
  inline void set_uid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoAlliance.RequestAllianceRaceInfoBC)
 private:
  inline void set_has_aid();
  inline void clear_has_aid();
  inline void set_has_uid();
  inline void clear_has_uid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 aid_;
  ::google::protobuf::uint32 uid_;
  friend void  protobuf_AddDesc_ProtoAlliance_2eproto();
  friend void protobuf_AssignDesc_ProtoAlliance_2eproto();
  friend void protobuf_ShutdownFile_ProtoAlliance_2eproto();

  void InitAsDefaultInstance();
  static RequestAllianceRaceInfoBC* default_instance_;
};
// -------------------------------------------------------------------

class ReplyAllianceRaceInfo : public ::google::protobuf::Message {
 public:
  ReplyAllianceRaceInfo();
  virtual ~ReplyAllianceRaceInfo();

  ReplyAllianceRaceInfo(const ReplyAllianceRaceInfo& from);

  inline ReplyAllianceRaceInfo& operator=(const ReplyAllianceRaceInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReplyAllianceRaceInfo& default_instance();

  void Swap(ReplyAllianceRaceInfo* other);

  // implements Message ----------------------------------------------

  ReplyAllianceRaceInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReplyAllianceRaceInfo& from);
  void MergeFrom(const ReplyAllianceRaceInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 point = 1;
  inline bool has_point() const;
  inline void clear_point();
  static const int kPointFieldNumber = 1;
  inline ::google::protobuf::uint32 point() const;
  inline void set_point(::google::protobuf::uint32 value);

  // required uint32 raceLevel = 2;
  inline bool has_racelevel() const;
  inline void clear_racelevel();
  static const int kRaceLevelFieldNumber = 2;
  inline ::google::protobuf::uint32 racelevel() const;
  inline void set_racelevel(::google::protobuf::uint32 value);

  // required uint32 overTs = 3;
  inline bool has_overts() const;
  inline void clear_overts();
  static const int kOverTsFieldNumber = 3;
  inline ::google::protobuf::uint32 overts() const;
  inline void set_overts(::google::protobuf::uint32 value);

  // optional uint32 flag = 4;
  inline bool has_flag() const;
  inline void clear_flag();
  static const int kFlagFieldNumber = 4;
  inline ::google::protobuf::uint32 flag() const;
  inline void set_flag(::google::protobuf::uint32 value);

  // optional uint32 inRace = 5;
  inline bool has_inrace() const;
  inline void clear_inrace();
  static const int kInRaceFieldNumber = 5;
  inline ::google::protobuf::uint32 inrace() const;
  inline void set_inrace(::google::protobuf::uint32 value);

  // optional uint32 memberPoint = 6;
  inline bool has_memberpoint() const;
  inline void clear_memberpoint();
  static const int kMemberPointFieldNumber = 6;
  inline ::google::protobuf::uint32 memberpoint() const;
  inline void set_memberpoint(::google::protobuf::uint32 value);

  // required uint32 openRace = 7;
  inline bool has_openrace() const;
  inline void clear_openrace();
  static const int kOpenRaceFieldNumber = 7;
  inline ::google::protobuf::uint32 openrace() const;
  inline void set_openrace(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoAlliance.ReplyAllianceRaceInfo)
 private:
  inline void set_has_point();
  inline void clear_has_point();
  inline void set_has_racelevel();
  inline void clear_has_racelevel();
  inline void set_has_overts();
  inline void clear_has_overts();
  inline void set_has_flag();
  inline void clear_has_flag();
  inline void set_has_inrace();
  inline void clear_has_inrace();
  inline void set_has_memberpoint();
  inline void clear_has_memberpoint();
  inline void set_has_openrace();
  inline void clear_has_openrace();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 point_;
  ::google::protobuf::uint32 racelevel_;
  ::google::protobuf::uint32 overts_;
  ::google::protobuf::uint32 flag_;
  ::google::protobuf::uint32 inrace_;
  ::google::protobuf::uint32 memberpoint_;
  ::google::protobuf::uint32 openrace_;
  friend void  protobuf_AddDesc_ProtoAlliance_2eproto();
  friend void protobuf_AssignDesc_ProtoAlliance_2eproto();
  friend void protobuf_ShutdownFile_ProtoAlliance_2eproto();

  void InitAsDefaultInstance();
  static ReplyAllianceRaceInfo* default_instance_;
};
// -------------------------------------------------------------------

class AllianceRaceOrder : public ::google::protobuf::Message {
 public:
  AllianceRaceOrder();
  virtual ~AllianceRaceOrder();

  AllianceRaceOrder(const AllianceRaceOrder& from);

  inline AllianceRaceOrder& operator=(const AllianceRaceOrder& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AllianceRaceOrder& default_instance();

  void Swap(AllianceRaceOrder* other);

  // implements Message ----------------------------------------------

  AllianceRaceOrder* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AllianceRaceOrder& from);
  void MergeFrom(const AllianceRaceOrder& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // required uint32 cdTs = 2;
  inline bool has_cdts() const;
  inline void clear_cdts();
  static const int kCdTsFieldNumber = 2;
  inline ::google::protobuf::uint32 cdts() const;
  inline void set_cdts(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoAlliance.AllianceRaceOrder)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_cdts();
  inline void clear_has_cdts();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 cdts_;
  friend void  protobuf_AddDesc_ProtoAlliance_2eproto();
  friend void protobuf_AssignDesc_ProtoAlliance_2eproto();
  friend void protobuf_ShutdownFile_ProtoAlliance_2eproto();

  void InitAsDefaultInstance();
  static AllianceRaceOrder* default_instance_;
};
// -------------------------------------------------------------------

class AllianceRaceMemberOrder : public ::google::protobuf::Message {
 public:
  AllianceRaceMemberOrder();
  virtual ~AllianceRaceMemberOrder();

  AllianceRaceMemberOrder(const AllianceRaceMemberOrder& from);

  inline AllianceRaceMemberOrder& operator=(const AllianceRaceMemberOrder& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AllianceRaceMemberOrder& default_instance();

  void Swap(AllianceRaceMemberOrder* other);

  // implements Message ----------------------------------------------

  AllianceRaceMemberOrder* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AllianceRaceMemberOrder& from);
  void MergeFrom(const AllianceRaceMemberOrder& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 uid = 1;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 1;
  inline ::google::protobuf::uint32 uid() const;
  inline void set_uid(::google::protobuf::uint32 value);

  // required uint32 id = 2;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 2;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // required uint32 ts = 3;
  inline bool has_ts() const;
  inline void clear_ts();
  static const int kTsFieldNumber = 3;
  inline ::google::protobuf::uint32 ts() const;
  inline void set_ts(::google::protobuf::uint32 value);

  // required uint32 level = 4;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 4;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);

  // required bytes name = 5;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 5;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const void* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // required bytes fig = 6;
  inline bool has_fig() const;
  inline void clear_fig();
  static const int kFigFieldNumber = 6;
  inline const ::std::string& fig() const;
  inline void set_fig(const ::std::string& value);
  inline void set_fig(const char* value);
  inline void set_fig(const void* value, size_t size);
  inline ::std::string* mutable_fig();
  inline ::std::string* release_fig();
  inline void set_allocated_fig(::std::string* fig);

  // @@protoc_insertion_point(class_scope:ProtoAlliance.AllianceRaceMemberOrder)
 private:
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_ts();
  inline void clear_has_ts();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_fig();
  inline void clear_has_fig();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 uid_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 ts_;
  ::google::protobuf::uint32 level_;
  ::std::string* name_;
  ::std::string* fig_;
  friend void  protobuf_AddDesc_ProtoAlliance_2eproto();
  friend void protobuf_AssignDesc_ProtoAlliance_2eproto();
  friend void protobuf_ShutdownFile_ProtoAlliance_2eproto();

  void InitAsDefaultInstance();
  static AllianceRaceMemberOrder* default_instance_;
};
// -------------------------------------------------------------------

class RequestAllianceRaceOrder : public ::google::protobuf::Message {
 public:
  RequestAllianceRaceOrder();
  virtual ~RequestAllianceRaceOrder();

  RequestAllianceRaceOrder(const RequestAllianceRaceOrder& from);

  inline RequestAllianceRaceOrder& operator=(const RequestAllianceRaceOrder& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RequestAllianceRaceOrder& default_instance();

  void Swap(RequestAllianceRaceOrder* other);

  // implements Message ----------------------------------------------

  RequestAllianceRaceOrder* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RequestAllianceRaceOrder& from);
  void MergeFrom(const RequestAllianceRaceOrder& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:ProtoAlliance.RequestAllianceRaceOrder)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_ProtoAlliance_2eproto();
  friend void protobuf_AssignDesc_ProtoAlliance_2eproto();
  friend void protobuf_ShutdownFile_ProtoAlliance_2eproto();

  void InitAsDefaultInstance();
  static RequestAllianceRaceOrder* default_instance_;
};
// -------------------------------------------------------------------

class RequestAllianceRaceOrderBC : public ::google::protobuf::Message {
 public:
  RequestAllianceRaceOrderBC();
  virtual ~RequestAllianceRaceOrderBC();

  RequestAllianceRaceOrderBC(const RequestAllianceRaceOrderBC& from);

  inline RequestAllianceRaceOrderBC& operator=(const RequestAllianceRaceOrderBC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RequestAllianceRaceOrderBC& default_instance();

  void Swap(RequestAllianceRaceOrderBC* other);

  // implements Message ----------------------------------------------

  RequestAllianceRaceOrderBC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RequestAllianceRaceOrderBC& from);
  void MergeFrom(const RequestAllianceRaceOrderBC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 aid = 1;
  inline bool has_aid() const;
  inline void clear_aid();
  static const int kAidFieldNumber = 1;
  inline ::google::protobuf::uint32 aid() const;
  inline void set_aid(::google::protobuf::uint32 value);

  // required uint32 uid = 2;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 2;
  inline ::google::protobuf::uint32 uid() const;
  inline void set_uid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoAlliance.RequestAllianceRaceOrderBC)
 private:
  inline void set_has_aid();
  inline void clear_has_aid();
  inline void set_has_uid();
  inline void clear_has_uid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 aid_;
  ::google::protobuf::uint32 uid_;
  friend void  protobuf_AddDesc_ProtoAlliance_2eproto();
  friend void protobuf_AssignDesc_ProtoAlliance_2eproto();
  friend void protobuf_ShutdownFile_ProtoAlliance_2eproto();

  void InitAsDefaultInstance();
  static RequestAllianceRaceOrderBC* default_instance_;
};
// -------------------------------------------------------------------

class ReplyAllianceRaceOrder : public ::google::protobuf::Message {
 public:
  ReplyAllianceRaceOrder();
  virtual ~ReplyAllianceRaceOrder();

  ReplyAllianceRaceOrder(const ReplyAllianceRaceOrder& from);

  inline ReplyAllianceRaceOrder& operator=(const ReplyAllianceRaceOrder& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReplyAllianceRaceOrder& default_instance();

  void Swap(ReplyAllianceRaceOrder* other);

  // implements Message ----------------------------------------------

  ReplyAllianceRaceOrder* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReplyAllianceRaceOrder& from);
  void MergeFrom(const ReplyAllianceRaceOrder& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 point = 1;
  inline bool has_point() const;
  inline void clear_point();
  static const int kPointFieldNumber = 1;
  inline ::google::protobuf::uint32 point() const;
  inline void set_point(::google::protobuf::uint32 value);

  // required uint32 orderRecv = 2;
  inline bool has_orderrecv() const;
  inline void clear_orderrecv();
  static const int kOrderRecvFieldNumber = 2;
  inline ::google::protobuf::uint32 orderrecv() const;
  inline void set_orderrecv(::google::protobuf::uint32 value);

  // required uint32 maxOrderRecv = 3;
  inline bool has_maxorderrecv() const;
  inline void clear_maxorderrecv();
  static const int kMaxOrderRecvFieldNumber = 3;
  inline ::google::protobuf::uint32 maxorderrecv() const;
  inline void set_maxorderrecv(::google::protobuf::uint32 value);

  // required uint32 flag = 4;
  inline bool has_flag() const;
  inline void clear_flag();
  static const int kFlagFieldNumber = 4;
  inline ::google::protobuf::uint32 flag() const;
  inline void set_flag(::google::protobuf::uint32 value);

  // repeated .ProtoAlliance.AllianceRaceOrder order = 5;
  inline int order_size() const;
  inline void clear_order();
  static const int kOrderFieldNumber = 5;
  inline const ::ProtoAlliance::AllianceRaceOrder& order(int index) const;
  inline ::ProtoAlliance::AllianceRaceOrder* mutable_order(int index);
  inline ::ProtoAlliance::AllianceRaceOrder* add_order();
  inline const ::google::protobuf::RepeatedPtrField< ::ProtoAlliance::AllianceRaceOrder >&
      order() const;
  inline ::google::protobuf::RepeatedPtrField< ::ProtoAlliance::AllianceRaceOrder >*
      mutable_order();

  // repeated .ProtoAlliance.AllianceRaceMemberOrder memberOrder = 6;
  inline int memberorder_size() const;
  inline void clear_memberorder();
  static const int kMemberOrderFieldNumber = 6;
  inline const ::ProtoAlliance::AllianceRaceMemberOrder& memberorder(int index) const;
  inline ::ProtoAlliance::AllianceRaceMemberOrder* mutable_memberorder(int index);
  inline ::ProtoAlliance::AllianceRaceMemberOrder* add_memberorder();
  inline const ::google::protobuf::RepeatedPtrField< ::ProtoAlliance::AllianceRaceMemberOrder >&
      memberorder() const;
  inline ::google::protobuf::RepeatedPtrField< ::ProtoAlliance::AllianceRaceMemberOrder >*
      mutable_memberorder();

  // @@protoc_insertion_point(class_scope:ProtoAlliance.ReplyAllianceRaceOrder)
 private:
  inline void set_has_point();
  inline void clear_has_point();
  inline void set_has_orderrecv();
  inline void clear_has_orderrecv();
  inline void set_has_maxorderrecv();
  inline void clear_has_maxorderrecv();
  inline void set_has_flag();
  inline void clear_has_flag();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 point_;
  ::google::protobuf::uint32 orderrecv_;
  ::google::protobuf::uint32 maxorderrecv_;
  ::google::protobuf::uint32 flag_;
  ::google::protobuf::RepeatedPtrField< ::ProtoAlliance::AllianceRaceOrder > order_;
  ::google::protobuf::RepeatedPtrField< ::ProtoAlliance::AllianceRaceMemberOrder > memberorder_;
  friend void  protobuf_AddDesc_ProtoAlliance_2eproto();
  friend void protobuf_AssignDesc_ProtoAlliance_2eproto();
  friend void protobuf_ShutdownFile_ProtoAlliance_2eproto();

  void InitAsDefaultInstance();
  static ReplyAllianceRaceOrder* default_instance_;
};
// -------------------------------------------------------------------

class RequestAllianceRaceOperateOrder : public ::google::protobuf::Message {
 public:
  RequestAllianceRaceOperateOrder();
  virtual ~RequestAllianceRaceOperateOrder();

  RequestAllianceRaceOperateOrder(const RequestAllianceRaceOperateOrder& from);

  inline RequestAllianceRaceOperateOrder& operator=(const RequestAllianceRaceOperateOrder& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RequestAllianceRaceOperateOrder& default_instance();

  void Swap(RequestAllianceRaceOperateOrder* other);

  // implements Message ----------------------------------------------

  RequestAllianceRaceOperateOrder* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RequestAllianceRaceOperateOrder& from);
  void MergeFrom(const RequestAllianceRaceOperateOrder& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 slot = 1;
  inline bool has_slot() const;
  inline void clear_slot();
  static const int kSlotFieldNumber = 1;
  inline ::google::protobuf::uint32 slot() const;
  inline void set_slot(::google::protobuf::uint32 value);

  // required uint32 operate = 2;
  inline bool has_operate() const;
  inline void clear_operate();
  static const int kOperateFieldNumber = 2;
  inline ::google::protobuf::uint32 operate() const;
  inline void set_operate(::google::protobuf::uint32 value);

  // required uint32 cdTs = 3;
  inline bool has_cdts() const;
  inline void clear_cdts();
  static const int kCdTsFieldNumber = 3;
  inline ::google::protobuf::uint32 cdts() const;
  inline void set_cdts(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoAlliance.RequestAllianceRaceOperateOrder)
 private:
  inline void set_has_slot();
  inline void clear_has_slot();
  inline void set_has_operate();
  inline void clear_has_operate();
  inline void set_has_cdts();
  inline void clear_has_cdts();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 slot_;
  ::google::protobuf::uint32 operate_;
  ::google::protobuf::uint32 cdts_;
  friend void  protobuf_AddDesc_ProtoAlliance_2eproto();
  friend void protobuf_AssignDesc_ProtoAlliance_2eproto();
  friend void protobuf_ShutdownFile_ProtoAlliance_2eproto();

  void InitAsDefaultInstance();
  static RequestAllianceRaceOperateOrder* default_instance_;
};
// -------------------------------------------------------------------

class RequestAllianceRaceOperateOrderBC : public ::google::protobuf::Message {
 public:
  RequestAllianceRaceOperateOrderBC();
  virtual ~RequestAllianceRaceOperateOrderBC();

  RequestAllianceRaceOperateOrderBC(const RequestAllianceRaceOperateOrderBC& from);

  inline RequestAllianceRaceOperateOrderBC& operator=(const RequestAllianceRaceOperateOrderBC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RequestAllianceRaceOperateOrderBC& default_instance();

  void Swap(RequestAllianceRaceOperateOrderBC* other);

  // implements Message ----------------------------------------------

  RequestAllianceRaceOperateOrderBC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RequestAllianceRaceOperateOrderBC& from);
  void MergeFrom(const RequestAllianceRaceOperateOrderBC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 aid = 1;
  inline bool has_aid() const;
  inline void clear_aid();
  static const int kAidFieldNumber = 1;
  inline ::google::protobuf::uint32 aid() const;
  inline void set_aid(::google::protobuf::uint32 value);

  // required uint32 uid = 2;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 2;
  inline ::google::protobuf::uint32 uid() const;
  inline void set_uid(::google::protobuf::uint32 value);

  // required uint32 slot = 3;
  inline bool has_slot() const;
  inline void clear_slot();
  static const int kSlotFieldNumber = 3;
  inline ::google::protobuf::uint32 slot() const;
  inline void set_slot(::google::protobuf::uint32 value);

  // required uint32 operate = 4;
  inline bool has_operate() const;
  inline void clear_operate();
  static const int kOperateFieldNumber = 4;
  inline ::google::protobuf::uint32 operate() const;
  inline void set_operate(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoAlliance.RequestAllianceRaceOperateOrderBC)
 private:
  inline void set_has_aid();
  inline void clear_has_aid();
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_slot();
  inline void clear_has_slot();
  inline void set_has_operate();
  inline void clear_has_operate();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 aid_;
  ::google::protobuf::uint32 uid_;
  ::google::protobuf::uint32 slot_;
  ::google::protobuf::uint32 operate_;
  friend void  protobuf_AddDesc_ProtoAlliance_2eproto();
  friend void protobuf_AssignDesc_ProtoAlliance_2eproto();
  friend void protobuf_ShutdownFile_ProtoAlliance_2eproto();

  void InitAsDefaultInstance();
  static RequestAllianceRaceOperateOrderBC* default_instance_;
};
// -------------------------------------------------------------------

class ReplyAllianceRaceOperateOrder : public ::google::protobuf::Message {
 public:
  ReplyAllianceRaceOperateOrder();
  virtual ~ReplyAllianceRaceOperateOrder();

  ReplyAllianceRaceOperateOrder(const ReplyAllianceRaceOperateOrder& from);

  inline ReplyAllianceRaceOperateOrder& operator=(const ReplyAllianceRaceOperateOrder& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReplyAllianceRaceOperateOrder& default_instance();

  void Swap(ReplyAllianceRaceOperateOrder* other);

  // implements Message ----------------------------------------------

  ReplyAllianceRaceOperateOrder* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReplyAllianceRaceOperateOrder& from);
  void MergeFrom(const ReplyAllianceRaceOperateOrder& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 ret = 1;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 1;
  inline ::google::protobuf::uint32 ret() const;
  inline void set_ret(::google::protobuf::uint32 value);

  // required uint32 uid = 2;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 2;
  inline ::google::protobuf::uint32 uid() const;
  inline void set_uid(::google::protobuf::uint32 value);

  // required uint32 operate = 3;
  inline bool has_operate() const;
  inline void clear_operate();
  static const int kOperateFieldNumber = 3;
  inline ::google::protobuf::uint32 operate() const;
  inline void set_operate(::google::protobuf::uint32 value);

  // required uint32 cdTs = 4;
  inline bool has_cdts() const;
  inline void clear_cdts();
  static const int kCdTsFieldNumber = 4;
  inline ::google::protobuf::uint32 cdts() const;
  inline void set_cdts(::google::protobuf::uint32 value);

  // optional .DataCommon.CommonItemsCPP commons = 5;
  inline bool has_commons() const;
  inline void clear_commons();
  static const int kCommonsFieldNumber = 5;
  inline const ::DataCommon::CommonItemsCPP& commons() const;
  inline ::DataCommon::CommonItemsCPP* mutable_commons();
  inline ::DataCommon::CommonItemsCPP* release_commons();
  inline void set_allocated_commons(::DataCommon::CommonItemsCPP* commons);

  // optional .ProtoAlliance.ReplyAllianceRaceOrder order = 6;
  inline bool has_order() const;
  inline void clear_order();
  static const int kOrderFieldNumber = 6;
  inline const ::ProtoAlliance::ReplyAllianceRaceOrder& order() const;
  inline ::ProtoAlliance::ReplyAllianceRaceOrder* mutable_order();
  inline ::ProtoAlliance::ReplyAllianceRaceOrder* release_order();
  inline void set_allocated_order(::ProtoAlliance::ReplyAllianceRaceOrder* order);

  // @@protoc_insertion_point(class_scope:ProtoAlliance.ReplyAllianceRaceOperateOrder)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_operate();
  inline void clear_has_operate();
  inline void set_has_cdts();
  inline void clear_has_cdts();
  inline void set_has_commons();
  inline void clear_has_commons();
  inline void set_has_order();
  inline void clear_has_order();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 ret_;
  ::google::protobuf::uint32 uid_;
  ::google::protobuf::uint32 operate_;
  ::google::protobuf::uint32 cdts_;
  ::DataCommon::CommonItemsCPP* commons_;
  ::ProtoAlliance::ReplyAllianceRaceOrder* order_;
  friend void  protobuf_AddDesc_ProtoAlliance_2eproto();
  friend void protobuf_AssignDesc_ProtoAlliance_2eproto();
  friend void protobuf_ShutdownFile_ProtoAlliance_2eproto();

  void InitAsDefaultInstance();
  static ReplyAllianceRaceOperateOrder* default_instance_;
};
// -------------------------------------------------------------------

class RequestAllianceRaceMemberDelOrder : public ::google::protobuf::Message {
 public:
  RequestAllianceRaceMemberDelOrder();
  virtual ~RequestAllianceRaceMemberDelOrder();

  RequestAllianceRaceMemberDelOrder(const RequestAllianceRaceMemberDelOrder& from);

  inline RequestAllianceRaceMemberDelOrder& operator=(const RequestAllianceRaceMemberDelOrder& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RequestAllianceRaceMemberDelOrder& default_instance();

  void Swap(RequestAllianceRaceMemberDelOrder* other);

  // implements Message ----------------------------------------------

  RequestAllianceRaceMemberDelOrder* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RequestAllianceRaceMemberDelOrder& from);
  void MergeFrom(const RequestAllianceRaceMemberDelOrder& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoAlliance.RequestAllianceRaceMemberDelOrder)
 private:
  inline void set_has_type();
  inline void clear_has_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 type_;
  friend void  protobuf_AddDesc_ProtoAlliance_2eproto();
  friend void protobuf_AssignDesc_ProtoAlliance_2eproto();
  friend void protobuf_ShutdownFile_ProtoAlliance_2eproto();

  void InitAsDefaultInstance();
  static RequestAllianceRaceMemberDelOrder* default_instance_;
};
// -------------------------------------------------------------------

class RequestAllianceRaceMemberDelOrderBC : public ::google::protobuf::Message {
 public:
  RequestAllianceRaceMemberDelOrderBC();
  virtual ~RequestAllianceRaceMemberDelOrderBC();

  RequestAllianceRaceMemberDelOrderBC(const RequestAllianceRaceMemberDelOrderBC& from);

  inline RequestAllianceRaceMemberDelOrderBC& operator=(const RequestAllianceRaceMemberDelOrderBC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RequestAllianceRaceMemberDelOrderBC& default_instance();

  void Swap(RequestAllianceRaceMemberDelOrderBC* other);

  // implements Message ----------------------------------------------

  RequestAllianceRaceMemberDelOrderBC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RequestAllianceRaceMemberDelOrderBC& from);
  void MergeFrom(const RequestAllianceRaceMemberDelOrderBC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 aid = 1;
  inline bool has_aid() const;
  inline void clear_aid();
  static const int kAidFieldNumber = 1;
  inline ::google::protobuf::uint32 aid() const;
  inline void set_aid(::google::protobuf::uint32 value);

  // required uint32 uid = 2;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 2;
  inline ::google::protobuf::uint32 uid() const;
  inline void set_uid(::google::protobuf::uint32 value);

  // required uint32 type = 3;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 3;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoAlliance.RequestAllianceRaceMemberDelOrderBC)
 private:
  inline void set_has_aid();
  inline void clear_has_aid();
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_type();
  inline void clear_has_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 aid_;
  ::google::protobuf::uint32 uid_;
  ::google::protobuf::uint32 type_;
  friend void  protobuf_AddDesc_ProtoAlliance_2eproto();
  friend void protobuf_AssignDesc_ProtoAlliance_2eproto();
  friend void protobuf_ShutdownFile_ProtoAlliance_2eproto();

  void InitAsDefaultInstance();
  static RequestAllianceRaceMemberDelOrderBC* default_instance_;
};
// -------------------------------------------------------------------

class RequestAllianceRaceMemberUpdateOrderBC : public ::google::protobuf::Message {
 public:
  RequestAllianceRaceMemberUpdateOrderBC();
  virtual ~RequestAllianceRaceMemberUpdateOrderBC();

  RequestAllianceRaceMemberUpdateOrderBC(const RequestAllianceRaceMemberUpdateOrderBC& from);

  inline RequestAllianceRaceMemberUpdateOrderBC& operator=(const RequestAllianceRaceMemberUpdateOrderBC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RequestAllianceRaceMemberUpdateOrderBC& default_instance();

  void Swap(RequestAllianceRaceMemberUpdateOrderBC* other);

  // implements Message ----------------------------------------------

  RequestAllianceRaceMemberUpdateOrderBC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RequestAllianceRaceMemberUpdateOrderBC& from);
  void MergeFrom(const RequestAllianceRaceMemberUpdateOrderBC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 aid = 1;
  inline bool has_aid() const;
  inline void clear_aid();
  static const int kAidFieldNumber = 1;
  inline ::google::protobuf::uint32 aid() const;
  inline void set_aid(::google::protobuf::uint32 value);

  // required uint32 uid = 2;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 2;
  inline ::google::protobuf::uint32 uid() const;
  inline void set_uid(::google::protobuf::uint32 value);

  // required uint32 orderType = 3;
  inline bool has_ordertype() const;
  inline void clear_ordertype();
  static const int kOrderTypeFieldNumber = 3;
  inline ::google::protobuf::uint32 ordertype() const;
  inline void set_ordertype(::google::protobuf::uint32 value);

  // required uint32 count = 4;
  inline bool has_count() const;
  inline void clear_count();
  static const int kCountFieldNumber = 4;
  inline ::google::protobuf::uint32 count() const;
  inline void set_count(::google::protobuf::uint32 value);

  // required uint32 target = 5;
  inline bool has_target() const;
  inline void clear_target();
  static const int kTargetFieldNumber = 5;
  inline ::google::protobuf::uint32 target() const;
  inline void set_target(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoAlliance.RequestAllianceRaceMemberUpdateOrderBC)
 private:
  inline void set_has_aid();
  inline void clear_has_aid();
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_ordertype();
  inline void clear_has_ordertype();
  inline void set_has_count();
  inline void clear_has_count();
  inline void set_has_target();
  inline void clear_has_target();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 aid_;
  ::google::protobuf::uint32 uid_;
  ::google::protobuf::uint32 ordertype_;
  ::google::protobuf::uint32 count_;
  ::google::protobuf::uint32 target_;
  friend void  protobuf_AddDesc_ProtoAlliance_2eproto();
  friend void protobuf_AssignDesc_ProtoAlliance_2eproto();
  friend void protobuf_ShutdownFile_ProtoAlliance_2eproto();

  void InitAsDefaultInstance();
  static RequestAllianceRaceMemberUpdateOrderBC* default_instance_;
};
// -------------------------------------------------------------------

class RequestAllianceRaceBuyOrder : public ::google::protobuf::Message {
 public:
  RequestAllianceRaceBuyOrder();
  virtual ~RequestAllianceRaceBuyOrder();

  RequestAllianceRaceBuyOrder(const RequestAllianceRaceBuyOrder& from);

  inline RequestAllianceRaceBuyOrder& operator=(const RequestAllianceRaceBuyOrder& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RequestAllianceRaceBuyOrder& default_instance();

  void Swap(RequestAllianceRaceBuyOrder* other);

  // implements Message ----------------------------------------------

  RequestAllianceRaceBuyOrder* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RequestAllianceRaceBuyOrder& from);
  void MergeFrom(const RequestAllianceRaceBuyOrder& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:ProtoAlliance.RequestAllianceRaceBuyOrder)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_ProtoAlliance_2eproto();
  friend void protobuf_AssignDesc_ProtoAlliance_2eproto();
  friend void protobuf_ShutdownFile_ProtoAlliance_2eproto();

  void InitAsDefaultInstance();
  static RequestAllianceRaceBuyOrder* default_instance_;
};
// -------------------------------------------------------------------

class RequestAllianceRaceBuyOrderBC : public ::google::protobuf::Message {
 public:
  RequestAllianceRaceBuyOrderBC();
  virtual ~RequestAllianceRaceBuyOrderBC();

  RequestAllianceRaceBuyOrderBC(const RequestAllianceRaceBuyOrderBC& from);

  inline RequestAllianceRaceBuyOrderBC& operator=(const RequestAllianceRaceBuyOrderBC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RequestAllianceRaceBuyOrderBC& default_instance();

  void Swap(RequestAllianceRaceBuyOrderBC* other);

  // implements Message ----------------------------------------------

  RequestAllianceRaceBuyOrderBC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RequestAllianceRaceBuyOrderBC& from);
  void MergeFrom(const RequestAllianceRaceBuyOrderBC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 aid = 1;
  inline bool has_aid() const;
  inline void clear_aid();
  static const int kAidFieldNumber = 1;
  inline ::google::protobuf::uint32 aid() const;
  inline void set_aid(::google::protobuf::uint32 value);

  // required uint32 uid = 2;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 2;
  inline ::google::protobuf::uint32 uid() const;
  inline void set_uid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoAlliance.RequestAllianceRaceBuyOrderBC)
 private:
  inline void set_has_aid();
  inline void clear_has_aid();
  inline void set_has_uid();
  inline void clear_has_uid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 aid_;
  ::google::protobuf::uint32 uid_;
  friend void  protobuf_AddDesc_ProtoAlliance_2eproto();
  friend void protobuf_AssignDesc_ProtoAlliance_2eproto();
  friend void protobuf_ShutdownFile_ProtoAlliance_2eproto();

  void InitAsDefaultInstance();
  static RequestAllianceRaceBuyOrderBC* default_instance_;
};
// -------------------------------------------------------------------

class ReplyAllianceRaceBuyOrder : public ::google::protobuf::Message {
 public:
  ReplyAllianceRaceBuyOrder();
  virtual ~ReplyAllianceRaceBuyOrder();

  ReplyAllianceRaceBuyOrder(const ReplyAllianceRaceBuyOrder& from);

  inline ReplyAllianceRaceBuyOrder& operator=(const ReplyAllianceRaceBuyOrder& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReplyAllianceRaceBuyOrder& default_instance();

  void Swap(ReplyAllianceRaceBuyOrder* other);

  // implements Message ----------------------------------------------

  ReplyAllianceRaceBuyOrder* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReplyAllianceRaceBuyOrder& from);
  void MergeFrom(const ReplyAllianceRaceBuyOrder& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 ret = 1;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 1;
  inline ::google::protobuf::uint32 ret() const;
  inline void set_ret(::google::protobuf::uint32 value);

  // required uint32 uid = 2;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 2;
  inline ::google::protobuf::uint32 uid() const;
  inline void set_uid(::google::protobuf::uint32 value);

  // optional .DataCommon.CommonItemsCPP commons = 3;
  inline bool has_commons() const;
  inline void clear_commons();
  static const int kCommonsFieldNumber = 3;
  inline const ::DataCommon::CommonItemsCPP& commons() const;
  inline ::DataCommon::CommonItemsCPP* mutable_commons();
  inline ::DataCommon::CommonItemsCPP* release_commons();
  inline void set_allocated_commons(::DataCommon::CommonItemsCPP* commons);

  // @@protoc_insertion_point(class_scope:ProtoAlliance.ReplyAllianceRaceBuyOrder)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_commons();
  inline void clear_has_commons();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 ret_;
  ::google::protobuf::uint32 uid_;
  ::DataCommon::CommonItemsCPP* commons_;
  friend void  protobuf_AddDesc_ProtoAlliance_2eproto();
  friend void protobuf_AssignDesc_ProtoAlliance_2eproto();
  friend void protobuf_ShutdownFile_ProtoAlliance_2eproto();

  void InitAsDefaultInstance();
  static ReplyAllianceRaceBuyOrder* default_instance_;
};
// -------------------------------------------------------------------

class RequestAllianceRaceWatchAd : public ::google::protobuf::Message {
 public:
  RequestAllianceRaceWatchAd();
  virtual ~RequestAllianceRaceWatchAd();

  RequestAllianceRaceWatchAd(const RequestAllianceRaceWatchAd& from);

  inline RequestAllianceRaceWatchAd& operator=(const RequestAllianceRaceWatchAd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RequestAllianceRaceWatchAd& default_instance();

  void Swap(RequestAllianceRaceWatchAd* other);

  // implements Message ----------------------------------------------

  RequestAllianceRaceWatchAd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RequestAllianceRaceWatchAd& from);
  void MergeFrom(const RequestAllianceRaceWatchAd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoAlliance.RequestAllianceRaceWatchAd)
 private:
  inline void set_has_type();
  inline void clear_has_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 type_;
  friend void  protobuf_AddDesc_ProtoAlliance_2eproto();
  friend void protobuf_AssignDesc_ProtoAlliance_2eproto();
  friend void protobuf_ShutdownFile_ProtoAlliance_2eproto();

  void InitAsDefaultInstance();
  static RequestAllianceRaceWatchAd* default_instance_;
};
// -------------------------------------------------------------------

class ReplyAllianceRaceWatchAd : public ::google::protobuf::Message {
 public:
  ReplyAllianceRaceWatchAd();
  virtual ~ReplyAllianceRaceWatchAd();

  ReplyAllianceRaceWatchAd(const ReplyAllianceRaceWatchAd& from);

  inline ReplyAllianceRaceWatchAd& operator=(const ReplyAllianceRaceWatchAd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReplyAllianceRaceWatchAd& default_instance();

  void Swap(ReplyAllianceRaceWatchAd* other);

  // implements Message ----------------------------------------------

  ReplyAllianceRaceWatchAd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReplyAllianceRaceWatchAd& from);
  void MergeFrom(const ReplyAllianceRaceWatchAd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 ret = 1;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 1;
  inline ::google::protobuf::uint32 ret() const;
  inline void set_ret(::google::protobuf::uint32 value);

  // optional .DataCommon.CommonItemsCPP commons = 2;
  inline bool has_commons() const;
  inline void clear_commons();
  static const int kCommonsFieldNumber = 2;
  inline const ::DataCommon::CommonItemsCPP& commons() const;
  inline ::DataCommon::CommonItemsCPP* mutable_commons();
  inline ::DataCommon::CommonItemsCPP* release_commons();
  inline void set_allocated_commons(::DataCommon::CommonItemsCPP* commons);

  // optional uint32 point = 3;
  inline bool has_point() const;
  inline void clear_point();
  static const int kPointFieldNumber = 3;
  inline ::google::protobuf::uint32 point() const;
  inline void set_point(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoAlliance.ReplyAllianceRaceWatchAd)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();
  inline void set_has_commons();
  inline void clear_has_commons();
  inline void set_has_point();
  inline void clear_has_point();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::DataCommon::CommonItemsCPP* commons_;
  ::google::protobuf::uint32 ret_;
  ::google::protobuf::uint32 point_;
  friend void  protobuf_AddDesc_ProtoAlliance_2eproto();
  friend void protobuf_AssignDesc_ProtoAlliance_2eproto();
  friend void protobuf_ShutdownFile_ProtoAlliance_2eproto();

  void InitAsDefaultInstance();
  static ReplyAllianceRaceWatchAd* default_instance_;
};
// -------------------------------------------------------------------

class RequestAllianceRaceWatchAdBC : public ::google::protobuf::Message {
 public:
  RequestAllianceRaceWatchAdBC();
  virtual ~RequestAllianceRaceWatchAdBC();

  RequestAllianceRaceWatchAdBC(const RequestAllianceRaceWatchAdBC& from);

  inline RequestAllianceRaceWatchAdBC& operator=(const RequestAllianceRaceWatchAdBC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RequestAllianceRaceWatchAdBC& default_instance();

  void Swap(RequestAllianceRaceWatchAdBC* other);

  // implements Message ----------------------------------------------

  RequestAllianceRaceWatchAdBC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RequestAllianceRaceWatchAdBC& from);
  void MergeFrom(const RequestAllianceRaceWatchAdBC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 aid = 1;
  inline bool has_aid() const;
  inline void clear_aid();
  static const int kAidFieldNumber = 1;
  inline ::google::protobuf::uint32 aid() const;
  inline void set_aid(::google::protobuf::uint32 value);

  // required uint32 uid = 2;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 2;
  inline ::google::protobuf::uint32 uid() const;
  inline void set_uid(::google::protobuf::uint32 value);

  // required uint32 point = 3;
  inline bool has_point() const;
  inline void clear_point();
  static const int kPointFieldNumber = 3;
  inline ::google::protobuf::uint32 point() const;
  inline void set_point(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoAlliance.RequestAllianceRaceWatchAdBC)
 private:
  inline void set_has_aid();
  inline void clear_has_aid();
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_point();
  inline void clear_has_point();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 aid_;
  ::google::protobuf::uint32 uid_;
  ::google::protobuf::uint32 point_;
  friend void  protobuf_AddDesc_ProtoAlliance_2eproto();
  friend void protobuf_AssignDesc_ProtoAlliance_2eproto();
  friend void protobuf_ShutdownFile_ProtoAlliance_2eproto();

  void InitAsDefaultInstance();
  static RequestAllianceRaceWatchAdBC* default_instance_;
};
// -------------------------------------------------------------------

class RequestAllianceRaceReward : public ::google::protobuf::Message {
 public:
  RequestAllianceRaceReward();
  virtual ~RequestAllianceRaceReward();

  RequestAllianceRaceReward(const RequestAllianceRaceReward& from);

  inline RequestAllianceRaceReward& operator=(const RequestAllianceRaceReward& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RequestAllianceRaceReward& default_instance();

  void Swap(RequestAllianceRaceReward* other);

  // implements Message ----------------------------------------------

  RequestAllianceRaceReward* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RequestAllianceRaceReward& from);
  void MergeFrom(const RequestAllianceRaceReward& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:ProtoAlliance.RequestAllianceRaceReward)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_ProtoAlliance_2eproto();
  friend void protobuf_AssignDesc_ProtoAlliance_2eproto();
  friend void protobuf_ShutdownFile_ProtoAlliance_2eproto();

  void InitAsDefaultInstance();
  static RequestAllianceRaceReward* default_instance_;
};
// -------------------------------------------------------------------

class RequestAllianceRaceRewardBC : public ::google::protobuf::Message {
 public:
  RequestAllianceRaceRewardBC();
  virtual ~RequestAllianceRaceRewardBC();

  RequestAllianceRaceRewardBC(const RequestAllianceRaceRewardBC& from);

  inline RequestAllianceRaceRewardBC& operator=(const RequestAllianceRaceRewardBC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RequestAllianceRaceRewardBC& default_instance();

  void Swap(RequestAllianceRaceRewardBC* other);

  // implements Message ----------------------------------------------

  RequestAllianceRaceRewardBC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RequestAllianceRaceRewardBC& from);
  void MergeFrom(const RequestAllianceRaceRewardBC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 aid = 1;
  inline bool has_aid() const;
  inline void clear_aid();
  static const int kAidFieldNumber = 1;
  inline ::google::protobuf::uint32 aid() const;
  inline void set_aid(::google::protobuf::uint32 value);

  // required uint32 uid = 2;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 2;
  inline ::google::protobuf::uint32 uid() const;
  inline void set_uid(::google::protobuf::uint32 value);

  // repeated uint32 id = 3;
  inline int id_size() const;
  inline void clear_id();
  static const int kIdFieldNumber = 3;
  inline ::google::protobuf::uint32 id(int index) const;
  inline void set_id(int index, ::google::protobuf::uint32 value);
  inline void add_id(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      id() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_id();

  // @@protoc_insertion_point(class_scope:ProtoAlliance.RequestAllianceRaceRewardBC)
 private:
  inline void set_has_aid();
  inline void clear_has_aid();
  inline void set_has_uid();
  inline void clear_has_uid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 aid_;
  ::google::protobuf::uint32 uid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > id_;
  friend void  protobuf_AddDesc_ProtoAlliance_2eproto();
  friend void protobuf_AssignDesc_ProtoAlliance_2eproto();
  friend void protobuf_ShutdownFile_ProtoAlliance_2eproto();

  void InitAsDefaultInstance();
  static RequestAllianceRaceRewardBC* default_instance_;
};
// -------------------------------------------------------------------

class ReplyAllianceRaceReward : public ::google::protobuf::Message {
 public:
  ReplyAllianceRaceReward();
  virtual ~ReplyAllianceRaceReward();

  ReplyAllianceRaceReward(const ReplyAllianceRaceReward& from);

  inline ReplyAllianceRaceReward& operator=(const ReplyAllianceRaceReward& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReplyAllianceRaceReward& default_instance();

  void Swap(ReplyAllianceRaceReward* other);

  // implements Message ----------------------------------------------

  ReplyAllianceRaceReward* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReplyAllianceRaceReward& from);
  void MergeFrom(const ReplyAllianceRaceReward& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 ret = 1;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 1;
  inline ::google::protobuf::uint32 ret() const;
  inline void set_ret(::google::protobuf::uint32 value);

  // required uint32 uid = 2;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 2;
  inline ::google::protobuf::uint32 uid() const;
  inline void set_uid(::google::protobuf::uint32 value);

  // required uint32 rankId = 3;
  inline bool has_rankid() const;
  inline void clear_rankid();
  static const int kRankIdFieldNumber = 3;
  inline ::google::protobuf::uint32 rankid() const;
  inline void set_rankid(::google::protobuf::uint32 value);

  // required uint32 userLevel = 4;
  inline bool has_userlevel() const;
  inline void clear_userlevel();
  static const int kUserLevelFieldNumber = 4;
  inline ::google::protobuf::uint32 userlevel() const;
  inline void set_userlevel(::google::protobuf::uint32 value);

  // required uint32 olevel = 5;
  inline bool has_olevel() const;
  inline void clear_olevel();
  static const int kOlevelFieldNumber = 5;
  inline ::google::protobuf::uint32 olevel() const;
  inline void set_olevel(::google::protobuf::uint32 value);

  // required uint32 opoint = 6;
  inline bool has_opoint() const;
  inline void clear_opoint();
  static const int kOpointFieldNumber = 6;
  inline ::google::protobuf::uint32 opoint() const;
  inline void set_opoint(::google::protobuf::uint32 value);

  // repeated uint32 gradeId = 7;
  inline int gradeid_size() const;
  inline void clear_gradeid();
  static const int kGradeIdFieldNumber = 7;
  inline ::google::protobuf::uint32 gradeid(int index) const;
  inline void set_gradeid(int index, ::google::protobuf::uint32 value);
  inline void add_gradeid(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      gradeid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_gradeid();

  // repeated uint32 stageId = 8;
  inline int stageid_size() const;
  inline void clear_stageid();
  static const int kStageIdFieldNumber = 8;
  inline ::google::protobuf::uint32 stageid(int index) const;
  inline void set_stageid(int index, ::google::protobuf::uint32 value);
  inline void add_stageid(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      stageid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_stageid();

  // @@protoc_insertion_point(class_scope:ProtoAlliance.ReplyAllianceRaceReward)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_rankid();
  inline void clear_has_rankid();
  inline void set_has_userlevel();
  inline void clear_has_userlevel();
  inline void set_has_olevel();
  inline void clear_has_olevel();
  inline void set_has_opoint();
  inline void clear_has_opoint();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 ret_;
  ::google::protobuf::uint32 uid_;
  ::google::protobuf::uint32 rankid_;
  ::google::protobuf::uint32 userlevel_;
  ::google::protobuf::uint32 olevel_;
  ::google::protobuf::uint32 opoint_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > gradeid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > stageid_;
  friend void  protobuf_AddDesc_ProtoAlliance_2eproto();
  friend void protobuf_AssignDesc_ProtoAlliance_2eproto();
  friend void protobuf_ShutdownFile_ProtoAlliance_2eproto();

  void InitAsDefaultInstance();
  static ReplyAllianceRaceReward* default_instance_;
};
// -------------------------------------------------------------------

class RequestAllianceRaceTakeGradeReward : public ::google::protobuf::Message {
 public:
  RequestAllianceRaceTakeGradeReward();
  virtual ~RequestAllianceRaceTakeGradeReward();

  RequestAllianceRaceTakeGradeReward(const RequestAllianceRaceTakeGradeReward& from);

  inline RequestAllianceRaceTakeGradeReward& operator=(const RequestAllianceRaceTakeGradeReward& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RequestAllianceRaceTakeGradeReward& default_instance();

  void Swap(RequestAllianceRaceTakeGradeReward* other);

  // implements Message ----------------------------------------------

  RequestAllianceRaceTakeGradeReward* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RequestAllianceRaceTakeGradeReward& from);
  void MergeFrom(const RequestAllianceRaceTakeGradeReward& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:ProtoAlliance.RequestAllianceRaceTakeGradeReward)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_ProtoAlliance_2eproto();
  friend void protobuf_AssignDesc_ProtoAlliance_2eproto();
  friend void protobuf_ShutdownFile_ProtoAlliance_2eproto();

  void InitAsDefaultInstance();
  static RequestAllianceRaceTakeGradeReward* default_instance_;
};
// -------------------------------------------------------------------

class RequestAllianceRaceTakeGradeRewardBC : public ::google::protobuf::Message {
 public:
  RequestAllianceRaceTakeGradeRewardBC();
  virtual ~RequestAllianceRaceTakeGradeRewardBC();

  RequestAllianceRaceTakeGradeRewardBC(const RequestAllianceRaceTakeGradeRewardBC& from);

  inline RequestAllianceRaceTakeGradeRewardBC& operator=(const RequestAllianceRaceTakeGradeRewardBC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RequestAllianceRaceTakeGradeRewardBC& default_instance();

  void Swap(RequestAllianceRaceTakeGradeRewardBC* other);

  // implements Message ----------------------------------------------

  RequestAllianceRaceTakeGradeRewardBC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RequestAllianceRaceTakeGradeRewardBC& from);
  void MergeFrom(const RequestAllianceRaceTakeGradeRewardBC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 aid = 1;
  inline bool has_aid() const;
  inline void clear_aid();
  static const int kAidFieldNumber = 1;
  inline ::google::protobuf::uint32 aid() const;
  inline void set_aid(::google::protobuf::uint32 value);

  // required uint32 uid = 2;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 2;
  inline ::google::protobuf::uint32 uid() const;
  inline void set_uid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoAlliance.RequestAllianceRaceTakeGradeRewardBC)
 private:
  inline void set_has_aid();
  inline void clear_has_aid();
  inline void set_has_uid();
  inline void clear_has_uid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 aid_;
  ::google::protobuf::uint32 uid_;
  friend void  protobuf_AddDesc_ProtoAlliance_2eproto();
  friend void protobuf_AssignDesc_ProtoAlliance_2eproto();
  friend void protobuf_ShutdownFile_ProtoAlliance_2eproto();

  void InitAsDefaultInstance();
  static RequestAllianceRaceTakeGradeRewardBC* default_instance_;
};
// -------------------------------------------------------------------

class ReplyAllianceRaceTakeGradeReward : public ::google::protobuf::Message {
 public:
  ReplyAllianceRaceTakeGradeReward();
  virtual ~ReplyAllianceRaceTakeGradeReward();

  ReplyAllianceRaceTakeGradeReward(const ReplyAllianceRaceTakeGradeReward& from);

  inline ReplyAllianceRaceTakeGradeReward& operator=(const ReplyAllianceRaceTakeGradeReward& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReplyAllianceRaceTakeGradeReward& default_instance();

  void Swap(ReplyAllianceRaceTakeGradeReward* other);

  // implements Message ----------------------------------------------

  ReplyAllianceRaceTakeGradeReward* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReplyAllianceRaceTakeGradeReward& from);
  void MergeFrom(const ReplyAllianceRaceTakeGradeReward& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 ret = 1;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 1;
  inline ::google::protobuf::uint32 ret() const;
  inline void set_ret(::google::protobuf::uint32 value);

  // required uint32 uid = 2;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 2;
  inline ::google::protobuf::uint32 uid() const;
  inline void set_uid(::google::protobuf::uint32 value);

  // optional .DataCommon.CommonItemsCPP commons = 3;
  inline bool has_commons() const;
  inline void clear_commons();
  static const int kCommonsFieldNumber = 3;
  inline const ::DataCommon::CommonItemsCPP& commons() const;
  inline ::DataCommon::CommonItemsCPP* mutable_commons();
  inline ::DataCommon::CommonItemsCPP* release_commons();
  inline void set_allocated_commons(::DataCommon::CommonItemsCPP* commons);

  // optional uint32 userLevel = 4;
  inline bool has_userlevel() const;
  inline void clear_userlevel();
  static const int kUserLevelFieldNumber = 4;
  inline ::google::protobuf::uint32 userlevel() const;
  inline void set_userlevel(::google::protobuf::uint32 value);

  // optional uint32 rankId = 5;
  inline bool has_rankid() const;
  inline void clear_rankid();
  static const int kRankIdFieldNumber = 5;
  inline ::google::protobuf::uint32 rankid() const;
  inline void set_rankid(::google::protobuf::uint32 value);

  // repeated uint32 id = 6;
  inline int id_size() const;
  inline void clear_id();
  static const int kIdFieldNumber = 6;
  inline ::google::protobuf::uint32 id(int index) const;
  inline void set_id(int index, ::google::protobuf::uint32 value);
  inline void add_id(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      id() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_id();

  // @@protoc_insertion_point(class_scope:ProtoAlliance.ReplyAllianceRaceTakeGradeReward)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_commons();
  inline void clear_has_commons();
  inline void set_has_userlevel();
  inline void clear_has_userlevel();
  inline void set_has_rankid();
  inline void clear_has_rankid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 ret_;
  ::google::protobuf::uint32 uid_;
  ::DataCommon::CommonItemsCPP* commons_;
  ::google::protobuf::uint32 userlevel_;
  ::google::protobuf::uint32 rankid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > id_;
  friend void  protobuf_AddDesc_ProtoAlliance_2eproto();
  friend void protobuf_AssignDesc_ProtoAlliance_2eproto();
  friend void protobuf_ShutdownFile_ProtoAlliance_2eproto();

  void InitAsDefaultInstance();
  static ReplyAllianceRaceTakeGradeReward* default_instance_;
};
// -------------------------------------------------------------------

class RequestAllianceRaceTakeStageReward : public ::google::protobuf::Message {
 public:
  RequestAllianceRaceTakeStageReward();
  virtual ~RequestAllianceRaceTakeStageReward();

  RequestAllianceRaceTakeStageReward(const RequestAllianceRaceTakeStageReward& from);

  inline RequestAllianceRaceTakeStageReward& operator=(const RequestAllianceRaceTakeStageReward& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RequestAllianceRaceTakeStageReward& default_instance();

  void Swap(RequestAllianceRaceTakeStageReward* other);

  // implements Message ----------------------------------------------

  RequestAllianceRaceTakeStageReward* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RequestAllianceRaceTakeStageReward& from);
  void MergeFrom(const RequestAllianceRaceTakeStageReward& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 id = 1;
  inline int id_size() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id(int index) const;
  inline void set_id(int index, ::google::protobuf::uint32 value);
  inline void add_id(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      id() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_id();

  // @@protoc_insertion_point(class_scope:ProtoAlliance.RequestAllianceRaceTakeStageReward)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > id_;
  friend void  protobuf_AddDesc_ProtoAlliance_2eproto();
  friend void protobuf_AssignDesc_ProtoAlliance_2eproto();
  friend void protobuf_ShutdownFile_ProtoAlliance_2eproto();

  void InitAsDefaultInstance();
  static RequestAllianceRaceTakeStageReward* default_instance_;
};
// -------------------------------------------------------------------

class RequestAllianceRaceTakeStageRewardBC : public ::google::protobuf::Message {
 public:
  RequestAllianceRaceTakeStageRewardBC();
  virtual ~RequestAllianceRaceTakeStageRewardBC();

  RequestAllianceRaceTakeStageRewardBC(const RequestAllianceRaceTakeStageRewardBC& from);

  inline RequestAllianceRaceTakeStageRewardBC& operator=(const RequestAllianceRaceTakeStageRewardBC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RequestAllianceRaceTakeStageRewardBC& default_instance();

  void Swap(RequestAllianceRaceTakeStageRewardBC* other);

  // implements Message ----------------------------------------------

  RequestAllianceRaceTakeStageRewardBC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RequestAllianceRaceTakeStageRewardBC& from);
  void MergeFrom(const RequestAllianceRaceTakeStageRewardBC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 aid = 1;
  inline bool has_aid() const;
  inline void clear_aid();
  static const int kAidFieldNumber = 1;
  inline ::google::protobuf::uint32 aid() const;
  inline void set_aid(::google::protobuf::uint32 value);

  // required uint32 uid = 2;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 2;
  inline ::google::protobuf::uint32 uid() const;
  inline void set_uid(::google::protobuf::uint32 value);

  // repeated uint32 id = 3;
  inline int id_size() const;
  inline void clear_id();
  static const int kIdFieldNumber = 3;
  inline ::google::protobuf::uint32 id(int index) const;
  inline void set_id(int index, ::google::protobuf::uint32 value);
  inline void add_id(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      id() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_id();

  // @@protoc_insertion_point(class_scope:ProtoAlliance.RequestAllianceRaceTakeStageRewardBC)
 private:
  inline void set_has_aid();
  inline void clear_has_aid();
  inline void set_has_uid();
  inline void clear_has_uid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 aid_;
  ::google::protobuf::uint32 uid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > id_;
  friend void  protobuf_AddDesc_ProtoAlliance_2eproto();
  friend void protobuf_AssignDesc_ProtoAlliance_2eproto();
  friend void protobuf_ShutdownFile_ProtoAlliance_2eproto();

  void InitAsDefaultInstance();
  static RequestAllianceRaceTakeStageRewardBC* default_instance_;
};
// -------------------------------------------------------------------

class ReplyAllianceRaceTakeStageReward : public ::google::protobuf::Message {
 public:
  ReplyAllianceRaceTakeStageReward();
  virtual ~ReplyAllianceRaceTakeStageReward();

  ReplyAllianceRaceTakeStageReward(const ReplyAllianceRaceTakeStageReward& from);

  inline ReplyAllianceRaceTakeStageReward& operator=(const ReplyAllianceRaceTakeStageReward& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReplyAllianceRaceTakeStageReward& default_instance();

  void Swap(ReplyAllianceRaceTakeStageReward* other);

  // implements Message ----------------------------------------------

  ReplyAllianceRaceTakeStageReward* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReplyAllianceRaceTakeStageReward& from);
  void MergeFrom(const ReplyAllianceRaceTakeStageReward& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 ret = 1;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 1;
  inline ::google::protobuf::uint32 ret() const;
  inline void set_ret(::google::protobuf::uint32 value);

  // required uint32 uid = 2;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 2;
  inline ::google::protobuf::uint32 uid() const;
  inline void set_uid(::google::protobuf::uint32 value);

  // optional .DataCommon.CommonItemsCPP commons = 3;
  inline bool has_commons() const;
  inline void clear_commons();
  static const int kCommonsFieldNumber = 3;
  inline const ::DataCommon::CommonItemsCPP& commons() const;
  inline ::DataCommon::CommonItemsCPP* mutable_commons();
  inline ::DataCommon::CommonItemsCPP* release_commons();
  inline void set_allocated_commons(::DataCommon::CommonItemsCPP* commons);

  // optional uint32 userLevel = 4;
  inline bool has_userlevel() const;
  inline void clear_userlevel();
  static const int kUserLevelFieldNumber = 4;
  inline ::google::protobuf::uint32 userlevel() const;
  inline void set_userlevel(::google::protobuf::uint32 value);

  // repeated uint32 id = 5;
  inline int id_size() const;
  inline void clear_id();
  static const int kIdFieldNumber = 5;
  inline ::google::protobuf::uint32 id(int index) const;
  inline void set_id(int index, ::google::protobuf::uint32 value);
  inline void add_id(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      id() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_id();

  // @@protoc_insertion_point(class_scope:ProtoAlliance.ReplyAllianceRaceTakeStageReward)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_commons();
  inline void clear_has_commons();
  inline void set_has_userlevel();
  inline void clear_has_userlevel();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 ret_;
  ::google::protobuf::uint32 uid_;
  ::DataCommon::CommonItemsCPP* commons_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > id_;
  ::google::protobuf::uint32 userlevel_;
  friend void  protobuf_AddDesc_ProtoAlliance_2eproto();
  friend void protobuf_AssignDesc_ProtoAlliance_2eproto();
  friend void protobuf_ShutdownFile_ProtoAlliance_2eproto();

  void InitAsDefaultInstance();
  static ReplyAllianceRaceTakeStageReward* default_instance_;
};
// -------------------------------------------------------------------

class RequestAllianceRaceRefreshStageReward : public ::google::protobuf::Message {
 public:
  RequestAllianceRaceRefreshStageReward();
  virtual ~RequestAllianceRaceRefreshStageReward();

  RequestAllianceRaceRefreshStageReward(const RequestAllianceRaceRefreshStageReward& from);

  inline RequestAllianceRaceRefreshStageReward& operator=(const RequestAllianceRaceRefreshStageReward& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RequestAllianceRaceRefreshStageReward& default_instance();

  void Swap(RequestAllianceRaceRefreshStageReward* other);

  // implements Message ----------------------------------------------

  RequestAllianceRaceRefreshStageReward* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RequestAllianceRaceRefreshStageReward& from);
  void MergeFrom(const RequestAllianceRaceRefreshStageReward& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 id = 1;
  inline int id_size() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id(int index) const;
  inline void set_id(int index, ::google::protobuf::uint32 value);
  inline void add_id(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      id() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_id();

  // @@protoc_insertion_point(class_scope:ProtoAlliance.RequestAllianceRaceRefreshStageReward)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > id_;
  friend void  protobuf_AddDesc_ProtoAlliance_2eproto();
  friend void protobuf_AssignDesc_ProtoAlliance_2eproto();
  friend void protobuf_ShutdownFile_ProtoAlliance_2eproto();

  void InitAsDefaultInstance();
  static RequestAllianceRaceRefreshStageReward* default_instance_;
};
// -------------------------------------------------------------------

class RequestAllianceRaceRefreshStageRewardBC : public ::google::protobuf::Message {
 public:
  RequestAllianceRaceRefreshStageRewardBC();
  virtual ~RequestAllianceRaceRefreshStageRewardBC();

  RequestAllianceRaceRefreshStageRewardBC(const RequestAllianceRaceRefreshStageRewardBC& from);

  inline RequestAllianceRaceRefreshStageRewardBC& operator=(const RequestAllianceRaceRefreshStageRewardBC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RequestAllianceRaceRefreshStageRewardBC& default_instance();

  void Swap(RequestAllianceRaceRefreshStageRewardBC* other);

  // implements Message ----------------------------------------------

  RequestAllianceRaceRefreshStageRewardBC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RequestAllianceRaceRefreshStageRewardBC& from);
  void MergeFrom(const RequestAllianceRaceRefreshStageRewardBC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 aid = 1;
  inline bool has_aid() const;
  inline void clear_aid();
  static const int kAidFieldNumber = 1;
  inline ::google::protobuf::uint32 aid() const;
  inline void set_aid(::google::protobuf::uint32 value);

  // required uint32 uid = 2;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 2;
  inline ::google::protobuf::uint32 uid() const;
  inline void set_uid(::google::protobuf::uint32 value);

  // repeated uint32 id = 3;
  inline int id_size() const;
  inline void clear_id();
  static const int kIdFieldNumber = 3;
  inline ::google::protobuf::uint32 id(int index) const;
  inline void set_id(int index, ::google::protobuf::uint32 value);
  inline void add_id(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      id() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_id();

  // @@protoc_insertion_point(class_scope:ProtoAlliance.RequestAllianceRaceRefreshStageRewardBC)
 private:
  inline void set_has_aid();
  inline void clear_has_aid();
  inline void set_has_uid();
  inline void clear_has_uid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 aid_;
  ::google::protobuf::uint32 uid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > id_;
  friend void  protobuf_AddDesc_ProtoAlliance_2eproto();
  friend void protobuf_AssignDesc_ProtoAlliance_2eproto();
  friend void protobuf_ShutdownFile_ProtoAlliance_2eproto();

  void InitAsDefaultInstance();
  static RequestAllianceRaceRefreshStageRewardBC* default_instance_;
};
// -------------------------------------------------------------------

class ReplyAllianceRaceRefreshStageReward : public ::google::protobuf::Message {
 public:
  ReplyAllianceRaceRefreshStageReward();
  virtual ~ReplyAllianceRaceRefreshStageReward();

  ReplyAllianceRaceRefreshStageReward(const ReplyAllianceRaceRefreshStageReward& from);

  inline ReplyAllianceRaceRefreshStageReward& operator=(const ReplyAllianceRaceRefreshStageReward& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReplyAllianceRaceRefreshStageReward& default_instance();

  void Swap(ReplyAllianceRaceRefreshStageReward* other);

  // implements Message ----------------------------------------------

  ReplyAllianceRaceRefreshStageReward* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReplyAllianceRaceRefreshStageReward& from);
  void MergeFrom(const ReplyAllianceRaceRefreshStageReward& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 ret = 1;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 1;
  inline ::google::protobuf::uint32 ret() const;
  inline void set_ret(::google::protobuf::uint32 value);

  // required uint32 uid = 2;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 2;
  inline ::google::protobuf::uint32 uid() const;
  inline void set_uid(::google::protobuf::uint32 value);

  // optional .DataCommon.CommonItemsCPP commons = 3;
  inline bool has_commons() const;
  inline void clear_commons();
  static const int kCommonsFieldNumber = 3;
  inline const ::DataCommon::CommonItemsCPP& commons() const;
  inline ::DataCommon::CommonItemsCPP* mutable_commons();
  inline ::DataCommon::CommonItemsCPP* release_commons();
  inline void set_allocated_commons(::DataCommon::CommonItemsCPP* commons);

  // optional uint32 levelId = 4;
  inline bool has_levelid() const;
  inline void clear_levelid();
  static const int kLevelIdFieldNumber = 4;
  inline ::google::protobuf::uint32 levelid() const;
  inline void set_levelid(::google::protobuf::uint32 value);

  // repeated uint32 id = 5;
  inline int id_size() const;
  inline void clear_id();
  static const int kIdFieldNumber = 5;
  inline ::google::protobuf::uint32 id(int index) const;
  inline void set_id(int index, ::google::protobuf::uint32 value);
  inline void add_id(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      id() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_id();

  // @@protoc_insertion_point(class_scope:ProtoAlliance.ReplyAllianceRaceRefreshStageReward)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_commons();
  inline void clear_has_commons();
  inline void set_has_levelid();
  inline void clear_has_levelid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 ret_;
  ::google::protobuf::uint32 uid_;
  ::DataCommon::CommonItemsCPP* commons_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > id_;
  ::google::protobuf::uint32 levelid_;
  friend void  protobuf_AddDesc_ProtoAlliance_2eproto();
  friend void protobuf_AssignDesc_ProtoAlliance_2eproto();
  friend void protobuf_ShutdownFile_ProtoAlliance_2eproto();

  void InitAsDefaultInstance();
  static ReplyAllianceRaceRefreshStageReward* default_instance_;
};
// -------------------------------------------------------------------

class AllianceRaceMemberOrderLogItem : public ::google::protobuf::Message {
 public:
  AllianceRaceMemberOrderLogItem();
  virtual ~AllianceRaceMemberOrderLogItem();

  AllianceRaceMemberOrderLogItem(const AllianceRaceMemberOrderLogItem& from);

  inline AllianceRaceMemberOrderLogItem& operator=(const AllianceRaceMemberOrderLogItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AllianceRaceMemberOrderLogItem& default_instance();

  void Swap(AllianceRaceMemberOrderLogItem* other);

  // implements Message ----------------------------------------------

  AllianceRaceMemberOrderLogItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AllianceRaceMemberOrderLogItem& from);
  void MergeFrom(const AllianceRaceMemberOrderLogItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 uid = 1;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 1;
  inline ::google::protobuf::uint32 uid() const;
  inline void set_uid(::google::protobuf::uint32 value);

  // required uint32 finish = 2;
  inline bool has_finish() const;
  inline void clear_finish();
  static const int kFinishFieldNumber = 2;
  inline ::google::protobuf::uint32 finish() const;
  inline void set_finish(::google::protobuf::uint32 value);

  // required uint32 max = 3;
  inline bool has_max() const;
  inline void clear_max();
  static const int kMaxFieldNumber = 3;
  inline ::google::protobuf::uint32 max() const;
  inline void set_max(::google::protobuf::uint32 value);

  // required uint32 cancel = 4;
  inline bool has_cancel() const;
  inline void clear_cancel();
  static const int kCancelFieldNumber = 4;
  inline ::google::protobuf::uint32 cancel() const;
  inline void set_cancel(::google::protobuf::uint32 value);

  // required uint32 point = 5;
  inline bool has_point() const;
  inline void clear_point();
  static const int kPointFieldNumber = 5;
  inline ::google::protobuf::uint32 point() const;
  inline void set_point(::google::protobuf::uint32 value);

  // required uint32 level = 6;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 6;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);

  // optional bytes fig = 7;
  inline bool has_fig() const;
  inline void clear_fig();
  static const int kFigFieldNumber = 7;
  inline const ::std::string& fig() const;
  inline void set_fig(const ::std::string& value);
  inline void set_fig(const char* value);
  inline void set_fig(const void* value, size_t size);
  inline ::std::string* mutable_fig();
  inline ::std::string* release_fig();
  inline void set_allocated_fig(::std::string* fig);

  // @@protoc_insertion_point(class_scope:ProtoAlliance.AllianceRaceMemberOrderLogItem)
 private:
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_finish();
  inline void clear_has_finish();
  inline void set_has_max();
  inline void clear_has_max();
  inline void set_has_cancel();
  inline void clear_has_cancel();
  inline void set_has_point();
  inline void clear_has_point();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_fig();
  inline void clear_has_fig();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 uid_;
  ::google::protobuf::uint32 finish_;
  ::google::protobuf::uint32 max_;
  ::google::protobuf::uint32 cancel_;
  ::google::protobuf::uint32 point_;
  ::google::protobuf::uint32 level_;
  ::std::string* fig_;
  friend void  protobuf_AddDesc_ProtoAlliance_2eproto();
  friend void protobuf_AssignDesc_ProtoAlliance_2eproto();
  friend void protobuf_ShutdownFile_ProtoAlliance_2eproto();

  void InitAsDefaultInstance();
  static AllianceRaceMemberOrderLogItem* default_instance_;
};
// -------------------------------------------------------------------

class RequestAllianceRaceMemberOrderLog : public ::google::protobuf::Message {
 public:
  RequestAllianceRaceMemberOrderLog();
  virtual ~RequestAllianceRaceMemberOrderLog();

  RequestAllianceRaceMemberOrderLog(const RequestAllianceRaceMemberOrderLog& from);

  inline RequestAllianceRaceMemberOrderLog& operator=(const RequestAllianceRaceMemberOrderLog& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RequestAllianceRaceMemberOrderLog& default_instance();

  void Swap(RequestAllianceRaceMemberOrderLog* other);

  // implements Message ----------------------------------------------

  RequestAllianceRaceMemberOrderLog* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RequestAllianceRaceMemberOrderLog& from);
  void MergeFrom(const RequestAllianceRaceMemberOrderLog& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:ProtoAlliance.RequestAllianceRaceMemberOrderLog)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_ProtoAlliance_2eproto();
  friend void protobuf_AssignDesc_ProtoAlliance_2eproto();
  friend void protobuf_ShutdownFile_ProtoAlliance_2eproto();

  void InitAsDefaultInstance();
  static RequestAllianceRaceMemberOrderLog* default_instance_;
};
// -------------------------------------------------------------------

class RequestAllianceRaceMemberOrderLogBC : public ::google::protobuf::Message {
 public:
  RequestAllianceRaceMemberOrderLogBC();
  virtual ~RequestAllianceRaceMemberOrderLogBC();

  RequestAllianceRaceMemberOrderLogBC(const RequestAllianceRaceMemberOrderLogBC& from);

  inline RequestAllianceRaceMemberOrderLogBC& operator=(const RequestAllianceRaceMemberOrderLogBC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RequestAllianceRaceMemberOrderLogBC& default_instance();

  void Swap(RequestAllianceRaceMemberOrderLogBC* other);

  // implements Message ----------------------------------------------

  RequestAllianceRaceMemberOrderLogBC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RequestAllianceRaceMemberOrderLogBC& from);
  void MergeFrom(const RequestAllianceRaceMemberOrderLogBC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 aid = 1;
  inline bool has_aid() const;
  inline void clear_aid();
  static const int kAidFieldNumber = 1;
  inline ::google::protobuf::uint32 aid() const;
  inline void set_aid(::google::protobuf::uint32 value);

  // required uint32 uid = 2;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 2;
  inline ::google::protobuf::uint32 uid() const;
  inline void set_uid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoAlliance.RequestAllianceRaceMemberOrderLogBC)
 private:
  inline void set_has_aid();
  inline void clear_has_aid();
  inline void set_has_uid();
  inline void clear_has_uid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 aid_;
  ::google::protobuf::uint32 uid_;
  friend void  protobuf_AddDesc_ProtoAlliance_2eproto();
  friend void protobuf_AssignDesc_ProtoAlliance_2eproto();
  friend void protobuf_ShutdownFile_ProtoAlliance_2eproto();

  void InitAsDefaultInstance();
  static RequestAllianceRaceMemberOrderLogBC* default_instance_;
};
// -------------------------------------------------------------------

class ReplyAllianceRaceMemberOrderLog : public ::google::protobuf::Message {
 public:
  ReplyAllianceRaceMemberOrderLog();
  virtual ~ReplyAllianceRaceMemberOrderLog();

  ReplyAllianceRaceMemberOrderLog(const ReplyAllianceRaceMemberOrderLog& from);

  inline ReplyAllianceRaceMemberOrderLog& operator=(const ReplyAllianceRaceMemberOrderLog& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReplyAllianceRaceMemberOrderLog& default_instance();

  void Swap(ReplyAllianceRaceMemberOrderLog* other);

  // implements Message ----------------------------------------------

  ReplyAllianceRaceMemberOrderLog* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReplyAllianceRaceMemberOrderLog& from);
  void MergeFrom(const ReplyAllianceRaceMemberOrderLog& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .ProtoAlliance.AllianceRaceMemberOrderLogItem member = 1;
  inline int member_size() const;
  inline void clear_member();
  static const int kMemberFieldNumber = 1;
  inline const ::ProtoAlliance::AllianceRaceMemberOrderLogItem& member(int index) const;
  inline ::ProtoAlliance::AllianceRaceMemberOrderLogItem* mutable_member(int index);
  inline ::ProtoAlliance::AllianceRaceMemberOrderLogItem* add_member();
  inline const ::google::protobuf::RepeatedPtrField< ::ProtoAlliance::AllianceRaceMemberOrderLogItem >&
      member() const;
  inline ::google::protobuf::RepeatedPtrField< ::ProtoAlliance::AllianceRaceMemberOrderLogItem >*
      mutable_member();

  // @@protoc_insertion_point(class_scope:ProtoAlliance.ReplyAllianceRaceMemberOrderLog)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::ProtoAlliance::AllianceRaceMemberOrderLogItem > member_;
  friend void  protobuf_AddDesc_ProtoAlliance_2eproto();
  friend void protobuf_AssignDesc_ProtoAlliance_2eproto();
  friend void protobuf_ShutdownFile_ProtoAlliance_2eproto();

  void InitAsDefaultInstance();
  static ReplyAllianceRaceMemberOrderLog* default_instance_;
};
// -------------------------------------------------------------------

class AllianceRacePersonOrderLogItem : public ::google::protobuf::Message {
 public:
  AllianceRacePersonOrderLogItem();
  virtual ~AllianceRacePersonOrderLogItem();

  AllianceRacePersonOrderLogItem(const AllianceRacePersonOrderLogItem& from);

  inline AllianceRacePersonOrderLogItem& operator=(const AllianceRacePersonOrderLogItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AllianceRacePersonOrderLogItem& default_instance();

  void Swap(AllianceRacePersonOrderLogItem* other);

  // implements Message ----------------------------------------------

  AllianceRacePersonOrderLogItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AllianceRacePersonOrderLogItem& from);
  void MergeFrom(const AllianceRacePersonOrderLogItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // required uint32 status = 2;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 2;
  inline ::google::protobuf::uint32 status() const;
  inline void set_status(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoAlliance.AllianceRacePersonOrderLogItem)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_status();
  inline void clear_has_status();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 status_;
  friend void  protobuf_AddDesc_ProtoAlliance_2eproto();
  friend void protobuf_AssignDesc_ProtoAlliance_2eproto();
  friend void protobuf_ShutdownFile_ProtoAlliance_2eproto();

  void InitAsDefaultInstance();
  static AllianceRacePersonOrderLogItem* default_instance_;
};
// -------------------------------------------------------------------

class RequestAllianceRacePersonOrderLog : public ::google::protobuf::Message {
 public:
  RequestAllianceRacePersonOrderLog();
  virtual ~RequestAllianceRacePersonOrderLog();

  RequestAllianceRacePersonOrderLog(const RequestAllianceRacePersonOrderLog& from);

  inline RequestAllianceRacePersonOrderLog& operator=(const RequestAllianceRacePersonOrderLog& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RequestAllianceRacePersonOrderLog& default_instance();

  void Swap(RequestAllianceRacePersonOrderLog* other);

  // implements Message ----------------------------------------------

  RequestAllianceRacePersonOrderLog* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RequestAllianceRacePersonOrderLog& from);
  void MergeFrom(const RequestAllianceRacePersonOrderLog& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:ProtoAlliance.RequestAllianceRacePersonOrderLog)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_ProtoAlliance_2eproto();
  friend void protobuf_AssignDesc_ProtoAlliance_2eproto();
  friend void protobuf_ShutdownFile_ProtoAlliance_2eproto();

  void InitAsDefaultInstance();
  static RequestAllianceRacePersonOrderLog* default_instance_;
};
// -------------------------------------------------------------------

class RequestAllianceRacePersonOrderLogBC : public ::google::protobuf::Message {
 public:
  RequestAllianceRacePersonOrderLogBC();
  virtual ~RequestAllianceRacePersonOrderLogBC();

  RequestAllianceRacePersonOrderLogBC(const RequestAllianceRacePersonOrderLogBC& from);

  inline RequestAllianceRacePersonOrderLogBC& operator=(const RequestAllianceRacePersonOrderLogBC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RequestAllianceRacePersonOrderLogBC& default_instance();

  void Swap(RequestAllianceRacePersonOrderLogBC* other);

  // implements Message ----------------------------------------------

  RequestAllianceRacePersonOrderLogBC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RequestAllianceRacePersonOrderLogBC& from);
  void MergeFrom(const RequestAllianceRacePersonOrderLogBC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 aid = 1;
  inline bool has_aid() const;
  inline void clear_aid();
  static const int kAidFieldNumber = 1;
  inline ::google::protobuf::uint32 aid() const;
  inline void set_aid(::google::protobuf::uint32 value);

  // required uint32 uid = 2;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 2;
  inline ::google::protobuf::uint32 uid() const;
  inline void set_uid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoAlliance.RequestAllianceRacePersonOrderLogBC)
 private:
  inline void set_has_aid();
  inline void clear_has_aid();
  inline void set_has_uid();
  inline void clear_has_uid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 aid_;
  ::google::protobuf::uint32 uid_;
  friend void  protobuf_AddDesc_ProtoAlliance_2eproto();
  friend void protobuf_AssignDesc_ProtoAlliance_2eproto();
  friend void protobuf_ShutdownFile_ProtoAlliance_2eproto();

  void InitAsDefaultInstance();
  static RequestAllianceRacePersonOrderLogBC* default_instance_;
};
// -------------------------------------------------------------------

class ReplyAllianceRacePersonOrderLog : public ::google::protobuf::Message {
 public:
  ReplyAllianceRacePersonOrderLog();
  virtual ~ReplyAllianceRacePersonOrderLog();

  ReplyAllianceRacePersonOrderLog(const ReplyAllianceRacePersonOrderLog& from);

  inline ReplyAllianceRacePersonOrderLog& operator=(const ReplyAllianceRacePersonOrderLog& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReplyAllianceRacePersonOrderLog& default_instance();

  void Swap(ReplyAllianceRacePersonOrderLog* other);

  // implements Message ----------------------------------------------

  ReplyAllianceRacePersonOrderLog* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReplyAllianceRacePersonOrderLog& from);
  void MergeFrom(const ReplyAllianceRacePersonOrderLog& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .ProtoAlliance.AllianceRacePersonOrderLogItem member = 1;
  inline int member_size() const;
  inline void clear_member();
  static const int kMemberFieldNumber = 1;
  inline const ::ProtoAlliance::AllianceRacePersonOrderLogItem& member(int index) const;
  inline ::ProtoAlliance::AllianceRacePersonOrderLogItem* mutable_member(int index);
  inline ::ProtoAlliance::AllianceRacePersonOrderLogItem* add_member();
  inline const ::google::protobuf::RepeatedPtrField< ::ProtoAlliance::AllianceRacePersonOrderLogItem >&
      member() const;
  inline ::google::protobuf::RepeatedPtrField< ::ProtoAlliance::AllianceRacePersonOrderLogItem >*
      mutable_member();

  // @@protoc_insertion_point(class_scope:ProtoAlliance.ReplyAllianceRacePersonOrderLog)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::ProtoAlliance::AllianceRacePersonOrderLogItem > member_;
  friend void  protobuf_AddDesc_ProtoAlliance_2eproto();
  friend void protobuf_AssignDesc_ProtoAlliance_2eproto();
  friend void protobuf_ShutdownFile_ProtoAlliance_2eproto();

  void InitAsDefaultInstance();
  static ReplyAllianceRacePersonOrderLog* default_instance_;
};
// -------------------------------------------------------------------

class SetAllianceRaceGroupPointBC : public ::google::protobuf::Message {
 public:
  SetAllianceRaceGroupPointBC();
  virtual ~SetAllianceRaceGroupPointBC();

  SetAllianceRaceGroupPointBC(const SetAllianceRaceGroupPointBC& from);

  inline SetAllianceRaceGroupPointBC& operator=(const SetAllianceRaceGroupPointBC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SetAllianceRaceGroupPointBC& default_instance();

  void Swap(SetAllianceRaceGroupPointBC* other);

  // implements Message ----------------------------------------------

  SetAllianceRaceGroupPointBC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SetAllianceRaceGroupPointBC& from);
  void MergeFrom(const SetAllianceRaceGroupPointBC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 aid = 1;
  inline bool has_aid() const;
  inline void clear_aid();
  static const int kAidFieldNumber = 1;
  inline ::google::protobuf::uint32 aid() const;
  inline void set_aid(::google::protobuf::uint32 value);

  // required uint32 point = 2;
  inline bool has_point() const;
  inline void clear_point();
  static const int kPointFieldNumber = 2;
  inline ::google::protobuf::uint32 point() const;
  inline void set_point(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoAlliance.SetAllianceRaceGroupPointBC)
 private:
  inline void set_has_aid();
  inline void clear_has_aid();
  inline void set_has_point();
  inline void clear_has_point();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 aid_;
  ::google::protobuf::uint32 point_;
  friend void  protobuf_AddDesc_ProtoAlliance_2eproto();
  friend void protobuf_AssignDesc_ProtoAlliance_2eproto();
  friend void protobuf_ShutdownFile_ProtoAlliance_2eproto();

  void InitAsDefaultInstance();
  static SetAllianceRaceGroupPointBC* default_instance_;
};
// -------------------------------------------------------------------

class AllianceRaceGroupMember : public ::google::protobuf::Message {
 public:
  AllianceRaceGroupMember();
  virtual ~AllianceRaceGroupMember();

  AllianceRaceGroupMember(const AllianceRaceGroupMember& from);

  inline AllianceRaceGroupMember& operator=(const AllianceRaceGroupMember& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AllianceRaceGroupMember& default_instance();

  void Swap(AllianceRaceGroupMember* other);

  // implements Message ----------------------------------------------

  AllianceRaceGroupMember* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AllianceRaceGroupMember& from);
  void MergeFrom(const AllianceRaceGroupMember& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 aid = 1;
  inline bool has_aid() const;
  inline void clear_aid();
  static const int kAidFieldNumber = 1;
  inline ::google::protobuf::uint32 aid() const;
  inline void set_aid(::google::protobuf::uint32 value);

  // required uint32 point = 2;
  inline bool has_point() const;
  inline void clear_point();
  static const int kPointFieldNumber = 2;
  inline ::google::protobuf::uint32 point() const;
  inline void set_point(::google::protobuf::uint32 value);

  // required uint32 count = 3;
  inline bool has_count() const;
  inline void clear_count();
  static const int kCountFieldNumber = 3;
  inline ::google::protobuf::uint32 count() const;
  inline void set_count(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoAlliance.AllianceRaceGroupMember)
 private:
  inline void set_has_aid();
  inline void clear_has_aid();
  inline void set_has_point();
  inline void clear_has_point();
  inline void set_has_count();
  inline void clear_has_count();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 aid_;
  ::google::protobuf::uint32 point_;
  ::google::protobuf::uint32 count_;
  friend void  protobuf_AddDesc_ProtoAlliance_2eproto();
  friend void protobuf_AssignDesc_ProtoAlliance_2eproto();
  friend void protobuf_ShutdownFile_ProtoAlliance_2eproto();

  void InitAsDefaultInstance();
  static AllianceRaceGroupMember* default_instance_;
};
// -------------------------------------------------------------------

class RequestAllianceRaceGroupMember : public ::google::protobuf::Message {
 public:
  RequestAllianceRaceGroupMember();
  virtual ~RequestAllianceRaceGroupMember();

  RequestAllianceRaceGroupMember(const RequestAllianceRaceGroupMember& from);

  inline RequestAllianceRaceGroupMember& operator=(const RequestAllianceRaceGroupMember& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RequestAllianceRaceGroupMember& default_instance();

  void Swap(RequestAllianceRaceGroupMember* other);

  // implements Message ----------------------------------------------

  RequestAllianceRaceGroupMember* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RequestAllianceRaceGroupMember& from);
  void MergeFrom(const RequestAllianceRaceGroupMember& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:ProtoAlliance.RequestAllianceRaceGroupMember)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_ProtoAlliance_2eproto();
  friend void protobuf_AssignDesc_ProtoAlliance_2eproto();
  friend void protobuf_ShutdownFile_ProtoAlliance_2eproto();

  void InitAsDefaultInstance();
  static RequestAllianceRaceGroupMember* default_instance_;
};
// -------------------------------------------------------------------

class RequestAllianceRaceGroupMemberBC : public ::google::protobuf::Message {
 public:
  RequestAllianceRaceGroupMemberBC();
  virtual ~RequestAllianceRaceGroupMemberBC();

  RequestAllianceRaceGroupMemberBC(const RequestAllianceRaceGroupMemberBC& from);

  inline RequestAllianceRaceGroupMemberBC& operator=(const RequestAllianceRaceGroupMemberBC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RequestAllianceRaceGroupMemberBC& default_instance();

  void Swap(RequestAllianceRaceGroupMemberBC* other);

  // implements Message ----------------------------------------------

  RequestAllianceRaceGroupMemberBC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RequestAllianceRaceGroupMemberBC& from);
  void MergeFrom(const RequestAllianceRaceGroupMemberBC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 aid = 1;
  inline bool has_aid() const;
  inline void clear_aid();
  static const int kAidFieldNumber = 1;
  inline ::google::protobuf::uint32 aid() const;
  inline void set_aid(::google::protobuf::uint32 value);

  // required uint32 uid = 2;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 2;
  inline ::google::protobuf::uint32 uid() const;
  inline void set_uid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoAlliance.RequestAllianceRaceGroupMemberBC)
 private:
  inline void set_has_aid();
  inline void clear_has_aid();
  inline void set_has_uid();
  inline void clear_has_uid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 aid_;
  ::google::protobuf::uint32 uid_;
  friend void  protobuf_AddDesc_ProtoAlliance_2eproto();
  friend void protobuf_AssignDesc_ProtoAlliance_2eproto();
  friend void protobuf_ShutdownFile_ProtoAlliance_2eproto();

  void InitAsDefaultInstance();
  static RequestAllianceRaceGroupMemberBC* default_instance_;
};
// -------------------------------------------------------------------

class ReplyAllianceRaceGroupMember : public ::google::protobuf::Message {
 public:
  ReplyAllianceRaceGroupMember();
  virtual ~ReplyAllianceRaceGroupMember();

  ReplyAllianceRaceGroupMember(const ReplyAllianceRaceGroupMember& from);

  inline ReplyAllianceRaceGroupMember& operator=(const ReplyAllianceRaceGroupMember& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReplyAllianceRaceGroupMember& default_instance();

  void Swap(ReplyAllianceRaceGroupMember* other);

  // implements Message ----------------------------------------------

  ReplyAllianceRaceGroupMember* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReplyAllianceRaceGroupMember& from);
  void MergeFrom(const ReplyAllianceRaceGroupMember& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .ProtoAlliance.AllianceRaceGroupMember member = 1;
  inline int member_size() const;
  inline void clear_member();
  static const int kMemberFieldNumber = 1;
  inline const ::ProtoAlliance::AllianceRaceGroupMember& member(int index) const;
  inline ::ProtoAlliance::AllianceRaceGroupMember* mutable_member(int index);
  inline ::ProtoAlliance::AllianceRaceGroupMember* add_member();
  inline const ::google::protobuf::RepeatedPtrField< ::ProtoAlliance::AllianceRaceGroupMember >&
      member() const;
  inline ::google::protobuf::RepeatedPtrField< ::ProtoAlliance::AllianceRaceGroupMember >*
      mutable_member();

  // @@protoc_insertion_point(class_scope:ProtoAlliance.ReplyAllianceRaceGroupMember)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::ProtoAlliance::AllianceRaceGroupMember > member_;
  friend void  protobuf_AddDesc_ProtoAlliance_2eproto();
  friend void protobuf_AssignDesc_ProtoAlliance_2eproto();
  friend void protobuf_ShutdownFile_ProtoAlliance_2eproto();

  void InitAsDefaultInstance();
  static ReplyAllianceRaceGroupMember* default_instance_;
};
// ===================================================================


// ===================================================================

// AllianceCPP

// required uint32 allianceId = 1;
inline bool AllianceCPP::has_allianceid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AllianceCPP::set_has_allianceid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AllianceCPP::clear_has_allianceid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AllianceCPP::clear_allianceid() {
  allianceid_ = 0u;
  clear_has_allianceid();
}
inline ::google::protobuf::uint32 AllianceCPP::allianceid() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.AllianceCPP.allianceId)
  return allianceid_;
}
inline void AllianceCPP::set_allianceid(::google::protobuf::uint32 value) {
  set_has_allianceid();
  allianceid_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.AllianceCPP.allianceId)
}

// required bytes name = 2;
inline bool AllianceCPP::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AllianceCPP::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AllianceCPP::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AllianceCPP::clear_name() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& AllianceCPP::name() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.AllianceCPP.name)
  return *name_;
}
inline void AllianceCPP::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set:ProtoAlliance.AllianceCPP.name)
}
inline void AllianceCPP::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set_char:ProtoAlliance.AllianceCPP.name)
}
inline void AllianceCPP::set_name(const void* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ProtoAlliance.AllianceCPP.name)
}
inline ::std::string* AllianceCPP::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:ProtoAlliance.AllianceCPP.name)
  return name_;
}
inline ::std::string* AllianceCPP::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void AllianceCPP::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoAlliance.AllianceCPP.name)
}

// required uint32 flag = 3;
inline bool AllianceCPP::has_flag() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AllianceCPP::set_has_flag() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AllianceCPP::clear_has_flag() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AllianceCPP::clear_flag() {
  flag_ = 0u;
  clear_has_flag();
}
inline ::google::protobuf::uint32 AllianceCPP::flag() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.AllianceCPP.flag)
  return flag_;
}
inline void AllianceCPP::set_flag(::google::protobuf::uint32 value) {
  set_has_flag();
  flag_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.AllianceCPP.flag)
}

// required uint32 createUid = 4;
inline bool AllianceCPP::has_createuid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void AllianceCPP::set_has_createuid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void AllianceCPP::clear_has_createuid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void AllianceCPP::clear_createuid() {
  createuid_ = 0u;
  clear_has_createuid();
}
inline ::google::protobuf::uint32 AllianceCPP::createuid() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.AllianceCPP.createUid)
  return createuid_;
}
inline void AllianceCPP::set_createuid(::google::protobuf::uint32 value) {
  set_has_createuid();
  createuid_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.AllianceCPP.createUid)
}

// required bytes username = 5;
inline bool AllianceCPP::has_username() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void AllianceCPP::set_has_username() {
  _has_bits_[0] |= 0x00000010u;
}
inline void AllianceCPP::clear_has_username() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void AllianceCPP::clear_username() {
  if (username_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    username_->clear();
  }
  clear_has_username();
}
inline const ::std::string& AllianceCPP::username() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.AllianceCPP.username)
  return *username_;
}
inline void AllianceCPP::set_username(const ::std::string& value) {
  set_has_username();
  if (username_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    username_ = new ::std::string;
  }
  username_->assign(value);
  // @@protoc_insertion_point(field_set:ProtoAlliance.AllianceCPP.username)
}
inline void AllianceCPP::set_username(const char* value) {
  set_has_username();
  if (username_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    username_ = new ::std::string;
  }
  username_->assign(value);
  // @@protoc_insertion_point(field_set_char:ProtoAlliance.AllianceCPP.username)
}
inline void AllianceCPP::set_username(const void* value, size_t size) {
  set_has_username();
  if (username_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    username_ = new ::std::string;
  }
  username_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ProtoAlliance.AllianceCPP.username)
}
inline ::std::string* AllianceCPP::mutable_username() {
  set_has_username();
  if (username_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    username_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:ProtoAlliance.AllianceCPP.username)
  return username_;
}
inline ::std::string* AllianceCPP::release_username() {
  clear_has_username();
  if (username_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = username_;
    username_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void AllianceCPP::set_allocated_username(::std::string* username) {
  if (username_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete username_;
  }
  if (username) {
    set_has_username();
    username_ = username;
  } else {
    clear_has_username();
    username_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoAlliance.AllianceCPP.username)
}

// required uint32 createTime = 6;
inline bool AllianceCPP::has_createtime() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void AllianceCPP::set_has_createtime() {
  _has_bits_[0] |= 0x00000020u;
}
inline void AllianceCPP::clear_has_createtime() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void AllianceCPP::clear_createtime() {
  createtime_ = 0u;
  clear_has_createtime();
}
inline ::google::protobuf::uint32 AllianceCPP::createtime() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.AllianceCPP.createTime)
  return createtime_;
}
inline void AllianceCPP::set_createtime(::google::protobuf::uint32 value) {
  set_has_createtime();
  createtime_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.AllianceCPP.createTime)
}

// required uint32 applyType = 7;
inline bool AllianceCPP::has_applytype() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void AllianceCPP::set_has_applytype() {
  _has_bits_[0] |= 0x00000040u;
}
inline void AllianceCPP::clear_has_applytype() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void AllianceCPP::clear_applytype() {
  applytype_ = 0u;
  clear_has_applytype();
}
inline ::google::protobuf::uint32 AllianceCPP::applytype() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.AllianceCPP.applyType)
  return applytype_;
}
inline void AllianceCPP::set_applytype(::google::protobuf::uint32 value) {
  set_has_applytype();
  applytype_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.AllianceCPP.applyType)
}

// required uint32 applyLevelLimit = 8;
inline bool AllianceCPP::has_applylevellimit() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void AllianceCPP::set_has_applylevellimit() {
  _has_bits_[0] |= 0x00000080u;
}
inline void AllianceCPP::clear_has_applylevellimit() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void AllianceCPP::clear_applylevellimit() {
  applylevellimit_ = 0u;
  clear_has_applylevellimit();
}
inline ::google::protobuf::uint32 AllianceCPP::applylevellimit() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.AllianceCPP.applyLevelLimit)
  return applylevellimit_;
}
inline void AllianceCPP::set_applylevellimit(::google::protobuf::uint32 value) {
  set_has_applylevellimit();
  applylevellimit_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.AllianceCPP.applyLevelLimit)
}

// optional bytes description = 9;
inline bool AllianceCPP::has_description() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void AllianceCPP::set_has_description() {
  _has_bits_[0] |= 0x00000100u;
}
inline void AllianceCPP::clear_has_description() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void AllianceCPP::clear_description() {
  if (description_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    description_->clear();
  }
  clear_has_description();
}
inline const ::std::string& AllianceCPP::description() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.AllianceCPP.description)
  return *description_;
}
inline void AllianceCPP::set_description(const ::std::string& value) {
  set_has_description();
  if (description_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    description_ = new ::std::string;
  }
  description_->assign(value);
  // @@protoc_insertion_point(field_set:ProtoAlliance.AllianceCPP.description)
}
inline void AllianceCPP::set_description(const char* value) {
  set_has_description();
  if (description_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    description_ = new ::std::string;
  }
  description_->assign(value);
  // @@protoc_insertion_point(field_set_char:ProtoAlliance.AllianceCPP.description)
}
inline void AllianceCPP::set_description(const void* value, size_t size) {
  set_has_description();
  if (description_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    description_ = new ::std::string;
  }
  description_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ProtoAlliance.AllianceCPP.description)
}
inline ::std::string* AllianceCPP::mutable_description() {
  set_has_description();
  if (description_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    description_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:ProtoAlliance.AllianceCPP.description)
  return description_;
}
inline ::std::string* AllianceCPP::release_description() {
  clear_has_description();
  if (description_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = description_;
    description_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void AllianceCPP::set_allocated_description(::std::string* description) {
  if (description_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete description_;
  }
  if (description) {
    set_has_description();
    description_ = description;
  } else {
    clear_has_description();
    description_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoAlliance.AllianceCPP.description)
}

// required uint32 qqgroup = 10;
inline bool AllianceCPP::has_qqgroup() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void AllianceCPP::set_has_qqgroup() {
  _has_bits_[0] |= 0x00000200u;
}
inline void AllianceCPP::clear_has_qqgroup() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void AllianceCPP::clear_qqgroup() {
  qqgroup_ = 0u;
  clear_has_qqgroup();
}
inline ::google::protobuf::uint32 AllianceCPP::qqgroup() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.AllianceCPP.qqgroup)
  return qqgroup_;
}
inline void AllianceCPP::set_qqgroup(::google::protobuf::uint32 value) {
  set_has_qqgroup();
  qqgroup_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.AllianceCPP.qqgroup)
}

// -------------------------------------------------------------------

// AllianceMemberCPP

// required uint32 memberUid = 1;
inline bool AllianceMemberCPP::has_memberuid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AllianceMemberCPP::set_has_memberuid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AllianceMemberCPP::clear_has_memberuid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AllianceMemberCPP::clear_memberuid() {
  memberuid_ = 0u;
  clear_has_memberuid();
}
inline ::google::protobuf::uint32 AllianceMemberCPP::memberuid() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.AllianceMemberCPP.memberUid)
  return memberuid_;
}
inline void AllianceMemberCPP::set_memberuid(::google::protobuf::uint32 value) {
  set_has_memberuid();
  memberuid_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.AllianceMemberCPP.memberUid)
}

// optional bytes name = 2;
inline bool AllianceMemberCPP::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AllianceMemberCPP::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AllianceMemberCPP::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AllianceMemberCPP::clear_name() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& AllianceMemberCPP::name() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.AllianceMemberCPP.name)
  return *name_;
}
inline void AllianceMemberCPP::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set:ProtoAlliance.AllianceMemberCPP.name)
}
inline void AllianceMemberCPP::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set_char:ProtoAlliance.AllianceMemberCPP.name)
}
inline void AllianceMemberCPP::set_name(const void* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ProtoAlliance.AllianceMemberCPP.name)
}
inline ::std::string* AllianceMemberCPP::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:ProtoAlliance.AllianceMemberCPP.name)
  return name_;
}
inline ::std::string* AllianceMemberCPP::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void AllianceMemberCPP::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoAlliance.AllianceMemberCPP.name)
}

// required uint32 position = 3;
inline bool AllianceMemberCPP::has_position() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AllianceMemberCPP::set_has_position() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AllianceMemberCPP::clear_has_position() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AllianceMemberCPP::clear_position() {
  position_ = 0u;
  clear_has_position();
}
inline ::google::protobuf::uint32 AllianceMemberCPP::position() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.AllianceMemberCPP.position)
  return position_;
}
inline void AllianceMemberCPP::set_position(::google::protobuf::uint32 value) {
  set_has_position();
  position_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.AllianceMemberCPP.position)
}

// required uint32 authority = 4;
inline bool AllianceMemberCPP::has_authority() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void AllianceMemberCPP::set_has_authority() {
  _has_bits_[0] |= 0x00000008u;
}
inline void AllianceMemberCPP::clear_has_authority() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void AllianceMemberCPP::clear_authority() {
  authority_ = 0u;
  clear_has_authority();
}
inline ::google::protobuf::uint32 AllianceMemberCPP::authority() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.AllianceMemberCPP.authority)
  return authority_;
}
inline void AllianceMemberCPP::set_authority(::google::protobuf::uint32 value) {
  set_has_authority();
  authority_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.AllianceMemberCPP.authority)
}

// required uint32 helptimes = 5;
inline bool AllianceMemberCPP::has_helptimes() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void AllianceMemberCPP::set_has_helptimes() {
  _has_bits_[0] |= 0x00000010u;
}
inline void AllianceMemberCPP::clear_has_helptimes() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void AllianceMemberCPP::clear_helptimes() {
  helptimes_ = 0u;
  clear_has_helptimes();
}
inline ::google::protobuf::uint32 AllianceMemberCPP::helptimes() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.AllianceMemberCPP.helptimes)
  return helptimes_;
}
inline void AllianceMemberCPP::set_helptimes(::google::protobuf::uint32 value) {
  set_has_helptimes();
  helptimes_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.AllianceMemberCPP.helptimes)
}

// required uint32 onlineTs = 6;
inline bool AllianceMemberCPP::has_onlinets() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void AllianceMemberCPP::set_has_onlinets() {
  _has_bits_[0] |= 0x00000020u;
}
inline void AllianceMemberCPP::clear_has_onlinets() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void AllianceMemberCPP::clear_onlinets() {
  onlinets_ = 0u;
  clear_has_onlinets();
}
inline ::google::protobuf::uint32 AllianceMemberCPP::onlinets() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.AllianceMemberCPP.onlineTs)
  return onlinets_;
}
inline void AllianceMemberCPP::set_onlinets(::google::protobuf::uint32 value) {
  set_has_onlinets();
  onlinets_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.AllianceMemberCPP.onlineTs)
}

// optional uint32 helpTs = 7;
inline bool AllianceMemberCPP::has_helpts() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void AllianceMemberCPP::set_has_helpts() {
  _has_bits_[0] |= 0x00000040u;
}
inline void AllianceMemberCPP::clear_has_helpts() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void AllianceMemberCPP::clear_helpts() {
  helpts_ = 0u;
  clear_has_helpts();
}
inline ::google::protobuf::uint32 AllianceMemberCPP::helpts() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.AllianceMemberCPP.helpTs)
  return helpts_;
}
inline void AllianceMemberCPP::set_helpts(::google::protobuf::uint32 value) {
  set_has_helpts();
  helpts_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.AllianceMemberCPP.helpTs)
}

// required uint32 level = 8;
inline bool AllianceMemberCPP::has_level() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void AllianceMemberCPP::set_has_level() {
  _has_bits_[0] |= 0x00000080u;
}
inline void AllianceMemberCPP::clear_has_level() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void AllianceMemberCPP::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 AllianceMemberCPP::level() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.AllianceMemberCPP.level)
  return level_;
}
inline void AllianceMemberCPP::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.AllianceMemberCPP.level)
}

// optional bytes fig = 9;
inline bool AllianceMemberCPP::has_fig() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void AllianceMemberCPP::set_has_fig() {
  _has_bits_[0] |= 0x00000100u;
}
inline void AllianceMemberCPP::clear_has_fig() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void AllianceMemberCPP::clear_fig() {
  if (fig_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    fig_->clear();
  }
  clear_has_fig();
}
inline const ::std::string& AllianceMemberCPP::fig() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.AllianceMemberCPP.fig)
  return *fig_;
}
inline void AllianceMemberCPP::set_fig(const ::std::string& value) {
  set_has_fig();
  if (fig_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    fig_ = new ::std::string;
  }
  fig_->assign(value);
  // @@protoc_insertion_point(field_set:ProtoAlliance.AllianceMemberCPP.fig)
}
inline void AllianceMemberCPP::set_fig(const char* value) {
  set_has_fig();
  if (fig_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    fig_ = new ::std::string;
  }
  fig_->assign(value);
  // @@protoc_insertion_point(field_set_char:ProtoAlliance.AllianceMemberCPP.fig)
}
inline void AllianceMemberCPP::set_fig(const void* value, size_t size) {
  set_has_fig();
  if (fig_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    fig_ = new ::std::string;
  }
  fig_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ProtoAlliance.AllianceMemberCPP.fig)
}
inline ::std::string* AllianceMemberCPP::mutable_fig() {
  set_has_fig();
  if (fig_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    fig_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:ProtoAlliance.AllianceMemberCPP.fig)
  return fig_;
}
inline ::std::string* AllianceMemberCPP::release_fig() {
  clear_has_fig();
  if (fig_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = fig_;
    fig_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void AllianceMemberCPP::set_allocated_fig(::std::string* fig) {
  if (fig_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete fig_;
  }
  if (fig) {
    set_has_fig();
    fig_ = fig;
  } else {
    clear_has_fig();
    fig_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoAlliance.AllianceMemberCPP.fig)
}

// optional uint32 joinTs = 10;
inline bool AllianceMemberCPP::has_joints() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void AllianceMemberCPP::set_has_joints() {
  _has_bits_[0] |= 0x00000200u;
}
inline void AllianceMemberCPP::clear_has_joints() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void AllianceMemberCPP::clear_joints() {
  joints_ = 0u;
  clear_has_joints();
}
inline ::google::protobuf::uint32 AllianceMemberCPP::joints() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.AllianceMemberCPP.joinTs)
  return joints_;
}
inline void AllianceMemberCPP::set_joints(::google::protobuf::uint32 value) {
  set_has_joints();
  joints_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.AllianceMemberCPP.joinTs)
}

// -------------------------------------------------------------------

// AllianceApplyCPP

// required uint32 applyUid = 1;
inline bool AllianceApplyCPP::has_applyuid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AllianceApplyCPP::set_has_applyuid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AllianceApplyCPP::clear_has_applyuid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AllianceApplyCPP::clear_applyuid() {
  applyuid_ = 0u;
  clear_has_applyuid();
}
inline ::google::protobuf::uint32 AllianceApplyCPP::applyuid() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.AllianceApplyCPP.applyUid)
  return applyuid_;
}
inline void AllianceApplyCPP::set_applyuid(::google::protobuf::uint32 value) {
  set_has_applyuid();
  applyuid_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.AllianceApplyCPP.applyUid)
}

// optional bytes name = 2;
inline bool AllianceApplyCPP::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AllianceApplyCPP::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AllianceApplyCPP::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AllianceApplyCPP::clear_name() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& AllianceApplyCPP::name() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.AllianceApplyCPP.name)
  return *name_;
}
inline void AllianceApplyCPP::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set:ProtoAlliance.AllianceApplyCPP.name)
}
inline void AllianceApplyCPP::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set_char:ProtoAlliance.AllianceApplyCPP.name)
}
inline void AllianceApplyCPP::set_name(const void* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ProtoAlliance.AllianceApplyCPP.name)
}
inline ::std::string* AllianceApplyCPP::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:ProtoAlliance.AllianceApplyCPP.name)
  return name_;
}
inline ::std::string* AllianceApplyCPP::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void AllianceApplyCPP::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoAlliance.AllianceApplyCPP.name)
}

// required bytes reason = 3;
inline bool AllianceApplyCPP::has_reason() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AllianceApplyCPP::set_has_reason() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AllianceApplyCPP::clear_has_reason() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AllianceApplyCPP::clear_reason() {
  if (reason_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    reason_->clear();
  }
  clear_has_reason();
}
inline const ::std::string& AllianceApplyCPP::reason() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.AllianceApplyCPP.reason)
  return *reason_;
}
inline void AllianceApplyCPP::set_reason(const ::std::string& value) {
  set_has_reason();
  if (reason_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    reason_ = new ::std::string;
  }
  reason_->assign(value);
  // @@protoc_insertion_point(field_set:ProtoAlliance.AllianceApplyCPP.reason)
}
inline void AllianceApplyCPP::set_reason(const char* value) {
  set_has_reason();
  if (reason_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    reason_ = new ::std::string;
  }
  reason_->assign(value);
  // @@protoc_insertion_point(field_set_char:ProtoAlliance.AllianceApplyCPP.reason)
}
inline void AllianceApplyCPP::set_reason(const void* value, size_t size) {
  set_has_reason();
  if (reason_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    reason_ = new ::std::string;
  }
  reason_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ProtoAlliance.AllianceApplyCPP.reason)
}
inline ::std::string* AllianceApplyCPP::mutable_reason() {
  set_has_reason();
  if (reason_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    reason_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:ProtoAlliance.AllianceApplyCPP.reason)
  return reason_;
}
inline ::std::string* AllianceApplyCPP::release_reason() {
  clear_has_reason();
  if (reason_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = reason_;
    reason_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void AllianceApplyCPP::set_allocated_reason(::std::string* reason) {
  if (reason_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete reason_;
  }
  if (reason) {
    set_has_reason();
    reason_ = reason;
  } else {
    clear_has_reason();
    reason_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoAlliance.AllianceApplyCPP.reason)
}

// required uint32 applyts = 4;
inline bool AllianceApplyCPP::has_applyts() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void AllianceApplyCPP::set_has_applyts() {
  _has_bits_[0] |= 0x00000008u;
}
inline void AllianceApplyCPP::clear_has_applyts() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void AllianceApplyCPP::clear_applyts() {
  applyts_ = 0u;
  clear_has_applyts();
}
inline ::google::protobuf::uint32 AllianceApplyCPP::applyts() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.AllianceApplyCPP.applyts)
  return applyts_;
}
inline void AllianceApplyCPP::set_applyts(::google::protobuf::uint32 value) {
  set_has_applyts();
  applyts_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.AllianceApplyCPP.applyts)
}

// -------------------------------------------------------------------

// AllianceInvitedCPP

// required uint32 inviteUid = 1;
inline bool AllianceInvitedCPP::has_inviteuid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AllianceInvitedCPP::set_has_inviteuid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AllianceInvitedCPP::clear_has_inviteuid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AllianceInvitedCPP::clear_inviteuid() {
  inviteuid_ = 0u;
  clear_has_inviteuid();
}
inline ::google::protobuf::uint32 AllianceInvitedCPP::inviteuid() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.AllianceInvitedCPP.inviteUid)
  return inviteuid_;
}
inline void AllianceInvitedCPP::set_inviteuid(::google::protobuf::uint32 value) {
  set_has_inviteuid();
  inviteuid_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.AllianceInvitedCPP.inviteUid)
}

// required uint32 allianceId = 2;
inline bool AllianceInvitedCPP::has_allianceid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AllianceInvitedCPP::set_has_allianceid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AllianceInvitedCPP::clear_has_allianceid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AllianceInvitedCPP::clear_allianceid() {
  allianceid_ = 0u;
  clear_has_allianceid();
}
inline ::google::protobuf::uint32 AllianceInvitedCPP::allianceid() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.AllianceInvitedCPP.allianceId)
  return allianceid_;
}
inline void AllianceInvitedCPP::set_allianceid(::google::protobuf::uint32 value) {
  set_has_allianceid();
  allianceid_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.AllianceInvitedCPP.allianceId)
}

// required bytes allianceName = 4;
inline bool AllianceInvitedCPP::has_alliancename() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AllianceInvitedCPP::set_has_alliancename() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AllianceInvitedCPP::clear_has_alliancename() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AllianceInvitedCPP::clear_alliancename() {
  if (alliancename_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    alliancename_->clear();
  }
  clear_has_alliancename();
}
inline const ::std::string& AllianceInvitedCPP::alliancename() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.AllianceInvitedCPP.allianceName)
  return *alliancename_;
}
inline void AllianceInvitedCPP::set_alliancename(const ::std::string& value) {
  set_has_alliancename();
  if (alliancename_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    alliancename_ = new ::std::string;
  }
  alliancename_->assign(value);
  // @@protoc_insertion_point(field_set:ProtoAlliance.AllianceInvitedCPP.allianceName)
}
inline void AllianceInvitedCPP::set_alliancename(const char* value) {
  set_has_alliancename();
  if (alliancename_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    alliancename_ = new ::std::string;
  }
  alliancename_->assign(value);
  // @@protoc_insertion_point(field_set_char:ProtoAlliance.AllianceInvitedCPP.allianceName)
}
inline void AllianceInvitedCPP::set_alliancename(const void* value, size_t size) {
  set_has_alliancename();
  if (alliancename_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    alliancename_ = new ::std::string;
  }
  alliancename_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ProtoAlliance.AllianceInvitedCPP.allianceName)
}
inline ::std::string* AllianceInvitedCPP::mutable_alliancename() {
  set_has_alliancename();
  if (alliancename_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    alliancename_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:ProtoAlliance.AllianceInvitedCPP.allianceName)
  return alliancename_;
}
inline ::std::string* AllianceInvitedCPP::release_alliancename() {
  clear_has_alliancename();
  if (alliancename_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = alliancename_;
    alliancename_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void AllianceInvitedCPP::set_allocated_alliancename(::std::string* alliancename) {
  if (alliancename_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete alliancename_;
  }
  if (alliancename) {
    set_has_alliancename();
    alliancename_ = alliancename;
  } else {
    clear_has_alliancename();
    alliancename_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoAlliance.AllianceInvitedCPP.allianceName)
}

// required uint32 flag = 5;
inline bool AllianceInvitedCPP::has_flag() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void AllianceInvitedCPP::set_has_flag() {
  _has_bits_[0] |= 0x00000008u;
}
inline void AllianceInvitedCPP::clear_has_flag() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void AllianceInvitedCPP::clear_flag() {
  flag_ = 0u;
  clear_has_flag();
}
inline ::google::protobuf::uint32 AllianceInvitedCPP::flag() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.AllianceInvitedCPP.flag)
  return flag_;
}
inline void AllianceInvitedCPP::set_flag(::google::protobuf::uint32 value) {
  set_has_flag();
  flag_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.AllianceInvitedCPP.flag)
}

// required bytes inviteName = 6;
inline bool AllianceInvitedCPP::has_invitename() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void AllianceInvitedCPP::set_has_invitename() {
  _has_bits_[0] |= 0x00000010u;
}
inline void AllianceInvitedCPP::clear_has_invitename() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void AllianceInvitedCPP::clear_invitename() {
  if (invitename_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    invitename_->clear();
  }
  clear_has_invitename();
}
inline const ::std::string& AllianceInvitedCPP::invitename() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.AllianceInvitedCPP.inviteName)
  return *invitename_;
}
inline void AllianceInvitedCPP::set_invitename(const ::std::string& value) {
  set_has_invitename();
  if (invitename_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    invitename_ = new ::std::string;
  }
  invitename_->assign(value);
  // @@protoc_insertion_point(field_set:ProtoAlliance.AllianceInvitedCPP.inviteName)
}
inline void AllianceInvitedCPP::set_invitename(const char* value) {
  set_has_invitename();
  if (invitename_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    invitename_ = new ::std::string;
  }
  invitename_->assign(value);
  // @@protoc_insertion_point(field_set_char:ProtoAlliance.AllianceInvitedCPP.inviteName)
}
inline void AllianceInvitedCPP::set_invitename(const void* value, size_t size) {
  set_has_invitename();
  if (invitename_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    invitename_ = new ::std::string;
  }
  invitename_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ProtoAlliance.AllianceInvitedCPP.inviteName)
}
inline ::std::string* AllianceInvitedCPP::mutable_invitename() {
  set_has_invitename();
  if (invitename_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    invitename_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:ProtoAlliance.AllianceInvitedCPP.inviteName)
  return invitename_;
}
inline ::std::string* AllianceInvitedCPP::release_invitename() {
  clear_has_invitename();
  if (invitename_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = invitename_;
    invitename_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void AllianceInvitedCPP::set_allocated_invitename(::std::string* invitename) {
  if (invitename_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete invitename_;
  }
  if (invitename) {
    set_has_invitename();
    invitename_ = invitename;
  } else {
    clear_has_invitename();
    invitename_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoAlliance.AllianceInvitedCPP.inviteName)
}

// required uint32 invitets = 7;
inline bool AllianceInvitedCPP::has_invitets() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void AllianceInvitedCPP::set_has_invitets() {
  _has_bits_[0] |= 0x00000020u;
}
inline void AllianceInvitedCPP::clear_has_invitets() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void AllianceInvitedCPP::clear_invitets() {
  invitets_ = 0u;
  clear_has_invitets();
}
inline ::google::protobuf::uint32 AllianceInvitedCPP::invitets() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.AllianceInvitedCPP.invitets)
  return invitets_;
}
inline void AllianceInvitedCPP::set_invitets(::google::protobuf::uint32 value) {
  set_has_invitets();
  invitets_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.AllianceInvitedCPP.invitets)
}

// -------------------------------------------------------------------

// CheckNameAvailableReq

// required bytes name = 1;
inline bool CheckNameAvailableReq::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CheckNameAvailableReq::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CheckNameAvailableReq::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CheckNameAvailableReq::clear_name() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& CheckNameAvailableReq::name() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.CheckNameAvailableReq.name)
  return *name_;
}
inline void CheckNameAvailableReq::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set:ProtoAlliance.CheckNameAvailableReq.name)
}
inline void CheckNameAvailableReq::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set_char:ProtoAlliance.CheckNameAvailableReq.name)
}
inline void CheckNameAvailableReq::set_name(const void* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ProtoAlliance.CheckNameAvailableReq.name)
}
inline ::std::string* CheckNameAvailableReq::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:ProtoAlliance.CheckNameAvailableReq.name)
  return name_;
}
inline ::std::string* CheckNameAvailableReq::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CheckNameAvailableReq::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoAlliance.CheckNameAvailableReq.name)
}

// -------------------------------------------------------------------

// CheckNameAvailableResp

// required bytes name = 1;
inline bool CheckNameAvailableResp::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CheckNameAvailableResp::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CheckNameAvailableResp::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CheckNameAvailableResp::clear_name() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& CheckNameAvailableResp::name() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.CheckNameAvailableResp.name)
  return *name_;
}
inline void CheckNameAvailableResp::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set:ProtoAlliance.CheckNameAvailableResp.name)
}
inline void CheckNameAvailableResp::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set_char:ProtoAlliance.CheckNameAvailableResp.name)
}
inline void CheckNameAvailableResp::set_name(const void* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ProtoAlliance.CheckNameAvailableResp.name)
}
inline ::std::string* CheckNameAvailableResp::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:ProtoAlliance.CheckNameAvailableResp.name)
  return name_;
}
inline ::std::string* CheckNameAvailableResp::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CheckNameAvailableResp::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoAlliance.CheckNameAvailableResp.name)
}

// required bool isAvailable = 2;
inline bool CheckNameAvailableResp::has_isavailable() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CheckNameAvailableResp::set_has_isavailable() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CheckNameAvailableResp::clear_has_isavailable() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CheckNameAvailableResp::clear_isavailable() {
  isavailable_ = false;
  clear_has_isavailable();
}
inline bool CheckNameAvailableResp::isavailable() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.CheckNameAvailableResp.isAvailable)
  return isavailable_;
}
inline void CheckNameAvailableResp::set_isavailable(bool value) {
  set_has_isavailable();
  isavailable_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.CheckNameAvailableResp.isAvailable)
}

// optional bytes reason = 3;
inline bool CheckNameAvailableResp::has_reason() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CheckNameAvailableResp::set_has_reason() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CheckNameAvailableResp::clear_has_reason() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CheckNameAvailableResp::clear_reason() {
  if (reason_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    reason_->clear();
  }
  clear_has_reason();
}
inline const ::std::string& CheckNameAvailableResp::reason() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.CheckNameAvailableResp.reason)
  return *reason_;
}
inline void CheckNameAvailableResp::set_reason(const ::std::string& value) {
  set_has_reason();
  if (reason_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    reason_ = new ::std::string;
  }
  reason_->assign(value);
  // @@protoc_insertion_point(field_set:ProtoAlliance.CheckNameAvailableResp.reason)
}
inline void CheckNameAvailableResp::set_reason(const char* value) {
  set_has_reason();
  if (reason_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    reason_ = new ::std::string;
  }
  reason_->assign(value);
  // @@protoc_insertion_point(field_set_char:ProtoAlliance.CheckNameAvailableResp.reason)
}
inline void CheckNameAvailableResp::set_reason(const void* value, size_t size) {
  set_has_reason();
  if (reason_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    reason_ = new ::std::string;
  }
  reason_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ProtoAlliance.CheckNameAvailableResp.reason)
}
inline ::std::string* CheckNameAvailableResp::mutable_reason() {
  set_has_reason();
  if (reason_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    reason_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:ProtoAlliance.CheckNameAvailableResp.reason)
  return reason_;
}
inline ::std::string* CheckNameAvailableResp::release_reason() {
  clear_has_reason();
  if (reason_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = reason_;
    reason_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CheckNameAvailableResp::set_allocated_reason(::std::string* reason) {
  if (reason_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete reason_;
  }
  if (reason) {
    set_has_reason();
    reason_ = reason;
  } else {
    clear_has_reason();
    reason_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoAlliance.CheckNameAvailableResp.reason)
}

// -------------------------------------------------------------------

// CreateAllianceReq

// required uint32 flag = 1;
inline bool CreateAllianceReq::has_flag() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CreateAllianceReq::set_has_flag() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CreateAllianceReq::clear_has_flag() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CreateAllianceReq::clear_flag() {
  flag_ = 0u;
  clear_has_flag();
}
inline ::google::protobuf::uint32 CreateAllianceReq::flag() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.CreateAllianceReq.flag)
  return flag_;
}
inline void CreateAllianceReq::set_flag(::google::protobuf::uint32 value) {
  set_has_flag();
  flag_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.CreateAllianceReq.flag)
}

// required bytes name = 2;
inline bool CreateAllianceReq::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CreateAllianceReq::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CreateAllianceReq::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CreateAllianceReq::clear_name() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& CreateAllianceReq::name() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.CreateAllianceReq.name)
  return *name_;
}
inline void CreateAllianceReq::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set:ProtoAlliance.CreateAllianceReq.name)
}
inline void CreateAllianceReq::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set_char:ProtoAlliance.CreateAllianceReq.name)
}
inline void CreateAllianceReq::set_name(const void* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ProtoAlliance.CreateAllianceReq.name)
}
inline ::std::string* CreateAllianceReq::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:ProtoAlliance.CreateAllianceReq.name)
  return name_;
}
inline ::std::string* CreateAllianceReq::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CreateAllianceReq::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoAlliance.CreateAllianceReq.name)
}

// required bytes description = 3;
inline bool CreateAllianceReq::has_description() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CreateAllianceReq::set_has_description() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CreateAllianceReq::clear_has_description() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CreateAllianceReq::clear_description() {
  if (description_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    description_->clear();
  }
  clear_has_description();
}
inline const ::std::string& CreateAllianceReq::description() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.CreateAllianceReq.description)
  return *description_;
}
inline void CreateAllianceReq::set_description(const ::std::string& value) {
  set_has_description();
  if (description_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    description_ = new ::std::string;
  }
  description_->assign(value);
  // @@protoc_insertion_point(field_set:ProtoAlliance.CreateAllianceReq.description)
}
inline void CreateAllianceReq::set_description(const char* value) {
  set_has_description();
  if (description_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    description_ = new ::std::string;
  }
  description_->assign(value);
  // @@protoc_insertion_point(field_set_char:ProtoAlliance.CreateAllianceReq.description)
}
inline void CreateAllianceReq::set_description(const void* value, size_t size) {
  set_has_description();
  if (description_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    description_ = new ::std::string;
  }
  description_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ProtoAlliance.CreateAllianceReq.description)
}
inline ::std::string* CreateAllianceReq::mutable_description() {
  set_has_description();
  if (description_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    description_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:ProtoAlliance.CreateAllianceReq.description)
  return description_;
}
inline ::std::string* CreateAllianceReq::release_description() {
  clear_has_description();
  if (description_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = description_;
    description_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CreateAllianceReq::set_allocated_description(::std::string* description) {
  if (description_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete description_;
  }
  if (description) {
    set_has_description();
    description_ = description;
  } else {
    clear_has_description();
    description_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoAlliance.CreateAllianceReq.description)
}

// required uint32 applyType = 4;
inline bool CreateAllianceReq::has_applytype() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CreateAllianceReq::set_has_applytype() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CreateAllianceReq::clear_has_applytype() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CreateAllianceReq::clear_applytype() {
  applytype_ = 0u;
  clear_has_applytype();
}
inline ::google::protobuf::uint32 CreateAllianceReq::applytype() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.CreateAllianceReq.applyType)
  return applytype_;
}
inline void CreateAllianceReq::set_applytype(::google::protobuf::uint32 value) {
  set_has_applytype();
  applytype_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.CreateAllianceReq.applyType)
}

// required uint32 applyLevelLimit = 5;
inline bool CreateAllianceReq::has_applylevellimit() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CreateAllianceReq::set_has_applylevellimit() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CreateAllianceReq::clear_has_applylevellimit() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CreateAllianceReq::clear_applylevellimit() {
  applylevellimit_ = 0u;
  clear_has_applylevellimit();
}
inline ::google::protobuf::uint32 CreateAllianceReq::applylevellimit() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.CreateAllianceReq.applyLevelLimit)
  return applylevellimit_;
}
inline void CreateAllianceReq::set_applylevellimit(::google::protobuf::uint32 value) {
  set_has_applylevellimit();
  applylevellimit_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.CreateAllianceReq.applyLevelLimit)
}

// -------------------------------------------------------------------

// CreateAllianceResp

// required .ProtoAlliance.AllianceCPP alliance = 1;
inline bool CreateAllianceResp::has_alliance() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CreateAllianceResp::set_has_alliance() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CreateAllianceResp::clear_has_alliance() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CreateAllianceResp::clear_alliance() {
  if (alliance_ != NULL) alliance_->::ProtoAlliance::AllianceCPP::Clear();
  clear_has_alliance();
}
inline const ::ProtoAlliance::AllianceCPP& CreateAllianceResp::alliance() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.CreateAllianceResp.alliance)
  return alliance_ != NULL ? *alliance_ : *default_instance_->alliance_;
}
inline ::ProtoAlliance::AllianceCPP* CreateAllianceResp::mutable_alliance() {
  set_has_alliance();
  if (alliance_ == NULL) alliance_ = new ::ProtoAlliance::AllianceCPP;
  // @@protoc_insertion_point(field_mutable:ProtoAlliance.CreateAllianceResp.alliance)
  return alliance_;
}
inline ::ProtoAlliance::AllianceCPP* CreateAllianceResp::release_alliance() {
  clear_has_alliance();
  ::ProtoAlliance::AllianceCPP* temp = alliance_;
  alliance_ = NULL;
  return temp;
}
inline void CreateAllianceResp::set_allocated_alliance(::ProtoAlliance::AllianceCPP* alliance) {
  delete alliance_;
  alliance_ = alliance;
  if (alliance) {
    set_has_alliance();
  } else {
    clear_has_alliance();
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoAlliance.CreateAllianceResp.alliance)
}

// required .ProtoAlliance.AllianceMemberCPP member = 2;
inline bool CreateAllianceResp::has_member() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CreateAllianceResp::set_has_member() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CreateAllianceResp::clear_has_member() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CreateAllianceResp::clear_member() {
  if (member_ != NULL) member_->::ProtoAlliance::AllianceMemberCPP::Clear();
  clear_has_member();
}
inline const ::ProtoAlliance::AllianceMemberCPP& CreateAllianceResp::member() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.CreateAllianceResp.member)
  return member_ != NULL ? *member_ : *default_instance_->member_;
}
inline ::ProtoAlliance::AllianceMemberCPP* CreateAllianceResp::mutable_member() {
  set_has_member();
  if (member_ == NULL) member_ = new ::ProtoAlliance::AllianceMemberCPP;
  // @@protoc_insertion_point(field_mutable:ProtoAlliance.CreateAllianceResp.member)
  return member_;
}
inline ::ProtoAlliance::AllianceMemberCPP* CreateAllianceResp::release_member() {
  clear_has_member();
  ::ProtoAlliance::AllianceMemberCPP* temp = member_;
  member_ = NULL;
  return temp;
}
inline void CreateAllianceResp::set_allocated_member(::ProtoAlliance::AllianceMemberCPP* member) {
  delete member_;
  member_ = member;
  if (member) {
    set_has_member();
  } else {
    clear_has_member();
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoAlliance.CreateAllianceResp.member)
}

// required .DataCommon.CommonItemsCPP commons = 3;
inline bool CreateAllianceResp::has_commons() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CreateAllianceResp::set_has_commons() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CreateAllianceResp::clear_has_commons() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CreateAllianceResp::clear_commons() {
  if (commons_ != NULL) commons_->::DataCommon::CommonItemsCPP::Clear();
  clear_has_commons();
}
inline const ::DataCommon::CommonItemsCPP& CreateAllianceResp::commons() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.CreateAllianceResp.commons)
  return commons_ != NULL ? *commons_ : *default_instance_->commons_;
}
inline ::DataCommon::CommonItemsCPP* CreateAllianceResp::mutable_commons() {
  set_has_commons();
  if (commons_ == NULL) commons_ = new ::DataCommon::CommonItemsCPP;
  // @@protoc_insertion_point(field_mutable:ProtoAlliance.CreateAllianceResp.commons)
  return commons_;
}
inline ::DataCommon::CommonItemsCPP* CreateAllianceResp::release_commons() {
  clear_has_commons();
  ::DataCommon::CommonItemsCPP* temp = commons_;
  commons_ = NULL;
  return temp;
}
inline void CreateAllianceResp::set_allocated_commons(::DataCommon::CommonItemsCPP* commons) {
  delete commons_;
  commons_ = commons;
  if (commons) {
    set_has_commons();
  } else {
    clear_has_commons();
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoAlliance.CreateAllianceResp.commons)
}

// -------------------------------------------------------------------

// RecommendllianceReq

// -------------------------------------------------------------------

// PartAllianceCPP

// required uint32 allianceId = 1;
inline bool PartAllianceCPP::has_allianceid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PartAllianceCPP::set_has_allianceid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PartAllianceCPP::clear_has_allianceid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PartAllianceCPP::clear_allianceid() {
  allianceid_ = 0u;
  clear_has_allianceid();
}
inline ::google::protobuf::uint32 PartAllianceCPP::allianceid() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.PartAllianceCPP.allianceId)
  return allianceid_;
}
inline void PartAllianceCPP::set_allianceid(::google::protobuf::uint32 value) {
  set_has_allianceid();
  allianceid_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.PartAllianceCPP.allianceId)
}

// required bytes name = 2;
inline bool PartAllianceCPP::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PartAllianceCPP::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PartAllianceCPP::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PartAllianceCPP::clear_name() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& PartAllianceCPP::name() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.PartAllianceCPP.name)
  return *name_;
}
inline void PartAllianceCPP::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set:ProtoAlliance.PartAllianceCPP.name)
}
inline void PartAllianceCPP::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set_char:ProtoAlliance.PartAllianceCPP.name)
}
inline void PartAllianceCPP::set_name(const void* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ProtoAlliance.PartAllianceCPP.name)
}
inline ::std::string* PartAllianceCPP::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:ProtoAlliance.PartAllianceCPP.name)
  return name_;
}
inline ::std::string* PartAllianceCPP::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void PartAllianceCPP::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoAlliance.PartAllianceCPP.name)
}

// required uint32 flag = 3;
inline bool PartAllianceCPP::has_flag() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PartAllianceCPP::set_has_flag() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PartAllianceCPP::clear_has_flag() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PartAllianceCPP::clear_flag() {
  flag_ = 0u;
  clear_has_flag();
}
inline ::google::protobuf::uint32 PartAllianceCPP::flag() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.PartAllianceCPP.flag)
  return flag_;
}
inline void PartAllianceCPP::set_flag(::google::protobuf::uint32 value) {
  set_has_flag();
  flag_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.PartAllianceCPP.flag)
}

// required uint32 applyType = 4;
inline bool PartAllianceCPP::has_applytype() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PartAllianceCPP::set_has_applytype() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PartAllianceCPP::clear_has_applytype() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PartAllianceCPP::clear_applytype() {
  applytype_ = 0u;
  clear_has_applytype();
}
inline ::google::protobuf::uint32 PartAllianceCPP::applytype() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.PartAllianceCPP.applyType)
  return applytype_;
}
inline void PartAllianceCPP::set_applytype(::google::protobuf::uint32 value) {
  set_has_applytype();
  applytype_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.PartAllianceCPP.applyType)
}

// required uint32 applyLevelLimit = 5;
inline bool PartAllianceCPP::has_applylevellimit() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PartAllianceCPP::set_has_applylevellimit() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PartAllianceCPP::clear_has_applylevellimit() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PartAllianceCPP::clear_applylevellimit() {
  applylevellimit_ = 0u;
  clear_has_applylevellimit();
}
inline ::google::protobuf::uint32 PartAllianceCPP::applylevellimit() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.PartAllianceCPP.applyLevelLimit)
  return applylevellimit_;
}
inline void PartAllianceCPP::set_applylevellimit(::google::protobuf::uint32 value) {
  set_has_applylevellimit();
  applylevellimit_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.PartAllianceCPP.applyLevelLimit)
}

// required uint32 memberCount = 6;
inline bool PartAllianceCPP::has_membercount() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void PartAllianceCPP::set_has_membercount() {
  _has_bits_[0] |= 0x00000020u;
}
inline void PartAllianceCPP::clear_has_membercount() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void PartAllianceCPP::clear_membercount() {
  membercount_ = 0u;
  clear_has_membercount();
}
inline ::google::protobuf::uint32 PartAllianceCPP::membercount() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.PartAllianceCPP.memberCount)
  return membercount_;
}
inline void PartAllianceCPP::set_membercount(::google::protobuf::uint32 value) {
  set_has_membercount();
  membercount_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.PartAllianceCPP.memberCount)
}

// optional bytes description = 7;
inline bool PartAllianceCPP::has_description() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void PartAllianceCPP::set_has_description() {
  _has_bits_[0] |= 0x00000040u;
}
inline void PartAllianceCPP::clear_has_description() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void PartAllianceCPP::clear_description() {
  if (description_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    description_->clear();
  }
  clear_has_description();
}
inline const ::std::string& PartAllianceCPP::description() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.PartAllianceCPP.description)
  return *description_;
}
inline void PartAllianceCPP::set_description(const ::std::string& value) {
  set_has_description();
  if (description_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    description_ = new ::std::string;
  }
  description_->assign(value);
  // @@protoc_insertion_point(field_set:ProtoAlliance.PartAllianceCPP.description)
}
inline void PartAllianceCPP::set_description(const char* value) {
  set_has_description();
  if (description_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    description_ = new ::std::string;
  }
  description_->assign(value);
  // @@protoc_insertion_point(field_set_char:ProtoAlliance.PartAllianceCPP.description)
}
inline void PartAllianceCPP::set_description(const void* value, size_t size) {
  set_has_description();
  if (description_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    description_ = new ::std::string;
  }
  description_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ProtoAlliance.PartAllianceCPP.description)
}
inline ::std::string* PartAllianceCPP::mutable_description() {
  set_has_description();
  if (description_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    description_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:ProtoAlliance.PartAllianceCPP.description)
  return description_;
}
inline ::std::string* PartAllianceCPP::release_description() {
  clear_has_description();
  if (description_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = description_;
    description_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void PartAllianceCPP::set_allocated_description(::std::string* description) {
  if (description_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete description_;
  }
  if (description) {
    set_has_description();
    description_ = description;
  } else {
    clear_has_description();
    description_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoAlliance.PartAllianceCPP.description)
}

// optional uint32 onlineNum = 8;
inline bool PartAllianceCPP::has_onlinenum() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void PartAllianceCPP::set_has_onlinenum() {
  _has_bits_[0] |= 0x00000080u;
}
inline void PartAllianceCPP::clear_has_onlinenum() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void PartAllianceCPP::clear_onlinenum() {
  onlinenum_ = 0u;
  clear_has_onlinenum();
}
inline ::google::protobuf::uint32 PartAllianceCPP::onlinenum() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.PartAllianceCPP.onlineNum)
  return onlinenum_;
}
inline void PartAllianceCPP::set_onlinenum(::google::protobuf::uint32 value) {
  set_has_onlinenum();
  onlinenum_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.PartAllianceCPP.onlineNum)
}

// -------------------------------------------------------------------

// RecommendllianceResp

// repeated .ProtoAlliance.PartAllianceCPP allianceBrief = 1;
inline int RecommendllianceResp::alliancebrief_size() const {
  return alliancebrief_.size();
}
inline void RecommendllianceResp::clear_alliancebrief() {
  alliancebrief_.Clear();
}
inline const ::ProtoAlliance::PartAllianceCPP& RecommendllianceResp::alliancebrief(int index) const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.RecommendllianceResp.allianceBrief)
  return alliancebrief_.Get(index);
}
inline ::ProtoAlliance::PartAllianceCPP* RecommendllianceResp::mutable_alliancebrief(int index) {
  // @@protoc_insertion_point(field_mutable:ProtoAlliance.RecommendllianceResp.allianceBrief)
  return alliancebrief_.Mutable(index);
}
inline ::ProtoAlliance::PartAllianceCPP* RecommendllianceResp::add_alliancebrief() {
  // @@protoc_insertion_point(field_add:ProtoAlliance.RecommendllianceResp.allianceBrief)
  return alliancebrief_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ProtoAlliance::PartAllianceCPP >&
RecommendllianceResp::alliancebrief() const {
  // @@protoc_insertion_point(field_list:ProtoAlliance.RecommendllianceResp.allianceBrief)
  return alliancebrief_;
}
inline ::google::protobuf::RepeatedPtrField< ::ProtoAlliance::PartAllianceCPP >*
RecommendllianceResp::mutable_alliancebrief() {
  // @@protoc_insertion_point(field_mutable_list:ProtoAlliance.RecommendllianceResp.allianceBrief)
  return &alliancebrief_;
}

// -------------------------------------------------------------------

// GetPartAllianceInfoReq

// repeated uint32 allianceId = 1;
inline int GetPartAllianceInfoReq::allianceid_size() const {
  return allianceid_.size();
}
inline void GetPartAllianceInfoReq::clear_allianceid() {
  allianceid_.Clear();
}
inline ::google::protobuf::uint32 GetPartAllianceInfoReq::allianceid(int index) const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.GetPartAllianceInfoReq.allianceId)
  return allianceid_.Get(index);
}
inline void GetPartAllianceInfoReq::set_allianceid(int index, ::google::protobuf::uint32 value) {
  allianceid_.Set(index, value);
  // @@protoc_insertion_point(field_set:ProtoAlliance.GetPartAllianceInfoReq.allianceId)
}
inline void GetPartAllianceInfoReq::add_allianceid(::google::protobuf::uint32 value) {
  allianceid_.Add(value);
  // @@protoc_insertion_point(field_add:ProtoAlliance.GetPartAllianceInfoReq.allianceId)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
GetPartAllianceInfoReq::allianceid() const {
  // @@protoc_insertion_point(field_list:ProtoAlliance.GetPartAllianceInfoReq.allianceId)
  return allianceid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
GetPartAllianceInfoReq::mutable_allianceid() {
  // @@protoc_insertion_point(field_mutable_list:ProtoAlliance.GetPartAllianceInfoReq.allianceId)
  return &allianceid_;
}

// -------------------------------------------------------------------

// GetPartAllianceInfoResp

// repeated .ProtoAlliance.PartAllianceCPP allianceBrief = 1;
inline int GetPartAllianceInfoResp::alliancebrief_size() const {
  return alliancebrief_.size();
}
inline void GetPartAllianceInfoResp::clear_alliancebrief() {
  alliancebrief_.Clear();
}
inline const ::ProtoAlliance::PartAllianceCPP& GetPartAllianceInfoResp::alliancebrief(int index) const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.GetPartAllianceInfoResp.allianceBrief)
  return alliancebrief_.Get(index);
}
inline ::ProtoAlliance::PartAllianceCPP* GetPartAllianceInfoResp::mutable_alliancebrief(int index) {
  // @@protoc_insertion_point(field_mutable:ProtoAlliance.GetPartAllianceInfoResp.allianceBrief)
  return alliancebrief_.Mutable(index);
}
inline ::ProtoAlliance::PartAllianceCPP* GetPartAllianceInfoResp::add_alliancebrief() {
  // @@protoc_insertion_point(field_add:ProtoAlliance.GetPartAllianceInfoResp.allianceBrief)
  return alliancebrief_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ProtoAlliance::PartAllianceCPP >&
GetPartAllianceInfoResp::alliancebrief() const {
  // @@protoc_insertion_point(field_list:ProtoAlliance.GetPartAllianceInfoResp.allianceBrief)
  return alliancebrief_;
}
inline ::google::protobuf::RepeatedPtrField< ::ProtoAlliance::PartAllianceCPP >*
GetPartAllianceInfoResp::mutable_alliancebrief() {
  // @@protoc_insertion_point(field_mutable_list:ProtoAlliance.GetPartAllianceInfoResp.allianceBrief)
  return &alliancebrief_;
}

// -------------------------------------------------------------------

// ApplyJoinReq

// required uint32 allianceId = 1;
inline bool ApplyJoinReq::has_allianceid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ApplyJoinReq::set_has_allianceid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ApplyJoinReq::clear_has_allianceid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ApplyJoinReq::clear_allianceid() {
  allianceid_ = 0u;
  clear_has_allianceid();
}
inline ::google::protobuf::uint32 ApplyJoinReq::allianceid() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.ApplyJoinReq.allianceId)
  return allianceid_;
}
inline void ApplyJoinReq::set_allianceid(::google::protobuf::uint32 value) {
  set_has_allianceid();
  allianceid_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.ApplyJoinReq.allianceId)
}

// required bytes reason = 2;
inline bool ApplyJoinReq::has_reason() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ApplyJoinReq::set_has_reason() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ApplyJoinReq::clear_has_reason() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ApplyJoinReq::clear_reason() {
  if (reason_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    reason_->clear();
  }
  clear_has_reason();
}
inline const ::std::string& ApplyJoinReq::reason() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.ApplyJoinReq.reason)
  return *reason_;
}
inline void ApplyJoinReq::set_reason(const ::std::string& value) {
  set_has_reason();
  if (reason_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    reason_ = new ::std::string;
  }
  reason_->assign(value);
  // @@protoc_insertion_point(field_set:ProtoAlliance.ApplyJoinReq.reason)
}
inline void ApplyJoinReq::set_reason(const char* value) {
  set_has_reason();
  if (reason_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    reason_ = new ::std::string;
  }
  reason_->assign(value);
  // @@protoc_insertion_point(field_set_char:ProtoAlliance.ApplyJoinReq.reason)
}
inline void ApplyJoinReq::set_reason(const void* value, size_t size) {
  set_has_reason();
  if (reason_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    reason_ = new ::std::string;
  }
  reason_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ProtoAlliance.ApplyJoinReq.reason)
}
inline ::std::string* ApplyJoinReq::mutable_reason() {
  set_has_reason();
  if (reason_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    reason_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:ProtoAlliance.ApplyJoinReq.reason)
  return reason_;
}
inline ::std::string* ApplyJoinReq::release_reason() {
  clear_has_reason();
  if (reason_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = reason_;
    reason_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void ApplyJoinReq::set_allocated_reason(::std::string* reason) {
  if (reason_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete reason_;
  }
  if (reason) {
    set_has_reason();
    reason_ = reason;
  } else {
    clear_has_reason();
    reason_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoAlliance.ApplyJoinReq.reason)
}

// -------------------------------------------------------------------

// RequestApplyJoinBC

// required uint32 allianceId = 1;
inline bool RequestApplyJoinBC::has_allianceid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RequestApplyJoinBC::set_has_allianceid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RequestApplyJoinBC::clear_has_allianceid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RequestApplyJoinBC::clear_allianceid() {
  allianceid_ = 0u;
  clear_has_allianceid();
}
inline ::google::protobuf::uint32 RequestApplyJoinBC::allianceid() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.RequestApplyJoinBC.allianceId)
  return allianceid_;
}
inline void RequestApplyJoinBC::set_allianceid(::google::protobuf::uint32 value) {
  set_has_allianceid();
  allianceid_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.RequestApplyJoinBC.allianceId)
}

// required bytes reason = 2;
inline bool RequestApplyJoinBC::has_reason() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RequestApplyJoinBC::set_has_reason() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RequestApplyJoinBC::clear_has_reason() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RequestApplyJoinBC::clear_reason() {
  if (reason_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    reason_->clear();
  }
  clear_has_reason();
}
inline const ::std::string& RequestApplyJoinBC::reason() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.RequestApplyJoinBC.reason)
  return *reason_;
}
inline void RequestApplyJoinBC::set_reason(const ::std::string& value) {
  set_has_reason();
  if (reason_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    reason_ = new ::std::string;
  }
  reason_->assign(value);
  // @@protoc_insertion_point(field_set:ProtoAlliance.RequestApplyJoinBC.reason)
}
inline void RequestApplyJoinBC::set_reason(const char* value) {
  set_has_reason();
  if (reason_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    reason_ = new ::std::string;
  }
  reason_->assign(value);
  // @@protoc_insertion_point(field_set_char:ProtoAlliance.RequestApplyJoinBC.reason)
}
inline void RequestApplyJoinBC::set_reason(const void* value, size_t size) {
  set_has_reason();
  if (reason_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    reason_ = new ::std::string;
  }
  reason_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ProtoAlliance.RequestApplyJoinBC.reason)
}
inline ::std::string* RequestApplyJoinBC::mutable_reason() {
  set_has_reason();
  if (reason_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    reason_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:ProtoAlliance.RequestApplyJoinBC.reason)
  return reason_;
}
inline ::std::string* RequestApplyJoinBC::release_reason() {
  clear_has_reason();
  if (reason_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = reason_;
    reason_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void RequestApplyJoinBC::set_allocated_reason(::std::string* reason) {
  if (reason_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete reason_;
  }
  if (reason) {
    set_has_reason();
    reason_ = reason;
  } else {
    clear_has_reason();
    reason_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoAlliance.RequestApplyJoinBC.reason)
}

// required .ProtoAlliance.AllianceMemberCPP member = 3;
inline bool RequestApplyJoinBC::has_member() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RequestApplyJoinBC::set_has_member() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RequestApplyJoinBC::clear_has_member() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RequestApplyJoinBC::clear_member() {
  if (member_ != NULL) member_->::ProtoAlliance::AllianceMemberCPP::Clear();
  clear_has_member();
}
inline const ::ProtoAlliance::AllianceMemberCPP& RequestApplyJoinBC::member() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.RequestApplyJoinBC.member)
  return member_ != NULL ? *member_ : *default_instance_->member_;
}
inline ::ProtoAlliance::AllianceMemberCPP* RequestApplyJoinBC::mutable_member() {
  set_has_member();
  if (member_ == NULL) member_ = new ::ProtoAlliance::AllianceMemberCPP;
  // @@protoc_insertion_point(field_mutable:ProtoAlliance.RequestApplyJoinBC.member)
  return member_;
}
inline ::ProtoAlliance::AllianceMemberCPP* RequestApplyJoinBC::release_member() {
  clear_has_member();
  ::ProtoAlliance::AllianceMemberCPP* temp = member_;
  member_ = NULL;
  return temp;
}
inline void RequestApplyJoinBC::set_allocated_member(::ProtoAlliance::AllianceMemberCPP* member) {
  delete member_;
  member_ = member;
  if (member) {
    set_has_member();
  } else {
    clear_has_member();
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoAlliance.RequestApplyJoinBC.member)
}

// -------------------------------------------------------------------

// ReplyApplyJoinBC

// required uint32 uid = 1;
inline bool ReplyApplyJoinBC::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReplyApplyJoinBC::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReplyApplyJoinBC::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReplyApplyJoinBC::clear_uid() {
  uid_ = 0u;
  clear_has_uid();
}
inline ::google::protobuf::uint32 ReplyApplyJoinBC::uid() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.ReplyApplyJoinBC.uid)
  return uid_;
}
inline void ReplyApplyJoinBC::set_uid(::google::protobuf::uint32 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.ReplyApplyJoinBC.uid)
}

// required uint32 allianceId = 2;
inline bool ReplyApplyJoinBC::has_allianceid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ReplyApplyJoinBC::set_has_allianceid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ReplyApplyJoinBC::clear_has_allianceid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ReplyApplyJoinBC::clear_allianceid() {
  allianceid_ = 0u;
  clear_has_allianceid();
}
inline ::google::protobuf::uint32 ReplyApplyJoinBC::allianceid() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.ReplyApplyJoinBC.allianceId)
  return allianceid_;
}
inline void ReplyApplyJoinBC::set_allianceid(::google::protobuf::uint32 value) {
  set_has_allianceid();
  allianceid_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.ReplyApplyJoinBC.allianceId)
}

// required int32 ret = 3;
inline bool ReplyApplyJoinBC::has_ret() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ReplyApplyJoinBC::set_has_ret() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ReplyApplyJoinBC::clear_has_ret() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ReplyApplyJoinBC::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
inline ::google::protobuf::int32 ReplyApplyJoinBC::ret() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.ReplyApplyJoinBC.ret)
  return ret_;
}
inline void ReplyApplyJoinBC::set_ret(::google::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.ReplyApplyJoinBC.ret)
}

// optional .ProtoAlliance.ApplyJoinResp alliance = 4;
inline bool ReplyApplyJoinBC::has_alliance() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ReplyApplyJoinBC::set_has_alliance() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ReplyApplyJoinBC::clear_has_alliance() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ReplyApplyJoinBC::clear_alliance() {
  if (alliance_ != NULL) alliance_->::ProtoAlliance::ApplyJoinResp::Clear();
  clear_has_alliance();
}
inline const ::ProtoAlliance::ApplyJoinResp& ReplyApplyJoinBC::alliance() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.ReplyApplyJoinBC.alliance)
  return alliance_ != NULL ? *alliance_ : *default_instance_->alliance_;
}
inline ::ProtoAlliance::ApplyJoinResp* ReplyApplyJoinBC::mutable_alliance() {
  set_has_alliance();
  if (alliance_ == NULL) alliance_ = new ::ProtoAlliance::ApplyJoinResp;
  // @@protoc_insertion_point(field_mutable:ProtoAlliance.ReplyApplyJoinBC.alliance)
  return alliance_;
}
inline ::ProtoAlliance::ApplyJoinResp* ReplyApplyJoinBC::release_alliance() {
  clear_has_alliance();
  ::ProtoAlliance::ApplyJoinResp* temp = alliance_;
  alliance_ = NULL;
  return temp;
}
inline void ReplyApplyJoinBC::set_allocated_alliance(::ProtoAlliance::ApplyJoinResp* alliance) {
  delete alliance_;
  alliance_ = alliance;
  if (alliance) {
    set_has_alliance();
  } else {
    clear_has_alliance();
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoAlliance.ReplyApplyJoinBC.alliance)
}

// -------------------------------------------------------------------

// ApplyJoinResp

// optional int32 ret = 1;
inline bool ApplyJoinResp::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ApplyJoinResp::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ApplyJoinResp::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ApplyJoinResp::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
inline ::google::protobuf::int32 ApplyJoinResp::ret() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.ApplyJoinResp.ret)
  return ret_;
}
inline void ApplyJoinResp::set_ret(::google::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.ApplyJoinResp.ret)
}

// optional .ProtoAlliance.AllianceApplyCPP apply = 2;
inline bool ApplyJoinResp::has_apply() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ApplyJoinResp::set_has_apply() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ApplyJoinResp::clear_has_apply() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ApplyJoinResp::clear_apply() {
  if (apply_ != NULL) apply_->::ProtoAlliance::AllianceApplyCPP::Clear();
  clear_has_apply();
}
inline const ::ProtoAlliance::AllianceApplyCPP& ApplyJoinResp::apply() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.ApplyJoinResp.apply)
  return apply_ != NULL ? *apply_ : *default_instance_->apply_;
}
inline ::ProtoAlliance::AllianceApplyCPP* ApplyJoinResp::mutable_apply() {
  set_has_apply();
  if (apply_ == NULL) apply_ = new ::ProtoAlliance::AllianceApplyCPP;
  // @@protoc_insertion_point(field_mutable:ProtoAlliance.ApplyJoinResp.apply)
  return apply_;
}
inline ::ProtoAlliance::AllianceApplyCPP* ApplyJoinResp::release_apply() {
  clear_has_apply();
  ::ProtoAlliance::AllianceApplyCPP* temp = apply_;
  apply_ = NULL;
  return temp;
}
inline void ApplyJoinResp::set_allocated_apply(::ProtoAlliance::AllianceApplyCPP* apply) {
  delete apply_;
  apply_ = apply;
  if (apply) {
    set_has_apply();
  } else {
    clear_has_apply();
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoAlliance.ApplyJoinResp.apply)
}

// optional .ProtoAlliance.AllianceMemberCPP member = 3;
inline bool ApplyJoinResp::has_member() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ApplyJoinResp::set_has_member() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ApplyJoinResp::clear_has_member() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ApplyJoinResp::clear_member() {
  if (member_ != NULL) member_->::ProtoAlliance::AllianceMemberCPP::Clear();
  clear_has_member();
}
inline const ::ProtoAlliance::AllianceMemberCPP& ApplyJoinResp::member() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.ApplyJoinResp.member)
  return member_ != NULL ? *member_ : *default_instance_->member_;
}
inline ::ProtoAlliance::AllianceMemberCPP* ApplyJoinResp::mutable_member() {
  set_has_member();
  if (member_ == NULL) member_ = new ::ProtoAlliance::AllianceMemberCPP;
  // @@protoc_insertion_point(field_mutable:ProtoAlliance.ApplyJoinResp.member)
  return member_;
}
inline ::ProtoAlliance::AllianceMemberCPP* ApplyJoinResp::release_member() {
  clear_has_member();
  ::ProtoAlliance::AllianceMemberCPP* temp = member_;
  member_ = NULL;
  return temp;
}
inline void ApplyJoinResp::set_allocated_member(::ProtoAlliance::AllianceMemberCPP* member) {
  delete member_;
  member_ = member;
  if (member) {
    set_has_member();
  } else {
    clear_has_member();
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoAlliance.ApplyJoinResp.member)
}

// optional .DataCommon.CommonItemsCPP commons = 4;
inline bool ApplyJoinResp::has_commons() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ApplyJoinResp::set_has_commons() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ApplyJoinResp::clear_has_commons() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ApplyJoinResp::clear_commons() {
  if (commons_ != NULL) commons_->::DataCommon::CommonItemsCPP::Clear();
  clear_has_commons();
}
inline const ::DataCommon::CommonItemsCPP& ApplyJoinResp::commons() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.ApplyJoinResp.commons)
  return commons_ != NULL ? *commons_ : *default_instance_->commons_;
}
inline ::DataCommon::CommonItemsCPP* ApplyJoinResp::mutable_commons() {
  set_has_commons();
  if (commons_ == NULL) commons_ = new ::DataCommon::CommonItemsCPP;
  // @@protoc_insertion_point(field_mutable:ProtoAlliance.ApplyJoinResp.commons)
  return commons_;
}
inline ::DataCommon::CommonItemsCPP* ApplyJoinResp::release_commons() {
  clear_has_commons();
  ::DataCommon::CommonItemsCPP* temp = commons_;
  commons_ = NULL;
  return temp;
}
inline void ApplyJoinResp::set_allocated_commons(::DataCommon::CommonItemsCPP* commons) {
  delete commons_;
  commons_ = commons;
  if (commons) {
    set_has_commons();
  } else {
    clear_has_commons();
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoAlliance.ApplyJoinResp.commons)
}

// optional .ProtoAlliance.AllianceCPP alliance = 5;
inline bool ApplyJoinResp::has_alliance() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ApplyJoinResp::set_has_alliance() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ApplyJoinResp::clear_has_alliance() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ApplyJoinResp::clear_alliance() {
  if (alliance_ != NULL) alliance_->::ProtoAlliance::AllianceCPP::Clear();
  clear_has_alliance();
}
inline const ::ProtoAlliance::AllianceCPP& ApplyJoinResp::alliance() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.ApplyJoinResp.alliance)
  return alliance_ != NULL ? *alliance_ : *default_instance_->alliance_;
}
inline ::ProtoAlliance::AllianceCPP* ApplyJoinResp::mutable_alliance() {
  set_has_alliance();
  if (alliance_ == NULL) alliance_ = new ::ProtoAlliance::AllianceCPP;
  // @@protoc_insertion_point(field_mutable:ProtoAlliance.ApplyJoinResp.alliance)
  return alliance_;
}
inline ::ProtoAlliance::AllianceCPP* ApplyJoinResp::release_alliance() {
  clear_has_alliance();
  ::ProtoAlliance::AllianceCPP* temp = alliance_;
  alliance_ = NULL;
  return temp;
}
inline void ApplyJoinResp::set_allocated_alliance(::ProtoAlliance::AllianceCPP* alliance) {
  delete alliance_;
  alliance_ = alliance;
  if (alliance) {
    set_has_alliance();
  } else {
    clear_has_alliance();
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoAlliance.ApplyJoinResp.alliance)
}

// -------------------------------------------------------------------

// ApproveJoinReq

// required uint32 applyUid = 1;
inline bool ApproveJoinReq::has_applyuid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ApproveJoinReq::set_has_applyuid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ApproveJoinReq::clear_has_applyuid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ApproveJoinReq::clear_applyuid() {
  applyuid_ = 0u;
  clear_has_applyuid();
}
inline ::google::protobuf::uint32 ApproveJoinReq::applyuid() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.ApproveJoinReq.applyUid)
  return applyuid_;
}
inline void ApproveJoinReq::set_applyuid(::google::protobuf::uint32 value) {
  set_has_applyuid();
  applyuid_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.ApproveJoinReq.applyUid)
}

// required uint32 operate = 2;
inline bool ApproveJoinReq::has_operate() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ApproveJoinReq::set_has_operate() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ApproveJoinReq::clear_has_operate() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ApproveJoinReq::clear_operate() {
  operate_ = 0u;
  clear_has_operate();
}
inline ::google::protobuf::uint32 ApproveJoinReq::operate() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.ApproveJoinReq.operate)
  return operate_;
}
inline void ApproveJoinReq::set_operate(::google::protobuf::uint32 value) {
  set_has_operate();
  operate_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.ApproveJoinReq.operate)
}

// -------------------------------------------------------------------

// RequestApproveJoinAllianceBC

// required uint32 aid = 1;
inline bool RequestApproveJoinAllianceBC::has_aid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RequestApproveJoinAllianceBC::set_has_aid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RequestApproveJoinAllianceBC::clear_has_aid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RequestApproveJoinAllianceBC::clear_aid() {
  aid_ = 0u;
  clear_has_aid();
}
inline ::google::protobuf::uint32 RequestApproveJoinAllianceBC::aid() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.RequestApproveJoinAllianceBC.aid)
  return aid_;
}
inline void RequestApproveJoinAllianceBC::set_aid(::google::protobuf::uint32 value) {
  set_has_aid();
  aid_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.RequestApproveJoinAllianceBC.aid)
}

// required uint32 uid = 2;
inline bool RequestApproveJoinAllianceBC::has_uid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RequestApproveJoinAllianceBC::set_has_uid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RequestApproveJoinAllianceBC::clear_has_uid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RequestApproveJoinAllianceBC::clear_uid() {
  uid_ = 0u;
  clear_has_uid();
}
inline ::google::protobuf::uint32 RequestApproveJoinAllianceBC::uid() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.RequestApproveJoinAllianceBC.uid)
  return uid_;
}
inline void RequestApproveJoinAllianceBC::set_uid(::google::protobuf::uint32 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.RequestApproveJoinAllianceBC.uid)
}

// required uint32 operate = 3;
inline bool RequestApproveJoinAllianceBC::has_operate() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RequestApproveJoinAllianceBC::set_has_operate() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RequestApproveJoinAllianceBC::clear_has_operate() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RequestApproveJoinAllianceBC::clear_operate() {
  operate_ = 0u;
  clear_has_operate();
}
inline ::google::protobuf::uint32 RequestApproveJoinAllianceBC::operate() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.RequestApproveJoinAllianceBC.operate)
  return operate_;
}
inline void RequestApproveJoinAllianceBC::set_operate(::google::protobuf::uint32 value) {
  set_has_operate();
  operate_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.RequestApproveJoinAllianceBC.operate)
}

// required .ProtoAlliance.AllianceMemberCPP member = 4;
inline bool RequestApproveJoinAllianceBC::has_member() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RequestApproveJoinAllianceBC::set_has_member() {
  _has_bits_[0] |= 0x00000008u;
}
inline void RequestApproveJoinAllianceBC::clear_has_member() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void RequestApproveJoinAllianceBC::clear_member() {
  if (member_ != NULL) member_->::ProtoAlliance::AllianceMemberCPP::Clear();
  clear_has_member();
}
inline const ::ProtoAlliance::AllianceMemberCPP& RequestApproveJoinAllianceBC::member() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.RequestApproveJoinAllianceBC.member)
  return member_ != NULL ? *member_ : *default_instance_->member_;
}
inline ::ProtoAlliance::AllianceMemberCPP* RequestApproveJoinAllianceBC::mutable_member() {
  set_has_member();
  if (member_ == NULL) member_ = new ::ProtoAlliance::AllianceMemberCPP;
  // @@protoc_insertion_point(field_mutable:ProtoAlliance.RequestApproveJoinAllianceBC.member)
  return member_;
}
inline ::ProtoAlliance::AllianceMemberCPP* RequestApproveJoinAllianceBC::release_member() {
  clear_has_member();
  ::ProtoAlliance::AllianceMemberCPP* temp = member_;
  member_ = NULL;
  return temp;
}
inline void RequestApproveJoinAllianceBC::set_allocated_member(::ProtoAlliance::AllianceMemberCPP* member) {
  delete member_;
  member_ = member;
  if (member) {
    set_has_member();
  } else {
    clear_has_member();
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoAlliance.RequestApproveJoinAllianceBC.member)
}

// -------------------------------------------------------------------

// RequestApproveJoinUserBC

// required uint32 aid = 1;
inline bool RequestApproveJoinUserBC::has_aid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RequestApproveJoinUserBC::set_has_aid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RequestApproveJoinUserBC::clear_has_aid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RequestApproveJoinUserBC::clear_aid() {
  aid_ = 0u;
  clear_has_aid();
}
inline ::google::protobuf::uint32 RequestApproveJoinUserBC::aid() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.RequestApproveJoinUserBC.aid)
  return aid_;
}
inline void RequestApproveJoinUserBC::set_aid(::google::protobuf::uint32 value) {
  set_has_aid();
  aid_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.RequestApproveJoinUserBC.aid)
}

// required uint32 uid = 2;
inline bool RequestApproveJoinUserBC::has_uid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RequestApproveJoinUserBC::set_has_uid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RequestApproveJoinUserBC::clear_has_uid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RequestApproveJoinUserBC::clear_uid() {
  uid_ = 0u;
  clear_has_uid();
}
inline ::google::protobuf::uint32 RequestApproveJoinUserBC::uid() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.RequestApproveJoinUserBC.uid)
  return uid_;
}
inline void RequestApproveJoinUserBC::set_uid(::google::protobuf::uint32 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.RequestApproveJoinUserBC.uid)
}

// required uint32 applyUid = 3;
inline bool RequestApproveJoinUserBC::has_applyuid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RequestApproveJoinUserBC::set_has_applyuid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RequestApproveJoinUserBC::clear_has_applyuid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RequestApproveJoinUserBC::clear_applyuid() {
  applyuid_ = 0u;
  clear_has_applyuid();
}
inline ::google::protobuf::uint32 RequestApproveJoinUserBC::applyuid() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.RequestApproveJoinUserBC.applyUid)
  return applyuid_;
}
inline void RequestApproveJoinUserBC::set_applyuid(::google::protobuf::uint32 value) {
  set_has_applyuid();
  applyuid_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.RequestApproveJoinUserBC.applyUid)
}

// required uint32 operate = 4;
inline bool RequestApproveJoinUserBC::has_operate() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RequestApproveJoinUserBC::set_has_operate() {
  _has_bits_[0] |= 0x00000008u;
}
inline void RequestApproveJoinUserBC::clear_has_operate() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void RequestApproveJoinUserBC::clear_operate() {
  operate_ = 0u;
  clear_has_operate();
}
inline ::google::protobuf::uint32 RequestApproveJoinUserBC::operate() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.RequestApproveJoinUserBC.operate)
  return operate_;
}
inline void RequestApproveJoinUserBC::set_operate(::google::protobuf::uint32 value) {
  set_has_operate();
  operate_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.RequestApproveJoinUserBC.operate)
}

// -------------------------------------------------------------------

// ReplyApproveJoinBC

// required uint32 uid = 1;
inline bool ReplyApproveJoinBC::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReplyApproveJoinBC::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReplyApproveJoinBC::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReplyApproveJoinBC::clear_uid() {
  uid_ = 0u;
  clear_has_uid();
}
inline ::google::protobuf::uint32 ReplyApproveJoinBC::uid() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.ReplyApproveJoinBC.uid)
  return uid_;
}
inline void ReplyApproveJoinBC::set_uid(::google::protobuf::uint32 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.ReplyApproveJoinBC.uid)
}

// optional .ProtoAlliance.ApproveJoinResp alliance = 2;
inline bool ReplyApproveJoinBC::has_alliance() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ReplyApproveJoinBC::set_has_alliance() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ReplyApproveJoinBC::clear_has_alliance() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ReplyApproveJoinBC::clear_alliance() {
  if (alliance_ != NULL) alliance_->::ProtoAlliance::ApproveJoinResp::Clear();
  clear_has_alliance();
}
inline const ::ProtoAlliance::ApproveJoinResp& ReplyApproveJoinBC::alliance() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.ReplyApproveJoinBC.alliance)
  return alliance_ != NULL ? *alliance_ : *default_instance_->alliance_;
}
inline ::ProtoAlliance::ApproveJoinResp* ReplyApproveJoinBC::mutable_alliance() {
  set_has_alliance();
  if (alliance_ == NULL) alliance_ = new ::ProtoAlliance::ApproveJoinResp;
  // @@protoc_insertion_point(field_mutable:ProtoAlliance.ReplyApproveJoinBC.alliance)
  return alliance_;
}
inline ::ProtoAlliance::ApproveJoinResp* ReplyApproveJoinBC::release_alliance() {
  clear_has_alliance();
  ::ProtoAlliance::ApproveJoinResp* temp = alliance_;
  alliance_ = NULL;
  return temp;
}
inline void ReplyApproveJoinBC::set_allocated_alliance(::ProtoAlliance::ApproveJoinResp* alliance) {
  delete alliance_;
  alliance_ = alliance;
  if (alliance) {
    set_has_alliance();
  } else {
    clear_has_alliance();
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoAlliance.ReplyApproveJoinBC.alliance)
}

// -------------------------------------------------------------------

// ApproveJoinResp

// required uint32 applyUid = 1;
inline bool ApproveJoinResp::has_applyuid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ApproveJoinResp::set_has_applyuid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ApproveJoinResp::clear_has_applyuid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ApproveJoinResp::clear_applyuid() {
  applyuid_ = 0u;
  clear_has_applyuid();
}
inline ::google::protobuf::uint32 ApproveJoinResp::applyuid() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.ApproveJoinResp.applyUid)
  return applyuid_;
}
inline void ApproveJoinResp::set_applyuid(::google::protobuf::uint32 value) {
  set_has_applyuid();
  applyuid_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.ApproveJoinResp.applyUid)
}

// required uint32 operate = 2;
inline bool ApproveJoinResp::has_operate() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ApproveJoinResp::set_has_operate() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ApproveJoinResp::clear_has_operate() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ApproveJoinResp::clear_operate() {
  operate_ = 0u;
  clear_has_operate();
}
inline ::google::protobuf::uint32 ApproveJoinResp::operate() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.ApproveJoinResp.operate)
  return operate_;
}
inline void ApproveJoinResp::set_operate(::google::protobuf::uint32 value) {
  set_has_operate();
  operate_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.ApproveJoinResp.operate)
}

// optional .ProtoAlliance.AllianceMemberCPP member = 3;
inline bool ApproveJoinResp::has_member() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ApproveJoinResp::set_has_member() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ApproveJoinResp::clear_has_member() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ApproveJoinResp::clear_member() {
  if (member_ != NULL) member_->::ProtoAlliance::AllianceMemberCPP::Clear();
  clear_has_member();
}
inline const ::ProtoAlliance::AllianceMemberCPP& ApproveJoinResp::member() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.ApproveJoinResp.member)
  return member_ != NULL ? *member_ : *default_instance_->member_;
}
inline ::ProtoAlliance::AllianceMemberCPP* ApproveJoinResp::mutable_member() {
  set_has_member();
  if (member_ == NULL) member_ = new ::ProtoAlliance::AllianceMemberCPP;
  // @@protoc_insertion_point(field_mutable:ProtoAlliance.ApproveJoinResp.member)
  return member_;
}
inline ::ProtoAlliance::AllianceMemberCPP* ApproveJoinResp::release_member() {
  clear_has_member();
  ::ProtoAlliance::AllianceMemberCPP* temp = member_;
  member_ = NULL;
  return temp;
}
inline void ApproveJoinResp::set_allocated_member(::ProtoAlliance::AllianceMemberCPP* member) {
  delete member_;
  member_ = member;
  if (member) {
    set_has_member();
  } else {
    clear_has_member();
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoAlliance.ApproveJoinResp.member)
}

// -------------------------------------------------------------------

// ExitAllianceReq

// -------------------------------------------------------------------

// RequestExitAllianceBC

// required uint32 aid = 1;
inline bool RequestExitAllianceBC::has_aid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RequestExitAllianceBC::set_has_aid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RequestExitAllianceBC::clear_has_aid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RequestExitAllianceBC::clear_aid() {
  aid_ = 0u;
  clear_has_aid();
}
inline ::google::protobuf::uint32 RequestExitAllianceBC::aid() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.RequestExitAllianceBC.aid)
  return aid_;
}
inline void RequestExitAllianceBC::set_aid(::google::protobuf::uint32 value) {
  set_has_aid();
  aid_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.RequestExitAllianceBC.aid)
}

// required uint32 uid = 2;
inline bool RequestExitAllianceBC::has_uid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RequestExitAllianceBC::set_has_uid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RequestExitAllianceBC::clear_has_uid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RequestExitAllianceBC::clear_uid() {
  uid_ = 0u;
  clear_has_uid();
}
inline ::google::protobuf::uint32 RequestExitAllianceBC::uid() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.RequestExitAllianceBC.uid)
  return uid_;
}
inline void RequestExitAllianceBC::set_uid(::google::protobuf::uint32 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.RequestExitAllianceBC.uid)
}

// -------------------------------------------------------------------

// ReplyExitAllianceBC

// required uint32 uid = 1;
inline bool ReplyExitAllianceBC::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReplyExitAllianceBC::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReplyExitAllianceBC::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReplyExitAllianceBC::clear_uid() {
  uid_ = 0u;
  clear_has_uid();
}
inline ::google::protobuf::uint32 ReplyExitAllianceBC::uid() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.ReplyExitAllianceBC.uid)
  return uid_;
}
inline void ReplyExitAllianceBC::set_uid(::google::protobuf::uint32 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.ReplyExitAllianceBC.uid)
}

// required uint32 aid = 2;
inline bool ReplyExitAllianceBC::has_aid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ReplyExitAllianceBC::set_has_aid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ReplyExitAllianceBC::clear_has_aid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ReplyExitAllianceBC::clear_aid() {
  aid_ = 0u;
  clear_has_aid();
}
inline ::google::protobuf::uint32 ReplyExitAllianceBC::aid() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.ReplyExitAllianceBC.aid)
  return aid_;
}
inline void ReplyExitAllianceBC::set_aid(::google::protobuf::uint32 value) {
  set_has_aid();
  aid_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.ReplyExitAllianceBC.aid)
}

// optional .ProtoAlliance.ExitAllianceResp alliance = 3;
inline bool ReplyExitAllianceBC::has_alliance() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ReplyExitAllianceBC::set_has_alliance() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ReplyExitAllianceBC::clear_has_alliance() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ReplyExitAllianceBC::clear_alliance() {
  if (alliance_ != NULL) alliance_->::ProtoAlliance::ExitAllianceResp::Clear();
  clear_has_alliance();
}
inline const ::ProtoAlliance::ExitAllianceResp& ReplyExitAllianceBC::alliance() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.ReplyExitAllianceBC.alliance)
  return alliance_ != NULL ? *alliance_ : *default_instance_->alliance_;
}
inline ::ProtoAlliance::ExitAllianceResp* ReplyExitAllianceBC::mutable_alliance() {
  set_has_alliance();
  if (alliance_ == NULL) alliance_ = new ::ProtoAlliance::ExitAllianceResp;
  // @@protoc_insertion_point(field_mutable:ProtoAlliance.ReplyExitAllianceBC.alliance)
  return alliance_;
}
inline ::ProtoAlliance::ExitAllianceResp* ReplyExitAllianceBC::release_alliance() {
  clear_has_alliance();
  ::ProtoAlliance::ExitAllianceResp* temp = alliance_;
  alliance_ = NULL;
  return temp;
}
inline void ReplyExitAllianceBC::set_allocated_alliance(::ProtoAlliance::ExitAllianceResp* alliance) {
  delete alliance_;
  alliance_ = alliance;
  if (alliance) {
    set_has_alliance();
  } else {
    clear_has_alliance();
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoAlliance.ReplyExitAllianceBC.alliance)
}

// -------------------------------------------------------------------

// ExitAllianceResp

// required .DataCommon.CommonItemsCPP commons = 1;
inline bool ExitAllianceResp::has_commons() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ExitAllianceResp::set_has_commons() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ExitAllianceResp::clear_has_commons() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ExitAllianceResp::clear_commons() {
  if (commons_ != NULL) commons_->::DataCommon::CommonItemsCPP::Clear();
  clear_has_commons();
}
inline const ::DataCommon::CommonItemsCPP& ExitAllianceResp::commons() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.ExitAllianceResp.commons)
  return commons_ != NULL ? *commons_ : *default_instance_->commons_;
}
inline ::DataCommon::CommonItemsCPP* ExitAllianceResp::mutable_commons() {
  set_has_commons();
  if (commons_ == NULL) commons_ = new ::DataCommon::CommonItemsCPP;
  // @@protoc_insertion_point(field_mutable:ProtoAlliance.ExitAllianceResp.commons)
  return commons_;
}
inline ::DataCommon::CommonItemsCPP* ExitAllianceResp::release_commons() {
  clear_has_commons();
  ::DataCommon::CommonItemsCPP* temp = commons_;
  commons_ = NULL;
  return temp;
}
inline void ExitAllianceResp::set_allocated_commons(::DataCommon::CommonItemsCPP* commons) {
  delete commons_;
  commons_ = commons;
  if (commons) {
    set_has_commons();
  } else {
    clear_has_commons();
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoAlliance.ExitAllianceResp.commons)
}

// -------------------------------------------------------------------

// PostionChangePushReq

// required uint32 oldpos = 1;
inline bool PostionChangePushReq::has_oldpos() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PostionChangePushReq::set_has_oldpos() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PostionChangePushReq::clear_has_oldpos() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PostionChangePushReq::clear_oldpos() {
  oldpos_ = 0u;
  clear_has_oldpos();
}
inline ::google::protobuf::uint32 PostionChangePushReq::oldpos() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.PostionChangePushReq.oldpos)
  return oldpos_;
}
inline void PostionChangePushReq::set_oldpos(::google::protobuf::uint32 value) {
  set_has_oldpos();
  oldpos_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.PostionChangePushReq.oldpos)
}

// required uint32 newpos = 2;
inline bool PostionChangePushReq::has_newpos() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PostionChangePushReq::set_has_newpos() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PostionChangePushReq::clear_has_newpos() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PostionChangePushReq::clear_newpos() {
  newpos_ = 0u;
  clear_has_newpos();
}
inline ::google::protobuf::uint32 PostionChangePushReq::newpos() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.PostionChangePushReq.newpos)
  return newpos_;
}
inline void PostionChangePushReq::set_newpos(::google::protobuf::uint32 value) {
  set_has_newpos();
  newpos_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.PostionChangePushReq.newpos)
}

// optional .ProtoAlliance.AllianceCPP alliance = 3;
inline bool PostionChangePushReq::has_alliance() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PostionChangePushReq::set_has_alliance() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PostionChangePushReq::clear_has_alliance() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PostionChangePushReq::clear_alliance() {
  if (alliance_ != NULL) alliance_->::ProtoAlliance::AllianceCPP::Clear();
  clear_has_alliance();
}
inline const ::ProtoAlliance::AllianceCPP& PostionChangePushReq::alliance() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.PostionChangePushReq.alliance)
  return alliance_ != NULL ? *alliance_ : *default_instance_->alliance_;
}
inline ::ProtoAlliance::AllianceCPP* PostionChangePushReq::mutable_alliance() {
  set_has_alliance();
  if (alliance_ == NULL) alliance_ = new ::ProtoAlliance::AllianceCPP;
  // @@protoc_insertion_point(field_mutable:ProtoAlliance.PostionChangePushReq.alliance)
  return alliance_;
}
inline ::ProtoAlliance::AllianceCPP* PostionChangePushReq::release_alliance() {
  clear_has_alliance();
  ::ProtoAlliance::AllianceCPP* temp = alliance_;
  alliance_ = NULL;
  return temp;
}
inline void PostionChangePushReq::set_allocated_alliance(::ProtoAlliance::AllianceCPP* alliance) {
  delete alliance_;
  alliance_ = alliance;
  if (alliance) {
    set_has_alliance();
  } else {
    clear_has_alliance();
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoAlliance.PostionChangePushReq.alliance)
}

// -------------------------------------------------------------------

// InviteJoinReq

// required uint32 invitedUid = 1;
inline bool InviteJoinReq::has_inviteduid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void InviteJoinReq::set_has_inviteduid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void InviteJoinReq::clear_has_inviteduid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void InviteJoinReq::clear_inviteduid() {
  inviteduid_ = 0u;
  clear_has_inviteduid();
}
inline ::google::protobuf::uint32 InviteJoinReq::inviteduid() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.InviteJoinReq.invitedUid)
  return inviteduid_;
}
inline void InviteJoinReq::set_inviteduid(::google::protobuf::uint32 value) {
  set_has_inviteduid();
  inviteduid_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.InviteJoinReq.invitedUid)
}

// -------------------------------------------------------------------

// RequestInviteJoinBC

// required uint32 aid = 1;
inline bool RequestInviteJoinBC::has_aid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RequestInviteJoinBC::set_has_aid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RequestInviteJoinBC::clear_has_aid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RequestInviteJoinBC::clear_aid() {
  aid_ = 0u;
  clear_has_aid();
}
inline ::google::protobuf::uint32 RequestInviteJoinBC::aid() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.RequestInviteJoinBC.aid)
  return aid_;
}
inline void RequestInviteJoinBC::set_aid(::google::protobuf::uint32 value) {
  set_has_aid();
  aid_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.RequestInviteJoinBC.aid)
}

// required uint32 uid = 2;
inline bool RequestInviteJoinBC::has_uid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RequestInviteJoinBC::set_has_uid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RequestInviteJoinBC::clear_has_uid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RequestInviteJoinBC::clear_uid() {
  uid_ = 0u;
  clear_has_uid();
}
inline ::google::protobuf::uint32 RequestInviteJoinBC::uid() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.RequestInviteJoinBC.uid)
  return uid_;
}
inline void RequestInviteJoinBC::set_uid(::google::protobuf::uint32 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.RequestInviteJoinBC.uid)
}

// required uint32 invitedUid = 3;
inline bool RequestInviteJoinBC::has_inviteduid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RequestInviteJoinBC::set_has_inviteduid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RequestInviteJoinBC::clear_has_inviteduid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RequestInviteJoinBC::clear_inviteduid() {
  inviteduid_ = 0u;
  clear_has_inviteduid();
}
inline ::google::protobuf::uint32 RequestInviteJoinBC::inviteduid() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.RequestInviteJoinBC.invitedUid)
  return inviteduid_;
}
inline void RequestInviteJoinBC::set_inviteduid(::google::protobuf::uint32 value) {
  set_has_inviteduid();
  inviteduid_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.RequestInviteJoinBC.invitedUid)
}

// required bytes name = 4;
inline bool RequestInviteJoinBC::has_name() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RequestInviteJoinBC::set_has_name() {
  _has_bits_[0] |= 0x00000008u;
}
inline void RequestInviteJoinBC::clear_has_name() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void RequestInviteJoinBC::clear_name() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& RequestInviteJoinBC::name() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.RequestInviteJoinBC.name)
  return *name_;
}
inline void RequestInviteJoinBC::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set:ProtoAlliance.RequestInviteJoinBC.name)
}
inline void RequestInviteJoinBC::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set_char:ProtoAlliance.RequestInviteJoinBC.name)
}
inline void RequestInviteJoinBC::set_name(const void* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ProtoAlliance.RequestInviteJoinBC.name)
}
inline ::std::string* RequestInviteJoinBC::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:ProtoAlliance.RequestInviteJoinBC.name)
  return name_;
}
inline ::std::string* RequestInviteJoinBC::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void RequestInviteJoinBC::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoAlliance.RequestInviteJoinBC.name)
}

// -------------------------------------------------------------------

// RequestInviteJoinUserBC

// required uint32 aid = 1;
inline bool RequestInviteJoinUserBC::has_aid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RequestInviteJoinUserBC::set_has_aid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RequestInviteJoinUserBC::clear_has_aid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RequestInviteJoinUserBC::clear_aid() {
  aid_ = 0u;
  clear_has_aid();
}
inline ::google::protobuf::uint32 RequestInviteJoinUserBC::aid() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.RequestInviteJoinUserBC.aid)
  return aid_;
}
inline void RequestInviteJoinUserBC::set_aid(::google::protobuf::uint32 value) {
  set_has_aid();
  aid_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.RequestInviteJoinUserBC.aid)
}

// required uint32 uid = 2;
inline bool RequestInviteJoinUserBC::has_uid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RequestInviteJoinUserBC::set_has_uid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RequestInviteJoinUserBC::clear_has_uid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RequestInviteJoinUserBC::clear_uid() {
  uid_ = 0u;
  clear_has_uid();
}
inline ::google::protobuf::uint32 RequestInviteJoinUserBC::uid() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.RequestInviteJoinUserBC.uid)
  return uid_;
}
inline void RequestInviteJoinUserBC::set_uid(::google::protobuf::uint32 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.RequestInviteJoinUserBC.uid)
}

// required uint32 invitedUid = 3;
inline bool RequestInviteJoinUserBC::has_inviteduid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RequestInviteJoinUserBC::set_has_inviteduid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RequestInviteJoinUserBC::clear_has_inviteduid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RequestInviteJoinUserBC::clear_inviteduid() {
  inviteduid_ = 0u;
  clear_has_inviteduid();
}
inline ::google::protobuf::uint32 RequestInviteJoinUserBC::inviteduid() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.RequestInviteJoinUserBC.invitedUid)
  return inviteduid_;
}
inline void RequestInviteJoinUserBC::set_inviteduid(::google::protobuf::uint32 value) {
  set_has_inviteduid();
  inviteduid_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.RequestInviteJoinUserBC.invitedUid)
}

// required uint32 allianceFlag = 4;
inline bool RequestInviteJoinUserBC::has_allianceflag() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RequestInviteJoinUserBC::set_has_allianceflag() {
  _has_bits_[0] |= 0x00000008u;
}
inline void RequestInviteJoinUserBC::clear_has_allianceflag() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void RequestInviteJoinUserBC::clear_allianceflag() {
  allianceflag_ = 0u;
  clear_has_allianceflag();
}
inline ::google::protobuf::uint32 RequestInviteJoinUserBC::allianceflag() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.RequestInviteJoinUserBC.allianceFlag)
  return allianceflag_;
}
inline void RequestInviteJoinUserBC::set_allianceflag(::google::protobuf::uint32 value) {
  set_has_allianceflag();
  allianceflag_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.RequestInviteJoinUserBC.allianceFlag)
}

// required bytes name = 5;
inline bool RequestInviteJoinUserBC::has_name() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void RequestInviteJoinUserBC::set_has_name() {
  _has_bits_[0] |= 0x00000010u;
}
inline void RequestInviteJoinUserBC::clear_has_name() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void RequestInviteJoinUserBC::clear_name() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& RequestInviteJoinUserBC::name() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.RequestInviteJoinUserBC.name)
  return *name_;
}
inline void RequestInviteJoinUserBC::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set:ProtoAlliance.RequestInviteJoinUserBC.name)
}
inline void RequestInviteJoinUserBC::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set_char:ProtoAlliance.RequestInviteJoinUserBC.name)
}
inline void RequestInviteJoinUserBC::set_name(const void* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ProtoAlliance.RequestInviteJoinUserBC.name)
}
inline ::std::string* RequestInviteJoinUserBC::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:ProtoAlliance.RequestInviteJoinUserBC.name)
  return name_;
}
inline ::std::string* RequestInviteJoinUserBC::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void RequestInviteJoinUserBC::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoAlliance.RequestInviteJoinUserBC.name)
}

// required bytes allianceName = 6;
inline bool RequestInviteJoinUserBC::has_alliancename() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void RequestInviteJoinUserBC::set_has_alliancename() {
  _has_bits_[0] |= 0x00000020u;
}
inline void RequestInviteJoinUserBC::clear_has_alliancename() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void RequestInviteJoinUserBC::clear_alliancename() {
  if (alliancename_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    alliancename_->clear();
  }
  clear_has_alliancename();
}
inline const ::std::string& RequestInviteJoinUserBC::alliancename() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.RequestInviteJoinUserBC.allianceName)
  return *alliancename_;
}
inline void RequestInviteJoinUserBC::set_alliancename(const ::std::string& value) {
  set_has_alliancename();
  if (alliancename_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    alliancename_ = new ::std::string;
  }
  alliancename_->assign(value);
  // @@protoc_insertion_point(field_set:ProtoAlliance.RequestInviteJoinUserBC.allianceName)
}
inline void RequestInviteJoinUserBC::set_alliancename(const char* value) {
  set_has_alliancename();
  if (alliancename_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    alliancename_ = new ::std::string;
  }
  alliancename_->assign(value);
  // @@protoc_insertion_point(field_set_char:ProtoAlliance.RequestInviteJoinUserBC.allianceName)
}
inline void RequestInviteJoinUserBC::set_alliancename(const void* value, size_t size) {
  set_has_alliancename();
  if (alliancename_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    alliancename_ = new ::std::string;
  }
  alliancename_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ProtoAlliance.RequestInviteJoinUserBC.allianceName)
}
inline ::std::string* RequestInviteJoinUserBC::mutable_alliancename() {
  set_has_alliancename();
  if (alliancename_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    alliancename_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:ProtoAlliance.RequestInviteJoinUserBC.allianceName)
  return alliancename_;
}
inline ::std::string* RequestInviteJoinUserBC::release_alliancename() {
  clear_has_alliancename();
  if (alliancename_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = alliancename_;
    alliancename_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void RequestInviteJoinUserBC::set_allocated_alliancename(::std::string* alliancename) {
  if (alliancename_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete alliancename_;
  }
  if (alliancename) {
    set_has_alliancename();
    alliancename_ = alliancename;
  } else {
    clear_has_alliancename();
    alliancename_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoAlliance.RequestInviteJoinUserBC.allianceName)
}

// -------------------------------------------------------------------

// ReplyInviteJoinBC

// required uint32 uid = 1;
inline bool ReplyInviteJoinBC::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReplyInviteJoinBC::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReplyInviteJoinBC::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReplyInviteJoinBC::clear_uid() {
  uid_ = 0u;
  clear_has_uid();
}
inline ::google::protobuf::uint32 ReplyInviteJoinBC::uid() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.ReplyInviteJoinBC.uid)
  return uid_;
}
inline void ReplyInviteJoinBC::set_uid(::google::protobuf::uint32 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.ReplyInviteJoinBC.uid)
}

// optional .ProtoAlliance.InviteJoinResp alliance = 2;
inline bool ReplyInviteJoinBC::has_alliance() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ReplyInviteJoinBC::set_has_alliance() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ReplyInviteJoinBC::clear_has_alliance() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ReplyInviteJoinBC::clear_alliance() {
  if (alliance_ != NULL) alliance_->::ProtoAlliance::InviteJoinResp::Clear();
  clear_has_alliance();
}
inline const ::ProtoAlliance::InviteJoinResp& ReplyInviteJoinBC::alliance() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.ReplyInviteJoinBC.alliance)
  return alliance_ != NULL ? *alliance_ : *default_instance_->alliance_;
}
inline ::ProtoAlliance::InviteJoinResp* ReplyInviteJoinBC::mutable_alliance() {
  set_has_alliance();
  if (alliance_ == NULL) alliance_ = new ::ProtoAlliance::InviteJoinResp;
  // @@protoc_insertion_point(field_mutable:ProtoAlliance.ReplyInviteJoinBC.alliance)
  return alliance_;
}
inline ::ProtoAlliance::InviteJoinResp* ReplyInviteJoinBC::release_alliance() {
  clear_has_alliance();
  ::ProtoAlliance::InviteJoinResp* temp = alliance_;
  alliance_ = NULL;
  return temp;
}
inline void ReplyInviteJoinBC::set_allocated_alliance(::ProtoAlliance::InviteJoinResp* alliance) {
  delete alliance_;
  alliance_ = alliance;
  if (alliance) {
    set_has_alliance();
  } else {
    clear_has_alliance();
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoAlliance.ReplyInviteJoinBC.alliance)
}

// -------------------------------------------------------------------

// InviteJoinResp

// required uint32 invitedUid = 1;
inline bool InviteJoinResp::has_inviteduid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void InviteJoinResp::set_has_inviteduid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void InviteJoinResp::clear_has_inviteduid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void InviteJoinResp::clear_inviteduid() {
  inviteduid_ = 0u;
  clear_has_inviteduid();
}
inline ::google::protobuf::uint32 InviteJoinResp::inviteduid() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.InviteJoinResp.invitedUid)
  return inviteduid_;
}
inline void InviteJoinResp::set_inviteduid(::google::protobuf::uint32 value) {
  set_has_inviteduid();
  inviteduid_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.InviteJoinResp.invitedUid)
}

// -------------------------------------------------------------------

// InvitedPushReq

// required .ProtoAlliance.AllianceInvitedCPP invite = 1;
inline bool InvitedPushReq::has_invite() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void InvitedPushReq::set_has_invite() {
  _has_bits_[0] |= 0x00000001u;
}
inline void InvitedPushReq::clear_has_invite() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void InvitedPushReq::clear_invite() {
  if (invite_ != NULL) invite_->::ProtoAlliance::AllianceInvitedCPP::Clear();
  clear_has_invite();
}
inline const ::ProtoAlliance::AllianceInvitedCPP& InvitedPushReq::invite() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.InvitedPushReq.invite)
  return invite_ != NULL ? *invite_ : *default_instance_->invite_;
}
inline ::ProtoAlliance::AllianceInvitedCPP* InvitedPushReq::mutable_invite() {
  set_has_invite();
  if (invite_ == NULL) invite_ = new ::ProtoAlliance::AllianceInvitedCPP;
  // @@protoc_insertion_point(field_mutable:ProtoAlliance.InvitedPushReq.invite)
  return invite_;
}
inline ::ProtoAlliance::AllianceInvitedCPP* InvitedPushReq::release_invite() {
  clear_has_invite();
  ::ProtoAlliance::AllianceInvitedCPP* temp = invite_;
  invite_ = NULL;
  return temp;
}
inline void InvitedPushReq::set_allocated_invite(::ProtoAlliance::AllianceInvitedCPP* invite) {
  delete invite_;
  invite_ = invite;
  if (invite) {
    set_has_invite();
  } else {
    clear_has_invite();
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoAlliance.InvitedPushReq.invite)
}

// -------------------------------------------------------------------

// AcceptInviteReq

// required uint32 allianceId = 1;
inline bool AcceptInviteReq::has_allianceid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AcceptInviteReq::set_has_allianceid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AcceptInviteReq::clear_has_allianceid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AcceptInviteReq::clear_allianceid() {
  allianceid_ = 0u;
  clear_has_allianceid();
}
inline ::google::protobuf::uint32 AcceptInviteReq::allianceid() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.AcceptInviteReq.allianceId)
  return allianceid_;
}
inline void AcceptInviteReq::set_allianceid(::google::protobuf::uint32 value) {
  set_has_allianceid();
  allianceid_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.AcceptInviteReq.allianceId)
}

// required uint32 operate = 2;
inline bool AcceptInviteReq::has_operate() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AcceptInviteReq::set_has_operate() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AcceptInviteReq::clear_has_operate() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AcceptInviteReq::clear_operate() {
  operate_ = 0u;
  clear_has_operate();
}
inline ::google::protobuf::uint32 AcceptInviteReq::operate() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.AcceptInviteReq.operate)
  return operate_;
}
inline void AcceptInviteReq::set_operate(::google::protobuf::uint32 value) {
  set_has_operate();
  operate_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.AcceptInviteReq.operate)
}

// -------------------------------------------------------------------

// RequestAcceptInviteBC

// required uint32 allianceId = 1;
inline bool RequestAcceptInviteBC::has_allianceid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RequestAcceptInviteBC::set_has_allianceid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RequestAcceptInviteBC::clear_has_allianceid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RequestAcceptInviteBC::clear_allianceid() {
  allianceid_ = 0u;
  clear_has_allianceid();
}
inline ::google::protobuf::uint32 RequestAcceptInviteBC::allianceid() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.RequestAcceptInviteBC.allianceId)
  return allianceid_;
}
inline void RequestAcceptInviteBC::set_allianceid(::google::protobuf::uint32 value) {
  set_has_allianceid();
  allianceid_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.RequestAcceptInviteBC.allianceId)
}

// required uint32 inviteUid = 2;
inline bool RequestAcceptInviteBC::has_inviteuid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RequestAcceptInviteBC::set_has_inviteuid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RequestAcceptInviteBC::clear_has_inviteuid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RequestAcceptInviteBC::clear_inviteuid() {
  inviteuid_ = 0u;
  clear_has_inviteuid();
}
inline ::google::protobuf::uint32 RequestAcceptInviteBC::inviteuid() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.RequestAcceptInviteBC.inviteUid)
  return inviteuid_;
}
inline void RequestAcceptInviteBC::set_inviteuid(::google::protobuf::uint32 value) {
  set_has_inviteuid();
  inviteuid_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.RequestAcceptInviteBC.inviteUid)
}

// required uint32 operate = 3;
inline bool RequestAcceptInviteBC::has_operate() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RequestAcceptInviteBC::set_has_operate() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RequestAcceptInviteBC::clear_has_operate() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RequestAcceptInviteBC::clear_operate() {
  operate_ = 0u;
  clear_has_operate();
}
inline ::google::protobuf::uint32 RequestAcceptInviteBC::operate() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.RequestAcceptInviteBC.operate)
  return operate_;
}
inline void RequestAcceptInviteBC::set_operate(::google::protobuf::uint32 value) {
  set_has_operate();
  operate_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.RequestAcceptInviteBC.operate)
}

// optional .ProtoAlliance.AllianceMemberCPP member = 4;
inline bool RequestAcceptInviteBC::has_member() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RequestAcceptInviteBC::set_has_member() {
  _has_bits_[0] |= 0x00000008u;
}
inline void RequestAcceptInviteBC::clear_has_member() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void RequestAcceptInviteBC::clear_member() {
  if (member_ != NULL) member_->::ProtoAlliance::AllianceMemberCPP::Clear();
  clear_has_member();
}
inline const ::ProtoAlliance::AllianceMemberCPP& RequestAcceptInviteBC::member() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.RequestAcceptInviteBC.member)
  return member_ != NULL ? *member_ : *default_instance_->member_;
}
inline ::ProtoAlliance::AllianceMemberCPP* RequestAcceptInviteBC::mutable_member() {
  set_has_member();
  if (member_ == NULL) member_ = new ::ProtoAlliance::AllianceMemberCPP;
  // @@protoc_insertion_point(field_mutable:ProtoAlliance.RequestAcceptInviteBC.member)
  return member_;
}
inline ::ProtoAlliance::AllianceMemberCPP* RequestAcceptInviteBC::release_member() {
  clear_has_member();
  ::ProtoAlliance::AllianceMemberCPP* temp = member_;
  member_ = NULL;
  return temp;
}
inline void RequestAcceptInviteBC::set_allocated_member(::ProtoAlliance::AllianceMemberCPP* member) {
  delete member_;
  member_ = member;
  if (member) {
    set_has_member();
  } else {
    clear_has_member();
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoAlliance.RequestAcceptInviteBC.member)
}

// -------------------------------------------------------------------

// ReplyAcceptInviteBC

// required uint32 uid = 1;
inline bool ReplyAcceptInviteBC::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReplyAcceptInviteBC::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReplyAcceptInviteBC::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReplyAcceptInviteBC::clear_uid() {
  uid_ = 0u;
  clear_has_uid();
}
inline ::google::protobuf::uint32 ReplyAcceptInviteBC::uid() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.ReplyAcceptInviteBC.uid)
  return uid_;
}
inline void ReplyAcceptInviteBC::set_uid(::google::protobuf::uint32 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.ReplyAcceptInviteBC.uid)
}

// optional .ProtoAlliance.AcceptInviteResp alliance = 2;
inline bool ReplyAcceptInviteBC::has_alliance() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ReplyAcceptInviteBC::set_has_alliance() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ReplyAcceptInviteBC::clear_has_alliance() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ReplyAcceptInviteBC::clear_alliance() {
  if (alliance_ != NULL) alliance_->::ProtoAlliance::AcceptInviteResp::Clear();
  clear_has_alliance();
}
inline const ::ProtoAlliance::AcceptInviteResp& ReplyAcceptInviteBC::alliance() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.ReplyAcceptInviteBC.alliance)
  return alliance_ != NULL ? *alliance_ : *default_instance_->alliance_;
}
inline ::ProtoAlliance::AcceptInviteResp* ReplyAcceptInviteBC::mutable_alliance() {
  set_has_alliance();
  if (alliance_ == NULL) alliance_ = new ::ProtoAlliance::AcceptInviteResp;
  // @@protoc_insertion_point(field_mutable:ProtoAlliance.ReplyAcceptInviteBC.alliance)
  return alliance_;
}
inline ::ProtoAlliance::AcceptInviteResp* ReplyAcceptInviteBC::release_alliance() {
  clear_has_alliance();
  ::ProtoAlliance::AcceptInviteResp* temp = alliance_;
  alliance_ = NULL;
  return temp;
}
inline void ReplyAcceptInviteBC::set_allocated_alliance(::ProtoAlliance::AcceptInviteResp* alliance) {
  delete alliance_;
  alliance_ = alliance;
  if (alliance) {
    set_has_alliance();
  } else {
    clear_has_alliance();
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoAlliance.ReplyAcceptInviteBC.alliance)
}

// -------------------------------------------------------------------

// AcceptInviteResp

// required uint32 allianceId = 1;
inline bool AcceptInviteResp::has_allianceid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AcceptInviteResp::set_has_allianceid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AcceptInviteResp::clear_has_allianceid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AcceptInviteResp::clear_allianceid() {
  allianceid_ = 0u;
  clear_has_allianceid();
}
inline ::google::protobuf::uint32 AcceptInviteResp::allianceid() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.AcceptInviteResp.allianceId)
  return allianceid_;
}
inline void AcceptInviteResp::set_allianceid(::google::protobuf::uint32 value) {
  set_has_allianceid();
  allianceid_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.AcceptInviteResp.allianceId)
}

// required uint32 operate = 2;
inline bool AcceptInviteResp::has_operate() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AcceptInviteResp::set_has_operate() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AcceptInviteResp::clear_has_operate() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AcceptInviteResp::clear_operate() {
  operate_ = 0u;
  clear_has_operate();
}
inline ::google::protobuf::uint32 AcceptInviteResp::operate() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.AcceptInviteResp.operate)
  return operate_;
}
inline void AcceptInviteResp::set_operate(::google::protobuf::uint32 value) {
  set_has_operate();
  operate_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.AcceptInviteResp.operate)
}

// optional .ProtoAlliance.AllianceMemberCPP member = 3;
inline bool AcceptInviteResp::has_member() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AcceptInviteResp::set_has_member() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AcceptInviteResp::clear_has_member() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AcceptInviteResp::clear_member() {
  if (member_ != NULL) member_->::ProtoAlliance::AllianceMemberCPP::Clear();
  clear_has_member();
}
inline const ::ProtoAlliance::AllianceMemberCPP& AcceptInviteResp::member() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.AcceptInviteResp.member)
  return member_ != NULL ? *member_ : *default_instance_->member_;
}
inline ::ProtoAlliance::AllianceMemberCPP* AcceptInviteResp::mutable_member() {
  set_has_member();
  if (member_ == NULL) member_ = new ::ProtoAlliance::AllianceMemberCPP;
  // @@protoc_insertion_point(field_mutable:ProtoAlliance.AcceptInviteResp.member)
  return member_;
}
inline ::ProtoAlliance::AllianceMemberCPP* AcceptInviteResp::release_member() {
  clear_has_member();
  ::ProtoAlliance::AllianceMemberCPP* temp = member_;
  member_ = NULL;
  return temp;
}
inline void AcceptInviteResp::set_allocated_member(::ProtoAlliance::AllianceMemberCPP* member) {
  delete member_;
  member_ = member;
  if (member) {
    set_has_member();
  } else {
    clear_has_member();
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoAlliance.AcceptInviteResp.member)
}

// optional .DataCommon.CommonItemsCPP commons = 4;
inline bool AcceptInviteResp::has_commons() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void AcceptInviteResp::set_has_commons() {
  _has_bits_[0] |= 0x00000008u;
}
inline void AcceptInviteResp::clear_has_commons() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void AcceptInviteResp::clear_commons() {
  if (commons_ != NULL) commons_->::DataCommon::CommonItemsCPP::Clear();
  clear_has_commons();
}
inline const ::DataCommon::CommonItemsCPP& AcceptInviteResp::commons() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.AcceptInviteResp.commons)
  return commons_ != NULL ? *commons_ : *default_instance_->commons_;
}
inline ::DataCommon::CommonItemsCPP* AcceptInviteResp::mutable_commons() {
  set_has_commons();
  if (commons_ == NULL) commons_ = new ::DataCommon::CommonItemsCPP;
  // @@protoc_insertion_point(field_mutable:ProtoAlliance.AcceptInviteResp.commons)
  return commons_;
}
inline ::DataCommon::CommonItemsCPP* AcceptInviteResp::release_commons() {
  clear_has_commons();
  ::DataCommon::CommonItemsCPP* temp = commons_;
  commons_ = NULL;
  return temp;
}
inline void AcceptInviteResp::set_allocated_commons(::DataCommon::CommonItemsCPP* commons) {
  delete commons_;
  commons_ = commons;
  if (commons) {
    set_has_commons();
  } else {
    clear_has_commons();
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoAlliance.AcceptInviteResp.commons)
}

// optional .ProtoAlliance.AllianceCPP alliance = 5;
inline bool AcceptInviteResp::has_alliance() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void AcceptInviteResp::set_has_alliance() {
  _has_bits_[0] |= 0x00000010u;
}
inline void AcceptInviteResp::clear_has_alliance() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void AcceptInviteResp::clear_alliance() {
  if (alliance_ != NULL) alliance_->::ProtoAlliance::AllianceCPP::Clear();
  clear_has_alliance();
}
inline const ::ProtoAlliance::AllianceCPP& AcceptInviteResp::alliance() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.AcceptInviteResp.alliance)
  return alliance_ != NULL ? *alliance_ : *default_instance_->alliance_;
}
inline ::ProtoAlliance::AllianceCPP* AcceptInviteResp::mutable_alliance() {
  set_has_alliance();
  if (alliance_ == NULL) alliance_ = new ::ProtoAlliance::AllianceCPP;
  // @@protoc_insertion_point(field_mutable:ProtoAlliance.AcceptInviteResp.alliance)
  return alliance_;
}
inline ::ProtoAlliance::AllianceCPP* AcceptInviteResp::release_alliance() {
  clear_has_alliance();
  ::ProtoAlliance::AllianceCPP* temp = alliance_;
  alliance_ = NULL;
  return temp;
}
inline void AcceptInviteResp::set_allocated_alliance(::ProtoAlliance::AllianceCPP* alliance) {
  delete alliance_;
  alliance_ = alliance;
  if (alliance) {
    set_has_alliance();
  } else {
    clear_has_alliance();
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoAlliance.AcceptInviteResp.alliance)
}

// -------------------------------------------------------------------

// ManipulateMemberReq

// required uint32 memberUid = 1;
inline bool ManipulateMemberReq::has_memberuid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ManipulateMemberReq::set_has_memberuid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ManipulateMemberReq::clear_has_memberuid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ManipulateMemberReq::clear_memberuid() {
  memberuid_ = 0u;
  clear_has_memberuid();
}
inline ::google::protobuf::uint32 ManipulateMemberReq::memberuid() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.ManipulateMemberReq.memberUid)
  return memberuid_;
}
inline void ManipulateMemberReq::set_memberuid(::google::protobuf::uint32 value) {
  set_has_memberuid();
  memberuid_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.ManipulateMemberReq.memberUid)
}

// required uint32 operate = 2;
inline bool ManipulateMemberReq::has_operate() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ManipulateMemberReq::set_has_operate() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ManipulateMemberReq::clear_has_operate() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ManipulateMemberReq::clear_operate() {
  operate_ = 0u;
  clear_has_operate();
}
inline ::google::protobuf::uint32 ManipulateMemberReq::operate() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.ManipulateMemberReq.operate)
  return operate_;
}
inline void ManipulateMemberReq::set_operate(::google::protobuf::uint32 value) {
  set_has_operate();
  operate_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.ManipulateMemberReq.operate)
}

// required uint32 type = 3;
inline bool ManipulateMemberReq::has_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ManipulateMemberReq::set_has_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ManipulateMemberReq::clear_has_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ManipulateMemberReq::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 ManipulateMemberReq::type() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.ManipulateMemberReq.type)
  return type_;
}
inline void ManipulateMemberReq::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.ManipulateMemberReq.type)
}

// required uint32 destination = 4;
inline bool ManipulateMemberReq::has_destination() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ManipulateMemberReq::set_has_destination() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ManipulateMemberReq::clear_has_destination() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ManipulateMemberReq::clear_destination() {
  destination_ = 0u;
  clear_has_destination();
}
inline ::google::protobuf::uint32 ManipulateMemberReq::destination() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.ManipulateMemberReq.destination)
  return destination_;
}
inline void ManipulateMemberReq::set_destination(::google::protobuf::uint32 value) {
  set_has_destination();
  destination_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.ManipulateMemberReq.destination)
}

// -------------------------------------------------------------------

// RequestManipulateMemberBC

// required uint32 aid = 1;
inline bool RequestManipulateMemberBC::has_aid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RequestManipulateMemberBC::set_has_aid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RequestManipulateMemberBC::clear_has_aid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RequestManipulateMemberBC::clear_aid() {
  aid_ = 0u;
  clear_has_aid();
}
inline ::google::protobuf::uint32 RequestManipulateMemberBC::aid() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.RequestManipulateMemberBC.aid)
  return aid_;
}
inline void RequestManipulateMemberBC::set_aid(::google::protobuf::uint32 value) {
  set_has_aid();
  aid_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.RequestManipulateMemberBC.aid)
}

// required uint32 uid = 2;
inline bool RequestManipulateMemberBC::has_uid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RequestManipulateMemberBC::set_has_uid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RequestManipulateMemberBC::clear_has_uid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RequestManipulateMemberBC::clear_uid() {
  uid_ = 0u;
  clear_has_uid();
}
inline ::google::protobuf::uint32 RequestManipulateMemberBC::uid() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.RequestManipulateMemberBC.uid)
  return uid_;
}
inline void RequestManipulateMemberBC::set_uid(::google::protobuf::uint32 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.RequestManipulateMemberBC.uid)
}

// required .ProtoAlliance.ManipulateMemberReq info = 3;
inline bool RequestManipulateMemberBC::has_info() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RequestManipulateMemberBC::set_has_info() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RequestManipulateMemberBC::clear_has_info() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RequestManipulateMemberBC::clear_info() {
  if (info_ != NULL) info_->::ProtoAlliance::ManipulateMemberReq::Clear();
  clear_has_info();
}
inline const ::ProtoAlliance::ManipulateMemberReq& RequestManipulateMemberBC::info() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.RequestManipulateMemberBC.info)
  return info_ != NULL ? *info_ : *default_instance_->info_;
}
inline ::ProtoAlliance::ManipulateMemberReq* RequestManipulateMemberBC::mutable_info() {
  set_has_info();
  if (info_ == NULL) info_ = new ::ProtoAlliance::ManipulateMemberReq;
  // @@protoc_insertion_point(field_mutable:ProtoAlliance.RequestManipulateMemberBC.info)
  return info_;
}
inline ::ProtoAlliance::ManipulateMemberReq* RequestManipulateMemberBC::release_info() {
  clear_has_info();
  ::ProtoAlliance::ManipulateMemberReq* temp = info_;
  info_ = NULL;
  return temp;
}
inline void RequestManipulateMemberBC::set_allocated_info(::ProtoAlliance::ManipulateMemberReq* info) {
  delete info_;
  info_ = info;
  if (info) {
    set_has_info();
  } else {
    clear_has_info();
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoAlliance.RequestManipulateMemberBC.info)
}

// -------------------------------------------------------------------

// ReplyManipulateMemberBC

// required uint32 uid = 1;
inline bool ReplyManipulateMemberBC::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReplyManipulateMemberBC::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReplyManipulateMemberBC::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReplyManipulateMemberBC::clear_uid() {
  uid_ = 0u;
  clear_has_uid();
}
inline ::google::protobuf::uint32 ReplyManipulateMemberBC::uid() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.ReplyManipulateMemberBC.uid)
  return uid_;
}
inline void ReplyManipulateMemberBC::set_uid(::google::protobuf::uint32 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.ReplyManipulateMemberBC.uid)
}

// optional .ProtoAlliance.ManipulateMemberResp alliance = 2;
inline bool ReplyManipulateMemberBC::has_alliance() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ReplyManipulateMemberBC::set_has_alliance() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ReplyManipulateMemberBC::clear_has_alliance() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ReplyManipulateMemberBC::clear_alliance() {
  if (alliance_ != NULL) alliance_->::ProtoAlliance::ManipulateMemberResp::Clear();
  clear_has_alliance();
}
inline const ::ProtoAlliance::ManipulateMemberResp& ReplyManipulateMemberBC::alliance() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.ReplyManipulateMemberBC.alliance)
  return alliance_ != NULL ? *alliance_ : *default_instance_->alliance_;
}
inline ::ProtoAlliance::ManipulateMemberResp* ReplyManipulateMemberBC::mutable_alliance() {
  set_has_alliance();
  if (alliance_ == NULL) alliance_ = new ::ProtoAlliance::ManipulateMemberResp;
  // @@protoc_insertion_point(field_mutable:ProtoAlliance.ReplyManipulateMemberBC.alliance)
  return alliance_;
}
inline ::ProtoAlliance::ManipulateMemberResp* ReplyManipulateMemberBC::release_alliance() {
  clear_has_alliance();
  ::ProtoAlliance::ManipulateMemberResp* temp = alliance_;
  alliance_ = NULL;
  return temp;
}
inline void ReplyManipulateMemberBC::set_allocated_alliance(::ProtoAlliance::ManipulateMemberResp* alliance) {
  delete alliance_;
  alliance_ = alliance;
  if (alliance) {
    set_has_alliance();
  } else {
    clear_has_alliance();
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoAlliance.ReplyManipulateMemberBC.alliance)
}

// -------------------------------------------------------------------

// ManipulateMemberResp

// required .ProtoAlliance.AllianceMemberCPP member = 1;
inline bool ManipulateMemberResp::has_member() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ManipulateMemberResp::set_has_member() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ManipulateMemberResp::clear_has_member() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ManipulateMemberResp::clear_member() {
  if (member_ != NULL) member_->::ProtoAlliance::AllianceMemberCPP::Clear();
  clear_has_member();
}
inline const ::ProtoAlliance::AllianceMemberCPP& ManipulateMemberResp::member() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.ManipulateMemberResp.member)
  return member_ != NULL ? *member_ : *default_instance_->member_;
}
inline ::ProtoAlliance::AllianceMemberCPP* ManipulateMemberResp::mutable_member() {
  set_has_member();
  if (member_ == NULL) member_ = new ::ProtoAlliance::AllianceMemberCPP;
  // @@protoc_insertion_point(field_mutable:ProtoAlliance.ManipulateMemberResp.member)
  return member_;
}
inline ::ProtoAlliance::AllianceMemberCPP* ManipulateMemberResp::release_member() {
  clear_has_member();
  ::ProtoAlliance::AllianceMemberCPP* temp = member_;
  member_ = NULL;
  return temp;
}
inline void ManipulateMemberResp::set_allocated_member(::ProtoAlliance::AllianceMemberCPP* member) {
  delete member_;
  member_ = member;
  if (member) {
    set_has_member();
  } else {
    clear_has_member();
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoAlliance.ManipulateMemberResp.member)
}

// -------------------------------------------------------------------

// KickOutReq

// required uint32 memberUid = 1;
inline bool KickOutReq::has_memberuid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void KickOutReq::set_has_memberuid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void KickOutReq::clear_has_memberuid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void KickOutReq::clear_memberuid() {
  memberuid_ = 0u;
  clear_has_memberuid();
}
inline ::google::protobuf::uint32 KickOutReq::memberuid() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.KickOutReq.memberUid)
  return memberuid_;
}
inline void KickOutReq::set_memberuid(::google::protobuf::uint32 value) {
  set_has_memberuid();
  memberuid_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.KickOutReq.memberUid)
}

// -------------------------------------------------------------------

// RequestKickOutBC

// required uint32 aid = 1;
inline bool RequestKickOutBC::has_aid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RequestKickOutBC::set_has_aid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RequestKickOutBC::clear_has_aid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RequestKickOutBC::clear_aid() {
  aid_ = 0u;
  clear_has_aid();
}
inline ::google::protobuf::uint32 RequestKickOutBC::aid() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.RequestKickOutBC.aid)
  return aid_;
}
inline void RequestKickOutBC::set_aid(::google::protobuf::uint32 value) {
  set_has_aid();
  aid_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.RequestKickOutBC.aid)
}

// required uint32 uid = 2;
inline bool RequestKickOutBC::has_uid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RequestKickOutBC::set_has_uid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RequestKickOutBC::clear_has_uid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RequestKickOutBC::clear_uid() {
  uid_ = 0u;
  clear_has_uid();
}
inline ::google::protobuf::uint32 RequestKickOutBC::uid() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.RequestKickOutBC.uid)
  return uid_;
}
inline void RequestKickOutBC::set_uid(::google::protobuf::uint32 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.RequestKickOutBC.uid)
}

// required uint32 memberUid = 3;
inline bool RequestKickOutBC::has_memberuid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RequestKickOutBC::set_has_memberuid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RequestKickOutBC::clear_has_memberuid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RequestKickOutBC::clear_memberuid() {
  memberuid_ = 0u;
  clear_has_memberuid();
}
inline ::google::protobuf::uint32 RequestKickOutBC::memberuid() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.RequestKickOutBC.memberUid)
  return memberuid_;
}
inline void RequestKickOutBC::set_memberuid(::google::protobuf::uint32 value) {
  set_has_memberuid();
  memberuid_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.RequestKickOutBC.memberUid)
}

// -------------------------------------------------------------------

// ReplyKickOutBC

// required uint32 uid = 1;
inline bool ReplyKickOutBC::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReplyKickOutBC::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReplyKickOutBC::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReplyKickOutBC::clear_uid() {
  uid_ = 0u;
  clear_has_uid();
}
inline ::google::protobuf::uint32 ReplyKickOutBC::uid() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.ReplyKickOutBC.uid)
  return uid_;
}
inline void ReplyKickOutBC::set_uid(::google::protobuf::uint32 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.ReplyKickOutBC.uid)
}

// optional .ProtoAlliance.KickOutResp alliance = 2;
inline bool ReplyKickOutBC::has_alliance() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ReplyKickOutBC::set_has_alliance() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ReplyKickOutBC::clear_has_alliance() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ReplyKickOutBC::clear_alliance() {
  if (alliance_ != NULL) alliance_->::ProtoAlliance::KickOutResp::Clear();
  clear_has_alliance();
}
inline const ::ProtoAlliance::KickOutResp& ReplyKickOutBC::alliance() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.ReplyKickOutBC.alliance)
  return alliance_ != NULL ? *alliance_ : *default_instance_->alliance_;
}
inline ::ProtoAlliance::KickOutResp* ReplyKickOutBC::mutable_alliance() {
  set_has_alliance();
  if (alliance_ == NULL) alliance_ = new ::ProtoAlliance::KickOutResp;
  // @@protoc_insertion_point(field_mutable:ProtoAlliance.ReplyKickOutBC.alliance)
  return alliance_;
}
inline ::ProtoAlliance::KickOutResp* ReplyKickOutBC::release_alliance() {
  clear_has_alliance();
  ::ProtoAlliance::KickOutResp* temp = alliance_;
  alliance_ = NULL;
  return temp;
}
inline void ReplyKickOutBC::set_allocated_alliance(::ProtoAlliance::KickOutResp* alliance) {
  delete alliance_;
  alliance_ = alliance;
  if (alliance) {
    set_has_alliance();
  } else {
    clear_has_alliance();
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoAlliance.ReplyKickOutBC.alliance)
}

// -------------------------------------------------------------------

// RequestKickOutMemberBC

// required uint32 aid = 1;
inline bool RequestKickOutMemberBC::has_aid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RequestKickOutMemberBC::set_has_aid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RequestKickOutMemberBC::clear_has_aid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RequestKickOutMemberBC::clear_aid() {
  aid_ = 0u;
  clear_has_aid();
}
inline ::google::protobuf::uint32 RequestKickOutMemberBC::aid() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.RequestKickOutMemberBC.aid)
  return aid_;
}
inline void RequestKickOutMemberBC::set_aid(::google::protobuf::uint32 value) {
  set_has_aid();
  aid_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.RequestKickOutMemberBC.aid)
}

// required uint32 uid = 2;
inline bool RequestKickOutMemberBC::has_uid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RequestKickOutMemberBC::set_has_uid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RequestKickOutMemberBC::clear_has_uid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RequestKickOutMemberBC::clear_uid() {
  uid_ = 0u;
  clear_has_uid();
}
inline ::google::protobuf::uint32 RequestKickOutMemberBC::uid() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.RequestKickOutMemberBC.uid)
  return uid_;
}
inline void RequestKickOutMemberBC::set_uid(::google::protobuf::uint32 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.RequestKickOutMemberBC.uid)
}

// required uint32 memberUid = 3;
inline bool RequestKickOutMemberBC::has_memberuid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RequestKickOutMemberBC::set_has_memberuid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RequestKickOutMemberBC::clear_has_memberuid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RequestKickOutMemberBC::clear_memberuid() {
  memberuid_ = 0u;
  clear_has_memberuid();
}
inline ::google::protobuf::uint32 RequestKickOutMemberBC::memberuid() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.RequestKickOutMemberBC.memberUid)
  return memberuid_;
}
inline void RequestKickOutMemberBC::set_memberuid(::google::protobuf::uint32 value) {
  set_has_memberuid();
  memberuid_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.RequestKickOutMemberBC.memberUid)
}

// -------------------------------------------------------------------

// KickOutResp

// required uint32 memberUid = 1;
inline bool KickOutResp::has_memberuid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void KickOutResp::set_has_memberuid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void KickOutResp::clear_has_memberuid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void KickOutResp::clear_memberuid() {
  memberuid_ = 0u;
  clear_has_memberuid();
}
inline ::google::protobuf::uint32 KickOutResp::memberuid() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.KickOutResp.memberUid)
  return memberuid_;
}
inline void KickOutResp::set_memberuid(::google::protobuf::uint32 value) {
  set_has_memberuid();
  memberuid_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.KickOutResp.memberUid)
}

// -------------------------------------------------------------------

// TransferReq

// required uint32 memberUid = 1;
inline bool TransferReq::has_memberuid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TransferReq::set_has_memberuid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TransferReq::clear_has_memberuid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TransferReq::clear_memberuid() {
  memberuid_ = 0u;
  clear_has_memberuid();
}
inline ::google::protobuf::uint32 TransferReq::memberuid() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.TransferReq.memberUid)
  return memberuid_;
}
inline void TransferReq::set_memberuid(::google::protobuf::uint32 value) {
  set_has_memberuid();
  memberuid_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.TransferReq.memberUid)
}

// required bytes otherName = 2;
inline bool TransferReq::has_othername() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TransferReq::set_has_othername() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TransferReq::clear_has_othername() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TransferReq::clear_othername() {
  if (othername_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    othername_->clear();
  }
  clear_has_othername();
}
inline const ::std::string& TransferReq::othername() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.TransferReq.otherName)
  return *othername_;
}
inline void TransferReq::set_othername(const ::std::string& value) {
  set_has_othername();
  if (othername_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    othername_ = new ::std::string;
  }
  othername_->assign(value);
  // @@protoc_insertion_point(field_set:ProtoAlliance.TransferReq.otherName)
}
inline void TransferReq::set_othername(const char* value) {
  set_has_othername();
  if (othername_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    othername_ = new ::std::string;
  }
  othername_->assign(value);
  // @@protoc_insertion_point(field_set_char:ProtoAlliance.TransferReq.otherName)
}
inline void TransferReq::set_othername(const void* value, size_t size) {
  set_has_othername();
  if (othername_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    othername_ = new ::std::string;
  }
  othername_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ProtoAlliance.TransferReq.otherName)
}
inline ::std::string* TransferReq::mutable_othername() {
  set_has_othername();
  if (othername_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    othername_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:ProtoAlliance.TransferReq.otherName)
  return othername_;
}
inline ::std::string* TransferReq::release_othername() {
  clear_has_othername();
  if (othername_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = othername_;
    othername_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void TransferReq::set_allocated_othername(::std::string* othername) {
  if (othername_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete othername_;
  }
  if (othername) {
    set_has_othername();
    othername_ = othername;
  } else {
    clear_has_othername();
    othername_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoAlliance.TransferReq.otherName)
}

// -------------------------------------------------------------------

// RequestTransferBC

// required uint32 aid = 1;
inline bool RequestTransferBC::has_aid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RequestTransferBC::set_has_aid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RequestTransferBC::clear_has_aid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RequestTransferBC::clear_aid() {
  aid_ = 0u;
  clear_has_aid();
}
inline ::google::protobuf::uint32 RequestTransferBC::aid() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.RequestTransferBC.aid)
  return aid_;
}
inline void RequestTransferBC::set_aid(::google::protobuf::uint32 value) {
  set_has_aid();
  aid_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.RequestTransferBC.aid)
}

// required uint32 uid = 2;
inline bool RequestTransferBC::has_uid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RequestTransferBC::set_has_uid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RequestTransferBC::clear_has_uid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RequestTransferBC::clear_uid() {
  uid_ = 0u;
  clear_has_uid();
}
inline ::google::protobuf::uint32 RequestTransferBC::uid() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.RequestTransferBC.uid)
  return uid_;
}
inline void RequestTransferBC::set_uid(::google::protobuf::uint32 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.RequestTransferBC.uid)
}

// required uint32 memberUid = 3;
inline bool RequestTransferBC::has_memberuid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RequestTransferBC::set_has_memberuid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RequestTransferBC::clear_has_memberuid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RequestTransferBC::clear_memberuid() {
  memberuid_ = 0u;
  clear_has_memberuid();
}
inline ::google::protobuf::uint32 RequestTransferBC::memberuid() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.RequestTransferBC.memberUid)
  return memberuid_;
}
inline void RequestTransferBC::set_memberuid(::google::protobuf::uint32 value) {
  set_has_memberuid();
  memberuid_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.RequestTransferBC.memberUid)
}

// required bytes otherName = 4;
inline bool RequestTransferBC::has_othername() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RequestTransferBC::set_has_othername() {
  _has_bits_[0] |= 0x00000008u;
}
inline void RequestTransferBC::clear_has_othername() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void RequestTransferBC::clear_othername() {
  if (othername_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    othername_->clear();
  }
  clear_has_othername();
}
inline const ::std::string& RequestTransferBC::othername() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.RequestTransferBC.otherName)
  return *othername_;
}
inline void RequestTransferBC::set_othername(const ::std::string& value) {
  set_has_othername();
  if (othername_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    othername_ = new ::std::string;
  }
  othername_->assign(value);
  // @@protoc_insertion_point(field_set:ProtoAlliance.RequestTransferBC.otherName)
}
inline void RequestTransferBC::set_othername(const char* value) {
  set_has_othername();
  if (othername_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    othername_ = new ::std::string;
  }
  othername_->assign(value);
  // @@protoc_insertion_point(field_set_char:ProtoAlliance.RequestTransferBC.otherName)
}
inline void RequestTransferBC::set_othername(const void* value, size_t size) {
  set_has_othername();
  if (othername_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    othername_ = new ::std::string;
  }
  othername_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ProtoAlliance.RequestTransferBC.otherName)
}
inline ::std::string* RequestTransferBC::mutable_othername() {
  set_has_othername();
  if (othername_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    othername_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:ProtoAlliance.RequestTransferBC.otherName)
  return othername_;
}
inline ::std::string* RequestTransferBC::release_othername() {
  clear_has_othername();
  if (othername_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = othername_;
    othername_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void RequestTransferBC::set_allocated_othername(::std::string* othername) {
  if (othername_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete othername_;
  }
  if (othername) {
    set_has_othername();
    othername_ = othername;
  } else {
    clear_has_othername();
    othername_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoAlliance.RequestTransferBC.otherName)
}

// -------------------------------------------------------------------

// ReplyTransferBC

// required uint32 uid = 1;
inline bool ReplyTransferBC::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReplyTransferBC::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReplyTransferBC::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReplyTransferBC::clear_uid() {
  uid_ = 0u;
  clear_has_uid();
}
inline ::google::protobuf::uint32 ReplyTransferBC::uid() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.ReplyTransferBC.uid)
  return uid_;
}
inline void ReplyTransferBC::set_uid(::google::protobuf::uint32 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.ReplyTransferBC.uid)
}

// optional .ProtoAlliance.TransferResp alliance = 2;
inline bool ReplyTransferBC::has_alliance() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ReplyTransferBC::set_has_alliance() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ReplyTransferBC::clear_has_alliance() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ReplyTransferBC::clear_alliance() {
  if (alliance_ != NULL) alliance_->::ProtoAlliance::TransferResp::Clear();
  clear_has_alliance();
}
inline const ::ProtoAlliance::TransferResp& ReplyTransferBC::alliance() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.ReplyTransferBC.alliance)
  return alliance_ != NULL ? *alliance_ : *default_instance_->alliance_;
}
inline ::ProtoAlliance::TransferResp* ReplyTransferBC::mutable_alliance() {
  set_has_alliance();
  if (alliance_ == NULL) alliance_ = new ::ProtoAlliance::TransferResp;
  // @@protoc_insertion_point(field_mutable:ProtoAlliance.ReplyTransferBC.alliance)
  return alliance_;
}
inline ::ProtoAlliance::TransferResp* ReplyTransferBC::release_alliance() {
  clear_has_alliance();
  ::ProtoAlliance::TransferResp* temp = alliance_;
  alliance_ = NULL;
  return temp;
}
inline void ReplyTransferBC::set_allocated_alliance(::ProtoAlliance::TransferResp* alliance) {
  delete alliance_;
  alliance_ = alliance;
  if (alliance) {
    set_has_alliance();
  } else {
    clear_has_alliance();
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoAlliance.ReplyTransferBC.alliance)
}

// -------------------------------------------------------------------

// TransferResp

// required .ProtoAlliance.AllianceMemberCPP myself = 1;
inline bool TransferResp::has_myself() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TransferResp::set_has_myself() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TransferResp::clear_has_myself() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TransferResp::clear_myself() {
  if (myself_ != NULL) myself_->::ProtoAlliance::AllianceMemberCPP::Clear();
  clear_has_myself();
}
inline const ::ProtoAlliance::AllianceMemberCPP& TransferResp::myself() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.TransferResp.myself)
  return myself_ != NULL ? *myself_ : *default_instance_->myself_;
}
inline ::ProtoAlliance::AllianceMemberCPP* TransferResp::mutable_myself() {
  set_has_myself();
  if (myself_ == NULL) myself_ = new ::ProtoAlliance::AllianceMemberCPP;
  // @@protoc_insertion_point(field_mutable:ProtoAlliance.TransferResp.myself)
  return myself_;
}
inline ::ProtoAlliance::AllianceMemberCPP* TransferResp::release_myself() {
  clear_has_myself();
  ::ProtoAlliance::AllianceMemberCPP* temp = myself_;
  myself_ = NULL;
  return temp;
}
inline void TransferResp::set_allocated_myself(::ProtoAlliance::AllianceMemberCPP* myself) {
  delete myself_;
  myself_ = myself;
  if (myself) {
    set_has_myself();
  } else {
    clear_has_myself();
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoAlliance.TransferResp.myself)
}

// required .ProtoAlliance.AllianceMemberCPP other = 2;
inline bool TransferResp::has_other() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TransferResp::set_has_other() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TransferResp::clear_has_other() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TransferResp::clear_other() {
  if (other_ != NULL) other_->::ProtoAlliance::AllianceMemberCPP::Clear();
  clear_has_other();
}
inline const ::ProtoAlliance::AllianceMemberCPP& TransferResp::other() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.TransferResp.other)
  return other_ != NULL ? *other_ : *default_instance_->other_;
}
inline ::ProtoAlliance::AllianceMemberCPP* TransferResp::mutable_other() {
  set_has_other();
  if (other_ == NULL) other_ = new ::ProtoAlliance::AllianceMemberCPP;
  // @@protoc_insertion_point(field_mutable:ProtoAlliance.TransferResp.other)
  return other_;
}
inline ::ProtoAlliance::AllianceMemberCPP* TransferResp::release_other() {
  clear_has_other();
  ::ProtoAlliance::AllianceMemberCPP* temp = other_;
  other_ = NULL;
  return temp;
}
inline void TransferResp::set_allocated_other(::ProtoAlliance::AllianceMemberCPP* other) {
  delete other_;
  other_ = other;
  if (other) {
    set_has_other();
  } else {
    clear_has_other();
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoAlliance.TransferResp.other)
}

// required .ProtoAlliance.AllianceCPP alliance = 3;
inline bool TransferResp::has_alliance() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TransferResp::set_has_alliance() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TransferResp::clear_has_alliance() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TransferResp::clear_alliance() {
  if (alliance_ != NULL) alliance_->::ProtoAlliance::AllianceCPP::Clear();
  clear_has_alliance();
}
inline const ::ProtoAlliance::AllianceCPP& TransferResp::alliance() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.TransferResp.alliance)
  return alliance_ != NULL ? *alliance_ : *default_instance_->alliance_;
}
inline ::ProtoAlliance::AllianceCPP* TransferResp::mutable_alliance() {
  set_has_alliance();
  if (alliance_ == NULL) alliance_ = new ::ProtoAlliance::AllianceCPP;
  // @@protoc_insertion_point(field_mutable:ProtoAlliance.TransferResp.alliance)
  return alliance_;
}
inline ::ProtoAlliance::AllianceCPP* TransferResp::release_alliance() {
  clear_has_alliance();
  ::ProtoAlliance::AllianceCPP* temp = alliance_;
  alliance_ = NULL;
  return temp;
}
inline void TransferResp::set_allocated_alliance(::ProtoAlliance::AllianceCPP* alliance) {
  delete alliance_;
  alliance_ = alliance;
  if (alliance) {
    set_has_alliance();
  } else {
    clear_has_alliance();
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoAlliance.TransferResp.alliance)
}

// -------------------------------------------------------------------

// EditAllianceReq

// required uint32 flag = 1;
inline bool EditAllianceReq::has_flag() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EditAllianceReq::set_has_flag() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EditAllianceReq::clear_has_flag() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EditAllianceReq::clear_flag() {
  flag_ = 0u;
  clear_has_flag();
}
inline ::google::protobuf::uint32 EditAllianceReq::flag() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.EditAllianceReq.flag)
  return flag_;
}
inline void EditAllianceReq::set_flag(::google::protobuf::uint32 value) {
  set_has_flag();
  flag_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.EditAllianceReq.flag)
}

// required bytes description = 2;
inline bool EditAllianceReq::has_description() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void EditAllianceReq::set_has_description() {
  _has_bits_[0] |= 0x00000002u;
}
inline void EditAllianceReq::clear_has_description() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void EditAllianceReq::clear_description() {
  if (description_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    description_->clear();
  }
  clear_has_description();
}
inline const ::std::string& EditAllianceReq::description() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.EditAllianceReq.description)
  return *description_;
}
inline void EditAllianceReq::set_description(const ::std::string& value) {
  set_has_description();
  if (description_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    description_ = new ::std::string;
  }
  description_->assign(value);
  // @@protoc_insertion_point(field_set:ProtoAlliance.EditAllianceReq.description)
}
inline void EditAllianceReq::set_description(const char* value) {
  set_has_description();
  if (description_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    description_ = new ::std::string;
  }
  description_->assign(value);
  // @@protoc_insertion_point(field_set_char:ProtoAlliance.EditAllianceReq.description)
}
inline void EditAllianceReq::set_description(const void* value, size_t size) {
  set_has_description();
  if (description_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    description_ = new ::std::string;
  }
  description_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ProtoAlliance.EditAllianceReq.description)
}
inline ::std::string* EditAllianceReq::mutable_description() {
  set_has_description();
  if (description_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    description_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:ProtoAlliance.EditAllianceReq.description)
  return description_;
}
inline ::std::string* EditAllianceReq::release_description() {
  clear_has_description();
  if (description_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = description_;
    description_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void EditAllianceReq::set_allocated_description(::std::string* description) {
  if (description_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete description_;
  }
  if (description) {
    set_has_description();
    description_ = description;
  } else {
    clear_has_description();
    description_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoAlliance.EditAllianceReq.description)
}

// required uint32 applyType = 3;
inline bool EditAllianceReq::has_applytype() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void EditAllianceReq::set_has_applytype() {
  _has_bits_[0] |= 0x00000004u;
}
inline void EditAllianceReq::clear_has_applytype() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void EditAllianceReq::clear_applytype() {
  applytype_ = 0u;
  clear_has_applytype();
}
inline ::google::protobuf::uint32 EditAllianceReq::applytype() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.EditAllianceReq.applyType)
  return applytype_;
}
inline void EditAllianceReq::set_applytype(::google::protobuf::uint32 value) {
  set_has_applytype();
  applytype_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.EditAllianceReq.applyType)
}

// required uint32 applyLevelLimit = 4;
inline bool EditAllianceReq::has_applylevellimit() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void EditAllianceReq::set_has_applylevellimit() {
  _has_bits_[0] |= 0x00000008u;
}
inline void EditAllianceReq::clear_has_applylevellimit() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void EditAllianceReq::clear_applylevellimit() {
  applylevellimit_ = 0u;
  clear_has_applylevellimit();
}
inline ::google::protobuf::uint32 EditAllianceReq::applylevellimit() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.EditAllianceReq.applyLevelLimit)
  return applylevellimit_;
}
inline void EditAllianceReq::set_applylevellimit(::google::protobuf::uint32 value) {
  set_has_applylevellimit();
  applylevellimit_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.EditAllianceReq.applyLevelLimit)
}

// optional uint32 qqgroup = 5;
inline bool EditAllianceReq::has_qqgroup() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void EditAllianceReq::set_has_qqgroup() {
  _has_bits_[0] |= 0x00000010u;
}
inline void EditAllianceReq::clear_has_qqgroup() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void EditAllianceReq::clear_qqgroup() {
  qqgroup_ = 0u;
  clear_has_qqgroup();
}
inline ::google::protobuf::uint32 EditAllianceReq::qqgroup() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.EditAllianceReq.qqgroup)
  return qqgroup_;
}
inline void EditAllianceReq::set_qqgroup(::google::protobuf::uint32 value) {
  set_has_qqgroup();
  qqgroup_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.EditAllianceReq.qqgroup)
}

// -------------------------------------------------------------------

// RequestEditAllianceBC

// required uint32 aid = 1;
inline bool RequestEditAllianceBC::has_aid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RequestEditAllianceBC::set_has_aid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RequestEditAllianceBC::clear_has_aid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RequestEditAllianceBC::clear_aid() {
  aid_ = 0u;
  clear_has_aid();
}
inline ::google::protobuf::uint32 RequestEditAllianceBC::aid() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.RequestEditAllianceBC.aid)
  return aid_;
}
inline void RequestEditAllianceBC::set_aid(::google::protobuf::uint32 value) {
  set_has_aid();
  aid_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.RequestEditAllianceBC.aid)
}

// required uint32 uid = 2;
inline bool RequestEditAllianceBC::has_uid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RequestEditAllianceBC::set_has_uid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RequestEditAllianceBC::clear_has_uid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RequestEditAllianceBC::clear_uid() {
  uid_ = 0u;
  clear_has_uid();
}
inline ::google::protobuf::uint32 RequestEditAllianceBC::uid() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.RequestEditAllianceBC.uid)
  return uid_;
}
inline void RequestEditAllianceBC::set_uid(::google::protobuf::uint32 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.RequestEditAllianceBC.uid)
}

// required .ProtoAlliance.EditAllianceReq info = 3;
inline bool RequestEditAllianceBC::has_info() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RequestEditAllianceBC::set_has_info() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RequestEditAllianceBC::clear_has_info() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RequestEditAllianceBC::clear_info() {
  if (info_ != NULL) info_->::ProtoAlliance::EditAllianceReq::Clear();
  clear_has_info();
}
inline const ::ProtoAlliance::EditAllianceReq& RequestEditAllianceBC::info() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.RequestEditAllianceBC.info)
  return info_ != NULL ? *info_ : *default_instance_->info_;
}
inline ::ProtoAlliance::EditAllianceReq* RequestEditAllianceBC::mutable_info() {
  set_has_info();
  if (info_ == NULL) info_ = new ::ProtoAlliance::EditAllianceReq;
  // @@protoc_insertion_point(field_mutable:ProtoAlliance.RequestEditAllianceBC.info)
  return info_;
}
inline ::ProtoAlliance::EditAllianceReq* RequestEditAllianceBC::release_info() {
  clear_has_info();
  ::ProtoAlliance::EditAllianceReq* temp = info_;
  info_ = NULL;
  return temp;
}
inline void RequestEditAllianceBC::set_allocated_info(::ProtoAlliance::EditAllianceReq* info) {
  delete info_;
  info_ = info;
  if (info) {
    set_has_info();
  } else {
    clear_has_info();
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoAlliance.RequestEditAllianceBC.info)
}

// -------------------------------------------------------------------

// ReplyEditAllianceBC

// required uint32 uid = 1;
inline bool ReplyEditAllianceBC::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReplyEditAllianceBC::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReplyEditAllianceBC::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReplyEditAllianceBC::clear_uid() {
  uid_ = 0u;
  clear_has_uid();
}
inline ::google::protobuf::uint32 ReplyEditAllianceBC::uid() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.ReplyEditAllianceBC.uid)
  return uid_;
}
inline void ReplyEditAllianceBC::set_uid(::google::protobuf::uint32 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.ReplyEditAllianceBC.uid)
}

// optional .ProtoAlliance.EditAllianceResp alliance = 2;
inline bool ReplyEditAllianceBC::has_alliance() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ReplyEditAllianceBC::set_has_alliance() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ReplyEditAllianceBC::clear_has_alliance() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ReplyEditAllianceBC::clear_alliance() {
  if (alliance_ != NULL) alliance_->::ProtoAlliance::EditAllianceResp::Clear();
  clear_has_alliance();
}
inline const ::ProtoAlliance::EditAllianceResp& ReplyEditAllianceBC::alliance() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.ReplyEditAllianceBC.alliance)
  return alliance_ != NULL ? *alliance_ : *default_instance_->alliance_;
}
inline ::ProtoAlliance::EditAllianceResp* ReplyEditAllianceBC::mutable_alliance() {
  set_has_alliance();
  if (alliance_ == NULL) alliance_ = new ::ProtoAlliance::EditAllianceResp;
  // @@protoc_insertion_point(field_mutable:ProtoAlliance.ReplyEditAllianceBC.alliance)
  return alliance_;
}
inline ::ProtoAlliance::EditAllianceResp* ReplyEditAllianceBC::release_alliance() {
  clear_has_alliance();
  ::ProtoAlliance::EditAllianceResp* temp = alliance_;
  alliance_ = NULL;
  return temp;
}
inline void ReplyEditAllianceBC::set_allocated_alliance(::ProtoAlliance::EditAllianceResp* alliance) {
  delete alliance_;
  alliance_ = alliance;
  if (alliance) {
    set_has_alliance();
  } else {
    clear_has_alliance();
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoAlliance.ReplyEditAllianceBC.alliance)
}

// -------------------------------------------------------------------

// EditAllianceResp

// required .ProtoAlliance.AllianceCPP alliance = 1;
inline bool EditAllianceResp::has_alliance() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EditAllianceResp::set_has_alliance() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EditAllianceResp::clear_has_alliance() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EditAllianceResp::clear_alliance() {
  if (alliance_ != NULL) alliance_->::ProtoAlliance::AllianceCPP::Clear();
  clear_has_alliance();
}
inline const ::ProtoAlliance::AllianceCPP& EditAllianceResp::alliance() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.EditAllianceResp.alliance)
  return alliance_ != NULL ? *alliance_ : *default_instance_->alliance_;
}
inline ::ProtoAlliance::AllianceCPP* EditAllianceResp::mutable_alliance() {
  set_has_alliance();
  if (alliance_ == NULL) alliance_ = new ::ProtoAlliance::AllianceCPP;
  // @@protoc_insertion_point(field_mutable:ProtoAlliance.EditAllianceResp.alliance)
  return alliance_;
}
inline ::ProtoAlliance::AllianceCPP* EditAllianceResp::release_alliance() {
  clear_has_alliance();
  ::ProtoAlliance::AllianceCPP* temp = alliance_;
  alliance_ = NULL;
  return temp;
}
inline void EditAllianceResp::set_allocated_alliance(::ProtoAlliance::AllianceCPP* alliance) {
  delete alliance_;
  alliance_ = alliance;
  if (alliance) {
    set_has_alliance();
  } else {
    clear_has_alliance();
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoAlliance.EditAllianceResp.alliance)
}

// -------------------------------------------------------------------

// AllianceDonationCPP

// required uint32 applyUid = 1;
inline bool AllianceDonationCPP::has_applyuid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AllianceDonationCPP::set_has_applyuid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AllianceDonationCPP::clear_has_applyuid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AllianceDonationCPP::clear_applyuid() {
  applyuid_ = 0u;
  clear_has_applyuid();
}
inline ::google::protobuf::uint32 AllianceDonationCPP::applyuid() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.AllianceDonationCPP.applyUid)
  return applyuid_;
}
inline void AllianceDonationCPP::set_applyuid(::google::protobuf::uint32 value) {
  set_has_applyuid();
  applyuid_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.AllianceDonationCPP.applyUid)
}

// required uint32 propsid = 2;
inline bool AllianceDonationCPP::has_propsid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AllianceDonationCPP::set_has_propsid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AllianceDonationCPP::clear_has_propsid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AllianceDonationCPP::clear_propsid() {
  propsid_ = 0u;
  clear_has_propsid();
}
inline ::google::protobuf::uint32 AllianceDonationCPP::propsid() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.AllianceDonationCPP.propsid)
  return propsid_;
}
inline void AllianceDonationCPP::set_propsid(::google::protobuf::uint32 value) {
  set_has_propsid();
  propsid_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.AllianceDonationCPP.propsid)
}

// required uint32 count = 3;
inline bool AllianceDonationCPP::has_count() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AllianceDonationCPP::set_has_count() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AllianceDonationCPP::clear_has_count() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AllianceDonationCPP::clear_count() {
  count_ = 0u;
  clear_has_count();
}
inline ::google::protobuf::uint32 AllianceDonationCPP::count() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.AllianceDonationCPP.count)
  return count_;
}
inline void AllianceDonationCPP::set_count(::google::protobuf::uint32 value) {
  set_has_count();
  count_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.AllianceDonationCPP.count)
}

// required uint32 donateCount = 4;
inline bool AllianceDonationCPP::has_donatecount() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void AllianceDonationCPP::set_has_donatecount() {
  _has_bits_[0] |= 0x00000008u;
}
inline void AllianceDonationCPP::clear_has_donatecount() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void AllianceDonationCPP::clear_donatecount() {
  donatecount_ = 0u;
  clear_has_donatecount();
}
inline ::google::protobuf::uint32 AllianceDonationCPP::donatecount() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.AllianceDonationCPP.donateCount)
  return donatecount_;
}
inline void AllianceDonationCPP::set_donatecount(::google::protobuf::uint32 value) {
  set_has_donatecount();
  donatecount_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.AllianceDonationCPP.donateCount)
}

// required uint32 fetchCount = 5;
inline bool AllianceDonationCPP::has_fetchcount() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void AllianceDonationCPP::set_has_fetchcount() {
  _has_bits_[0] |= 0x00000010u;
}
inline void AllianceDonationCPP::clear_has_fetchcount() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void AllianceDonationCPP::clear_fetchcount() {
  fetchcount_ = 0u;
  clear_has_fetchcount();
}
inline ::google::protobuf::uint32 AllianceDonationCPP::fetchcount() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.AllianceDonationCPP.fetchCount)
  return fetchcount_;
}
inline void AllianceDonationCPP::set_fetchcount(::google::protobuf::uint32 value) {
  set_has_fetchcount();
  fetchcount_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.AllianceDonationCPP.fetchCount)
}

// required uint32 status = 6;
inline bool AllianceDonationCPP::has_status() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void AllianceDonationCPP::set_has_status() {
  _has_bits_[0] |= 0x00000020u;
}
inline void AllianceDonationCPP::clear_has_status() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void AllianceDonationCPP::clear_status() {
  status_ = 0u;
  clear_has_status();
}
inline ::google::protobuf::uint32 AllianceDonationCPP::status() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.AllianceDonationCPP.status)
  return status_;
}
inline void AllianceDonationCPP::set_status(::google::protobuf::uint32 value) {
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.AllianceDonationCPP.status)
}

// required bytes name = 7;
inline bool AllianceDonationCPP::has_name() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void AllianceDonationCPP::set_has_name() {
  _has_bits_[0] |= 0x00000040u;
}
inline void AllianceDonationCPP::clear_has_name() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void AllianceDonationCPP::clear_name() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& AllianceDonationCPP::name() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.AllianceDonationCPP.name)
  return *name_;
}
inline void AllianceDonationCPP::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set:ProtoAlliance.AllianceDonationCPP.name)
}
inline void AllianceDonationCPP::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set_char:ProtoAlliance.AllianceDonationCPP.name)
}
inline void AllianceDonationCPP::set_name(const void* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ProtoAlliance.AllianceDonationCPP.name)
}
inline ::std::string* AllianceDonationCPP::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:ProtoAlliance.AllianceDonationCPP.name)
  return name_;
}
inline ::std::string* AllianceDonationCPP::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void AllianceDonationCPP::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoAlliance.AllianceDonationCPP.name)
}

// repeated uint32 donateUid = 8;
inline int AllianceDonationCPP::donateuid_size() const {
  return donateuid_.size();
}
inline void AllianceDonationCPP::clear_donateuid() {
  donateuid_.Clear();
}
inline ::google::protobuf::uint32 AllianceDonationCPP::donateuid(int index) const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.AllianceDonationCPP.donateUid)
  return donateuid_.Get(index);
}
inline void AllianceDonationCPP::set_donateuid(int index, ::google::protobuf::uint32 value) {
  donateuid_.Set(index, value);
  // @@protoc_insertion_point(field_set:ProtoAlliance.AllianceDonationCPP.donateUid)
}
inline void AllianceDonationCPP::add_donateuid(::google::protobuf::uint32 value) {
  donateuid_.Add(value);
  // @@protoc_insertion_point(field_add:ProtoAlliance.AllianceDonationCPP.donateUid)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
AllianceDonationCPP::donateuid() const {
  // @@protoc_insertion_point(field_list:ProtoAlliance.AllianceDonationCPP.donateUid)
  return donateuid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
AllianceDonationCPP::mutable_donateuid() {
  // @@protoc_insertion_point(field_mutable_list:ProtoAlliance.AllianceDonationCPP.donateUid)
  return &donateuid_;
}

// repeated uint32 donateTimes = 9;
inline int AllianceDonationCPP::donatetimes_size() const {
  return donatetimes_.size();
}
inline void AllianceDonationCPP::clear_donatetimes() {
  donatetimes_.Clear();
}
inline ::google::protobuf::uint32 AllianceDonationCPP::donatetimes(int index) const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.AllianceDonationCPP.donateTimes)
  return donatetimes_.Get(index);
}
inline void AllianceDonationCPP::set_donatetimes(int index, ::google::protobuf::uint32 value) {
  donatetimes_.Set(index, value);
  // @@protoc_insertion_point(field_set:ProtoAlliance.AllianceDonationCPP.donateTimes)
}
inline void AllianceDonationCPP::add_donatetimes(::google::protobuf::uint32 value) {
  donatetimes_.Add(value);
  // @@protoc_insertion_point(field_add:ProtoAlliance.AllianceDonationCPP.donateTimes)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
AllianceDonationCPP::donatetimes() const {
  // @@protoc_insertion_point(field_list:ProtoAlliance.AllianceDonationCPP.donateTimes)
  return donatetimes_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
AllianceDonationCPP::mutable_donatetimes() {
  // @@protoc_insertion_point(field_mutable_list:ProtoAlliance.AllianceDonationCPP.donateTimes)
  return &donatetimes_;
}

// repeated bytes donateName = 10;
inline int AllianceDonationCPP::donatename_size() const {
  return donatename_.size();
}
inline void AllianceDonationCPP::clear_donatename() {
  donatename_.Clear();
}
inline const ::std::string& AllianceDonationCPP::donatename(int index) const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.AllianceDonationCPP.donateName)
  return donatename_.Get(index);
}
inline ::std::string* AllianceDonationCPP::mutable_donatename(int index) {
  // @@protoc_insertion_point(field_mutable:ProtoAlliance.AllianceDonationCPP.donateName)
  return donatename_.Mutable(index);
}
inline void AllianceDonationCPP::set_donatename(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:ProtoAlliance.AllianceDonationCPP.donateName)
  donatename_.Mutable(index)->assign(value);
}
inline void AllianceDonationCPP::set_donatename(int index, const char* value) {
  donatename_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:ProtoAlliance.AllianceDonationCPP.donateName)
}
inline void AllianceDonationCPP::set_donatename(int index, const void* value, size_t size) {
  donatename_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ProtoAlliance.AllianceDonationCPP.donateName)
}
inline ::std::string* AllianceDonationCPP::add_donatename() {
  return donatename_.Add();
}
inline void AllianceDonationCPP::add_donatename(const ::std::string& value) {
  donatename_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:ProtoAlliance.AllianceDonationCPP.donateName)
}
inline void AllianceDonationCPP::add_donatename(const char* value) {
  donatename_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:ProtoAlliance.AllianceDonationCPP.donateName)
}
inline void AllianceDonationCPP::add_donatename(const void* value, size_t size) {
  donatename_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:ProtoAlliance.AllianceDonationCPP.donateName)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
AllianceDonationCPP::donatename() const {
  // @@protoc_insertion_point(field_list:ProtoAlliance.AllianceDonationCPP.donateName)
  return donatename_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
AllianceDonationCPP::mutable_donatename() {
  // @@protoc_insertion_point(field_mutable_list:ProtoAlliance.AllianceDonationCPP.donateName)
  return &donatename_;
}

// required uint32 applyts = 11;
inline bool AllianceDonationCPP::has_applyts() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void AllianceDonationCPP::set_has_applyts() {
  _has_bits_[0] |= 0x00000400u;
}
inline void AllianceDonationCPP::clear_has_applyts() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void AllianceDonationCPP::clear_applyts() {
  applyts_ = 0u;
  clear_has_applyts();
}
inline ::google::protobuf::uint32 AllianceDonationCPP::applyts() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.AllianceDonationCPP.applyts)
  return applyts_;
}
inline void AllianceDonationCPP::set_applyts(::google::protobuf::uint32 value) {
  set_has_applyts();
  applyts_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.AllianceDonationCPP.applyts)
}

// required uint32 level = 12;
inline bool AllianceDonationCPP::has_level() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void AllianceDonationCPP::set_has_level() {
  _has_bits_[0] |= 0x00000800u;
}
inline void AllianceDonationCPP::clear_has_level() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void AllianceDonationCPP::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 AllianceDonationCPP::level() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.AllianceDonationCPP.level)
  return level_;
}
inline void AllianceDonationCPP::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.AllianceDonationCPP.level)
}

// -------------------------------------------------------------------

// SeekDonationReq

// required uint32 propsid = 1;
inline bool SeekDonationReq::has_propsid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SeekDonationReq::set_has_propsid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SeekDonationReq::clear_has_propsid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SeekDonationReq::clear_propsid() {
  propsid_ = 0u;
  clear_has_propsid();
}
inline ::google::protobuf::uint32 SeekDonationReq::propsid() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.SeekDonationReq.propsid)
  return propsid_;
}
inline void SeekDonationReq::set_propsid(::google::protobuf::uint32 value) {
  set_has_propsid();
  propsid_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.SeekDonationReq.propsid)
}

// required uint32 count = 2;
inline bool SeekDonationReq::has_count() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SeekDonationReq::set_has_count() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SeekDonationReq::clear_has_count() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SeekDonationReq::clear_count() {
  count_ = 0u;
  clear_has_count();
}
inline ::google::protobuf::uint32 SeekDonationReq::count() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.SeekDonationReq.count)
  return count_;
}
inline void SeekDonationReq::set_count(::google::protobuf::uint32 value) {
  set_has_count();
  count_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.SeekDonationReq.count)
}

// -------------------------------------------------------------------

// RequestSeekDonationBC

// required uint32 uid = 1;
inline bool RequestSeekDonationBC::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RequestSeekDonationBC::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RequestSeekDonationBC::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RequestSeekDonationBC::clear_uid() {
  uid_ = 0u;
  clear_has_uid();
}
inline ::google::protobuf::uint32 RequestSeekDonationBC::uid() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.RequestSeekDonationBC.uid)
  return uid_;
}
inline void RequestSeekDonationBC::set_uid(::google::protobuf::uint32 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.RequestSeekDonationBC.uid)
}

// required uint32 count = 2;
inline bool RequestSeekDonationBC::has_count() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RequestSeekDonationBC::set_has_count() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RequestSeekDonationBC::clear_has_count() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RequestSeekDonationBC::clear_count() {
  count_ = 0u;
  clear_has_count();
}
inline ::google::protobuf::uint32 RequestSeekDonationBC::count() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.RequestSeekDonationBC.count)
  return count_;
}
inline void RequestSeekDonationBC::set_count(::google::protobuf::uint32 value) {
  set_has_count();
  count_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.RequestSeekDonationBC.count)
}

// required uint32 aid = 3;
inline bool RequestSeekDonationBC::has_aid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RequestSeekDonationBC::set_has_aid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RequestSeekDonationBC::clear_has_aid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RequestSeekDonationBC::clear_aid() {
  aid_ = 0u;
  clear_has_aid();
}
inline ::google::protobuf::uint32 RequestSeekDonationBC::aid() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.RequestSeekDonationBC.aid)
  return aid_;
}
inline void RequestSeekDonationBC::set_aid(::google::protobuf::uint32 value) {
  set_has_aid();
  aid_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.RequestSeekDonationBC.aid)
}

// required uint32 propsid = 4;
inline bool RequestSeekDonationBC::has_propsid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RequestSeekDonationBC::set_has_propsid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void RequestSeekDonationBC::clear_has_propsid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void RequestSeekDonationBC::clear_propsid() {
  propsid_ = 0u;
  clear_has_propsid();
}
inline ::google::protobuf::uint32 RequestSeekDonationBC::propsid() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.RequestSeekDonationBC.propsid)
  return propsid_;
}
inline void RequestSeekDonationBC::set_propsid(::google::protobuf::uint32 value) {
  set_has_propsid();
  propsid_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.RequestSeekDonationBC.propsid)
}

// required uint32 cdtime = 5;
inline bool RequestSeekDonationBC::has_cdtime() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void RequestSeekDonationBC::set_has_cdtime() {
  _has_bits_[0] |= 0x00000010u;
}
inline void RequestSeekDonationBC::clear_has_cdtime() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void RequestSeekDonationBC::clear_cdtime() {
  cdtime_ = 0u;
  clear_has_cdtime();
}
inline ::google::protobuf::uint32 RequestSeekDonationBC::cdtime() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.RequestSeekDonationBC.cdtime)
  return cdtime_;
}
inline void RequestSeekDonationBC::set_cdtime(::google::protobuf::uint32 value) {
  set_has_cdtime();
  cdtime_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.RequestSeekDonationBC.cdtime)
}

// required bytes name = 6;
inline bool RequestSeekDonationBC::has_name() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void RequestSeekDonationBC::set_has_name() {
  _has_bits_[0] |= 0x00000020u;
}
inline void RequestSeekDonationBC::clear_has_name() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void RequestSeekDonationBC::clear_name() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& RequestSeekDonationBC::name() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.RequestSeekDonationBC.name)
  return *name_;
}
inline void RequestSeekDonationBC::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set:ProtoAlliance.RequestSeekDonationBC.name)
}
inline void RequestSeekDonationBC::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set_char:ProtoAlliance.RequestSeekDonationBC.name)
}
inline void RequestSeekDonationBC::set_name(const void* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ProtoAlliance.RequestSeekDonationBC.name)
}
inline ::std::string* RequestSeekDonationBC::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:ProtoAlliance.RequestSeekDonationBC.name)
  return name_;
}
inline ::std::string* RequestSeekDonationBC::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void RequestSeekDonationBC::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoAlliance.RequestSeekDonationBC.name)
}

// required uint32 level = 7;
inline bool RequestSeekDonationBC::has_level() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void RequestSeekDonationBC::set_has_level() {
  _has_bits_[0] |= 0x00000040u;
}
inline void RequestSeekDonationBC::clear_has_level() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void RequestSeekDonationBC::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 RequestSeekDonationBC::level() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.RequestSeekDonationBC.level)
  return level_;
}
inline void RequestSeekDonationBC::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.RequestSeekDonationBC.level)
}

// -------------------------------------------------------------------

// ReplySeekDonationBC

// required uint32 uid = 1;
inline bool ReplySeekDonationBC::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReplySeekDonationBC::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReplySeekDonationBC::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReplySeekDonationBC::clear_uid() {
  uid_ = 0u;
  clear_has_uid();
}
inline ::google::protobuf::uint32 ReplySeekDonationBC::uid() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.ReplySeekDonationBC.uid)
  return uid_;
}
inline void ReplySeekDonationBC::set_uid(::google::protobuf::uint32 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.ReplySeekDonationBC.uid)
}

// required uint32 cdtime = 2;
inline bool ReplySeekDonationBC::has_cdtime() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ReplySeekDonationBC::set_has_cdtime() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ReplySeekDonationBC::clear_has_cdtime() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ReplySeekDonationBC::clear_cdtime() {
  cdtime_ = 0u;
  clear_has_cdtime();
}
inline ::google::protobuf::uint32 ReplySeekDonationBC::cdtime() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.ReplySeekDonationBC.cdtime)
  return cdtime_;
}
inline void ReplySeekDonationBC::set_cdtime(::google::protobuf::uint32 value) {
  set_has_cdtime();
  cdtime_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.ReplySeekDonationBC.cdtime)
}

// optional .ProtoAlliance.SeekDonationResp alliance = 3;
inline bool ReplySeekDonationBC::has_alliance() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ReplySeekDonationBC::set_has_alliance() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ReplySeekDonationBC::clear_has_alliance() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ReplySeekDonationBC::clear_alliance() {
  if (alliance_ != NULL) alliance_->::ProtoAlliance::SeekDonationResp::Clear();
  clear_has_alliance();
}
inline const ::ProtoAlliance::SeekDonationResp& ReplySeekDonationBC::alliance() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.ReplySeekDonationBC.alliance)
  return alliance_ != NULL ? *alliance_ : *default_instance_->alliance_;
}
inline ::ProtoAlliance::SeekDonationResp* ReplySeekDonationBC::mutable_alliance() {
  set_has_alliance();
  if (alliance_ == NULL) alliance_ = new ::ProtoAlliance::SeekDonationResp;
  // @@protoc_insertion_point(field_mutable:ProtoAlliance.ReplySeekDonationBC.alliance)
  return alliance_;
}
inline ::ProtoAlliance::SeekDonationResp* ReplySeekDonationBC::release_alliance() {
  clear_has_alliance();
  ::ProtoAlliance::SeekDonationResp* temp = alliance_;
  alliance_ = NULL;
  return temp;
}
inline void ReplySeekDonationBC::set_allocated_alliance(::ProtoAlliance::SeekDonationResp* alliance) {
  delete alliance_;
  alliance_ = alliance;
  if (alliance) {
    set_has_alliance();
  } else {
    clear_has_alliance();
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoAlliance.ReplySeekDonationBC.alliance)
}

// -------------------------------------------------------------------

// SeekDonationResp

// required .ProtoAlliance.AllianceDonationCPP donation = 1;
inline bool SeekDonationResp::has_donation() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SeekDonationResp::set_has_donation() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SeekDonationResp::clear_has_donation() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SeekDonationResp::clear_donation() {
  if (donation_ != NULL) donation_->::ProtoAlliance::AllianceDonationCPP::Clear();
  clear_has_donation();
}
inline const ::ProtoAlliance::AllianceDonationCPP& SeekDonationResp::donation() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.SeekDonationResp.donation)
  return donation_ != NULL ? *donation_ : *default_instance_->donation_;
}
inline ::ProtoAlliance::AllianceDonationCPP* SeekDonationResp::mutable_donation() {
  set_has_donation();
  if (donation_ == NULL) donation_ = new ::ProtoAlliance::AllianceDonationCPP;
  // @@protoc_insertion_point(field_mutable:ProtoAlliance.SeekDonationResp.donation)
  return donation_;
}
inline ::ProtoAlliance::AllianceDonationCPP* SeekDonationResp::release_donation() {
  clear_has_donation();
  ::ProtoAlliance::AllianceDonationCPP* temp = donation_;
  donation_ = NULL;
  return temp;
}
inline void SeekDonationResp::set_allocated_donation(::ProtoAlliance::AllianceDonationCPP* donation) {
  delete donation_;
  donation_ = donation;
  if (donation) {
    set_has_donation();
  } else {
    clear_has_donation();
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoAlliance.SeekDonationResp.donation)
}

// required uint32 nextDonationTs = 2;
inline bool SeekDonationResp::has_nextdonationts() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SeekDonationResp::set_has_nextdonationts() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SeekDonationResp::clear_has_nextdonationts() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SeekDonationResp::clear_nextdonationts() {
  nextdonationts_ = 0u;
  clear_has_nextdonationts();
}
inline ::google::protobuf::uint32 SeekDonationResp::nextdonationts() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.SeekDonationResp.nextDonationTs)
  return nextdonationts_;
}
inline void SeekDonationResp::set_nextdonationts(::google::protobuf::uint32 value) {
  set_has_nextdonationts();
  nextdonationts_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.SeekDonationResp.nextDonationTs)
}

// -------------------------------------------------------------------

// CutUpDonationCDReq

// optional uint32 type = 1;
inline bool CutUpDonationCDReq::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CutUpDonationCDReq::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CutUpDonationCDReq::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CutUpDonationCDReq::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 CutUpDonationCDReq::type() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.CutUpDonationCDReq.type)
  return type_;
}
inline void CutUpDonationCDReq::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.CutUpDonationCDReq.type)
}

// -------------------------------------------------------------------

// CutUpDonationCDResp

// required uint32 nextDonationTs = 1;
inline bool CutUpDonationCDResp::has_nextdonationts() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CutUpDonationCDResp::set_has_nextdonationts() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CutUpDonationCDResp::clear_has_nextdonationts() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CutUpDonationCDResp::clear_nextdonationts() {
  nextdonationts_ = 0u;
  clear_has_nextdonationts();
}
inline ::google::protobuf::uint32 CutUpDonationCDResp::nextdonationts() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.CutUpDonationCDResp.nextDonationTs)
  return nextdonationts_;
}
inline void CutUpDonationCDResp::set_nextdonationts(::google::protobuf::uint32 value) {
  set_has_nextdonationts();
  nextdonationts_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.CutUpDonationCDResp.nextDonationTs)
}

// optional .DataCommon.CommonItemsCPP commons = 2;
inline bool CutUpDonationCDResp::has_commons() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CutUpDonationCDResp::set_has_commons() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CutUpDonationCDResp::clear_has_commons() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CutUpDonationCDResp::clear_commons() {
  if (commons_ != NULL) commons_->::DataCommon::CommonItemsCPP::Clear();
  clear_has_commons();
}
inline const ::DataCommon::CommonItemsCPP& CutUpDonationCDResp::commons() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.CutUpDonationCDResp.commons)
  return commons_ != NULL ? *commons_ : *default_instance_->commons_;
}
inline ::DataCommon::CommonItemsCPP* CutUpDonationCDResp::mutable_commons() {
  set_has_commons();
  if (commons_ == NULL) commons_ = new ::DataCommon::CommonItemsCPP;
  // @@protoc_insertion_point(field_mutable:ProtoAlliance.CutUpDonationCDResp.commons)
  return commons_;
}
inline ::DataCommon::CommonItemsCPP* CutUpDonationCDResp::release_commons() {
  clear_has_commons();
  ::DataCommon::CommonItemsCPP* temp = commons_;
  commons_ = NULL;
  return temp;
}
inline void CutUpDonationCDResp::set_allocated_commons(::DataCommon::CommonItemsCPP* commons) {
  delete commons_;
  commons_ = commons;
  if (commons) {
    set_has_commons();
  } else {
    clear_has_commons();
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoAlliance.CutUpDonationCDResp.commons)
}

// -------------------------------------------------------------------

// OfferDonationReq

// required uint32 applyUid = 1;
inline bool OfferDonationReq::has_applyuid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OfferDonationReq::set_has_applyuid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void OfferDonationReq::clear_has_applyuid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void OfferDonationReq::clear_applyuid() {
  applyuid_ = 0u;
  clear_has_applyuid();
}
inline ::google::protobuf::uint32 OfferDonationReq::applyuid() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.OfferDonationReq.applyUid)
  return applyuid_;
}
inline void OfferDonationReq::set_applyuid(::google::protobuf::uint32 value) {
  set_has_applyuid();
  applyuid_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.OfferDonationReq.applyUid)
}

// required uint32 propsid = 2;
inline bool OfferDonationReq::has_propsid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void OfferDonationReq::set_has_propsid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void OfferDonationReq::clear_has_propsid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void OfferDonationReq::clear_propsid() {
  propsid_ = 0u;
  clear_has_propsid();
}
inline ::google::protobuf::uint32 OfferDonationReq::propsid() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.OfferDonationReq.propsid)
  return propsid_;
}
inline void OfferDonationReq::set_propsid(::google::protobuf::uint32 value) {
  set_has_propsid();
  propsid_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.OfferDonationReq.propsid)
}

// -------------------------------------------------------------------

// RequestOfferDonationBC

// required uint32 uid = 1;
inline bool RequestOfferDonationBC::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RequestOfferDonationBC::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RequestOfferDonationBC::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RequestOfferDonationBC::clear_uid() {
  uid_ = 0u;
  clear_has_uid();
}
inline ::google::protobuf::uint32 RequestOfferDonationBC::uid() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.RequestOfferDonationBC.uid)
  return uid_;
}
inline void RequestOfferDonationBC::set_uid(::google::protobuf::uint32 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.RequestOfferDonationBC.uid)
}

// required uint32 applyUid = 2;
inline bool RequestOfferDonationBC::has_applyuid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RequestOfferDonationBC::set_has_applyuid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RequestOfferDonationBC::clear_has_applyuid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RequestOfferDonationBC::clear_applyuid() {
  applyuid_ = 0u;
  clear_has_applyuid();
}
inline ::google::protobuf::uint32 RequestOfferDonationBC::applyuid() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.RequestOfferDonationBC.applyUid)
  return applyuid_;
}
inline void RequestOfferDonationBC::set_applyuid(::google::protobuf::uint32 value) {
  set_has_applyuid();
  applyuid_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.RequestOfferDonationBC.applyUid)
}

// required uint32 aid = 3;
inline bool RequestOfferDonationBC::has_aid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RequestOfferDonationBC::set_has_aid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RequestOfferDonationBC::clear_has_aid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RequestOfferDonationBC::clear_aid() {
  aid_ = 0u;
  clear_has_aid();
}
inline ::google::protobuf::uint32 RequestOfferDonationBC::aid() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.RequestOfferDonationBC.aid)
  return aid_;
}
inline void RequestOfferDonationBC::set_aid(::google::protobuf::uint32 value) {
  set_has_aid();
  aid_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.RequestOfferDonationBC.aid)
}

// required uint32 propsid = 4;
inline bool RequestOfferDonationBC::has_propsid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RequestOfferDonationBC::set_has_propsid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void RequestOfferDonationBC::clear_has_propsid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void RequestOfferDonationBC::clear_propsid() {
  propsid_ = 0u;
  clear_has_propsid();
}
inline ::google::protobuf::uint32 RequestOfferDonationBC::propsid() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.RequestOfferDonationBC.propsid)
  return propsid_;
}
inline void RequestOfferDonationBC::set_propsid(::google::protobuf::uint32 value) {
  set_has_propsid();
  propsid_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.RequestOfferDonationBC.propsid)
}

// required bytes name = 5;
inline bool RequestOfferDonationBC::has_name() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void RequestOfferDonationBC::set_has_name() {
  _has_bits_[0] |= 0x00000010u;
}
inline void RequestOfferDonationBC::clear_has_name() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void RequestOfferDonationBC::clear_name() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& RequestOfferDonationBC::name() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.RequestOfferDonationBC.name)
  return *name_;
}
inline void RequestOfferDonationBC::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set:ProtoAlliance.RequestOfferDonationBC.name)
}
inline void RequestOfferDonationBC::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set_char:ProtoAlliance.RequestOfferDonationBC.name)
}
inline void RequestOfferDonationBC::set_name(const void* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ProtoAlliance.RequestOfferDonationBC.name)
}
inline ::std::string* RequestOfferDonationBC::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:ProtoAlliance.RequestOfferDonationBC.name)
  return name_;
}
inline ::std::string* RequestOfferDonationBC::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void RequestOfferDonationBC::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoAlliance.RequestOfferDonationBC.name)
}

// required .DataCommon.CommonItemsCPP commons = 6;
inline bool RequestOfferDonationBC::has_commons() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void RequestOfferDonationBC::set_has_commons() {
  _has_bits_[0] |= 0x00000020u;
}
inline void RequestOfferDonationBC::clear_has_commons() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void RequestOfferDonationBC::clear_commons() {
  if (commons_ != NULL) commons_->::DataCommon::CommonItemsCPP::Clear();
  clear_has_commons();
}
inline const ::DataCommon::CommonItemsCPP& RequestOfferDonationBC::commons() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.RequestOfferDonationBC.commons)
  return commons_ != NULL ? *commons_ : *default_instance_->commons_;
}
inline ::DataCommon::CommonItemsCPP* RequestOfferDonationBC::mutable_commons() {
  set_has_commons();
  if (commons_ == NULL) commons_ = new ::DataCommon::CommonItemsCPP;
  // @@protoc_insertion_point(field_mutable:ProtoAlliance.RequestOfferDonationBC.commons)
  return commons_;
}
inline ::DataCommon::CommonItemsCPP* RequestOfferDonationBC::release_commons() {
  clear_has_commons();
  ::DataCommon::CommonItemsCPP* temp = commons_;
  commons_ = NULL;
  return temp;
}
inline void RequestOfferDonationBC::set_allocated_commons(::DataCommon::CommonItemsCPP* commons) {
  delete commons_;
  commons_ = commons;
  if (commons) {
    set_has_commons();
  } else {
    clear_has_commons();
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoAlliance.RequestOfferDonationBC.commons)
}

// -------------------------------------------------------------------

// ReplyOfferDonationBC

// required uint32 uid = 1;
inline bool ReplyOfferDonationBC::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReplyOfferDonationBC::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReplyOfferDonationBC::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReplyOfferDonationBC::clear_uid() {
  uid_ = 0u;
  clear_has_uid();
}
inline ::google::protobuf::uint32 ReplyOfferDonationBC::uid() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.ReplyOfferDonationBC.uid)
  return uid_;
}
inline void ReplyOfferDonationBC::set_uid(::google::protobuf::uint32 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.ReplyOfferDonationBC.uid)
}

// required uint32 aid = 2;
inline bool ReplyOfferDonationBC::has_aid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ReplyOfferDonationBC::set_has_aid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ReplyOfferDonationBC::clear_has_aid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ReplyOfferDonationBC::clear_aid() {
  aid_ = 0u;
  clear_has_aid();
}
inline ::google::protobuf::uint32 ReplyOfferDonationBC::aid() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.ReplyOfferDonationBC.aid)
  return aid_;
}
inline void ReplyOfferDonationBC::set_aid(::google::protobuf::uint32 value) {
  set_has_aid();
  aid_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.ReplyOfferDonationBC.aid)
}

// required uint32 propsid = 3;
inline bool ReplyOfferDonationBC::has_propsid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ReplyOfferDonationBC::set_has_propsid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ReplyOfferDonationBC::clear_has_propsid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ReplyOfferDonationBC::clear_propsid() {
  propsid_ = 0u;
  clear_has_propsid();
}
inline ::google::protobuf::uint32 ReplyOfferDonationBC::propsid() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.ReplyOfferDonationBC.propsid)
  return propsid_;
}
inline void ReplyOfferDonationBC::set_propsid(::google::protobuf::uint32 value) {
  set_has_propsid();
  propsid_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.ReplyOfferDonationBC.propsid)
}

// optional .ProtoAlliance.OfferDonationResp alliance = 4;
inline bool ReplyOfferDonationBC::has_alliance() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ReplyOfferDonationBC::set_has_alliance() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ReplyOfferDonationBC::clear_has_alliance() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ReplyOfferDonationBC::clear_alliance() {
  if (alliance_ != NULL) alliance_->::ProtoAlliance::OfferDonationResp::Clear();
  clear_has_alliance();
}
inline const ::ProtoAlliance::OfferDonationResp& ReplyOfferDonationBC::alliance() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.ReplyOfferDonationBC.alliance)
  return alliance_ != NULL ? *alliance_ : *default_instance_->alliance_;
}
inline ::ProtoAlliance::OfferDonationResp* ReplyOfferDonationBC::mutable_alliance() {
  set_has_alliance();
  if (alliance_ == NULL) alliance_ = new ::ProtoAlliance::OfferDonationResp;
  // @@protoc_insertion_point(field_mutable:ProtoAlliance.ReplyOfferDonationBC.alliance)
  return alliance_;
}
inline ::ProtoAlliance::OfferDonationResp* ReplyOfferDonationBC::release_alliance() {
  clear_has_alliance();
  ::ProtoAlliance::OfferDonationResp* temp = alliance_;
  alliance_ = NULL;
  return temp;
}
inline void ReplyOfferDonationBC::set_allocated_alliance(::ProtoAlliance::OfferDonationResp* alliance) {
  delete alliance_;
  alliance_ = alliance;
  if (alliance) {
    set_has_alliance();
  } else {
    clear_has_alliance();
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoAlliance.ReplyOfferDonationBC.alliance)
}

// -------------------------------------------------------------------

// OfferDonationResp

// required .DataCommon.CommonItemsCPP commons = 1;
inline bool OfferDonationResp::has_commons() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OfferDonationResp::set_has_commons() {
  _has_bits_[0] |= 0x00000001u;
}
inline void OfferDonationResp::clear_has_commons() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void OfferDonationResp::clear_commons() {
  if (commons_ != NULL) commons_->::DataCommon::CommonItemsCPP::Clear();
  clear_has_commons();
}
inline const ::DataCommon::CommonItemsCPP& OfferDonationResp::commons() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.OfferDonationResp.commons)
  return commons_ != NULL ? *commons_ : *default_instance_->commons_;
}
inline ::DataCommon::CommonItemsCPP* OfferDonationResp::mutable_commons() {
  set_has_commons();
  if (commons_ == NULL) commons_ = new ::DataCommon::CommonItemsCPP;
  // @@protoc_insertion_point(field_mutable:ProtoAlliance.OfferDonationResp.commons)
  return commons_;
}
inline ::DataCommon::CommonItemsCPP* OfferDonationResp::release_commons() {
  clear_has_commons();
  ::DataCommon::CommonItemsCPP* temp = commons_;
  commons_ = NULL;
  return temp;
}
inline void OfferDonationResp::set_allocated_commons(::DataCommon::CommonItemsCPP* commons) {
  delete commons_;
  commons_ = commons;
  if (commons) {
    set_has_commons();
  } else {
    clear_has_commons();
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoAlliance.OfferDonationResp.commons)
}

// required .ProtoAlliance.AllianceDonationCPP donation = 2;
inline bool OfferDonationResp::has_donation() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void OfferDonationResp::set_has_donation() {
  _has_bits_[0] |= 0x00000002u;
}
inline void OfferDonationResp::clear_has_donation() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void OfferDonationResp::clear_donation() {
  if (donation_ != NULL) donation_->::ProtoAlliance::AllianceDonationCPP::Clear();
  clear_has_donation();
}
inline const ::ProtoAlliance::AllianceDonationCPP& OfferDonationResp::donation() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.OfferDonationResp.donation)
  return donation_ != NULL ? *donation_ : *default_instance_->donation_;
}
inline ::ProtoAlliance::AllianceDonationCPP* OfferDonationResp::mutable_donation() {
  set_has_donation();
  if (donation_ == NULL) donation_ = new ::ProtoAlliance::AllianceDonationCPP;
  // @@protoc_insertion_point(field_mutable:ProtoAlliance.OfferDonationResp.donation)
  return donation_;
}
inline ::ProtoAlliance::AllianceDonationCPP* OfferDonationResp::release_donation() {
  clear_has_donation();
  ::ProtoAlliance::AllianceDonationCPP* temp = donation_;
  donation_ = NULL;
  return temp;
}
inline void OfferDonationResp::set_allocated_donation(::ProtoAlliance::AllianceDonationCPP* donation) {
  delete donation_;
  donation_ = donation;
  if (donation) {
    set_has_donation();
  } else {
    clear_has_donation();
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoAlliance.OfferDonationResp.donation)
}

// -------------------------------------------------------------------

// FetchDonationReq

// -------------------------------------------------------------------

// RequestFetchDonationBC

// required uint32 aid = 1;
inline bool RequestFetchDonationBC::has_aid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RequestFetchDonationBC::set_has_aid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RequestFetchDonationBC::clear_has_aid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RequestFetchDonationBC::clear_aid() {
  aid_ = 0u;
  clear_has_aid();
}
inline ::google::protobuf::uint32 RequestFetchDonationBC::aid() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.RequestFetchDonationBC.aid)
  return aid_;
}
inline void RequestFetchDonationBC::set_aid(::google::protobuf::uint32 value) {
  set_has_aid();
  aid_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.RequestFetchDonationBC.aid)
}

// required uint32 uid = 2;
inline bool RequestFetchDonationBC::has_uid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RequestFetchDonationBC::set_has_uid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RequestFetchDonationBC::clear_has_uid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RequestFetchDonationBC::clear_uid() {
  uid_ = 0u;
  clear_has_uid();
}
inline ::google::protobuf::uint32 RequestFetchDonationBC::uid() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.RequestFetchDonationBC.uid)
  return uid_;
}
inline void RequestFetchDonationBC::set_uid(::google::protobuf::uint32 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.RequestFetchDonationBC.uid)
}

// -------------------------------------------------------------------

// ReplyFetchDonationBC

// required uint32 uid = 1;
inline bool ReplyFetchDonationBC::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReplyFetchDonationBC::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReplyFetchDonationBC::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReplyFetchDonationBC::clear_uid() {
  uid_ = 0u;
  clear_has_uid();
}
inline ::google::protobuf::uint32 ReplyFetchDonationBC::uid() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.ReplyFetchDonationBC.uid)
  return uid_;
}
inline void ReplyFetchDonationBC::set_uid(::google::protobuf::uint32 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.ReplyFetchDonationBC.uid)
}

// required uint32 propsid = 2;
inline bool ReplyFetchDonationBC::has_propsid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ReplyFetchDonationBC::set_has_propsid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ReplyFetchDonationBC::clear_has_propsid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ReplyFetchDonationBC::clear_propsid() {
  propsid_ = 0u;
  clear_has_propsid();
}
inline ::google::protobuf::uint32 ReplyFetchDonationBC::propsid() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.ReplyFetchDonationBC.propsid)
  return propsid_;
}
inline void ReplyFetchDonationBC::set_propsid(::google::protobuf::uint32 value) {
  set_has_propsid();
  propsid_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.ReplyFetchDonationBC.propsid)
}

// optional .ProtoAlliance.FetchDonationResp alliance = 3;
inline bool ReplyFetchDonationBC::has_alliance() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ReplyFetchDonationBC::set_has_alliance() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ReplyFetchDonationBC::clear_has_alliance() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ReplyFetchDonationBC::clear_alliance() {
  if (alliance_ != NULL) alliance_->::ProtoAlliance::FetchDonationResp::Clear();
  clear_has_alliance();
}
inline const ::ProtoAlliance::FetchDonationResp& ReplyFetchDonationBC::alliance() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.ReplyFetchDonationBC.alliance)
  return alliance_ != NULL ? *alliance_ : *default_instance_->alliance_;
}
inline ::ProtoAlliance::FetchDonationResp* ReplyFetchDonationBC::mutable_alliance() {
  set_has_alliance();
  if (alliance_ == NULL) alliance_ = new ::ProtoAlliance::FetchDonationResp;
  // @@protoc_insertion_point(field_mutable:ProtoAlliance.ReplyFetchDonationBC.alliance)
  return alliance_;
}
inline ::ProtoAlliance::FetchDonationResp* ReplyFetchDonationBC::release_alliance() {
  clear_has_alliance();
  ::ProtoAlliance::FetchDonationResp* temp = alliance_;
  alliance_ = NULL;
  return temp;
}
inline void ReplyFetchDonationBC::set_allocated_alliance(::ProtoAlliance::FetchDonationResp* alliance) {
  delete alliance_;
  alliance_ = alliance;
  if (alliance) {
    set_has_alliance();
  } else {
    clear_has_alliance();
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoAlliance.ReplyFetchDonationBC.alliance)
}

// -------------------------------------------------------------------

// FetchDonationResp

// optional .DataCommon.CommonItemsCPP commons = 1;
inline bool FetchDonationResp::has_commons() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FetchDonationResp::set_has_commons() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FetchDonationResp::clear_has_commons() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FetchDonationResp::clear_commons() {
  if (commons_ != NULL) commons_->::DataCommon::CommonItemsCPP::Clear();
  clear_has_commons();
}
inline const ::DataCommon::CommonItemsCPP& FetchDonationResp::commons() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.FetchDonationResp.commons)
  return commons_ != NULL ? *commons_ : *default_instance_->commons_;
}
inline ::DataCommon::CommonItemsCPP* FetchDonationResp::mutable_commons() {
  set_has_commons();
  if (commons_ == NULL) commons_ = new ::DataCommon::CommonItemsCPP;
  // @@protoc_insertion_point(field_mutable:ProtoAlliance.FetchDonationResp.commons)
  return commons_;
}
inline ::DataCommon::CommonItemsCPP* FetchDonationResp::release_commons() {
  clear_has_commons();
  ::DataCommon::CommonItemsCPP* temp = commons_;
  commons_ = NULL;
  return temp;
}
inline void FetchDonationResp::set_allocated_commons(::DataCommon::CommonItemsCPP* commons) {
  delete commons_;
  commons_ = commons;
  if (commons) {
    set_has_commons();
  } else {
    clear_has_commons();
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoAlliance.FetchDonationResp.commons)
}

// optional .ProtoAlliance.AllianceDonationCPP donation = 2;
inline bool FetchDonationResp::has_donation() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FetchDonationResp::set_has_donation() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FetchDonationResp::clear_has_donation() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FetchDonationResp::clear_donation() {
  if (donation_ != NULL) donation_->::ProtoAlliance::AllianceDonationCPP::Clear();
  clear_has_donation();
}
inline const ::ProtoAlliance::AllianceDonationCPP& FetchDonationResp::donation() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.FetchDonationResp.donation)
  return donation_ != NULL ? *donation_ : *default_instance_->donation_;
}
inline ::ProtoAlliance::AllianceDonationCPP* FetchDonationResp::mutable_donation() {
  set_has_donation();
  if (donation_ == NULL) donation_ = new ::ProtoAlliance::AllianceDonationCPP;
  // @@protoc_insertion_point(field_mutable:ProtoAlliance.FetchDonationResp.donation)
  return donation_;
}
inline ::ProtoAlliance::AllianceDonationCPP* FetchDonationResp::release_donation() {
  clear_has_donation();
  ::ProtoAlliance::AllianceDonationCPP* temp = donation_;
  donation_ = NULL;
  return temp;
}
inline void FetchDonationResp::set_allocated_donation(::ProtoAlliance::AllianceDonationCPP* donation) {
  delete donation_;
  donation_ = donation;
  if (donation) {
    set_has_donation();
  } else {
    clear_has_donation();
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoAlliance.FetchDonationResp.donation)
}

// -------------------------------------------------------------------

// AllianceNotifyCPP

// required uint32 id = 1;
inline bool AllianceNotifyCPP::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AllianceNotifyCPP::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AllianceNotifyCPP::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AllianceNotifyCPP::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 AllianceNotifyCPP::id() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.AllianceNotifyCPP.id)
  return id_;
}
inline void AllianceNotifyCPP::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.AllianceNotifyCPP.id)
}

// required uint32 announcer = 2;
inline bool AllianceNotifyCPP::has_announcer() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AllianceNotifyCPP::set_has_announcer() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AllianceNotifyCPP::clear_has_announcer() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AllianceNotifyCPP::clear_announcer() {
  announcer_ = 0u;
  clear_has_announcer();
}
inline ::google::protobuf::uint32 AllianceNotifyCPP::announcer() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.AllianceNotifyCPP.announcer)
  return announcer_;
}
inline void AllianceNotifyCPP::set_announcer(::google::protobuf::uint32 value) {
  set_has_announcer();
  announcer_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.AllianceNotifyCPP.announcer)
}

// required bytes name = 3;
inline bool AllianceNotifyCPP::has_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AllianceNotifyCPP::set_has_name() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AllianceNotifyCPP::clear_has_name() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AllianceNotifyCPP::clear_name() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& AllianceNotifyCPP::name() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.AllianceNotifyCPP.name)
  return *name_;
}
inline void AllianceNotifyCPP::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set:ProtoAlliance.AllianceNotifyCPP.name)
}
inline void AllianceNotifyCPP::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set_char:ProtoAlliance.AllianceNotifyCPP.name)
}
inline void AllianceNotifyCPP::set_name(const void* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ProtoAlliance.AllianceNotifyCPP.name)
}
inline ::std::string* AllianceNotifyCPP::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:ProtoAlliance.AllianceNotifyCPP.name)
  return name_;
}
inline ::std::string* AllianceNotifyCPP::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void AllianceNotifyCPP::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoAlliance.AllianceNotifyCPP.name)
}

// required bytes content = 4;
inline bool AllianceNotifyCPP::has_content() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void AllianceNotifyCPP::set_has_content() {
  _has_bits_[0] |= 0x00000008u;
}
inline void AllianceNotifyCPP::clear_has_content() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void AllianceNotifyCPP::clear_content() {
  if (content_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    content_->clear();
  }
  clear_has_content();
}
inline const ::std::string& AllianceNotifyCPP::content() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.AllianceNotifyCPP.content)
  return *content_;
}
inline void AllianceNotifyCPP::set_content(const ::std::string& value) {
  set_has_content();
  if (content_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    content_ = new ::std::string;
  }
  content_->assign(value);
  // @@protoc_insertion_point(field_set:ProtoAlliance.AllianceNotifyCPP.content)
}
inline void AllianceNotifyCPP::set_content(const char* value) {
  set_has_content();
  if (content_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    content_ = new ::std::string;
  }
  content_->assign(value);
  // @@protoc_insertion_point(field_set_char:ProtoAlliance.AllianceNotifyCPP.content)
}
inline void AllianceNotifyCPP::set_content(const void* value, size_t size) {
  set_has_content();
  if (content_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    content_ = new ::std::string;
  }
  content_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ProtoAlliance.AllianceNotifyCPP.content)
}
inline ::std::string* AllianceNotifyCPP::mutable_content() {
  set_has_content();
  if (content_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    content_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:ProtoAlliance.AllianceNotifyCPP.content)
  return content_;
}
inline ::std::string* AllianceNotifyCPP::release_content() {
  clear_has_content();
  if (content_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = content_;
    content_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void AllianceNotifyCPP::set_allocated_content(::std::string* content) {
  if (content_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete content_;
  }
  if (content) {
    set_has_content();
    content_ = content;
  } else {
    clear_has_content();
    content_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoAlliance.AllianceNotifyCPP.content)
}

// required uint32 createts = 5;
inline bool AllianceNotifyCPP::has_createts() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void AllianceNotifyCPP::set_has_createts() {
  _has_bits_[0] |= 0x00000010u;
}
inline void AllianceNotifyCPP::clear_has_createts() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void AllianceNotifyCPP::clear_createts() {
  createts_ = 0u;
  clear_has_createts();
}
inline ::google::protobuf::uint32 AllianceNotifyCPP::createts() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.AllianceNotifyCPP.createts)
  return createts_;
}
inline void AllianceNotifyCPP::set_createts(::google::protobuf::uint32 value) {
  set_has_createts();
  createts_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.AllianceNotifyCPP.createts)
}

// -------------------------------------------------------------------

// SendNotifyReq

// required bytes content = 1;
inline bool SendNotifyReq::has_content() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SendNotifyReq::set_has_content() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SendNotifyReq::clear_has_content() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SendNotifyReq::clear_content() {
  if (content_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    content_->clear();
  }
  clear_has_content();
}
inline const ::std::string& SendNotifyReq::content() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.SendNotifyReq.content)
  return *content_;
}
inline void SendNotifyReq::set_content(const ::std::string& value) {
  set_has_content();
  if (content_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    content_ = new ::std::string;
  }
  content_->assign(value);
  // @@protoc_insertion_point(field_set:ProtoAlliance.SendNotifyReq.content)
}
inline void SendNotifyReq::set_content(const char* value) {
  set_has_content();
  if (content_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    content_ = new ::std::string;
  }
  content_->assign(value);
  // @@protoc_insertion_point(field_set_char:ProtoAlliance.SendNotifyReq.content)
}
inline void SendNotifyReq::set_content(const void* value, size_t size) {
  set_has_content();
  if (content_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    content_ = new ::std::string;
  }
  content_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ProtoAlliance.SendNotifyReq.content)
}
inline ::std::string* SendNotifyReq::mutable_content() {
  set_has_content();
  if (content_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    content_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:ProtoAlliance.SendNotifyReq.content)
  return content_;
}
inline ::std::string* SendNotifyReq::release_content() {
  clear_has_content();
  if (content_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = content_;
    content_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void SendNotifyReq::set_allocated_content(::std::string* content) {
  if (content_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete content_;
  }
  if (content) {
    set_has_content();
    content_ = content;
  } else {
    clear_has_content();
    content_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoAlliance.SendNotifyReq.content)
}

// -------------------------------------------------------------------

// RequestSendNotifyBC

// required uint32 aid = 1;
inline bool RequestSendNotifyBC::has_aid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RequestSendNotifyBC::set_has_aid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RequestSendNotifyBC::clear_has_aid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RequestSendNotifyBC::clear_aid() {
  aid_ = 0u;
  clear_has_aid();
}
inline ::google::protobuf::uint32 RequestSendNotifyBC::aid() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.RequestSendNotifyBC.aid)
  return aid_;
}
inline void RequestSendNotifyBC::set_aid(::google::protobuf::uint32 value) {
  set_has_aid();
  aid_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.RequestSendNotifyBC.aid)
}

// required uint32 uid = 2;
inline bool RequestSendNotifyBC::has_uid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RequestSendNotifyBC::set_has_uid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RequestSendNotifyBC::clear_has_uid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RequestSendNotifyBC::clear_uid() {
  uid_ = 0u;
  clear_has_uid();
}
inline ::google::protobuf::uint32 RequestSendNotifyBC::uid() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.RequestSendNotifyBC.uid)
  return uid_;
}
inline void RequestSendNotifyBC::set_uid(::google::protobuf::uint32 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.RequestSendNotifyBC.uid)
}

// required bytes content = 3;
inline bool RequestSendNotifyBC::has_content() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RequestSendNotifyBC::set_has_content() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RequestSendNotifyBC::clear_has_content() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RequestSendNotifyBC::clear_content() {
  if (content_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    content_->clear();
  }
  clear_has_content();
}
inline const ::std::string& RequestSendNotifyBC::content() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.RequestSendNotifyBC.content)
  return *content_;
}
inline void RequestSendNotifyBC::set_content(const ::std::string& value) {
  set_has_content();
  if (content_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    content_ = new ::std::string;
  }
  content_->assign(value);
  // @@protoc_insertion_point(field_set:ProtoAlliance.RequestSendNotifyBC.content)
}
inline void RequestSendNotifyBC::set_content(const char* value) {
  set_has_content();
  if (content_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    content_ = new ::std::string;
  }
  content_->assign(value);
  // @@protoc_insertion_point(field_set_char:ProtoAlliance.RequestSendNotifyBC.content)
}
inline void RequestSendNotifyBC::set_content(const void* value, size_t size) {
  set_has_content();
  if (content_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    content_ = new ::std::string;
  }
  content_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ProtoAlliance.RequestSendNotifyBC.content)
}
inline ::std::string* RequestSendNotifyBC::mutable_content() {
  set_has_content();
  if (content_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    content_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:ProtoAlliance.RequestSendNotifyBC.content)
  return content_;
}
inline ::std::string* RequestSendNotifyBC::release_content() {
  clear_has_content();
  if (content_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = content_;
    content_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void RequestSendNotifyBC::set_allocated_content(::std::string* content) {
  if (content_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete content_;
  }
  if (content) {
    set_has_content();
    content_ = content;
  } else {
    clear_has_content();
    content_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoAlliance.RequestSendNotifyBC.content)
}

// required bytes name = 4;
inline bool RequestSendNotifyBC::has_name() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RequestSendNotifyBC::set_has_name() {
  _has_bits_[0] |= 0x00000008u;
}
inline void RequestSendNotifyBC::clear_has_name() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void RequestSendNotifyBC::clear_name() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& RequestSendNotifyBC::name() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.RequestSendNotifyBC.name)
  return *name_;
}
inline void RequestSendNotifyBC::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set:ProtoAlliance.RequestSendNotifyBC.name)
}
inline void RequestSendNotifyBC::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set_char:ProtoAlliance.RequestSendNotifyBC.name)
}
inline void RequestSendNotifyBC::set_name(const void* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ProtoAlliance.RequestSendNotifyBC.name)
}
inline ::std::string* RequestSendNotifyBC::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:ProtoAlliance.RequestSendNotifyBC.name)
  return name_;
}
inline ::std::string* RequestSendNotifyBC::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void RequestSendNotifyBC::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoAlliance.RequestSendNotifyBC.name)
}

// -------------------------------------------------------------------

// ReplySendNotifyBC

// required uint32 uid = 1;
inline bool ReplySendNotifyBC::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReplySendNotifyBC::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReplySendNotifyBC::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReplySendNotifyBC::clear_uid() {
  uid_ = 0u;
  clear_has_uid();
}
inline ::google::protobuf::uint32 ReplySendNotifyBC::uid() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.ReplySendNotifyBC.uid)
  return uid_;
}
inline void ReplySendNotifyBC::set_uid(::google::protobuf::uint32 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.ReplySendNotifyBC.uid)
}

// optional .ProtoAlliance.SendNotifyResp alliance = 2;
inline bool ReplySendNotifyBC::has_alliance() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ReplySendNotifyBC::set_has_alliance() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ReplySendNotifyBC::clear_has_alliance() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ReplySendNotifyBC::clear_alliance() {
  if (alliance_ != NULL) alliance_->::ProtoAlliance::SendNotifyResp::Clear();
  clear_has_alliance();
}
inline const ::ProtoAlliance::SendNotifyResp& ReplySendNotifyBC::alliance() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.ReplySendNotifyBC.alliance)
  return alliance_ != NULL ? *alliance_ : *default_instance_->alliance_;
}
inline ::ProtoAlliance::SendNotifyResp* ReplySendNotifyBC::mutable_alliance() {
  set_has_alliance();
  if (alliance_ == NULL) alliance_ = new ::ProtoAlliance::SendNotifyResp;
  // @@protoc_insertion_point(field_mutable:ProtoAlliance.ReplySendNotifyBC.alliance)
  return alliance_;
}
inline ::ProtoAlliance::SendNotifyResp* ReplySendNotifyBC::release_alliance() {
  clear_has_alliance();
  ::ProtoAlliance::SendNotifyResp* temp = alliance_;
  alliance_ = NULL;
  return temp;
}
inline void ReplySendNotifyBC::set_allocated_alliance(::ProtoAlliance::SendNotifyResp* alliance) {
  delete alliance_;
  alliance_ = alliance;
  if (alliance) {
    set_has_alliance();
  } else {
    clear_has_alliance();
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoAlliance.ReplySendNotifyBC.alliance)
}

// -------------------------------------------------------------------

// SendNotifyResp

// required .ProtoAlliance.AllianceNotifyCPP notify = 1;
inline bool SendNotifyResp::has_notify() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SendNotifyResp::set_has_notify() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SendNotifyResp::clear_has_notify() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SendNotifyResp::clear_notify() {
  if (notify_ != NULL) notify_->::ProtoAlliance::AllianceNotifyCPP::Clear();
  clear_has_notify();
}
inline const ::ProtoAlliance::AllianceNotifyCPP& SendNotifyResp::notify() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.SendNotifyResp.notify)
  return notify_ != NULL ? *notify_ : *default_instance_->notify_;
}
inline ::ProtoAlliance::AllianceNotifyCPP* SendNotifyResp::mutable_notify() {
  set_has_notify();
  if (notify_ == NULL) notify_ = new ::ProtoAlliance::AllianceNotifyCPP;
  // @@protoc_insertion_point(field_mutable:ProtoAlliance.SendNotifyResp.notify)
  return notify_;
}
inline ::ProtoAlliance::AllianceNotifyCPP* SendNotifyResp::release_notify() {
  clear_has_notify();
  ::ProtoAlliance::AllianceNotifyCPP* temp = notify_;
  notify_ = NULL;
  return temp;
}
inline void SendNotifyResp::set_allocated_notify(::ProtoAlliance::AllianceNotifyCPP* notify) {
  delete notify_;
  notify_ = notify;
  if (notify) {
    set_has_notify();
  } else {
    clear_has_notify();
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoAlliance.SendNotifyResp.notify)
}

// -------------------------------------------------------------------

// DelNotifyReq

// required uint32 id = 1;
inline bool DelNotifyReq::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DelNotifyReq::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DelNotifyReq::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DelNotifyReq::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 DelNotifyReq::id() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.DelNotifyReq.id)
  return id_;
}
inline void DelNotifyReq::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.DelNotifyReq.id)
}

// -------------------------------------------------------------------

// RequestDelNotifyBC

// required uint32 aid = 1;
inline bool RequestDelNotifyBC::has_aid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RequestDelNotifyBC::set_has_aid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RequestDelNotifyBC::clear_has_aid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RequestDelNotifyBC::clear_aid() {
  aid_ = 0u;
  clear_has_aid();
}
inline ::google::protobuf::uint32 RequestDelNotifyBC::aid() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.RequestDelNotifyBC.aid)
  return aid_;
}
inline void RequestDelNotifyBC::set_aid(::google::protobuf::uint32 value) {
  set_has_aid();
  aid_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.RequestDelNotifyBC.aid)
}

// required uint32 uid = 2;
inline bool RequestDelNotifyBC::has_uid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RequestDelNotifyBC::set_has_uid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RequestDelNotifyBC::clear_has_uid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RequestDelNotifyBC::clear_uid() {
  uid_ = 0u;
  clear_has_uid();
}
inline ::google::protobuf::uint32 RequestDelNotifyBC::uid() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.RequestDelNotifyBC.uid)
  return uid_;
}
inline void RequestDelNotifyBC::set_uid(::google::protobuf::uint32 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.RequestDelNotifyBC.uid)
}

// required uint32 id = 3;
inline bool RequestDelNotifyBC::has_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RequestDelNotifyBC::set_has_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RequestDelNotifyBC::clear_has_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RequestDelNotifyBC::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 RequestDelNotifyBC::id() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.RequestDelNotifyBC.id)
  return id_;
}
inline void RequestDelNotifyBC::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.RequestDelNotifyBC.id)
}

// -------------------------------------------------------------------

// ReplyDelNotifyBC

// required uint32 uid = 1;
inline bool ReplyDelNotifyBC::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReplyDelNotifyBC::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReplyDelNotifyBC::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReplyDelNotifyBC::clear_uid() {
  uid_ = 0u;
  clear_has_uid();
}
inline ::google::protobuf::uint32 ReplyDelNotifyBC::uid() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.ReplyDelNotifyBC.uid)
  return uid_;
}
inline void ReplyDelNotifyBC::set_uid(::google::protobuf::uint32 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.ReplyDelNotifyBC.uid)
}

// optional .ProtoAlliance.DelNotifyResp alliance = 2;
inline bool ReplyDelNotifyBC::has_alliance() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ReplyDelNotifyBC::set_has_alliance() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ReplyDelNotifyBC::clear_has_alliance() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ReplyDelNotifyBC::clear_alliance() {
  if (alliance_ != NULL) alliance_->::ProtoAlliance::DelNotifyResp::Clear();
  clear_has_alliance();
}
inline const ::ProtoAlliance::DelNotifyResp& ReplyDelNotifyBC::alliance() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.ReplyDelNotifyBC.alliance)
  return alliance_ != NULL ? *alliance_ : *default_instance_->alliance_;
}
inline ::ProtoAlliance::DelNotifyResp* ReplyDelNotifyBC::mutable_alliance() {
  set_has_alliance();
  if (alliance_ == NULL) alliance_ = new ::ProtoAlliance::DelNotifyResp;
  // @@protoc_insertion_point(field_mutable:ProtoAlliance.ReplyDelNotifyBC.alliance)
  return alliance_;
}
inline ::ProtoAlliance::DelNotifyResp* ReplyDelNotifyBC::release_alliance() {
  clear_has_alliance();
  ::ProtoAlliance::DelNotifyResp* temp = alliance_;
  alliance_ = NULL;
  return temp;
}
inline void ReplyDelNotifyBC::set_allocated_alliance(::ProtoAlliance::DelNotifyResp* alliance) {
  delete alliance_;
  alliance_ = alliance;
  if (alliance) {
    set_has_alliance();
  } else {
    clear_has_alliance();
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoAlliance.ReplyDelNotifyBC.alliance)
}

// -------------------------------------------------------------------

// DelNotifyResp

// required uint32 id = 1;
inline bool DelNotifyResp::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DelNotifyResp::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DelNotifyResp::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DelNotifyResp::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 DelNotifyResp::id() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.DelNotifyResp.id)
  return id_;
}
inline void DelNotifyResp::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.DelNotifyResp.id)
}

// -------------------------------------------------------------------

// AidInfoCPP

// required uint32 uid = 1;
inline bool AidInfoCPP::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AidInfoCPP::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AidInfoCPP::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AidInfoCPP::clear_uid() {
  uid_ = 0u;
  clear_has_uid();
}
inline ::google::protobuf::uint32 AidInfoCPP::uid() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.AidInfoCPP.uid)
  return uid_;
}
inline void AidInfoCPP::set_uid(::google::protobuf::uint32 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.AidInfoCPP.uid)
}

// required bytes name = 2;
inline bool AidInfoCPP::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AidInfoCPP::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AidInfoCPP::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AidInfoCPP::clear_name() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& AidInfoCPP::name() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.AidInfoCPP.name)
  return *name_;
}
inline void AidInfoCPP::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set:ProtoAlliance.AidInfoCPP.name)
}
inline void AidInfoCPP::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set_char:ProtoAlliance.AidInfoCPP.name)
}
inline void AidInfoCPP::set_name(const void* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ProtoAlliance.AidInfoCPP.name)
}
inline ::std::string* AidInfoCPP::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:ProtoAlliance.AidInfoCPP.name)
  return name_;
}
inline ::std::string* AidInfoCPP::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void AidInfoCPP::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoAlliance.AidInfoCPP.name)
}

// -------------------------------------------------------------------

// GetAllianceFunctionReq

// required uint32 type = 1;
inline bool GetAllianceFunctionReq::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetAllianceFunctionReq::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetAllianceFunctionReq::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetAllianceFunctionReq::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 GetAllianceFunctionReq::type() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.GetAllianceFunctionReq.type)
  return type_;
}
inline void GetAllianceFunctionReq::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.GetAllianceFunctionReq.type)
}

// -------------------------------------------------------------------

// GetAllianceFunctionResp

// repeated .ProtoAlliance.AllianceApplyCPP applyList = 1;
inline int GetAllianceFunctionResp::applylist_size() const {
  return applylist_.size();
}
inline void GetAllianceFunctionResp::clear_applylist() {
  applylist_.Clear();
}
inline const ::ProtoAlliance::AllianceApplyCPP& GetAllianceFunctionResp::applylist(int index) const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.GetAllianceFunctionResp.applyList)
  return applylist_.Get(index);
}
inline ::ProtoAlliance::AllianceApplyCPP* GetAllianceFunctionResp::mutable_applylist(int index) {
  // @@protoc_insertion_point(field_mutable:ProtoAlliance.GetAllianceFunctionResp.applyList)
  return applylist_.Mutable(index);
}
inline ::ProtoAlliance::AllianceApplyCPP* GetAllianceFunctionResp::add_applylist() {
  // @@protoc_insertion_point(field_add:ProtoAlliance.GetAllianceFunctionResp.applyList)
  return applylist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ProtoAlliance::AllianceApplyCPP >&
GetAllianceFunctionResp::applylist() const {
  // @@protoc_insertion_point(field_list:ProtoAlliance.GetAllianceFunctionResp.applyList)
  return applylist_;
}
inline ::google::protobuf::RepeatedPtrField< ::ProtoAlliance::AllianceApplyCPP >*
GetAllianceFunctionResp::mutable_applylist() {
  // @@protoc_insertion_point(field_mutable_list:ProtoAlliance.GetAllianceFunctionResp.applyList)
  return &applylist_;
}

// repeated .ProtoAlliance.AllianceDonationCPP donations = 2;
inline int GetAllianceFunctionResp::donations_size() const {
  return donations_.size();
}
inline void GetAllianceFunctionResp::clear_donations() {
  donations_.Clear();
}
inline const ::ProtoAlliance::AllianceDonationCPP& GetAllianceFunctionResp::donations(int index) const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.GetAllianceFunctionResp.donations)
  return donations_.Get(index);
}
inline ::ProtoAlliance::AllianceDonationCPP* GetAllianceFunctionResp::mutable_donations(int index) {
  // @@protoc_insertion_point(field_mutable:ProtoAlliance.GetAllianceFunctionResp.donations)
  return donations_.Mutable(index);
}
inline ::ProtoAlliance::AllianceDonationCPP* GetAllianceFunctionResp::add_donations() {
  // @@protoc_insertion_point(field_add:ProtoAlliance.GetAllianceFunctionResp.donations)
  return donations_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ProtoAlliance::AllianceDonationCPP >&
GetAllianceFunctionResp::donations() const {
  // @@protoc_insertion_point(field_list:ProtoAlliance.GetAllianceFunctionResp.donations)
  return donations_;
}
inline ::google::protobuf::RepeatedPtrField< ::ProtoAlliance::AllianceDonationCPP >*
GetAllianceFunctionResp::mutable_donations() {
  // @@protoc_insertion_point(field_mutable_list:ProtoAlliance.GetAllianceFunctionResp.donations)
  return &donations_;
}

// repeated .ProtoAlliance.AidInfoCPP aidlist = 3;
inline int GetAllianceFunctionResp::aidlist_size() const {
  return aidlist_.size();
}
inline void GetAllianceFunctionResp::clear_aidlist() {
  aidlist_.Clear();
}
inline const ::ProtoAlliance::AidInfoCPP& GetAllianceFunctionResp::aidlist(int index) const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.GetAllianceFunctionResp.aidlist)
  return aidlist_.Get(index);
}
inline ::ProtoAlliance::AidInfoCPP* GetAllianceFunctionResp::mutable_aidlist(int index) {
  // @@protoc_insertion_point(field_mutable:ProtoAlliance.GetAllianceFunctionResp.aidlist)
  return aidlist_.Mutable(index);
}
inline ::ProtoAlliance::AidInfoCPP* GetAllianceFunctionResp::add_aidlist() {
  // @@protoc_insertion_point(field_add:ProtoAlliance.GetAllianceFunctionResp.aidlist)
  return aidlist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ProtoAlliance::AidInfoCPP >&
GetAllianceFunctionResp::aidlist() const {
  // @@protoc_insertion_point(field_list:ProtoAlliance.GetAllianceFunctionResp.aidlist)
  return aidlist_;
}
inline ::google::protobuf::RepeatedPtrField< ::ProtoAlliance::AidInfoCPP >*
GetAllianceFunctionResp::mutable_aidlist() {
  // @@protoc_insertion_point(field_mutable_list:ProtoAlliance.GetAllianceFunctionResp.aidlist)
  return &aidlist_;
}

// repeated .ProtoAlliance.AllianceInvitedCPP invitelist = 4;
inline int GetAllianceFunctionResp::invitelist_size() const {
  return invitelist_.size();
}
inline void GetAllianceFunctionResp::clear_invitelist() {
  invitelist_.Clear();
}
inline const ::ProtoAlliance::AllianceInvitedCPP& GetAllianceFunctionResp::invitelist(int index) const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.GetAllianceFunctionResp.invitelist)
  return invitelist_.Get(index);
}
inline ::ProtoAlliance::AllianceInvitedCPP* GetAllianceFunctionResp::mutable_invitelist(int index) {
  // @@protoc_insertion_point(field_mutable:ProtoAlliance.GetAllianceFunctionResp.invitelist)
  return invitelist_.Mutable(index);
}
inline ::ProtoAlliance::AllianceInvitedCPP* GetAllianceFunctionResp::add_invitelist() {
  // @@protoc_insertion_point(field_add:ProtoAlliance.GetAllianceFunctionResp.invitelist)
  return invitelist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ProtoAlliance::AllianceInvitedCPP >&
GetAllianceFunctionResp::invitelist() const {
  // @@protoc_insertion_point(field_list:ProtoAlliance.GetAllianceFunctionResp.invitelist)
  return invitelist_;
}
inline ::google::protobuf::RepeatedPtrField< ::ProtoAlliance::AllianceInvitedCPP >*
GetAllianceFunctionResp::mutable_invitelist() {
  // @@protoc_insertion_point(field_mutable_list:ProtoAlliance.GetAllianceFunctionResp.invitelist)
  return &invitelist_;
}

// -------------------------------------------------------------------

// RequestAllianceFunctionBC

// required uint32 aid = 1;
inline bool RequestAllianceFunctionBC::has_aid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RequestAllianceFunctionBC::set_has_aid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RequestAllianceFunctionBC::clear_has_aid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RequestAllianceFunctionBC::clear_aid() {
  aid_ = 0u;
  clear_has_aid();
}
inline ::google::protobuf::uint32 RequestAllianceFunctionBC::aid() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.RequestAllianceFunctionBC.aid)
  return aid_;
}
inline void RequestAllianceFunctionBC::set_aid(::google::protobuf::uint32 value) {
  set_has_aid();
  aid_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.RequestAllianceFunctionBC.aid)
}

// required uint32 uid = 2;
inline bool RequestAllianceFunctionBC::has_uid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RequestAllianceFunctionBC::set_has_uid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RequestAllianceFunctionBC::clear_has_uid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RequestAllianceFunctionBC::clear_uid() {
  uid_ = 0u;
  clear_has_uid();
}
inline ::google::protobuf::uint32 RequestAllianceFunctionBC::uid() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.RequestAllianceFunctionBC.uid)
  return uid_;
}
inline void RequestAllianceFunctionBC::set_uid(::google::protobuf::uint32 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.RequestAllianceFunctionBC.uid)
}

// required uint32 type = 3;
inline bool RequestAllianceFunctionBC::has_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RequestAllianceFunctionBC::set_has_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RequestAllianceFunctionBC::clear_has_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RequestAllianceFunctionBC::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 RequestAllianceFunctionBC::type() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.RequestAllianceFunctionBC.type)
  return type_;
}
inline void RequestAllianceFunctionBC::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.RequestAllianceFunctionBC.type)
}

// -------------------------------------------------------------------

// ReplyAllianceFunctionBC

// required uint32 uid = 1;
inline bool ReplyAllianceFunctionBC::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReplyAllianceFunctionBC::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReplyAllianceFunctionBC::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReplyAllianceFunctionBC::clear_uid() {
  uid_ = 0u;
  clear_has_uid();
}
inline ::google::protobuf::uint32 ReplyAllianceFunctionBC::uid() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.ReplyAllianceFunctionBC.uid)
  return uid_;
}
inline void ReplyAllianceFunctionBC::set_uid(::google::protobuf::uint32 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.ReplyAllianceFunctionBC.uid)
}

// required uint32 type = 2;
inline bool ReplyAllianceFunctionBC::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ReplyAllianceFunctionBC::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ReplyAllianceFunctionBC::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ReplyAllianceFunctionBC::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 ReplyAllianceFunctionBC::type() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.ReplyAllianceFunctionBC.type)
  return type_;
}
inline void ReplyAllianceFunctionBC::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.ReplyAllianceFunctionBC.type)
}

// optional .ProtoAlliance.GetAllianceFunctionResp alliance = 3;
inline bool ReplyAllianceFunctionBC::has_alliance() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ReplyAllianceFunctionBC::set_has_alliance() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ReplyAllianceFunctionBC::clear_has_alliance() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ReplyAllianceFunctionBC::clear_alliance() {
  if (alliance_ != NULL) alliance_->::ProtoAlliance::GetAllianceFunctionResp::Clear();
  clear_has_alliance();
}
inline const ::ProtoAlliance::GetAllianceFunctionResp& ReplyAllianceFunctionBC::alliance() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.ReplyAllianceFunctionBC.alliance)
  return alliance_ != NULL ? *alliance_ : *default_instance_->alliance_;
}
inline ::ProtoAlliance::GetAllianceFunctionResp* ReplyAllianceFunctionBC::mutable_alliance() {
  set_has_alliance();
  if (alliance_ == NULL) alliance_ = new ::ProtoAlliance::GetAllianceFunctionResp;
  // @@protoc_insertion_point(field_mutable:ProtoAlliance.ReplyAllianceFunctionBC.alliance)
  return alliance_;
}
inline ::ProtoAlliance::GetAllianceFunctionResp* ReplyAllianceFunctionBC::release_alliance() {
  clear_has_alliance();
  ::ProtoAlliance::GetAllianceFunctionResp* temp = alliance_;
  alliance_ = NULL;
  return temp;
}
inline void ReplyAllianceFunctionBC::set_allocated_alliance(::ProtoAlliance::GetAllianceFunctionResp* alliance) {
  delete alliance_;
  alliance_ = alliance;
  if (alliance) {
    set_has_alliance();
  } else {
    clear_has_alliance();
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoAlliance.ReplyAllianceFunctionBC.alliance)
}

// -------------------------------------------------------------------

// GetNotifyReq

// -------------------------------------------------------------------

// GetNotifyResp

// repeated .ProtoAlliance.AllianceNotifyCPP notifies = 1;
inline int GetNotifyResp::notifies_size() const {
  return notifies_.size();
}
inline void GetNotifyResp::clear_notifies() {
  notifies_.Clear();
}
inline const ::ProtoAlliance::AllianceNotifyCPP& GetNotifyResp::notifies(int index) const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.GetNotifyResp.notifies)
  return notifies_.Get(index);
}
inline ::ProtoAlliance::AllianceNotifyCPP* GetNotifyResp::mutable_notifies(int index) {
  // @@protoc_insertion_point(field_mutable:ProtoAlliance.GetNotifyResp.notifies)
  return notifies_.Mutable(index);
}
inline ::ProtoAlliance::AllianceNotifyCPP* GetNotifyResp::add_notifies() {
  // @@protoc_insertion_point(field_add:ProtoAlliance.GetNotifyResp.notifies)
  return notifies_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ProtoAlliance::AllianceNotifyCPP >&
GetNotifyResp::notifies() const {
  // @@protoc_insertion_point(field_list:ProtoAlliance.GetNotifyResp.notifies)
  return notifies_;
}
inline ::google::protobuf::RepeatedPtrField< ::ProtoAlliance::AllianceNotifyCPP >*
GetNotifyResp::mutable_notifies() {
  // @@protoc_insertion_point(field_mutable_list:ProtoAlliance.GetNotifyResp.notifies)
  return &notifies_;
}

// -------------------------------------------------------------------

// RequestAllianceNotifyBC

// required uint32 aid = 1;
inline bool RequestAllianceNotifyBC::has_aid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RequestAllianceNotifyBC::set_has_aid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RequestAllianceNotifyBC::clear_has_aid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RequestAllianceNotifyBC::clear_aid() {
  aid_ = 0u;
  clear_has_aid();
}
inline ::google::protobuf::uint32 RequestAllianceNotifyBC::aid() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.RequestAllianceNotifyBC.aid)
  return aid_;
}
inline void RequestAllianceNotifyBC::set_aid(::google::protobuf::uint32 value) {
  set_has_aid();
  aid_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.RequestAllianceNotifyBC.aid)
}

// required uint32 uid = 2;
inline bool RequestAllianceNotifyBC::has_uid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RequestAllianceNotifyBC::set_has_uid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RequestAllianceNotifyBC::clear_has_uid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RequestAllianceNotifyBC::clear_uid() {
  uid_ = 0u;
  clear_has_uid();
}
inline ::google::protobuf::uint32 RequestAllianceNotifyBC::uid() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.RequestAllianceNotifyBC.uid)
  return uid_;
}
inline void RequestAllianceNotifyBC::set_uid(::google::protobuf::uint32 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.RequestAllianceNotifyBC.uid)
}

// -------------------------------------------------------------------

// ReplyAllianceNotifyBC

// required uint32 uid = 1;
inline bool ReplyAllianceNotifyBC::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReplyAllianceNotifyBC::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReplyAllianceNotifyBC::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReplyAllianceNotifyBC::clear_uid() {
  uid_ = 0u;
  clear_has_uid();
}
inline ::google::protobuf::uint32 ReplyAllianceNotifyBC::uid() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.ReplyAllianceNotifyBC.uid)
  return uid_;
}
inline void ReplyAllianceNotifyBC::set_uid(::google::protobuf::uint32 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.ReplyAllianceNotifyBC.uid)
}

// optional .ProtoAlliance.GetNotifyResp alliance = 2;
inline bool ReplyAllianceNotifyBC::has_alliance() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ReplyAllianceNotifyBC::set_has_alliance() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ReplyAllianceNotifyBC::clear_has_alliance() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ReplyAllianceNotifyBC::clear_alliance() {
  if (alliance_ != NULL) alliance_->::ProtoAlliance::GetNotifyResp::Clear();
  clear_has_alliance();
}
inline const ::ProtoAlliance::GetNotifyResp& ReplyAllianceNotifyBC::alliance() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.ReplyAllianceNotifyBC.alliance)
  return alliance_ != NULL ? *alliance_ : *default_instance_->alliance_;
}
inline ::ProtoAlliance::GetNotifyResp* ReplyAllianceNotifyBC::mutable_alliance() {
  set_has_alliance();
  if (alliance_ == NULL) alliance_ = new ::ProtoAlliance::GetNotifyResp;
  // @@protoc_insertion_point(field_mutable:ProtoAlliance.ReplyAllianceNotifyBC.alliance)
  return alliance_;
}
inline ::ProtoAlliance::GetNotifyResp* ReplyAllianceNotifyBC::release_alliance() {
  clear_has_alliance();
  ::ProtoAlliance::GetNotifyResp* temp = alliance_;
  alliance_ = NULL;
  return temp;
}
inline void ReplyAllianceNotifyBC::set_allocated_alliance(::ProtoAlliance::GetNotifyResp* alliance) {
  delete alliance_;
  alliance_ = alliance;
  if (alliance) {
    set_has_alliance();
  } else {
    clear_has_alliance();
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoAlliance.ReplyAllianceNotifyBC.alliance)
}

// -------------------------------------------------------------------

// GetMemberReq

// required uint32 allianceId = 1;
inline bool GetMemberReq::has_allianceid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetMemberReq::set_has_allianceid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetMemberReq::clear_has_allianceid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetMemberReq::clear_allianceid() {
  allianceid_ = 0u;
  clear_has_allianceid();
}
inline ::google::protobuf::uint32 GetMemberReq::allianceid() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.GetMemberReq.allianceId)
  return allianceid_;
}
inline void GetMemberReq::set_allianceid(::google::protobuf::uint32 value) {
  set_has_allianceid();
  allianceid_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.GetMemberReq.allianceId)
}

// -------------------------------------------------------------------

// RequestAllianceMemberBC

// required uint32 aid = 1;
inline bool RequestAllianceMemberBC::has_aid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RequestAllianceMemberBC::set_has_aid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RequestAllianceMemberBC::clear_has_aid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RequestAllianceMemberBC::clear_aid() {
  aid_ = 0u;
  clear_has_aid();
}
inline ::google::protobuf::uint32 RequestAllianceMemberBC::aid() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.RequestAllianceMemberBC.aid)
  return aid_;
}
inline void RequestAllianceMemberBC::set_aid(::google::protobuf::uint32 value) {
  set_has_aid();
  aid_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.RequestAllianceMemberBC.aid)
}

// required uint32 uid = 2;
inline bool RequestAllianceMemberBC::has_uid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RequestAllianceMemberBC::set_has_uid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RequestAllianceMemberBC::clear_has_uid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RequestAllianceMemberBC::clear_uid() {
  uid_ = 0u;
  clear_has_uid();
}
inline ::google::protobuf::uint32 RequestAllianceMemberBC::uid() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.RequestAllianceMemberBC.uid)
  return uid_;
}
inline void RequestAllianceMemberBC::set_uid(::google::protobuf::uint32 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.RequestAllianceMemberBC.uid)
}

// -------------------------------------------------------------------

// ReplyAllianceMemberBC

// required uint32 uid = 1;
inline bool ReplyAllianceMemberBC::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReplyAllianceMemberBC::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReplyAllianceMemberBC::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReplyAllianceMemberBC::clear_uid() {
  uid_ = 0u;
  clear_has_uid();
}
inline ::google::protobuf::uint32 ReplyAllianceMemberBC::uid() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.ReplyAllianceMemberBC.uid)
  return uid_;
}
inline void ReplyAllianceMemberBC::set_uid(::google::protobuf::uint32 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.ReplyAllianceMemberBC.uid)
}

// optional .ProtoAlliance.GetMemberResp alliance = 2;
inline bool ReplyAllianceMemberBC::has_alliance() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ReplyAllianceMemberBC::set_has_alliance() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ReplyAllianceMemberBC::clear_has_alliance() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ReplyAllianceMemberBC::clear_alliance() {
  if (alliance_ != NULL) alliance_->::ProtoAlliance::GetMemberResp::Clear();
  clear_has_alliance();
}
inline const ::ProtoAlliance::GetMemberResp& ReplyAllianceMemberBC::alliance() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.ReplyAllianceMemberBC.alliance)
  return alliance_ != NULL ? *alliance_ : *default_instance_->alliance_;
}
inline ::ProtoAlliance::GetMemberResp* ReplyAllianceMemberBC::mutable_alliance() {
  set_has_alliance();
  if (alliance_ == NULL) alliance_ = new ::ProtoAlliance::GetMemberResp;
  // @@protoc_insertion_point(field_mutable:ProtoAlliance.ReplyAllianceMemberBC.alliance)
  return alliance_;
}
inline ::ProtoAlliance::GetMemberResp* ReplyAllianceMemberBC::release_alliance() {
  clear_has_alliance();
  ::ProtoAlliance::GetMemberResp* temp = alliance_;
  alliance_ = NULL;
  return temp;
}
inline void ReplyAllianceMemberBC::set_allocated_alliance(::ProtoAlliance::GetMemberResp* alliance) {
  delete alliance_;
  alliance_ = alliance;
  if (alliance) {
    set_has_alliance();
  } else {
    clear_has_alliance();
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoAlliance.ReplyAllianceMemberBC.alliance)
}

// -------------------------------------------------------------------

// GetMemberResp

// repeated .ProtoAlliance.AllianceMemberCPP members = 1;
inline int GetMemberResp::members_size() const {
  return members_.size();
}
inline void GetMemberResp::clear_members() {
  members_.Clear();
}
inline const ::ProtoAlliance::AllianceMemberCPP& GetMemberResp::members(int index) const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.GetMemberResp.members)
  return members_.Get(index);
}
inline ::ProtoAlliance::AllianceMemberCPP* GetMemberResp::mutable_members(int index) {
  // @@protoc_insertion_point(field_mutable:ProtoAlliance.GetMemberResp.members)
  return members_.Mutable(index);
}
inline ::ProtoAlliance::AllianceMemberCPP* GetMemberResp::add_members() {
  // @@protoc_insertion_point(field_add:ProtoAlliance.GetMemberResp.members)
  return members_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ProtoAlliance::AllianceMemberCPP >&
GetMemberResp::members() const {
  // @@protoc_insertion_point(field_list:ProtoAlliance.GetMemberResp.members)
  return members_;
}
inline ::google::protobuf::RepeatedPtrField< ::ProtoAlliance::AllianceMemberCPP >*
GetMemberResp::mutable_members() {
  // @@protoc_insertion_point(field_mutable_list:ProtoAlliance.GetMemberResp.members)
  return &members_;
}

// required uint32 allianceId = 2;
inline bool GetMemberResp::has_allianceid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetMemberResp::set_has_allianceid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetMemberResp::clear_has_allianceid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetMemberResp::clear_allianceid() {
  allianceid_ = 0u;
  clear_has_allianceid();
}
inline ::google::protobuf::uint32 GetMemberResp::allianceid() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.GetMemberResp.allianceId)
  return allianceid_;
}
inline void GetMemberResp::set_allianceid(::google::protobuf::uint32 value) {
  set_has_allianceid();
  allianceid_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.GetMemberResp.allianceId)
}

// -------------------------------------------------------------------

// RequestAlliance

// -------------------------------------------------------------------

// RequestAllianceBC

// required uint32 aid = 1;
inline bool RequestAllianceBC::has_aid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RequestAllianceBC::set_has_aid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RequestAllianceBC::clear_has_aid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RequestAllianceBC::clear_aid() {
  aid_ = 0u;
  clear_has_aid();
}
inline ::google::protobuf::uint32 RequestAllianceBC::aid() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.RequestAllianceBC.aid)
  return aid_;
}
inline void RequestAllianceBC::set_aid(::google::protobuf::uint32 value) {
  set_has_aid();
  aid_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.RequestAllianceBC.aid)
}

// required uint32 uid = 2;
inline bool RequestAllianceBC::has_uid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RequestAllianceBC::set_has_uid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RequestAllianceBC::clear_has_uid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RequestAllianceBC::clear_uid() {
  uid_ = 0u;
  clear_has_uid();
}
inline ::google::protobuf::uint32 RequestAllianceBC::uid() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.RequestAllianceBC.uid)
  return uid_;
}
inline void RequestAllianceBC::set_uid(::google::protobuf::uint32 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.RequestAllianceBC.uid)
}

// -------------------------------------------------------------------

// ReplyAllianceBC

// required uint32 uid = 1;
inline bool ReplyAllianceBC::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReplyAllianceBC::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReplyAllianceBC::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReplyAllianceBC::clear_uid() {
  uid_ = 0u;
  clear_has_uid();
}
inline ::google::protobuf::uint32 ReplyAllianceBC::uid() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.ReplyAllianceBC.uid)
  return uid_;
}
inline void ReplyAllianceBC::set_uid(::google::protobuf::uint32 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.ReplyAllianceBC.uid)
}

// optional .ProtoAlliance.AllianceCPP alliance = 2;
inline bool ReplyAllianceBC::has_alliance() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ReplyAllianceBC::set_has_alliance() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ReplyAllianceBC::clear_has_alliance() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ReplyAllianceBC::clear_alliance() {
  if (alliance_ != NULL) alliance_->::ProtoAlliance::AllianceCPP::Clear();
  clear_has_alliance();
}
inline const ::ProtoAlliance::AllianceCPP& ReplyAllianceBC::alliance() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.ReplyAllianceBC.alliance)
  return alliance_ != NULL ? *alliance_ : *default_instance_->alliance_;
}
inline ::ProtoAlliance::AllianceCPP* ReplyAllianceBC::mutable_alliance() {
  set_has_alliance();
  if (alliance_ == NULL) alliance_ = new ::ProtoAlliance::AllianceCPP;
  // @@protoc_insertion_point(field_mutable:ProtoAlliance.ReplyAllianceBC.alliance)
  return alliance_;
}
inline ::ProtoAlliance::AllianceCPP* ReplyAllianceBC::release_alliance() {
  clear_has_alliance();
  ::ProtoAlliance::AllianceCPP* temp = alliance_;
  alliance_ = NULL;
  return temp;
}
inline void ReplyAllianceBC::set_allocated_alliance(::ProtoAlliance::AllianceCPP* alliance) {
  delete alliance_;
  alliance_ = alliance;
  if (alliance) {
    set_has_alliance();
  } else {
    clear_has_alliance();
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoAlliance.ReplyAllianceBC.alliance)
}

// -------------------------------------------------------------------

// RequestUpdateMemberBC

// required uint32 aid = 1;
inline bool RequestUpdateMemberBC::has_aid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RequestUpdateMemberBC::set_has_aid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RequestUpdateMemberBC::clear_has_aid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RequestUpdateMemberBC::clear_aid() {
  aid_ = 0u;
  clear_has_aid();
}
inline ::google::protobuf::uint32 RequestUpdateMemberBC::aid() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.RequestUpdateMemberBC.aid)
  return aid_;
}
inline void RequestUpdateMemberBC::set_aid(::google::protobuf::uint32 value) {
  set_has_aid();
  aid_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.RequestUpdateMemberBC.aid)
}

// required uint32 uid = 2;
inline bool RequestUpdateMemberBC::has_uid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RequestUpdateMemberBC::set_has_uid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RequestUpdateMemberBC::clear_has_uid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RequestUpdateMemberBC::clear_uid() {
  uid_ = 0u;
  clear_has_uid();
}
inline ::google::protobuf::uint32 RequestUpdateMemberBC::uid() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.RequestUpdateMemberBC.uid)
  return uid_;
}
inline void RequestUpdateMemberBC::set_uid(::google::protobuf::uint32 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.RequestUpdateMemberBC.uid)
}

// optional uint32 onlineTs = 3;
inline bool RequestUpdateMemberBC::has_onlinets() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RequestUpdateMemberBC::set_has_onlinets() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RequestUpdateMemberBC::clear_has_onlinets() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RequestUpdateMemberBC::clear_onlinets() {
  onlinets_ = 0u;
  clear_has_onlinets();
}
inline ::google::protobuf::uint32 RequestUpdateMemberBC::onlinets() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.RequestUpdateMemberBC.onlineTs)
  return onlinets_;
}
inline void RequestUpdateMemberBC::set_onlinets(::google::protobuf::uint32 value) {
  set_has_onlinets();
  onlinets_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.RequestUpdateMemberBC.onlineTs)
}

// optional uint32 helpTs = 4;
inline bool RequestUpdateMemberBC::has_helpts() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RequestUpdateMemberBC::set_has_helpts() {
  _has_bits_[0] |= 0x00000008u;
}
inline void RequestUpdateMemberBC::clear_has_helpts() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void RequestUpdateMemberBC::clear_helpts() {
  helpts_ = 0u;
  clear_has_helpts();
}
inline ::google::protobuf::uint32 RequestUpdateMemberBC::helpts() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.RequestUpdateMemberBC.helpTs)
  return helpts_;
}
inline void RequestUpdateMemberBC::set_helpts(::google::protobuf::uint32 value) {
  set_has_helpts();
  helpts_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.RequestUpdateMemberBC.helpTs)
}

// optional uint32 level = 5;
inline bool RequestUpdateMemberBC::has_level() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void RequestUpdateMemberBC::set_has_level() {
  _has_bits_[0] |= 0x00000010u;
}
inline void RequestUpdateMemberBC::clear_has_level() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void RequestUpdateMemberBC::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 RequestUpdateMemberBC::level() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.RequestUpdateMemberBC.level)
  return level_;
}
inline void RequestUpdateMemberBC::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.RequestUpdateMemberBC.level)
}

// optional bytes name = 6;
inline bool RequestUpdateMemberBC::has_name() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void RequestUpdateMemberBC::set_has_name() {
  _has_bits_[0] |= 0x00000020u;
}
inline void RequestUpdateMemberBC::clear_has_name() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void RequestUpdateMemberBC::clear_name() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& RequestUpdateMemberBC::name() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.RequestUpdateMemberBC.name)
  return *name_;
}
inline void RequestUpdateMemberBC::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set:ProtoAlliance.RequestUpdateMemberBC.name)
}
inline void RequestUpdateMemberBC::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set_char:ProtoAlliance.RequestUpdateMemberBC.name)
}
inline void RequestUpdateMemberBC::set_name(const void* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ProtoAlliance.RequestUpdateMemberBC.name)
}
inline ::std::string* RequestUpdateMemberBC::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:ProtoAlliance.RequestUpdateMemberBC.name)
  return name_;
}
inline ::std::string* RequestUpdateMemberBC::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void RequestUpdateMemberBC::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoAlliance.RequestUpdateMemberBC.name)
}

// optional uint32 vipLevel = 7;
inline bool RequestUpdateMemberBC::has_viplevel() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void RequestUpdateMemberBC::set_has_viplevel() {
  _has_bits_[0] |= 0x00000040u;
}
inline void RequestUpdateMemberBC::clear_has_viplevel() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void RequestUpdateMemberBC::clear_viplevel() {
  viplevel_ = 0u;
  clear_has_viplevel();
}
inline ::google::protobuf::uint32 RequestUpdateMemberBC::viplevel() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.RequestUpdateMemberBC.vipLevel)
  return viplevel_;
}
inline void RequestUpdateMemberBC::set_viplevel(::google::protobuf::uint32 value) {
  set_has_viplevel();
  viplevel_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.RequestUpdateMemberBC.vipLevel)
}

// -------------------------------------------------------------------

// RequestAddMemberHelpTimesBC

// required uint32 aid = 1;
inline bool RequestAddMemberHelpTimesBC::has_aid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RequestAddMemberHelpTimesBC::set_has_aid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RequestAddMemberHelpTimesBC::clear_has_aid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RequestAddMemberHelpTimesBC::clear_aid() {
  aid_ = 0u;
  clear_has_aid();
}
inline ::google::protobuf::uint32 RequestAddMemberHelpTimesBC::aid() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.RequestAddMemberHelpTimesBC.aid)
  return aid_;
}
inline void RequestAddMemberHelpTimesBC::set_aid(::google::protobuf::uint32 value) {
  set_has_aid();
  aid_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.RequestAddMemberHelpTimesBC.aid)
}

// required uint32 uid = 2;
inline bool RequestAddMemberHelpTimesBC::has_uid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RequestAddMemberHelpTimesBC::set_has_uid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RequestAddMemberHelpTimesBC::clear_has_uid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RequestAddMemberHelpTimesBC::clear_uid() {
  uid_ = 0u;
  clear_has_uid();
}
inline ::google::protobuf::uint32 RequestAddMemberHelpTimesBC::uid() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.RequestAddMemberHelpTimesBC.uid)
  return uid_;
}
inline void RequestAddMemberHelpTimesBC::set_uid(::google::protobuf::uint32 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.RequestAddMemberHelpTimesBC.uid)
}

// -------------------------------------------------------------------

// RequestAllianceRaceSetFlag

// required uint32 id = 1;
inline bool RequestAllianceRaceSetFlag::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RequestAllianceRaceSetFlag::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RequestAllianceRaceSetFlag::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RequestAllianceRaceSetFlag::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 RequestAllianceRaceSetFlag::id() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.RequestAllianceRaceSetFlag.id)
  return id_;
}
inline void RequestAllianceRaceSetFlag::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.RequestAllianceRaceSetFlag.id)
}

// -------------------------------------------------------------------

// RequestAllianceRaceSetFlagBC

// required uint32 aid = 1;
inline bool RequestAllianceRaceSetFlagBC::has_aid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RequestAllianceRaceSetFlagBC::set_has_aid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RequestAllianceRaceSetFlagBC::clear_has_aid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RequestAllianceRaceSetFlagBC::clear_aid() {
  aid_ = 0u;
  clear_has_aid();
}
inline ::google::protobuf::uint32 RequestAllianceRaceSetFlagBC::aid() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.RequestAllianceRaceSetFlagBC.aid)
  return aid_;
}
inline void RequestAllianceRaceSetFlagBC::set_aid(::google::protobuf::uint32 value) {
  set_has_aid();
  aid_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.RequestAllianceRaceSetFlagBC.aid)
}

// required uint32 uid = 2;
inline bool RequestAllianceRaceSetFlagBC::has_uid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RequestAllianceRaceSetFlagBC::set_has_uid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RequestAllianceRaceSetFlagBC::clear_has_uid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RequestAllianceRaceSetFlagBC::clear_uid() {
  uid_ = 0u;
  clear_has_uid();
}
inline ::google::protobuf::uint32 RequestAllianceRaceSetFlagBC::uid() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.RequestAllianceRaceSetFlagBC.uid)
  return uid_;
}
inline void RequestAllianceRaceSetFlagBC::set_uid(::google::protobuf::uint32 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.RequestAllianceRaceSetFlagBC.uid)
}

// required uint32 id = 3;
inline bool RequestAllianceRaceSetFlagBC::has_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RequestAllianceRaceSetFlagBC::set_has_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RequestAllianceRaceSetFlagBC::clear_has_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RequestAllianceRaceSetFlagBC::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 RequestAllianceRaceSetFlagBC::id() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.RequestAllianceRaceSetFlagBC.id)
  return id_;
}
inline void RequestAllianceRaceSetFlagBC::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.RequestAllianceRaceSetFlagBC.id)
}

// -------------------------------------------------------------------

// RequestAllianceRaceMemberProgress

// -------------------------------------------------------------------

// RequestAllianceRaceMemberProgressBC

// required uint32 aid = 1;
inline bool RequestAllianceRaceMemberProgressBC::has_aid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RequestAllianceRaceMemberProgressBC::set_has_aid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RequestAllianceRaceMemberProgressBC::clear_has_aid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RequestAllianceRaceMemberProgressBC::clear_aid() {
  aid_ = 0u;
  clear_has_aid();
}
inline ::google::protobuf::uint32 RequestAllianceRaceMemberProgressBC::aid() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.RequestAllianceRaceMemberProgressBC.aid)
  return aid_;
}
inline void RequestAllianceRaceMemberProgressBC::set_aid(::google::protobuf::uint32 value) {
  set_has_aid();
  aid_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.RequestAllianceRaceMemberProgressBC.aid)
}

// required uint32 uid = 2;
inline bool RequestAllianceRaceMemberProgressBC::has_uid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RequestAllianceRaceMemberProgressBC::set_has_uid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RequestAllianceRaceMemberProgressBC::clear_has_uid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RequestAllianceRaceMemberProgressBC::clear_uid() {
  uid_ = 0u;
  clear_has_uid();
}
inline ::google::protobuf::uint32 RequestAllianceRaceMemberProgressBC::uid() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.RequestAllianceRaceMemberProgressBC.uid)
  return uid_;
}
inline void RequestAllianceRaceMemberProgressBC::set_uid(::google::protobuf::uint32 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.RequestAllianceRaceMemberProgressBC.uid)
}

// -------------------------------------------------------------------

// ReplyAllianceRaceMemberProgress

// required uint32 orderId = 1;
inline bool ReplyAllianceRaceMemberProgress::has_orderid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReplyAllianceRaceMemberProgress::set_has_orderid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReplyAllianceRaceMemberProgress::clear_has_orderid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReplyAllianceRaceMemberProgress::clear_orderid() {
  orderid_ = 0u;
  clear_has_orderid();
}
inline ::google::protobuf::uint32 ReplyAllianceRaceMemberProgress::orderid() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.ReplyAllianceRaceMemberProgress.orderId)
  return orderid_;
}
inline void ReplyAllianceRaceMemberProgress::set_orderid(::google::protobuf::uint32 value) {
  set_has_orderid();
  orderid_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.ReplyAllianceRaceMemberProgress.orderId)
}

// required uint32 finish = 2;
inline bool ReplyAllianceRaceMemberProgress::has_finish() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ReplyAllianceRaceMemberProgress::set_has_finish() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ReplyAllianceRaceMemberProgress::clear_has_finish() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ReplyAllianceRaceMemberProgress::clear_finish() {
  finish_ = 0u;
  clear_has_finish();
}
inline ::google::protobuf::uint32 ReplyAllianceRaceMemberProgress::finish() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.ReplyAllianceRaceMemberProgress.finish)
  return finish_;
}
inline void ReplyAllianceRaceMemberProgress::set_finish(::google::protobuf::uint32 value) {
  set_has_finish();
  finish_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.ReplyAllianceRaceMemberProgress.finish)
}

// required uint32 ts = 3;
inline bool ReplyAllianceRaceMemberProgress::has_ts() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ReplyAllianceRaceMemberProgress::set_has_ts() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ReplyAllianceRaceMemberProgress::clear_has_ts() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ReplyAllianceRaceMemberProgress::clear_ts() {
  ts_ = 0u;
  clear_has_ts();
}
inline ::google::protobuf::uint32 ReplyAllianceRaceMemberProgress::ts() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.ReplyAllianceRaceMemberProgress.ts)
  return ts_;
}
inline void ReplyAllianceRaceMemberProgress::set_ts(::google::protobuf::uint32 value) {
  set_has_ts();
  ts_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.ReplyAllianceRaceMemberProgress.ts)
}

// repeated uint32 progress = 4;
inline int ReplyAllianceRaceMemberProgress::progress_size() const {
  return progress_.size();
}
inline void ReplyAllianceRaceMemberProgress::clear_progress() {
  progress_.Clear();
}
inline ::google::protobuf::uint32 ReplyAllianceRaceMemberProgress::progress(int index) const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.ReplyAllianceRaceMemberProgress.progress)
  return progress_.Get(index);
}
inline void ReplyAllianceRaceMemberProgress::set_progress(int index, ::google::protobuf::uint32 value) {
  progress_.Set(index, value);
  // @@protoc_insertion_point(field_set:ProtoAlliance.ReplyAllianceRaceMemberProgress.progress)
}
inline void ReplyAllianceRaceMemberProgress::add_progress(::google::protobuf::uint32 value) {
  progress_.Add(value);
  // @@protoc_insertion_point(field_add:ProtoAlliance.ReplyAllianceRaceMemberProgress.progress)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
ReplyAllianceRaceMemberProgress::progress() const {
  // @@protoc_insertion_point(field_list:ProtoAlliance.ReplyAllianceRaceMemberProgress.progress)
  return progress_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
ReplyAllianceRaceMemberProgress::mutable_progress() {
  // @@protoc_insertion_point(field_mutable_list:ProtoAlliance.ReplyAllianceRaceMemberProgress.progress)
  return &progress_;
}

// -------------------------------------------------------------------

// RequestAllianceRaceInfo

// -------------------------------------------------------------------

// RequestAllianceRaceInfoBC

// required uint32 aid = 1;
inline bool RequestAllianceRaceInfoBC::has_aid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RequestAllianceRaceInfoBC::set_has_aid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RequestAllianceRaceInfoBC::clear_has_aid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RequestAllianceRaceInfoBC::clear_aid() {
  aid_ = 0u;
  clear_has_aid();
}
inline ::google::protobuf::uint32 RequestAllianceRaceInfoBC::aid() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.RequestAllianceRaceInfoBC.aid)
  return aid_;
}
inline void RequestAllianceRaceInfoBC::set_aid(::google::protobuf::uint32 value) {
  set_has_aid();
  aid_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.RequestAllianceRaceInfoBC.aid)
}

// required uint32 uid = 2;
inline bool RequestAllianceRaceInfoBC::has_uid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RequestAllianceRaceInfoBC::set_has_uid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RequestAllianceRaceInfoBC::clear_has_uid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RequestAllianceRaceInfoBC::clear_uid() {
  uid_ = 0u;
  clear_has_uid();
}
inline ::google::protobuf::uint32 RequestAllianceRaceInfoBC::uid() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.RequestAllianceRaceInfoBC.uid)
  return uid_;
}
inline void RequestAllianceRaceInfoBC::set_uid(::google::protobuf::uint32 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.RequestAllianceRaceInfoBC.uid)
}

// -------------------------------------------------------------------

// ReplyAllianceRaceInfo

// required uint32 point = 1;
inline bool ReplyAllianceRaceInfo::has_point() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReplyAllianceRaceInfo::set_has_point() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReplyAllianceRaceInfo::clear_has_point() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReplyAllianceRaceInfo::clear_point() {
  point_ = 0u;
  clear_has_point();
}
inline ::google::protobuf::uint32 ReplyAllianceRaceInfo::point() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.ReplyAllianceRaceInfo.point)
  return point_;
}
inline void ReplyAllianceRaceInfo::set_point(::google::protobuf::uint32 value) {
  set_has_point();
  point_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.ReplyAllianceRaceInfo.point)
}

// required uint32 raceLevel = 2;
inline bool ReplyAllianceRaceInfo::has_racelevel() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ReplyAllianceRaceInfo::set_has_racelevel() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ReplyAllianceRaceInfo::clear_has_racelevel() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ReplyAllianceRaceInfo::clear_racelevel() {
  racelevel_ = 0u;
  clear_has_racelevel();
}
inline ::google::protobuf::uint32 ReplyAllianceRaceInfo::racelevel() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.ReplyAllianceRaceInfo.raceLevel)
  return racelevel_;
}
inline void ReplyAllianceRaceInfo::set_racelevel(::google::protobuf::uint32 value) {
  set_has_racelevel();
  racelevel_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.ReplyAllianceRaceInfo.raceLevel)
}

// required uint32 overTs = 3;
inline bool ReplyAllianceRaceInfo::has_overts() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ReplyAllianceRaceInfo::set_has_overts() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ReplyAllianceRaceInfo::clear_has_overts() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ReplyAllianceRaceInfo::clear_overts() {
  overts_ = 0u;
  clear_has_overts();
}
inline ::google::protobuf::uint32 ReplyAllianceRaceInfo::overts() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.ReplyAllianceRaceInfo.overTs)
  return overts_;
}
inline void ReplyAllianceRaceInfo::set_overts(::google::protobuf::uint32 value) {
  set_has_overts();
  overts_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.ReplyAllianceRaceInfo.overTs)
}

// optional uint32 flag = 4;
inline bool ReplyAllianceRaceInfo::has_flag() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ReplyAllianceRaceInfo::set_has_flag() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ReplyAllianceRaceInfo::clear_has_flag() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ReplyAllianceRaceInfo::clear_flag() {
  flag_ = 0u;
  clear_has_flag();
}
inline ::google::protobuf::uint32 ReplyAllianceRaceInfo::flag() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.ReplyAllianceRaceInfo.flag)
  return flag_;
}
inline void ReplyAllianceRaceInfo::set_flag(::google::protobuf::uint32 value) {
  set_has_flag();
  flag_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.ReplyAllianceRaceInfo.flag)
}

// optional uint32 inRace = 5;
inline bool ReplyAllianceRaceInfo::has_inrace() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ReplyAllianceRaceInfo::set_has_inrace() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ReplyAllianceRaceInfo::clear_has_inrace() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ReplyAllianceRaceInfo::clear_inrace() {
  inrace_ = 0u;
  clear_has_inrace();
}
inline ::google::protobuf::uint32 ReplyAllianceRaceInfo::inrace() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.ReplyAllianceRaceInfo.inRace)
  return inrace_;
}
inline void ReplyAllianceRaceInfo::set_inrace(::google::protobuf::uint32 value) {
  set_has_inrace();
  inrace_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.ReplyAllianceRaceInfo.inRace)
}

// optional uint32 memberPoint = 6;
inline bool ReplyAllianceRaceInfo::has_memberpoint() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ReplyAllianceRaceInfo::set_has_memberpoint() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ReplyAllianceRaceInfo::clear_has_memberpoint() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ReplyAllianceRaceInfo::clear_memberpoint() {
  memberpoint_ = 0u;
  clear_has_memberpoint();
}
inline ::google::protobuf::uint32 ReplyAllianceRaceInfo::memberpoint() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.ReplyAllianceRaceInfo.memberPoint)
  return memberpoint_;
}
inline void ReplyAllianceRaceInfo::set_memberpoint(::google::protobuf::uint32 value) {
  set_has_memberpoint();
  memberpoint_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.ReplyAllianceRaceInfo.memberPoint)
}

// required uint32 openRace = 7;
inline bool ReplyAllianceRaceInfo::has_openrace() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void ReplyAllianceRaceInfo::set_has_openrace() {
  _has_bits_[0] |= 0x00000040u;
}
inline void ReplyAllianceRaceInfo::clear_has_openrace() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void ReplyAllianceRaceInfo::clear_openrace() {
  openrace_ = 0u;
  clear_has_openrace();
}
inline ::google::protobuf::uint32 ReplyAllianceRaceInfo::openrace() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.ReplyAllianceRaceInfo.openRace)
  return openrace_;
}
inline void ReplyAllianceRaceInfo::set_openrace(::google::protobuf::uint32 value) {
  set_has_openrace();
  openrace_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.ReplyAllianceRaceInfo.openRace)
}

// -------------------------------------------------------------------

// AllianceRaceOrder

// required uint32 id = 1;
inline bool AllianceRaceOrder::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AllianceRaceOrder::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AllianceRaceOrder::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AllianceRaceOrder::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 AllianceRaceOrder::id() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.AllianceRaceOrder.id)
  return id_;
}
inline void AllianceRaceOrder::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.AllianceRaceOrder.id)
}

// required uint32 cdTs = 2;
inline bool AllianceRaceOrder::has_cdts() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AllianceRaceOrder::set_has_cdts() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AllianceRaceOrder::clear_has_cdts() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AllianceRaceOrder::clear_cdts() {
  cdts_ = 0u;
  clear_has_cdts();
}
inline ::google::protobuf::uint32 AllianceRaceOrder::cdts() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.AllianceRaceOrder.cdTs)
  return cdts_;
}
inline void AllianceRaceOrder::set_cdts(::google::protobuf::uint32 value) {
  set_has_cdts();
  cdts_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.AllianceRaceOrder.cdTs)
}

// -------------------------------------------------------------------

// AllianceRaceMemberOrder

// required uint32 uid = 1;
inline bool AllianceRaceMemberOrder::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AllianceRaceMemberOrder::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AllianceRaceMemberOrder::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AllianceRaceMemberOrder::clear_uid() {
  uid_ = 0u;
  clear_has_uid();
}
inline ::google::protobuf::uint32 AllianceRaceMemberOrder::uid() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.AllianceRaceMemberOrder.uid)
  return uid_;
}
inline void AllianceRaceMemberOrder::set_uid(::google::protobuf::uint32 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.AllianceRaceMemberOrder.uid)
}

// required uint32 id = 2;
inline bool AllianceRaceMemberOrder::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AllianceRaceMemberOrder::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AllianceRaceMemberOrder::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AllianceRaceMemberOrder::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 AllianceRaceMemberOrder::id() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.AllianceRaceMemberOrder.id)
  return id_;
}
inline void AllianceRaceMemberOrder::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.AllianceRaceMemberOrder.id)
}

// required uint32 ts = 3;
inline bool AllianceRaceMemberOrder::has_ts() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AllianceRaceMemberOrder::set_has_ts() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AllianceRaceMemberOrder::clear_has_ts() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AllianceRaceMemberOrder::clear_ts() {
  ts_ = 0u;
  clear_has_ts();
}
inline ::google::protobuf::uint32 AllianceRaceMemberOrder::ts() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.AllianceRaceMemberOrder.ts)
  return ts_;
}
inline void AllianceRaceMemberOrder::set_ts(::google::protobuf::uint32 value) {
  set_has_ts();
  ts_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.AllianceRaceMemberOrder.ts)
}

// required uint32 level = 4;
inline bool AllianceRaceMemberOrder::has_level() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void AllianceRaceMemberOrder::set_has_level() {
  _has_bits_[0] |= 0x00000008u;
}
inline void AllianceRaceMemberOrder::clear_has_level() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void AllianceRaceMemberOrder::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 AllianceRaceMemberOrder::level() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.AllianceRaceMemberOrder.level)
  return level_;
}
inline void AllianceRaceMemberOrder::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.AllianceRaceMemberOrder.level)
}

// required bytes name = 5;
inline bool AllianceRaceMemberOrder::has_name() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void AllianceRaceMemberOrder::set_has_name() {
  _has_bits_[0] |= 0x00000010u;
}
inline void AllianceRaceMemberOrder::clear_has_name() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void AllianceRaceMemberOrder::clear_name() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& AllianceRaceMemberOrder::name() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.AllianceRaceMemberOrder.name)
  return *name_;
}
inline void AllianceRaceMemberOrder::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set:ProtoAlliance.AllianceRaceMemberOrder.name)
}
inline void AllianceRaceMemberOrder::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set_char:ProtoAlliance.AllianceRaceMemberOrder.name)
}
inline void AllianceRaceMemberOrder::set_name(const void* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ProtoAlliance.AllianceRaceMemberOrder.name)
}
inline ::std::string* AllianceRaceMemberOrder::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:ProtoAlliance.AllianceRaceMemberOrder.name)
  return name_;
}
inline ::std::string* AllianceRaceMemberOrder::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void AllianceRaceMemberOrder::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoAlliance.AllianceRaceMemberOrder.name)
}

// required bytes fig = 6;
inline bool AllianceRaceMemberOrder::has_fig() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void AllianceRaceMemberOrder::set_has_fig() {
  _has_bits_[0] |= 0x00000020u;
}
inline void AllianceRaceMemberOrder::clear_has_fig() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void AllianceRaceMemberOrder::clear_fig() {
  if (fig_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    fig_->clear();
  }
  clear_has_fig();
}
inline const ::std::string& AllianceRaceMemberOrder::fig() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.AllianceRaceMemberOrder.fig)
  return *fig_;
}
inline void AllianceRaceMemberOrder::set_fig(const ::std::string& value) {
  set_has_fig();
  if (fig_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    fig_ = new ::std::string;
  }
  fig_->assign(value);
  // @@protoc_insertion_point(field_set:ProtoAlliance.AllianceRaceMemberOrder.fig)
}
inline void AllianceRaceMemberOrder::set_fig(const char* value) {
  set_has_fig();
  if (fig_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    fig_ = new ::std::string;
  }
  fig_->assign(value);
  // @@protoc_insertion_point(field_set_char:ProtoAlliance.AllianceRaceMemberOrder.fig)
}
inline void AllianceRaceMemberOrder::set_fig(const void* value, size_t size) {
  set_has_fig();
  if (fig_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    fig_ = new ::std::string;
  }
  fig_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ProtoAlliance.AllianceRaceMemberOrder.fig)
}
inline ::std::string* AllianceRaceMemberOrder::mutable_fig() {
  set_has_fig();
  if (fig_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    fig_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:ProtoAlliance.AllianceRaceMemberOrder.fig)
  return fig_;
}
inline ::std::string* AllianceRaceMemberOrder::release_fig() {
  clear_has_fig();
  if (fig_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = fig_;
    fig_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void AllianceRaceMemberOrder::set_allocated_fig(::std::string* fig) {
  if (fig_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete fig_;
  }
  if (fig) {
    set_has_fig();
    fig_ = fig;
  } else {
    clear_has_fig();
    fig_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoAlliance.AllianceRaceMemberOrder.fig)
}

// -------------------------------------------------------------------

// RequestAllianceRaceOrder

// -------------------------------------------------------------------

// RequestAllianceRaceOrderBC

// required uint32 aid = 1;
inline bool RequestAllianceRaceOrderBC::has_aid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RequestAllianceRaceOrderBC::set_has_aid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RequestAllianceRaceOrderBC::clear_has_aid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RequestAllianceRaceOrderBC::clear_aid() {
  aid_ = 0u;
  clear_has_aid();
}
inline ::google::protobuf::uint32 RequestAllianceRaceOrderBC::aid() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.RequestAllianceRaceOrderBC.aid)
  return aid_;
}
inline void RequestAllianceRaceOrderBC::set_aid(::google::protobuf::uint32 value) {
  set_has_aid();
  aid_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.RequestAllianceRaceOrderBC.aid)
}

// required uint32 uid = 2;
inline bool RequestAllianceRaceOrderBC::has_uid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RequestAllianceRaceOrderBC::set_has_uid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RequestAllianceRaceOrderBC::clear_has_uid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RequestAllianceRaceOrderBC::clear_uid() {
  uid_ = 0u;
  clear_has_uid();
}
inline ::google::protobuf::uint32 RequestAllianceRaceOrderBC::uid() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.RequestAllianceRaceOrderBC.uid)
  return uid_;
}
inline void RequestAllianceRaceOrderBC::set_uid(::google::protobuf::uint32 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.RequestAllianceRaceOrderBC.uid)
}

// -------------------------------------------------------------------

// ReplyAllianceRaceOrder

// required uint32 point = 1;
inline bool ReplyAllianceRaceOrder::has_point() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReplyAllianceRaceOrder::set_has_point() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReplyAllianceRaceOrder::clear_has_point() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReplyAllianceRaceOrder::clear_point() {
  point_ = 0u;
  clear_has_point();
}
inline ::google::protobuf::uint32 ReplyAllianceRaceOrder::point() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.ReplyAllianceRaceOrder.point)
  return point_;
}
inline void ReplyAllianceRaceOrder::set_point(::google::protobuf::uint32 value) {
  set_has_point();
  point_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.ReplyAllianceRaceOrder.point)
}

// required uint32 orderRecv = 2;
inline bool ReplyAllianceRaceOrder::has_orderrecv() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ReplyAllianceRaceOrder::set_has_orderrecv() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ReplyAllianceRaceOrder::clear_has_orderrecv() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ReplyAllianceRaceOrder::clear_orderrecv() {
  orderrecv_ = 0u;
  clear_has_orderrecv();
}
inline ::google::protobuf::uint32 ReplyAllianceRaceOrder::orderrecv() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.ReplyAllianceRaceOrder.orderRecv)
  return orderrecv_;
}
inline void ReplyAllianceRaceOrder::set_orderrecv(::google::protobuf::uint32 value) {
  set_has_orderrecv();
  orderrecv_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.ReplyAllianceRaceOrder.orderRecv)
}

// required uint32 maxOrderRecv = 3;
inline bool ReplyAllianceRaceOrder::has_maxorderrecv() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ReplyAllianceRaceOrder::set_has_maxorderrecv() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ReplyAllianceRaceOrder::clear_has_maxorderrecv() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ReplyAllianceRaceOrder::clear_maxorderrecv() {
  maxorderrecv_ = 0u;
  clear_has_maxorderrecv();
}
inline ::google::protobuf::uint32 ReplyAllianceRaceOrder::maxorderrecv() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.ReplyAllianceRaceOrder.maxOrderRecv)
  return maxorderrecv_;
}
inline void ReplyAllianceRaceOrder::set_maxorderrecv(::google::protobuf::uint32 value) {
  set_has_maxorderrecv();
  maxorderrecv_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.ReplyAllianceRaceOrder.maxOrderRecv)
}

// required uint32 flag = 4;
inline bool ReplyAllianceRaceOrder::has_flag() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ReplyAllianceRaceOrder::set_has_flag() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ReplyAllianceRaceOrder::clear_has_flag() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ReplyAllianceRaceOrder::clear_flag() {
  flag_ = 0u;
  clear_has_flag();
}
inline ::google::protobuf::uint32 ReplyAllianceRaceOrder::flag() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.ReplyAllianceRaceOrder.flag)
  return flag_;
}
inline void ReplyAllianceRaceOrder::set_flag(::google::protobuf::uint32 value) {
  set_has_flag();
  flag_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.ReplyAllianceRaceOrder.flag)
}

// repeated .ProtoAlliance.AllianceRaceOrder order = 5;
inline int ReplyAllianceRaceOrder::order_size() const {
  return order_.size();
}
inline void ReplyAllianceRaceOrder::clear_order() {
  order_.Clear();
}
inline const ::ProtoAlliance::AllianceRaceOrder& ReplyAllianceRaceOrder::order(int index) const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.ReplyAllianceRaceOrder.order)
  return order_.Get(index);
}
inline ::ProtoAlliance::AllianceRaceOrder* ReplyAllianceRaceOrder::mutable_order(int index) {
  // @@protoc_insertion_point(field_mutable:ProtoAlliance.ReplyAllianceRaceOrder.order)
  return order_.Mutable(index);
}
inline ::ProtoAlliance::AllianceRaceOrder* ReplyAllianceRaceOrder::add_order() {
  // @@protoc_insertion_point(field_add:ProtoAlliance.ReplyAllianceRaceOrder.order)
  return order_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ProtoAlliance::AllianceRaceOrder >&
ReplyAllianceRaceOrder::order() const {
  // @@protoc_insertion_point(field_list:ProtoAlliance.ReplyAllianceRaceOrder.order)
  return order_;
}
inline ::google::protobuf::RepeatedPtrField< ::ProtoAlliance::AllianceRaceOrder >*
ReplyAllianceRaceOrder::mutable_order() {
  // @@protoc_insertion_point(field_mutable_list:ProtoAlliance.ReplyAllianceRaceOrder.order)
  return &order_;
}

// repeated .ProtoAlliance.AllianceRaceMemberOrder memberOrder = 6;
inline int ReplyAllianceRaceOrder::memberorder_size() const {
  return memberorder_.size();
}
inline void ReplyAllianceRaceOrder::clear_memberorder() {
  memberorder_.Clear();
}
inline const ::ProtoAlliance::AllianceRaceMemberOrder& ReplyAllianceRaceOrder::memberorder(int index) const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.ReplyAllianceRaceOrder.memberOrder)
  return memberorder_.Get(index);
}
inline ::ProtoAlliance::AllianceRaceMemberOrder* ReplyAllianceRaceOrder::mutable_memberorder(int index) {
  // @@protoc_insertion_point(field_mutable:ProtoAlliance.ReplyAllianceRaceOrder.memberOrder)
  return memberorder_.Mutable(index);
}
inline ::ProtoAlliance::AllianceRaceMemberOrder* ReplyAllianceRaceOrder::add_memberorder() {
  // @@protoc_insertion_point(field_add:ProtoAlliance.ReplyAllianceRaceOrder.memberOrder)
  return memberorder_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ProtoAlliance::AllianceRaceMemberOrder >&
ReplyAllianceRaceOrder::memberorder() const {
  // @@protoc_insertion_point(field_list:ProtoAlliance.ReplyAllianceRaceOrder.memberOrder)
  return memberorder_;
}
inline ::google::protobuf::RepeatedPtrField< ::ProtoAlliance::AllianceRaceMemberOrder >*
ReplyAllianceRaceOrder::mutable_memberorder() {
  // @@protoc_insertion_point(field_mutable_list:ProtoAlliance.ReplyAllianceRaceOrder.memberOrder)
  return &memberorder_;
}

// -------------------------------------------------------------------

// RequestAllianceRaceOperateOrder

// required uint32 slot = 1;
inline bool RequestAllianceRaceOperateOrder::has_slot() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RequestAllianceRaceOperateOrder::set_has_slot() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RequestAllianceRaceOperateOrder::clear_has_slot() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RequestAllianceRaceOperateOrder::clear_slot() {
  slot_ = 0u;
  clear_has_slot();
}
inline ::google::protobuf::uint32 RequestAllianceRaceOperateOrder::slot() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.RequestAllianceRaceOperateOrder.slot)
  return slot_;
}
inline void RequestAllianceRaceOperateOrder::set_slot(::google::protobuf::uint32 value) {
  set_has_slot();
  slot_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.RequestAllianceRaceOperateOrder.slot)
}

// required uint32 operate = 2;
inline bool RequestAllianceRaceOperateOrder::has_operate() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RequestAllianceRaceOperateOrder::set_has_operate() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RequestAllianceRaceOperateOrder::clear_has_operate() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RequestAllianceRaceOperateOrder::clear_operate() {
  operate_ = 0u;
  clear_has_operate();
}
inline ::google::protobuf::uint32 RequestAllianceRaceOperateOrder::operate() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.RequestAllianceRaceOperateOrder.operate)
  return operate_;
}
inline void RequestAllianceRaceOperateOrder::set_operate(::google::protobuf::uint32 value) {
  set_has_operate();
  operate_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.RequestAllianceRaceOperateOrder.operate)
}

// required uint32 cdTs = 3;
inline bool RequestAllianceRaceOperateOrder::has_cdts() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RequestAllianceRaceOperateOrder::set_has_cdts() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RequestAllianceRaceOperateOrder::clear_has_cdts() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RequestAllianceRaceOperateOrder::clear_cdts() {
  cdts_ = 0u;
  clear_has_cdts();
}
inline ::google::protobuf::uint32 RequestAllianceRaceOperateOrder::cdts() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.RequestAllianceRaceOperateOrder.cdTs)
  return cdts_;
}
inline void RequestAllianceRaceOperateOrder::set_cdts(::google::protobuf::uint32 value) {
  set_has_cdts();
  cdts_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.RequestAllianceRaceOperateOrder.cdTs)
}

// -------------------------------------------------------------------

// RequestAllianceRaceOperateOrderBC

// required uint32 aid = 1;
inline bool RequestAllianceRaceOperateOrderBC::has_aid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RequestAllianceRaceOperateOrderBC::set_has_aid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RequestAllianceRaceOperateOrderBC::clear_has_aid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RequestAllianceRaceOperateOrderBC::clear_aid() {
  aid_ = 0u;
  clear_has_aid();
}
inline ::google::protobuf::uint32 RequestAllianceRaceOperateOrderBC::aid() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.RequestAllianceRaceOperateOrderBC.aid)
  return aid_;
}
inline void RequestAllianceRaceOperateOrderBC::set_aid(::google::protobuf::uint32 value) {
  set_has_aid();
  aid_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.RequestAllianceRaceOperateOrderBC.aid)
}

// required uint32 uid = 2;
inline bool RequestAllianceRaceOperateOrderBC::has_uid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RequestAllianceRaceOperateOrderBC::set_has_uid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RequestAllianceRaceOperateOrderBC::clear_has_uid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RequestAllianceRaceOperateOrderBC::clear_uid() {
  uid_ = 0u;
  clear_has_uid();
}
inline ::google::protobuf::uint32 RequestAllianceRaceOperateOrderBC::uid() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.RequestAllianceRaceOperateOrderBC.uid)
  return uid_;
}
inline void RequestAllianceRaceOperateOrderBC::set_uid(::google::protobuf::uint32 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.RequestAllianceRaceOperateOrderBC.uid)
}

// required uint32 slot = 3;
inline bool RequestAllianceRaceOperateOrderBC::has_slot() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RequestAllianceRaceOperateOrderBC::set_has_slot() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RequestAllianceRaceOperateOrderBC::clear_has_slot() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RequestAllianceRaceOperateOrderBC::clear_slot() {
  slot_ = 0u;
  clear_has_slot();
}
inline ::google::protobuf::uint32 RequestAllianceRaceOperateOrderBC::slot() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.RequestAllianceRaceOperateOrderBC.slot)
  return slot_;
}
inline void RequestAllianceRaceOperateOrderBC::set_slot(::google::protobuf::uint32 value) {
  set_has_slot();
  slot_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.RequestAllianceRaceOperateOrderBC.slot)
}

// required uint32 operate = 4;
inline bool RequestAllianceRaceOperateOrderBC::has_operate() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RequestAllianceRaceOperateOrderBC::set_has_operate() {
  _has_bits_[0] |= 0x00000008u;
}
inline void RequestAllianceRaceOperateOrderBC::clear_has_operate() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void RequestAllianceRaceOperateOrderBC::clear_operate() {
  operate_ = 0u;
  clear_has_operate();
}
inline ::google::protobuf::uint32 RequestAllianceRaceOperateOrderBC::operate() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.RequestAllianceRaceOperateOrderBC.operate)
  return operate_;
}
inline void RequestAllianceRaceOperateOrderBC::set_operate(::google::protobuf::uint32 value) {
  set_has_operate();
  operate_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.RequestAllianceRaceOperateOrderBC.operate)
}

// -------------------------------------------------------------------

// ReplyAllianceRaceOperateOrder

// required uint32 ret = 1;
inline bool ReplyAllianceRaceOperateOrder::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReplyAllianceRaceOperateOrder::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReplyAllianceRaceOperateOrder::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReplyAllianceRaceOperateOrder::clear_ret() {
  ret_ = 0u;
  clear_has_ret();
}
inline ::google::protobuf::uint32 ReplyAllianceRaceOperateOrder::ret() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.ReplyAllianceRaceOperateOrder.ret)
  return ret_;
}
inline void ReplyAllianceRaceOperateOrder::set_ret(::google::protobuf::uint32 value) {
  set_has_ret();
  ret_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.ReplyAllianceRaceOperateOrder.ret)
}

// required uint32 uid = 2;
inline bool ReplyAllianceRaceOperateOrder::has_uid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ReplyAllianceRaceOperateOrder::set_has_uid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ReplyAllianceRaceOperateOrder::clear_has_uid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ReplyAllianceRaceOperateOrder::clear_uid() {
  uid_ = 0u;
  clear_has_uid();
}
inline ::google::protobuf::uint32 ReplyAllianceRaceOperateOrder::uid() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.ReplyAllianceRaceOperateOrder.uid)
  return uid_;
}
inline void ReplyAllianceRaceOperateOrder::set_uid(::google::protobuf::uint32 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.ReplyAllianceRaceOperateOrder.uid)
}

// required uint32 operate = 3;
inline bool ReplyAllianceRaceOperateOrder::has_operate() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ReplyAllianceRaceOperateOrder::set_has_operate() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ReplyAllianceRaceOperateOrder::clear_has_operate() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ReplyAllianceRaceOperateOrder::clear_operate() {
  operate_ = 0u;
  clear_has_operate();
}
inline ::google::protobuf::uint32 ReplyAllianceRaceOperateOrder::operate() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.ReplyAllianceRaceOperateOrder.operate)
  return operate_;
}
inline void ReplyAllianceRaceOperateOrder::set_operate(::google::protobuf::uint32 value) {
  set_has_operate();
  operate_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.ReplyAllianceRaceOperateOrder.operate)
}

// required uint32 cdTs = 4;
inline bool ReplyAllianceRaceOperateOrder::has_cdts() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ReplyAllianceRaceOperateOrder::set_has_cdts() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ReplyAllianceRaceOperateOrder::clear_has_cdts() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ReplyAllianceRaceOperateOrder::clear_cdts() {
  cdts_ = 0u;
  clear_has_cdts();
}
inline ::google::protobuf::uint32 ReplyAllianceRaceOperateOrder::cdts() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.ReplyAllianceRaceOperateOrder.cdTs)
  return cdts_;
}
inline void ReplyAllianceRaceOperateOrder::set_cdts(::google::protobuf::uint32 value) {
  set_has_cdts();
  cdts_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.ReplyAllianceRaceOperateOrder.cdTs)
}

// optional .DataCommon.CommonItemsCPP commons = 5;
inline bool ReplyAllianceRaceOperateOrder::has_commons() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ReplyAllianceRaceOperateOrder::set_has_commons() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ReplyAllianceRaceOperateOrder::clear_has_commons() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ReplyAllianceRaceOperateOrder::clear_commons() {
  if (commons_ != NULL) commons_->::DataCommon::CommonItemsCPP::Clear();
  clear_has_commons();
}
inline const ::DataCommon::CommonItemsCPP& ReplyAllianceRaceOperateOrder::commons() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.ReplyAllianceRaceOperateOrder.commons)
  return commons_ != NULL ? *commons_ : *default_instance_->commons_;
}
inline ::DataCommon::CommonItemsCPP* ReplyAllianceRaceOperateOrder::mutable_commons() {
  set_has_commons();
  if (commons_ == NULL) commons_ = new ::DataCommon::CommonItemsCPP;
  // @@protoc_insertion_point(field_mutable:ProtoAlliance.ReplyAllianceRaceOperateOrder.commons)
  return commons_;
}
inline ::DataCommon::CommonItemsCPP* ReplyAllianceRaceOperateOrder::release_commons() {
  clear_has_commons();
  ::DataCommon::CommonItemsCPP* temp = commons_;
  commons_ = NULL;
  return temp;
}
inline void ReplyAllianceRaceOperateOrder::set_allocated_commons(::DataCommon::CommonItemsCPP* commons) {
  delete commons_;
  commons_ = commons;
  if (commons) {
    set_has_commons();
  } else {
    clear_has_commons();
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoAlliance.ReplyAllianceRaceOperateOrder.commons)
}

// optional .ProtoAlliance.ReplyAllianceRaceOrder order = 6;
inline bool ReplyAllianceRaceOperateOrder::has_order() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ReplyAllianceRaceOperateOrder::set_has_order() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ReplyAllianceRaceOperateOrder::clear_has_order() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ReplyAllianceRaceOperateOrder::clear_order() {
  if (order_ != NULL) order_->::ProtoAlliance::ReplyAllianceRaceOrder::Clear();
  clear_has_order();
}
inline const ::ProtoAlliance::ReplyAllianceRaceOrder& ReplyAllianceRaceOperateOrder::order() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.ReplyAllianceRaceOperateOrder.order)
  return order_ != NULL ? *order_ : *default_instance_->order_;
}
inline ::ProtoAlliance::ReplyAllianceRaceOrder* ReplyAllianceRaceOperateOrder::mutable_order() {
  set_has_order();
  if (order_ == NULL) order_ = new ::ProtoAlliance::ReplyAllianceRaceOrder;
  // @@protoc_insertion_point(field_mutable:ProtoAlliance.ReplyAllianceRaceOperateOrder.order)
  return order_;
}
inline ::ProtoAlliance::ReplyAllianceRaceOrder* ReplyAllianceRaceOperateOrder::release_order() {
  clear_has_order();
  ::ProtoAlliance::ReplyAllianceRaceOrder* temp = order_;
  order_ = NULL;
  return temp;
}
inline void ReplyAllianceRaceOperateOrder::set_allocated_order(::ProtoAlliance::ReplyAllianceRaceOrder* order) {
  delete order_;
  order_ = order;
  if (order) {
    set_has_order();
  } else {
    clear_has_order();
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoAlliance.ReplyAllianceRaceOperateOrder.order)
}

// -------------------------------------------------------------------

// RequestAllianceRaceMemberDelOrder

// required uint32 type = 1;
inline bool RequestAllianceRaceMemberDelOrder::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RequestAllianceRaceMemberDelOrder::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RequestAllianceRaceMemberDelOrder::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RequestAllianceRaceMemberDelOrder::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 RequestAllianceRaceMemberDelOrder::type() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.RequestAllianceRaceMemberDelOrder.type)
  return type_;
}
inline void RequestAllianceRaceMemberDelOrder::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.RequestAllianceRaceMemberDelOrder.type)
}

// -------------------------------------------------------------------

// RequestAllianceRaceMemberDelOrderBC

// required uint32 aid = 1;
inline bool RequestAllianceRaceMemberDelOrderBC::has_aid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RequestAllianceRaceMemberDelOrderBC::set_has_aid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RequestAllianceRaceMemberDelOrderBC::clear_has_aid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RequestAllianceRaceMemberDelOrderBC::clear_aid() {
  aid_ = 0u;
  clear_has_aid();
}
inline ::google::protobuf::uint32 RequestAllianceRaceMemberDelOrderBC::aid() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.RequestAllianceRaceMemberDelOrderBC.aid)
  return aid_;
}
inline void RequestAllianceRaceMemberDelOrderBC::set_aid(::google::protobuf::uint32 value) {
  set_has_aid();
  aid_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.RequestAllianceRaceMemberDelOrderBC.aid)
}

// required uint32 uid = 2;
inline bool RequestAllianceRaceMemberDelOrderBC::has_uid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RequestAllianceRaceMemberDelOrderBC::set_has_uid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RequestAllianceRaceMemberDelOrderBC::clear_has_uid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RequestAllianceRaceMemberDelOrderBC::clear_uid() {
  uid_ = 0u;
  clear_has_uid();
}
inline ::google::protobuf::uint32 RequestAllianceRaceMemberDelOrderBC::uid() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.RequestAllianceRaceMemberDelOrderBC.uid)
  return uid_;
}
inline void RequestAllianceRaceMemberDelOrderBC::set_uid(::google::protobuf::uint32 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.RequestAllianceRaceMemberDelOrderBC.uid)
}

// required uint32 type = 3;
inline bool RequestAllianceRaceMemberDelOrderBC::has_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RequestAllianceRaceMemberDelOrderBC::set_has_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RequestAllianceRaceMemberDelOrderBC::clear_has_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RequestAllianceRaceMemberDelOrderBC::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 RequestAllianceRaceMemberDelOrderBC::type() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.RequestAllianceRaceMemberDelOrderBC.type)
  return type_;
}
inline void RequestAllianceRaceMemberDelOrderBC::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.RequestAllianceRaceMemberDelOrderBC.type)
}

// -------------------------------------------------------------------

// RequestAllianceRaceMemberUpdateOrderBC

// required uint32 aid = 1;
inline bool RequestAllianceRaceMemberUpdateOrderBC::has_aid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RequestAllianceRaceMemberUpdateOrderBC::set_has_aid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RequestAllianceRaceMemberUpdateOrderBC::clear_has_aid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RequestAllianceRaceMemberUpdateOrderBC::clear_aid() {
  aid_ = 0u;
  clear_has_aid();
}
inline ::google::protobuf::uint32 RequestAllianceRaceMemberUpdateOrderBC::aid() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.RequestAllianceRaceMemberUpdateOrderBC.aid)
  return aid_;
}
inline void RequestAllianceRaceMemberUpdateOrderBC::set_aid(::google::protobuf::uint32 value) {
  set_has_aid();
  aid_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.RequestAllianceRaceMemberUpdateOrderBC.aid)
}

// required uint32 uid = 2;
inline bool RequestAllianceRaceMemberUpdateOrderBC::has_uid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RequestAllianceRaceMemberUpdateOrderBC::set_has_uid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RequestAllianceRaceMemberUpdateOrderBC::clear_has_uid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RequestAllianceRaceMemberUpdateOrderBC::clear_uid() {
  uid_ = 0u;
  clear_has_uid();
}
inline ::google::protobuf::uint32 RequestAllianceRaceMemberUpdateOrderBC::uid() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.RequestAllianceRaceMemberUpdateOrderBC.uid)
  return uid_;
}
inline void RequestAllianceRaceMemberUpdateOrderBC::set_uid(::google::protobuf::uint32 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.RequestAllianceRaceMemberUpdateOrderBC.uid)
}

// required uint32 orderType = 3;
inline bool RequestAllianceRaceMemberUpdateOrderBC::has_ordertype() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RequestAllianceRaceMemberUpdateOrderBC::set_has_ordertype() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RequestAllianceRaceMemberUpdateOrderBC::clear_has_ordertype() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RequestAllianceRaceMemberUpdateOrderBC::clear_ordertype() {
  ordertype_ = 0u;
  clear_has_ordertype();
}
inline ::google::protobuf::uint32 RequestAllianceRaceMemberUpdateOrderBC::ordertype() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.RequestAllianceRaceMemberUpdateOrderBC.orderType)
  return ordertype_;
}
inline void RequestAllianceRaceMemberUpdateOrderBC::set_ordertype(::google::protobuf::uint32 value) {
  set_has_ordertype();
  ordertype_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.RequestAllianceRaceMemberUpdateOrderBC.orderType)
}

// required uint32 count = 4;
inline bool RequestAllianceRaceMemberUpdateOrderBC::has_count() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RequestAllianceRaceMemberUpdateOrderBC::set_has_count() {
  _has_bits_[0] |= 0x00000008u;
}
inline void RequestAllianceRaceMemberUpdateOrderBC::clear_has_count() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void RequestAllianceRaceMemberUpdateOrderBC::clear_count() {
  count_ = 0u;
  clear_has_count();
}
inline ::google::protobuf::uint32 RequestAllianceRaceMemberUpdateOrderBC::count() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.RequestAllianceRaceMemberUpdateOrderBC.count)
  return count_;
}
inline void RequestAllianceRaceMemberUpdateOrderBC::set_count(::google::protobuf::uint32 value) {
  set_has_count();
  count_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.RequestAllianceRaceMemberUpdateOrderBC.count)
}

// required uint32 target = 5;
inline bool RequestAllianceRaceMemberUpdateOrderBC::has_target() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void RequestAllianceRaceMemberUpdateOrderBC::set_has_target() {
  _has_bits_[0] |= 0x00000010u;
}
inline void RequestAllianceRaceMemberUpdateOrderBC::clear_has_target() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void RequestAllianceRaceMemberUpdateOrderBC::clear_target() {
  target_ = 0u;
  clear_has_target();
}
inline ::google::protobuf::uint32 RequestAllianceRaceMemberUpdateOrderBC::target() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.RequestAllianceRaceMemberUpdateOrderBC.target)
  return target_;
}
inline void RequestAllianceRaceMemberUpdateOrderBC::set_target(::google::protobuf::uint32 value) {
  set_has_target();
  target_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.RequestAllianceRaceMemberUpdateOrderBC.target)
}

// -------------------------------------------------------------------

// RequestAllianceRaceBuyOrder

// -------------------------------------------------------------------

// RequestAllianceRaceBuyOrderBC

// required uint32 aid = 1;
inline bool RequestAllianceRaceBuyOrderBC::has_aid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RequestAllianceRaceBuyOrderBC::set_has_aid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RequestAllianceRaceBuyOrderBC::clear_has_aid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RequestAllianceRaceBuyOrderBC::clear_aid() {
  aid_ = 0u;
  clear_has_aid();
}
inline ::google::protobuf::uint32 RequestAllianceRaceBuyOrderBC::aid() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.RequestAllianceRaceBuyOrderBC.aid)
  return aid_;
}
inline void RequestAllianceRaceBuyOrderBC::set_aid(::google::protobuf::uint32 value) {
  set_has_aid();
  aid_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.RequestAllianceRaceBuyOrderBC.aid)
}

// required uint32 uid = 2;
inline bool RequestAllianceRaceBuyOrderBC::has_uid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RequestAllianceRaceBuyOrderBC::set_has_uid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RequestAllianceRaceBuyOrderBC::clear_has_uid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RequestAllianceRaceBuyOrderBC::clear_uid() {
  uid_ = 0u;
  clear_has_uid();
}
inline ::google::protobuf::uint32 RequestAllianceRaceBuyOrderBC::uid() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.RequestAllianceRaceBuyOrderBC.uid)
  return uid_;
}
inline void RequestAllianceRaceBuyOrderBC::set_uid(::google::protobuf::uint32 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.RequestAllianceRaceBuyOrderBC.uid)
}

// -------------------------------------------------------------------

// ReplyAllianceRaceBuyOrder

// required uint32 ret = 1;
inline bool ReplyAllianceRaceBuyOrder::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReplyAllianceRaceBuyOrder::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReplyAllianceRaceBuyOrder::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReplyAllianceRaceBuyOrder::clear_ret() {
  ret_ = 0u;
  clear_has_ret();
}
inline ::google::protobuf::uint32 ReplyAllianceRaceBuyOrder::ret() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.ReplyAllianceRaceBuyOrder.ret)
  return ret_;
}
inline void ReplyAllianceRaceBuyOrder::set_ret(::google::protobuf::uint32 value) {
  set_has_ret();
  ret_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.ReplyAllianceRaceBuyOrder.ret)
}

// required uint32 uid = 2;
inline bool ReplyAllianceRaceBuyOrder::has_uid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ReplyAllianceRaceBuyOrder::set_has_uid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ReplyAllianceRaceBuyOrder::clear_has_uid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ReplyAllianceRaceBuyOrder::clear_uid() {
  uid_ = 0u;
  clear_has_uid();
}
inline ::google::protobuf::uint32 ReplyAllianceRaceBuyOrder::uid() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.ReplyAllianceRaceBuyOrder.uid)
  return uid_;
}
inline void ReplyAllianceRaceBuyOrder::set_uid(::google::protobuf::uint32 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.ReplyAllianceRaceBuyOrder.uid)
}

// optional .DataCommon.CommonItemsCPP commons = 3;
inline bool ReplyAllianceRaceBuyOrder::has_commons() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ReplyAllianceRaceBuyOrder::set_has_commons() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ReplyAllianceRaceBuyOrder::clear_has_commons() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ReplyAllianceRaceBuyOrder::clear_commons() {
  if (commons_ != NULL) commons_->::DataCommon::CommonItemsCPP::Clear();
  clear_has_commons();
}
inline const ::DataCommon::CommonItemsCPP& ReplyAllianceRaceBuyOrder::commons() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.ReplyAllianceRaceBuyOrder.commons)
  return commons_ != NULL ? *commons_ : *default_instance_->commons_;
}
inline ::DataCommon::CommonItemsCPP* ReplyAllianceRaceBuyOrder::mutable_commons() {
  set_has_commons();
  if (commons_ == NULL) commons_ = new ::DataCommon::CommonItemsCPP;
  // @@protoc_insertion_point(field_mutable:ProtoAlliance.ReplyAllianceRaceBuyOrder.commons)
  return commons_;
}
inline ::DataCommon::CommonItemsCPP* ReplyAllianceRaceBuyOrder::release_commons() {
  clear_has_commons();
  ::DataCommon::CommonItemsCPP* temp = commons_;
  commons_ = NULL;
  return temp;
}
inline void ReplyAllianceRaceBuyOrder::set_allocated_commons(::DataCommon::CommonItemsCPP* commons) {
  delete commons_;
  commons_ = commons;
  if (commons) {
    set_has_commons();
  } else {
    clear_has_commons();
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoAlliance.ReplyAllianceRaceBuyOrder.commons)
}

// -------------------------------------------------------------------

// RequestAllianceRaceWatchAd

// required uint32 type = 1;
inline bool RequestAllianceRaceWatchAd::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RequestAllianceRaceWatchAd::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RequestAllianceRaceWatchAd::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RequestAllianceRaceWatchAd::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 RequestAllianceRaceWatchAd::type() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.RequestAllianceRaceWatchAd.type)
  return type_;
}
inline void RequestAllianceRaceWatchAd::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.RequestAllianceRaceWatchAd.type)
}

// -------------------------------------------------------------------

// ReplyAllianceRaceWatchAd

// required uint32 ret = 1;
inline bool ReplyAllianceRaceWatchAd::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReplyAllianceRaceWatchAd::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReplyAllianceRaceWatchAd::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReplyAllianceRaceWatchAd::clear_ret() {
  ret_ = 0u;
  clear_has_ret();
}
inline ::google::protobuf::uint32 ReplyAllianceRaceWatchAd::ret() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.ReplyAllianceRaceWatchAd.ret)
  return ret_;
}
inline void ReplyAllianceRaceWatchAd::set_ret(::google::protobuf::uint32 value) {
  set_has_ret();
  ret_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.ReplyAllianceRaceWatchAd.ret)
}

// optional .DataCommon.CommonItemsCPP commons = 2;
inline bool ReplyAllianceRaceWatchAd::has_commons() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ReplyAllianceRaceWatchAd::set_has_commons() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ReplyAllianceRaceWatchAd::clear_has_commons() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ReplyAllianceRaceWatchAd::clear_commons() {
  if (commons_ != NULL) commons_->::DataCommon::CommonItemsCPP::Clear();
  clear_has_commons();
}
inline const ::DataCommon::CommonItemsCPP& ReplyAllianceRaceWatchAd::commons() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.ReplyAllianceRaceWatchAd.commons)
  return commons_ != NULL ? *commons_ : *default_instance_->commons_;
}
inline ::DataCommon::CommonItemsCPP* ReplyAllianceRaceWatchAd::mutable_commons() {
  set_has_commons();
  if (commons_ == NULL) commons_ = new ::DataCommon::CommonItemsCPP;
  // @@protoc_insertion_point(field_mutable:ProtoAlliance.ReplyAllianceRaceWatchAd.commons)
  return commons_;
}
inline ::DataCommon::CommonItemsCPP* ReplyAllianceRaceWatchAd::release_commons() {
  clear_has_commons();
  ::DataCommon::CommonItemsCPP* temp = commons_;
  commons_ = NULL;
  return temp;
}
inline void ReplyAllianceRaceWatchAd::set_allocated_commons(::DataCommon::CommonItemsCPP* commons) {
  delete commons_;
  commons_ = commons;
  if (commons) {
    set_has_commons();
  } else {
    clear_has_commons();
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoAlliance.ReplyAllianceRaceWatchAd.commons)
}

// optional uint32 point = 3;
inline bool ReplyAllianceRaceWatchAd::has_point() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ReplyAllianceRaceWatchAd::set_has_point() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ReplyAllianceRaceWatchAd::clear_has_point() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ReplyAllianceRaceWatchAd::clear_point() {
  point_ = 0u;
  clear_has_point();
}
inline ::google::protobuf::uint32 ReplyAllianceRaceWatchAd::point() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.ReplyAllianceRaceWatchAd.point)
  return point_;
}
inline void ReplyAllianceRaceWatchAd::set_point(::google::protobuf::uint32 value) {
  set_has_point();
  point_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.ReplyAllianceRaceWatchAd.point)
}

// -------------------------------------------------------------------

// RequestAllianceRaceWatchAdBC

// required uint32 aid = 1;
inline bool RequestAllianceRaceWatchAdBC::has_aid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RequestAllianceRaceWatchAdBC::set_has_aid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RequestAllianceRaceWatchAdBC::clear_has_aid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RequestAllianceRaceWatchAdBC::clear_aid() {
  aid_ = 0u;
  clear_has_aid();
}
inline ::google::protobuf::uint32 RequestAllianceRaceWatchAdBC::aid() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.RequestAllianceRaceWatchAdBC.aid)
  return aid_;
}
inline void RequestAllianceRaceWatchAdBC::set_aid(::google::protobuf::uint32 value) {
  set_has_aid();
  aid_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.RequestAllianceRaceWatchAdBC.aid)
}

// required uint32 uid = 2;
inline bool RequestAllianceRaceWatchAdBC::has_uid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RequestAllianceRaceWatchAdBC::set_has_uid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RequestAllianceRaceWatchAdBC::clear_has_uid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RequestAllianceRaceWatchAdBC::clear_uid() {
  uid_ = 0u;
  clear_has_uid();
}
inline ::google::protobuf::uint32 RequestAllianceRaceWatchAdBC::uid() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.RequestAllianceRaceWatchAdBC.uid)
  return uid_;
}
inline void RequestAllianceRaceWatchAdBC::set_uid(::google::protobuf::uint32 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.RequestAllianceRaceWatchAdBC.uid)
}

// required uint32 point = 3;
inline bool RequestAllianceRaceWatchAdBC::has_point() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RequestAllianceRaceWatchAdBC::set_has_point() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RequestAllianceRaceWatchAdBC::clear_has_point() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RequestAllianceRaceWatchAdBC::clear_point() {
  point_ = 0u;
  clear_has_point();
}
inline ::google::protobuf::uint32 RequestAllianceRaceWatchAdBC::point() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.RequestAllianceRaceWatchAdBC.point)
  return point_;
}
inline void RequestAllianceRaceWatchAdBC::set_point(::google::protobuf::uint32 value) {
  set_has_point();
  point_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.RequestAllianceRaceWatchAdBC.point)
}

// -------------------------------------------------------------------

// RequestAllianceRaceReward

// -------------------------------------------------------------------

// RequestAllianceRaceRewardBC

// required uint32 aid = 1;
inline bool RequestAllianceRaceRewardBC::has_aid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RequestAllianceRaceRewardBC::set_has_aid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RequestAllianceRaceRewardBC::clear_has_aid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RequestAllianceRaceRewardBC::clear_aid() {
  aid_ = 0u;
  clear_has_aid();
}
inline ::google::protobuf::uint32 RequestAllianceRaceRewardBC::aid() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.RequestAllianceRaceRewardBC.aid)
  return aid_;
}
inline void RequestAllianceRaceRewardBC::set_aid(::google::protobuf::uint32 value) {
  set_has_aid();
  aid_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.RequestAllianceRaceRewardBC.aid)
}

// required uint32 uid = 2;
inline bool RequestAllianceRaceRewardBC::has_uid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RequestAllianceRaceRewardBC::set_has_uid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RequestAllianceRaceRewardBC::clear_has_uid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RequestAllianceRaceRewardBC::clear_uid() {
  uid_ = 0u;
  clear_has_uid();
}
inline ::google::protobuf::uint32 RequestAllianceRaceRewardBC::uid() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.RequestAllianceRaceRewardBC.uid)
  return uid_;
}
inline void RequestAllianceRaceRewardBC::set_uid(::google::protobuf::uint32 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.RequestAllianceRaceRewardBC.uid)
}

// repeated uint32 id = 3;
inline int RequestAllianceRaceRewardBC::id_size() const {
  return id_.size();
}
inline void RequestAllianceRaceRewardBC::clear_id() {
  id_.Clear();
}
inline ::google::protobuf::uint32 RequestAllianceRaceRewardBC::id(int index) const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.RequestAllianceRaceRewardBC.id)
  return id_.Get(index);
}
inline void RequestAllianceRaceRewardBC::set_id(int index, ::google::protobuf::uint32 value) {
  id_.Set(index, value);
  // @@protoc_insertion_point(field_set:ProtoAlliance.RequestAllianceRaceRewardBC.id)
}
inline void RequestAllianceRaceRewardBC::add_id(::google::protobuf::uint32 value) {
  id_.Add(value);
  // @@protoc_insertion_point(field_add:ProtoAlliance.RequestAllianceRaceRewardBC.id)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
RequestAllianceRaceRewardBC::id() const {
  // @@protoc_insertion_point(field_list:ProtoAlliance.RequestAllianceRaceRewardBC.id)
  return id_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
RequestAllianceRaceRewardBC::mutable_id() {
  // @@protoc_insertion_point(field_mutable_list:ProtoAlliance.RequestAllianceRaceRewardBC.id)
  return &id_;
}

// -------------------------------------------------------------------

// ReplyAllianceRaceReward

// required uint32 ret = 1;
inline bool ReplyAllianceRaceReward::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReplyAllianceRaceReward::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReplyAllianceRaceReward::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReplyAllianceRaceReward::clear_ret() {
  ret_ = 0u;
  clear_has_ret();
}
inline ::google::protobuf::uint32 ReplyAllianceRaceReward::ret() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.ReplyAllianceRaceReward.ret)
  return ret_;
}
inline void ReplyAllianceRaceReward::set_ret(::google::protobuf::uint32 value) {
  set_has_ret();
  ret_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.ReplyAllianceRaceReward.ret)
}

// required uint32 uid = 2;
inline bool ReplyAllianceRaceReward::has_uid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ReplyAllianceRaceReward::set_has_uid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ReplyAllianceRaceReward::clear_has_uid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ReplyAllianceRaceReward::clear_uid() {
  uid_ = 0u;
  clear_has_uid();
}
inline ::google::protobuf::uint32 ReplyAllianceRaceReward::uid() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.ReplyAllianceRaceReward.uid)
  return uid_;
}
inline void ReplyAllianceRaceReward::set_uid(::google::protobuf::uint32 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.ReplyAllianceRaceReward.uid)
}

// required uint32 rankId = 3;
inline bool ReplyAllianceRaceReward::has_rankid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ReplyAllianceRaceReward::set_has_rankid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ReplyAllianceRaceReward::clear_has_rankid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ReplyAllianceRaceReward::clear_rankid() {
  rankid_ = 0u;
  clear_has_rankid();
}
inline ::google::protobuf::uint32 ReplyAllianceRaceReward::rankid() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.ReplyAllianceRaceReward.rankId)
  return rankid_;
}
inline void ReplyAllianceRaceReward::set_rankid(::google::protobuf::uint32 value) {
  set_has_rankid();
  rankid_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.ReplyAllianceRaceReward.rankId)
}

// required uint32 userLevel = 4;
inline bool ReplyAllianceRaceReward::has_userlevel() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ReplyAllianceRaceReward::set_has_userlevel() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ReplyAllianceRaceReward::clear_has_userlevel() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ReplyAllianceRaceReward::clear_userlevel() {
  userlevel_ = 0u;
  clear_has_userlevel();
}
inline ::google::protobuf::uint32 ReplyAllianceRaceReward::userlevel() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.ReplyAllianceRaceReward.userLevel)
  return userlevel_;
}
inline void ReplyAllianceRaceReward::set_userlevel(::google::protobuf::uint32 value) {
  set_has_userlevel();
  userlevel_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.ReplyAllianceRaceReward.userLevel)
}

// required uint32 olevel = 5;
inline bool ReplyAllianceRaceReward::has_olevel() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ReplyAllianceRaceReward::set_has_olevel() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ReplyAllianceRaceReward::clear_has_olevel() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ReplyAllianceRaceReward::clear_olevel() {
  olevel_ = 0u;
  clear_has_olevel();
}
inline ::google::protobuf::uint32 ReplyAllianceRaceReward::olevel() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.ReplyAllianceRaceReward.olevel)
  return olevel_;
}
inline void ReplyAllianceRaceReward::set_olevel(::google::protobuf::uint32 value) {
  set_has_olevel();
  olevel_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.ReplyAllianceRaceReward.olevel)
}

// required uint32 opoint = 6;
inline bool ReplyAllianceRaceReward::has_opoint() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ReplyAllianceRaceReward::set_has_opoint() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ReplyAllianceRaceReward::clear_has_opoint() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ReplyAllianceRaceReward::clear_opoint() {
  opoint_ = 0u;
  clear_has_opoint();
}
inline ::google::protobuf::uint32 ReplyAllianceRaceReward::opoint() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.ReplyAllianceRaceReward.opoint)
  return opoint_;
}
inline void ReplyAllianceRaceReward::set_opoint(::google::protobuf::uint32 value) {
  set_has_opoint();
  opoint_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.ReplyAllianceRaceReward.opoint)
}

// repeated uint32 gradeId = 7;
inline int ReplyAllianceRaceReward::gradeid_size() const {
  return gradeid_.size();
}
inline void ReplyAllianceRaceReward::clear_gradeid() {
  gradeid_.Clear();
}
inline ::google::protobuf::uint32 ReplyAllianceRaceReward::gradeid(int index) const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.ReplyAllianceRaceReward.gradeId)
  return gradeid_.Get(index);
}
inline void ReplyAllianceRaceReward::set_gradeid(int index, ::google::protobuf::uint32 value) {
  gradeid_.Set(index, value);
  // @@protoc_insertion_point(field_set:ProtoAlliance.ReplyAllianceRaceReward.gradeId)
}
inline void ReplyAllianceRaceReward::add_gradeid(::google::protobuf::uint32 value) {
  gradeid_.Add(value);
  // @@protoc_insertion_point(field_add:ProtoAlliance.ReplyAllianceRaceReward.gradeId)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
ReplyAllianceRaceReward::gradeid() const {
  // @@protoc_insertion_point(field_list:ProtoAlliance.ReplyAllianceRaceReward.gradeId)
  return gradeid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
ReplyAllianceRaceReward::mutable_gradeid() {
  // @@protoc_insertion_point(field_mutable_list:ProtoAlliance.ReplyAllianceRaceReward.gradeId)
  return &gradeid_;
}

// repeated uint32 stageId = 8;
inline int ReplyAllianceRaceReward::stageid_size() const {
  return stageid_.size();
}
inline void ReplyAllianceRaceReward::clear_stageid() {
  stageid_.Clear();
}
inline ::google::protobuf::uint32 ReplyAllianceRaceReward::stageid(int index) const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.ReplyAllianceRaceReward.stageId)
  return stageid_.Get(index);
}
inline void ReplyAllianceRaceReward::set_stageid(int index, ::google::protobuf::uint32 value) {
  stageid_.Set(index, value);
  // @@protoc_insertion_point(field_set:ProtoAlliance.ReplyAllianceRaceReward.stageId)
}
inline void ReplyAllianceRaceReward::add_stageid(::google::protobuf::uint32 value) {
  stageid_.Add(value);
  // @@protoc_insertion_point(field_add:ProtoAlliance.ReplyAllianceRaceReward.stageId)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
ReplyAllianceRaceReward::stageid() const {
  // @@protoc_insertion_point(field_list:ProtoAlliance.ReplyAllianceRaceReward.stageId)
  return stageid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
ReplyAllianceRaceReward::mutable_stageid() {
  // @@protoc_insertion_point(field_mutable_list:ProtoAlliance.ReplyAllianceRaceReward.stageId)
  return &stageid_;
}

// -------------------------------------------------------------------

// RequestAllianceRaceTakeGradeReward

// -------------------------------------------------------------------

// RequestAllianceRaceTakeGradeRewardBC

// required uint32 aid = 1;
inline bool RequestAllianceRaceTakeGradeRewardBC::has_aid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RequestAllianceRaceTakeGradeRewardBC::set_has_aid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RequestAllianceRaceTakeGradeRewardBC::clear_has_aid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RequestAllianceRaceTakeGradeRewardBC::clear_aid() {
  aid_ = 0u;
  clear_has_aid();
}
inline ::google::protobuf::uint32 RequestAllianceRaceTakeGradeRewardBC::aid() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.RequestAllianceRaceTakeGradeRewardBC.aid)
  return aid_;
}
inline void RequestAllianceRaceTakeGradeRewardBC::set_aid(::google::protobuf::uint32 value) {
  set_has_aid();
  aid_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.RequestAllianceRaceTakeGradeRewardBC.aid)
}

// required uint32 uid = 2;
inline bool RequestAllianceRaceTakeGradeRewardBC::has_uid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RequestAllianceRaceTakeGradeRewardBC::set_has_uid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RequestAllianceRaceTakeGradeRewardBC::clear_has_uid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RequestAllianceRaceTakeGradeRewardBC::clear_uid() {
  uid_ = 0u;
  clear_has_uid();
}
inline ::google::protobuf::uint32 RequestAllianceRaceTakeGradeRewardBC::uid() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.RequestAllianceRaceTakeGradeRewardBC.uid)
  return uid_;
}
inline void RequestAllianceRaceTakeGradeRewardBC::set_uid(::google::protobuf::uint32 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.RequestAllianceRaceTakeGradeRewardBC.uid)
}

// -------------------------------------------------------------------

// ReplyAllianceRaceTakeGradeReward

// required uint32 ret = 1;
inline bool ReplyAllianceRaceTakeGradeReward::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReplyAllianceRaceTakeGradeReward::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReplyAllianceRaceTakeGradeReward::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReplyAllianceRaceTakeGradeReward::clear_ret() {
  ret_ = 0u;
  clear_has_ret();
}
inline ::google::protobuf::uint32 ReplyAllianceRaceTakeGradeReward::ret() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.ReplyAllianceRaceTakeGradeReward.ret)
  return ret_;
}
inline void ReplyAllianceRaceTakeGradeReward::set_ret(::google::protobuf::uint32 value) {
  set_has_ret();
  ret_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.ReplyAllianceRaceTakeGradeReward.ret)
}

// required uint32 uid = 2;
inline bool ReplyAllianceRaceTakeGradeReward::has_uid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ReplyAllianceRaceTakeGradeReward::set_has_uid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ReplyAllianceRaceTakeGradeReward::clear_has_uid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ReplyAllianceRaceTakeGradeReward::clear_uid() {
  uid_ = 0u;
  clear_has_uid();
}
inline ::google::protobuf::uint32 ReplyAllianceRaceTakeGradeReward::uid() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.ReplyAllianceRaceTakeGradeReward.uid)
  return uid_;
}
inline void ReplyAllianceRaceTakeGradeReward::set_uid(::google::protobuf::uint32 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.ReplyAllianceRaceTakeGradeReward.uid)
}

// optional .DataCommon.CommonItemsCPP commons = 3;
inline bool ReplyAllianceRaceTakeGradeReward::has_commons() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ReplyAllianceRaceTakeGradeReward::set_has_commons() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ReplyAllianceRaceTakeGradeReward::clear_has_commons() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ReplyAllianceRaceTakeGradeReward::clear_commons() {
  if (commons_ != NULL) commons_->::DataCommon::CommonItemsCPP::Clear();
  clear_has_commons();
}
inline const ::DataCommon::CommonItemsCPP& ReplyAllianceRaceTakeGradeReward::commons() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.ReplyAllianceRaceTakeGradeReward.commons)
  return commons_ != NULL ? *commons_ : *default_instance_->commons_;
}
inline ::DataCommon::CommonItemsCPP* ReplyAllianceRaceTakeGradeReward::mutable_commons() {
  set_has_commons();
  if (commons_ == NULL) commons_ = new ::DataCommon::CommonItemsCPP;
  // @@protoc_insertion_point(field_mutable:ProtoAlliance.ReplyAllianceRaceTakeGradeReward.commons)
  return commons_;
}
inline ::DataCommon::CommonItemsCPP* ReplyAllianceRaceTakeGradeReward::release_commons() {
  clear_has_commons();
  ::DataCommon::CommonItemsCPP* temp = commons_;
  commons_ = NULL;
  return temp;
}
inline void ReplyAllianceRaceTakeGradeReward::set_allocated_commons(::DataCommon::CommonItemsCPP* commons) {
  delete commons_;
  commons_ = commons;
  if (commons) {
    set_has_commons();
  } else {
    clear_has_commons();
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoAlliance.ReplyAllianceRaceTakeGradeReward.commons)
}

// optional uint32 userLevel = 4;
inline bool ReplyAllianceRaceTakeGradeReward::has_userlevel() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ReplyAllianceRaceTakeGradeReward::set_has_userlevel() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ReplyAllianceRaceTakeGradeReward::clear_has_userlevel() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ReplyAllianceRaceTakeGradeReward::clear_userlevel() {
  userlevel_ = 0u;
  clear_has_userlevel();
}
inline ::google::protobuf::uint32 ReplyAllianceRaceTakeGradeReward::userlevel() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.ReplyAllianceRaceTakeGradeReward.userLevel)
  return userlevel_;
}
inline void ReplyAllianceRaceTakeGradeReward::set_userlevel(::google::protobuf::uint32 value) {
  set_has_userlevel();
  userlevel_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.ReplyAllianceRaceTakeGradeReward.userLevel)
}

// optional uint32 rankId = 5;
inline bool ReplyAllianceRaceTakeGradeReward::has_rankid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ReplyAllianceRaceTakeGradeReward::set_has_rankid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ReplyAllianceRaceTakeGradeReward::clear_has_rankid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ReplyAllianceRaceTakeGradeReward::clear_rankid() {
  rankid_ = 0u;
  clear_has_rankid();
}
inline ::google::protobuf::uint32 ReplyAllianceRaceTakeGradeReward::rankid() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.ReplyAllianceRaceTakeGradeReward.rankId)
  return rankid_;
}
inline void ReplyAllianceRaceTakeGradeReward::set_rankid(::google::protobuf::uint32 value) {
  set_has_rankid();
  rankid_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.ReplyAllianceRaceTakeGradeReward.rankId)
}

// repeated uint32 id = 6;
inline int ReplyAllianceRaceTakeGradeReward::id_size() const {
  return id_.size();
}
inline void ReplyAllianceRaceTakeGradeReward::clear_id() {
  id_.Clear();
}
inline ::google::protobuf::uint32 ReplyAllianceRaceTakeGradeReward::id(int index) const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.ReplyAllianceRaceTakeGradeReward.id)
  return id_.Get(index);
}
inline void ReplyAllianceRaceTakeGradeReward::set_id(int index, ::google::protobuf::uint32 value) {
  id_.Set(index, value);
  // @@protoc_insertion_point(field_set:ProtoAlliance.ReplyAllianceRaceTakeGradeReward.id)
}
inline void ReplyAllianceRaceTakeGradeReward::add_id(::google::protobuf::uint32 value) {
  id_.Add(value);
  // @@protoc_insertion_point(field_add:ProtoAlliance.ReplyAllianceRaceTakeGradeReward.id)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
ReplyAllianceRaceTakeGradeReward::id() const {
  // @@protoc_insertion_point(field_list:ProtoAlliance.ReplyAllianceRaceTakeGradeReward.id)
  return id_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
ReplyAllianceRaceTakeGradeReward::mutable_id() {
  // @@protoc_insertion_point(field_mutable_list:ProtoAlliance.ReplyAllianceRaceTakeGradeReward.id)
  return &id_;
}

// -------------------------------------------------------------------

// RequestAllianceRaceTakeStageReward

// repeated uint32 id = 1;
inline int RequestAllianceRaceTakeStageReward::id_size() const {
  return id_.size();
}
inline void RequestAllianceRaceTakeStageReward::clear_id() {
  id_.Clear();
}
inline ::google::protobuf::uint32 RequestAllianceRaceTakeStageReward::id(int index) const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.RequestAllianceRaceTakeStageReward.id)
  return id_.Get(index);
}
inline void RequestAllianceRaceTakeStageReward::set_id(int index, ::google::protobuf::uint32 value) {
  id_.Set(index, value);
  // @@protoc_insertion_point(field_set:ProtoAlliance.RequestAllianceRaceTakeStageReward.id)
}
inline void RequestAllianceRaceTakeStageReward::add_id(::google::protobuf::uint32 value) {
  id_.Add(value);
  // @@protoc_insertion_point(field_add:ProtoAlliance.RequestAllianceRaceTakeStageReward.id)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
RequestAllianceRaceTakeStageReward::id() const {
  // @@protoc_insertion_point(field_list:ProtoAlliance.RequestAllianceRaceTakeStageReward.id)
  return id_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
RequestAllianceRaceTakeStageReward::mutable_id() {
  // @@protoc_insertion_point(field_mutable_list:ProtoAlliance.RequestAllianceRaceTakeStageReward.id)
  return &id_;
}

// -------------------------------------------------------------------

// RequestAllianceRaceTakeStageRewardBC

// required uint32 aid = 1;
inline bool RequestAllianceRaceTakeStageRewardBC::has_aid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RequestAllianceRaceTakeStageRewardBC::set_has_aid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RequestAllianceRaceTakeStageRewardBC::clear_has_aid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RequestAllianceRaceTakeStageRewardBC::clear_aid() {
  aid_ = 0u;
  clear_has_aid();
}
inline ::google::protobuf::uint32 RequestAllianceRaceTakeStageRewardBC::aid() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.RequestAllianceRaceTakeStageRewardBC.aid)
  return aid_;
}
inline void RequestAllianceRaceTakeStageRewardBC::set_aid(::google::protobuf::uint32 value) {
  set_has_aid();
  aid_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.RequestAllianceRaceTakeStageRewardBC.aid)
}

// required uint32 uid = 2;
inline bool RequestAllianceRaceTakeStageRewardBC::has_uid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RequestAllianceRaceTakeStageRewardBC::set_has_uid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RequestAllianceRaceTakeStageRewardBC::clear_has_uid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RequestAllianceRaceTakeStageRewardBC::clear_uid() {
  uid_ = 0u;
  clear_has_uid();
}
inline ::google::protobuf::uint32 RequestAllianceRaceTakeStageRewardBC::uid() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.RequestAllianceRaceTakeStageRewardBC.uid)
  return uid_;
}
inline void RequestAllianceRaceTakeStageRewardBC::set_uid(::google::protobuf::uint32 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.RequestAllianceRaceTakeStageRewardBC.uid)
}

// repeated uint32 id = 3;
inline int RequestAllianceRaceTakeStageRewardBC::id_size() const {
  return id_.size();
}
inline void RequestAllianceRaceTakeStageRewardBC::clear_id() {
  id_.Clear();
}
inline ::google::protobuf::uint32 RequestAllianceRaceTakeStageRewardBC::id(int index) const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.RequestAllianceRaceTakeStageRewardBC.id)
  return id_.Get(index);
}
inline void RequestAllianceRaceTakeStageRewardBC::set_id(int index, ::google::protobuf::uint32 value) {
  id_.Set(index, value);
  // @@protoc_insertion_point(field_set:ProtoAlliance.RequestAllianceRaceTakeStageRewardBC.id)
}
inline void RequestAllianceRaceTakeStageRewardBC::add_id(::google::protobuf::uint32 value) {
  id_.Add(value);
  // @@protoc_insertion_point(field_add:ProtoAlliance.RequestAllianceRaceTakeStageRewardBC.id)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
RequestAllianceRaceTakeStageRewardBC::id() const {
  // @@protoc_insertion_point(field_list:ProtoAlliance.RequestAllianceRaceTakeStageRewardBC.id)
  return id_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
RequestAllianceRaceTakeStageRewardBC::mutable_id() {
  // @@protoc_insertion_point(field_mutable_list:ProtoAlliance.RequestAllianceRaceTakeStageRewardBC.id)
  return &id_;
}

// -------------------------------------------------------------------

// ReplyAllianceRaceTakeStageReward

// required uint32 ret = 1;
inline bool ReplyAllianceRaceTakeStageReward::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReplyAllianceRaceTakeStageReward::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReplyAllianceRaceTakeStageReward::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReplyAllianceRaceTakeStageReward::clear_ret() {
  ret_ = 0u;
  clear_has_ret();
}
inline ::google::protobuf::uint32 ReplyAllianceRaceTakeStageReward::ret() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.ReplyAllianceRaceTakeStageReward.ret)
  return ret_;
}
inline void ReplyAllianceRaceTakeStageReward::set_ret(::google::protobuf::uint32 value) {
  set_has_ret();
  ret_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.ReplyAllianceRaceTakeStageReward.ret)
}

// required uint32 uid = 2;
inline bool ReplyAllianceRaceTakeStageReward::has_uid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ReplyAllianceRaceTakeStageReward::set_has_uid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ReplyAllianceRaceTakeStageReward::clear_has_uid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ReplyAllianceRaceTakeStageReward::clear_uid() {
  uid_ = 0u;
  clear_has_uid();
}
inline ::google::protobuf::uint32 ReplyAllianceRaceTakeStageReward::uid() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.ReplyAllianceRaceTakeStageReward.uid)
  return uid_;
}
inline void ReplyAllianceRaceTakeStageReward::set_uid(::google::protobuf::uint32 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.ReplyAllianceRaceTakeStageReward.uid)
}

// optional .DataCommon.CommonItemsCPP commons = 3;
inline bool ReplyAllianceRaceTakeStageReward::has_commons() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ReplyAllianceRaceTakeStageReward::set_has_commons() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ReplyAllianceRaceTakeStageReward::clear_has_commons() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ReplyAllianceRaceTakeStageReward::clear_commons() {
  if (commons_ != NULL) commons_->::DataCommon::CommonItemsCPP::Clear();
  clear_has_commons();
}
inline const ::DataCommon::CommonItemsCPP& ReplyAllianceRaceTakeStageReward::commons() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.ReplyAllianceRaceTakeStageReward.commons)
  return commons_ != NULL ? *commons_ : *default_instance_->commons_;
}
inline ::DataCommon::CommonItemsCPP* ReplyAllianceRaceTakeStageReward::mutable_commons() {
  set_has_commons();
  if (commons_ == NULL) commons_ = new ::DataCommon::CommonItemsCPP;
  // @@protoc_insertion_point(field_mutable:ProtoAlliance.ReplyAllianceRaceTakeStageReward.commons)
  return commons_;
}
inline ::DataCommon::CommonItemsCPP* ReplyAllianceRaceTakeStageReward::release_commons() {
  clear_has_commons();
  ::DataCommon::CommonItemsCPP* temp = commons_;
  commons_ = NULL;
  return temp;
}
inline void ReplyAllianceRaceTakeStageReward::set_allocated_commons(::DataCommon::CommonItemsCPP* commons) {
  delete commons_;
  commons_ = commons;
  if (commons) {
    set_has_commons();
  } else {
    clear_has_commons();
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoAlliance.ReplyAllianceRaceTakeStageReward.commons)
}

// optional uint32 userLevel = 4;
inline bool ReplyAllianceRaceTakeStageReward::has_userlevel() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ReplyAllianceRaceTakeStageReward::set_has_userlevel() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ReplyAllianceRaceTakeStageReward::clear_has_userlevel() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ReplyAllianceRaceTakeStageReward::clear_userlevel() {
  userlevel_ = 0u;
  clear_has_userlevel();
}
inline ::google::protobuf::uint32 ReplyAllianceRaceTakeStageReward::userlevel() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.ReplyAllianceRaceTakeStageReward.userLevel)
  return userlevel_;
}
inline void ReplyAllianceRaceTakeStageReward::set_userlevel(::google::protobuf::uint32 value) {
  set_has_userlevel();
  userlevel_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.ReplyAllianceRaceTakeStageReward.userLevel)
}

// repeated uint32 id = 5;
inline int ReplyAllianceRaceTakeStageReward::id_size() const {
  return id_.size();
}
inline void ReplyAllianceRaceTakeStageReward::clear_id() {
  id_.Clear();
}
inline ::google::protobuf::uint32 ReplyAllianceRaceTakeStageReward::id(int index) const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.ReplyAllianceRaceTakeStageReward.id)
  return id_.Get(index);
}
inline void ReplyAllianceRaceTakeStageReward::set_id(int index, ::google::protobuf::uint32 value) {
  id_.Set(index, value);
  // @@protoc_insertion_point(field_set:ProtoAlliance.ReplyAllianceRaceTakeStageReward.id)
}
inline void ReplyAllianceRaceTakeStageReward::add_id(::google::protobuf::uint32 value) {
  id_.Add(value);
  // @@protoc_insertion_point(field_add:ProtoAlliance.ReplyAllianceRaceTakeStageReward.id)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
ReplyAllianceRaceTakeStageReward::id() const {
  // @@protoc_insertion_point(field_list:ProtoAlliance.ReplyAllianceRaceTakeStageReward.id)
  return id_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
ReplyAllianceRaceTakeStageReward::mutable_id() {
  // @@protoc_insertion_point(field_mutable_list:ProtoAlliance.ReplyAllianceRaceTakeStageReward.id)
  return &id_;
}

// -------------------------------------------------------------------

// RequestAllianceRaceRefreshStageReward

// repeated uint32 id = 1;
inline int RequestAllianceRaceRefreshStageReward::id_size() const {
  return id_.size();
}
inline void RequestAllianceRaceRefreshStageReward::clear_id() {
  id_.Clear();
}
inline ::google::protobuf::uint32 RequestAllianceRaceRefreshStageReward::id(int index) const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.RequestAllianceRaceRefreshStageReward.id)
  return id_.Get(index);
}
inline void RequestAllianceRaceRefreshStageReward::set_id(int index, ::google::protobuf::uint32 value) {
  id_.Set(index, value);
  // @@protoc_insertion_point(field_set:ProtoAlliance.RequestAllianceRaceRefreshStageReward.id)
}
inline void RequestAllianceRaceRefreshStageReward::add_id(::google::protobuf::uint32 value) {
  id_.Add(value);
  // @@protoc_insertion_point(field_add:ProtoAlliance.RequestAllianceRaceRefreshStageReward.id)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
RequestAllianceRaceRefreshStageReward::id() const {
  // @@protoc_insertion_point(field_list:ProtoAlliance.RequestAllianceRaceRefreshStageReward.id)
  return id_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
RequestAllianceRaceRefreshStageReward::mutable_id() {
  // @@protoc_insertion_point(field_mutable_list:ProtoAlliance.RequestAllianceRaceRefreshStageReward.id)
  return &id_;
}

// -------------------------------------------------------------------

// RequestAllianceRaceRefreshStageRewardBC

// required uint32 aid = 1;
inline bool RequestAllianceRaceRefreshStageRewardBC::has_aid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RequestAllianceRaceRefreshStageRewardBC::set_has_aid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RequestAllianceRaceRefreshStageRewardBC::clear_has_aid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RequestAllianceRaceRefreshStageRewardBC::clear_aid() {
  aid_ = 0u;
  clear_has_aid();
}
inline ::google::protobuf::uint32 RequestAllianceRaceRefreshStageRewardBC::aid() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.RequestAllianceRaceRefreshStageRewardBC.aid)
  return aid_;
}
inline void RequestAllianceRaceRefreshStageRewardBC::set_aid(::google::protobuf::uint32 value) {
  set_has_aid();
  aid_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.RequestAllianceRaceRefreshStageRewardBC.aid)
}

// required uint32 uid = 2;
inline bool RequestAllianceRaceRefreshStageRewardBC::has_uid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RequestAllianceRaceRefreshStageRewardBC::set_has_uid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RequestAllianceRaceRefreshStageRewardBC::clear_has_uid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RequestAllianceRaceRefreshStageRewardBC::clear_uid() {
  uid_ = 0u;
  clear_has_uid();
}
inline ::google::protobuf::uint32 RequestAllianceRaceRefreshStageRewardBC::uid() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.RequestAllianceRaceRefreshStageRewardBC.uid)
  return uid_;
}
inline void RequestAllianceRaceRefreshStageRewardBC::set_uid(::google::protobuf::uint32 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.RequestAllianceRaceRefreshStageRewardBC.uid)
}

// repeated uint32 id = 3;
inline int RequestAllianceRaceRefreshStageRewardBC::id_size() const {
  return id_.size();
}
inline void RequestAllianceRaceRefreshStageRewardBC::clear_id() {
  id_.Clear();
}
inline ::google::protobuf::uint32 RequestAllianceRaceRefreshStageRewardBC::id(int index) const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.RequestAllianceRaceRefreshStageRewardBC.id)
  return id_.Get(index);
}
inline void RequestAllianceRaceRefreshStageRewardBC::set_id(int index, ::google::protobuf::uint32 value) {
  id_.Set(index, value);
  // @@protoc_insertion_point(field_set:ProtoAlliance.RequestAllianceRaceRefreshStageRewardBC.id)
}
inline void RequestAllianceRaceRefreshStageRewardBC::add_id(::google::protobuf::uint32 value) {
  id_.Add(value);
  // @@protoc_insertion_point(field_add:ProtoAlliance.RequestAllianceRaceRefreshStageRewardBC.id)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
RequestAllianceRaceRefreshStageRewardBC::id() const {
  // @@protoc_insertion_point(field_list:ProtoAlliance.RequestAllianceRaceRefreshStageRewardBC.id)
  return id_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
RequestAllianceRaceRefreshStageRewardBC::mutable_id() {
  // @@protoc_insertion_point(field_mutable_list:ProtoAlliance.RequestAllianceRaceRefreshStageRewardBC.id)
  return &id_;
}

// -------------------------------------------------------------------

// ReplyAllianceRaceRefreshStageReward

// required uint32 ret = 1;
inline bool ReplyAllianceRaceRefreshStageReward::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReplyAllianceRaceRefreshStageReward::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReplyAllianceRaceRefreshStageReward::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReplyAllianceRaceRefreshStageReward::clear_ret() {
  ret_ = 0u;
  clear_has_ret();
}
inline ::google::protobuf::uint32 ReplyAllianceRaceRefreshStageReward::ret() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.ReplyAllianceRaceRefreshStageReward.ret)
  return ret_;
}
inline void ReplyAllianceRaceRefreshStageReward::set_ret(::google::protobuf::uint32 value) {
  set_has_ret();
  ret_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.ReplyAllianceRaceRefreshStageReward.ret)
}

// required uint32 uid = 2;
inline bool ReplyAllianceRaceRefreshStageReward::has_uid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ReplyAllianceRaceRefreshStageReward::set_has_uid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ReplyAllianceRaceRefreshStageReward::clear_has_uid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ReplyAllianceRaceRefreshStageReward::clear_uid() {
  uid_ = 0u;
  clear_has_uid();
}
inline ::google::protobuf::uint32 ReplyAllianceRaceRefreshStageReward::uid() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.ReplyAllianceRaceRefreshStageReward.uid)
  return uid_;
}
inline void ReplyAllianceRaceRefreshStageReward::set_uid(::google::protobuf::uint32 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.ReplyAllianceRaceRefreshStageReward.uid)
}

// optional .DataCommon.CommonItemsCPP commons = 3;
inline bool ReplyAllianceRaceRefreshStageReward::has_commons() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ReplyAllianceRaceRefreshStageReward::set_has_commons() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ReplyAllianceRaceRefreshStageReward::clear_has_commons() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ReplyAllianceRaceRefreshStageReward::clear_commons() {
  if (commons_ != NULL) commons_->::DataCommon::CommonItemsCPP::Clear();
  clear_has_commons();
}
inline const ::DataCommon::CommonItemsCPP& ReplyAllianceRaceRefreshStageReward::commons() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.ReplyAllianceRaceRefreshStageReward.commons)
  return commons_ != NULL ? *commons_ : *default_instance_->commons_;
}
inline ::DataCommon::CommonItemsCPP* ReplyAllianceRaceRefreshStageReward::mutable_commons() {
  set_has_commons();
  if (commons_ == NULL) commons_ = new ::DataCommon::CommonItemsCPP;
  // @@protoc_insertion_point(field_mutable:ProtoAlliance.ReplyAllianceRaceRefreshStageReward.commons)
  return commons_;
}
inline ::DataCommon::CommonItemsCPP* ReplyAllianceRaceRefreshStageReward::release_commons() {
  clear_has_commons();
  ::DataCommon::CommonItemsCPP* temp = commons_;
  commons_ = NULL;
  return temp;
}
inline void ReplyAllianceRaceRefreshStageReward::set_allocated_commons(::DataCommon::CommonItemsCPP* commons) {
  delete commons_;
  commons_ = commons;
  if (commons) {
    set_has_commons();
  } else {
    clear_has_commons();
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoAlliance.ReplyAllianceRaceRefreshStageReward.commons)
}

// optional uint32 levelId = 4;
inline bool ReplyAllianceRaceRefreshStageReward::has_levelid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ReplyAllianceRaceRefreshStageReward::set_has_levelid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ReplyAllianceRaceRefreshStageReward::clear_has_levelid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ReplyAllianceRaceRefreshStageReward::clear_levelid() {
  levelid_ = 0u;
  clear_has_levelid();
}
inline ::google::protobuf::uint32 ReplyAllianceRaceRefreshStageReward::levelid() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.ReplyAllianceRaceRefreshStageReward.levelId)
  return levelid_;
}
inline void ReplyAllianceRaceRefreshStageReward::set_levelid(::google::protobuf::uint32 value) {
  set_has_levelid();
  levelid_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.ReplyAllianceRaceRefreshStageReward.levelId)
}

// repeated uint32 id = 5;
inline int ReplyAllianceRaceRefreshStageReward::id_size() const {
  return id_.size();
}
inline void ReplyAllianceRaceRefreshStageReward::clear_id() {
  id_.Clear();
}
inline ::google::protobuf::uint32 ReplyAllianceRaceRefreshStageReward::id(int index) const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.ReplyAllianceRaceRefreshStageReward.id)
  return id_.Get(index);
}
inline void ReplyAllianceRaceRefreshStageReward::set_id(int index, ::google::protobuf::uint32 value) {
  id_.Set(index, value);
  // @@protoc_insertion_point(field_set:ProtoAlliance.ReplyAllianceRaceRefreshStageReward.id)
}
inline void ReplyAllianceRaceRefreshStageReward::add_id(::google::protobuf::uint32 value) {
  id_.Add(value);
  // @@protoc_insertion_point(field_add:ProtoAlliance.ReplyAllianceRaceRefreshStageReward.id)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
ReplyAllianceRaceRefreshStageReward::id() const {
  // @@protoc_insertion_point(field_list:ProtoAlliance.ReplyAllianceRaceRefreshStageReward.id)
  return id_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
ReplyAllianceRaceRefreshStageReward::mutable_id() {
  // @@protoc_insertion_point(field_mutable_list:ProtoAlliance.ReplyAllianceRaceRefreshStageReward.id)
  return &id_;
}

// -------------------------------------------------------------------

// AllianceRaceMemberOrderLogItem

// required uint32 uid = 1;
inline bool AllianceRaceMemberOrderLogItem::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AllianceRaceMemberOrderLogItem::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AllianceRaceMemberOrderLogItem::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AllianceRaceMemberOrderLogItem::clear_uid() {
  uid_ = 0u;
  clear_has_uid();
}
inline ::google::protobuf::uint32 AllianceRaceMemberOrderLogItem::uid() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.AllianceRaceMemberOrderLogItem.uid)
  return uid_;
}
inline void AllianceRaceMemberOrderLogItem::set_uid(::google::protobuf::uint32 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.AllianceRaceMemberOrderLogItem.uid)
}

// required uint32 finish = 2;
inline bool AllianceRaceMemberOrderLogItem::has_finish() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AllianceRaceMemberOrderLogItem::set_has_finish() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AllianceRaceMemberOrderLogItem::clear_has_finish() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AllianceRaceMemberOrderLogItem::clear_finish() {
  finish_ = 0u;
  clear_has_finish();
}
inline ::google::protobuf::uint32 AllianceRaceMemberOrderLogItem::finish() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.AllianceRaceMemberOrderLogItem.finish)
  return finish_;
}
inline void AllianceRaceMemberOrderLogItem::set_finish(::google::protobuf::uint32 value) {
  set_has_finish();
  finish_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.AllianceRaceMemberOrderLogItem.finish)
}

// required uint32 max = 3;
inline bool AllianceRaceMemberOrderLogItem::has_max() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AllianceRaceMemberOrderLogItem::set_has_max() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AllianceRaceMemberOrderLogItem::clear_has_max() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AllianceRaceMemberOrderLogItem::clear_max() {
  max_ = 0u;
  clear_has_max();
}
inline ::google::protobuf::uint32 AllianceRaceMemberOrderLogItem::max() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.AllianceRaceMemberOrderLogItem.max)
  return max_;
}
inline void AllianceRaceMemberOrderLogItem::set_max(::google::protobuf::uint32 value) {
  set_has_max();
  max_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.AllianceRaceMemberOrderLogItem.max)
}

// required uint32 cancel = 4;
inline bool AllianceRaceMemberOrderLogItem::has_cancel() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void AllianceRaceMemberOrderLogItem::set_has_cancel() {
  _has_bits_[0] |= 0x00000008u;
}
inline void AllianceRaceMemberOrderLogItem::clear_has_cancel() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void AllianceRaceMemberOrderLogItem::clear_cancel() {
  cancel_ = 0u;
  clear_has_cancel();
}
inline ::google::protobuf::uint32 AllianceRaceMemberOrderLogItem::cancel() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.AllianceRaceMemberOrderLogItem.cancel)
  return cancel_;
}
inline void AllianceRaceMemberOrderLogItem::set_cancel(::google::protobuf::uint32 value) {
  set_has_cancel();
  cancel_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.AllianceRaceMemberOrderLogItem.cancel)
}

// required uint32 point = 5;
inline bool AllianceRaceMemberOrderLogItem::has_point() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void AllianceRaceMemberOrderLogItem::set_has_point() {
  _has_bits_[0] |= 0x00000010u;
}
inline void AllianceRaceMemberOrderLogItem::clear_has_point() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void AllianceRaceMemberOrderLogItem::clear_point() {
  point_ = 0u;
  clear_has_point();
}
inline ::google::protobuf::uint32 AllianceRaceMemberOrderLogItem::point() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.AllianceRaceMemberOrderLogItem.point)
  return point_;
}
inline void AllianceRaceMemberOrderLogItem::set_point(::google::protobuf::uint32 value) {
  set_has_point();
  point_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.AllianceRaceMemberOrderLogItem.point)
}

// required uint32 level = 6;
inline bool AllianceRaceMemberOrderLogItem::has_level() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void AllianceRaceMemberOrderLogItem::set_has_level() {
  _has_bits_[0] |= 0x00000020u;
}
inline void AllianceRaceMemberOrderLogItem::clear_has_level() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void AllianceRaceMemberOrderLogItem::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 AllianceRaceMemberOrderLogItem::level() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.AllianceRaceMemberOrderLogItem.level)
  return level_;
}
inline void AllianceRaceMemberOrderLogItem::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.AllianceRaceMemberOrderLogItem.level)
}

// optional bytes fig = 7;
inline bool AllianceRaceMemberOrderLogItem::has_fig() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void AllianceRaceMemberOrderLogItem::set_has_fig() {
  _has_bits_[0] |= 0x00000040u;
}
inline void AllianceRaceMemberOrderLogItem::clear_has_fig() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void AllianceRaceMemberOrderLogItem::clear_fig() {
  if (fig_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    fig_->clear();
  }
  clear_has_fig();
}
inline const ::std::string& AllianceRaceMemberOrderLogItem::fig() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.AllianceRaceMemberOrderLogItem.fig)
  return *fig_;
}
inline void AllianceRaceMemberOrderLogItem::set_fig(const ::std::string& value) {
  set_has_fig();
  if (fig_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    fig_ = new ::std::string;
  }
  fig_->assign(value);
  // @@protoc_insertion_point(field_set:ProtoAlliance.AllianceRaceMemberOrderLogItem.fig)
}
inline void AllianceRaceMemberOrderLogItem::set_fig(const char* value) {
  set_has_fig();
  if (fig_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    fig_ = new ::std::string;
  }
  fig_->assign(value);
  // @@protoc_insertion_point(field_set_char:ProtoAlliance.AllianceRaceMemberOrderLogItem.fig)
}
inline void AllianceRaceMemberOrderLogItem::set_fig(const void* value, size_t size) {
  set_has_fig();
  if (fig_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    fig_ = new ::std::string;
  }
  fig_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ProtoAlliance.AllianceRaceMemberOrderLogItem.fig)
}
inline ::std::string* AllianceRaceMemberOrderLogItem::mutable_fig() {
  set_has_fig();
  if (fig_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    fig_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:ProtoAlliance.AllianceRaceMemberOrderLogItem.fig)
  return fig_;
}
inline ::std::string* AllianceRaceMemberOrderLogItem::release_fig() {
  clear_has_fig();
  if (fig_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = fig_;
    fig_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void AllianceRaceMemberOrderLogItem::set_allocated_fig(::std::string* fig) {
  if (fig_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete fig_;
  }
  if (fig) {
    set_has_fig();
    fig_ = fig;
  } else {
    clear_has_fig();
    fig_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoAlliance.AllianceRaceMemberOrderLogItem.fig)
}

// -------------------------------------------------------------------

// RequestAllianceRaceMemberOrderLog

// -------------------------------------------------------------------

// RequestAllianceRaceMemberOrderLogBC

// required uint32 aid = 1;
inline bool RequestAllianceRaceMemberOrderLogBC::has_aid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RequestAllianceRaceMemberOrderLogBC::set_has_aid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RequestAllianceRaceMemberOrderLogBC::clear_has_aid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RequestAllianceRaceMemberOrderLogBC::clear_aid() {
  aid_ = 0u;
  clear_has_aid();
}
inline ::google::protobuf::uint32 RequestAllianceRaceMemberOrderLogBC::aid() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.RequestAllianceRaceMemberOrderLogBC.aid)
  return aid_;
}
inline void RequestAllianceRaceMemberOrderLogBC::set_aid(::google::protobuf::uint32 value) {
  set_has_aid();
  aid_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.RequestAllianceRaceMemberOrderLogBC.aid)
}

// required uint32 uid = 2;
inline bool RequestAllianceRaceMemberOrderLogBC::has_uid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RequestAllianceRaceMemberOrderLogBC::set_has_uid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RequestAllianceRaceMemberOrderLogBC::clear_has_uid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RequestAllianceRaceMemberOrderLogBC::clear_uid() {
  uid_ = 0u;
  clear_has_uid();
}
inline ::google::protobuf::uint32 RequestAllianceRaceMemberOrderLogBC::uid() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.RequestAllianceRaceMemberOrderLogBC.uid)
  return uid_;
}
inline void RequestAllianceRaceMemberOrderLogBC::set_uid(::google::protobuf::uint32 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.RequestAllianceRaceMemberOrderLogBC.uid)
}

// -------------------------------------------------------------------

// ReplyAllianceRaceMemberOrderLog

// repeated .ProtoAlliance.AllianceRaceMemberOrderLogItem member = 1;
inline int ReplyAllianceRaceMemberOrderLog::member_size() const {
  return member_.size();
}
inline void ReplyAllianceRaceMemberOrderLog::clear_member() {
  member_.Clear();
}
inline const ::ProtoAlliance::AllianceRaceMemberOrderLogItem& ReplyAllianceRaceMemberOrderLog::member(int index) const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.ReplyAllianceRaceMemberOrderLog.member)
  return member_.Get(index);
}
inline ::ProtoAlliance::AllianceRaceMemberOrderLogItem* ReplyAllianceRaceMemberOrderLog::mutable_member(int index) {
  // @@protoc_insertion_point(field_mutable:ProtoAlliance.ReplyAllianceRaceMemberOrderLog.member)
  return member_.Mutable(index);
}
inline ::ProtoAlliance::AllianceRaceMemberOrderLogItem* ReplyAllianceRaceMemberOrderLog::add_member() {
  // @@protoc_insertion_point(field_add:ProtoAlliance.ReplyAllianceRaceMemberOrderLog.member)
  return member_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ProtoAlliance::AllianceRaceMemberOrderLogItem >&
ReplyAllianceRaceMemberOrderLog::member() const {
  // @@protoc_insertion_point(field_list:ProtoAlliance.ReplyAllianceRaceMemberOrderLog.member)
  return member_;
}
inline ::google::protobuf::RepeatedPtrField< ::ProtoAlliance::AllianceRaceMemberOrderLogItem >*
ReplyAllianceRaceMemberOrderLog::mutable_member() {
  // @@protoc_insertion_point(field_mutable_list:ProtoAlliance.ReplyAllianceRaceMemberOrderLog.member)
  return &member_;
}

// -------------------------------------------------------------------

// AllianceRacePersonOrderLogItem

// required uint32 id = 1;
inline bool AllianceRacePersonOrderLogItem::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AllianceRacePersonOrderLogItem::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AllianceRacePersonOrderLogItem::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AllianceRacePersonOrderLogItem::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 AllianceRacePersonOrderLogItem::id() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.AllianceRacePersonOrderLogItem.id)
  return id_;
}
inline void AllianceRacePersonOrderLogItem::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.AllianceRacePersonOrderLogItem.id)
}

// required uint32 status = 2;
inline bool AllianceRacePersonOrderLogItem::has_status() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AllianceRacePersonOrderLogItem::set_has_status() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AllianceRacePersonOrderLogItem::clear_has_status() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AllianceRacePersonOrderLogItem::clear_status() {
  status_ = 0u;
  clear_has_status();
}
inline ::google::protobuf::uint32 AllianceRacePersonOrderLogItem::status() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.AllianceRacePersonOrderLogItem.status)
  return status_;
}
inline void AllianceRacePersonOrderLogItem::set_status(::google::protobuf::uint32 value) {
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.AllianceRacePersonOrderLogItem.status)
}

// -------------------------------------------------------------------

// RequestAllianceRacePersonOrderLog

// -------------------------------------------------------------------

// RequestAllianceRacePersonOrderLogBC

// required uint32 aid = 1;
inline bool RequestAllianceRacePersonOrderLogBC::has_aid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RequestAllianceRacePersonOrderLogBC::set_has_aid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RequestAllianceRacePersonOrderLogBC::clear_has_aid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RequestAllianceRacePersonOrderLogBC::clear_aid() {
  aid_ = 0u;
  clear_has_aid();
}
inline ::google::protobuf::uint32 RequestAllianceRacePersonOrderLogBC::aid() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.RequestAllianceRacePersonOrderLogBC.aid)
  return aid_;
}
inline void RequestAllianceRacePersonOrderLogBC::set_aid(::google::protobuf::uint32 value) {
  set_has_aid();
  aid_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.RequestAllianceRacePersonOrderLogBC.aid)
}

// required uint32 uid = 2;
inline bool RequestAllianceRacePersonOrderLogBC::has_uid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RequestAllianceRacePersonOrderLogBC::set_has_uid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RequestAllianceRacePersonOrderLogBC::clear_has_uid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RequestAllianceRacePersonOrderLogBC::clear_uid() {
  uid_ = 0u;
  clear_has_uid();
}
inline ::google::protobuf::uint32 RequestAllianceRacePersonOrderLogBC::uid() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.RequestAllianceRacePersonOrderLogBC.uid)
  return uid_;
}
inline void RequestAllianceRacePersonOrderLogBC::set_uid(::google::protobuf::uint32 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.RequestAllianceRacePersonOrderLogBC.uid)
}

// -------------------------------------------------------------------

// ReplyAllianceRacePersonOrderLog

// repeated .ProtoAlliance.AllianceRacePersonOrderLogItem member = 1;
inline int ReplyAllianceRacePersonOrderLog::member_size() const {
  return member_.size();
}
inline void ReplyAllianceRacePersonOrderLog::clear_member() {
  member_.Clear();
}
inline const ::ProtoAlliance::AllianceRacePersonOrderLogItem& ReplyAllianceRacePersonOrderLog::member(int index) const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.ReplyAllianceRacePersonOrderLog.member)
  return member_.Get(index);
}
inline ::ProtoAlliance::AllianceRacePersonOrderLogItem* ReplyAllianceRacePersonOrderLog::mutable_member(int index) {
  // @@protoc_insertion_point(field_mutable:ProtoAlliance.ReplyAllianceRacePersonOrderLog.member)
  return member_.Mutable(index);
}
inline ::ProtoAlliance::AllianceRacePersonOrderLogItem* ReplyAllianceRacePersonOrderLog::add_member() {
  // @@protoc_insertion_point(field_add:ProtoAlliance.ReplyAllianceRacePersonOrderLog.member)
  return member_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ProtoAlliance::AllianceRacePersonOrderLogItem >&
ReplyAllianceRacePersonOrderLog::member() const {
  // @@protoc_insertion_point(field_list:ProtoAlliance.ReplyAllianceRacePersonOrderLog.member)
  return member_;
}
inline ::google::protobuf::RepeatedPtrField< ::ProtoAlliance::AllianceRacePersonOrderLogItem >*
ReplyAllianceRacePersonOrderLog::mutable_member() {
  // @@protoc_insertion_point(field_mutable_list:ProtoAlliance.ReplyAllianceRacePersonOrderLog.member)
  return &member_;
}

// -------------------------------------------------------------------

// SetAllianceRaceGroupPointBC

// required uint32 aid = 1;
inline bool SetAllianceRaceGroupPointBC::has_aid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SetAllianceRaceGroupPointBC::set_has_aid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SetAllianceRaceGroupPointBC::clear_has_aid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SetAllianceRaceGroupPointBC::clear_aid() {
  aid_ = 0u;
  clear_has_aid();
}
inline ::google::protobuf::uint32 SetAllianceRaceGroupPointBC::aid() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.SetAllianceRaceGroupPointBC.aid)
  return aid_;
}
inline void SetAllianceRaceGroupPointBC::set_aid(::google::protobuf::uint32 value) {
  set_has_aid();
  aid_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.SetAllianceRaceGroupPointBC.aid)
}

// required uint32 point = 2;
inline bool SetAllianceRaceGroupPointBC::has_point() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SetAllianceRaceGroupPointBC::set_has_point() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SetAllianceRaceGroupPointBC::clear_has_point() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SetAllianceRaceGroupPointBC::clear_point() {
  point_ = 0u;
  clear_has_point();
}
inline ::google::protobuf::uint32 SetAllianceRaceGroupPointBC::point() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.SetAllianceRaceGroupPointBC.point)
  return point_;
}
inline void SetAllianceRaceGroupPointBC::set_point(::google::protobuf::uint32 value) {
  set_has_point();
  point_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.SetAllianceRaceGroupPointBC.point)
}

// -------------------------------------------------------------------

// AllianceRaceGroupMember

// required uint32 aid = 1;
inline bool AllianceRaceGroupMember::has_aid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AllianceRaceGroupMember::set_has_aid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AllianceRaceGroupMember::clear_has_aid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AllianceRaceGroupMember::clear_aid() {
  aid_ = 0u;
  clear_has_aid();
}
inline ::google::protobuf::uint32 AllianceRaceGroupMember::aid() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.AllianceRaceGroupMember.aid)
  return aid_;
}
inline void AllianceRaceGroupMember::set_aid(::google::protobuf::uint32 value) {
  set_has_aid();
  aid_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.AllianceRaceGroupMember.aid)
}

// required uint32 point = 2;
inline bool AllianceRaceGroupMember::has_point() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AllianceRaceGroupMember::set_has_point() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AllianceRaceGroupMember::clear_has_point() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AllianceRaceGroupMember::clear_point() {
  point_ = 0u;
  clear_has_point();
}
inline ::google::protobuf::uint32 AllianceRaceGroupMember::point() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.AllianceRaceGroupMember.point)
  return point_;
}
inline void AllianceRaceGroupMember::set_point(::google::protobuf::uint32 value) {
  set_has_point();
  point_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.AllianceRaceGroupMember.point)
}

// required uint32 count = 3;
inline bool AllianceRaceGroupMember::has_count() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AllianceRaceGroupMember::set_has_count() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AllianceRaceGroupMember::clear_has_count() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AllianceRaceGroupMember::clear_count() {
  count_ = 0u;
  clear_has_count();
}
inline ::google::protobuf::uint32 AllianceRaceGroupMember::count() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.AllianceRaceGroupMember.count)
  return count_;
}
inline void AllianceRaceGroupMember::set_count(::google::protobuf::uint32 value) {
  set_has_count();
  count_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.AllianceRaceGroupMember.count)
}

// -------------------------------------------------------------------

// RequestAllianceRaceGroupMember

// -------------------------------------------------------------------

// RequestAllianceRaceGroupMemberBC

// required uint32 aid = 1;
inline bool RequestAllianceRaceGroupMemberBC::has_aid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RequestAllianceRaceGroupMemberBC::set_has_aid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RequestAllianceRaceGroupMemberBC::clear_has_aid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RequestAllianceRaceGroupMemberBC::clear_aid() {
  aid_ = 0u;
  clear_has_aid();
}
inline ::google::protobuf::uint32 RequestAllianceRaceGroupMemberBC::aid() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.RequestAllianceRaceGroupMemberBC.aid)
  return aid_;
}
inline void RequestAllianceRaceGroupMemberBC::set_aid(::google::protobuf::uint32 value) {
  set_has_aid();
  aid_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.RequestAllianceRaceGroupMemberBC.aid)
}

// required uint32 uid = 2;
inline bool RequestAllianceRaceGroupMemberBC::has_uid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RequestAllianceRaceGroupMemberBC::set_has_uid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RequestAllianceRaceGroupMemberBC::clear_has_uid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RequestAllianceRaceGroupMemberBC::clear_uid() {
  uid_ = 0u;
  clear_has_uid();
}
inline ::google::protobuf::uint32 RequestAllianceRaceGroupMemberBC::uid() const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.RequestAllianceRaceGroupMemberBC.uid)
  return uid_;
}
inline void RequestAllianceRaceGroupMemberBC::set_uid(::google::protobuf::uint32 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:ProtoAlliance.RequestAllianceRaceGroupMemberBC.uid)
}

// -------------------------------------------------------------------

// ReplyAllianceRaceGroupMember

// repeated .ProtoAlliance.AllianceRaceGroupMember member = 1;
inline int ReplyAllianceRaceGroupMember::member_size() const {
  return member_.size();
}
inline void ReplyAllianceRaceGroupMember::clear_member() {
  member_.Clear();
}
inline const ::ProtoAlliance::AllianceRaceGroupMember& ReplyAllianceRaceGroupMember::member(int index) const {
  // @@protoc_insertion_point(field_get:ProtoAlliance.ReplyAllianceRaceGroupMember.member)
  return member_.Get(index);
}
inline ::ProtoAlliance::AllianceRaceGroupMember* ReplyAllianceRaceGroupMember::mutable_member(int index) {
  // @@protoc_insertion_point(field_mutable:ProtoAlliance.ReplyAllianceRaceGroupMember.member)
  return member_.Mutable(index);
}
inline ::ProtoAlliance::AllianceRaceGroupMember* ReplyAllianceRaceGroupMember::add_member() {
  // @@protoc_insertion_point(field_add:ProtoAlliance.ReplyAllianceRaceGroupMember.member)
  return member_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ProtoAlliance::AllianceRaceGroupMember >&
ReplyAllianceRaceGroupMember::member() const {
  // @@protoc_insertion_point(field_list:ProtoAlliance.ReplyAllianceRaceGroupMember.member)
  return member_;
}
inline ::google::protobuf::RepeatedPtrField< ::ProtoAlliance::AllianceRaceGroupMember >*
ReplyAllianceRaceGroupMember::mutable_member() {
  // @@protoc_insertion_point(field_mutable_list:ProtoAlliance.ReplyAllianceRaceGroupMember.member)
  return &member_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace ProtoAlliance

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_ProtoAlliance_2eproto__INCLUDED
