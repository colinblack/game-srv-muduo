// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ProtoGM.proto

#ifndef PROTOBUF_ProtoGM_2eproto__INCLUDED
#define PROTOBUF_ProtoGM_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "DataCommon.pb.h"
// @@protoc_insertion_point(includes)

namespace ProtoGM {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_ProtoGM_2eproto();
void protobuf_AssignDesc_ProtoGM_2eproto();
void protobuf_ShutdownFile_ProtoGM_2eproto();

class GMCmdReq;
class SyncInfo;

// ===================================================================

class GMCmdReq : public ::google::protobuf::Message {
 public:
  GMCmdReq();
  virtual ~GMCmdReq();

  GMCmdReq(const GMCmdReq& from);

  inline GMCmdReq& operator=(const GMCmdReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GMCmdReq& default_instance();

  void Swap(GMCmdReq* other);

  // implements Message ----------------------------------------------

  GMCmdReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GMCmdReq& from);
  void MergeFrom(const GMCmdReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string cmd = 1;
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline const ::std::string& cmd() const;
  inline void set_cmd(const ::std::string& value);
  inline void set_cmd(const char* value);
  inline void set_cmd(const char* value, size_t size);
  inline ::std::string* mutable_cmd();
  inline ::std::string* release_cmd();
  inline void set_allocated_cmd(::std::string* cmd);

  // @@protoc_insertion_point(class_scope:ProtoGM.GMCmdReq)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* cmd_;
  friend void  protobuf_AddDesc_ProtoGM_2eproto();
  friend void protobuf_AssignDesc_ProtoGM_2eproto();
  friend void protobuf_ShutdownFile_ProtoGM_2eproto();

  void InitAsDefaultInstance();
  static GMCmdReq* default_instance_;
};
// -------------------------------------------------------------------

class SyncInfo : public ::google::protobuf::Message {
 public:
  SyncInfo();
  virtual ~SyncInfo();

  SyncInfo(const SyncInfo& from);

  inline SyncInfo& operator=(const SyncInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SyncInfo& default_instance();

  void Swap(SyncInfo* other);

  // implements Message ----------------------------------------------

  SyncInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SyncInfo& from);
  void MergeFrom(const SyncInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .DataCommon.CommonItemsCPP common = 1;
  inline bool has_common() const;
  inline void clear_common();
  static const int kCommonFieldNumber = 1;
  inline const ::DataCommon::CommonItemsCPP& common() const;
  inline ::DataCommon::CommonItemsCPP* mutable_common();
  inline ::DataCommon::CommonItemsCPP* release_common();
  inline void set_allocated_common(::DataCommon::CommonItemsCPP* common);

  // @@protoc_insertion_point(class_scope:ProtoGM.SyncInfo)
 private:
  inline void set_has_common();
  inline void clear_has_common();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::DataCommon::CommonItemsCPP* common_;
  friend void  protobuf_AddDesc_ProtoGM_2eproto();
  friend void protobuf_AssignDesc_ProtoGM_2eproto();
  friend void protobuf_ShutdownFile_ProtoGM_2eproto();

  void InitAsDefaultInstance();
  static SyncInfo* default_instance_;
};
// ===================================================================


// ===================================================================

// GMCmdReq

// required string cmd = 1;
inline bool GMCmdReq::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GMCmdReq::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GMCmdReq::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GMCmdReq::clear_cmd() {
  if (cmd_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    cmd_->clear();
  }
  clear_has_cmd();
}
inline const ::std::string& GMCmdReq::cmd() const {
  // @@protoc_insertion_point(field_get:ProtoGM.GMCmdReq.cmd)
  return *cmd_;
}
inline void GMCmdReq::set_cmd(const ::std::string& value) {
  set_has_cmd();
  if (cmd_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    cmd_ = new ::std::string;
  }
  cmd_->assign(value);
  // @@protoc_insertion_point(field_set:ProtoGM.GMCmdReq.cmd)
}
inline void GMCmdReq::set_cmd(const char* value) {
  set_has_cmd();
  if (cmd_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    cmd_ = new ::std::string;
  }
  cmd_->assign(value);
  // @@protoc_insertion_point(field_set_char:ProtoGM.GMCmdReq.cmd)
}
inline void GMCmdReq::set_cmd(const char* value, size_t size) {
  set_has_cmd();
  if (cmd_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    cmd_ = new ::std::string;
  }
  cmd_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ProtoGM.GMCmdReq.cmd)
}
inline ::std::string* GMCmdReq::mutable_cmd() {
  set_has_cmd();
  if (cmd_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    cmd_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:ProtoGM.GMCmdReq.cmd)
  return cmd_;
}
inline ::std::string* GMCmdReq::release_cmd() {
  clear_has_cmd();
  if (cmd_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = cmd_;
    cmd_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void GMCmdReq::set_allocated_cmd(::std::string* cmd) {
  if (cmd_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete cmd_;
  }
  if (cmd) {
    set_has_cmd();
    cmd_ = cmd;
  } else {
    clear_has_cmd();
    cmd_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoGM.GMCmdReq.cmd)
}

// -------------------------------------------------------------------

// SyncInfo

// optional .DataCommon.CommonItemsCPP common = 1;
inline bool SyncInfo::has_common() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SyncInfo::set_has_common() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SyncInfo::clear_has_common() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SyncInfo::clear_common() {
  if (common_ != NULL) common_->::DataCommon::CommonItemsCPP::Clear();
  clear_has_common();
}
inline const ::DataCommon::CommonItemsCPP& SyncInfo::common() const {
  // @@protoc_insertion_point(field_get:ProtoGM.SyncInfo.common)
  return common_ != NULL ? *common_ : *default_instance_->common_;
}
inline ::DataCommon::CommonItemsCPP* SyncInfo::mutable_common() {
  set_has_common();
  if (common_ == NULL) common_ = new ::DataCommon::CommonItemsCPP;
  // @@protoc_insertion_point(field_mutable:ProtoGM.SyncInfo.common)
  return common_;
}
inline ::DataCommon::CommonItemsCPP* SyncInfo::release_common() {
  clear_has_common();
  ::DataCommon::CommonItemsCPP* temp = common_;
  common_ = NULL;
  return temp;
}
inline void SyncInfo::set_allocated_common(::DataCommon::CommonItemsCPP* common) {
  delete common_;
  common_ = common;
  if (common) {
    set_has_common();
  } else {
    clear_has_common();
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoGM.SyncInfo.common)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace ProtoGM

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_ProtoGM_2eproto__INCLUDED
