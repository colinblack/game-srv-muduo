// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ProtoAccessAd.proto

#ifndef PROTOBUF_ProtoAccessAd_2eproto__INCLUDED
#define PROTOBUF_ProtoAccessAd_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "DataCommon.pb.h"
#include "ProtoProduce.pb.h"
// @@protoc_insertion_point(includes)

namespace ProtoAccessAd {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_ProtoAccessAd_2eproto();
void protobuf_AssignDesc_ProtoAccessAd_2eproto();
void protobuf_ShutdownFile_ProtoAccessAd_2eproto();

class RewardViewAdReq;
class RewardViewAdResp;
class GetLastViewAdTsReq;
class GetLastViewAdTsResp;
class BallonCPP;
class GetBallonInfoReq;
class GetBallonInfoResp;
class CommonlViewAdReq;
class CommonlViewAdResp;
class ScarecrowCPP;
class GetScarecrowInfoReq;
class GetScarecrowInfoResp;
class ScarecrowViewAdReq;
class ScarecrowViewAdResp;

// ===================================================================

class RewardViewAdReq : public ::google::protobuf::Message {
 public:
  RewardViewAdReq();
  virtual ~RewardViewAdReq();

  RewardViewAdReq(const RewardViewAdReq& from);

  inline RewardViewAdReq& operator=(const RewardViewAdReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RewardViewAdReq& default_instance();

  void Swap(RewardViewAdReq* other);

  // implements Message ----------------------------------------------

  RewardViewAdReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RewardViewAdReq& from);
  void MergeFrom(const RewardViewAdReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:ProtoAccessAd.RewardViewAdReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_ProtoAccessAd_2eproto();
  friend void protobuf_AssignDesc_ProtoAccessAd_2eproto();
  friend void protobuf_ShutdownFile_ProtoAccessAd_2eproto();

  void InitAsDefaultInstance();
  static RewardViewAdReq* default_instance_;
};
// -------------------------------------------------------------------

class RewardViewAdResp : public ::google::protobuf::Message {
 public:
  RewardViewAdResp();
  virtual ~RewardViewAdResp();

  RewardViewAdResp(const RewardViewAdResp& from);

  inline RewardViewAdResp& operator=(const RewardViewAdResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RewardViewAdResp& default_instance();

  void Swap(RewardViewAdResp* other);

  // implements Message ----------------------------------------------

  RewardViewAdResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RewardViewAdResp& from);
  void MergeFrom(const RewardViewAdResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 ts = 1;
  inline bool has_ts() const;
  inline void clear_ts();
  static const int kTsFieldNumber = 1;
  inline ::google::protobuf::uint32 ts() const;
  inline void set_ts(::google::protobuf::uint32 value);

  // required .DataCommon.CommonItemsCPP commons = 2;
  inline bool has_commons() const;
  inline void clear_commons();
  static const int kCommonsFieldNumber = 2;
  inline const ::DataCommon::CommonItemsCPP& commons() const;
  inline ::DataCommon::CommonItemsCPP* mutable_commons();
  inline ::DataCommon::CommonItemsCPP* release_commons();
  inline void set_allocated_commons(::DataCommon::CommonItemsCPP* commons);

  // @@protoc_insertion_point(class_scope:ProtoAccessAd.RewardViewAdResp)
 private:
  inline void set_has_ts();
  inline void clear_has_ts();
  inline void set_has_commons();
  inline void clear_has_commons();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::DataCommon::CommonItemsCPP* commons_;
  ::google::protobuf::uint32 ts_;
  friend void  protobuf_AddDesc_ProtoAccessAd_2eproto();
  friend void protobuf_AssignDesc_ProtoAccessAd_2eproto();
  friend void protobuf_ShutdownFile_ProtoAccessAd_2eproto();

  void InitAsDefaultInstance();
  static RewardViewAdResp* default_instance_;
};
// -------------------------------------------------------------------

class GetLastViewAdTsReq : public ::google::protobuf::Message {
 public:
  GetLastViewAdTsReq();
  virtual ~GetLastViewAdTsReq();

  GetLastViewAdTsReq(const GetLastViewAdTsReq& from);

  inline GetLastViewAdTsReq& operator=(const GetLastViewAdTsReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetLastViewAdTsReq& default_instance();

  void Swap(GetLastViewAdTsReq* other);

  // implements Message ----------------------------------------------

  GetLastViewAdTsReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetLastViewAdTsReq& from);
  void MergeFrom(const GetLastViewAdTsReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:ProtoAccessAd.GetLastViewAdTsReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_ProtoAccessAd_2eproto();
  friend void protobuf_AssignDesc_ProtoAccessAd_2eproto();
  friend void protobuf_ShutdownFile_ProtoAccessAd_2eproto();

  void InitAsDefaultInstance();
  static GetLastViewAdTsReq* default_instance_;
};
// -------------------------------------------------------------------

class GetLastViewAdTsResp : public ::google::protobuf::Message {
 public:
  GetLastViewAdTsResp();
  virtual ~GetLastViewAdTsResp();

  GetLastViewAdTsResp(const GetLastViewAdTsResp& from);

  inline GetLastViewAdTsResp& operator=(const GetLastViewAdTsResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetLastViewAdTsResp& default_instance();

  void Swap(GetLastViewAdTsResp* other);

  // implements Message ----------------------------------------------

  GetLastViewAdTsResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetLastViewAdTsResp& from);
  void MergeFrom(const GetLastViewAdTsResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 ts = 1;
  inline bool has_ts() const;
  inline void clear_ts();
  static const int kTsFieldNumber = 1;
  inline ::google::protobuf::uint32 ts() const;
  inline void set_ts(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoAccessAd.GetLastViewAdTsResp)
 private:
  inline void set_has_ts();
  inline void clear_has_ts();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 ts_;
  friend void  protobuf_AddDesc_ProtoAccessAd_2eproto();
  friend void protobuf_AssignDesc_ProtoAccessAd_2eproto();
  friend void protobuf_ShutdownFile_ProtoAccessAd_2eproto();

  void InitAsDefaultInstance();
  static GetLastViewAdTsResp* default_instance_;
};
// -------------------------------------------------------------------

class BallonCPP : public ::google::protobuf::Message {
 public:
  BallonCPP();
  virtual ~BallonCPP();

  BallonCPP(const BallonCPP& from);

  inline BallonCPP& operator=(const BallonCPP& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BallonCPP& default_instance();

  void Swap(BallonCPP* other);

  // implements Message ----------------------------------------------

  BallonCPP* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BallonCPP& from);
  void MergeFrom(const BallonCPP& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 remainCnt = 1;
  inline bool has_remaincnt() const;
  inline void clear_remaincnt();
  static const int kRemainCntFieldNumber = 1;
  inline ::google::protobuf::uint32 remaincnt() const;
  inline void set_remaincnt(::google::protobuf::uint32 value);

  // required uint32 nextTs = 2;
  inline bool has_nextts() const;
  inline void clear_nextts();
  static const int kNextTsFieldNumber = 2;
  inline ::google::protobuf::uint32 nextts() const;
  inline void set_nextts(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoAccessAd.BallonCPP)
 private:
  inline void set_has_remaincnt();
  inline void clear_has_remaincnt();
  inline void set_has_nextts();
  inline void clear_has_nextts();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 remaincnt_;
  ::google::protobuf::uint32 nextts_;
  friend void  protobuf_AddDesc_ProtoAccessAd_2eproto();
  friend void protobuf_AssignDesc_ProtoAccessAd_2eproto();
  friend void protobuf_ShutdownFile_ProtoAccessAd_2eproto();

  void InitAsDefaultInstance();
  static BallonCPP* default_instance_;
};
// -------------------------------------------------------------------

class GetBallonInfoReq : public ::google::protobuf::Message {
 public:
  GetBallonInfoReq();
  virtual ~GetBallonInfoReq();

  GetBallonInfoReq(const GetBallonInfoReq& from);

  inline GetBallonInfoReq& operator=(const GetBallonInfoReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetBallonInfoReq& default_instance();

  void Swap(GetBallonInfoReq* other);

  // implements Message ----------------------------------------------

  GetBallonInfoReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetBallonInfoReq& from);
  void MergeFrom(const GetBallonInfoReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:ProtoAccessAd.GetBallonInfoReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_ProtoAccessAd_2eproto();
  friend void protobuf_AssignDesc_ProtoAccessAd_2eproto();
  friend void protobuf_ShutdownFile_ProtoAccessAd_2eproto();

  void InitAsDefaultInstance();
  static GetBallonInfoReq* default_instance_;
};
// -------------------------------------------------------------------

class GetBallonInfoResp : public ::google::protobuf::Message {
 public:
  GetBallonInfoResp();
  virtual ~GetBallonInfoResp();

  GetBallonInfoResp(const GetBallonInfoResp& from);

  inline GetBallonInfoResp& operator=(const GetBallonInfoResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetBallonInfoResp& default_instance();

  void Swap(GetBallonInfoResp* other);

  // implements Message ----------------------------------------------

  GetBallonInfoResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetBallonInfoResp& from);
  void MergeFrom(const GetBallonInfoResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .ProtoAccessAd.BallonCPP ballon = 1;
  inline bool has_ballon() const;
  inline void clear_ballon();
  static const int kBallonFieldNumber = 1;
  inline const ::ProtoAccessAd::BallonCPP& ballon() const;
  inline ::ProtoAccessAd::BallonCPP* mutable_ballon();
  inline ::ProtoAccessAd::BallonCPP* release_ballon();
  inline void set_allocated_ballon(::ProtoAccessAd::BallonCPP* ballon);

  // @@protoc_insertion_point(class_scope:ProtoAccessAd.GetBallonInfoResp)
 private:
  inline void set_has_ballon();
  inline void clear_has_ballon();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::ProtoAccessAd::BallonCPP* ballon_;
  friend void  protobuf_AddDesc_ProtoAccessAd_2eproto();
  friend void protobuf_AssignDesc_ProtoAccessAd_2eproto();
  friend void protobuf_ShutdownFile_ProtoAccessAd_2eproto();

  void InitAsDefaultInstance();
  static GetBallonInfoResp* default_instance_;
};
// -------------------------------------------------------------------

class CommonlViewAdReq : public ::google::protobuf::Message {
 public:
  CommonlViewAdReq();
  virtual ~CommonlViewAdReq();

  CommonlViewAdReq(const CommonlViewAdReq& from);

  inline CommonlViewAdReq& operator=(const CommonlViewAdReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CommonlViewAdReq& default_instance();

  void Swap(CommonlViewAdReq* other);

  // implements Message ----------------------------------------------

  CommonlViewAdReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CommonlViewAdReq& from);
  void MergeFrom(const CommonlViewAdReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoAccessAd.CommonlViewAdReq)
 private:
  inline void set_has_type();
  inline void clear_has_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 type_;
  friend void  protobuf_AddDesc_ProtoAccessAd_2eproto();
  friend void protobuf_AssignDesc_ProtoAccessAd_2eproto();
  friend void protobuf_ShutdownFile_ProtoAccessAd_2eproto();

  void InitAsDefaultInstance();
  static CommonlViewAdReq* default_instance_;
};
// -------------------------------------------------------------------

class CommonlViewAdResp : public ::google::protobuf::Message {
 public:
  CommonlViewAdResp();
  virtual ~CommonlViewAdResp();

  CommonlViewAdResp(const CommonlViewAdResp& from);

  inline CommonlViewAdResp& operator=(const CommonlViewAdResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CommonlViewAdResp& default_instance();

  void Swap(CommonlViewAdResp* other);

  // implements Message ----------------------------------------------

  CommonlViewAdResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CommonlViewAdResp& from);
  void MergeFrom(const CommonlViewAdResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .DataCommon.CommonItemsCPP commons = 1;
  inline bool has_commons() const;
  inline void clear_commons();
  static const int kCommonsFieldNumber = 1;
  inline const ::DataCommon::CommonItemsCPP& commons() const;
  inline ::DataCommon::CommonItemsCPP* mutable_commons();
  inline ::DataCommon::CommonItemsCPP* release_commons();
  inline void set_allocated_commons(::DataCommon::CommonItemsCPP* commons);

  // optional .ProtoAccessAd.BallonCPP ballon = 2;
  inline bool has_ballon() const;
  inline void clear_ballon();
  static const int kBallonFieldNumber = 2;
  inline const ::ProtoAccessAd::BallonCPP& ballon() const;
  inline ::ProtoAccessAd::BallonCPP* mutable_ballon();
  inline ::ProtoAccessAd::BallonCPP* release_ballon();
  inline void set_allocated_ballon(::ProtoAccessAd::BallonCPP* ballon);

  // @@protoc_insertion_point(class_scope:ProtoAccessAd.CommonlViewAdResp)
 private:
  inline void set_has_commons();
  inline void clear_has_commons();
  inline void set_has_ballon();
  inline void clear_has_ballon();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::DataCommon::CommonItemsCPP* commons_;
  ::ProtoAccessAd::BallonCPP* ballon_;
  friend void  protobuf_AddDesc_ProtoAccessAd_2eproto();
  friend void protobuf_AssignDesc_ProtoAccessAd_2eproto();
  friend void protobuf_ShutdownFile_ProtoAccessAd_2eproto();

  void InitAsDefaultInstance();
  static CommonlViewAdResp* default_instance_;
};
// -------------------------------------------------------------------

class ScarecrowCPP : public ::google::protobuf::Message {
 public:
  ScarecrowCPP();
  virtual ~ScarecrowCPP();

  ScarecrowCPP(const ScarecrowCPP& from);

  inline ScarecrowCPP& operator=(const ScarecrowCPP& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ScarecrowCPP& default_instance();

  void Swap(ScarecrowCPP* other);

  // implements Message ----------------------------------------------

  ScarecrowCPP* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ScarecrowCPP& from);
  void MergeFrom(const ScarecrowCPP& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 remainCnt = 1;
  inline bool has_remaincnt() const;
  inline void clear_remaincnt();
  static const int kRemainCntFieldNumber = 1;
  inline ::google::protobuf::uint32 remaincnt() const;
  inline void set_remaincnt(::google::protobuf::uint32 value);

  // required uint32 workEndTs = 2;
  inline bool has_workendts() const;
  inline void clear_workendts();
  static const int kWorkEndTsFieldNumber = 2;
  inline ::google::protobuf::uint32 workendts() const;
  inline void set_workendts(::google::protobuf::uint32 value);

  // required uint32 nextShowTs = 3;
  inline bool has_nextshowts() const;
  inline void clear_nextshowts();
  static const int kNextShowTsFieldNumber = 3;
  inline ::google::protobuf::uint32 nextshowts() const;
  inline void set_nextshowts(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoAccessAd.ScarecrowCPP)
 private:
  inline void set_has_remaincnt();
  inline void clear_has_remaincnt();
  inline void set_has_workendts();
  inline void clear_has_workendts();
  inline void set_has_nextshowts();
  inline void clear_has_nextshowts();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 remaincnt_;
  ::google::protobuf::uint32 workendts_;
  ::google::protobuf::uint32 nextshowts_;
  friend void  protobuf_AddDesc_ProtoAccessAd_2eproto();
  friend void protobuf_AssignDesc_ProtoAccessAd_2eproto();
  friend void protobuf_ShutdownFile_ProtoAccessAd_2eproto();

  void InitAsDefaultInstance();
  static ScarecrowCPP* default_instance_;
};
// -------------------------------------------------------------------

class GetScarecrowInfoReq : public ::google::protobuf::Message {
 public:
  GetScarecrowInfoReq();
  virtual ~GetScarecrowInfoReq();

  GetScarecrowInfoReq(const GetScarecrowInfoReq& from);

  inline GetScarecrowInfoReq& operator=(const GetScarecrowInfoReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetScarecrowInfoReq& default_instance();

  void Swap(GetScarecrowInfoReq* other);

  // implements Message ----------------------------------------------

  GetScarecrowInfoReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetScarecrowInfoReq& from);
  void MergeFrom(const GetScarecrowInfoReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:ProtoAccessAd.GetScarecrowInfoReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_ProtoAccessAd_2eproto();
  friend void protobuf_AssignDesc_ProtoAccessAd_2eproto();
  friend void protobuf_ShutdownFile_ProtoAccessAd_2eproto();

  void InitAsDefaultInstance();
  static GetScarecrowInfoReq* default_instance_;
};
// -------------------------------------------------------------------

class GetScarecrowInfoResp : public ::google::protobuf::Message {
 public:
  GetScarecrowInfoResp();
  virtual ~GetScarecrowInfoResp();

  GetScarecrowInfoResp(const GetScarecrowInfoResp& from);

  inline GetScarecrowInfoResp& operator=(const GetScarecrowInfoResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetScarecrowInfoResp& default_instance();

  void Swap(GetScarecrowInfoResp* other);

  // implements Message ----------------------------------------------

  GetScarecrowInfoResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetScarecrowInfoResp& from);
  void MergeFrom(const GetScarecrowInfoResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .ProtoAccessAd.ScarecrowCPP scarecrow = 1;
  inline bool has_scarecrow() const;
  inline void clear_scarecrow();
  static const int kScarecrowFieldNumber = 1;
  inline const ::ProtoAccessAd::ScarecrowCPP& scarecrow() const;
  inline ::ProtoAccessAd::ScarecrowCPP* mutable_scarecrow();
  inline ::ProtoAccessAd::ScarecrowCPP* release_scarecrow();
  inline void set_allocated_scarecrow(::ProtoAccessAd::ScarecrowCPP* scarecrow);

  // @@protoc_insertion_point(class_scope:ProtoAccessAd.GetScarecrowInfoResp)
 private:
  inline void set_has_scarecrow();
  inline void clear_has_scarecrow();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::ProtoAccessAd::ScarecrowCPP* scarecrow_;
  friend void  protobuf_AddDesc_ProtoAccessAd_2eproto();
  friend void protobuf_AssignDesc_ProtoAccessAd_2eproto();
  friend void protobuf_ShutdownFile_ProtoAccessAd_2eproto();

  void InitAsDefaultInstance();
  static GetScarecrowInfoResp* default_instance_;
};
// -------------------------------------------------------------------

class ScarecrowViewAdReq : public ::google::protobuf::Message {
 public:
  ScarecrowViewAdReq();
  virtual ~ScarecrowViewAdReq();

  ScarecrowViewAdReq(const ScarecrowViewAdReq& from);

  inline ScarecrowViewAdReq& operator=(const ScarecrowViewAdReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ScarecrowViewAdReq& default_instance();

  void Swap(ScarecrowViewAdReq* other);

  // implements Message ----------------------------------------------

  ScarecrowViewAdReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ScarecrowViewAdReq& from);
  void MergeFrom(const ScarecrowViewAdReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 isCostDimaond = 1;
  inline bool has_iscostdimaond() const;
  inline void clear_iscostdimaond();
  static const int kIsCostDimaondFieldNumber = 1;
  inline ::google::protobuf::uint32 iscostdimaond() const;
  inline void set_iscostdimaond(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoAccessAd.ScarecrowViewAdReq)
 private:
  inline void set_has_iscostdimaond();
  inline void clear_has_iscostdimaond();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 iscostdimaond_;
  friend void  protobuf_AddDesc_ProtoAccessAd_2eproto();
  friend void protobuf_AssignDesc_ProtoAccessAd_2eproto();
  friend void protobuf_ShutdownFile_ProtoAccessAd_2eproto();

  void InitAsDefaultInstance();
  static ScarecrowViewAdReq* default_instance_;
};
// -------------------------------------------------------------------

class ScarecrowViewAdResp : public ::google::protobuf::Message {
 public:
  ScarecrowViewAdResp();
  virtual ~ScarecrowViewAdResp();

  ScarecrowViewAdResp(const ScarecrowViewAdResp& from);

  inline ScarecrowViewAdResp& operator=(const ScarecrowViewAdResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ScarecrowViewAdResp& default_instance();

  void Swap(ScarecrowViewAdResp* other);

  // implements Message ----------------------------------------------

  ScarecrowViewAdResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ScarecrowViewAdResp& from);
  void MergeFrom(const ScarecrowViewAdResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .ProtoAccessAd.ScarecrowCPP scarecrow = 1;
  inline bool has_scarecrow() const;
  inline void clear_scarecrow();
  static const int kScarecrowFieldNumber = 1;
  inline const ::ProtoAccessAd::ScarecrowCPP& scarecrow() const;
  inline ::ProtoAccessAd::ScarecrowCPP* mutable_scarecrow();
  inline ::ProtoAccessAd::ScarecrowCPP* release_scarecrow();
  inline void set_allocated_scarecrow(::ProtoAccessAd::ScarecrowCPP* scarecrow);

  // repeated .ProtoProduce.CropLandCPP cropland = 2;
  inline int cropland_size() const;
  inline void clear_cropland();
  static const int kCroplandFieldNumber = 2;
  inline const ::ProtoProduce::CropLandCPP& cropland(int index) const;
  inline ::ProtoProduce::CropLandCPP* mutable_cropland(int index);
  inline ::ProtoProduce::CropLandCPP* add_cropland();
  inline const ::google::protobuf::RepeatedPtrField< ::ProtoProduce::CropLandCPP >&
      cropland() const;
  inline ::google::protobuf::RepeatedPtrField< ::ProtoProduce::CropLandCPP >*
      mutable_cropland();

  // optional .DataCommon.CommonItemsCPP commons = 3;
  inline bool has_commons() const;
  inline void clear_commons();
  static const int kCommonsFieldNumber = 3;
  inline const ::DataCommon::CommonItemsCPP& commons() const;
  inline ::DataCommon::CommonItemsCPP* mutable_commons();
  inline ::DataCommon::CommonItemsCPP* release_commons();
  inline void set_allocated_commons(::DataCommon::CommonItemsCPP* commons);

  // @@protoc_insertion_point(class_scope:ProtoAccessAd.ScarecrowViewAdResp)
 private:
  inline void set_has_scarecrow();
  inline void clear_has_scarecrow();
  inline void set_has_commons();
  inline void clear_has_commons();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::ProtoAccessAd::ScarecrowCPP* scarecrow_;
  ::google::protobuf::RepeatedPtrField< ::ProtoProduce::CropLandCPP > cropland_;
  ::DataCommon::CommonItemsCPP* commons_;
  friend void  protobuf_AddDesc_ProtoAccessAd_2eproto();
  friend void protobuf_AssignDesc_ProtoAccessAd_2eproto();
  friend void protobuf_ShutdownFile_ProtoAccessAd_2eproto();

  void InitAsDefaultInstance();
  static ScarecrowViewAdResp* default_instance_;
};
// ===================================================================


// ===================================================================

// RewardViewAdReq

// -------------------------------------------------------------------

// RewardViewAdResp

// required uint32 ts = 1;
inline bool RewardViewAdResp::has_ts() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RewardViewAdResp::set_has_ts() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RewardViewAdResp::clear_has_ts() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RewardViewAdResp::clear_ts() {
  ts_ = 0u;
  clear_has_ts();
}
inline ::google::protobuf::uint32 RewardViewAdResp::ts() const {
  // @@protoc_insertion_point(field_get:ProtoAccessAd.RewardViewAdResp.ts)
  return ts_;
}
inline void RewardViewAdResp::set_ts(::google::protobuf::uint32 value) {
  set_has_ts();
  ts_ = value;
  // @@protoc_insertion_point(field_set:ProtoAccessAd.RewardViewAdResp.ts)
}

// required .DataCommon.CommonItemsCPP commons = 2;
inline bool RewardViewAdResp::has_commons() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RewardViewAdResp::set_has_commons() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RewardViewAdResp::clear_has_commons() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RewardViewAdResp::clear_commons() {
  if (commons_ != NULL) commons_->::DataCommon::CommonItemsCPP::Clear();
  clear_has_commons();
}
inline const ::DataCommon::CommonItemsCPP& RewardViewAdResp::commons() const {
  // @@protoc_insertion_point(field_get:ProtoAccessAd.RewardViewAdResp.commons)
  return commons_ != NULL ? *commons_ : *default_instance_->commons_;
}
inline ::DataCommon::CommonItemsCPP* RewardViewAdResp::mutable_commons() {
  set_has_commons();
  if (commons_ == NULL) commons_ = new ::DataCommon::CommonItemsCPP;
  // @@protoc_insertion_point(field_mutable:ProtoAccessAd.RewardViewAdResp.commons)
  return commons_;
}
inline ::DataCommon::CommonItemsCPP* RewardViewAdResp::release_commons() {
  clear_has_commons();
  ::DataCommon::CommonItemsCPP* temp = commons_;
  commons_ = NULL;
  return temp;
}
inline void RewardViewAdResp::set_allocated_commons(::DataCommon::CommonItemsCPP* commons) {
  delete commons_;
  commons_ = commons;
  if (commons) {
    set_has_commons();
  } else {
    clear_has_commons();
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoAccessAd.RewardViewAdResp.commons)
}

// -------------------------------------------------------------------

// GetLastViewAdTsReq

// -------------------------------------------------------------------

// GetLastViewAdTsResp

// required uint32 ts = 1;
inline bool GetLastViewAdTsResp::has_ts() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetLastViewAdTsResp::set_has_ts() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetLastViewAdTsResp::clear_has_ts() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetLastViewAdTsResp::clear_ts() {
  ts_ = 0u;
  clear_has_ts();
}
inline ::google::protobuf::uint32 GetLastViewAdTsResp::ts() const {
  // @@protoc_insertion_point(field_get:ProtoAccessAd.GetLastViewAdTsResp.ts)
  return ts_;
}
inline void GetLastViewAdTsResp::set_ts(::google::protobuf::uint32 value) {
  set_has_ts();
  ts_ = value;
  // @@protoc_insertion_point(field_set:ProtoAccessAd.GetLastViewAdTsResp.ts)
}

// -------------------------------------------------------------------

// BallonCPP

// required uint32 remainCnt = 1;
inline bool BallonCPP::has_remaincnt() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BallonCPP::set_has_remaincnt() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BallonCPP::clear_has_remaincnt() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BallonCPP::clear_remaincnt() {
  remaincnt_ = 0u;
  clear_has_remaincnt();
}
inline ::google::protobuf::uint32 BallonCPP::remaincnt() const {
  // @@protoc_insertion_point(field_get:ProtoAccessAd.BallonCPP.remainCnt)
  return remaincnt_;
}
inline void BallonCPP::set_remaincnt(::google::protobuf::uint32 value) {
  set_has_remaincnt();
  remaincnt_ = value;
  // @@protoc_insertion_point(field_set:ProtoAccessAd.BallonCPP.remainCnt)
}

// required uint32 nextTs = 2;
inline bool BallonCPP::has_nextts() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BallonCPP::set_has_nextts() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BallonCPP::clear_has_nextts() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BallonCPP::clear_nextts() {
  nextts_ = 0u;
  clear_has_nextts();
}
inline ::google::protobuf::uint32 BallonCPP::nextts() const {
  // @@protoc_insertion_point(field_get:ProtoAccessAd.BallonCPP.nextTs)
  return nextts_;
}
inline void BallonCPP::set_nextts(::google::protobuf::uint32 value) {
  set_has_nextts();
  nextts_ = value;
  // @@protoc_insertion_point(field_set:ProtoAccessAd.BallonCPP.nextTs)
}

// -------------------------------------------------------------------

// GetBallonInfoReq

// -------------------------------------------------------------------

// GetBallonInfoResp

// required .ProtoAccessAd.BallonCPP ballon = 1;
inline bool GetBallonInfoResp::has_ballon() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetBallonInfoResp::set_has_ballon() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetBallonInfoResp::clear_has_ballon() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetBallonInfoResp::clear_ballon() {
  if (ballon_ != NULL) ballon_->::ProtoAccessAd::BallonCPP::Clear();
  clear_has_ballon();
}
inline const ::ProtoAccessAd::BallonCPP& GetBallonInfoResp::ballon() const {
  // @@protoc_insertion_point(field_get:ProtoAccessAd.GetBallonInfoResp.ballon)
  return ballon_ != NULL ? *ballon_ : *default_instance_->ballon_;
}
inline ::ProtoAccessAd::BallonCPP* GetBallonInfoResp::mutable_ballon() {
  set_has_ballon();
  if (ballon_ == NULL) ballon_ = new ::ProtoAccessAd::BallonCPP;
  // @@protoc_insertion_point(field_mutable:ProtoAccessAd.GetBallonInfoResp.ballon)
  return ballon_;
}
inline ::ProtoAccessAd::BallonCPP* GetBallonInfoResp::release_ballon() {
  clear_has_ballon();
  ::ProtoAccessAd::BallonCPP* temp = ballon_;
  ballon_ = NULL;
  return temp;
}
inline void GetBallonInfoResp::set_allocated_ballon(::ProtoAccessAd::BallonCPP* ballon) {
  delete ballon_;
  ballon_ = ballon;
  if (ballon) {
    set_has_ballon();
  } else {
    clear_has_ballon();
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoAccessAd.GetBallonInfoResp.ballon)
}

// -------------------------------------------------------------------

// CommonlViewAdReq

// required uint32 type = 1;
inline bool CommonlViewAdReq::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CommonlViewAdReq::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CommonlViewAdReq::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CommonlViewAdReq::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 CommonlViewAdReq::type() const {
  // @@protoc_insertion_point(field_get:ProtoAccessAd.CommonlViewAdReq.type)
  return type_;
}
inline void CommonlViewAdReq::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:ProtoAccessAd.CommonlViewAdReq.type)
}

// -------------------------------------------------------------------

// CommonlViewAdResp

// required .DataCommon.CommonItemsCPP commons = 1;
inline bool CommonlViewAdResp::has_commons() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CommonlViewAdResp::set_has_commons() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CommonlViewAdResp::clear_has_commons() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CommonlViewAdResp::clear_commons() {
  if (commons_ != NULL) commons_->::DataCommon::CommonItemsCPP::Clear();
  clear_has_commons();
}
inline const ::DataCommon::CommonItemsCPP& CommonlViewAdResp::commons() const {
  // @@protoc_insertion_point(field_get:ProtoAccessAd.CommonlViewAdResp.commons)
  return commons_ != NULL ? *commons_ : *default_instance_->commons_;
}
inline ::DataCommon::CommonItemsCPP* CommonlViewAdResp::mutable_commons() {
  set_has_commons();
  if (commons_ == NULL) commons_ = new ::DataCommon::CommonItemsCPP;
  // @@protoc_insertion_point(field_mutable:ProtoAccessAd.CommonlViewAdResp.commons)
  return commons_;
}
inline ::DataCommon::CommonItemsCPP* CommonlViewAdResp::release_commons() {
  clear_has_commons();
  ::DataCommon::CommonItemsCPP* temp = commons_;
  commons_ = NULL;
  return temp;
}
inline void CommonlViewAdResp::set_allocated_commons(::DataCommon::CommonItemsCPP* commons) {
  delete commons_;
  commons_ = commons;
  if (commons) {
    set_has_commons();
  } else {
    clear_has_commons();
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoAccessAd.CommonlViewAdResp.commons)
}

// optional .ProtoAccessAd.BallonCPP ballon = 2;
inline bool CommonlViewAdResp::has_ballon() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CommonlViewAdResp::set_has_ballon() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CommonlViewAdResp::clear_has_ballon() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CommonlViewAdResp::clear_ballon() {
  if (ballon_ != NULL) ballon_->::ProtoAccessAd::BallonCPP::Clear();
  clear_has_ballon();
}
inline const ::ProtoAccessAd::BallonCPP& CommonlViewAdResp::ballon() const {
  // @@protoc_insertion_point(field_get:ProtoAccessAd.CommonlViewAdResp.ballon)
  return ballon_ != NULL ? *ballon_ : *default_instance_->ballon_;
}
inline ::ProtoAccessAd::BallonCPP* CommonlViewAdResp::mutable_ballon() {
  set_has_ballon();
  if (ballon_ == NULL) ballon_ = new ::ProtoAccessAd::BallonCPP;
  // @@protoc_insertion_point(field_mutable:ProtoAccessAd.CommonlViewAdResp.ballon)
  return ballon_;
}
inline ::ProtoAccessAd::BallonCPP* CommonlViewAdResp::release_ballon() {
  clear_has_ballon();
  ::ProtoAccessAd::BallonCPP* temp = ballon_;
  ballon_ = NULL;
  return temp;
}
inline void CommonlViewAdResp::set_allocated_ballon(::ProtoAccessAd::BallonCPP* ballon) {
  delete ballon_;
  ballon_ = ballon;
  if (ballon) {
    set_has_ballon();
  } else {
    clear_has_ballon();
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoAccessAd.CommonlViewAdResp.ballon)
}

// -------------------------------------------------------------------

// ScarecrowCPP

// required uint32 remainCnt = 1;
inline bool ScarecrowCPP::has_remaincnt() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ScarecrowCPP::set_has_remaincnt() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ScarecrowCPP::clear_has_remaincnt() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ScarecrowCPP::clear_remaincnt() {
  remaincnt_ = 0u;
  clear_has_remaincnt();
}
inline ::google::protobuf::uint32 ScarecrowCPP::remaincnt() const {
  // @@protoc_insertion_point(field_get:ProtoAccessAd.ScarecrowCPP.remainCnt)
  return remaincnt_;
}
inline void ScarecrowCPP::set_remaincnt(::google::protobuf::uint32 value) {
  set_has_remaincnt();
  remaincnt_ = value;
  // @@protoc_insertion_point(field_set:ProtoAccessAd.ScarecrowCPP.remainCnt)
}

// required uint32 workEndTs = 2;
inline bool ScarecrowCPP::has_workendts() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ScarecrowCPP::set_has_workendts() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ScarecrowCPP::clear_has_workendts() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ScarecrowCPP::clear_workendts() {
  workendts_ = 0u;
  clear_has_workendts();
}
inline ::google::protobuf::uint32 ScarecrowCPP::workendts() const {
  // @@protoc_insertion_point(field_get:ProtoAccessAd.ScarecrowCPP.workEndTs)
  return workendts_;
}
inline void ScarecrowCPP::set_workendts(::google::protobuf::uint32 value) {
  set_has_workendts();
  workendts_ = value;
  // @@protoc_insertion_point(field_set:ProtoAccessAd.ScarecrowCPP.workEndTs)
}

// required uint32 nextShowTs = 3;
inline bool ScarecrowCPP::has_nextshowts() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ScarecrowCPP::set_has_nextshowts() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ScarecrowCPP::clear_has_nextshowts() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ScarecrowCPP::clear_nextshowts() {
  nextshowts_ = 0u;
  clear_has_nextshowts();
}
inline ::google::protobuf::uint32 ScarecrowCPP::nextshowts() const {
  // @@protoc_insertion_point(field_get:ProtoAccessAd.ScarecrowCPP.nextShowTs)
  return nextshowts_;
}
inline void ScarecrowCPP::set_nextshowts(::google::protobuf::uint32 value) {
  set_has_nextshowts();
  nextshowts_ = value;
  // @@protoc_insertion_point(field_set:ProtoAccessAd.ScarecrowCPP.nextShowTs)
}

// -------------------------------------------------------------------

// GetScarecrowInfoReq

// -------------------------------------------------------------------

// GetScarecrowInfoResp

// required .ProtoAccessAd.ScarecrowCPP scarecrow = 1;
inline bool GetScarecrowInfoResp::has_scarecrow() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetScarecrowInfoResp::set_has_scarecrow() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetScarecrowInfoResp::clear_has_scarecrow() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetScarecrowInfoResp::clear_scarecrow() {
  if (scarecrow_ != NULL) scarecrow_->::ProtoAccessAd::ScarecrowCPP::Clear();
  clear_has_scarecrow();
}
inline const ::ProtoAccessAd::ScarecrowCPP& GetScarecrowInfoResp::scarecrow() const {
  // @@protoc_insertion_point(field_get:ProtoAccessAd.GetScarecrowInfoResp.scarecrow)
  return scarecrow_ != NULL ? *scarecrow_ : *default_instance_->scarecrow_;
}
inline ::ProtoAccessAd::ScarecrowCPP* GetScarecrowInfoResp::mutable_scarecrow() {
  set_has_scarecrow();
  if (scarecrow_ == NULL) scarecrow_ = new ::ProtoAccessAd::ScarecrowCPP;
  // @@protoc_insertion_point(field_mutable:ProtoAccessAd.GetScarecrowInfoResp.scarecrow)
  return scarecrow_;
}
inline ::ProtoAccessAd::ScarecrowCPP* GetScarecrowInfoResp::release_scarecrow() {
  clear_has_scarecrow();
  ::ProtoAccessAd::ScarecrowCPP* temp = scarecrow_;
  scarecrow_ = NULL;
  return temp;
}
inline void GetScarecrowInfoResp::set_allocated_scarecrow(::ProtoAccessAd::ScarecrowCPP* scarecrow) {
  delete scarecrow_;
  scarecrow_ = scarecrow;
  if (scarecrow) {
    set_has_scarecrow();
  } else {
    clear_has_scarecrow();
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoAccessAd.GetScarecrowInfoResp.scarecrow)
}

// -------------------------------------------------------------------

// ScarecrowViewAdReq

// optional uint32 isCostDimaond = 1;
inline bool ScarecrowViewAdReq::has_iscostdimaond() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ScarecrowViewAdReq::set_has_iscostdimaond() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ScarecrowViewAdReq::clear_has_iscostdimaond() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ScarecrowViewAdReq::clear_iscostdimaond() {
  iscostdimaond_ = 0u;
  clear_has_iscostdimaond();
}
inline ::google::protobuf::uint32 ScarecrowViewAdReq::iscostdimaond() const {
  // @@protoc_insertion_point(field_get:ProtoAccessAd.ScarecrowViewAdReq.isCostDimaond)
  return iscostdimaond_;
}
inline void ScarecrowViewAdReq::set_iscostdimaond(::google::protobuf::uint32 value) {
  set_has_iscostdimaond();
  iscostdimaond_ = value;
  // @@protoc_insertion_point(field_set:ProtoAccessAd.ScarecrowViewAdReq.isCostDimaond)
}

// -------------------------------------------------------------------

// ScarecrowViewAdResp

// required .ProtoAccessAd.ScarecrowCPP scarecrow = 1;
inline bool ScarecrowViewAdResp::has_scarecrow() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ScarecrowViewAdResp::set_has_scarecrow() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ScarecrowViewAdResp::clear_has_scarecrow() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ScarecrowViewAdResp::clear_scarecrow() {
  if (scarecrow_ != NULL) scarecrow_->::ProtoAccessAd::ScarecrowCPP::Clear();
  clear_has_scarecrow();
}
inline const ::ProtoAccessAd::ScarecrowCPP& ScarecrowViewAdResp::scarecrow() const {
  // @@protoc_insertion_point(field_get:ProtoAccessAd.ScarecrowViewAdResp.scarecrow)
  return scarecrow_ != NULL ? *scarecrow_ : *default_instance_->scarecrow_;
}
inline ::ProtoAccessAd::ScarecrowCPP* ScarecrowViewAdResp::mutable_scarecrow() {
  set_has_scarecrow();
  if (scarecrow_ == NULL) scarecrow_ = new ::ProtoAccessAd::ScarecrowCPP;
  // @@protoc_insertion_point(field_mutable:ProtoAccessAd.ScarecrowViewAdResp.scarecrow)
  return scarecrow_;
}
inline ::ProtoAccessAd::ScarecrowCPP* ScarecrowViewAdResp::release_scarecrow() {
  clear_has_scarecrow();
  ::ProtoAccessAd::ScarecrowCPP* temp = scarecrow_;
  scarecrow_ = NULL;
  return temp;
}
inline void ScarecrowViewAdResp::set_allocated_scarecrow(::ProtoAccessAd::ScarecrowCPP* scarecrow) {
  delete scarecrow_;
  scarecrow_ = scarecrow;
  if (scarecrow) {
    set_has_scarecrow();
  } else {
    clear_has_scarecrow();
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoAccessAd.ScarecrowViewAdResp.scarecrow)
}

// repeated .ProtoProduce.CropLandCPP cropland = 2;
inline int ScarecrowViewAdResp::cropland_size() const {
  return cropland_.size();
}
inline void ScarecrowViewAdResp::clear_cropland() {
  cropland_.Clear();
}
inline const ::ProtoProduce::CropLandCPP& ScarecrowViewAdResp::cropland(int index) const {
  // @@protoc_insertion_point(field_get:ProtoAccessAd.ScarecrowViewAdResp.cropland)
  return cropland_.Get(index);
}
inline ::ProtoProduce::CropLandCPP* ScarecrowViewAdResp::mutable_cropland(int index) {
  // @@protoc_insertion_point(field_mutable:ProtoAccessAd.ScarecrowViewAdResp.cropland)
  return cropland_.Mutable(index);
}
inline ::ProtoProduce::CropLandCPP* ScarecrowViewAdResp::add_cropland() {
  // @@protoc_insertion_point(field_add:ProtoAccessAd.ScarecrowViewAdResp.cropland)
  return cropland_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ProtoProduce::CropLandCPP >&
ScarecrowViewAdResp::cropland() const {
  // @@protoc_insertion_point(field_list:ProtoAccessAd.ScarecrowViewAdResp.cropland)
  return cropland_;
}
inline ::google::protobuf::RepeatedPtrField< ::ProtoProduce::CropLandCPP >*
ScarecrowViewAdResp::mutable_cropland() {
  // @@protoc_insertion_point(field_mutable_list:ProtoAccessAd.ScarecrowViewAdResp.cropland)
  return &cropland_;
}

// optional .DataCommon.CommonItemsCPP commons = 3;
inline bool ScarecrowViewAdResp::has_commons() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ScarecrowViewAdResp::set_has_commons() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ScarecrowViewAdResp::clear_has_commons() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ScarecrowViewAdResp::clear_commons() {
  if (commons_ != NULL) commons_->::DataCommon::CommonItemsCPP::Clear();
  clear_has_commons();
}
inline const ::DataCommon::CommonItemsCPP& ScarecrowViewAdResp::commons() const {
  // @@protoc_insertion_point(field_get:ProtoAccessAd.ScarecrowViewAdResp.commons)
  return commons_ != NULL ? *commons_ : *default_instance_->commons_;
}
inline ::DataCommon::CommonItemsCPP* ScarecrowViewAdResp::mutable_commons() {
  set_has_commons();
  if (commons_ == NULL) commons_ = new ::DataCommon::CommonItemsCPP;
  // @@protoc_insertion_point(field_mutable:ProtoAccessAd.ScarecrowViewAdResp.commons)
  return commons_;
}
inline ::DataCommon::CommonItemsCPP* ScarecrowViewAdResp::release_commons() {
  clear_has_commons();
  ::DataCommon::CommonItemsCPP* temp = commons_;
  commons_ = NULL;
  return temp;
}
inline void ScarecrowViewAdResp::set_allocated_commons(::DataCommon::CommonItemsCPP* commons) {
  delete commons_;
  commons_ = commons;
  if (commons) {
    set_has_commons();
  } else {
    clear_has_commons();
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoAccessAd.ScarecrowViewAdResp.commons)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace ProtoAccessAd

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_ProtoAccessAd_2eproto__INCLUDED
