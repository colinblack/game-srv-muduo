// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ProtoNPCCustomer.proto

#ifndef PROTOBUF_ProtoNPCCustomer_2eproto__INCLUDED
#define PROTOBUF_ProtoNPCCustomer_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "DataCommon.pb.h"
// @@protoc_insertion_point(includes)

namespace ProtoNPCCustomer {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_ProtoNPCCustomer_2eproto();
void protobuf_AssignDesc_ProtoNPCCustomer_2eproto();
void protobuf_ShutdownFile_ProtoNPCCustomer_2eproto();

class NPCCustomerCPP;
class GetNPCCustomerReq;
class GetNPCCustomerResp;
class SellPropsReq;
class SellPropsResp;
class RefuseSellPropsReq;
class RefuseSellPropsResp;

// ===================================================================

class NPCCustomerCPP : public ::google::protobuf::Message {
 public:
  NPCCustomerCPP();
  virtual ~NPCCustomerCPP();

  NPCCustomerCPP(const NPCCustomerCPP& from);

  inline NPCCustomerCPP& operator=(const NPCCustomerCPP& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NPCCustomerCPP& default_instance();

  void Swap(NPCCustomerCPP* other);

  // implements Message ----------------------------------------------

  NPCCustomerCPP* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NPCCustomerCPP& from);
  void MergeFrom(const NPCCustomerCPP& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 propsId = 1;
  inline bool has_propsid() const;
  inline void clear_propsid();
  static const int kPropsIdFieldNumber = 1;
  inline ::google::protobuf::uint32 propsid() const;
  inline void set_propsid(::google::protobuf::uint32 value);

  // optional uint32 propsCnt = 2;
  inline bool has_propscnt() const;
  inline void clear_propscnt();
  static const int kPropsCntFieldNumber = 2;
  inline ::google::protobuf::uint32 propscnt() const;
  inline void set_propscnt(::google::protobuf::uint32 value);

  // required uint32 nextts = 3;
  inline bool has_nextts() const;
  inline void clear_nextts();
  static const int kNexttsFieldNumber = 3;
  inline ::google::protobuf::uint32 nextts() const;
  inline void set_nextts(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoNPCCustomer.NPCCustomerCPP)
 private:
  inline void set_has_propsid();
  inline void clear_has_propsid();
  inline void set_has_propscnt();
  inline void clear_has_propscnt();
  inline void set_has_nextts();
  inline void clear_has_nextts();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 propsid_;
  ::google::protobuf::uint32 propscnt_;
  ::google::protobuf::uint32 nextts_;
  friend void  protobuf_AddDesc_ProtoNPCCustomer_2eproto();
  friend void protobuf_AssignDesc_ProtoNPCCustomer_2eproto();
  friend void protobuf_ShutdownFile_ProtoNPCCustomer_2eproto();

  void InitAsDefaultInstance();
  static NPCCustomerCPP* default_instance_;
};
// -------------------------------------------------------------------

class GetNPCCustomerReq : public ::google::protobuf::Message {
 public:
  GetNPCCustomerReq();
  virtual ~GetNPCCustomerReq();

  GetNPCCustomerReq(const GetNPCCustomerReq& from);

  inline GetNPCCustomerReq& operator=(const GetNPCCustomerReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetNPCCustomerReq& default_instance();

  void Swap(GetNPCCustomerReq* other);

  // implements Message ----------------------------------------------

  GetNPCCustomerReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetNPCCustomerReq& from);
  void MergeFrom(const GetNPCCustomerReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:ProtoNPCCustomer.GetNPCCustomerReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_ProtoNPCCustomer_2eproto();
  friend void protobuf_AssignDesc_ProtoNPCCustomer_2eproto();
  friend void protobuf_ShutdownFile_ProtoNPCCustomer_2eproto();

  void InitAsDefaultInstance();
  static GetNPCCustomerReq* default_instance_;
};
// -------------------------------------------------------------------

class GetNPCCustomerResp : public ::google::protobuf::Message {
 public:
  GetNPCCustomerResp();
  virtual ~GetNPCCustomerResp();

  GetNPCCustomerResp(const GetNPCCustomerResp& from);

  inline GetNPCCustomerResp& operator=(const GetNPCCustomerResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetNPCCustomerResp& default_instance();

  void Swap(GetNPCCustomerResp* other);

  // implements Message ----------------------------------------------

  GetNPCCustomerResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetNPCCustomerResp& from);
  void MergeFrom(const GetNPCCustomerResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .ProtoNPCCustomer.NPCCustomerCPP customer = 1;
  inline int customer_size() const;
  inline void clear_customer();
  static const int kCustomerFieldNumber = 1;
  inline const ::ProtoNPCCustomer::NPCCustomerCPP& customer(int index) const;
  inline ::ProtoNPCCustomer::NPCCustomerCPP* mutable_customer(int index);
  inline ::ProtoNPCCustomer::NPCCustomerCPP* add_customer();
  inline const ::google::protobuf::RepeatedPtrField< ::ProtoNPCCustomer::NPCCustomerCPP >&
      customer() const;
  inline ::google::protobuf::RepeatedPtrField< ::ProtoNPCCustomer::NPCCustomerCPP >*
      mutable_customer();

  // @@protoc_insertion_point(class_scope:ProtoNPCCustomer.GetNPCCustomerResp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::ProtoNPCCustomer::NPCCustomerCPP > customer_;
  friend void  protobuf_AddDesc_ProtoNPCCustomer_2eproto();
  friend void protobuf_AssignDesc_ProtoNPCCustomer_2eproto();
  friend void protobuf_ShutdownFile_ProtoNPCCustomer_2eproto();

  void InitAsDefaultInstance();
  static GetNPCCustomerResp* default_instance_;
};
// -------------------------------------------------------------------

class SellPropsReq : public ::google::protobuf::Message {
 public:
  SellPropsReq();
  virtual ~SellPropsReq();

  SellPropsReq(const SellPropsReq& from);

  inline SellPropsReq& operator=(const SellPropsReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SellPropsReq& default_instance();

  void Swap(SellPropsReq* other);

  // implements Message ----------------------------------------------

  SellPropsReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SellPropsReq& from);
  void MergeFrom(const SellPropsReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 propsId = 1;
  inline bool has_propsid() const;
  inline void clear_propsid();
  static const int kPropsIdFieldNumber = 1;
  inline ::google::protobuf::uint32 propsid() const;
  inline void set_propsid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoNPCCustomer.SellPropsReq)
 private:
  inline void set_has_propsid();
  inline void clear_has_propsid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 propsid_;
  friend void  protobuf_AddDesc_ProtoNPCCustomer_2eproto();
  friend void protobuf_AssignDesc_ProtoNPCCustomer_2eproto();
  friend void protobuf_ShutdownFile_ProtoNPCCustomer_2eproto();

  void InitAsDefaultInstance();
  static SellPropsReq* default_instance_;
};
// -------------------------------------------------------------------

class SellPropsResp : public ::google::protobuf::Message {
 public:
  SellPropsResp();
  virtual ~SellPropsResp();

  SellPropsResp(const SellPropsResp& from);

  inline SellPropsResp& operator=(const SellPropsResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SellPropsResp& default_instance();

  void Swap(SellPropsResp* other);

  // implements Message ----------------------------------------------

  SellPropsResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SellPropsResp& from);
  void MergeFrom(const SellPropsResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .DataCommon.CommonItemsCPP commons = 1;
  inline bool has_commons() const;
  inline void clear_commons();
  static const int kCommonsFieldNumber = 1;
  inline const ::DataCommon::CommonItemsCPP& commons() const;
  inline ::DataCommon::CommonItemsCPP* mutable_commons();
  inline ::DataCommon::CommonItemsCPP* release_commons();
  inline void set_allocated_commons(::DataCommon::CommonItemsCPP* commons);

  // required uint32 ts = 2;
  inline bool has_ts() const;
  inline void clear_ts();
  static const int kTsFieldNumber = 2;
  inline ::google::protobuf::uint32 ts() const;
  inline void set_ts(::google::protobuf::uint32 value);

  // required uint32 npcid = 3;
  inline bool has_npcid() const;
  inline void clear_npcid();
  static const int kNpcidFieldNumber = 3;
  inline ::google::protobuf::uint32 npcid() const;
  inline void set_npcid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoNPCCustomer.SellPropsResp)
 private:
  inline void set_has_commons();
  inline void clear_has_commons();
  inline void set_has_ts();
  inline void clear_has_ts();
  inline void set_has_npcid();
  inline void clear_has_npcid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::DataCommon::CommonItemsCPP* commons_;
  ::google::protobuf::uint32 ts_;
  ::google::protobuf::uint32 npcid_;
  friend void  protobuf_AddDesc_ProtoNPCCustomer_2eproto();
  friend void protobuf_AssignDesc_ProtoNPCCustomer_2eproto();
  friend void protobuf_ShutdownFile_ProtoNPCCustomer_2eproto();

  void InitAsDefaultInstance();
  static SellPropsResp* default_instance_;
};
// -------------------------------------------------------------------

class RefuseSellPropsReq : public ::google::protobuf::Message {
 public:
  RefuseSellPropsReq();
  virtual ~RefuseSellPropsReq();

  RefuseSellPropsReq(const RefuseSellPropsReq& from);

  inline RefuseSellPropsReq& operator=(const RefuseSellPropsReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RefuseSellPropsReq& default_instance();

  void Swap(RefuseSellPropsReq* other);

  // implements Message ----------------------------------------------

  RefuseSellPropsReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RefuseSellPropsReq& from);
  void MergeFrom(const RefuseSellPropsReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 propsId = 1;
  inline bool has_propsid() const;
  inline void clear_propsid();
  static const int kPropsIdFieldNumber = 1;
  inline ::google::protobuf::uint32 propsid() const;
  inline void set_propsid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoNPCCustomer.RefuseSellPropsReq)
 private:
  inline void set_has_propsid();
  inline void clear_has_propsid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 propsid_;
  friend void  protobuf_AddDesc_ProtoNPCCustomer_2eproto();
  friend void protobuf_AssignDesc_ProtoNPCCustomer_2eproto();
  friend void protobuf_ShutdownFile_ProtoNPCCustomer_2eproto();

  void InitAsDefaultInstance();
  static RefuseSellPropsReq* default_instance_;
};
// -------------------------------------------------------------------

class RefuseSellPropsResp : public ::google::protobuf::Message {
 public:
  RefuseSellPropsResp();
  virtual ~RefuseSellPropsResp();

  RefuseSellPropsResp(const RefuseSellPropsResp& from);

  inline RefuseSellPropsResp& operator=(const RefuseSellPropsResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RefuseSellPropsResp& default_instance();

  void Swap(RefuseSellPropsResp* other);

  // implements Message ----------------------------------------------

  RefuseSellPropsResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RefuseSellPropsResp& from);
  void MergeFrom(const RefuseSellPropsResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 ts = 1;
  inline bool has_ts() const;
  inline void clear_ts();
  static const int kTsFieldNumber = 1;
  inline ::google::protobuf::uint32 ts() const;
  inline void set_ts(::google::protobuf::uint32 value);

  // required uint32 npcid = 2;
  inline bool has_npcid() const;
  inline void clear_npcid();
  static const int kNpcidFieldNumber = 2;
  inline ::google::protobuf::uint32 npcid() const;
  inline void set_npcid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoNPCCustomer.RefuseSellPropsResp)
 private:
  inline void set_has_ts();
  inline void clear_has_ts();
  inline void set_has_npcid();
  inline void clear_has_npcid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 ts_;
  ::google::protobuf::uint32 npcid_;
  friend void  protobuf_AddDesc_ProtoNPCCustomer_2eproto();
  friend void protobuf_AssignDesc_ProtoNPCCustomer_2eproto();
  friend void protobuf_ShutdownFile_ProtoNPCCustomer_2eproto();

  void InitAsDefaultInstance();
  static RefuseSellPropsResp* default_instance_;
};
// ===================================================================


// ===================================================================

// NPCCustomerCPP

// optional uint32 propsId = 1;
inline bool NPCCustomerCPP::has_propsid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NPCCustomerCPP::set_has_propsid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NPCCustomerCPP::clear_has_propsid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NPCCustomerCPP::clear_propsid() {
  propsid_ = 0u;
  clear_has_propsid();
}
inline ::google::protobuf::uint32 NPCCustomerCPP::propsid() const {
  // @@protoc_insertion_point(field_get:ProtoNPCCustomer.NPCCustomerCPP.propsId)
  return propsid_;
}
inline void NPCCustomerCPP::set_propsid(::google::protobuf::uint32 value) {
  set_has_propsid();
  propsid_ = value;
  // @@protoc_insertion_point(field_set:ProtoNPCCustomer.NPCCustomerCPP.propsId)
}

// optional uint32 propsCnt = 2;
inline bool NPCCustomerCPP::has_propscnt() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void NPCCustomerCPP::set_has_propscnt() {
  _has_bits_[0] |= 0x00000002u;
}
inline void NPCCustomerCPP::clear_has_propscnt() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void NPCCustomerCPP::clear_propscnt() {
  propscnt_ = 0u;
  clear_has_propscnt();
}
inline ::google::protobuf::uint32 NPCCustomerCPP::propscnt() const {
  // @@protoc_insertion_point(field_get:ProtoNPCCustomer.NPCCustomerCPP.propsCnt)
  return propscnt_;
}
inline void NPCCustomerCPP::set_propscnt(::google::protobuf::uint32 value) {
  set_has_propscnt();
  propscnt_ = value;
  // @@protoc_insertion_point(field_set:ProtoNPCCustomer.NPCCustomerCPP.propsCnt)
}

// required uint32 nextts = 3;
inline bool NPCCustomerCPP::has_nextts() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void NPCCustomerCPP::set_has_nextts() {
  _has_bits_[0] |= 0x00000004u;
}
inline void NPCCustomerCPP::clear_has_nextts() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void NPCCustomerCPP::clear_nextts() {
  nextts_ = 0u;
  clear_has_nextts();
}
inline ::google::protobuf::uint32 NPCCustomerCPP::nextts() const {
  // @@protoc_insertion_point(field_get:ProtoNPCCustomer.NPCCustomerCPP.nextts)
  return nextts_;
}
inline void NPCCustomerCPP::set_nextts(::google::protobuf::uint32 value) {
  set_has_nextts();
  nextts_ = value;
  // @@protoc_insertion_point(field_set:ProtoNPCCustomer.NPCCustomerCPP.nextts)
}

// -------------------------------------------------------------------

// GetNPCCustomerReq

// -------------------------------------------------------------------

// GetNPCCustomerResp

// repeated .ProtoNPCCustomer.NPCCustomerCPP customer = 1;
inline int GetNPCCustomerResp::customer_size() const {
  return customer_.size();
}
inline void GetNPCCustomerResp::clear_customer() {
  customer_.Clear();
}
inline const ::ProtoNPCCustomer::NPCCustomerCPP& GetNPCCustomerResp::customer(int index) const {
  // @@protoc_insertion_point(field_get:ProtoNPCCustomer.GetNPCCustomerResp.customer)
  return customer_.Get(index);
}
inline ::ProtoNPCCustomer::NPCCustomerCPP* GetNPCCustomerResp::mutable_customer(int index) {
  // @@protoc_insertion_point(field_mutable:ProtoNPCCustomer.GetNPCCustomerResp.customer)
  return customer_.Mutable(index);
}
inline ::ProtoNPCCustomer::NPCCustomerCPP* GetNPCCustomerResp::add_customer() {
  // @@protoc_insertion_point(field_add:ProtoNPCCustomer.GetNPCCustomerResp.customer)
  return customer_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ProtoNPCCustomer::NPCCustomerCPP >&
GetNPCCustomerResp::customer() const {
  // @@protoc_insertion_point(field_list:ProtoNPCCustomer.GetNPCCustomerResp.customer)
  return customer_;
}
inline ::google::protobuf::RepeatedPtrField< ::ProtoNPCCustomer::NPCCustomerCPP >*
GetNPCCustomerResp::mutable_customer() {
  // @@protoc_insertion_point(field_mutable_list:ProtoNPCCustomer.GetNPCCustomerResp.customer)
  return &customer_;
}

// -------------------------------------------------------------------

// SellPropsReq

// required uint32 propsId = 1;
inline bool SellPropsReq::has_propsid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SellPropsReq::set_has_propsid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SellPropsReq::clear_has_propsid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SellPropsReq::clear_propsid() {
  propsid_ = 0u;
  clear_has_propsid();
}
inline ::google::protobuf::uint32 SellPropsReq::propsid() const {
  // @@protoc_insertion_point(field_get:ProtoNPCCustomer.SellPropsReq.propsId)
  return propsid_;
}
inline void SellPropsReq::set_propsid(::google::protobuf::uint32 value) {
  set_has_propsid();
  propsid_ = value;
  // @@protoc_insertion_point(field_set:ProtoNPCCustomer.SellPropsReq.propsId)
}

// -------------------------------------------------------------------

// SellPropsResp

// optional .DataCommon.CommonItemsCPP commons = 1;
inline bool SellPropsResp::has_commons() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SellPropsResp::set_has_commons() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SellPropsResp::clear_has_commons() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SellPropsResp::clear_commons() {
  if (commons_ != NULL) commons_->::DataCommon::CommonItemsCPP::Clear();
  clear_has_commons();
}
inline const ::DataCommon::CommonItemsCPP& SellPropsResp::commons() const {
  // @@protoc_insertion_point(field_get:ProtoNPCCustomer.SellPropsResp.commons)
  return commons_ != NULL ? *commons_ : *default_instance_->commons_;
}
inline ::DataCommon::CommonItemsCPP* SellPropsResp::mutable_commons() {
  set_has_commons();
  if (commons_ == NULL) commons_ = new ::DataCommon::CommonItemsCPP;
  // @@protoc_insertion_point(field_mutable:ProtoNPCCustomer.SellPropsResp.commons)
  return commons_;
}
inline ::DataCommon::CommonItemsCPP* SellPropsResp::release_commons() {
  clear_has_commons();
  ::DataCommon::CommonItemsCPP* temp = commons_;
  commons_ = NULL;
  return temp;
}
inline void SellPropsResp::set_allocated_commons(::DataCommon::CommonItemsCPP* commons) {
  delete commons_;
  commons_ = commons;
  if (commons) {
    set_has_commons();
  } else {
    clear_has_commons();
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoNPCCustomer.SellPropsResp.commons)
}

// required uint32 ts = 2;
inline bool SellPropsResp::has_ts() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SellPropsResp::set_has_ts() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SellPropsResp::clear_has_ts() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SellPropsResp::clear_ts() {
  ts_ = 0u;
  clear_has_ts();
}
inline ::google::protobuf::uint32 SellPropsResp::ts() const {
  // @@protoc_insertion_point(field_get:ProtoNPCCustomer.SellPropsResp.ts)
  return ts_;
}
inline void SellPropsResp::set_ts(::google::protobuf::uint32 value) {
  set_has_ts();
  ts_ = value;
  // @@protoc_insertion_point(field_set:ProtoNPCCustomer.SellPropsResp.ts)
}

// required uint32 npcid = 3;
inline bool SellPropsResp::has_npcid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SellPropsResp::set_has_npcid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SellPropsResp::clear_has_npcid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SellPropsResp::clear_npcid() {
  npcid_ = 0u;
  clear_has_npcid();
}
inline ::google::protobuf::uint32 SellPropsResp::npcid() const {
  // @@protoc_insertion_point(field_get:ProtoNPCCustomer.SellPropsResp.npcid)
  return npcid_;
}
inline void SellPropsResp::set_npcid(::google::protobuf::uint32 value) {
  set_has_npcid();
  npcid_ = value;
  // @@protoc_insertion_point(field_set:ProtoNPCCustomer.SellPropsResp.npcid)
}

// -------------------------------------------------------------------

// RefuseSellPropsReq

// required uint32 propsId = 1;
inline bool RefuseSellPropsReq::has_propsid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RefuseSellPropsReq::set_has_propsid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RefuseSellPropsReq::clear_has_propsid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RefuseSellPropsReq::clear_propsid() {
  propsid_ = 0u;
  clear_has_propsid();
}
inline ::google::protobuf::uint32 RefuseSellPropsReq::propsid() const {
  // @@protoc_insertion_point(field_get:ProtoNPCCustomer.RefuseSellPropsReq.propsId)
  return propsid_;
}
inline void RefuseSellPropsReq::set_propsid(::google::protobuf::uint32 value) {
  set_has_propsid();
  propsid_ = value;
  // @@protoc_insertion_point(field_set:ProtoNPCCustomer.RefuseSellPropsReq.propsId)
}

// -------------------------------------------------------------------

// RefuseSellPropsResp

// required uint32 ts = 1;
inline bool RefuseSellPropsResp::has_ts() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RefuseSellPropsResp::set_has_ts() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RefuseSellPropsResp::clear_has_ts() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RefuseSellPropsResp::clear_ts() {
  ts_ = 0u;
  clear_has_ts();
}
inline ::google::protobuf::uint32 RefuseSellPropsResp::ts() const {
  // @@protoc_insertion_point(field_get:ProtoNPCCustomer.RefuseSellPropsResp.ts)
  return ts_;
}
inline void RefuseSellPropsResp::set_ts(::google::protobuf::uint32 value) {
  set_has_ts();
  ts_ = value;
  // @@protoc_insertion_point(field_set:ProtoNPCCustomer.RefuseSellPropsResp.ts)
}

// required uint32 npcid = 2;
inline bool RefuseSellPropsResp::has_npcid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RefuseSellPropsResp::set_has_npcid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RefuseSellPropsResp::clear_has_npcid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RefuseSellPropsResp::clear_npcid() {
  npcid_ = 0u;
  clear_has_npcid();
}
inline ::google::protobuf::uint32 RefuseSellPropsResp::npcid() const {
  // @@protoc_insertion_point(field_get:ProtoNPCCustomer.RefuseSellPropsResp.npcid)
  return npcid_;
}
inline void RefuseSellPropsResp::set_npcid(::google::protobuf::uint32 value) {
  set_has_npcid();
  npcid_ = value;
  // @@protoc_insertion_point(field_set:ProtoNPCCustomer.RefuseSellPropsResp.npcid)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace ProtoNPCCustomer

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_ProtoNPCCustomer_2eproto__INCLUDED
