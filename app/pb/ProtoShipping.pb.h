// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ProtoShipping.proto

#ifndef PROTOBUF_ProtoShipping_2eproto__INCLUDED
#define PROTOBUF_ProtoShipping_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "DataCommon.pb.h"
// @@protoc_insertion_point(includes)

namespace ProtoShipping {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_ProtoShipping_2eproto();
void protobuf_AssignDesc_ProtoShipping_2eproto();
void protobuf_ShutdownFile_ProtoShipping_2eproto();

class ShippingCPP;
class ShippingBoxCPP;
class FullBoxShipCPP;
class UnlockDockReq;
class UnlockDockResp;
class UnveilDockReq;
class UnveilDockResp;
class PackBoxReq;
class PackBoxResp;
class SeekAidReq;
class SeekAidResp;
class OfferAidReq;
class OfferAidResp;
class CSOfferAidReq;
class CSOfferAidResp;
class LeaveDockReq;
class LeaveDockResp;
class SetPlayStatusReq;
class SetPlayStatusResp;
class PushShipBox;
class ShipVIPBonusCPP;
class GetShipBonusInfoReq;
class GetShipBonusInfoResp;
class PushShipBonusInfoMsg;
class PushFullBoxShipMsg;

// ===================================================================

class ShippingCPP : public ::google::protobuf::Message {
 public:
  ShippingCPP();
  virtual ~ShippingCPP();

  ShippingCPP(const ShippingCPP& from);

  inline ShippingCPP& operator=(const ShippingCPP& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ShippingCPP& default_instance();

  void Swap(ShippingCPP* other);

  // implements Message ----------------------------------------------

  ShippingCPP* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ShippingCPP& from);
  void MergeFrom(const ShippingCPP& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 badge = 1;
  inline bool has_badge() const;
  inline void clear_badge();
  static const int kBadgeFieldNumber = 1;
  inline ::google::protobuf::uint32 badge() const;
  inline void set_badge(::google::protobuf::uint32 value);

  // required uint32 unlockEndts = 2;
  inline bool has_unlockendts() const;
  inline void clear_unlockendts();
  static const int kUnlockEndtsFieldNumber = 2;
  inline ::google::protobuf::uint32 unlockendts() const;
  inline void set_unlockendts(::google::protobuf::uint32 value);

  // required uint32 arriveTs = 3;
  inline bool has_arrivets() const;
  inline void clear_arrivets();
  static const int kArriveTsFieldNumber = 3;
  inline ::google::protobuf::uint32 arrivets() const;
  inline void set_arrivets(::google::protobuf::uint32 value);

  // required uint32 publicAidTimes = 4;
  inline bool has_publicaidtimes() const;
  inline void clear_publicaidtimes();
  static const int kPublicAidTimesFieldNumber = 4;
  inline ::google::protobuf::uint32 publicaidtimes() const;
  inline void set_publicaidtimes(::google::protobuf::uint32 value);

  // required uint32 commercialAidTimes = 5;
  inline bool has_commercialaidtimes() const;
  inline void clear_commercialaidtimes();
  static const int kCommercialAidTimesFieldNumber = 5;
  inline ::google::protobuf::uint32 commercialaidtimes() const;
  inline void set_commercialaidtimes(::google::protobuf::uint32 value);

  // required uint32 status = 6;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 6;
  inline ::google::protobuf::uint32 status() const;
  inline void set_status(::google::protobuf::uint32 value);

  // required uint32 playStatus = 7;
  inline bool has_playstatus() const;
  inline void clear_playstatus();
  static const int kPlayStatusFieldNumber = 7;
  inline ::google::protobuf::uint32 playstatus() const;
  inline void set_playstatus(::google::protobuf::uint32 value);

  // optional uint32 viewAdPackCnt = 8;
  inline bool has_viewadpackcnt() const;
  inline void clear_viewadpackcnt();
  static const int kViewAdPackCntFieldNumber = 8;
  inline ::google::protobuf::uint32 viewadpackcnt() const;
  inline void set_viewadpackcnt(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoShipping.ShippingCPP)
 private:
  inline void set_has_badge();
  inline void clear_has_badge();
  inline void set_has_unlockendts();
  inline void clear_has_unlockendts();
  inline void set_has_arrivets();
  inline void clear_has_arrivets();
  inline void set_has_publicaidtimes();
  inline void clear_has_publicaidtimes();
  inline void set_has_commercialaidtimes();
  inline void clear_has_commercialaidtimes();
  inline void set_has_status();
  inline void clear_has_status();
  inline void set_has_playstatus();
  inline void clear_has_playstatus();
  inline void set_has_viewadpackcnt();
  inline void clear_has_viewadpackcnt();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 badge_;
  ::google::protobuf::uint32 unlockendts_;
  ::google::protobuf::uint32 arrivets_;
  ::google::protobuf::uint32 publicaidtimes_;
  ::google::protobuf::uint32 commercialaidtimes_;
  ::google::protobuf::uint32 status_;
  ::google::protobuf::uint32 playstatus_;
  ::google::protobuf::uint32 viewadpackcnt_;
  friend void  protobuf_AddDesc_ProtoShipping_2eproto();
  friend void protobuf_AssignDesc_ProtoShipping_2eproto();
  friend void protobuf_ShutdownFile_ProtoShipping_2eproto();

  void InitAsDefaultInstance();
  static ShippingCPP* default_instance_;
};
// -------------------------------------------------------------------

class ShippingBoxCPP : public ::google::protobuf::Message {
 public:
  ShippingBoxCPP();
  virtual ~ShippingBoxCPP();

  ShippingBoxCPP(const ShippingBoxCPP& from);

  inline ShippingBoxCPP& operator=(const ShippingBoxCPP& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ShippingBoxCPP& default_instance();

  void Swap(ShippingBoxCPP* other);

  // implements Message ----------------------------------------------

  ShippingBoxCPP* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ShippingBoxCPP& from);
  void MergeFrom(const ShippingBoxCPP& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 boxid = 1;
  inline bool has_boxid() const;
  inline void clear_boxid();
  static const int kBoxidFieldNumber = 1;
  inline ::google::protobuf::uint32 boxid() const;
  inline void set_boxid(::google::protobuf::uint32 value);

  // required uint32 propsid = 2;
  inline bool has_propsid() const;
  inline void clear_propsid();
  static const int kPropsidFieldNumber = 2;
  inline ::google::protobuf::uint32 propsid() const;
  inline void set_propsid(::google::protobuf::uint32 value);

  // required uint32 count = 3;
  inline bool has_count() const;
  inline void clear_count();
  static const int kCountFieldNumber = 3;
  inline ::google::protobuf::uint32 count() const;
  inline void set_count(::google::protobuf::uint32 value);

  // required uint32 aidStatus = 4;
  inline bool has_aidstatus() const;
  inline void clear_aidstatus();
  static const int kAidStatusFieldNumber = 4;
  inline ::google::protobuf::uint32 aidstatus() const;
  inline void set_aidstatus(::google::protobuf::uint32 value);

  // required uint32 status = 5;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 5;
  inline ::google::protobuf::uint32 status() const;
  inline void set_status(::google::protobuf::uint32 value);

  // required uint32 coin = 6;
  inline bool has_coin() const;
  inline void clear_coin();
  static const int kCoinFieldNumber = 6;
  inline ::google::protobuf::uint32 coin() const;
  inline void set_coin(::google::protobuf::uint32 value);

  // required uint32 exp = 7;
  inline bool has_exp() const;
  inline void clear_exp();
  static const int kExpFieldNumber = 7;
  inline ::google::protobuf::uint32 exp() const;
  inline void set_exp(::google::protobuf::uint32 value);

  // optional bytes fig = 8;
  inline bool has_fig() const;
  inline void clear_fig();
  static const int kFigFieldNumber = 8;
  inline const ::std::string& fig() const;
  inline void set_fig(const ::std::string& value);
  inline void set_fig(const char* value);
  inline void set_fig(const void* value, size_t size);
  inline ::std::string* mutable_fig();
  inline ::std::string* release_fig();
  inline void set_allocated_fig(::std::string* fig);

  // optional bytes name = 9;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 9;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const void* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:ProtoShipping.ShippingBoxCPP)
 private:
  inline void set_has_boxid();
  inline void clear_has_boxid();
  inline void set_has_propsid();
  inline void clear_has_propsid();
  inline void set_has_count();
  inline void clear_has_count();
  inline void set_has_aidstatus();
  inline void clear_has_aidstatus();
  inline void set_has_status();
  inline void clear_has_status();
  inline void set_has_coin();
  inline void clear_has_coin();
  inline void set_has_exp();
  inline void clear_has_exp();
  inline void set_has_fig();
  inline void clear_has_fig();
  inline void set_has_name();
  inline void clear_has_name();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 boxid_;
  ::google::protobuf::uint32 propsid_;
  ::google::protobuf::uint32 count_;
  ::google::protobuf::uint32 aidstatus_;
  ::google::protobuf::uint32 status_;
  ::google::protobuf::uint32 coin_;
  ::std::string* fig_;
  ::std::string* name_;
  ::google::protobuf::uint32 exp_;
  friend void  protobuf_AddDesc_ProtoShipping_2eproto();
  friend void protobuf_AssignDesc_ProtoShipping_2eproto();
  friend void protobuf_ShutdownFile_ProtoShipping_2eproto();

  void InitAsDefaultInstance();
  static ShippingBoxCPP* default_instance_;
};
// -------------------------------------------------------------------

class FullBoxShipCPP : public ::google::protobuf::Message {
 public:
  FullBoxShipCPP();
  virtual ~FullBoxShipCPP();

  FullBoxShipCPP(const FullBoxShipCPP& from);

  inline FullBoxShipCPP& operator=(const FullBoxShipCPP& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FullBoxShipCPP& default_instance();

  void Swap(FullBoxShipCPP* other);

  // implements Message ----------------------------------------------

  FullBoxShipCPP* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FullBoxShipCPP& from);
  void MergeFrom(const FullBoxShipCPP& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 propsid = 1;
  inline bool has_propsid() const;
  inline void clear_propsid();
  static const int kPropsidFieldNumber = 1;
  inline ::google::protobuf::uint32 propsid() const;
  inline void set_propsid(::google::protobuf::uint32 value);

  // required uint32 propscnt = 2;
  inline bool has_propscnt() const;
  inline void clear_propscnt();
  static const int kPropscntFieldNumber = 2;
  inline ::google::protobuf::uint32 propscnt() const;
  inline void set_propscnt(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoShipping.FullBoxShipCPP)
 private:
  inline void set_has_propsid();
  inline void clear_has_propsid();
  inline void set_has_propscnt();
  inline void clear_has_propscnt();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 propsid_;
  ::google::protobuf::uint32 propscnt_;
  friend void  protobuf_AddDesc_ProtoShipping_2eproto();
  friend void protobuf_AssignDesc_ProtoShipping_2eproto();
  friend void protobuf_ShutdownFile_ProtoShipping_2eproto();

  void InitAsDefaultInstance();
  static FullBoxShipCPP* default_instance_;
};
// -------------------------------------------------------------------

class UnlockDockReq : public ::google::protobuf::Message {
 public:
  UnlockDockReq();
  virtual ~UnlockDockReq();

  UnlockDockReq(const UnlockDockReq& from);

  inline UnlockDockReq& operator=(const UnlockDockReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UnlockDockReq& default_instance();

  void Swap(UnlockDockReq* other);

  // implements Message ----------------------------------------------

  UnlockDockReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UnlockDockReq& from);
  void MergeFrom(const UnlockDockReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:ProtoShipping.UnlockDockReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_ProtoShipping_2eproto();
  friend void protobuf_AssignDesc_ProtoShipping_2eproto();
  friend void protobuf_ShutdownFile_ProtoShipping_2eproto();

  void InitAsDefaultInstance();
  static UnlockDockReq* default_instance_;
};
// -------------------------------------------------------------------

class UnlockDockResp : public ::google::protobuf::Message {
 public:
  UnlockDockResp();
  virtual ~UnlockDockResp();

  UnlockDockResp(const UnlockDockResp& from);

  inline UnlockDockResp& operator=(const UnlockDockResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UnlockDockResp& default_instance();

  void Swap(UnlockDockResp* other);

  // implements Message ----------------------------------------------

  UnlockDockResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UnlockDockResp& from);
  void MergeFrom(const UnlockDockResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .ProtoShipping.ShippingCPP shipping = 1;
  inline bool has_shipping() const;
  inline void clear_shipping();
  static const int kShippingFieldNumber = 1;
  inline const ::ProtoShipping::ShippingCPP& shipping() const;
  inline ::ProtoShipping::ShippingCPP* mutable_shipping();
  inline ::ProtoShipping::ShippingCPP* release_shipping();
  inline void set_allocated_shipping(::ProtoShipping::ShippingCPP* shipping);

  // required .DataCommon.CommonItemsCPP commons = 2;
  inline bool has_commons() const;
  inline void clear_commons();
  static const int kCommonsFieldNumber = 2;
  inline const ::DataCommon::CommonItemsCPP& commons() const;
  inline ::DataCommon::CommonItemsCPP* mutable_commons();
  inline ::DataCommon::CommonItemsCPP* release_commons();
  inline void set_allocated_commons(::DataCommon::CommonItemsCPP* commons);

  // @@protoc_insertion_point(class_scope:ProtoShipping.UnlockDockResp)
 private:
  inline void set_has_shipping();
  inline void clear_has_shipping();
  inline void set_has_commons();
  inline void clear_has_commons();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::ProtoShipping::ShippingCPP* shipping_;
  ::DataCommon::CommonItemsCPP* commons_;
  friend void  protobuf_AddDesc_ProtoShipping_2eproto();
  friend void protobuf_AssignDesc_ProtoShipping_2eproto();
  friend void protobuf_ShutdownFile_ProtoShipping_2eproto();

  void InitAsDefaultInstance();
  static UnlockDockResp* default_instance_;
};
// -------------------------------------------------------------------

class UnveilDockReq : public ::google::protobuf::Message {
 public:
  UnveilDockReq();
  virtual ~UnveilDockReq();

  UnveilDockReq(const UnveilDockReq& from);

  inline UnveilDockReq& operator=(const UnveilDockReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UnveilDockReq& default_instance();

  void Swap(UnveilDockReq* other);

  // implements Message ----------------------------------------------

  UnveilDockReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UnveilDockReq& from);
  void MergeFrom(const UnveilDockReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:ProtoShipping.UnveilDockReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_ProtoShipping_2eproto();
  friend void protobuf_AssignDesc_ProtoShipping_2eproto();
  friend void protobuf_ShutdownFile_ProtoShipping_2eproto();

  void InitAsDefaultInstance();
  static UnveilDockReq* default_instance_;
};
// -------------------------------------------------------------------

class UnveilDockResp : public ::google::protobuf::Message {
 public:
  UnveilDockResp();
  virtual ~UnveilDockResp();

  UnveilDockResp(const UnveilDockResp& from);

  inline UnveilDockResp& operator=(const UnveilDockResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UnveilDockResp& default_instance();

  void Swap(UnveilDockResp* other);

  // implements Message ----------------------------------------------

  UnveilDockResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UnveilDockResp& from);
  void MergeFrom(const UnveilDockResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .ProtoShipping.ShippingCPP shipping = 1;
  inline bool has_shipping() const;
  inline void clear_shipping();
  static const int kShippingFieldNumber = 1;
  inline const ::ProtoShipping::ShippingCPP& shipping() const;
  inline ::ProtoShipping::ShippingCPP* mutable_shipping();
  inline ::ProtoShipping::ShippingCPP* release_shipping();
  inline void set_allocated_shipping(::ProtoShipping::ShippingCPP* shipping);

  // repeated .ProtoShipping.ShippingBoxCPP shipboxes = 2;
  inline int shipboxes_size() const;
  inline void clear_shipboxes();
  static const int kShipboxesFieldNumber = 2;
  inline const ::ProtoShipping::ShippingBoxCPP& shipboxes(int index) const;
  inline ::ProtoShipping::ShippingBoxCPP* mutable_shipboxes(int index);
  inline ::ProtoShipping::ShippingBoxCPP* add_shipboxes();
  inline const ::google::protobuf::RepeatedPtrField< ::ProtoShipping::ShippingBoxCPP >&
      shipboxes() const;
  inline ::google::protobuf::RepeatedPtrField< ::ProtoShipping::ShippingBoxCPP >*
      mutable_shipboxes();

  // @@protoc_insertion_point(class_scope:ProtoShipping.UnveilDockResp)
 private:
  inline void set_has_shipping();
  inline void clear_has_shipping();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::ProtoShipping::ShippingCPP* shipping_;
  ::google::protobuf::RepeatedPtrField< ::ProtoShipping::ShippingBoxCPP > shipboxes_;
  friend void  protobuf_AddDesc_ProtoShipping_2eproto();
  friend void protobuf_AssignDesc_ProtoShipping_2eproto();
  friend void protobuf_ShutdownFile_ProtoShipping_2eproto();

  void InitAsDefaultInstance();
  static UnveilDockResp* default_instance_;
};
// -------------------------------------------------------------------

class PackBoxReq : public ::google::protobuf::Message {
 public:
  PackBoxReq();
  virtual ~PackBoxReq();

  PackBoxReq(const PackBoxReq& from);

  inline PackBoxReq& operator=(const PackBoxReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PackBoxReq& default_instance();

  void Swap(PackBoxReq* other);

  // implements Message ----------------------------------------------

  PackBoxReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PackBoxReq& from);
  void MergeFrom(const PackBoxReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 boxid = 1;
  inline bool has_boxid() const;
  inline void clear_boxid();
  static const int kBoxidFieldNumber = 1;
  inline ::google::protobuf::uint32 boxid() const;
  inline void set_boxid(::google::protobuf::uint32 value);

  // required uint32 type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoShipping.PackBoxReq)
 private:
  inline void set_has_boxid();
  inline void clear_has_boxid();
  inline void set_has_type();
  inline void clear_has_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 boxid_;
  ::google::protobuf::uint32 type_;
  friend void  protobuf_AddDesc_ProtoShipping_2eproto();
  friend void protobuf_AssignDesc_ProtoShipping_2eproto();
  friend void protobuf_ShutdownFile_ProtoShipping_2eproto();

  void InitAsDefaultInstance();
  static PackBoxReq* default_instance_;
};
// -------------------------------------------------------------------

class PackBoxResp : public ::google::protobuf::Message {
 public:
  PackBoxResp();
  virtual ~PackBoxResp();

  PackBoxResp(const PackBoxResp& from);

  inline PackBoxResp& operator=(const PackBoxResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PackBoxResp& default_instance();

  void Swap(PackBoxResp* other);

  // implements Message ----------------------------------------------

  PackBoxResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PackBoxResp& from);
  void MergeFrom(const PackBoxResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .DataCommon.CommonItemsCPP commons = 1;
  inline bool has_commons() const;
  inline void clear_commons();
  static const int kCommonsFieldNumber = 1;
  inline const ::DataCommon::CommonItemsCPP& commons() const;
  inline ::DataCommon::CommonItemsCPP* mutable_commons();
  inline ::DataCommon::CommonItemsCPP* release_commons();
  inline void set_allocated_commons(::DataCommon::CommonItemsCPP* commons);

  // required .ProtoShipping.ShippingBoxCPP boxes = 2;
  inline bool has_boxes() const;
  inline void clear_boxes();
  static const int kBoxesFieldNumber = 2;
  inline const ::ProtoShipping::ShippingBoxCPP& boxes() const;
  inline ::ProtoShipping::ShippingBoxCPP* mutable_boxes();
  inline ::ProtoShipping::ShippingBoxCPP* release_boxes();
  inline void set_allocated_boxes(::ProtoShipping::ShippingBoxCPP* boxes);

  // optional .ProtoShipping.FullBoxShipCPP point = 3;
  inline bool has_point() const;
  inline void clear_point();
  static const int kPointFieldNumber = 3;
  inline const ::ProtoShipping::FullBoxShipCPP& point() const;
  inline ::ProtoShipping::FullBoxShipCPP* mutable_point();
  inline ::ProtoShipping::FullBoxShipCPP* release_point();
  inline void set_allocated_point(::ProtoShipping::FullBoxShipCPP* point);

  // optional uint32 viewAdPackCnt = 4;
  inline bool has_viewadpackcnt() const;
  inline void clear_viewadpackcnt();
  static const int kViewAdPackCntFieldNumber = 4;
  inline ::google::protobuf::uint32 viewadpackcnt() const;
  inline void set_viewadpackcnt(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoShipping.PackBoxResp)
 private:
  inline void set_has_commons();
  inline void clear_has_commons();
  inline void set_has_boxes();
  inline void clear_has_boxes();
  inline void set_has_point();
  inline void clear_has_point();
  inline void set_has_viewadpackcnt();
  inline void clear_has_viewadpackcnt();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::DataCommon::CommonItemsCPP* commons_;
  ::ProtoShipping::ShippingBoxCPP* boxes_;
  ::ProtoShipping::FullBoxShipCPP* point_;
  ::google::protobuf::uint32 viewadpackcnt_;
  friend void  protobuf_AddDesc_ProtoShipping_2eproto();
  friend void protobuf_AssignDesc_ProtoShipping_2eproto();
  friend void protobuf_ShutdownFile_ProtoShipping_2eproto();

  void InitAsDefaultInstance();
  static PackBoxResp* default_instance_;
};
// -------------------------------------------------------------------

class SeekAidReq : public ::google::protobuf::Message {
 public:
  SeekAidReq();
  virtual ~SeekAidReq();

  SeekAidReq(const SeekAidReq& from);

  inline SeekAidReq& operator=(const SeekAidReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SeekAidReq& default_instance();

  void Swap(SeekAidReq* other);

  // implements Message ----------------------------------------------

  SeekAidReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SeekAidReq& from);
  void MergeFrom(const SeekAidReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 boxid = 1;
  inline bool has_boxid() const;
  inline void clear_boxid();
  static const int kBoxidFieldNumber = 1;
  inline ::google::protobuf::uint32 boxid() const;
  inline void set_boxid(::google::protobuf::uint32 value);

  // required uint32 type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoShipping.SeekAidReq)
 private:
  inline void set_has_boxid();
  inline void clear_has_boxid();
  inline void set_has_type();
  inline void clear_has_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 boxid_;
  ::google::protobuf::uint32 type_;
  friend void  protobuf_AddDesc_ProtoShipping_2eproto();
  friend void protobuf_AssignDesc_ProtoShipping_2eproto();
  friend void protobuf_ShutdownFile_ProtoShipping_2eproto();

  void InitAsDefaultInstance();
  static SeekAidReq* default_instance_;
};
// -------------------------------------------------------------------

class SeekAidResp : public ::google::protobuf::Message {
 public:
  SeekAidResp();
  virtual ~SeekAidResp();

  SeekAidResp(const SeekAidResp& from);

  inline SeekAidResp& operator=(const SeekAidResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SeekAidResp& default_instance();

  void Swap(SeekAidResp* other);

  // implements Message ----------------------------------------------

  SeekAidResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SeekAidResp& from);
  void MergeFrom(const SeekAidResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .ProtoShipping.ShippingCPP shipping = 1;
  inline bool has_shipping() const;
  inline void clear_shipping();
  static const int kShippingFieldNumber = 1;
  inline const ::ProtoShipping::ShippingCPP& shipping() const;
  inline ::ProtoShipping::ShippingCPP* mutable_shipping();
  inline ::ProtoShipping::ShippingCPP* release_shipping();
  inline void set_allocated_shipping(::ProtoShipping::ShippingCPP* shipping);

  // required .ProtoShipping.ShippingBoxCPP boxes = 2;
  inline bool has_boxes() const;
  inline void clear_boxes();
  static const int kBoxesFieldNumber = 2;
  inline const ::ProtoShipping::ShippingBoxCPP& boxes() const;
  inline ::ProtoShipping::ShippingBoxCPP* mutable_boxes();
  inline ::ProtoShipping::ShippingBoxCPP* release_boxes();
  inline void set_allocated_boxes(::ProtoShipping::ShippingBoxCPP* boxes);

  // @@protoc_insertion_point(class_scope:ProtoShipping.SeekAidResp)
 private:
  inline void set_has_shipping();
  inline void clear_has_shipping();
  inline void set_has_boxes();
  inline void clear_has_boxes();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::ProtoShipping::ShippingCPP* shipping_;
  ::ProtoShipping::ShippingBoxCPP* boxes_;
  friend void  protobuf_AddDesc_ProtoShipping_2eproto();
  friend void protobuf_AssignDesc_ProtoShipping_2eproto();
  friend void protobuf_ShutdownFile_ProtoShipping_2eproto();

  void InitAsDefaultInstance();
  static SeekAidResp* default_instance_;
};
// -------------------------------------------------------------------

class OfferAidReq : public ::google::protobuf::Message {
 public:
  OfferAidReq();
  virtual ~OfferAidReq();

  OfferAidReq(const OfferAidReq& from);

  inline OfferAidReq& operator=(const OfferAidReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OfferAidReq& default_instance();

  void Swap(OfferAidReq* other);

  // implements Message ----------------------------------------------

  OfferAidReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const OfferAidReq& from);
  void MergeFrom(const OfferAidReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 othuid = 1;
  inline bool has_othuid() const;
  inline void clear_othuid();
  static const int kOthuidFieldNumber = 1;
  inline ::google::protobuf::uint32 othuid() const;
  inline void set_othuid(::google::protobuf::uint32 value);

  // required uint32 boxid = 2;
  inline bool has_boxid() const;
  inline void clear_boxid();
  static const int kBoxidFieldNumber = 2;
  inline ::google::protobuf::uint32 boxid() const;
  inline void set_boxid(::google::protobuf::uint32 value);

  // required uint32 propsid = 3;
  inline bool has_propsid() const;
  inline void clear_propsid();
  static const int kPropsidFieldNumber = 3;
  inline ::google::protobuf::uint32 propsid() const;
  inline void set_propsid(::google::protobuf::uint32 value);

  // required uint32 propscnt = 4;
  inline bool has_propscnt() const;
  inline void clear_propscnt();
  static const int kPropscntFieldNumber = 4;
  inline ::google::protobuf::uint32 propscnt() const;
  inline void set_propscnt(::google::protobuf::uint32 value);

  // required uint32 coin = 5;
  inline bool has_coin() const;
  inline void clear_coin();
  static const int kCoinFieldNumber = 5;
  inline ::google::protobuf::uint32 coin() const;
  inline void set_coin(::google::protobuf::uint32 value);

  // required uint32 exp = 6;
  inline bool has_exp() const;
  inline void clear_exp();
  static const int kExpFieldNumber = 6;
  inline ::google::protobuf::uint32 exp() const;
  inline void set_exp(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoShipping.OfferAidReq)
 private:
  inline void set_has_othuid();
  inline void clear_has_othuid();
  inline void set_has_boxid();
  inline void clear_has_boxid();
  inline void set_has_propsid();
  inline void clear_has_propsid();
  inline void set_has_propscnt();
  inline void clear_has_propscnt();
  inline void set_has_coin();
  inline void clear_has_coin();
  inline void set_has_exp();
  inline void clear_has_exp();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 othuid_;
  ::google::protobuf::uint32 boxid_;
  ::google::protobuf::uint32 propsid_;
  ::google::protobuf::uint32 propscnt_;
  ::google::protobuf::uint32 coin_;
  ::google::protobuf::uint32 exp_;
  friend void  protobuf_AddDesc_ProtoShipping_2eproto();
  friend void protobuf_AssignDesc_ProtoShipping_2eproto();
  friend void protobuf_ShutdownFile_ProtoShipping_2eproto();

  void InitAsDefaultInstance();
  static OfferAidReq* default_instance_;
};
// -------------------------------------------------------------------

class OfferAidResp : public ::google::protobuf::Message {
 public:
  OfferAidResp();
  virtual ~OfferAidResp();

  OfferAidResp(const OfferAidResp& from);

  inline OfferAidResp& operator=(const OfferAidResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OfferAidResp& default_instance();

  void Swap(OfferAidResp* other);

  // implements Message ----------------------------------------------

  OfferAidResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const OfferAidResp& from);
  void MergeFrom(const OfferAidResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .DataCommon.CommonItemsCPP commons = 1;
  inline bool has_commons() const;
  inline void clear_commons();
  static const int kCommonsFieldNumber = 1;
  inline const ::DataCommon::CommonItemsCPP& commons() const;
  inline ::DataCommon::CommonItemsCPP* mutable_commons();
  inline ::DataCommon::CommonItemsCPP* release_commons();
  inline void set_allocated_commons(::DataCommon::CommonItemsCPP* commons);

  // required .ProtoShipping.ShippingCPP selfshipping = 2;
  inline bool has_selfshipping() const;
  inline void clear_selfshipping();
  static const int kSelfshippingFieldNumber = 2;
  inline const ::ProtoShipping::ShippingCPP& selfshipping() const;
  inline ::ProtoShipping::ShippingCPP* mutable_selfshipping();
  inline ::ProtoShipping::ShippingCPP* release_selfshipping();
  inline void set_allocated_selfshipping(::ProtoShipping::ShippingCPP* selfshipping);

  // optional .ProtoShipping.ShippingBoxCPP othboxes = 3;
  inline bool has_othboxes() const;
  inline void clear_othboxes();
  static const int kOthboxesFieldNumber = 3;
  inline const ::ProtoShipping::ShippingBoxCPP& othboxes() const;
  inline ::ProtoShipping::ShippingBoxCPP* mutable_othboxes();
  inline ::ProtoShipping::ShippingBoxCPP* release_othboxes();
  inline void set_allocated_othboxes(::ProtoShipping::ShippingBoxCPP* othboxes);

  // optional uint32 othboxid = 4;
  inline bool has_othboxid() const;
  inline void clear_othboxid();
  static const int kOthboxidFieldNumber = 4;
  inline ::google::protobuf::uint32 othboxid() const;
  inline void set_othboxid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoShipping.OfferAidResp)
 private:
  inline void set_has_commons();
  inline void clear_has_commons();
  inline void set_has_selfshipping();
  inline void clear_has_selfshipping();
  inline void set_has_othboxes();
  inline void clear_has_othboxes();
  inline void set_has_othboxid();
  inline void clear_has_othboxid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::DataCommon::CommonItemsCPP* commons_;
  ::ProtoShipping::ShippingCPP* selfshipping_;
  ::ProtoShipping::ShippingBoxCPP* othboxes_;
  ::google::protobuf::uint32 othboxid_;
  friend void  protobuf_AddDesc_ProtoShipping_2eproto();
  friend void protobuf_AssignDesc_ProtoShipping_2eproto();
  friend void protobuf_ShutdownFile_ProtoShipping_2eproto();

  void InitAsDefaultInstance();
  static OfferAidResp* default_instance_;
};
// -------------------------------------------------------------------

class CSOfferAidReq : public ::google::protobuf::Message {
 public:
  CSOfferAidReq();
  virtual ~CSOfferAidReq();

  CSOfferAidReq(const CSOfferAidReq& from);

  inline CSOfferAidReq& operator=(const CSOfferAidReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSOfferAidReq& default_instance();

  void Swap(CSOfferAidReq* other);

  // implements Message ----------------------------------------------

  CSOfferAidReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSOfferAidReq& from);
  void MergeFrom(const CSOfferAidReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 myuid = 1;
  inline bool has_myuid() const;
  inline void clear_myuid();
  static const int kMyuidFieldNumber = 1;
  inline ::google::protobuf::uint32 myuid() const;
  inline void set_myuid(::google::protobuf::uint32 value);

  // required uint32 othuid = 2;
  inline bool has_othuid() const;
  inline void clear_othuid();
  static const int kOthuidFieldNumber = 2;
  inline ::google::protobuf::uint32 othuid() const;
  inline void set_othuid(::google::protobuf::uint32 value);

  // required .ProtoShipping.ShippingBoxCPP box = 3;
  inline bool has_box() const;
  inline void clear_box();
  static const int kBoxFieldNumber = 3;
  inline const ::ProtoShipping::ShippingBoxCPP& box() const;
  inline ::ProtoShipping::ShippingBoxCPP* mutable_box();
  inline ::ProtoShipping::ShippingBoxCPP* release_box();
  inline void set_allocated_box(::ProtoShipping::ShippingBoxCPP* box);

  // required uint32 myallianceid = 4;
  inline bool has_myallianceid() const;
  inline void clear_myallianceid();
  static const int kMyallianceidFieldNumber = 4;
  inline ::google::protobuf::uint32 myallianceid() const;
  inline void set_myallianceid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoShipping.CSOfferAidReq)
 private:
  inline void set_has_myuid();
  inline void clear_has_myuid();
  inline void set_has_othuid();
  inline void clear_has_othuid();
  inline void set_has_box();
  inline void clear_has_box();
  inline void set_has_myallianceid();
  inline void clear_has_myallianceid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 myuid_;
  ::google::protobuf::uint32 othuid_;
  ::ProtoShipping::ShippingBoxCPP* box_;
  ::google::protobuf::uint32 myallianceid_;
  friend void  protobuf_AddDesc_ProtoShipping_2eproto();
  friend void protobuf_AssignDesc_ProtoShipping_2eproto();
  friend void protobuf_ShutdownFile_ProtoShipping_2eproto();

  void InitAsDefaultInstance();
  static CSOfferAidReq* default_instance_;
};
// -------------------------------------------------------------------

class CSOfferAidResp : public ::google::protobuf::Message {
 public:
  CSOfferAidResp();
  virtual ~CSOfferAidResp();

  CSOfferAidResp(const CSOfferAidResp& from);

  inline CSOfferAidResp& operator=(const CSOfferAidResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSOfferAidResp& default_instance();

  void Swap(CSOfferAidResp* other);

  // implements Message ----------------------------------------------

  CSOfferAidResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSOfferAidResp& from);
  void MergeFrom(const CSOfferAidResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 myuid = 1;
  inline bool has_myuid() const;
  inline void clear_myuid();
  static const int kMyuidFieldNumber = 1;
  inline ::google::protobuf::uint32 myuid() const;
  inline void set_myuid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoShipping.CSOfferAidResp)
 private:
  inline void set_has_myuid();
  inline void clear_has_myuid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 myuid_;
  friend void  protobuf_AddDesc_ProtoShipping_2eproto();
  friend void protobuf_AssignDesc_ProtoShipping_2eproto();
  friend void protobuf_ShutdownFile_ProtoShipping_2eproto();

  void InitAsDefaultInstance();
  static CSOfferAidResp* default_instance_;
};
// -------------------------------------------------------------------

class LeaveDockReq : public ::google::protobuf::Message {
 public:
  LeaveDockReq();
  virtual ~LeaveDockReq();

  LeaveDockReq(const LeaveDockReq& from);

  inline LeaveDockReq& operator=(const LeaveDockReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LeaveDockReq& default_instance();

  void Swap(LeaveDockReq* other);

  // implements Message ----------------------------------------------

  LeaveDockReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LeaveDockReq& from);
  void MergeFrom(const LeaveDockReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:ProtoShipping.LeaveDockReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_ProtoShipping_2eproto();
  friend void protobuf_AssignDesc_ProtoShipping_2eproto();
  friend void protobuf_ShutdownFile_ProtoShipping_2eproto();

  void InitAsDefaultInstance();
  static LeaveDockReq* default_instance_;
};
// -------------------------------------------------------------------

class LeaveDockResp : public ::google::protobuf::Message {
 public:
  LeaveDockResp();
  virtual ~LeaveDockResp();

  LeaveDockResp(const LeaveDockResp& from);

  inline LeaveDockResp& operator=(const LeaveDockResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LeaveDockResp& default_instance();

  void Swap(LeaveDockResp* other);

  // implements Message ----------------------------------------------

  LeaveDockResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LeaveDockResp& from);
  void MergeFrom(const LeaveDockResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .ProtoShipping.ShippingCPP shipping = 1;
  inline bool has_shipping() const;
  inline void clear_shipping();
  static const int kShippingFieldNumber = 1;
  inline const ::ProtoShipping::ShippingCPP& shipping() const;
  inline ::ProtoShipping::ShippingCPP* mutable_shipping();
  inline ::ProtoShipping::ShippingCPP* release_shipping();
  inline void set_allocated_shipping(::ProtoShipping::ShippingCPP* shipping);

  // repeated .ProtoShipping.ShippingBoxCPP shipboxes = 2;
  inline int shipboxes_size() const;
  inline void clear_shipboxes();
  static const int kShipboxesFieldNumber = 2;
  inline const ::ProtoShipping::ShippingBoxCPP& shipboxes(int index) const;
  inline ::ProtoShipping::ShippingBoxCPP* mutable_shipboxes(int index);
  inline ::ProtoShipping::ShippingBoxCPP* add_shipboxes();
  inline const ::google::protobuf::RepeatedPtrField< ::ProtoShipping::ShippingBoxCPP >&
      shipboxes() const;
  inline ::google::protobuf::RepeatedPtrField< ::ProtoShipping::ShippingBoxCPP >*
      mutable_shipboxes();

  // required .DataCommon.CommonItemsCPP commons = 3;
  inline bool has_commons() const;
  inline void clear_commons();
  static const int kCommonsFieldNumber = 3;
  inline const ::DataCommon::CommonItemsCPP& commons() const;
  inline ::DataCommon::CommonItemsCPP* mutable_commons();
  inline ::DataCommon::CommonItemsCPP* release_commons();
  inline void set_allocated_commons(::DataCommon::CommonItemsCPP* commons);

  // optional .ProtoShipping.ShipVIPBonusCPP vipshipbonus = 4;
  inline bool has_vipshipbonus() const;
  inline void clear_vipshipbonus();
  static const int kVipshipbonusFieldNumber = 4;
  inline const ::ProtoShipping::ShipVIPBonusCPP& vipshipbonus() const;
  inline ::ProtoShipping::ShipVIPBonusCPP* mutable_vipshipbonus();
  inline ::ProtoShipping::ShipVIPBonusCPP* release_vipshipbonus();
  inline void set_allocated_vipshipbonus(::ProtoShipping::ShipVIPBonusCPP* vipshipbonus);

  // @@protoc_insertion_point(class_scope:ProtoShipping.LeaveDockResp)
 private:
  inline void set_has_shipping();
  inline void clear_has_shipping();
  inline void set_has_commons();
  inline void clear_has_commons();
  inline void set_has_vipshipbonus();
  inline void clear_has_vipshipbonus();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::ProtoShipping::ShippingCPP* shipping_;
  ::google::protobuf::RepeatedPtrField< ::ProtoShipping::ShippingBoxCPP > shipboxes_;
  ::DataCommon::CommonItemsCPP* commons_;
  ::ProtoShipping::ShipVIPBonusCPP* vipshipbonus_;
  friend void  protobuf_AddDesc_ProtoShipping_2eproto();
  friend void protobuf_AssignDesc_ProtoShipping_2eproto();
  friend void protobuf_ShutdownFile_ProtoShipping_2eproto();

  void InitAsDefaultInstance();
  static LeaveDockResp* default_instance_;
};
// -------------------------------------------------------------------

class SetPlayStatusReq : public ::google::protobuf::Message {
 public:
  SetPlayStatusReq();
  virtual ~SetPlayStatusReq();

  SetPlayStatusReq(const SetPlayStatusReq& from);

  inline SetPlayStatusReq& operator=(const SetPlayStatusReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SetPlayStatusReq& default_instance();

  void Swap(SetPlayStatusReq* other);

  // implements Message ----------------------------------------------

  SetPlayStatusReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SetPlayStatusReq& from);
  void MergeFrom(const SetPlayStatusReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:ProtoShipping.SetPlayStatusReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_ProtoShipping_2eproto();
  friend void protobuf_AssignDesc_ProtoShipping_2eproto();
  friend void protobuf_ShutdownFile_ProtoShipping_2eproto();

  void InitAsDefaultInstance();
  static SetPlayStatusReq* default_instance_;
};
// -------------------------------------------------------------------

class SetPlayStatusResp : public ::google::protobuf::Message {
 public:
  SetPlayStatusResp();
  virtual ~SetPlayStatusResp();

  SetPlayStatusResp(const SetPlayStatusResp& from);

  inline SetPlayStatusResp& operator=(const SetPlayStatusResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SetPlayStatusResp& default_instance();

  void Swap(SetPlayStatusResp* other);

  // implements Message ----------------------------------------------

  SetPlayStatusResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SetPlayStatusResp& from);
  void MergeFrom(const SetPlayStatusResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .ProtoShipping.ShippingCPP shipping = 1;
  inline bool has_shipping() const;
  inline void clear_shipping();
  static const int kShippingFieldNumber = 1;
  inline const ::ProtoShipping::ShippingCPP& shipping() const;
  inline ::ProtoShipping::ShippingCPP* mutable_shipping();
  inline ::ProtoShipping::ShippingCPP* release_shipping();
  inline void set_allocated_shipping(::ProtoShipping::ShippingCPP* shipping);

  // @@protoc_insertion_point(class_scope:ProtoShipping.SetPlayStatusResp)
 private:
  inline void set_has_shipping();
  inline void clear_has_shipping();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::ProtoShipping::ShippingCPP* shipping_;
  friend void  protobuf_AddDesc_ProtoShipping_2eproto();
  friend void protobuf_AssignDesc_ProtoShipping_2eproto();
  friend void protobuf_ShutdownFile_ProtoShipping_2eproto();

  void InitAsDefaultInstance();
  static SetPlayStatusResp* default_instance_;
};
// -------------------------------------------------------------------

class PushShipBox : public ::google::protobuf::Message {
 public:
  PushShipBox();
  virtual ~PushShipBox();

  PushShipBox(const PushShipBox& from);

  inline PushShipBox& operator=(const PushShipBox& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PushShipBox& default_instance();

  void Swap(PushShipBox* other);

  // implements Message ----------------------------------------------

  PushShipBox* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PushShipBox& from);
  void MergeFrom(const PushShipBox& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .ProtoShipping.ShippingBoxCPP box = 1;
  inline bool has_box() const;
  inline void clear_box();
  static const int kBoxFieldNumber = 1;
  inline const ::ProtoShipping::ShippingBoxCPP& box() const;
  inline ::ProtoShipping::ShippingBoxCPP* mutable_box();
  inline ::ProtoShipping::ShippingBoxCPP* release_box();
  inline void set_allocated_box(::ProtoShipping::ShippingBoxCPP* box);

  // @@protoc_insertion_point(class_scope:ProtoShipping.PushShipBox)
 private:
  inline void set_has_box();
  inline void clear_has_box();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::ProtoShipping::ShippingBoxCPP* box_;
  friend void  protobuf_AddDesc_ProtoShipping_2eproto();
  friend void protobuf_AssignDesc_ProtoShipping_2eproto();
  friend void protobuf_ShutdownFile_ProtoShipping_2eproto();

  void InitAsDefaultInstance();
  static PushShipBox* default_instance_;
};
// -------------------------------------------------------------------

class ShipVIPBonusCPP : public ::google::protobuf::Message {
 public:
  ShipVIPBonusCPP();
  virtual ~ShipVIPBonusCPP();

  ShipVIPBonusCPP(const ShipVIPBonusCPP& from);

  inline ShipVIPBonusCPP& operator=(const ShipVIPBonusCPP& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ShipVIPBonusCPP& default_instance();

  void Swap(ShipVIPBonusCPP* other);

  // implements Message ----------------------------------------------

  ShipVIPBonusCPP* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ShipVIPBonusCPP& from);
  void MergeFrom(const ShipVIPBonusCPP& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 remaincnt = 1;
  inline bool has_remaincnt() const;
  inline void clear_remaincnt();
  static const int kRemaincntFieldNumber = 1;
  inline ::google::protobuf::uint32 remaincnt() const;
  inline void set_remaincnt(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoShipping.ShipVIPBonusCPP)
 private:
  inline void set_has_remaincnt();
  inline void clear_has_remaincnt();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 remaincnt_;
  friend void  protobuf_AddDesc_ProtoShipping_2eproto();
  friend void protobuf_AssignDesc_ProtoShipping_2eproto();
  friend void protobuf_ShutdownFile_ProtoShipping_2eproto();

  void InitAsDefaultInstance();
  static ShipVIPBonusCPP* default_instance_;
};
// -------------------------------------------------------------------

class GetShipBonusInfoReq : public ::google::protobuf::Message {
 public:
  GetShipBonusInfoReq();
  virtual ~GetShipBonusInfoReq();

  GetShipBonusInfoReq(const GetShipBonusInfoReq& from);

  inline GetShipBonusInfoReq& operator=(const GetShipBonusInfoReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetShipBonusInfoReq& default_instance();

  void Swap(GetShipBonusInfoReq* other);

  // implements Message ----------------------------------------------

  GetShipBonusInfoReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetShipBonusInfoReq& from);
  void MergeFrom(const GetShipBonusInfoReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:ProtoShipping.GetShipBonusInfoReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_ProtoShipping_2eproto();
  friend void protobuf_AssignDesc_ProtoShipping_2eproto();
  friend void protobuf_ShutdownFile_ProtoShipping_2eproto();

  void InitAsDefaultInstance();
  static GetShipBonusInfoReq* default_instance_;
};
// -------------------------------------------------------------------

class GetShipBonusInfoResp : public ::google::protobuf::Message {
 public:
  GetShipBonusInfoResp();
  virtual ~GetShipBonusInfoResp();

  GetShipBonusInfoResp(const GetShipBonusInfoResp& from);

  inline GetShipBonusInfoResp& operator=(const GetShipBonusInfoResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetShipBonusInfoResp& default_instance();

  void Swap(GetShipBonusInfoResp* other);

  // implements Message ----------------------------------------------

  GetShipBonusInfoResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetShipBonusInfoResp& from);
  void MergeFrom(const GetShipBonusInfoResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .ProtoShipping.ShipVIPBonusCPP vipshipbonus = 1;
  inline bool has_vipshipbonus() const;
  inline void clear_vipshipbonus();
  static const int kVipshipbonusFieldNumber = 1;
  inline const ::ProtoShipping::ShipVIPBonusCPP& vipshipbonus() const;
  inline ::ProtoShipping::ShipVIPBonusCPP* mutable_vipshipbonus();
  inline ::ProtoShipping::ShipVIPBonusCPP* release_vipshipbonus();
  inline void set_allocated_vipshipbonus(::ProtoShipping::ShipVIPBonusCPP* vipshipbonus);

  // optional .ProtoShipping.FullBoxShipCPP point = 2;
  inline bool has_point() const;
  inline void clear_point();
  static const int kPointFieldNumber = 2;
  inline const ::ProtoShipping::FullBoxShipCPP& point() const;
  inline ::ProtoShipping::FullBoxShipCPP* mutable_point();
  inline ::ProtoShipping::FullBoxShipCPP* release_point();
  inline void set_allocated_point(::ProtoShipping::FullBoxShipCPP* point);

  // @@protoc_insertion_point(class_scope:ProtoShipping.GetShipBonusInfoResp)
 private:
  inline void set_has_vipshipbonus();
  inline void clear_has_vipshipbonus();
  inline void set_has_point();
  inline void clear_has_point();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::ProtoShipping::ShipVIPBonusCPP* vipshipbonus_;
  ::ProtoShipping::FullBoxShipCPP* point_;
  friend void  protobuf_AddDesc_ProtoShipping_2eproto();
  friend void protobuf_AssignDesc_ProtoShipping_2eproto();
  friend void protobuf_ShutdownFile_ProtoShipping_2eproto();

  void InitAsDefaultInstance();
  static GetShipBonusInfoResp* default_instance_;
};
// -------------------------------------------------------------------

class PushShipBonusInfoMsg : public ::google::protobuf::Message {
 public:
  PushShipBonusInfoMsg();
  virtual ~PushShipBonusInfoMsg();

  PushShipBonusInfoMsg(const PushShipBonusInfoMsg& from);

  inline PushShipBonusInfoMsg& operator=(const PushShipBonusInfoMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PushShipBonusInfoMsg& default_instance();

  void Swap(PushShipBonusInfoMsg* other);

  // implements Message ----------------------------------------------

  PushShipBonusInfoMsg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PushShipBonusInfoMsg& from);
  void MergeFrom(const PushShipBonusInfoMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .ProtoShipping.ShipVIPBonusCPP vipshipbonus = 1;
  inline bool has_vipshipbonus() const;
  inline void clear_vipshipbonus();
  static const int kVipshipbonusFieldNumber = 1;
  inline const ::ProtoShipping::ShipVIPBonusCPP& vipshipbonus() const;
  inline ::ProtoShipping::ShipVIPBonusCPP* mutable_vipshipbonus();
  inline ::ProtoShipping::ShipVIPBonusCPP* release_vipshipbonus();
  inline void set_allocated_vipshipbonus(::ProtoShipping::ShipVIPBonusCPP* vipshipbonus);

  // @@protoc_insertion_point(class_scope:ProtoShipping.PushShipBonusInfoMsg)
 private:
  inline void set_has_vipshipbonus();
  inline void clear_has_vipshipbonus();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::ProtoShipping::ShipVIPBonusCPP* vipshipbonus_;
  friend void  protobuf_AddDesc_ProtoShipping_2eproto();
  friend void protobuf_AssignDesc_ProtoShipping_2eproto();
  friend void protobuf_ShutdownFile_ProtoShipping_2eproto();

  void InitAsDefaultInstance();
  static PushShipBonusInfoMsg* default_instance_;
};
// -------------------------------------------------------------------

class PushFullBoxShipMsg : public ::google::protobuf::Message {
 public:
  PushFullBoxShipMsg();
  virtual ~PushFullBoxShipMsg();

  PushFullBoxShipMsg(const PushFullBoxShipMsg& from);

  inline PushFullBoxShipMsg& operator=(const PushFullBoxShipMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PushFullBoxShipMsg& default_instance();

  void Swap(PushFullBoxShipMsg* other);

  // implements Message ----------------------------------------------

  PushFullBoxShipMsg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PushFullBoxShipMsg& from);
  void MergeFrom(const PushFullBoxShipMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .ProtoShipping.FullBoxShipCPP point = 1;
  inline bool has_point() const;
  inline void clear_point();
  static const int kPointFieldNumber = 1;
  inline const ::ProtoShipping::FullBoxShipCPP& point() const;
  inline ::ProtoShipping::FullBoxShipCPP* mutable_point();
  inline ::ProtoShipping::FullBoxShipCPP* release_point();
  inline void set_allocated_point(::ProtoShipping::FullBoxShipCPP* point);

  // @@protoc_insertion_point(class_scope:ProtoShipping.PushFullBoxShipMsg)
 private:
  inline void set_has_point();
  inline void clear_has_point();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::ProtoShipping::FullBoxShipCPP* point_;
  friend void  protobuf_AddDesc_ProtoShipping_2eproto();
  friend void protobuf_AssignDesc_ProtoShipping_2eproto();
  friend void protobuf_ShutdownFile_ProtoShipping_2eproto();

  void InitAsDefaultInstance();
  static PushFullBoxShipMsg* default_instance_;
};
// ===================================================================


// ===================================================================

// ShippingCPP

// required uint32 badge = 1;
inline bool ShippingCPP::has_badge() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ShippingCPP::set_has_badge() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ShippingCPP::clear_has_badge() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ShippingCPP::clear_badge() {
  badge_ = 0u;
  clear_has_badge();
}
inline ::google::protobuf::uint32 ShippingCPP::badge() const {
  // @@protoc_insertion_point(field_get:ProtoShipping.ShippingCPP.badge)
  return badge_;
}
inline void ShippingCPP::set_badge(::google::protobuf::uint32 value) {
  set_has_badge();
  badge_ = value;
  // @@protoc_insertion_point(field_set:ProtoShipping.ShippingCPP.badge)
}

// required uint32 unlockEndts = 2;
inline bool ShippingCPP::has_unlockendts() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ShippingCPP::set_has_unlockendts() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ShippingCPP::clear_has_unlockendts() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ShippingCPP::clear_unlockendts() {
  unlockendts_ = 0u;
  clear_has_unlockendts();
}
inline ::google::protobuf::uint32 ShippingCPP::unlockendts() const {
  // @@protoc_insertion_point(field_get:ProtoShipping.ShippingCPP.unlockEndts)
  return unlockendts_;
}
inline void ShippingCPP::set_unlockendts(::google::protobuf::uint32 value) {
  set_has_unlockendts();
  unlockendts_ = value;
  // @@protoc_insertion_point(field_set:ProtoShipping.ShippingCPP.unlockEndts)
}

// required uint32 arriveTs = 3;
inline bool ShippingCPP::has_arrivets() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ShippingCPP::set_has_arrivets() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ShippingCPP::clear_has_arrivets() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ShippingCPP::clear_arrivets() {
  arrivets_ = 0u;
  clear_has_arrivets();
}
inline ::google::protobuf::uint32 ShippingCPP::arrivets() const {
  // @@protoc_insertion_point(field_get:ProtoShipping.ShippingCPP.arriveTs)
  return arrivets_;
}
inline void ShippingCPP::set_arrivets(::google::protobuf::uint32 value) {
  set_has_arrivets();
  arrivets_ = value;
  // @@protoc_insertion_point(field_set:ProtoShipping.ShippingCPP.arriveTs)
}

// required uint32 publicAidTimes = 4;
inline bool ShippingCPP::has_publicaidtimes() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ShippingCPP::set_has_publicaidtimes() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ShippingCPP::clear_has_publicaidtimes() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ShippingCPP::clear_publicaidtimes() {
  publicaidtimes_ = 0u;
  clear_has_publicaidtimes();
}
inline ::google::protobuf::uint32 ShippingCPP::publicaidtimes() const {
  // @@protoc_insertion_point(field_get:ProtoShipping.ShippingCPP.publicAidTimes)
  return publicaidtimes_;
}
inline void ShippingCPP::set_publicaidtimes(::google::protobuf::uint32 value) {
  set_has_publicaidtimes();
  publicaidtimes_ = value;
  // @@protoc_insertion_point(field_set:ProtoShipping.ShippingCPP.publicAidTimes)
}

// required uint32 commercialAidTimes = 5;
inline bool ShippingCPP::has_commercialaidtimes() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ShippingCPP::set_has_commercialaidtimes() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ShippingCPP::clear_has_commercialaidtimes() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ShippingCPP::clear_commercialaidtimes() {
  commercialaidtimes_ = 0u;
  clear_has_commercialaidtimes();
}
inline ::google::protobuf::uint32 ShippingCPP::commercialaidtimes() const {
  // @@protoc_insertion_point(field_get:ProtoShipping.ShippingCPP.commercialAidTimes)
  return commercialaidtimes_;
}
inline void ShippingCPP::set_commercialaidtimes(::google::protobuf::uint32 value) {
  set_has_commercialaidtimes();
  commercialaidtimes_ = value;
  // @@protoc_insertion_point(field_set:ProtoShipping.ShippingCPP.commercialAidTimes)
}

// required uint32 status = 6;
inline bool ShippingCPP::has_status() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ShippingCPP::set_has_status() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ShippingCPP::clear_has_status() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ShippingCPP::clear_status() {
  status_ = 0u;
  clear_has_status();
}
inline ::google::protobuf::uint32 ShippingCPP::status() const {
  // @@protoc_insertion_point(field_get:ProtoShipping.ShippingCPP.status)
  return status_;
}
inline void ShippingCPP::set_status(::google::protobuf::uint32 value) {
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:ProtoShipping.ShippingCPP.status)
}

// required uint32 playStatus = 7;
inline bool ShippingCPP::has_playstatus() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void ShippingCPP::set_has_playstatus() {
  _has_bits_[0] |= 0x00000040u;
}
inline void ShippingCPP::clear_has_playstatus() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void ShippingCPP::clear_playstatus() {
  playstatus_ = 0u;
  clear_has_playstatus();
}
inline ::google::protobuf::uint32 ShippingCPP::playstatus() const {
  // @@protoc_insertion_point(field_get:ProtoShipping.ShippingCPP.playStatus)
  return playstatus_;
}
inline void ShippingCPP::set_playstatus(::google::protobuf::uint32 value) {
  set_has_playstatus();
  playstatus_ = value;
  // @@protoc_insertion_point(field_set:ProtoShipping.ShippingCPP.playStatus)
}

// optional uint32 viewAdPackCnt = 8;
inline bool ShippingCPP::has_viewadpackcnt() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void ShippingCPP::set_has_viewadpackcnt() {
  _has_bits_[0] |= 0x00000080u;
}
inline void ShippingCPP::clear_has_viewadpackcnt() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void ShippingCPP::clear_viewadpackcnt() {
  viewadpackcnt_ = 0u;
  clear_has_viewadpackcnt();
}
inline ::google::protobuf::uint32 ShippingCPP::viewadpackcnt() const {
  // @@protoc_insertion_point(field_get:ProtoShipping.ShippingCPP.viewAdPackCnt)
  return viewadpackcnt_;
}
inline void ShippingCPP::set_viewadpackcnt(::google::protobuf::uint32 value) {
  set_has_viewadpackcnt();
  viewadpackcnt_ = value;
  // @@protoc_insertion_point(field_set:ProtoShipping.ShippingCPP.viewAdPackCnt)
}

// -------------------------------------------------------------------

// ShippingBoxCPP

// required uint32 boxid = 1;
inline bool ShippingBoxCPP::has_boxid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ShippingBoxCPP::set_has_boxid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ShippingBoxCPP::clear_has_boxid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ShippingBoxCPP::clear_boxid() {
  boxid_ = 0u;
  clear_has_boxid();
}
inline ::google::protobuf::uint32 ShippingBoxCPP::boxid() const {
  // @@protoc_insertion_point(field_get:ProtoShipping.ShippingBoxCPP.boxid)
  return boxid_;
}
inline void ShippingBoxCPP::set_boxid(::google::protobuf::uint32 value) {
  set_has_boxid();
  boxid_ = value;
  // @@protoc_insertion_point(field_set:ProtoShipping.ShippingBoxCPP.boxid)
}

// required uint32 propsid = 2;
inline bool ShippingBoxCPP::has_propsid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ShippingBoxCPP::set_has_propsid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ShippingBoxCPP::clear_has_propsid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ShippingBoxCPP::clear_propsid() {
  propsid_ = 0u;
  clear_has_propsid();
}
inline ::google::protobuf::uint32 ShippingBoxCPP::propsid() const {
  // @@protoc_insertion_point(field_get:ProtoShipping.ShippingBoxCPP.propsid)
  return propsid_;
}
inline void ShippingBoxCPP::set_propsid(::google::protobuf::uint32 value) {
  set_has_propsid();
  propsid_ = value;
  // @@protoc_insertion_point(field_set:ProtoShipping.ShippingBoxCPP.propsid)
}

// required uint32 count = 3;
inline bool ShippingBoxCPP::has_count() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ShippingBoxCPP::set_has_count() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ShippingBoxCPP::clear_has_count() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ShippingBoxCPP::clear_count() {
  count_ = 0u;
  clear_has_count();
}
inline ::google::protobuf::uint32 ShippingBoxCPP::count() const {
  // @@protoc_insertion_point(field_get:ProtoShipping.ShippingBoxCPP.count)
  return count_;
}
inline void ShippingBoxCPP::set_count(::google::protobuf::uint32 value) {
  set_has_count();
  count_ = value;
  // @@protoc_insertion_point(field_set:ProtoShipping.ShippingBoxCPP.count)
}

// required uint32 aidStatus = 4;
inline bool ShippingBoxCPP::has_aidstatus() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ShippingBoxCPP::set_has_aidstatus() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ShippingBoxCPP::clear_has_aidstatus() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ShippingBoxCPP::clear_aidstatus() {
  aidstatus_ = 0u;
  clear_has_aidstatus();
}
inline ::google::protobuf::uint32 ShippingBoxCPP::aidstatus() const {
  // @@protoc_insertion_point(field_get:ProtoShipping.ShippingBoxCPP.aidStatus)
  return aidstatus_;
}
inline void ShippingBoxCPP::set_aidstatus(::google::protobuf::uint32 value) {
  set_has_aidstatus();
  aidstatus_ = value;
  // @@protoc_insertion_point(field_set:ProtoShipping.ShippingBoxCPP.aidStatus)
}

// required uint32 status = 5;
inline bool ShippingBoxCPP::has_status() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ShippingBoxCPP::set_has_status() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ShippingBoxCPP::clear_has_status() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ShippingBoxCPP::clear_status() {
  status_ = 0u;
  clear_has_status();
}
inline ::google::protobuf::uint32 ShippingBoxCPP::status() const {
  // @@protoc_insertion_point(field_get:ProtoShipping.ShippingBoxCPP.status)
  return status_;
}
inline void ShippingBoxCPP::set_status(::google::protobuf::uint32 value) {
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:ProtoShipping.ShippingBoxCPP.status)
}

// required uint32 coin = 6;
inline bool ShippingBoxCPP::has_coin() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ShippingBoxCPP::set_has_coin() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ShippingBoxCPP::clear_has_coin() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ShippingBoxCPP::clear_coin() {
  coin_ = 0u;
  clear_has_coin();
}
inline ::google::protobuf::uint32 ShippingBoxCPP::coin() const {
  // @@protoc_insertion_point(field_get:ProtoShipping.ShippingBoxCPP.coin)
  return coin_;
}
inline void ShippingBoxCPP::set_coin(::google::protobuf::uint32 value) {
  set_has_coin();
  coin_ = value;
  // @@protoc_insertion_point(field_set:ProtoShipping.ShippingBoxCPP.coin)
}

// required uint32 exp = 7;
inline bool ShippingBoxCPP::has_exp() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void ShippingBoxCPP::set_has_exp() {
  _has_bits_[0] |= 0x00000040u;
}
inline void ShippingBoxCPP::clear_has_exp() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void ShippingBoxCPP::clear_exp() {
  exp_ = 0u;
  clear_has_exp();
}
inline ::google::protobuf::uint32 ShippingBoxCPP::exp() const {
  // @@protoc_insertion_point(field_get:ProtoShipping.ShippingBoxCPP.exp)
  return exp_;
}
inline void ShippingBoxCPP::set_exp(::google::protobuf::uint32 value) {
  set_has_exp();
  exp_ = value;
  // @@protoc_insertion_point(field_set:ProtoShipping.ShippingBoxCPP.exp)
}

// optional bytes fig = 8;
inline bool ShippingBoxCPP::has_fig() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void ShippingBoxCPP::set_has_fig() {
  _has_bits_[0] |= 0x00000080u;
}
inline void ShippingBoxCPP::clear_has_fig() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void ShippingBoxCPP::clear_fig() {
  if (fig_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    fig_->clear();
  }
  clear_has_fig();
}
inline const ::std::string& ShippingBoxCPP::fig() const {
  // @@protoc_insertion_point(field_get:ProtoShipping.ShippingBoxCPP.fig)
  return *fig_;
}
inline void ShippingBoxCPP::set_fig(const ::std::string& value) {
  set_has_fig();
  if (fig_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    fig_ = new ::std::string;
  }
  fig_->assign(value);
  // @@protoc_insertion_point(field_set:ProtoShipping.ShippingBoxCPP.fig)
}
inline void ShippingBoxCPP::set_fig(const char* value) {
  set_has_fig();
  if (fig_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    fig_ = new ::std::string;
  }
  fig_->assign(value);
  // @@protoc_insertion_point(field_set_char:ProtoShipping.ShippingBoxCPP.fig)
}
inline void ShippingBoxCPP::set_fig(const void* value, size_t size) {
  set_has_fig();
  if (fig_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    fig_ = new ::std::string;
  }
  fig_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ProtoShipping.ShippingBoxCPP.fig)
}
inline ::std::string* ShippingBoxCPP::mutable_fig() {
  set_has_fig();
  if (fig_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    fig_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:ProtoShipping.ShippingBoxCPP.fig)
  return fig_;
}
inline ::std::string* ShippingBoxCPP::release_fig() {
  clear_has_fig();
  if (fig_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = fig_;
    fig_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void ShippingBoxCPP::set_allocated_fig(::std::string* fig) {
  if (fig_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete fig_;
  }
  if (fig) {
    set_has_fig();
    fig_ = fig;
  } else {
    clear_has_fig();
    fig_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoShipping.ShippingBoxCPP.fig)
}

// optional bytes name = 9;
inline bool ShippingBoxCPP::has_name() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void ShippingBoxCPP::set_has_name() {
  _has_bits_[0] |= 0x00000100u;
}
inline void ShippingBoxCPP::clear_has_name() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void ShippingBoxCPP::clear_name() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& ShippingBoxCPP::name() const {
  // @@protoc_insertion_point(field_get:ProtoShipping.ShippingBoxCPP.name)
  return *name_;
}
inline void ShippingBoxCPP::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set:ProtoShipping.ShippingBoxCPP.name)
}
inline void ShippingBoxCPP::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set_char:ProtoShipping.ShippingBoxCPP.name)
}
inline void ShippingBoxCPP::set_name(const void* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ProtoShipping.ShippingBoxCPP.name)
}
inline ::std::string* ShippingBoxCPP::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:ProtoShipping.ShippingBoxCPP.name)
  return name_;
}
inline ::std::string* ShippingBoxCPP::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void ShippingBoxCPP::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoShipping.ShippingBoxCPP.name)
}

// -------------------------------------------------------------------

// FullBoxShipCPP

// required uint32 propsid = 1;
inline bool FullBoxShipCPP::has_propsid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FullBoxShipCPP::set_has_propsid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FullBoxShipCPP::clear_has_propsid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FullBoxShipCPP::clear_propsid() {
  propsid_ = 0u;
  clear_has_propsid();
}
inline ::google::protobuf::uint32 FullBoxShipCPP::propsid() const {
  // @@protoc_insertion_point(field_get:ProtoShipping.FullBoxShipCPP.propsid)
  return propsid_;
}
inline void FullBoxShipCPP::set_propsid(::google::protobuf::uint32 value) {
  set_has_propsid();
  propsid_ = value;
  // @@protoc_insertion_point(field_set:ProtoShipping.FullBoxShipCPP.propsid)
}

// required uint32 propscnt = 2;
inline bool FullBoxShipCPP::has_propscnt() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FullBoxShipCPP::set_has_propscnt() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FullBoxShipCPP::clear_has_propscnt() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FullBoxShipCPP::clear_propscnt() {
  propscnt_ = 0u;
  clear_has_propscnt();
}
inline ::google::protobuf::uint32 FullBoxShipCPP::propscnt() const {
  // @@protoc_insertion_point(field_get:ProtoShipping.FullBoxShipCPP.propscnt)
  return propscnt_;
}
inline void FullBoxShipCPP::set_propscnt(::google::protobuf::uint32 value) {
  set_has_propscnt();
  propscnt_ = value;
  // @@protoc_insertion_point(field_set:ProtoShipping.FullBoxShipCPP.propscnt)
}

// -------------------------------------------------------------------

// UnlockDockReq

// -------------------------------------------------------------------

// UnlockDockResp

// required .ProtoShipping.ShippingCPP shipping = 1;
inline bool UnlockDockResp::has_shipping() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UnlockDockResp::set_has_shipping() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UnlockDockResp::clear_has_shipping() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UnlockDockResp::clear_shipping() {
  if (shipping_ != NULL) shipping_->::ProtoShipping::ShippingCPP::Clear();
  clear_has_shipping();
}
inline const ::ProtoShipping::ShippingCPP& UnlockDockResp::shipping() const {
  // @@protoc_insertion_point(field_get:ProtoShipping.UnlockDockResp.shipping)
  return shipping_ != NULL ? *shipping_ : *default_instance_->shipping_;
}
inline ::ProtoShipping::ShippingCPP* UnlockDockResp::mutable_shipping() {
  set_has_shipping();
  if (shipping_ == NULL) shipping_ = new ::ProtoShipping::ShippingCPP;
  // @@protoc_insertion_point(field_mutable:ProtoShipping.UnlockDockResp.shipping)
  return shipping_;
}
inline ::ProtoShipping::ShippingCPP* UnlockDockResp::release_shipping() {
  clear_has_shipping();
  ::ProtoShipping::ShippingCPP* temp = shipping_;
  shipping_ = NULL;
  return temp;
}
inline void UnlockDockResp::set_allocated_shipping(::ProtoShipping::ShippingCPP* shipping) {
  delete shipping_;
  shipping_ = shipping;
  if (shipping) {
    set_has_shipping();
  } else {
    clear_has_shipping();
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoShipping.UnlockDockResp.shipping)
}

// required .DataCommon.CommonItemsCPP commons = 2;
inline bool UnlockDockResp::has_commons() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UnlockDockResp::set_has_commons() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UnlockDockResp::clear_has_commons() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UnlockDockResp::clear_commons() {
  if (commons_ != NULL) commons_->::DataCommon::CommonItemsCPP::Clear();
  clear_has_commons();
}
inline const ::DataCommon::CommonItemsCPP& UnlockDockResp::commons() const {
  // @@protoc_insertion_point(field_get:ProtoShipping.UnlockDockResp.commons)
  return commons_ != NULL ? *commons_ : *default_instance_->commons_;
}
inline ::DataCommon::CommonItemsCPP* UnlockDockResp::mutable_commons() {
  set_has_commons();
  if (commons_ == NULL) commons_ = new ::DataCommon::CommonItemsCPP;
  // @@protoc_insertion_point(field_mutable:ProtoShipping.UnlockDockResp.commons)
  return commons_;
}
inline ::DataCommon::CommonItemsCPP* UnlockDockResp::release_commons() {
  clear_has_commons();
  ::DataCommon::CommonItemsCPP* temp = commons_;
  commons_ = NULL;
  return temp;
}
inline void UnlockDockResp::set_allocated_commons(::DataCommon::CommonItemsCPP* commons) {
  delete commons_;
  commons_ = commons;
  if (commons) {
    set_has_commons();
  } else {
    clear_has_commons();
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoShipping.UnlockDockResp.commons)
}

// -------------------------------------------------------------------

// UnveilDockReq

// -------------------------------------------------------------------

// UnveilDockResp

// required .ProtoShipping.ShippingCPP shipping = 1;
inline bool UnveilDockResp::has_shipping() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UnveilDockResp::set_has_shipping() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UnveilDockResp::clear_has_shipping() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UnveilDockResp::clear_shipping() {
  if (shipping_ != NULL) shipping_->::ProtoShipping::ShippingCPP::Clear();
  clear_has_shipping();
}
inline const ::ProtoShipping::ShippingCPP& UnveilDockResp::shipping() const {
  // @@protoc_insertion_point(field_get:ProtoShipping.UnveilDockResp.shipping)
  return shipping_ != NULL ? *shipping_ : *default_instance_->shipping_;
}
inline ::ProtoShipping::ShippingCPP* UnveilDockResp::mutable_shipping() {
  set_has_shipping();
  if (shipping_ == NULL) shipping_ = new ::ProtoShipping::ShippingCPP;
  // @@protoc_insertion_point(field_mutable:ProtoShipping.UnveilDockResp.shipping)
  return shipping_;
}
inline ::ProtoShipping::ShippingCPP* UnveilDockResp::release_shipping() {
  clear_has_shipping();
  ::ProtoShipping::ShippingCPP* temp = shipping_;
  shipping_ = NULL;
  return temp;
}
inline void UnveilDockResp::set_allocated_shipping(::ProtoShipping::ShippingCPP* shipping) {
  delete shipping_;
  shipping_ = shipping;
  if (shipping) {
    set_has_shipping();
  } else {
    clear_has_shipping();
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoShipping.UnveilDockResp.shipping)
}

// repeated .ProtoShipping.ShippingBoxCPP shipboxes = 2;
inline int UnveilDockResp::shipboxes_size() const {
  return shipboxes_.size();
}
inline void UnveilDockResp::clear_shipboxes() {
  shipboxes_.Clear();
}
inline const ::ProtoShipping::ShippingBoxCPP& UnveilDockResp::shipboxes(int index) const {
  // @@protoc_insertion_point(field_get:ProtoShipping.UnveilDockResp.shipboxes)
  return shipboxes_.Get(index);
}
inline ::ProtoShipping::ShippingBoxCPP* UnveilDockResp::mutable_shipboxes(int index) {
  // @@protoc_insertion_point(field_mutable:ProtoShipping.UnveilDockResp.shipboxes)
  return shipboxes_.Mutable(index);
}
inline ::ProtoShipping::ShippingBoxCPP* UnveilDockResp::add_shipboxes() {
  // @@protoc_insertion_point(field_add:ProtoShipping.UnveilDockResp.shipboxes)
  return shipboxes_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ProtoShipping::ShippingBoxCPP >&
UnveilDockResp::shipboxes() const {
  // @@protoc_insertion_point(field_list:ProtoShipping.UnveilDockResp.shipboxes)
  return shipboxes_;
}
inline ::google::protobuf::RepeatedPtrField< ::ProtoShipping::ShippingBoxCPP >*
UnveilDockResp::mutable_shipboxes() {
  // @@protoc_insertion_point(field_mutable_list:ProtoShipping.UnveilDockResp.shipboxes)
  return &shipboxes_;
}

// -------------------------------------------------------------------

// PackBoxReq

// required uint32 boxid = 1;
inline bool PackBoxReq::has_boxid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PackBoxReq::set_has_boxid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PackBoxReq::clear_has_boxid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PackBoxReq::clear_boxid() {
  boxid_ = 0u;
  clear_has_boxid();
}
inline ::google::protobuf::uint32 PackBoxReq::boxid() const {
  // @@protoc_insertion_point(field_get:ProtoShipping.PackBoxReq.boxid)
  return boxid_;
}
inline void PackBoxReq::set_boxid(::google::protobuf::uint32 value) {
  set_has_boxid();
  boxid_ = value;
  // @@protoc_insertion_point(field_set:ProtoShipping.PackBoxReq.boxid)
}

// required uint32 type = 2;
inline bool PackBoxReq::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PackBoxReq::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PackBoxReq::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PackBoxReq::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 PackBoxReq::type() const {
  // @@protoc_insertion_point(field_get:ProtoShipping.PackBoxReq.type)
  return type_;
}
inline void PackBoxReq::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:ProtoShipping.PackBoxReq.type)
}

// -------------------------------------------------------------------

// PackBoxResp

// optional .DataCommon.CommonItemsCPP commons = 1;
inline bool PackBoxResp::has_commons() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PackBoxResp::set_has_commons() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PackBoxResp::clear_has_commons() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PackBoxResp::clear_commons() {
  if (commons_ != NULL) commons_->::DataCommon::CommonItemsCPP::Clear();
  clear_has_commons();
}
inline const ::DataCommon::CommonItemsCPP& PackBoxResp::commons() const {
  // @@protoc_insertion_point(field_get:ProtoShipping.PackBoxResp.commons)
  return commons_ != NULL ? *commons_ : *default_instance_->commons_;
}
inline ::DataCommon::CommonItemsCPP* PackBoxResp::mutable_commons() {
  set_has_commons();
  if (commons_ == NULL) commons_ = new ::DataCommon::CommonItemsCPP;
  // @@protoc_insertion_point(field_mutable:ProtoShipping.PackBoxResp.commons)
  return commons_;
}
inline ::DataCommon::CommonItemsCPP* PackBoxResp::release_commons() {
  clear_has_commons();
  ::DataCommon::CommonItemsCPP* temp = commons_;
  commons_ = NULL;
  return temp;
}
inline void PackBoxResp::set_allocated_commons(::DataCommon::CommonItemsCPP* commons) {
  delete commons_;
  commons_ = commons;
  if (commons) {
    set_has_commons();
  } else {
    clear_has_commons();
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoShipping.PackBoxResp.commons)
}

// required .ProtoShipping.ShippingBoxCPP boxes = 2;
inline bool PackBoxResp::has_boxes() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PackBoxResp::set_has_boxes() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PackBoxResp::clear_has_boxes() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PackBoxResp::clear_boxes() {
  if (boxes_ != NULL) boxes_->::ProtoShipping::ShippingBoxCPP::Clear();
  clear_has_boxes();
}
inline const ::ProtoShipping::ShippingBoxCPP& PackBoxResp::boxes() const {
  // @@protoc_insertion_point(field_get:ProtoShipping.PackBoxResp.boxes)
  return boxes_ != NULL ? *boxes_ : *default_instance_->boxes_;
}
inline ::ProtoShipping::ShippingBoxCPP* PackBoxResp::mutable_boxes() {
  set_has_boxes();
  if (boxes_ == NULL) boxes_ = new ::ProtoShipping::ShippingBoxCPP;
  // @@protoc_insertion_point(field_mutable:ProtoShipping.PackBoxResp.boxes)
  return boxes_;
}
inline ::ProtoShipping::ShippingBoxCPP* PackBoxResp::release_boxes() {
  clear_has_boxes();
  ::ProtoShipping::ShippingBoxCPP* temp = boxes_;
  boxes_ = NULL;
  return temp;
}
inline void PackBoxResp::set_allocated_boxes(::ProtoShipping::ShippingBoxCPP* boxes) {
  delete boxes_;
  boxes_ = boxes;
  if (boxes) {
    set_has_boxes();
  } else {
    clear_has_boxes();
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoShipping.PackBoxResp.boxes)
}

// optional .ProtoShipping.FullBoxShipCPP point = 3;
inline bool PackBoxResp::has_point() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PackBoxResp::set_has_point() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PackBoxResp::clear_has_point() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PackBoxResp::clear_point() {
  if (point_ != NULL) point_->::ProtoShipping::FullBoxShipCPP::Clear();
  clear_has_point();
}
inline const ::ProtoShipping::FullBoxShipCPP& PackBoxResp::point() const {
  // @@protoc_insertion_point(field_get:ProtoShipping.PackBoxResp.point)
  return point_ != NULL ? *point_ : *default_instance_->point_;
}
inline ::ProtoShipping::FullBoxShipCPP* PackBoxResp::mutable_point() {
  set_has_point();
  if (point_ == NULL) point_ = new ::ProtoShipping::FullBoxShipCPP;
  // @@protoc_insertion_point(field_mutable:ProtoShipping.PackBoxResp.point)
  return point_;
}
inline ::ProtoShipping::FullBoxShipCPP* PackBoxResp::release_point() {
  clear_has_point();
  ::ProtoShipping::FullBoxShipCPP* temp = point_;
  point_ = NULL;
  return temp;
}
inline void PackBoxResp::set_allocated_point(::ProtoShipping::FullBoxShipCPP* point) {
  delete point_;
  point_ = point;
  if (point) {
    set_has_point();
  } else {
    clear_has_point();
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoShipping.PackBoxResp.point)
}

// optional uint32 viewAdPackCnt = 4;
inline bool PackBoxResp::has_viewadpackcnt() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PackBoxResp::set_has_viewadpackcnt() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PackBoxResp::clear_has_viewadpackcnt() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PackBoxResp::clear_viewadpackcnt() {
  viewadpackcnt_ = 0u;
  clear_has_viewadpackcnt();
}
inline ::google::protobuf::uint32 PackBoxResp::viewadpackcnt() const {
  // @@protoc_insertion_point(field_get:ProtoShipping.PackBoxResp.viewAdPackCnt)
  return viewadpackcnt_;
}
inline void PackBoxResp::set_viewadpackcnt(::google::protobuf::uint32 value) {
  set_has_viewadpackcnt();
  viewadpackcnt_ = value;
  // @@protoc_insertion_point(field_set:ProtoShipping.PackBoxResp.viewAdPackCnt)
}

// -------------------------------------------------------------------

// SeekAidReq

// required uint32 boxid = 1;
inline bool SeekAidReq::has_boxid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SeekAidReq::set_has_boxid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SeekAidReq::clear_has_boxid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SeekAidReq::clear_boxid() {
  boxid_ = 0u;
  clear_has_boxid();
}
inline ::google::protobuf::uint32 SeekAidReq::boxid() const {
  // @@protoc_insertion_point(field_get:ProtoShipping.SeekAidReq.boxid)
  return boxid_;
}
inline void SeekAidReq::set_boxid(::google::protobuf::uint32 value) {
  set_has_boxid();
  boxid_ = value;
  // @@protoc_insertion_point(field_set:ProtoShipping.SeekAidReq.boxid)
}

// required uint32 type = 2;
inline bool SeekAidReq::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SeekAidReq::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SeekAidReq::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SeekAidReq::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 SeekAidReq::type() const {
  // @@protoc_insertion_point(field_get:ProtoShipping.SeekAidReq.type)
  return type_;
}
inline void SeekAidReq::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:ProtoShipping.SeekAidReq.type)
}

// -------------------------------------------------------------------

// SeekAidResp

// required .ProtoShipping.ShippingCPP shipping = 1;
inline bool SeekAidResp::has_shipping() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SeekAidResp::set_has_shipping() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SeekAidResp::clear_has_shipping() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SeekAidResp::clear_shipping() {
  if (shipping_ != NULL) shipping_->::ProtoShipping::ShippingCPP::Clear();
  clear_has_shipping();
}
inline const ::ProtoShipping::ShippingCPP& SeekAidResp::shipping() const {
  // @@protoc_insertion_point(field_get:ProtoShipping.SeekAidResp.shipping)
  return shipping_ != NULL ? *shipping_ : *default_instance_->shipping_;
}
inline ::ProtoShipping::ShippingCPP* SeekAidResp::mutable_shipping() {
  set_has_shipping();
  if (shipping_ == NULL) shipping_ = new ::ProtoShipping::ShippingCPP;
  // @@protoc_insertion_point(field_mutable:ProtoShipping.SeekAidResp.shipping)
  return shipping_;
}
inline ::ProtoShipping::ShippingCPP* SeekAidResp::release_shipping() {
  clear_has_shipping();
  ::ProtoShipping::ShippingCPP* temp = shipping_;
  shipping_ = NULL;
  return temp;
}
inline void SeekAidResp::set_allocated_shipping(::ProtoShipping::ShippingCPP* shipping) {
  delete shipping_;
  shipping_ = shipping;
  if (shipping) {
    set_has_shipping();
  } else {
    clear_has_shipping();
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoShipping.SeekAidResp.shipping)
}

// required .ProtoShipping.ShippingBoxCPP boxes = 2;
inline bool SeekAidResp::has_boxes() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SeekAidResp::set_has_boxes() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SeekAidResp::clear_has_boxes() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SeekAidResp::clear_boxes() {
  if (boxes_ != NULL) boxes_->::ProtoShipping::ShippingBoxCPP::Clear();
  clear_has_boxes();
}
inline const ::ProtoShipping::ShippingBoxCPP& SeekAidResp::boxes() const {
  // @@protoc_insertion_point(field_get:ProtoShipping.SeekAidResp.boxes)
  return boxes_ != NULL ? *boxes_ : *default_instance_->boxes_;
}
inline ::ProtoShipping::ShippingBoxCPP* SeekAidResp::mutable_boxes() {
  set_has_boxes();
  if (boxes_ == NULL) boxes_ = new ::ProtoShipping::ShippingBoxCPP;
  // @@protoc_insertion_point(field_mutable:ProtoShipping.SeekAidResp.boxes)
  return boxes_;
}
inline ::ProtoShipping::ShippingBoxCPP* SeekAidResp::release_boxes() {
  clear_has_boxes();
  ::ProtoShipping::ShippingBoxCPP* temp = boxes_;
  boxes_ = NULL;
  return temp;
}
inline void SeekAidResp::set_allocated_boxes(::ProtoShipping::ShippingBoxCPP* boxes) {
  delete boxes_;
  boxes_ = boxes;
  if (boxes) {
    set_has_boxes();
  } else {
    clear_has_boxes();
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoShipping.SeekAidResp.boxes)
}

// -------------------------------------------------------------------

// OfferAidReq

// required uint32 othuid = 1;
inline bool OfferAidReq::has_othuid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OfferAidReq::set_has_othuid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void OfferAidReq::clear_has_othuid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void OfferAidReq::clear_othuid() {
  othuid_ = 0u;
  clear_has_othuid();
}
inline ::google::protobuf::uint32 OfferAidReq::othuid() const {
  // @@protoc_insertion_point(field_get:ProtoShipping.OfferAidReq.othuid)
  return othuid_;
}
inline void OfferAidReq::set_othuid(::google::protobuf::uint32 value) {
  set_has_othuid();
  othuid_ = value;
  // @@protoc_insertion_point(field_set:ProtoShipping.OfferAidReq.othuid)
}

// required uint32 boxid = 2;
inline bool OfferAidReq::has_boxid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void OfferAidReq::set_has_boxid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void OfferAidReq::clear_has_boxid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void OfferAidReq::clear_boxid() {
  boxid_ = 0u;
  clear_has_boxid();
}
inline ::google::protobuf::uint32 OfferAidReq::boxid() const {
  // @@protoc_insertion_point(field_get:ProtoShipping.OfferAidReq.boxid)
  return boxid_;
}
inline void OfferAidReq::set_boxid(::google::protobuf::uint32 value) {
  set_has_boxid();
  boxid_ = value;
  // @@protoc_insertion_point(field_set:ProtoShipping.OfferAidReq.boxid)
}

// required uint32 propsid = 3;
inline bool OfferAidReq::has_propsid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void OfferAidReq::set_has_propsid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void OfferAidReq::clear_has_propsid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void OfferAidReq::clear_propsid() {
  propsid_ = 0u;
  clear_has_propsid();
}
inline ::google::protobuf::uint32 OfferAidReq::propsid() const {
  // @@protoc_insertion_point(field_get:ProtoShipping.OfferAidReq.propsid)
  return propsid_;
}
inline void OfferAidReq::set_propsid(::google::protobuf::uint32 value) {
  set_has_propsid();
  propsid_ = value;
  // @@protoc_insertion_point(field_set:ProtoShipping.OfferAidReq.propsid)
}

// required uint32 propscnt = 4;
inline bool OfferAidReq::has_propscnt() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void OfferAidReq::set_has_propscnt() {
  _has_bits_[0] |= 0x00000008u;
}
inline void OfferAidReq::clear_has_propscnt() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void OfferAidReq::clear_propscnt() {
  propscnt_ = 0u;
  clear_has_propscnt();
}
inline ::google::protobuf::uint32 OfferAidReq::propscnt() const {
  // @@protoc_insertion_point(field_get:ProtoShipping.OfferAidReq.propscnt)
  return propscnt_;
}
inline void OfferAidReq::set_propscnt(::google::protobuf::uint32 value) {
  set_has_propscnt();
  propscnt_ = value;
  // @@protoc_insertion_point(field_set:ProtoShipping.OfferAidReq.propscnt)
}

// required uint32 coin = 5;
inline bool OfferAidReq::has_coin() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void OfferAidReq::set_has_coin() {
  _has_bits_[0] |= 0x00000010u;
}
inline void OfferAidReq::clear_has_coin() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void OfferAidReq::clear_coin() {
  coin_ = 0u;
  clear_has_coin();
}
inline ::google::protobuf::uint32 OfferAidReq::coin() const {
  // @@protoc_insertion_point(field_get:ProtoShipping.OfferAidReq.coin)
  return coin_;
}
inline void OfferAidReq::set_coin(::google::protobuf::uint32 value) {
  set_has_coin();
  coin_ = value;
  // @@protoc_insertion_point(field_set:ProtoShipping.OfferAidReq.coin)
}

// required uint32 exp = 6;
inline bool OfferAidReq::has_exp() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void OfferAidReq::set_has_exp() {
  _has_bits_[0] |= 0x00000020u;
}
inline void OfferAidReq::clear_has_exp() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void OfferAidReq::clear_exp() {
  exp_ = 0u;
  clear_has_exp();
}
inline ::google::protobuf::uint32 OfferAidReq::exp() const {
  // @@protoc_insertion_point(field_get:ProtoShipping.OfferAidReq.exp)
  return exp_;
}
inline void OfferAidReq::set_exp(::google::protobuf::uint32 value) {
  set_has_exp();
  exp_ = value;
  // @@protoc_insertion_point(field_set:ProtoShipping.OfferAidReq.exp)
}

// -------------------------------------------------------------------

// OfferAidResp

// required .DataCommon.CommonItemsCPP commons = 1;
inline bool OfferAidResp::has_commons() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OfferAidResp::set_has_commons() {
  _has_bits_[0] |= 0x00000001u;
}
inline void OfferAidResp::clear_has_commons() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void OfferAidResp::clear_commons() {
  if (commons_ != NULL) commons_->::DataCommon::CommonItemsCPP::Clear();
  clear_has_commons();
}
inline const ::DataCommon::CommonItemsCPP& OfferAidResp::commons() const {
  // @@protoc_insertion_point(field_get:ProtoShipping.OfferAidResp.commons)
  return commons_ != NULL ? *commons_ : *default_instance_->commons_;
}
inline ::DataCommon::CommonItemsCPP* OfferAidResp::mutable_commons() {
  set_has_commons();
  if (commons_ == NULL) commons_ = new ::DataCommon::CommonItemsCPP;
  // @@protoc_insertion_point(field_mutable:ProtoShipping.OfferAidResp.commons)
  return commons_;
}
inline ::DataCommon::CommonItemsCPP* OfferAidResp::release_commons() {
  clear_has_commons();
  ::DataCommon::CommonItemsCPP* temp = commons_;
  commons_ = NULL;
  return temp;
}
inline void OfferAidResp::set_allocated_commons(::DataCommon::CommonItemsCPP* commons) {
  delete commons_;
  commons_ = commons;
  if (commons) {
    set_has_commons();
  } else {
    clear_has_commons();
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoShipping.OfferAidResp.commons)
}

// required .ProtoShipping.ShippingCPP selfshipping = 2;
inline bool OfferAidResp::has_selfshipping() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void OfferAidResp::set_has_selfshipping() {
  _has_bits_[0] |= 0x00000002u;
}
inline void OfferAidResp::clear_has_selfshipping() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void OfferAidResp::clear_selfshipping() {
  if (selfshipping_ != NULL) selfshipping_->::ProtoShipping::ShippingCPP::Clear();
  clear_has_selfshipping();
}
inline const ::ProtoShipping::ShippingCPP& OfferAidResp::selfshipping() const {
  // @@protoc_insertion_point(field_get:ProtoShipping.OfferAidResp.selfshipping)
  return selfshipping_ != NULL ? *selfshipping_ : *default_instance_->selfshipping_;
}
inline ::ProtoShipping::ShippingCPP* OfferAidResp::mutable_selfshipping() {
  set_has_selfshipping();
  if (selfshipping_ == NULL) selfshipping_ = new ::ProtoShipping::ShippingCPP;
  // @@protoc_insertion_point(field_mutable:ProtoShipping.OfferAidResp.selfshipping)
  return selfshipping_;
}
inline ::ProtoShipping::ShippingCPP* OfferAidResp::release_selfshipping() {
  clear_has_selfshipping();
  ::ProtoShipping::ShippingCPP* temp = selfshipping_;
  selfshipping_ = NULL;
  return temp;
}
inline void OfferAidResp::set_allocated_selfshipping(::ProtoShipping::ShippingCPP* selfshipping) {
  delete selfshipping_;
  selfshipping_ = selfshipping;
  if (selfshipping) {
    set_has_selfshipping();
  } else {
    clear_has_selfshipping();
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoShipping.OfferAidResp.selfshipping)
}

// optional .ProtoShipping.ShippingBoxCPP othboxes = 3;
inline bool OfferAidResp::has_othboxes() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void OfferAidResp::set_has_othboxes() {
  _has_bits_[0] |= 0x00000004u;
}
inline void OfferAidResp::clear_has_othboxes() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void OfferAidResp::clear_othboxes() {
  if (othboxes_ != NULL) othboxes_->::ProtoShipping::ShippingBoxCPP::Clear();
  clear_has_othboxes();
}
inline const ::ProtoShipping::ShippingBoxCPP& OfferAidResp::othboxes() const {
  // @@protoc_insertion_point(field_get:ProtoShipping.OfferAidResp.othboxes)
  return othboxes_ != NULL ? *othboxes_ : *default_instance_->othboxes_;
}
inline ::ProtoShipping::ShippingBoxCPP* OfferAidResp::mutable_othboxes() {
  set_has_othboxes();
  if (othboxes_ == NULL) othboxes_ = new ::ProtoShipping::ShippingBoxCPP;
  // @@protoc_insertion_point(field_mutable:ProtoShipping.OfferAidResp.othboxes)
  return othboxes_;
}
inline ::ProtoShipping::ShippingBoxCPP* OfferAidResp::release_othboxes() {
  clear_has_othboxes();
  ::ProtoShipping::ShippingBoxCPP* temp = othboxes_;
  othboxes_ = NULL;
  return temp;
}
inline void OfferAidResp::set_allocated_othboxes(::ProtoShipping::ShippingBoxCPP* othboxes) {
  delete othboxes_;
  othboxes_ = othboxes;
  if (othboxes) {
    set_has_othboxes();
  } else {
    clear_has_othboxes();
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoShipping.OfferAidResp.othboxes)
}

// optional uint32 othboxid = 4;
inline bool OfferAidResp::has_othboxid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void OfferAidResp::set_has_othboxid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void OfferAidResp::clear_has_othboxid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void OfferAidResp::clear_othboxid() {
  othboxid_ = 0u;
  clear_has_othboxid();
}
inline ::google::protobuf::uint32 OfferAidResp::othboxid() const {
  // @@protoc_insertion_point(field_get:ProtoShipping.OfferAidResp.othboxid)
  return othboxid_;
}
inline void OfferAidResp::set_othboxid(::google::protobuf::uint32 value) {
  set_has_othboxid();
  othboxid_ = value;
  // @@protoc_insertion_point(field_set:ProtoShipping.OfferAidResp.othboxid)
}

// -------------------------------------------------------------------

// CSOfferAidReq

// required uint32 myuid = 1;
inline bool CSOfferAidReq::has_myuid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSOfferAidReq::set_has_myuid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSOfferAidReq::clear_has_myuid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSOfferAidReq::clear_myuid() {
  myuid_ = 0u;
  clear_has_myuid();
}
inline ::google::protobuf::uint32 CSOfferAidReq::myuid() const {
  // @@protoc_insertion_point(field_get:ProtoShipping.CSOfferAidReq.myuid)
  return myuid_;
}
inline void CSOfferAidReq::set_myuid(::google::protobuf::uint32 value) {
  set_has_myuid();
  myuid_ = value;
  // @@protoc_insertion_point(field_set:ProtoShipping.CSOfferAidReq.myuid)
}

// required uint32 othuid = 2;
inline bool CSOfferAidReq::has_othuid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSOfferAidReq::set_has_othuid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSOfferAidReq::clear_has_othuid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSOfferAidReq::clear_othuid() {
  othuid_ = 0u;
  clear_has_othuid();
}
inline ::google::protobuf::uint32 CSOfferAidReq::othuid() const {
  // @@protoc_insertion_point(field_get:ProtoShipping.CSOfferAidReq.othuid)
  return othuid_;
}
inline void CSOfferAidReq::set_othuid(::google::protobuf::uint32 value) {
  set_has_othuid();
  othuid_ = value;
  // @@protoc_insertion_point(field_set:ProtoShipping.CSOfferAidReq.othuid)
}

// required .ProtoShipping.ShippingBoxCPP box = 3;
inline bool CSOfferAidReq::has_box() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSOfferAidReq::set_has_box() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSOfferAidReq::clear_has_box() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSOfferAidReq::clear_box() {
  if (box_ != NULL) box_->::ProtoShipping::ShippingBoxCPP::Clear();
  clear_has_box();
}
inline const ::ProtoShipping::ShippingBoxCPP& CSOfferAidReq::box() const {
  // @@protoc_insertion_point(field_get:ProtoShipping.CSOfferAidReq.box)
  return box_ != NULL ? *box_ : *default_instance_->box_;
}
inline ::ProtoShipping::ShippingBoxCPP* CSOfferAidReq::mutable_box() {
  set_has_box();
  if (box_ == NULL) box_ = new ::ProtoShipping::ShippingBoxCPP;
  // @@protoc_insertion_point(field_mutable:ProtoShipping.CSOfferAidReq.box)
  return box_;
}
inline ::ProtoShipping::ShippingBoxCPP* CSOfferAidReq::release_box() {
  clear_has_box();
  ::ProtoShipping::ShippingBoxCPP* temp = box_;
  box_ = NULL;
  return temp;
}
inline void CSOfferAidReq::set_allocated_box(::ProtoShipping::ShippingBoxCPP* box) {
  delete box_;
  box_ = box;
  if (box) {
    set_has_box();
  } else {
    clear_has_box();
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoShipping.CSOfferAidReq.box)
}

// required uint32 myallianceid = 4;
inline bool CSOfferAidReq::has_myallianceid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CSOfferAidReq::set_has_myallianceid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CSOfferAidReq::clear_has_myallianceid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CSOfferAidReq::clear_myallianceid() {
  myallianceid_ = 0u;
  clear_has_myallianceid();
}
inline ::google::protobuf::uint32 CSOfferAidReq::myallianceid() const {
  // @@protoc_insertion_point(field_get:ProtoShipping.CSOfferAidReq.myallianceid)
  return myallianceid_;
}
inline void CSOfferAidReq::set_myallianceid(::google::protobuf::uint32 value) {
  set_has_myallianceid();
  myallianceid_ = value;
  // @@protoc_insertion_point(field_set:ProtoShipping.CSOfferAidReq.myallianceid)
}

// -------------------------------------------------------------------

// CSOfferAidResp

// required uint32 myuid = 1;
inline bool CSOfferAidResp::has_myuid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSOfferAidResp::set_has_myuid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSOfferAidResp::clear_has_myuid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSOfferAidResp::clear_myuid() {
  myuid_ = 0u;
  clear_has_myuid();
}
inline ::google::protobuf::uint32 CSOfferAidResp::myuid() const {
  // @@protoc_insertion_point(field_get:ProtoShipping.CSOfferAidResp.myuid)
  return myuid_;
}
inline void CSOfferAidResp::set_myuid(::google::protobuf::uint32 value) {
  set_has_myuid();
  myuid_ = value;
  // @@protoc_insertion_point(field_set:ProtoShipping.CSOfferAidResp.myuid)
}

// -------------------------------------------------------------------

// LeaveDockReq

// -------------------------------------------------------------------

// LeaveDockResp

// required .ProtoShipping.ShippingCPP shipping = 1;
inline bool LeaveDockResp::has_shipping() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LeaveDockResp::set_has_shipping() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LeaveDockResp::clear_has_shipping() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LeaveDockResp::clear_shipping() {
  if (shipping_ != NULL) shipping_->::ProtoShipping::ShippingCPP::Clear();
  clear_has_shipping();
}
inline const ::ProtoShipping::ShippingCPP& LeaveDockResp::shipping() const {
  // @@protoc_insertion_point(field_get:ProtoShipping.LeaveDockResp.shipping)
  return shipping_ != NULL ? *shipping_ : *default_instance_->shipping_;
}
inline ::ProtoShipping::ShippingCPP* LeaveDockResp::mutable_shipping() {
  set_has_shipping();
  if (shipping_ == NULL) shipping_ = new ::ProtoShipping::ShippingCPP;
  // @@protoc_insertion_point(field_mutable:ProtoShipping.LeaveDockResp.shipping)
  return shipping_;
}
inline ::ProtoShipping::ShippingCPP* LeaveDockResp::release_shipping() {
  clear_has_shipping();
  ::ProtoShipping::ShippingCPP* temp = shipping_;
  shipping_ = NULL;
  return temp;
}
inline void LeaveDockResp::set_allocated_shipping(::ProtoShipping::ShippingCPP* shipping) {
  delete shipping_;
  shipping_ = shipping;
  if (shipping) {
    set_has_shipping();
  } else {
    clear_has_shipping();
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoShipping.LeaveDockResp.shipping)
}

// repeated .ProtoShipping.ShippingBoxCPP shipboxes = 2;
inline int LeaveDockResp::shipboxes_size() const {
  return shipboxes_.size();
}
inline void LeaveDockResp::clear_shipboxes() {
  shipboxes_.Clear();
}
inline const ::ProtoShipping::ShippingBoxCPP& LeaveDockResp::shipboxes(int index) const {
  // @@protoc_insertion_point(field_get:ProtoShipping.LeaveDockResp.shipboxes)
  return shipboxes_.Get(index);
}
inline ::ProtoShipping::ShippingBoxCPP* LeaveDockResp::mutable_shipboxes(int index) {
  // @@protoc_insertion_point(field_mutable:ProtoShipping.LeaveDockResp.shipboxes)
  return shipboxes_.Mutable(index);
}
inline ::ProtoShipping::ShippingBoxCPP* LeaveDockResp::add_shipboxes() {
  // @@protoc_insertion_point(field_add:ProtoShipping.LeaveDockResp.shipboxes)
  return shipboxes_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ProtoShipping::ShippingBoxCPP >&
LeaveDockResp::shipboxes() const {
  // @@protoc_insertion_point(field_list:ProtoShipping.LeaveDockResp.shipboxes)
  return shipboxes_;
}
inline ::google::protobuf::RepeatedPtrField< ::ProtoShipping::ShippingBoxCPP >*
LeaveDockResp::mutable_shipboxes() {
  // @@protoc_insertion_point(field_mutable_list:ProtoShipping.LeaveDockResp.shipboxes)
  return &shipboxes_;
}

// required .DataCommon.CommonItemsCPP commons = 3;
inline bool LeaveDockResp::has_commons() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LeaveDockResp::set_has_commons() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LeaveDockResp::clear_has_commons() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LeaveDockResp::clear_commons() {
  if (commons_ != NULL) commons_->::DataCommon::CommonItemsCPP::Clear();
  clear_has_commons();
}
inline const ::DataCommon::CommonItemsCPP& LeaveDockResp::commons() const {
  // @@protoc_insertion_point(field_get:ProtoShipping.LeaveDockResp.commons)
  return commons_ != NULL ? *commons_ : *default_instance_->commons_;
}
inline ::DataCommon::CommonItemsCPP* LeaveDockResp::mutable_commons() {
  set_has_commons();
  if (commons_ == NULL) commons_ = new ::DataCommon::CommonItemsCPP;
  // @@protoc_insertion_point(field_mutable:ProtoShipping.LeaveDockResp.commons)
  return commons_;
}
inline ::DataCommon::CommonItemsCPP* LeaveDockResp::release_commons() {
  clear_has_commons();
  ::DataCommon::CommonItemsCPP* temp = commons_;
  commons_ = NULL;
  return temp;
}
inline void LeaveDockResp::set_allocated_commons(::DataCommon::CommonItemsCPP* commons) {
  delete commons_;
  commons_ = commons;
  if (commons) {
    set_has_commons();
  } else {
    clear_has_commons();
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoShipping.LeaveDockResp.commons)
}

// optional .ProtoShipping.ShipVIPBonusCPP vipshipbonus = 4;
inline bool LeaveDockResp::has_vipshipbonus() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void LeaveDockResp::set_has_vipshipbonus() {
  _has_bits_[0] |= 0x00000008u;
}
inline void LeaveDockResp::clear_has_vipshipbonus() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void LeaveDockResp::clear_vipshipbonus() {
  if (vipshipbonus_ != NULL) vipshipbonus_->::ProtoShipping::ShipVIPBonusCPP::Clear();
  clear_has_vipshipbonus();
}
inline const ::ProtoShipping::ShipVIPBonusCPP& LeaveDockResp::vipshipbonus() const {
  // @@protoc_insertion_point(field_get:ProtoShipping.LeaveDockResp.vipshipbonus)
  return vipshipbonus_ != NULL ? *vipshipbonus_ : *default_instance_->vipshipbonus_;
}
inline ::ProtoShipping::ShipVIPBonusCPP* LeaveDockResp::mutable_vipshipbonus() {
  set_has_vipshipbonus();
  if (vipshipbonus_ == NULL) vipshipbonus_ = new ::ProtoShipping::ShipVIPBonusCPP;
  // @@protoc_insertion_point(field_mutable:ProtoShipping.LeaveDockResp.vipshipbonus)
  return vipshipbonus_;
}
inline ::ProtoShipping::ShipVIPBonusCPP* LeaveDockResp::release_vipshipbonus() {
  clear_has_vipshipbonus();
  ::ProtoShipping::ShipVIPBonusCPP* temp = vipshipbonus_;
  vipshipbonus_ = NULL;
  return temp;
}
inline void LeaveDockResp::set_allocated_vipshipbonus(::ProtoShipping::ShipVIPBonusCPP* vipshipbonus) {
  delete vipshipbonus_;
  vipshipbonus_ = vipshipbonus;
  if (vipshipbonus) {
    set_has_vipshipbonus();
  } else {
    clear_has_vipshipbonus();
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoShipping.LeaveDockResp.vipshipbonus)
}

// -------------------------------------------------------------------

// SetPlayStatusReq

// -------------------------------------------------------------------

// SetPlayStatusResp

// required .ProtoShipping.ShippingCPP shipping = 1;
inline bool SetPlayStatusResp::has_shipping() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SetPlayStatusResp::set_has_shipping() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SetPlayStatusResp::clear_has_shipping() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SetPlayStatusResp::clear_shipping() {
  if (shipping_ != NULL) shipping_->::ProtoShipping::ShippingCPP::Clear();
  clear_has_shipping();
}
inline const ::ProtoShipping::ShippingCPP& SetPlayStatusResp::shipping() const {
  // @@protoc_insertion_point(field_get:ProtoShipping.SetPlayStatusResp.shipping)
  return shipping_ != NULL ? *shipping_ : *default_instance_->shipping_;
}
inline ::ProtoShipping::ShippingCPP* SetPlayStatusResp::mutable_shipping() {
  set_has_shipping();
  if (shipping_ == NULL) shipping_ = new ::ProtoShipping::ShippingCPP;
  // @@protoc_insertion_point(field_mutable:ProtoShipping.SetPlayStatusResp.shipping)
  return shipping_;
}
inline ::ProtoShipping::ShippingCPP* SetPlayStatusResp::release_shipping() {
  clear_has_shipping();
  ::ProtoShipping::ShippingCPP* temp = shipping_;
  shipping_ = NULL;
  return temp;
}
inline void SetPlayStatusResp::set_allocated_shipping(::ProtoShipping::ShippingCPP* shipping) {
  delete shipping_;
  shipping_ = shipping;
  if (shipping) {
    set_has_shipping();
  } else {
    clear_has_shipping();
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoShipping.SetPlayStatusResp.shipping)
}

// -------------------------------------------------------------------

// PushShipBox

// required .ProtoShipping.ShippingBoxCPP box = 1;
inline bool PushShipBox::has_box() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PushShipBox::set_has_box() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PushShipBox::clear_has_box() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PushShipBox::clear_box() {
  if (box_ != NULL) box_->::ProtoShipping::ShippingBoxCPP::Clear();
  clear_has_box();
}
inline const ::ProtoShipping::ShippingBoxCPP& PushShipBox::box() const {
  // @@protoc_insertion_point(field_get:ProtoShipping.PushShipBox.box)
  return box_ != NULL ? *box_ : *default_instance_->box_;
}
inline ::ProtoShipping::ShippingBoxCPP* PushShipBox::mutable_box() {
  set_has_box();
  if (box_ == NULL) box_ = new ::ProtoShipping::ShippingBoxCPP;
  // @@protoc_insertion_point(field_mutable:ProtoShipping.PushShipBox.box)
  return box_;
}
inline ::ProtoShipping::ShippingBoxCPP* PushShipBox::release_box() {
  clear_has_box();
  ::ProtoShipping::ShippingBoxCPP* temp = box_;
  box_ = NULL;
  return temp;
}
inline void PushShipBox::set_allocated_box(::ProtoShipping::ShippingBoxCPP* box) {
  delete box_;
  box_ = box;
  if (box) {
    set_has_box();
  } else {
    clear_has_box();
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoShipping.PushShipBox.box)
}

// -------------------------------------------------------------------

// ShipVIPBonusCPP

// required uint32 remaincnt = 1;
inline bool ShipVIPBonusCPP::has_remaincnt() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ShipVIPBonusCPP::set_has_remaincnt() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ShipVIPBonusCPP::clear_has_remaincnt() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ShipVIPBonusCPP::clear_remaincnt() {
  remaincnt_ = 0u;
  clear_has_remaincnt();
}
inline ::google::protobuf::uint32 ShipVIPBonusCPP::remaincnt() const {
  // @@protoc_insertion_point(field_get:ProtoShipping.ShipVIPBonusCPP.remaincnt)
  return remaincnt_;
}
inline void ShipVIPBonusCPP::set_remaincnt(::google::protobuf::uint32 value) {
  set_has_remaincnt();
  remaincnt_ = value;
  // @@protoc_insertion_point(field_set:ProtoShipping.ShipVIPBonusCPP.remaincnt)
}

// -------------------------------------------------------------------

// GetShipBonusInfoReq

// -------------------------------------------------------------------

// GetShipBonusInfoResp

// required .ProtoShipping.ShipVIPBonusCPP vipshipbonus = 1;
inline bool GetShipBonusInfoResp::has_vipshipbonus() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetShipBonusInfoResp::set_has_vipshipbonus() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetShipBonusInfoResp::clear_has_vipshipbonus() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetShipBonusInfoResp::clear_vipshipbonus() {
  if (vipshipbonus_ != NULL) vipshipbonus_->::ProtoShipping::ShipVIPBonusCPP::Clear();
  clear_has_vipshipbonus();
}
inline const ::ProtoShipping::ShipVIPBonusCPP& GetShipBonusInfoResp::vipshipbonus() const {
  // @@protoc_insertion_point(field_get:ProtoShipping.GetShipBonusInfoResp.vipshipbonus)
  return vipshipbonus_ != NULL ? *vipshipbonus_ : *default_instance_->vipshipbonus_;
}
inline ::ProtoShipping::ShipVIPBonusCPP* GetShipBonusInfoResp::mutable_vipshipbonus() {
  set_has_vipshipbonus();
  if (vipshipbonus_ == NULL) vipshipbonus_ = new ::ProtoShipping::ShipVIPBonusCPP;
  // @@protoc_insertion_point(field_mutable:ProtoShipping.GetShipBonusInfoResp.vipshipbonus)
  return vipshipbonus_;
}
inline ::ProtoShipping::ShipVIPBonusCPP* GetShipBonusInfoResp::release_vipshipbonus() {
  clear_has_vipshipbonus();
  ::ProtoShipping::ShipVIPBonusCPP* temp = vipshipbonus_;
  vipshipbonus_ = NULL;
  return temp;
}
inline void GetShipBonusInfoResp::set_allocated_vipshipbonus(::ProtoShipping::ShipVIPBonusCPP* vipshipbonus) {
  delete vipshipbonus_;
  vipshipbonus_ = vipshipbonus;
  if (vipshipbonus) {
    set_has_vipshipbonus();
  } else {
    clear_has_vipshipbonus();
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoShipping.GetShipBonusInfoResp.vipshipbonus)
}

// optional .ProtoShipping.FullBoxShipCPP point = 2;
inline bool GetShipBonusInfoResp::has_point() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetShipBonusInfoResp::set_has_point() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetShipBonusInfoResp::clear_has_point() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetShipBonusInfoResp::clear_point() {
  if (point_ != NULL) point_->::ProtoShipping::FullBoxShipCPP::Clear();
  clear_has_point();
}
inline const ::ProtoShipping::FullBoxShipCPP& GetShipBonusInfoResp::point() const {
  // @@protoc_insertion_point(field_get:ProtoShipping.GetShipBonusInfoResp.point)
  return point_ != NULL ? *point_ : *default_instance_->point_;
}
inline ::ProtoShipping::FullBoxShipCPP* GetShipBonusInfoResp::mutable_point() {
  set_has_point();
  if (point_ == NULL) point_ = new ::ProtoShipping::FullBoxShipCPP;
  // @@protoc_insertion_point(field_mutable:ProtoShipping.GetShipBonusInfoResp.point)
  return point_;
}
inline ::ProtoShipping::FullBoxShipCPP* GetShipBonusInfoResp::release_point() {
  clear_has_point();
  ::ProtoShipping::FullBoxShipCPP* temp = point_;
  point_ = NULL;
  return temp;
}
inline void GetShipBonusInfoResp::set_allocated_point(::ProtoShipping::FullBoxShipCPP* point) {
  delete point_;
  point_ = point;
  if (point) {
    set_has_point();
  } else {
    clear_has_point();
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoShipping.GetShipBonusInfoResp.point)
}

// -------------------------------------------------------------------

// PushShipBonusInfoMsg

// required .ProtoShipping.ShipVIPBonusCPP vipshipbonus = 1;
inline bool PushShipBonusInfoMsg::has_vipshipbonus() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PushShipBonusInfoMsg::set_has_vipshipbonus() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PushShipBonusInfoMsg::clear_has_vipshipbonus() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PushShipBonusInfoMsg::clear_vipshipbonus() {
  if (vipshipbonus_ != NULL) vipshipbonus_->::ProtoShipping::ShipVIPBonusCPP::Clear();
  clear_has_vipshipbonus();
}
inline const ::ProtoShipping::ShipVIPBonusCPP& PushShipBonusInfoMsg::vipshipbonus() const {
  // @@protoc_insertion_point(field_get:ProtoShipping.PushShipBonusInfoMsg.vipshipbonus)
  return vipshipbonus_ != NULL ? *vipshipbonus_ : *default_instance_->vipshipbonus_;
}
inline ::ProtoShipping::ShipVIPBonusCPP* PushShipBonusInfoMsg::mutable_vipshipbonus() {
  set_has_vipshipbonus();
  if (vipshipbonus_ == NULL) vipshipbonus_ = new ::ProtoShipping::ShipVIPBonusCPP;
  // @@protoc_insertion_point(field_mutable:ProtoShipping.PushShipBonusInfoMsg.vipshipbonus)
  return vipshipbonus_;
}
inline ::ProtoShipping::ShipVIPBonusCPP* PushShipBonusInfoMsg::release_vipshipbonus() {
  clear_has_vipshipbonus();
  ::ProtoShipping::ShipVIPBonusCPP* temp = vipshipbonus_;
  vipshipbonus_ = NULL;
  return temp;
}
inline void PushShipBonusInfoMsg::set_allocated_vipshipbonus(::ProtoShipping::ShipVIPBonusCPP* vipshipbonus) {
  delete vipshipbonus_;
  vipshipbonus_ = vipshipbonus;
  if (vipshipbonus) {
    set_has_vipshipbonus();
  } else {
    clear_has_vipshipbonus();
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoShipping.PushShipBonusInfoMsg.vipshipbonus)
}

// -------------------------------------------------------------------

// PushFullBoxShipMsg

// required .ProtoShipping.FullBoxShipCPP point = 1;
inline bool PushFullBoxShipMsg::has_point() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PushFullBoxShipMsg::set_has_point() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PushFullBoxShipMsg::clear_has_point() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PushFullBoxShipMsg::clear_point() {
  if (point_ != NULL) point_->::ProtoShipping::FullBoxShipCPP::Clear();
  clear_has_point();
}
inline const ::ProtoShipping::FullBoxShipCPP& PushFullBoxShipMsg::point() const {
  // @@protoc_insertion_point(field_get:ProtoShipping.PushFullBoxShipMsg.point)
  return point_ != NULL ? *point_ : *default_instance_->point_;
}
inline ::ProtoShipping::FullBoxShipCPP* PushFullBoxShipMsg::mutable_point() {
  set_has_point();
  if (point_ == NULL) point_ = new ::ProtoShipping::FullBoxShipCPP;
  // @@protoc_insertion_point(field_mutable:ProtoShipping.PushFullBoxShipMsg.point)
  return point_;
}
inline ::ProtoShipping::FullBoxShipCPP* PushFullBoxShipMsg::release_point() {
  clear_has_point();
  ::ProtoShipping::FullBoxShipCPP* temp = point_;
  point_ = NULL;
  return temp;
}
inline void PushFullBoxShipMsg::set_allocated_point(::ProtoShipping::FullBoxShipCPP* point) {
  delete point_;
  point_ = point;
  if (point) {
    set_has_point();
  } else {
    clear_has_point();
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoShipping.PushFullBoxShipMsg.point)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace ProtoShipping

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_ProtoShipping_2eproto__INCLUDED
