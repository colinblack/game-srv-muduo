// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ProtoBuilding.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "ProtoBuilding.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace ProtoBuilding {

namespace {

const ::google::protobuf::Descriptor* BuildingCPP_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BuildingCPP_reflection_ = NULL;
const ::google::protobuf::Descriptor* EquipmentStarCPP_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  EquipmentStarCPP_reflection_ = NULL;
const ::google::protobuf::Descriptor* BuildReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BuildReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* BuildResp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BuildResp_reflection_ = NULL;
const ::google::protobuf::Descriptor* UnveilBuildReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UnveilBuildReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* UnveilBuildResp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UnveilBuildResp_reflection_ = NULL;
const ::google::protobuf::Descriptor* MoveReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MoveReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* MoveResp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MoveResp_reflection_ = NULL;
const ::google::protobuf::Descriptor* FlipReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  FlipReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* FlipResp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  FlipResp_reflection_ = NULL;
const ::google::protobuf::Descriptor* BuildingUpReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BuildingUpReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* BuildingUpResp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BuildingUpResp_reflection_ = NULL;
const ::google::protobuf::Descriptor* UpgradeStarSpeedUpReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UpgradeStarSpeedUpReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* UpgradeStarSpeedUpResp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UpgradeStarSpeedUpResp_reflection_ = NULL;
const ::google::protobuf::Descriptor* RemoveBarrierReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RemoveBarrierReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* RemoveBarrierResp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RemoveBarrierResp_reflection_ = NULL;
const ::google::protobuf::Descriptor* SellDecorateReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SellDecorateReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* SellDecorateResq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SellDecorateResq_reflection_ = NULL;
const ::google::protobuf::Descriptor* ExpandMapReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ExpandMapReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* ExpandMapResp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ExpandMapResp_reflection_ = NULL;
const ::google::protobuf::Descriptor* ViewAdReduceBuildTimeReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ViewAdReduceBuildTimeReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* ViewAdReduceBuildTimeResp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ViewAdReduceBuildTimeResp_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetViewAdReduceBuildTimeReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetViewAdReduceBuildTimeReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetViewAdReduceBuildTimeResp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetViewAdReduceBuildTimeResp_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_ProtoBuilding_2eproto() {
  protobuf_AddDesc_ProtoBuilding_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "ProtoBuilding.proto");
  GOOGLE_CHECK(file != NULL);
  BuildingCPP_descriptor_ = file->message_type(0);
  static const int BuildingCPP_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuildingCPP, ud_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuildingCPP, buildid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuildingCPP, position_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuildingCPP, direct_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuildingCPP, donetime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuildingCPP, level_),
  };
  BuildingCPP_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      BuildingCPP_descriptor_,
      BuildingCPP::default_instance_,
      BuildingCPP_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuildingCPP, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuildingCPP, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(BuildingCPP));
  EquipmentStarCPP_descriptor_ = file->message_type(1);
  static const int EquipmentStarCPP_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EquipmentStarCPP, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EquipmentStarCPP, star_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EquipmentStarCPP, usedtime_),
  };
  EquipmentStarCPP_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      EquipmentStarCPP_descriptor_,
      EquipmentStarCPP::default_instance_,
      EquipmentStarCPP_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EquipmentStarCPP, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EquipmentStarCPP, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(EquipmentStarCPP));
  BuildReq_descriptor_ = file->message_type(2);
  static const int BuildReq_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuildReq, buildid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuildReq, pos_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuildReq, direct_),
  };
  BuildReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      BuildReq_descriptor_,
      BuildReq::default_instance_,
      BuildReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuildReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuildReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(BuildReq));
  BuildResp_descriptor_ = file->message_type(3);
  static const int BuildResp_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuildResp, building_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuildResp, commons_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuildResp, product_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuildResp, equipmentstar_),
  };
  BuildResp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      BuildResp_descriptor_,
      BuildResp::default_instance_,
      BuildResp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuildResp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuildResp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(BuildResp));
  UnveilBuildReq_descriptor_ = file->message_type(4);
  static const int UnveilBuildReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnveilBuildReq, ud_),
  };
  UnveilBuildReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      UnveilBuildReq_descriptor_,
      UnveilBuildReq::default_instance_,
      UnveilBuildReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnveilBuildReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnveilBuildReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(UnveilBuildReq));
  UnveilBuildResp_descriptor_ = file->message_type(5);
  static const int UnveilBuildResp_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnveilBuildResp, product_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnveilBuildResp, commons_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnveilBuildResp, building_),
  };
  UnveilBuildResp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      UnveilBuildResp_descriptor_,
      UnveilBuildResp::default_instance_,
      UnveilBuildResp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnveilBuildResp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnveilBuildResp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(UnveilBuildResp));
  MoveReq_descriptor_ = file->message_type(6);
  static const int MoveReq_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MoveReq, ud_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MoveReq, pos_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MoveReq, direct_),
  };
  MoveReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MoveReq_descriptor_,
      MoveReq::default_instance_,
      MoveReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MoveReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MoveReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MoveReq));
  MoveResp_descriptor_ = file->message_type(7);
  static const int MoveResp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MoveResp, result_),
  };
  MoveResp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MoveResp_descriptor_,
      MoveResp::default_instance_,
      MoveResp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MoveResp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MoveResp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MoveResp));
  FlipReq_descriptor_ = file->message_type(8);
  static const int FlipReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FlipReq, ud_),
  };
  FlipReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      FlipReq_descriptor_,
      FlipReq::default_instance_,
      FlipReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FlipReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FlipReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(FlipReq));
  FlipResp_descriptor_ = file->message_type(9);
  static const int FlipResp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FlipResp, result_),
  };
  FlipResp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      FlipResp_descriptor_,
      FlipResp::default_instance_,
      FlipResp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FlipResp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FlipResp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(FlipResp));
  BuildingUpReq_descriptor_ = file->message_type(10);
  static const int BuildingUpReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuildingUpReq, ud_),
  };
  BuildingUpReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      BuildingUpReq_descriptor_,
      BuildingUpReq::default_instance_,
      BuildingUpReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuildingUpReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuildingUpReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(BuildingUpReq));
  BuildingUpResp_descriptor_ = file->message_type(11);
  static const int BuildingUpResp_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuildingUpResp, commons_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuildingUpResp, build_),
  };
  BuildingUpResp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      BuildingUpResp_descriptor_,
      BuildingUpResp::default_instance_,
      BuildingUpResp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuildingUpResp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuildingUpResp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(BuildingUpResp));
  UpgradeStarSpeedUpReq_descriptor_ = file->message_type(12);
  static const int UpgradeStarSpeedUpReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpgradeStarSpeedUpReq, id_),
  };
  UpgradeStarSpeedUpReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      UpgradeStarSpeedUpReq_descriptor_,
      UpgradeStarSpeedUpReq::default_instance_,
      UpgradeStarSpeedUpReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpgradeStarSpeedUpReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpgradeStarSpeedUpReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(UpgradeStarSpeedUpReq));
  UpgradeStarSpeedUpResp_descriptor_ = file->message_type(13);
  static const int UpgradeStarSpeedUpResp_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpgradeStarSpeedUpResp, commons_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpgradeStarSpeedUpResp, equipmentstar_),
  };
  UpgradeStarSpeedUpResp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      UpgradeStarSpeedUpResp_descriptor_,
      UpgradeStarSpeedUpResp::default_instance_,
      UpgradeStarSpeedUpResp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpgradeStarSpeedUpResp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpgradeStarSpeedUpResp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(UpgradeStarSpeedUpResp));
  RemoveBarrierReq_descriptor_ = file->message_type(14);
  static const int RemoveBarrierReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RemoveBarrierReq, id_),
  };
  RemoveBarrierReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      RemoveBarrierReq_descriptor_,
      RemoveBarrierReq::default_instance_,
      RemoveBarrierReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RemoveBarrierReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RemoveBarrierReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(RemoveBarrierReq));
  RemoveBarrierResp_descriptor_ = file->message_type(15);
  static const int RemoveBarrierResp_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RemoveBarrierResp, commons_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RemoveBarrierResp, barrier_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RemoveBarrierResp, barrierid_),
  };
  RemoveBarrierResp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      RemoveBarrierResp_descriptor_,
      RemoveBarrierResp::default_instance_,
      RemoveBarrierResp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RemoveBarrierResp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RemoveBarrierResp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(RemoveBarrierResp));
  SellDecorateReq_descriptor_ = file->message_type(16);
  static const int SellDecorateReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SellDecorateReq, ud_),
  };
  SellDecorateReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      SellDecorateReq_descriptor_,
      SellDecorateReq::default_instance_,
      SellDecorateReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SellDecorateReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SellDecorateReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(SellDecorateReq));
  SellDecorateResq_descriptor_ = file->message_type(17);
  static const int SellDecorateResq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SellDecorateResq, commons_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SellDecorateResq, ud_),
  };
  SellDecorateResq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      SellDecorateResq_descriptor_,
      SellDecorateResq::default_instance_,
      SellDecorateResq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SellDecorateResq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SellDecorateResq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(SellDecorateResq));
  ExpandMapReq_descriptor_ = file->message_type(18);
  static const int ExpandMapReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExpandMapReq, id_),
  };
  ExpandMapReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ExpandMapReq_descriptor_,
      ExpandMapReq::default_instance_,
      ExpandMapReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExpandMapReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExpandMapReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ExpandMapReq));
  ExpandMapResp_descriptor_ = file->message_type(19);
  static const int ExpandMapResp_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExpandMapResp, commons_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExpandMapResp, mapstaus_),
  };
  ExpandMapResp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ExpandMapResp_descriptor_,
      ExpandMapResp::default_instance_,
      ExpandMapResp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExpandMapResp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExpandMapResp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ExpandMapResp));
  ViewAdReduceBuildTimeReq_descriptor_ = file->message_type(20);
  static const int ViewAdReduceBuildTimeReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ViewAdReduceBuildTimeReq, ud_),
  };
  ViewAdReduceBuildTimeReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ViewAdReduceBuildTimeReq_descriptor_,
      ViewAdReduceBuildTimeReq::default_instance_,
      ViewAdReduceBuildTimeReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ViewAdReduceBuildTimeReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ViewAdReduceBuildTimeReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ViewAdReduceBuildTimeReq));
  ViewAdReduceBuildTimeResp_descriptor_ = file->message_type(21);
  static const int ViewAdReduceBuildTimeResp_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ViewAdReduceBuildTimeResp, remaincnt_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ViewAdReduceBuildTimeResp, building_),
  };
  ViewAdReduceBuildTimeResp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ViewAdReduceBuildTimeResp_descriptor_,
      ViewAdReduceBuildTimeResp::default_instance_,
      ViewAdReduceBuildTimeResp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ViewAdReduceBuildTimeResp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ViewAdReduceBuildTimeResp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ViewAdReduceBuildTimeResp));
  GetViewAdReduceBuildTimeReq_descriptor_ = file->message_type(22);
  static const int GetViewAdReduceBuildTimeReq_offsets_[1] = {
  };
  GetViewAdReduceBuildTimeReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GetViewAdReduceBuildTimeReq_descriptor_,
      GetViewAdReduceBuildTimeReq::default_instance_,
      GetViewAdReduceBuildTimeReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetViewAdReduceBuildTimeReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetViewAdReduceBuildTimeReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GetViewAdReduceBuildTimeReq));
  GetViewAdReduceBuildTimeResp_descriptor_ = file->message_type(23);
  static const int GetViewAdReduceBuildTimeResp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetViewAdReduceBuildTimeResp, remaincnt_),
  };
  GetViewAdReduceBuildTimeResp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GetViewAdReduceBuildTimeResp_descriptor_,
      GetViewAdReduceBuildTimeResp::default_instance_,
      GetViewAdReduceBuildTimeResp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetViewAdReduceBuildTimeResp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetViewAdReduceBuildTimeResp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GetViewAdReduceBuildTimeResp));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_ProtoBuilding_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    BuildingCPP_descriptor_, &BuildingCPP::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    EquipmentStarCPP_descriptor_, &EquipmentStarCPP::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    BuildReq_descriptor_, &BuildReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    BuildResp_descriptor_, &BuildResp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    UnveilBuildReq_descriptor_, &UnveilBuildReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    UnveilBuildResp_descriptor_, &UnveilBuildResp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MoveReq_descriptor_, &MoveReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MoveResp_descriptor_, &MoveResp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    FlipReq_descriptor_, &FlipReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    FlipResp_descriptor_, &FlipResp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    BuildingUpReq_descriptor_, &BuildingUpReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    BuildingUpResp_descriptor_, &BuildingUpResp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    UpgradeStarSpeedUpReq_descriptor_, &UpgradeStarSpeedUpReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    UpgradeStarSpeedUpResp_descriptor_, &UpgradeStarSpeedUpResp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    RemoveBarrierReq_descriptor_, &RemoveBarrierReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    RemoveBarrierResp_descriptor_, &RemoveBarrierResp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    SellDecorateReq_descriptor_, &SellDecorateReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    SellDecorateResq_descriptor_, &SellDecorateResq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ExpandMapReq_descriptor_, &ExpandMapReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ExpandMapResp_descriptor_, &ExpandMapResp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ViewAdReduceBuildTimeReq_descriptor_, &ViewAdReduceBuildTimeReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ViewAdReduceBuildTimeResp_descriptor_, &ViewAdReduceBuildTimeResp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GetViewAdReduceBuildTimeReq_descriptor_, &GetViewAdReduceBuildTimeReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GetViewAdReduceBuildTimeResp_descriptor_, &GetViewAdReduceBuildTimeResp::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_ProtoBuilding_2eproto() {
  delete BuildingCPP::default_instance_;
  delete BuildingCPP_reflection_;
  delete EquipmentStarCPP::default_instance_;
  delete EquipmentStarCPP_reflection_;
  delete BuildReq::default_instance_;
  delete BuildReq_reflection_;
  delete BuildResp::default_instance_;
  delete BuildResp_reflection_;
  delete UnveilBuildReq::default_instance_;
  delete UnveilBuildReq_reflection_;
  delete UnveilBuildResp::default_instance_;
  delete UnveilBuildResp_reflection_;
  delete MoveReq::default_instance_;
  delete MoveReq_reflection_;
  delete MoveResp::default_instance_;
  delete MoveResp_reflection_;
  delete FlipReq::default_instance_;
  delete FlipReq_reflection_;
  delete FlipResp::default_instance_;
  delete FlipResp_reflection_;
  delete BuildingUpReq::default_instance_;
  delete BuildingUpReq_reflection_;
  delete BuildingUpResp::default_instance_;
  delete BuildingUpResp_reflection_;
  delete UpgradeStarSpeedUpReq::default_instance_;
  delete UpgradeStarSpeedUpReq_reflection_;
  delete UpgradeStarSpeedUpResp::default_instance_;
  delete UpgradeStarSpeedUpResp_reflection_;
  delete RemoveBarrierReq::default_instance_;
  delete RemoveBarrierReq_reflection_;
  delete RemoveBarrierResp::default_instance_;
  delete RemoveBarrierResp_reflection_;
  delete SellDecorateReq::default_instance_;
  delete SellDecorateReq_reflection_;
  delete SellDecorateResq::default_instance_;
  delete SellDecorateResq_reflection_;
  delete ExpandMapReq::default_instance_;
  delete ExpandMapReq_reflection_;
  delete ExpandMapResp::default_instance_;
  delete ExpandMapResp_reflection_;
  delete ViewAdReduceBuildTimeReq::default_instance_;
  delete ViewAdReduceBuildTimeReq_reflection_;
  delete ViewAdReduceBuildTimeResp::default_instance_;
  delete ViewAdReduceBuildTimeResp_reflection_;
  delete GetViewAdReduceBuildTimeReq::default_instance_;
  delete GetViewAdReduceBuildTimeReq_reflection_;
  delete GetViewAdReduceBuildTimeResp::default_instance_;
  delete GetViewAdReduceBuildTimeResp_reflection_;
}

void protobuf_AddDesc_ProtoBuilding_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::DataCommon::protobuf_AddDesc_DataCommon_2eproto();
  ::ProtoProduce::protobuf_AddDesc_ProtoProduce_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\023ProtoBuilding.proto\022\rProtoBuilding\032\020Da"
    "taCommon.proto\032\022ProtoProduce.proto\"m\n\013Bu"
    "ildingCPP\022\n\n\002ud\030\001 \002(\r\022\017\n\007buildId\030\002 \002(\r\022\020"
    "\n\010position\030\003 \003(\r\022\016\n\006direct\030\004 \002(\r\022\020\n\010done"
    "Time\030\005 \002(\r\022\r\n\005level\030\006 \002(\r\">\n\020EquipmentSt"
    "arCPP\022\n\n\002id\030\001 \002(\r\022\014\n\004star\030\002 \002(\r\022\020\n\010usedt"
    "ime\030\003 \002(\r\"8\n\010BuildReq\022\017\n\007buildId\030\001 \002(\r\022\013"
    "\n\003pos\030\002 \003(\r\022\016\n\006direct\030\003 \002(\r\"\320\001\n\tBuildRes"
    "p\022,\n\010building\030\001 \002(\0132\032.ProtoBuilding.Buil"
    "dingCPP\022+\n\007commons\030\002 \002(\0132\032.DataCommon.Co"
    "mmonItemsCPP\0220\n\007product\030\003 \001(\0132\037.ProtoPro"
    "duce.ProduceProductCPP\0226\n\requipmentstar\030"
    "\004 \001(\0132\037.ProtoBuilding.EquipmentStarCPP\"\034"
    "\n\016UnveilBuildReq\022\n\n\002ud\030\001 \002(\r\"\236\001\n\017UnveilB"
    "uildResp\0220\n\007product\030\001 \001(\0132\037.ProtoProduce"
    ".ProduceProductCPP\022+\n\007commons\030\002 \002(\0132\032.Da"
    "taCommon.CommonItemsCPP\022,\n\010building\030\003 \002("
    "\0132\032.ProtoBuilding.BuildingCPP\"2\n\007MoveReq"
    "\022\n\n\002ud\030\001 \002(\r\022\013\n\003pos\030\002 \003(\r\022\016\n\006direct\030\003 \002("
    "\r\"\032\n\010MoveResp\022\016\n\006result\030\001 \002(\010\"\025\n\007FlipReq"
    "\022\n\n\002ud\030\001 \002(\r\"\032\n\010FlipResp\022\016\n\006result\030\001 \002(\010"
    "\"\033\n\rBuildingUpReq\022\n\n\002ud\030\001 \002(\r\"h\n\016Buildin"
    "gUpResp\022+\n\007commons\030\001 \002(\0132\032.DataCommon.Co"
    "mmonItemsCPP\022)\n\005build\030\002 \002(\0132\032.ProtoBuild"
    "ing.BuildingCPP\"#\n\025UpgradeStarSpeedUpReq"
    "\022\n\n\002id\030\001 \002(\r\"}\n\026UpgradeStarSpeedUpResp\022+"
    "\n\007commons\030\001 \002(\0132\032.DataCommon.CommonItems"
    "CPP\0226\n\requipmentstar\030\002 \002(\0132\037.ProtoBuildi"
    "ng.EquipmentStarCPP\"\036\n\020RemoveBarrierReq\022"
    "\n\n\002id\030\001 \002(\r\"d\n\021RemoveBarrierResp\022+\n\007comm"
    "ons\030\001 \002(\0132\032.DataCommon.CommonItemsCPP\022\017\n"
    "\007barrier\030\002 \002(\014\022\021\n\tbarrierid\030\003 \002(\r\"\035\n\017Sel"
    "lDecorateReq\022\n\n\002ud\030\001 \002(\r\"K\n\020SellDecorate"
    "Resq\022+\n\007commons\030\001 \002(\0132\032.DataCommon.Commo"
    "nItemsCPP\022\n\n\002ud\030\002 \002(\r\"\032\n\014ExpandMapReq\022\n\n"
    "\002id\030\001 \002(\r\"N\n\rExpandMapResp\022+\n\007commons\030\001 "
    "\002(\0132\032.DataCommon.CommonItemsCPP\022\020\n\010mapst"
    "aus\030\002 \003(\014\"&\n\030ViewAdReduceBuildTimeReq\022\n\n"
    "\002ud\030\001 \002(\r\"\\\n\031ViewAdReduceBuildTimeResp\022\021"
    "\n\tremainCnt\030\001 \002(\r\022,\n\010building\030\002 \002(\0132\032.Pr"
    "otoBuilding.BuildingCPP\"\035\n\033GetViewAdRedu"
    "ceBuildTimeReq\"1\n\034GetViewAdReduceBuildTi"
    "meResp\022\021\n\tremainCnt\030\001 \002(\r", 1705);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "ProtoBuilding.proto", &protobuf_RegisterTypes);
  BuildingCPP::default_instance_ = new BuildingCPP();
  EquipmentStarCPP::default_instance_ = new EquipmentStarCPP();
  BuildReq::default_instance_ = new BuildReq();
  BuildResp::default_instance_ = new BuildResp();
  UnveilBuildReq::default_instance_ = new UnveilBuildReq();
  UnveilBuildResp::default_instance_ = new UnveilBuildResp();
  MoveReq::default_instance_ = new MoveReq();
  MoveResp::default_instance_ = new MoveResp();
  FlipReq::default_instance_ = new FlipReq();
  FlipResp::default_instance_ = new FlipResp();
  BuildingUpReq::default_instance_ = new BuildingUpReq();
  BuildingUpResp::default_instance_ = new BuildingUpResp();
  UpgradeStarSpeedUpReq::default_instance_ = new UpgradeStarSpeedUpReq();
  UpgradeStarSpeedUpResp::default_instance_ = new UpgradeStarSpeedUpResp();
  RemoveBarrierReq::default_instance_ = new RemoveBarrierReq();
  RemoveBarrierResp::default_instance_ = new RemoveBarrierResp();
  SellDecorateReq::default_instance_ = new SellDecorateReq();
  SellDecorateResq::default_instance_ = new SellDecorateResq();
  ExpandMapReq::default_instance_ = new ExpandMapReq();
  ExpandMapResp::default_instance_ = new ExpandMapResp();
  ViewAdReduceBuildTimeReq::default_instance_ = new ViewAdReduceBuildTimeReq();
  ViewAdReduceBuildTimeResp::default_instance_ = new ViewAdReduceBuildTimeResp();
  GetViewAdReduceBuildTimeReq::default_instance_ = new GetViewAdReduceBuildTimeReq();
  GetViewAdReduceBuildTimeResp::default_instance_ = new GetViewAdReduceBuildTimeResp();
  BuildingCPP::default_instance_->InitAsDefaultInstance();
  EquipmentStarCPP::default_instance_->InitAsDefaultInstance();
  BuildReq::default_instance_->InitAsDefaultInstance();
  BuildResp::default_instance_->InitAsDefaultInstance();
  UnveilBuildReq::default_instance_->InitAsDefaultInstance();
  UnveilBuildResp::default_instance_->InitAsDefaultInstance();
  MoveReq::default_instance_->InitAsDefaultInstance();
  MoveResp::default_instance_->InitAsDefaultInstance();
  FlipReq::default_instance_->InitAsDefaultInstance();
  FlipResp::default_instance_->InitAsDefaultInstance();
  BuildingUpReq::default_instance_->InitAsDefaultInstance();
  BuildingUpResp::default_instance_->InitAsDefaultInstance();
  UpgradeStarSpeedUpReq::default_instance_->InitAsDefaultInstance();
  UpgradeStarSpeedUpResp::default_instance_->InitAsDefaultInstance();
  RemoveBarrierReq::default_instance_->InitAsDefaultInstance();
  RemoveBarrierResp::default_instance_->InitAsDefaultInstance();
  SellDecorateReq::default_instance_->InitAsDefaultInstance();
  SellDecorateResq::default_instance_->InitAsDefaultInstance();
  ExpandMapReq::default_instance_->InitAsDefaultInstance();
  ExpandMapResp::default_instance_->InitAsDefaultInstance();
  ViewAdReduceBuildTimeReq::default_instance_->InitAsDefaultInstance();
  ViewAdReduceBuildTimeResp::default_instance_->InitAsDefaultInstance();
  GetViewAdReduceBuildTimeReq::default_instance_->InitAsDefaultInstance();
  GetViewAdReduceBuildTimeResp::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_ProtoBuilding_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_ProtoBuilding_2eproto {
  StaticDescriptorInitializer_ProtoBuilding_2eproto() {
    protobuf_AddDesc_ProtoBuilding_2eproto();
  }
} static_descriptor_initializer_ProtoBuilding_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int BuildingCPP::kUdFieldNumber;
const int BuildingCPP::kBuildIdFieldNumber;
const int BuildingCPP::kPositionFieldNumber;
const int BuildingCPP::kDirectFieldNumber;
const int BuildingCPP::kDoneTimeFieldNumber;
const int BuildingCPP::kLevelFieldNumber;
#endif  // !_MSC_VER

BuildingCPP::BuildingCPP()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoBuilding.BuildingCPP)
}

void BuildingCPP::InitAsDefaultInstance() {
}

BuildingCPP::BuildingCPP(const BuildingCPP& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ProtoBuilding.BuildingCPP)
}

void BuildingCPP::SharedCtor() {
  _cached_size_ = 0;
  ud_ = 0u;
  buildid_ = 0u;
  direct_ = 0u;
  donetime_ = 0u;
  level_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BuildingCPP::~BuildingCPP() {
  // @@protoc_insertion_point(destructor:ProtoBuilding.BuildingCPP)
  SharedDtor();
}

void BuildingCPP::SharedDtor() {
  if (this != default_instance_) {
  }
}

void BuildingCPP::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BuildingCPP::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BuildingCPP_descriptor_;
}

const BuildingCPP& BuildingCPP::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoBuilding_2eproto();
  return *default_instance_;
}

BuildingCPP* BuildingCPP::default_instance_ = NULL;

BuildingCPP* BuildingCPP::New() const {
  return new BuildingCPP;
}

void BuildingCPP::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<BuildingCPP*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 59) {
    ZR_(ud_, buildid_);
    ZR_(direct_, level_);
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  position_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool BuildingCPP::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoBuilding.BuildingCPP)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 ud = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ud_)));
          set_has_ud();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_buildId;
        break;
      }

      // required uint32 buildId = 2;
      case 2: {
        if (tag == 16) {
         parse_buildId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &buildid_)));
          set_has_buildid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_position;
        break;
      }

      // repeated uint32 position = 3;
      case 3: {
        if (tag == 24) {
         parse_position:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 24, input, this->mutable_position())));
        } else if (tag == 26) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_position())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_position;
        if (input->ExpectTag(32)) goto parse_direct;
        break;
      }

      // required uint32 direct = 4;
      case 4: {
        if (tag == 32) {
         parse_direct:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &direct_)));
          set_has_direct();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_doneTime;
        break;
      }

      // required uint32 doneTime = 5;
      case 5: {
        if (tag == 40) {
         parse_doneTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &donetime_)));
          set_has_donetime();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_level;
        break;
      }

      // required uint32 level = 6;
      case 6: {
        if (tag == 48) {
         parse_level:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &level_)));
          set_has_level();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoBuilding.BuildingCPP)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoBuilding.BuildingCPP)
  return false;
#undef DO_
}

void BuildingCPP::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoBuilding.BuildingCPP)
  // required uint32 ud = 1;
  if (has_ud()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->ud(), output);
  }

  // required uint32 buildId = 2;
  if (has_buildid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->buildid(), output);
  }

  // repeated uint32 position = 3;
  for (int i = 0; i < this->position_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      3, this->position(i), output);
  }

  // required uint32 direct = 4;
  if (has_direct()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->direct(), output);
  }

  // required uint32 doneTime = 5;
  if (has_donetime()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->donetime(), output);
  }

  // required uint32 level = 6;
  if (has_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->level(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoBuilding.BuildingCPP)
}

::google::protobuf::uint8* BuildingCPP::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoBuilding.BuildingCPP)
  // required uint32 ud = 1;
  if (has_ud()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->ud(), target);
  }

  // required uint32 buildId = 2;
  if (has_buildid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->buildid(), target);
  }

  // repeated uint32 position = 3;
  for (int i = 0; i < this->position_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(3, this->position(i), target);
  }

  // required uint32 direct = 4;
  if (has_direct()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->direct(), target);
  }

  // required uint32 doneTime = 5;
  if (has_donetime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->donetime(), target);
  }

  // required uint32 level = 6;
  if (has_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->level(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoBuilding.BuildingCPP)
  return target;
}

int BuildingCPP::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 ud = 1;
    if (has_ud()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->ud());
    }

    // required uint32 buildId = 2;
    if (has_buildid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->buildid());
    }

    // required uint32 direct = 4;
    if (has_direct()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->direct());
    }

    // required uint32 doneTime = 5;
    if (has_donetime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->donetime());
    }

    // required uint32 level = 6;
    if (has_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->level());
    }

  }
  // repeated uint32 position = 3;
  {
    int data_size = 0;
    for (int i = 0; i < this->position_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->position(i));
    }
    total_size += 1 * this->position_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BuildingCPP::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const BuildingCPP* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const BuildingCPP*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void BuildingCPP::MergeFrom(const BuildingCPP& from) {
  GOOGLE_CHECK_NE(&from, this);
  position_.MergeFrom(from.position_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_ud()) {
      set_ud(from.ud());
    }
    if (from.has_buildid()) {
      set_buildid(from.buildid());
    }
    if (from.has_direct()) {
      set_direct(from.direct());
    }
    if (from.has_donetime()) {
      set_donetime(from.donetime());
    }
    if (from.has_level()) {
      set_level(from.level());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void BuildingCPP::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BuildingCPP::CopyFrom(const BuildingCPP& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BuildingCPP::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000003b) != 0x0000003b) return false;

  return true;
}

void BuildingCPP::Swap(BuildingCPP* other) {
  if (other != this) {
    std::swap(ud_, other->ud_);
    std::swap(buildid_, other->buildid_);
    position_.Swap(&other->position_);
    std::swap(direct_, other->direct_);
    std::swap(donetime_, other->donetime_);
    std::swap(level_, other->level_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata BuildingCPP::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BuildingCPP_descriptor_;
  metadata.reflection = BuildingCPP_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int EquipmentStarCPP::kIdFieldNumber;
const int EquipmentStarCPP::kStarFieldNumber;
const int EquipmentStarCPP::kUsedtimeFieldNumber;
#endif  // !_MSC_VER

EquipmentStarCPP::EquipmentStarCPP()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoBuilding.EquipmentStarCPP)
}

void EquipmentStarCPP::InitAsDefaultInstance() {
}

EquipmentStarCPP::EquipmentStarCPP(const EquipmentStarCPP& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ProtoBuilding.EquipmentStarCPP)
}

void EquipmentStarCPP::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0u;
  star_ = 0u;
  usedtime_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

EquipmentStarCPP::~EquipmentStarCPP() {
  // @@protoc_insertion_point(destructor:ProtoBuilding.EquipmentStarCPP)
  SharedDtor();
}

void EquipmentStarCPP::SharedDtor() {
  if (this != default_instance_) {
  }
}

void EquipmentStarCPP::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EquipmentStarCPP::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EquipmentStarCPP_descriptor_;
}

const EquipmentStarCPP& EquipmentStarCPP::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoBuilding_2eproto();
  return *default_instance_;
}

EquipmentStarCPP* EquipmentStarCPP::default_instance_ = NULL;

EquipmentStarCPP* EquipmentStarCPP::New() const {
  return new EquipmentStarCPP;
}

void EquipmentStarCPP::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<EquipmentStarCPP*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(id_, usedtime_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool EquipmentStarCPP::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoBuilding.EquipmentStarCPP)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_star;
        break;
      }

      // required uint32 star = 2;
      case 2: {
        if (tag == 16) {
         parse_star:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &star_)));
          set_has_star();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_usedtime;
        break;
      }

      // required uint32 usedtime = 3;
      case 3: {
        if (tag == 24) {
         parse_usedtime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &usedtime_)));
          set_has_usedtime();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoBuilding.EquipmentStarCPP)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoBuilding.EquipmentStarCPP)
  return false;
#undef DO_
}

void EquipmentStarCPP::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoBuilding.EquipmentStarCPP)
  // required uint32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  // required uint32 star = 2;
  if (has_star()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->star(), output);
  }

  // required uint32 usedtime = 3;
  if (has_usedtime()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->usedtime(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoBuilding.EquipmentStarCPP)
}

::google::protobuf::uint8* EquipmentStarCPP::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoBuilding.EquipmentStarCPP)
  // required uint32 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  // required uint32 star = 2;
  if (has_star()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->star(), target);
  }

  // required uint32 usedtime = 3;
  if (has_usedtime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->usedtime(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoBuilding.EquipmentStarCPP)
  return target;
}

int EquipmentStarCPP::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->id());
    }

    // required uint32 star = 2;
    if (has_star()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->star());
    }

    // required uint32 usedtime = 3;
    if (has_usedtime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->usedtime());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EquipmentStarCPP::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const EquipmentStarCPP* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const EquipmentStarCPP*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void EquipmentStarCPP::MergeFrom(const EquipmentStarCPP& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_star()) {
      set_star(from.star());
    }
    if (from.has_usedtime()) {
      set_usedtime(from.usedtime());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void EquipmentStarCPP::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EquipmentStarCPP::CopyFrom(const EquipmentStarCPP& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EquipmentStarCPP::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  return true;
}

void EquipmentStarCPP::Swap(EquipmentStarCPP* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(star_, other->star_);
    std::swap(usedtime_, other->usedtime_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata EquipmentStarCPP::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = EquipmentStarCPP_descriptor_;
  metadata.reflection = EquipmentStarCPP_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int BuildReq::kBuildIdFieldNumber;
const int BuildReq::kPosFieldNumber;
const int BuildReq::kDirectFieldNumber;
#endif  // !_MSC_VER

BuildReq::BuildReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoBuilding.BuildReq)
}

void BuildReq::InitAsDefaultInstance() {
}

BuildReq::BuildReq(const BuildReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ProtoBuilding.BuildReq)
}

void BuildReq::SharedCtor() {
  _cached_size_ = 0;
  buildid_ = 0u;
  direct_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BuildReq::~BuildReq() {
  // @@protoc_insertion_point(destructor:ProtoBuilding.BuildReq)
  SharedDtor();
}

void BuildReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void BuildReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BuildReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BuildReq_descriptor_;
}

const BuildReq& BuildReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoBuilding_2eproto();
  return *default_instance_;
}

BuildReq* BuildReq::default_instance_ = NULL;

BuildReq* BuildReq::New() const {
  return new BuildReq;
}

void BuildReq::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<BuildReq*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(buildid_, direct_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  pos_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool BuildReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoBuilding.BuildReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 buildId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &buildid_)));
          set_has_buildid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_pos;
        break;
      }

      // repeated uint32 pos = 2;
      case 2: {
        if (tag == 16) {
         parse_pos:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 16, input, this->mutable_pos())));
        } else if (tag == 18) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_pos())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_pos;
        if (input->ExpectTag(24)) goto parse_direct;
        break;
      }

      // required uint32 direct = 3;
      case 3: {
        if (tag == 24) {
         parse_direct:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &direct_)));
          set_has_direct();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoBuilding.BuildReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoBuilding.BuildReq)
  return false;
#undef DO_
}

void BuildReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoBuilding.BuildReq)
  // required uint32 buildId = 1;
  if (has_buildid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->buildid(), output);
  }

  // repeated uint32 pos = 2;
  for (int i = 0; i < this->pos_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      2, this->pos(i), output);
  }

  // required uint32 direct = 3;
  if (has_direct()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->direct(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoBuilding.BuildReq)
}

::google::protobuf::uint8* BuildReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoBuilding.BuildReq)
  // required uint32 buildId = 1;
  if (has_buildid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->buildid(), target);
  }

  // repeated uint32 pos = 2;
  for (int i = 0; i < this->pos_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(2, this->pos(i), target);
  }

  // required uint32 direct = 3;
  if (has_direct()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->direct(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoBuilding.BuildReq)
  return target;
}

int BuildReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 buildId = 1;
    if (has_buildid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->buildid());
    }

    // required uint32 direct = 3;
    if (has_direct()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->direct());
    }

  }
  // repeated uint32 pos = 2;
  {
    int data_size = 0;
    for (int i = 0; i < this->pos_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->pos(i));
    }
    total_size += 1 * this->pos_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BuildReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const BuildReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const BuildReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void BuildReq::MergeFrom(const BuildReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  pos_.MergeFrom(from.pos_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_buildid()) {
      set_buildid(from.buildid());
    }
    if (from.has_direct()) {
      set_direct(from.direct());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void BuildReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BuildReq::CopyFrom(const BuildReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BuildReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000005) != 0x00000005) return false;

  return true;
}

void BuildReq::Swap(BuildReq* other) {
  if (other != this) {
    std::swap(buildid_, other->buildid_);
    pos_.Swap(&other->pos_);
    std::swap(direct_, other->direct_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata BuildReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BuildReq_descriptor_;
  metadata.reflection = BuildReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int BuildResp::kBuildingFieldNumber;
const int BuildResp::kCommonsFieldNumber;
const int BuildResp::kProductFieldNumber;
const int BuildResp::kEquipmentstarFieldNumber;
#endif  // !_MSC_VER

BuildResp::BuildResp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoBuilding.BuildResp)
}

void BuildResp::InitAsDefaultInstance() {
  building_ = const_cast< ::ProtoBuilding::BuildingCPP*>(&::ProtoBuilding::BuildingCPP::default_instance());
  commons_ = const_cast< ::DataCommon::CommonItemsCPP*>(&::DataCommon::CommonItemsCPP::default_instance());
  product_ = const_cast< ::ProtoProduce::ProduceProductCPP*>(&::ProtoProduce::ProduceProductCPP::default_instance());
  equipmentstar_ = const_cast< ::ProtoBuilding::EquipmentStarCPP*>(&::ProtoBuilding::EquipmentStarCPP::default_instance());
}

BuildResp::BuildResp(const BuildResp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ProtoBuilding.BuildResp)
}

void BuildResp::SharedCtor() {
  _cached_size_ = 0;
  building_ = NULL;
  commons_ = NULL;
  product_ = NULL;
  equipmentstar_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BuildResp::~BuildResp() {
  // @@protoc_insertion_point(destructor:ProtoBuilding.BuildResp)
  SharedDtor();
}

void BuildResp::SharedDtor() {
  if (this != default_instance_) {
    delete building_;
    delete commons_;
    delete product_;
    delete equipmentstar_;
  }
}

void BuildResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BuildResp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BuildResp_descriptor_;
}

const BuildResp& BuildResp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoBuilding_2eproto();
  return *default_instance_;
}

BuildResp* BuildResp::default_instance_ = NULL;

BuildResp* BuildResp::New() const {
  return new BuildResp;
}

void BuildResp::Clear() {
  if (_has_bits_[0 / 32] & 15) {
    if (has_building()) {
      if (building_ != NULL) building_->::ProtoBuilding::BuildingCPP::Clear();
    }
    if (has_commons()) {
      if (commons_ != NULL) commons_->::DataCommon::CommonItemsCPP::Clear();
    }
    if (has_product()) {
      if (product_ != NULL) product_->::ProtoProduce::ProduceProductCPP::Clear();
    }
    if (has_equipmentstar()) {
      if (equipmentstar_ != NULL) equipmentstar_->::ProtoBuilding::EquipmentStarCPP::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool BuildResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoBuilding.BuildResp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .ProtoBuilding.BuildingCPP building = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_building()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_commons;
        break;
      }

      // required .DataCommon.CommonItemsCPP commons = 2;
      case 2: {
        if (tag == 18) {
         parse_commons:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_commons()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_product;
        break;
      }

      // optional .ProtoProduce.ProduceProductCPP product = 3;
      case 3: {
        if (tag == 26) {
         parse_product:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_product()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_equipmentstar;
        break;
      }

      // optional .ProtoBuilding.EquipmentStarCPP equipmentstar = 4;
      case 4: {
        if (tag == 34) {
         parse_equipmentstar:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_equipmentstar()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoBuilding.BuildResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoBuilding.BuildResp)
  return false;
#undef DO_
}

void BuildResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoBuilding.BuildResp)
  // required .ProtoBuilding.BuildingCPP building = 1;
  if (has_building()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->building(), output);
  }

  // required .DataCommon.CommonItemsCPP commons = 2;
  if (has_commons()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->commons(), output);
  }

  // optional .ProtoProduce.ProduceProductCPP product = 3;
  if (has_product()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->product(), output);
  }

  // optional .ProtoBuilding.EquipmentStarCPP equipmentstar = 4;
  if (has_equipmentstar()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->equipmentstar(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoBuilding.BuildResp)
}

::google::protobuf::uint8* BuildResp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoBuilding.BuildResp)
  // required .ProtoBuilding.BuildingCPP building = 1;
  if (has_building()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->building(), target);
  }

  // required .DataCommon.CommonItemsCPP commons = 2;
  if (has_commons()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->commons(), target);
  }

  // optional .ProtoProduce.ProduceProductCPP product = 3;
  if (has_product()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->product(), target);
  }

  // optional .ProtoBuilding.EquipmentStarCPP equipmentstar = 4;
  if (has_equipmentstar()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->equipmentstar(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoBuilding.BuildResp)
  return target;
}

int BuildResp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .ProtoBuilding.BuildingCPP building = 1;
    if (has_building()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->building());
    }

    // required .DataCommon.CommonItemsCPP commons = 2;
    if (has_commons()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->commons());
    }

    // optional .ProtoProduce.ProduceProductCPP product = 3;
    if (has_product()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->product());
    }

    // optional .ProtoBuilding.EquipmentStarCPP equipmentstar = 4;
    if (has_equipmentstar()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->equipmentstar());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BuildResp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const BuildResp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const BuildResp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void BuildResp::MergeFrom(const BuildResp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_building()) {
      mutable_building()->::ProtoBuilding::BuildingCPP::MergeFrom(from.building());
    }
    if (from.has_commons()) {
      mutable_commons()->::DataCommon::CommonItemsCPP::MergeFrom(from.commons());
    }
    if (from.has_product()) {
      mutable_product()->::ProtoProduce::ProduceProductCPP::MergeFrom(from.product());
    }
    if (from.has_equipmentstar()) {
      mutable_equipmentstar()->::ProtoBuilding::EquipmentStarCPP::MergeFrom(from.equipmentstar());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void BuildResp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BuildResp::CopyFrom(const BuildResp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BuildResp::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  if (has_building()) {
    if (!this->building().IsInitialized()) return false;
  }
  if (has_commons()) {
    if (!this->commons().IsInitialized()) return false;
  }
  if (has_product()) {
    if (!this->product().IsInitialized()) return false;
  }
  if (has_equipmentstar()) {
    if (!this->equipmentstar().IsInitialized()) return false;
  }
  return true;
}

void BuildResp::Swap(BuildResp* other) {
  if (other != this) {
    std::swap(building_, other->building_);
    std::swap(commons_, other->commons_);
    std::swap(product_, other->product_);
    std::swap(equipmentstar_, other->equipmentstar_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata BuildResp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BuildResp_descriptor_;
  metadata.reflection = BuildResp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int UnveilBuildReq::kUdFieldNumber;
#endif  // !_MSC_VER

UnveilBuildReq::UnveilBuildReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoBuilding.UnveilBuildReq)
}

void UnveilBuildReq::InitAsDefaultInstance() {
}

UnveilBuildReq::UnveilBuildReq(const UnveilBuildReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ProtoBuilding.UnveilBuildReq)
}

void UnveilBuildReq::SharedCtor() {
  _cached_size_ = 0;
  ud_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

UnveilBuildReq::~UnveilBuildReq() {
  // @@protoc_insertion_point(destructor:ProtoBuilding.UnveilBuildReq)
  SharedDtor();
}

void UnveilBuildReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void UnveilBuildReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UnveilBuildReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UnveilBuildReq_descriptor_;
}

const UnveilBuildReq& UnveilBuildReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoBuilding_2eproto();
  return *default_instance_;
}

UnveilBuildReq* UnveilBuildReq::default_instance_ = NULL;

UnveilBuildReq* UnveilBuildReq::New() const {
  return new UnveilBuildReq;
}

void UnveilBuildReq::Clear() {
  ud_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool UnveilBuildReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoBuilding.UnveilBuildReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 ud = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ud_)));
          set_has_ud();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoBuilding.UnveilBuildReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoBuilding.UnveilBuildReq)
  return false;
#undef DO_
}

void UnveilBuildReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoBuilding.UnveilBuildReq)
  // required uint32 ud = 1;
  if (has_ud()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->ud(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoBuilding.UnveilBuildReq)
}

::google::protobuf::uint8* UnveilBuildReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoBuilding.UnveilBuildReq)
  // required uint32 ud = 1;
  if (has_ud()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->ud(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoBuilding.UnveilBuildReq)
  return target;
}

int UnveilBuildReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 ud = 1;
    if (has_ud()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->ud());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UnveilBuildReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const UnveilBuildReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const UnveilBuildReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void UnveilBuildReq::MergeFrom(const UnveilBuildReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_ud()) {
      set_ud(from.ud());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void UnveilBuildReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UnveilBuildReq::CopyFrom(const UnveilBuildReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UnveilBuildReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void UnveilBuildReq::Swap(UnveilBuildReq* other) {
  if (other != this) {
    std::swap(ud_, other->ud_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata UnveilBuildReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UnveilBuildReq_descriptor_;
  metadata.reflection = UnveilBuildReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int UnveilBuildResp::kProductFieldNumber;
const int UnveilBuildResp::kCommonsFieldNumber;
const int UnveilBuildResp::kBuildingFieldNumber;
#endif  // !_MSC_VER

UnveilBuildResp::UnveilBuildResp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoBuilding.UnveilBuildResp)
}

void UnveilBuildResp::InitAsDefaultInstance() {
  product_ = const_cast< ::ProtoProduce::ProduceProductCPP*>(&::ProtoProduce::ProduceProductCPP::default_instance());
  commons_ = const_cast< ::DataCommon::CommonItemsCPP*>(&::DataCommon::CommonItemsCPP::default_instance());
  building_ = const_cast< ::ProtoBuilding::BuildingCPP*>(&::ProtoBuilding::BuildingCPP::default_instance());
}

UnveilBuildResp::UnveilBuildResp(const UnveilBuildResp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ProtoBuilding.UnveilBuildResp)
}

void UnveilBuildResp::SharedCtor() {
  _cached_size_ = 0;
  product_ = NULL;
  commons_ = NULL;
  building_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

UnveilBuildResp::~UnveilBuildResp() {
  // @@protoc_insertion_point(destructor:ProtoBuilding.UnveilBuildResp)
  SharedDtor();
}

void UnveilBuildResp::SharedDtor() {
  if (this != default_instance_) {
    delete product_;
    delete commons_;
    delete building_;
  }
}

void UnveilBuildResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UnveilBuildResp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UnveilBuildResp_descriptor_;
}

const UnveilBuildResp& UnveilBuildResp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoBuilding_2eproto();
  return *default_instance_;
}

UnveilBuildResp* UnveilBuildResp::default_instance_ = NULL;

UnveilBuildResp* UnveilBuildResp::New() const {
  return new UnveilBuildResp;
}

void UnveilBuildResp::Clear() {
  if (_has_bits_[0 / 32] & 7) {
    if (has_product()) {
      if (product_ != NULL) product_->::ProtoProduce::ProduceProductCPP::Clear();
    }
    if (has_commons()) {
      if (commons_ != NULL) commons_->::DataCommon::CommonItemsCPP::Clear();
    }
    if (has_building()) {
      if (building_ != NULL) building_->::ProtoBuilding::BuildingCPP::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool UnveilBuildResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoBuilding.UnveilBuildResp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .ProtoProduce.ProduceProductCPP product = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_product()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_commons;
        break;
      }

      // required .DataCommon.CommonItemsCPP commons = 2;
      case 2: {
        if (tag == 18) {
         parse_commons:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_commons()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_building;
        break;
      }

      // required .ProtoBuilding.BuildingCPP building = 3;
      case 3: {
        if (tag == 26) {
         parse_building:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_building()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoBuilding.UnveilBuildResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoBuilding.UnveilBuildResp)
  return false;
#undef DO_
}

void UnveilBuildResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoBuilding.UnveilBuildResp)
  // optional .ProtoProduce.ProduceProductCPP product = 1;
  if (has_product()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->product(), output);
  }

  // required .DataCommon.CommonItemsCPP commons = 2;
  if (has_commons()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->commons(), output);
  }

  // required .ProtoBuilding.BuildingCPP building = 3;
  if (has_building()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->building(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoBuilding.UnveilBuildResp)
}

::google::protobuf::uint8* UnveilBuildResp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoBuilding.UnveilBuildResp)
  // optional .ProtoProduce.ProduceProductCPP product = 1;
  if (has_product()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->product(), target);
  }

  // required .DataCommon.CommonItemsCPP commons = 2;
  if (has_commons()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->commons(), target);
  }

  // required .ProtoBuilding.BuildingCPP building = 3;
  if (has_building()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->building(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoBuilding.UnveilBuildResp)
  return target;
}

int UnveilBuildResp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .ProtoProduce.ProduceProductCPP product = 1;
    if (has_product()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->product());
    }

    // required .DataCommon.CommonItemsCPP commons = 2;
    if (has_commons()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->commons());
    }

    // required .ProtoBuilding.BuildingCPP building = 3;
    if (has_building()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->building());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UnveilBuildResp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const UnveilBuildResp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const UnveilBuildResp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void UnveilBuildResp::MergeFrom(const UnveilBuildResp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_product()) {
      mutable_product()->::ProtoProduce::ProduceProductCPP::MergeFrom(from.product());
    }
    if (from.has_commons()) {
      mutable_commons()->::DataCommon::CommonItemsCPP::MergeFrom(from.commons());
    }
    if (from.has_building()) {
      mutable_building()->::ProtoBuilding::BuildingCPP::MergeFrom(from.building());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void UnveilBuildResp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UnveilBuildResp::CopyFrom(const UnveilBuildResp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UnveilBuildResp::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000006) != 0x00000006) return false;

  if (has_product()) {
    if (!this->product().IsInitialized()) return false;
  }
  if (has_commons()) {
    if (!this->commons().IsInitialized()) return false;
  }
  if (has_building()) {
    if (!this->building().IsInitialized()) return false;
  }
  return true;
}

void UnveilBuildResp::Swap(UnveilBuildResp* other) {
  if (other != this) {
    std::swap(product_, other->product_);
    std::swap(commons_, other->commons_);
    std::swap(building_, other->building_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata UnveilBuildResp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UnveilBuildResp_descriptor_;
  metadata.reflection = UnveilBuildResp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MoveReq::kUdFieldNumber;
const int MoveReq::kPosFieldNumber;
const int MoveReq::kDirectFieldNumber;
#endif  // !_MSC_VER

MoveReq::MoveReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoBuilding.MoveReq)
}

void MoveReq::InitAsDefaultInstance() {
}

MoveReq::MoveReq(const MoveReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ProtoBuilding.MoveReq)
}

void MoveReq::SharedCtor() {
  _cached_size_ = 0;
  ud_ = 0u;
  direct_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MoveReq::~MoveReq() {
  // @@protoc_insertion_point(destructor:ProtoBuilding.MoveReq)
  SharedDtor();
}

void MoveReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MoveReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MoveReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MoveReq_descriptor_;
}

const MoveReq& MoveReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoBuilding_2eproto();
  return *default_instance_;
}

MoveReq* MoveReq::default_instance_ = NULL;

MoveReq* MoveReq::New() const {
  return new MoveReq;
}

void MoveReq::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MoveReq*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(ud_, direct_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  pos_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MoveReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoBuilding.MoveReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 ud = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ud_)));
          set_has_ud();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_pos;
        break;
      }

      // repeated uint32 pos = 2;
      case 2: {
        if (tag == 16) {
         parse_pos:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 16, input, this->mutable_pos())));
        } else if (tag == 18) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_pos())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_pos;
        if (input->ExpectTag(24)) goto parse_direct;
        break;
      }

      // required uint32 direct = 3;
      case 3: {
        if (tag == 24) {
         parse_direct:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &direct_)));
          set_has_direct();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoBuilding.MoveReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoBuilding.MoveReq)
  return false;
#undef DO_
}

void MoveReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoBuilding.MoveReq)
  // required uint32 ud = 1;
  if (has_ud()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->ud(), output);
  }

  // repeated uint32 pos = 2;
  for (int i = 0; i < this->pos_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      2, this->pos(i), output);
  }

  // required uint32 direct = 3;
  if (has_direct()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->direct(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoBuilding.MoveReq)
}

::google::protobuf::uint8* MoveReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoBuilding.MoveReq)
  // required uint32 ud = 1;
  if (has_ud()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->ud(), target);
  }

  // repeated uint32 pos = 2;
  for (int i = 0; i < this->pos_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(2, this->pos(i), target);
  }

  // required uint32 direct = 3;
  if (has_direct()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->direct(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoBuilding.MoveReq)
  return target;
}

int MoveReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 ud = 1;
    if (has_ud()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->ud());
    }

    // required uint32 direct = 3;
    if (has_direct()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->direct());
    }

  }
  // repeated uint32 pos = 2;
  {
    int data_size = 0;
    for (int i = 0; i < this->pos_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->pos(i));
    }
    total_size += 1 * this->pos_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MoveReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MoveReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MoveReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MoveReq::MergeFrom(const MoveReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  pos_.MergeFrom(from.pos_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_ud()) {
      set_ud(from.ud());
    }
    if (from.has_direct()) {
      set_direct(from.direct());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MoveReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MoveReq::CopyFrom(const MoveReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MoveReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000005) != 0x00000005) return false;

  return true;
}

void MoveReq::Swap(MoveReq* other) {
  if (other != this) {
    std::swap(ud_, other->ud_);
    pos_.Swap(&other->pos_);
    std::swap(direct_, other->direct_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MoveReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MoveReq_descriptor_;
  metadata.reflection = MoveReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MoveResp::kResultFieldNumber;
#endif  // !_MSC_VER

MoveResp::MoveResp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoBuilding.MoveResp)
}

void MoveResp::InitAsDefaultInstance() {
}

MoveResp::MoveResp(const MoveResp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ProtoBuilding.MoveResp)
}

void MoveResp::SharedCtor() {
  _cached_size_ = 0;
  result_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MoveResp::~MoveResp() {
  // @@protoc_insertion_point(destructor:ProtoBuilding.MoveResp)
  SharedDtor();
}

void MoveResp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MoveResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MoveResp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MoveResp_descriptor_;
}

const MoveResp& MoveResp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoBuilding_2eproto();
  return *default_instance_;
}

MoveResp* MoveResp::default_instance_ = NULL;

MoveResp* MoveResp::New() const {
  return new MoveResp;
}

void MoveResp::Clear() {
  result_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MoveResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoBuilding.MoveResp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bool result = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &result_)));
          set_has_result();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoBuilding.MoveResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoBuilding.MoveResp)
  return false;
#undef DO_
}

void MoveResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoBuilding.MoveResp)
  // required bool result = 1;
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->result(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoBuilding.MoveResp)
}

::google::protobuf::uint8* MoveResp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoBuilding.MoveResp)
  // required bool result = 1;
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->result(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoBuilding.MoveResp)
  return target;
}

int MoveResp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required bool result = 1;
    if (has_result()) {
      total_size += 1 + 1;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MoveResp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MoveResp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MoveResp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MoveResp::MergeFrom(const MoveResp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_result()) {
      set_result(from.result());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MoveResp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MoveResp::CopyFrom(const MoveResp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MoveResp::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void MoveResp::Swap(MoveResp* other) {
  if (other != this) {
    std::swap(result_, other->result_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MoveResp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MoveResp_descriptor_;
  metadata.reflection = MoveResp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int FlipReq::kUdFieldNumber;
#endif  // !_MSC_VER

FlipReq::FlipReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoBuilding.FlipReq)
}

void FlipReq::InitAsDefaultInstance() {
}

FlipReq::FlipReq(const FlipReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ProtoBuilding.FlipReq)
}

void FlipReq::SharedCtor() {
  _cached_size_ = 0;
  ud_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

FlipReq::~FlipReq() {
  // @@protoc_insertion_point(destructor:ProtoBuilding.FlipReq)
  SharedDtor();
}

void FlipReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void FlipReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FlipReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return FlipReq_descriptor_;
}

const FlipReq& FlipReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoBuilding_2eproto();
  return *default_instance_;
}

FlipReq* FlipReq::default_instance_ = NULL;

FlipReq* FlipReq::New() const {
  return new FlipReq;
}

void FlipReq::Clear() {
  ud_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool FlipReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoBuilding.FlipReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 ud = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ud_)));
          set_has_ud();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoBuilding.FlipReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoBuilding.FlipReq)
  return false;
#undef DO_
}

void FlipReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoBuilding.FlipReq)
  // required uint32 ud = 1;
  if (has_ud()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->ud(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoBuilding.FlipReq)
}

::google::protobuf::uint8* FlipReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoBuilding.FlipReq)
  // required uint32 ud = 1;
  if (has_ud()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->ud(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoBuilding.FlipReq)
  return target;
}

int FlipReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 ud = 1;
    if (has_ud()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->ud());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FlipReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const FlipReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const FlipReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void FlipReq::MergeFrom(const FlipReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_ud()) {
      set_ud(from.ud());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void FlipReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FlipReq::CopyFrom(const FlipReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FlipReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void FlipReq::Swap(FlipReq* other) {
  if (other != this) {
    std::swap(ud_, other->ud_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata FlipReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = FlipReq_descriptor_;
  metadata.reflection = FlipReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int FlipResp::kResultFieldNumber;
#endif  // !_MSC_VER

FlipResp::FlipResp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoBuilding.FlipResp)
}

void FlipResp::InitAsDefaultInstance() {
}

FlipResp::FlipResp(const FlipResp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ProtoBuilding.FlipResp)
}

void FlipResp::SharedCtor() {
  _cached_size_ = 0;
  result_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

FlipResp::~FlipResp() {
  // @@protoc_insertion_point(destructor:ProtoBuilding.FlipResp)
  SharedDtor();
}

void FlipResp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void FlipResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FlipResp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return FlipResp_descriptor_;
}

const FlipResp& FlipResp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoBuilding_2eproto();
  return *default_instance_;
}

FlipResp* FlipResp::default_instance_ = NULL;

FlipResp* FlipResp::New() const {
  return new FlipResp;
}

void FlipResp::Clear() {
  result_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool FlipResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoBuilding.FlipResp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bool result = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &result_)));
          set_has_result();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoBuilding.FlipResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoBuilding.FlipResp)
  return false;
#undef DO_
}

void FlipResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoBuilding.FlipResp)
  // required bool result = 1;
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->result(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoBuilding.FlipResp)
}

::google::protobuf::uint8* FlipResp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoBuilding.FlipResp)
  // required bool result = 1;
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->result(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoBuilding.FlipResp)
  return target;
}

int FlipResp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required bool result = 1;
    if (has_result()) {
      total_size += 1 + 1;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FlipResp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const FlipResp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const FlipResp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void FlipResp::MergeFrom(const FlipResp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_result()) {
      set_result(from.result());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void FlipResp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FlipResp::CopyFrom(const FlipResp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FlipResp::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void FlipResp::Swap(FlipResp* other) {
  if (other != this) {
    std::swap(result_, other->result_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata FlipResp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = FlipResp_descriptor_;
  metadata.reflection = FlipResp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int BuildingUpReq::kUdFieldNumber;
#endif  // !_MSC_VER

BuildingUpReq::BuildingUpReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoBuilding.BuildingUpReq)
}

void BuildingUpReq::InitAsDefaultInstance() {
}

BuildingUpReq::BuildingUpReq(const BuildingUpReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ProtoBuilding.BuildingUpReq)
}

void BuildingUpReq::SharedCtor() {
  _cached_size_ = 0;
  ud_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BuildingUpReq::~BuildingUpReq() {
  // @@protoc_insertion_point(destructor:ProtoBuilding.BuildingUpReq)
  SharedDtor();
}

void BuildingUpReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void BuildingUpReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BuildingUpReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BuildingUpReq_descriptor_;
}

const BuildingUpReq& BuildingUpReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoBuilding_2eproto();
  return *default_instance_;
}

BuildingUpReq* BuildingUpReq::default_instance_ = NULL;

BuildingUpReq* BuildingUpReq::New() const {
  return new BuildingUpReq;
}

void BuildingUpReq::Clear() {
  ud_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool BuildingUpReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoBuilding.BuildingUpReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 ud = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ud_)));
          set_has_ud();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoBuilding.BuildingUpReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoBuilding.BuildingUpReq)
  return false;
#undef DO_
}

void BuildingUpReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoBuilding.BuildingUpReq)
  // required uint32 ud = 1;
  if (has_ud()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->ud(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoBuilding.BuildingUpReq)
}

::google::protobuf::uint8* BuildingUpReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoBuilding.BuildingUpReq)
  // required uint32 ud = 1;
  if (has_ud()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->ud(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoBuilding.BuildingUpReq)
  return target;
}

int BuildingUpReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 ud = 1;
    if (has_ud()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->ud());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BuildingUpReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const BuildingUpReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const BuildingUpReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void BuildingUpReq::MergeFrom(const BuildingUpReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_ud()) {
      set_ud(from.ud());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void BuildingUpReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BuildingUpReq::CopyFrom(const BuildingUpReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BuildingUpReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void BuildingUpReq::Swap(BuildingUpReq* other) {
  if (other != this) {
    std::swap(ud_, other->ud_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata BuildingUpReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BuildingUpReq_descriptor_;
  metadata.reflection = BuildingUpReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int BuildingUpResp::kCommonsFieldNumber;
const int BuildingUpResp::kBuildFieldNumber;
#endif  // !_MSC_VER

BuildingUpResp::BuildingUpResp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoBuilding.BuildingUpResp)
}

void BuildingUpResp::InitAsDefaultInstance() {
  commons_ = const_cast< ::DataCommon::CommonItemsCPP*>(&::DataCommon::CommonItemsCPP::default_instance());
  build_ = const_cast< ::ProtoBuilding::BuildingCPP*>(&::ProtoBuilding::BuildingCPP::default_instance());
}

BuildingUpResp::BuildingUpResp(const BuildingUpResp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ProtoBuilding.BuildingUpResp)
}

void BuildingUpResp::SharedCtor() {
  _cached_size_ = 0;
  commons_ = NULL;
  build_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BuildingUpResp::~BuildingUpResp() {
  // @@protoc_insertion_point(destructor:ProtoBuilding.BuildingUpResp)
  SharedDtor();
}

void BuildingUpResp::SharedDtor() {
  if (this != default_instance_) {
    delete commons_;
    delete build_;
  }
}

void BuildingUpResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BuildingUpResp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BuildingUpResp_descriptor_;
}

const BuildingUpResp& BuildingUpResp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoBuilding_2eproto();
  return *default_instance_;
}

BuildingUpResp* BuildingUpResp::default_instance_ = NULL;

BuildingUpResp* BuildingUpResp::New() const {
  return new BuildingUpResp;
}

void BuildingUpResp::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    if (has_commons()) {
      if (commons_ != NULL) commons_->::DataCommon::CommonItemsCPP::Clear();
    }
    if (has_build()) {
      if (build_ != NULL) build_->::ProtoBuilding::BuildingCPP::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool BuildingUpResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoBuilding.BuildingUpResp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .DataCommon.CommonItemsCPP commons = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_commons()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_build;
        break;
      }

      // required .ProtoBuilding.BuildingCPP build = 2;
      case 2: {
        if (tag == 18) {
         parse_build:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_build()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoBuilding.BuildingUpResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoBuilding.BuildingUpResp)
  return false;
#undef DO_
}

void BuildingUpResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoBuilding.BuildingUpResp)
  // required .DataCommon.CommonItemsCPP commons = 1;
  if (has_commons()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->commons(), output);
  }

  // required .ProtoBuilding.BuildingCPP build = 2;
  if (has_build()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->build(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoBuilding.BuildingUpResp)
}

::google::protobuf::uint8* BuildingUpResp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoBuilding.BuildingUpResp)
  // required .DataCommon.CommonItemsCPP commons = 1;
  if (has_commons()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->commons(), target);
  }

  // required .ProtoBuilding.BuildingCPP build = 2;
  if (has_build()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->build(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoBuilding.BuildingUpResp)
  return target;
}

int BuildingUpResp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .DataCommon.CommonItemsCPP commons = 1;
    if (has_commons()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->commons());
    }

    // required .ProtoBuilding.BuildingCPP build = 2;
    if (has_build()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->build());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BuildingUpResp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const BuildingUpResp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const BuildingUpResp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void BuildingUpResp::MergeFrom(const BuildingUpResp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_commons()) {
      mutable_commons()->::DataCommon::CommonItemsCPP::MergeFrom(from.commons());
    }
    if (from.has_build()) {
      mutable_build()->::ProtoBuilding::BuildingCPP::MergeFrom(from.build());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void BuildingUpResp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BuildingUpResp::CopyFrom(const BuildingUpResp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BuildingUpResp::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  if (has_commons()) {
    if (!this->commons().IsInitialized()) return false;
  }
  if (has_build()) {
    if (!this->build().IsInitialized()) return false;
  }
  return true;
}

void BuildingUpResp::Swap(BuildingUpResp* other) {
  if (other != this) {
    std::swap(commons_, other->commons_);
    std::swap(build_, other->build_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata BuildingUpResp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BuildingUpResp_descriptor_;
  metadata.reflection = BuildingUpResp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int UpgradeStarSpeedUpReq::kIdFieldNumber;
#endif  // !_MSC_VER

UpgradeStarSpeedUpReq::UpgradeStarSpeedUpReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoBuilding.UpgradeStarSpeedUpReq)
}

void UpgradeStarSpeedUpReq::InitAsDefaultInstance() {
}

UpgradeStarSpeedUpReq::UpgradeStarSpeedUpReq(const UpgradeStarSpeedUpReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ProtoBuilding.UpgradeStarSpeedUpReq)
}

void UpgradeStarSpeedUpReq::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

UpgradeStarSpeedUpReq::~UpgradeStarSpeedUpReq() {
  // @@protoc_insertion_point(destructor:ProtoBuilding.UpgradeStarSpeedUpReq)
  SharedDtor();
}

void UpgradeStarSpeedUpReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void UpgradeStarSpeedUpReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UpgradeStarSpeedUpReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UpgradeStarSpeedUpReq_descriptor_;
}

const UpgradeStarSpeedUpReq& UpgradeStarSpeedUpReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoBuilding_2eproto();
  return *default_instance_;
}

UpgradeStarSpeedUpReq* UpgradeStarSpeedUpReq::default_instance_ = NULL;

UpgradeStarSpeedUpReq* UpgradeStarSpeedUpReq::New() const {
  return new UpgradeStarSpeedUpReq;
}

void UpgradeStarSpeedUpReq::Clear() {
  id_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool UpgradeStarSpeedUpReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoBuilding.UpgradeStarSpeedUpReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoBuilding.UpgradeStarSpeedUpReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoBuilding.UpgradeStarSpeedUpReq)
  return false;
#undef DO_
}

void UpgradeStarSpeedUpReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoBuilding.UpgradeStarSpeedUpReq)
  // required uint32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoBuilding.UpgradeStarSpeedUpReq)
}

::google::protobuf::uint8* UpgradeStarSpeedUpReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoBuilding.UpgradeStarSpeedUpReq)
  // required uint32 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoBuilding.UpgradeStarSpeedUpReq)
  return target;
}

int UpgradeStarSpeedUpReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->id());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UpgradeStarSpeedUpReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const UpgradeStarSpeedUpReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const UpgradeStarSpeedUpReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void UpgradeStarSpeedUpReq::MergeFrom(const UpgradeStarSpeedUpReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void UpgradeStarSpeedUpReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpgradeStarSpeedUpReq::CopyFrom(const UpgradeStarSpeedUpReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpgradeStarSpeedUpReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void UpgradeStarSpeedUpReq::Swap(UpgradeStarSpeedUpReq* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata UpgradeStarSpeedUpReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UpgradeStarSpeedUpReq_descriptor_;
  metadata.reflection = UpgradeStarSpeedUpReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int UpgradeStarSpeedUpResp::kCommonsFieldNumber;
const int UpgradeStarSpeedUpResp::kEquipmentstarFieldNumber;
#endif  // !_MSC_VER

UpgradeStarSpeedUpResp::UpgradeStarSpeedUpResp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoBuilding.UpgradeStarSpeedUpResp)
}

void UpgradeStarSpeedUpResp::InitAsDefaultInstance() {
  commons_ = const_cast< ::DataCommon::CommonItemsCPP*>(&::DataCommon::CommonItemsCPP::default_instance());
  equipmentstar_ = const_cast< ::ProtoBuilding::EquipmentStarCPP*>(&::ProtoBuilding::EquipmentStarCPP::default_instance());
}

UpgradeStarSpeedUpResp::UpgradeStarSpeedUpResp(const UpgradeStarSpeedUpResp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ProtoBuilding.UpgradeStarSpeedUpResp)
}

void UpgradeStarSpeedUpResp::SharedCtor() {
  _cached_size_ = 0;
  commons_ = NULL;
  equipmentstar_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

UpgradeStarSpeedUpResp::~UpgradeStarSpeedUpResp() {
  // @@protoc_insertion_point(destructor:ProtoBuilding.UpgradeStarSpeedUpResp)
  SharedDtor();
}

void UpgradeStarSpeedUpResp::SharedDtor() {
  if (this != default_instance_) {
    delete commons_;
    delete equipmentstar_;
  }
}

void UpgradeStarSpeedUpResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UpgradeStarSpeedUpResp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UpgradeStarSpeedUpResp_descriptor_;
}

const UpgradeStarSpeedUpResp& UpgradeStarSpeedUpResp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoBuilding_2eproto();
  return *default_instance_;
}

UpgradeStarSpeedUpResp* UpgradeStarSpeedUpResp::default_instance_ = NULL;

UpgradeStarSpeedUpResp* UpgradeStarSpeedUpResp::New() const {
  return new UpgradeStarSpeedUpResp;
}

void UpgradeStarSpeedUpResp::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    if (has_commons()) {
      if (commons_ != NULL) commons_->::DataCommon::CommonItemsCPP::Clear();
    }
    if (has_equipmentstar()) {
      if (equipmentstar_ != NULL) equipmentstar_->::ProtoBuilding::EquipmentStarCPP::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool UpgradeStarSpeedUpResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoBuilding.UpgradeStarSpeedUpResp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .DataCommon.CommonItemsCPP commons = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_commons()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_equipmentstar;
        break;
      }

      // required .ProtoBuilding.EquipmentStarCPP equipmentstar = 2;
      case 2: {
        if (tag == 18) {
         parse_equipmentstar:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_equipmentstar()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoBuilding.UpgradeStarSpeedUpResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoBuilding.UpgradeStarSpeedUpResp)
  return false;
#undef DO_
}

void UpgradeStarSpeedUpResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoBuilding.UpgradeStarSpeedUpResp)
  // required .DataCommon.CommonItemsCPP commons = 1;
  if (has_commons()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->commons(), output);
  }

  // required .ProtoBuilding.EquipmentStarCPP equipmentstar = 2;
  if (has_equipmentstar()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->equipmentstar(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoBuilding.UpgradeStarSpeedUpResp)
}

::google::protobuf::uint8* UpgradeStarSpeedUpResp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoBuilding.UpgradeStarSpeedUpResp)
  // required .DataCommon.CommonItemsCPP commons = 1;
  if (has_commons()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->commons(), target);
  }

  // required .ProtoBuilding.EquipmentStarCPP equipmentstar = 2;
  if (has_equipmentstar()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->equipmentstar(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoBuilding.UpgradeStarSpeedUpResp)
  return target;
}

int UpgradeStarSpeedUpResp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .DataCommon.CommonItemsCPP commons = 1;
    if (has_commons()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->commons());
    }

    // required .ProtoBuilding.EquipmentStarCPP equipmentstar = 2;
    if (has_equipmentstar()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->equipmentstar());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UpgradeStarSpeedUpResp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const UpgradeStarSpeedUpResp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const UpgradeStarSpeedUpResp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void UpgradeStarSpeedUpResp::MergeFrom(const UpgradeStarSpeedUpResp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_commons()) {
      mutable_commons()->::DataCommon::CommonItemsCPP::MergeFrom(from.commons());
    }
    if (from.has_equipmentstar()) {
      mutable_equipmentstar()->::ProtoBuilding::EquipmentStarCPP::MergeFrom(from.equipmentstar());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void UpgradeStarSpeedUpResp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpgradeStarSpeedUpResp::CopyFrom(const UpgradeStarSpeedUpResp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpgradeStarSpeedUpResp::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  if (has_commons()) {
    if (!this->commons().IsInitialized()) return false;
  }
  if (has_equipmentstar()) {
    if (!this->equipmentstar().IsInitialized()) return false;
  }
  return true;
}

void UpgradeStarSpeedUpResp::Swap(UpgradeStarSpeedUpResp* other) {
  if (other != this) {
    std::swap(commons_, other->commons_);
    std::swap(equipmentstar_, other->equipmentstar_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata UpgradeStarSpeedUpResp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UpgradeStarSpeedUpResp_descriptor_;
  metadata.reflection = UpgradeStarSpeedUpResp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int RemoveBarrierReq::kIdFieldNumber;
#endif  // !_MSC_VER

RemoveBarrierReq::RemoveBarrierReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoBuilding.RemoveBarrierReq)
}

void RemoveBarrierReq::InitAsDefaultInstance() {
}

RemoveBarrierReq::RemoveBarrierReq(const RemoveBarrierReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ProtoBuilding.RemoveBarrierReq)
}

void RemoveBarrierReq::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RemoveBarrierReq::~RemoveBarrierReq() {
  // @@protoc_insertion_point(destructor:ProtoBuilding.RemoveBarrierReq)
  SharedDtor();
}

void RemoveBarrierReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void RemoveBarrierReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RemoveBarrierReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RemoveBarrierReq_descriptor_;
}

const RemoveBarrierReq& RemoveBarrierReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoBuilding_2eproto();
  return *default_instance_;
}

RemoveBarrierReq* RemoveBarrierReq::default_instance_ = NULL;

RemoveBarrierReq* RemoveBarrierReq::New() const {
  return new RemoveBarrierReq;
}

void RemoveBarrierReq::Clear() {
  id_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool RemoveBarrierReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoBuilding.RemoveBarrierReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoBuilding.RemoveBarrierReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoBuilding.RemoveBarrierReq)
  return false;
#undef DO_
}

void RemoveBarrierReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoBuilding.RemoveBarrierReq)
  // required uint32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoBuilding.RemoveBarrierReq)
}

::google::protobuf::uint8* RemoveBarrierReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoBuilding.RemoveBarrierReq)
  // required uint32 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoBuilding.RemoveBarrierReq)
  return target;
}

int RemoveBarrierReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->id());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RemoveBarrierReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const RemoveBarrierReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const RemoveBarrierReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void RemoveBarrierReq::MergeFrom(const RemoveBarrierReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void RemoveBarrierReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RemoveBarrierReq::CopyFrom(const RemoveBarrierReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RemoveBarrierReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void RemoveBarrierReq::Swap(RemoveBarrierReq* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata RemoveBarrierReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RemoveBarrierReq_descriptor_;
  metadata.reflection = RemoveBarrierReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int RemoveBarrierResp::kCommonsFieldNumber;
const int RemoveBarrierResp::kBarrierFieldNumber;
const int RemoveBarrierResp::kBarrieridFieldNumber;
#endif  // !_MSC_VER

RemoveBarrierResp::RemoveBarrierResp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoBuilding.RemoveBarrierResp)
}

void RemoveBarrierResp::InitAsDefaultInstance() {
  commons_ = const_cast< ::DataCommon::CommonItemsCPP*>(&::DataCommon::CommonItemsCPP::default_instance());
}

RemoveBarrierResp::RemoveBarrierResp(const RemoveBarrierResp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ProtoBuilding.RemoveBarrierResp)
}

void RemoveBarrierResp::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  commons_ = NULL;
  barrier_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  barrierid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RemoveBarrierResp::~RemoveBarrierResp() {
  // @@protoc_insertion_point(destructor:ProtoBuilding.RemoveBarrierResp)
  SharedDtor();
}

void RemoveBarrierResp::SharedDtor() {
  if (barrier_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete barrier_;
  }
  if (this != default_instance_) {
    delete commons_;
  }
}

void RemoveBarrierResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RemoveBarrierResp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RemoveBarrierResp_descriptor_;
}

const RemoveBarrierResp& RemoveBarrierResp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoBuilding_2eproto();
  return *default_instance_;
}

RemoveBarrierResp* RemoveBarrierResp::default_instance_ = NULL;

RemoveBarrierResp* RemoveBarrierResp::New() const {
  return new RemoveBarrierResp;
}

void RemoveBarrierResp::Clear() {
  if (_has_bits_[0 / 32] & 7) {
    if (has_commons()) {
      if (commons_ != NULL) commons_->::DataCommon::CommonItemsCPP::Clear();
    }
    if (has_barrier()) {
      if (barrier_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        barrier_->clear();
      }
    }
    barrierid_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool RemoveBarrierResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoBuilding.RemoveBarrierResp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .DataCommon.CommonItemsCPP commons = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_commons()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_barrier;
        break;
      }

      // required bytes barrier = 2;
      case 2: {
        if (tag == 18) {
         parse_barrier:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_barrier()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_barrierid;
        break;
      }

      // required uint32 barrierid = 3;
      case 3: {
        if (tag == 24) {
         parse_barrierid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &barrierid_)));
          set_has_barrierid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoBuilding.RemoveBarrierResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoBuilding.RemoveBarrierResp)
  return false;
#undef DO_
}

void RemoveBarrierResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoBuilding.RemoveBarrierResp)
  // required .DataCommon.CommonItemsCPP commons = 1;
  if (has_commons()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->commons(), output);
  }

  // required bytes barrier = 2;
  if (has_barrier()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->barrier(), output);
  }

  // required uint32 barrierid = 3;
  if (has_barrierid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->barrierid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoBuilding.RemoveBarrierResp)
}

::google::protobuf::uint8* RemoveBarrierResp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoBuilding.RemoveBarrierResp)
  // required .DataCommon.CommonItemsCPP commons = 1;
  if (has_commons()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->commons(), target);
  }

  // required bytes barrier = 2;
  if (has_barrier()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->barrier(), target);
  }

  // required uint32 barrierid = 3;
  if (has_barrierid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->barrierid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoBuilding.RemoveBarrierResp)
  return target;
}

int RemoveBarrierResp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .DataCommon.CommonItemsCPP commons = 1;
    if (has_commons()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->commons());
    }

    // required bytes barrier = 2;
    if (has_barrier()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->barrier());
    }

    // required uint32 barrierid = 3;
    if (has_barrierid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->barrierid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RemoveBarrierResp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const RemoveBarrierResp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const RemoveBarrierResp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void RemoveBarrierResp::MergeFrom(const RemoveBarrierResp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_commons()) {
      mutable_commons()->::DataCommon::CommonItemsCPP::MergeFrom(from.commons());
    }
    if (from.has_barrier()) {
      set_barrier(from.barrier());
    }
    if (from.has_barrierid()) {
      set_barrierid(from.barrierid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void RemoveBarrierResp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RemoveBarrierResp::CopyFrom(const RemoveBarrierResp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RemoveBarrierResp::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  if (has_commons()) {
    if (!this->commons().IsInitialized()) return false;
  }
  return true;
}

void RemoveBarrierResp::Swap(RemoveBarrierResp* other) {
  if (other != this) {
    std::swap(commons_, other->commons_);
    std::swap(barrier_, other->barrier_);
    std::swap(barrierid_, other->barrierid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata RemoveBarrierResp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RemoveBarrierResp_descriptor_;
  metadata.reflection = RemoveBarrierResp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int SellDecorateReq::kUdFieldNumber;
#endif  // !_MSC_VER

SellDecorateReq::SellDecorateReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoBuilding.SellDecorateReq)
}

void SellDecorateReq::InitAsDefaultInstance() {
}

SellDecorateReq::SellDecorateReq(const SellDecorateReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ProtoBuilding.SellDecorateReq)
}

void SellDecorateReq::SharedCtor() {
  _cached_size_ = 0;
  ud_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SellDecorateReq::~SellDecorateReq() {
  // @@protoc_insertion_point(destructor:ProtoBuilding.SellDecorateReq)
  SharedDtor();
}

void SellDecorateReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void SellDecorateReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SellDecorateReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SellDecorateReq_descriptor_;
}

const SellDecorateReq& SellDecorateReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoBuilding_2eproto();
  return *default_instance_;
}

SellDecorateReq* SellDecorateReq::default_instance_ = NULL;

SellDecorateReq* SellDecorateReq::New() const {
  return new SellDecorateReq;
}

void SellDecorateReq::Clear() {
  ud_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool SellDecorateReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoBuilding.SellDecorateReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 ud = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ud_)));
          set_has_ud();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoBuilding.SellDecorateReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoBuilding.SellDecorateReq)
  return false;
#undef DO_
}

void SellDecorateReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoBuilding.SellDecorateReq)
  // required uint32 ud = 1;
  if (has_ud()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->ud(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoBuilding.SellDecorateReq)
}

::google::protobuf::uint8* SellDecorateReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoBuilding.SellDecorateReq)
  // required uint32 ud = 1;
  if (has_ud()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->ud(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoBuilding.SellDecorateReq)
  return target;
}

int SellDecorateReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 ud = 1;
    if (has_ud()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->ud());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SellDecorateReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const SellDecorateReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const SellDecorateReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SellDecorateReq::MergeFrom(const SellDecorateReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_ud()) {
      set_ud(from.ud());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void SellDecorateReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SellDecorateReq::CopyFrom(const SellDecorateReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SellDecorateReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void SellDecorateReq::Swap(SellDecorateReq* other) {
  if (other != this) {
    std::swap(ud_, other->ud_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata SellDecorateReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SellDecorateReq_descriptor_;
  metadata.reflection = SellDecorateReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int SellDecorateResq::kCommonsFieldNumber;
const int SellDecorateResq::kUdFieldNumber;
#endif  // !_MSC_VER

SellDecorateResq::SellDecorateResq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoBuilding.SellDecorateResq)
}

void SellDecorateResq::InitAsDefaultInstance() {
  commons_ = const_cast< ::DataCommon::CommonItemsCPP*>(&::DataCommon::CommonItemsCPP::default_instance());
}

SellDecorateResq::SellDecorateResq(const SellDecorateResq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ProtoBuilding.SellDecorateResq)
}

void SellDecorateResq::SharedCtor() {
  _cached_size_ = 0;
  commons_ = NULL;
  ud_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SellDecorateResq::~SellDecorateResq() {
  // @@protoc_insertion_point(destructor:ProtoBuilding.SellDecorateResq)
  SharedDtor();
}

void SellDecorateResq::SharedDtor() {
  if (this != default_instance_) {
    delete commons_;
  }
}

void SellDecorateResq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SellDecorateResq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SellDecorateResq_descriptor_;
}

const SellDecorateResq& SellDecorateResq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoBuilding_2eproto();
  return *default_instance_;
}

SellDecorateResq* SellDecorateResq::default_instance_ = NULL;

SellDecorateResq* SellDecorateResq::New() const {
  return new SellDecorateResq;
}

void SellDecorateResq::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    if (has_commons()) {
      if (commons_ != NULL) commons_->::DataCommon::CommonItemsCPP::Clear();
    }
    ud_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool SellDecorateResq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoBuilding.SellDecorateResq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .DataCommon.CommonItemsCPP commons = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_commons()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_ud;
        break;
      }

      // required uint32 ud = 2;
      case 2: {
        if (tag == 16) {
         parse_ud:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ud_)));
          set_has_ud();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoBuilding.SellDecorateResq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoBuilding.SellDecorateResq)
  return false;
#undef DO_
}

void SellDecorateResq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoBuilding.SellDecorateResq)
  // required .DataCommon.CommonItemsCPP commons = 1;
  if (has_commons()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->commons(), output);
  }

  // required uint32 ud = 2;
  if (has_ud()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->ud(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoBuilding.SellDecorateResq)
}

::google::protobuf::uint8* SellDecorateResq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoBuilding.SellDecorateResq)
  // required .DataCommon.CommonItemsCPP commons = 1;
  if (has_commons()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->commons(), target);
  }

  // required uint32 ud = 2;
  if (has_ud()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->ud(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoBuilding.SellDecorateResq)
  return target;
}

int SellDecorateResq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .DataCommon.CommonItemsCPP commons = 1;
    if (has_commons()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->commons());
    }

    // required uint32 ud = 2;
    if (has_ud()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->ud());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SellDecorateResq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const SellDecorateResq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const SellDecorateResq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SellDecorateResq::MergeFrom(const SellDecorateResq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_commons()) {
      mutable_commons()->::DataCommon::CommonItemsCPP::MergeFrom(from.commons());
    }
    if (from.has_ud()) {
      set_ud(from.ud());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void SellDecorateResq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SellDecorateResq::CopyFrom(const SellDecorateResq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SellDecorateResq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  if (has_commons()) {
    if (!this->commons().IsInitialized()) return false;
  }
  return true;
}

void SellDecorateResq::Swap(SellDecorateResq* other) {
  if (other != this) {
    std::swap(commons_, other->commons_);
    std::swap(ud_, other->ud_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata SellDecorateResq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SellDecorateResq_descriptor_;
  metadata.reflection = SellDecorateResq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ExpandMapReq::kIdFieldNumber;
#endif  // !_MSC_VER

ExpandMapReq::ExpandMapReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoBuilding.ExpandMapReq)
}

void ExpandMapReq::InitAsDefaultInstance() {
}

ExpandMapReq::ExpandMapReq(const ExpandMapReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ProtoBuilding.ExpandMapReq)
}

void ExpandMapReq::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ExpandMapReq::~ExpandMapReq() {
  // @@protoc_insertion_point(destructor:ProtoBuilding.ExpandMapReq)
  SharedDtor();
}

void ExpandMapReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ExpandMapReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ExpandMapReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ExpandMapReq_descriptor_;
}

const ExpandMapReq& ExpandMapReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoBuilding_2eproto();
  return *default_instance_;
}

ExpandMapReq* ExpandMapReq::default_instance_ = NULL;

ExpandMapReq* ExpandMapReq::New() const {
  return new ExpandMapReq;
}

void ExpandMapReq::Clear() {
  id_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ExpandMapReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoBuilding.ExpandMapReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoBuilding.ExpandMapReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoBuilding.ExpandMapReq)
  return false;
#undef DO_
}

void ExpandMapReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoBuilding.ExpandMapReq)
  // required uint32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoBuilding.ExpandMapReq)
}

::google::protobuf::uint8* ExpandMapReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoBuilding.ExpandMapReq)
  // required uint32 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoBuilding.ExpandMapReq)
  return target;
}

int ExpandMapReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->id());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ExpandMapReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ExpandMapReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ExpandMapReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ExpandMapReq::MergeFrom(const ExpandMapReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ExpandMapReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ExpandMapReq::CopyFrom(const ExpandMapReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ExpandMapReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void ExpandMapReq::Swap(ExpandMapReq* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ExpandMapReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ExpandMapReq_descriptor_;
  metadata.reflection = ExpandMapReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ExpandMapResp::kCommonsFieldNumber;
const int ExpandMapResp::kMapstausFieldNumber;
#endif  // !_MSC_VER

ExpandMapResp::ExpandMapResp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoBuilding.ExpandMapResp)
}

void ExpandMapResp::InitAsDefaultInstance() {
  commons_ = const_cast< ::DataCommon::CommonItemsCPP*>(&::DataCommon::CommonItemsCPP::default_instance());
}

ExpandMapResp::ExpandMapResp(const ExpandMapResp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ProtoBuilding.ExpandMapResp)
}

void ExpandMapResp::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  commons_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ExpandMapResp::~ExpandMapResp() {
  // @@protoc_insertion_point(destructor:ProtoBuilding.ExpandMapResp)
  SharedDtor();
}

void ExpandMapResp::SharedDtor() {
  if (this != default_instance_) {
    delete commons_;
  }
}

void ExpandMapResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ExpandMapResp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ExpandMapResp_descriptor_;
}

const ExpandMapResp& ExpandMapResp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoBuilding_2eproto();
  return *default_instance_;
}

ExpandMapResp* ExpandMapResp::default_instance_ = NULL;

ExpandMapResp* ExpandMapResp::New() const {
  return new ExpandMapResp;
}

void ExpandMapResp::Clear() {
  if (has_commons()) {
    if (commons_ != NULL) commons_->::DataCommon::CommonItemsCPP::Clear();
  }
  mapstaus_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ExpandMapResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoBuilding.ExpandMapResp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .DataCommon.CommonItemsCPP commons = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_commons()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_mapstaus;
        break;
      }

      // repeated bytes mapstaus = 2;
      case 2: {
        if (tag == 18) {
         parse_mapstaus:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_mapstaus()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_mapstaus;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoBuilding.ExpandMapResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoBuilding.ExpandMapResp)
  return false;
#undef DO_
}

void ExpandMapResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoBuilding.ExpandMapResp)
  // required .DataCommon.CommonItemsCPP commons = 1;
  if (has_commons()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->commons(), output);
  }

  // repeated bytes mapstaus = 2;
  for (int i = 0; i < this->mapstaus_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      2, this->mapstaus(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoBuilding.ExpandMapResp)
}

::google::protobuf::uint8* ExpandMapResp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoBuilding.ExpandMapResp)
  // required .DataCommon.CommonItemsCPP commons = 1;
  if (has_commons()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->commons(), target);
  }

  // repeated bytes mapstaus = 2;
  for (int i = 0; i < this->mapstaus_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(2, this->mapstaus(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoBuilding.ExpandMapResp)
  return target;
}

int ExpandMapResp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .DataCommon.CommonItemsCPP commons = 1;
    if (has_commons()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->commons());
    }

  }
  // repeated bytes mapstaus = 2;
  total_size += 1 * this->mapstaus_size();
  for (int i = 0; i < this->mapstaus_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->mapstaus(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ExpandMapResp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ExpandMapResp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ExpandMapResp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ExpandMapResp::MergeFrom(const ExpandMapResp& from) {
  GOOGLE_CHECK_NE(&from, this);
  mapstaus_.MergeFrom(from.mapstaus_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_commons()) {
      mutable_commons()->::DataCommon::CommonItemsCPP::MergeFrom(from.commons());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ExpandMapResp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ExpandMapResp::CopyFrom(const ExpandMapResp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ExpandMapResp::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (has_commons()) {
    if (!this->commons().IsInitialized()) return false;
  }
  return true;
}

void ExpandMapResp::Swap(ExpandMapResp* other) {
  if (other != this) {
    std::swap(commons_, other->commons_);
    mapstaus_.Swap(&other->mapstaus_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ExpandMapResp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ExpandMapResp_descriptor_;
  metadata.reflection = ExpandMapResp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ViewAdReduceBuildTimeReq::kUdFieldNumber;
#endif  // !_MSC_VER

ViewAdReduceBuildTimeReq::ViewAdReduceBuildTimeReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoBuilding.ViewAdReduceBuildTimeReq)
}

void ViewAdReduceBuildTimeReq::InitAsDefaultInstance() {
}

ViewAdReduceBuildTimeReq::ViewAdReduceBuildTimeReq(const ViewAdReduceBuildTimeReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ProtoBuilding.ViewAdReduceBuildTimeReq)
}

void ViewAdReduceBuildTimeReq::SharedCtor() {
  _cached_size_ = 0;
  ud_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ViewAdReduceBuildTimeReq::~ViewAdReduceBuildTimeReq() {
  // @@protoc_insertion_point(destructor:ProtoBuilding.ViewAdReduceBuildTimeReq)
  SharedDtor();
}

void ViewAdReduceBuildTimeReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ViewAdReduceBuildTimeReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ViewAdReduceBuildTimeReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ViewAdReduceBuildTimeReq_descriptor_;
}

const ViewAdReduceBuildTimeReq& ViewAdReduceBuildTimeReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoBuilding_2eproto();
  return *default_instance_;
}

ViewAdReduceBuildTimeReq* ViewAdReduceBuildTimeReq::default_instance_ = NULL;

ViewAdReduceBuildTimeReq* ViewAdReduceBuildTimeReq::New() const {
  return new ViewAdReduceBuildTimeReq;
}

void ViewAdReduceBuildTimeReq::Clear() {
  ud_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ViewAdReduceBuildTimeReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoBuilding.ViewAdReduceBuildTimeReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 ud = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ud_)));
          set_has_ud();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoBuilding.ViewAdReduceBuildTimeReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoBuilding.ViewAdReduceBuildTimeReq)
  return false;
#undef DO_
}

void ViewAdReduceBuildTimeReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoBuilding.ViewAdReduceBuildTimeReq)
  // required uint32 ud = 1;
  if (has_ud()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->ud(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoBuilding.ViewAdReduceBuildTimeReq)
}

::google::protobuf::uint8* ViewAdReduceBuildTimeReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoBuilding.ViewAdReduceBuildTimeReq)
  // required uint32 ud = 1;
  if (has_ud()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->ud(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoBuilding.ViewAdReduceBuildTimeReq)
  return target;
}

int ViewAdReduceBuildTimeReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 ud = 1;
    if (has_ud()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->ud());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ViewAdReduceBuildTimeReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ViewAdReduceBuildTimeReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ViewAdReduceBuildTimeReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ViewAdReduceBuildTimeReq::MergeFrom(const ViewAdReduceBuildTimeReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_ud()) {
      set_ud(from.ud());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ViewAdReduceBuildTimeReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ViewAdReduceBuildTimeReq::CopyFrom(const ViewAdReduceBuildTimeReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ViewAdReduceBuildTimeReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void ViewAdReduceBuildTimeReq::Swap(ViewAdReduceBuildTimeReq* other) {
  if (other != this) {
    std::swap(ud_, other->ud_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ViewAdReduceBuildTimeReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ViewAdReduceBuildTimeReq_descriptor_;
  metadata.reflection = ViewAdReduceBuildTimeReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ViewAdReduceBuildTimeResp::kRemainCntFieldNumber;
const int ViewAdReduceBuildTimeResp::kBuildingFieldNumber;
#endif  // !_MSC_VER

ViewAdReduceBuildTimeResp::ViewAdReduceBuildTimeResp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoBuilding.ViewAdReduceBuildTimeResp)
}

void ViewAdReduceBuildTimeResp::InitAsDefaultInstance() {
  building_ = const_cast< ::ProtoBuilding::BuildingCPP*>(&::ProtoBuilding::BuildingCPP::default_instance());
}

ViewAdReduceBuildTimeResp::ViewAdReduceBuildTimeResp(const ViewAdReduceBuildTimeResp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ProtoBuilding.ViewAdReduceBuildTimeResp)
}

void ViewAdReduceBuildTimeResp::SharedCtor() {
  _cached_size_ = 0;
  remaincnt_ = 0u;
  building_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ViewAdReduceBuildTimeResp::~ViewAdReduceBuildTimeResp() {
  // @@protoc_insertion_point(destructor:ProtoBuilding.ViewAdReduceBuildTimeResp)
  SharedDtor();
}

void ViewAdReduceBuildTimeResp::SharedDtor() {
  if (this != default_instance_) {
    delete building_;
  }
}

void ViewAdReduceBuildTimeResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ViewAdReduceBuildTimeResp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ViewAdReduceBuildTimeResp_descriptor_;
}

const ViewAdReduceBuildTimeResp& ViewAdReduceBuildTimeResp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoBuilding_2eproto();
  return *default_instance_;
}

ViewAdReduceBuildTimeResp* ViewAdReduceBuildTimeResp::default_instance_ = NULL;

ViewAdReduceBuildTimeResp* ViewAdReduceBuildTimeResp::New() const {
  return new ViewAdReduceBuildTimeResp;
}

void ViewAdReduceBuildTimeResp::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    remaincnt_ = 0u;
    if (has_building()) {
      if (building_ != NULL) building_->::ProtoBuilding::BuildingCPP::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ViewAdReduceBuildTimeResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoBuilding.ViewAdReduceBuildTimeResp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 remainCnt = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &remaincnt_)));
          set_has_remaincnt();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_building;
        break;
      }

      // required .ProtoBuilding.BuildingCPP building = 2;
      case 2: {
        if (tag == 18) {
         parse_building:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_building()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoBuilding.ViewAdReduceBuildTimeResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoBuilding.ViewAdReduceBuildTimeResp)
  return false;
#undef DO_
}

void ViewAdReduceBuildTimeResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoBuilding.ViewAdReduceBuildTimeResp)
  // required uint32 remainCnt = 1;
  if (has_remaincnt()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->remaincnt(), output);
  }

  // required .ProtoBuilding.BuildingCPP building = 2;
  if (has_building()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->building(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoBuilding.ViewAdReduceBuildTimeResp)
}

::google::protobuf::uint8* ViewAdReduceBuildTimeResp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoBuilding.ViewAdReduceBuildTimeResp)
  // required uint32 remainCnt = 1;
  if (has_remaincnt()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->remaincnt(), target);
  }

  // required .ProtoBuilding.BuildingCPP building = 2;
  if (has_building()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->building(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoBuilding.ViewAdReduceBuildTimeResp)
  return target;
}

int ViewAdReduceBuildTimeResp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 remainCnt = 1;
    if (has_remaincnt()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->remaincnt());
    }

    // required .ProtoBuilding.BuildingCPP building = 2;
    if (has_building()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->building());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ViewAdReduceBuildTimeResp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ViewAdReduceBuildTimeResp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ViewAdReduceBuildTimeResp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ViewAdReduceBuildTimeResp::MergeFrom(const ViewAdReduceBuildTimeResp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_remaincnt()) {
      set_remaincnt(from.remaincnt());
    }
    if (from.has_building()) {
      mutable_building()->::ProtoBuilding::BuildingCPP::MergeFrom(from.building());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ViewAdReduceBuildTimeResp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ViewAdReduceBuildTimeResp::CopyFrom(const ViewAdReduceBuildTimeResp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ViewAdReduceBuildTimeResp::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  if (has_building()) {
    if (!this->building().IsInitialized()) return false;
  }
  return true;
}

void ViewAdReduceBuildTimeResp::Swap(ViewAdReduceBuildTimeResp* other) {
  if (other != this) {
    std::swap(remaincnt_, other->remaincnt_);
    std::swap(building_, other->building_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ViewAdReduceBuildTimeResp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ViewAdReduceBuildTimeResp_descriptor_;
  metadata.reflection = ViewAdReduceBuildTimeResp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

GetViewAdReduceBuildTimeReq::GetViewAdReduceBuildTimeReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoBuilding.GetViewAdReduceBuildTimeReq)
}

void GetViewAdReduceBuildTimeReq::InitAsDefaultInstance() {
}

GetViewAdReduceBuildTimeReq::GetViewAdReduceBuildTimeReq(const GetViewAdReduceBuildTimeReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ProtoBuilding.GetViewAdReduceBuildTimeReq)
}

void GetViewAdReduceBuildTimeReq::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GetViewAdReduceBuildTimeReq::~GetViewAdReduceBuildTimeReq() {
  // @@protoc_insertion_point(destructor:ProtoBuilding.GetViewAdReduceBuildTimeReq)
  SharedDtor();
}

void GetViewAdReduceBuildTimeReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GetViewAdReduceBuildTimeReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetViewAdReduceBuildTimeReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetViewAdReduceBuildTimeReq_descriptor_;
}

const GetViewAdReduceBuildTimeReq& GetViewAdReduceBuildTimeReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoBuilding_2eproto();
  return *default_instance_;
}

GetViewAdReduceBuildTimeReq* GetViewAdReduceBuildTimeReq::default_instance_ = NULL;

GetViewAdReduceBuildTimeReq* GetViewAdReduceBuildTimeReq::New() const {
  return new GetViewAdReduceBuildTimeReq;
}

void GetViewAdReduceBuildTimeReq::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GetViewAdReduceBuildTimeReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoBuilding.GetViewAdReduceBuildTimeReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoBuilding.GetViewAdReduceBuildTimeReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoBuilding.GetViewAdReduceBuildTimeReq)
  return false;
#undef DO_
}

void GetViewAdReduceBuildTimeReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoBuilding.GetViewAdReduceBuildTimeReq)
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoBuilding.GetViewAdReduceBuildTimeReq)
}

::google::protobuf::uint8* GetViewAdReduceBuildTimeReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoBuilding.GetViewAdReduceBuildTimeReq)
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoBuilding.GetViewAdReduceBuildTimeReq)
  return target;
}

int GetViewAdReduceBuildTimeReq::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetViewAdReduceBuildTimeReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GetViewAdReduceBuildTimeReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GetViewAdReduceBuildTimeReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GetViewAdReduceBuildTimeReq::MergeFrom(const GetViewAdReduceBuildTimeReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GetViewAdReduceBuildTimeReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetViewAdReduceBuildTimeReq::CopyFrom(const GetViewAdReduceBuildTimeReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetViewAdReduceBuildTimeReq::IsInitialized() const {

  return true;
}

void GetViewAdReduceBuildTimeReq::Swap(GetViewAdReduceBuildTimeReq* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GetViewAdReduceBuildTimeReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetViewAdReduceBuildTimeReq_descriptor_;
  metadata.reflection = GetViewAdReduceBuildTimeReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GetViewAdReduceBuildTimeResp::kRemainCntFieldNumber;
#endif  // !_MSC_VER

GetViewAdReduceBuildTimeResp::GetViewAdReduceBuildTimeResp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoBuilding.GetViewAdReduceBuildTimeResp)
}

void GetViewAdReduceBuildTimeResp::InitAsDefaultInstance() {
}

GetViewAdReduceBuildTimeResp::GetViewAdReduceBuildTimeResp(const GetViewAdReduceBuildTimeResp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ProtoBuilding.GetViewAdReduceBuildTimeResp)
}

void GetViewAdReduceBuildTimeResp::SharedCtor() {
  _cached_size_ = 0;
  remaincnt_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GetViewAdReduceBuildTimeResp::~GetViewAdReduceBuildTimeResp() {
  // @@protoc_insertion_point(destructor:ProtoBuilding.GetViewAdReduceBuildTimeResp)
  SharedDtor();
}

void GetViewAdReduceBuildTimeResp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GetViewAdReduceBuildTimeResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetViewAdReduceBuildTimeResp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetViewAdReduceBuildTimeResp_descriptor_;
}

const GetViewAdReduceBuildTimeResp& GetViewAdReduceBuildTimeResp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoBuilding_2eproto();
  return *default_instance_;
}

GetViewAdReduceBuildTimeResp* GetViewAdReduceBuildTimeResp::default_instance_ = NULL;

GetViewAdReduceBuildTimeResp* GetViewAdReduceBuildTimeResp::New() const {
  return new GetViewAdReduceBuildTimeResp;
}

void GetViewAdReduceBuildTimeResp::Clear() {
  remaincnt_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GetViewAdReduceBuildTimeResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoBuilding.GetViewAdReduceBuildTimeResp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 remainCnt = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &remaincnt_)));
          set_has_remaincnt();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoBuilding.GetViewAdReduceBuildTimeResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoBuilding.GetViewAdReduceBuildTimeResp)
  return false;
#undef DO_
}

void GetViewAdReduceBuildTimeResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoBuilding.GetViewAdReduceBuildTimeResp)
  // required uint32 remainCnt = 1;
  if (has_remaincnt()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->remaincnt(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoBuilding.GetViewAdReduceBuildTimeResp)
}

::google::protobuf::uint8* GetViewAdReduceBuildTimeResp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoBuilding.GetViewAdReduceBuildTimeResp)
  // required uint32 remainCnt = 1;
  if (has_remaincnt()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->remaincnt(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoBuilding.GetViewAdReduceBuildTimeResp)
  return target;
}

int GetViewAdReduceBuildTimeResp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 remainCnt = 1;
    if (has_remaincnt()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->remaincnt());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetViewAdReduceBuildTimeResp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GetViewAdReduceBuildTimeResp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GetViewAdReduceBuildTimeResp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GetViewAdReduceBuildTimeResp::MergeFrom(const GetViewAdReduceBuildTimeResp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_remaincnt()) {
      set_remaincnt(from.remaincnt());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GetViewAdReduceBuildTimeResp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetViewAdReduceBuildTimeResp::CopyFrom(const GetViewAdReduceBuildTimeResp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetViewAdReduceBuildTimeResp::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void GetViewAdReduceBuildTimeResp::Swap(GetViewAdReduceBuildTimeResp* other) {
  if (other != this) {
    std::swap(remaincnt_, other->remaincnt_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GetViewAdReduceBuildTimeResp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetViewAdReduceBuildTimeResp_descriptor_;
  metadata.reflection = GetViewAdReduceBuildTimeResp_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace ProtoBuilding

// @@protoc_insertion_point(global_scope)
