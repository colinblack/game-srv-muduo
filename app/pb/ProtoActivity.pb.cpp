// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ProtoActivity.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "ProtoActivity.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace ProtoActivity {

namespace {

const ::google::protobuf::Descriptor* GameAcitivityCPP_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GameAcitivityCPP_reflection_ = NULL;
const ::google::protobuf::Descriptor* GameAcitivityAllCPP_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GameAcitivityAllCPP_reflection_ = NULL;
const ::google::protobuf::Descriptor* GameAcitivityRecharge_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GameAcitivityRecharge_reflection_ = NULL;
const ::google::protobuf::Descriptor* GameAcitivityStatusReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GameAcitivityStatusReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* GameAcitivityStatusResp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GameAcitivityStatusResp_reflection_ = NULL;
const ::google::protobuf::Descriptor* FundPurchaseReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  FundPurchaseReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* FundPurchaseResp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  FundPurchaseResp_reflection_ = NULL;
const ::google::protobuf::Descriptor* RewardFundGiftReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RewardFundGiftReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* RewardFundGiftResp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RewardFundGiftResp_reflection_ = NULL;
const ::google::protobuf::Descriptor* PushAutoRewardFundMsg_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PushAutoRewardFundMsg_reflection_ = NULL;
const ::google::protobuf::Descriptor* Reward4399RechargeGiftReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Reward4399RechargeGiftReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* Reward4399RechargeGiftResp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Reward4399RechargeGiftResp_reflection_ = NULL;
const ::google::protobuf::Descriptor* GameAcitivity4399Recharge_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GameAcitivity4399Recharge_reflection_ = NULL;
const ::google::protobuf::Descriptor* Reward4399DailyGiftReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Reward4399DailyGiftReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* Reward4399DailyGiftResp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Reward4399DailyGiftResp_reflection_ = NULL;
const ::google::protobuf::Descriptor* GameAcitivity4399Daily_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GameAcitivity4399Daily_reflection_ = NULL;
const ::google::protobuf::Descriptor* UseCardReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UseCardReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* UseCardResp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UseCardResp_reflection_ = NULL;
const ::google::protobuf::Descriptor* ShareFriendCPP_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ShareFriendCPP_reflection_ = NULL;
const ::google::protobuf::Descriptor* NewShareCPP_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  NewShareCPP_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetNewShareInfoReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetNewShareInfoReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetNewShareInfoResp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetNewShareInfoResp_reflection_ = NULL;
const ::google::protobuf::Descriptor* NewShareReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  NewShareReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* NewShareResp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  NewShareResp_reflection_ = NULL;
const ::google::protobuf::Descriptor* RewardNewShareReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RewardNewShareReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* RewardNewShareResp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RewardNewShareResp_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_ProtoActivity_2eproto() {
  protobuf_AddDesc_ProtoActivity_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "ProtoActivity.proto");
  GOOGLE_CHECK(file != NULL);
  GameAcitivityCPP_descriptor_ = file->message_type(0);
  static const int GameAcitivityCPP_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GameAcitivityCPP, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GameAcitivityCPP, version_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GameAcitivityCPP, actdata_),
  };
  GameAcitivityCPP_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GameAcitivityCPP_descriptor_,
      GameAcitivityCPP::default_instance_,
      GameAcitivityCPP_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GameAcitivityCPP, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GameAcitivityCPP, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GameAcitivityCPP));
  GameAcitivityAllCPP_descriptor_ = file->message_type(1);
  static const int GameAcitivityAllCPP_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GameAcitivityAllCPP, activities_),
  };
  GameAcitivityAllCPP_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GameAcitivityAllCPP_descriptor_,
      GameAcitivityAllCPP::default_instance_,
      GameAcitivityAllCPP_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GameAcitivityAllCPP, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GameAcitivityAllCPP, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GameAcitivityAllCPP));
  GameAcitivityRecharge_descriptor_ = file->message_type(2);
  static const int GameAcitivityRecharge_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GameAcitivityRecharge, data_),
  };
  GameAcitivityRecharge_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GameAcitivityRecharge_descriptor_,
      GameAcitivityRecharge::default_instance_,
      GameAcitivityRecharge_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GameAcitivityRecharge, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GameAcitivityRecharge, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GameAcitivityRecharge));
  GameAcitivityStatusReq_descriptor_ = file->message_type(3);
  static const int GameAcitivityStatusReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GameAcitivityStatusReq, id_),
  };
  GameAcitivityStatusReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GameAcitivityStatusReq_descriptor_,
      GameAcitivityStatusReq::default_instance_,
      GameAcitivityStatusReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GameAcitivityStatusReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GameAcitivityStatusReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GameAcitivityStatusReq));
  GameAcitivityStatusResp_descriptor_ = file->message_type(4);
  static const int GameAcitivityStatusResp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GameAcitivityStatusResp, status_),
  };
  GameAcitivityStatusResp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GameAcitivityStatusResp_descriptor_,
      GameAcitivityStatusResp::default_instance_,
      GameAcitivityStatusResp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GameAcitivityStatusResp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GameAcitivityStatusResp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GameAcitivityStatusResp));
  FundPurchaseReq_descriptor_ = file->message_type(5);
  static const int FundPurchaseReq_offsets_[1] = {
  };
  FundPurchaseReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      FundPurchaseReq_descriptor_,
      FundPurchaseReq::default_instance_,
      FundPurchaseReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FundPurchaseReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FundPurchaseReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(FundPurchaseReq));
  FundPurchaseResp_descriptor_ = file->message_type(6);
  static const int FundPurchaseResp_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FundPurchaseResp, fundactivity_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FundPurchaseResp, commons_),
  };
  FundPurchaseResp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      FundPurchaseResp_descriptor_,
      FundPurchaseResp::default_instance_,
      FundPurchaseResp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FundPurchaseResp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FundPurchaseResp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(FundPurchaseResp));
  RewardFundGiftReq_descriptor_ = file->message_type(7);
  static const int RewardFundGiftReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RewardFundGiftReq, index_),
  };
  RewardFundGiftReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      RewardFundGiftReq_descriptor_,
      RewardFundGiftReq::default_instance_,
      RewardFundGiftReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RewardFundGiftReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RewardFundGiftReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(RewardFundGiftReq));
  RewardFundGiftResp_descriptor_ = file->message_type(8);
  static const int RewardFundGiftResp_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RewardFundGiftResp, fundactivity_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RewardFundGiftResp, commons_),
  };
  RewardFundGiftResp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      RewardFundGiftResp_descriptor_,
      RewardFundGiftResp::default_instance_,
      RewardFundGiftResp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RewardFundGiftResp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RewardFundGiftResp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(RewardFundGiftResp));
  PushAutoRewardFundMsg_descriptor_ = file->message_type(9);
  static const int PushAutoRewardFundMsg_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PushAutoRewardFundMsg, commons_),
  };
  PushAutoRewardFundMsg_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PushAutoRewardFundMsg_descriptor_,
      PushAutoRewardFundMsg::default_instance_,
      PushAutoRewardFundMsg_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PushAutoRewardFundMsg, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PushAutoRewardFundMsg, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PushAutoRewardFundMsg));
  Reward4399RechargeGiftReq_descriptor_ = file->message_type(10);
  static const int Reward4399RechargeGiftReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Reward4399RechargeGiftReq, index_),
  };
  Reward4399RechargeGiftReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Reward4399RechargeGiftReq_descriptor_,
      Reward4399RechargeGiftReq::default_instance_,
      Reward4399RechargeGiftReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Reward4399RechargeGiftReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Reward4399RechargeGiftReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Reward4399RechargeGiftReq));
  Reward4399RechargeGiftResp_descriptor_ = file->message_type(11);
  static const int Reward4399RechargeGiftResp_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Reward4399RechargeGiftResp, rechargeactivity_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Reward4399RechargeGiftResp, commons_),
  };
  Reward4399RechargeGiftResp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Reward4399RechargeGiftResp_descriptor_,
      Reward4399RechargeGiftResp::default_instance_,
      Reward4399RechargeGiftResp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Reward4399RechargeGiftResp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Reward4399RechargeGiftResp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Reward4399RechargeGiftResp));
  GameAcitivity4399Recharge_descriptor_ = file->message_type(12);
  static const int GameAcitivity4399Recharge_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GameAcitivity4399Recharge, data_),
  };
  GameAcitivity4399Recharge_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GameAcitivity4399Recharge_descriptor_,
      GameAcitivity4399Recharge::default_instance_,
      GameAcitivity4399Recharge_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GameAcitivity4399Recharge, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GameAcitivity4399Recharge, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GameAcitivity4399Recharge));
  Reward4399DailyGiftReq_descriptor_ = file->message_type(13);
  static const int Reward4399DailyGiftReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Reward4399DailyGiftReq, index_),
  };
  Reward4399DailyGiftReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Reward4399DailyGiftReq_descriptor_,
      Reward4399DailyGiftReq::default_instance_,
      Reward4399DailyGiftReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Reward4399DailyGiftReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Reward4399DailyGiftReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Reward4399DailyGiftReq));
  Reward4399DailyGiftResp_descriptor_ = file->message_type(14);
  static const int Reward4399DailyGiftResp_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Reward4399DailyGiftResp, rechargeactivity_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Reward4399DailyGiftResp, commons_),
  };
  Reward4399DailyGiftResp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Reward4399DailyGiftResp_descriptor_,
      Reward4399DailyGiftResp::default_instance_,
      Reward4399DailyGiftResp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Reward4399DailyGiftResp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Reward4399DailyGiftResp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Reward4399DailyGiftResp));
  GameAcitivity4399Daily_descriptor_ = file->message_type(15);
  static const int GameAcitivity4399Daily_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GameAcitivity4399Daily, data_),
  };
  GameAcitivity4399Daily_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GameAcitivity4399Daily_descriptor_,
      GameAcitivity4399Daily::default_instance_,
      GameAcitivity4399Daily_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GameAcitivity4399Daily, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GameAcitivity4399Daily, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GameAcitivity4399Daily));
  UseCardReq_descriptor_ = file->message_type(16);
  static const int UseCardReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UseCardReq, type_),
  };
  UseCardReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      UseCardReq_descriptor_,
      UseCardReq::default_instance_,
      UseCardReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UseCardReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UseCardReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(UseCardReq));
  UseCardResp_descriptor_ = file->message_type(17);
  static const int UseCardResp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UseCardResp, commons_),
  };
  UseCardResp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      UseCardResp_descriptor_,
      UseCardResp::default_instance_,
      UseCardResp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UseCardResp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UseCardResp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(UseCardResp));
  ShareFriendCPP_descriptor_ = file->message_type(18);
  static const int ShareFriendCPP_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShareFriendCPP, frienduid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShareFriendCPP, invitets_),
  };
  ShareFriendCPP_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ShareFriendCPP_descriptor_,
      ShareFriendCPP::default_instance_,
      ShareFriendCPP_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShareFriendCPP, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShareFriendCPP, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ShareFriendCPP));
  NewShareCPP_descriptor_ = file->message_type(19);
  static const int NewShareCPP_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NewShareCPP, nextsharets_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NewShareCPP, remainsharecnt_),
  };
  NewShareCPP_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      NewShareCPP_descriptor_,
      NewShareCPP::default_instance_,
      NewShareCPP_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NewShareCPP, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NewShareCPP, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(NewShareCPP));
  GetNewShareInfoReq_descriptor_ = file->message_type(20);
  static const int GetNewShareInfoReq_offsets_[1] = {
  };
  GetNewShareInfoReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GetNewShareInfoReq_descriptor_,
      GetNewShareInfoReq::default_instance_,
      GetNewShareInfoReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetNewShareInfoReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetNewShareInfoReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GetNewShareInfoReq));
  GetNewShareInfoResp_descriptor_ = file->message_type(21);
  static const int GetNewShareInfoResp_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetNewShareInfoResp, friend__),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetNewShareInfoResp, newshare_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetNewShareInfoResp, rewardflag_),
  };
  GetNewShareInfoResp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GetNewShareInfoResp_descriptor_,
      GetNewShareInfoResp::default_instance_,
      GetNewShareInfoResp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetNewShareInfoResp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetNewShareInfoResp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GetNewShareInfoResp));
  NewShareReq_descriptor_ = file->message_type(22);
  static const int NewShareReq_offsets_[1] = {
  };
  NewShareReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      NewShareReq_descriptor_,
      NewShareReq::default_instance_,
      NewShareReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NewShareReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NewShareReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(NewShareReq));
  NewShareResp_descriptor_ = file->message_type(23);
  static const int NewShareResp_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NewShareResp, common_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NewShareResp, newshare_),
  };
  NewShareResp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      NewShareResp_descriptor_,
      NewShareResp::default_instance_,
      NewShareResp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NewShareResp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NewShareResp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(NewShareResp));
  RewardNewShareReq_descriptor_ = file->message_type(24);
  static const int RewardNewShareReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RewardNewShareReq, index_),
  };
  RewardNewShareReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      RewardNewShareReq_descriptor_,
      RewardNewShareReq::default_instance_,
      RewardNewShareReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RewardNewShareReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RewardNewShareReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(RewardNewShareReq));
  RewardNewShareResp_descriptor_ = file->message_type(25);
  static const int RewardNewShareResp_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RewardNewShareResp, rewardflag_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RewardNewShareResp, common_),
  };
  RewardNewShareResp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      RewardNewShareResp_descriptor_,
      RewardNewShareResp::default_instance_,
      RewardNewShareResp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RewardNewShareResp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RewardNewShareResp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(RewardNewShareResp));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_ProtoActivity_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GameAcitivityCPP_descriptor_, &GameAcitivityCPP::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GameAcitivityAllCPP_descriptor_, &GameAcitivityAllCPP::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GameAcitivityRecharge_descriptor_, &GameAcitivityRecharge::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GameAcitivityStatusReq_descriptor_, &GameAcitivityStatusReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GameAcitivityStatusResp_descriptor_, &GameAcitivityStatusResp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    FundPurchaseReq_descriptor_, &FundPurchaseReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    FundPurchaseResp_descriptor_, &FundPurchaseResp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    RewardFundGiftReq_descriptor_, &RewardFundGiftReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    RewardFundGiftResp_descriptor_, &RewardFundGiftResp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PushAutoRewardFundMsg_descriptor_, &PushAutoRewardFundMsg::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Reward4399RechargeGiftReq_descriptor_, &Reward4399RechargeGiftReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Reward4399RechargeGiftResp_descriptor_, &Reward4399RechargeGiftResp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GameAcitivity4399Recharge_descriptor_, &GameAcitivity4399Recharge::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Reward4399DailyGiftReq_descriptor_, &Reward4399DailyGiftReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Reward4399DailyGiftResp_descriptor_, &Reward4399DailyGiftResp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GameAcitivity4399Daily_descriptor_, &GameAcitivity4399Daily::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    UseCardReq_descriptor_, &UseCardReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    UseCardResp_descriptor_, &UseCardResp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ShareFriendCPP_descriptor_, &ShareFriendCPP::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    NewShareCPP_descriptor_, &NewShareCPP::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GetNewShareInfoReq_descriptor_, &GetNewShareInfoReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GetNewShareInfoResp_descriptor_, &GetNewShareInfoResp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    NewShareReq_descriptor_, &NewShareReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    NewShareResp_descriptor_, &NewShareResp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    RewardNewShareReq_descriptor_, &RewardNewShareReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    RewardNewShareResp_descriptor_, &RewardNewShareResp::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_ProtoActivity_2eproto() {
  delete GameAcitivityCPP::default_instance_;
  delete GameAcitivityCPP_reflection_;
  delete GameAcitivityAllCPP::default_instance_;
  delete GameAcitivityAllCPP_reflection_;
  delete GameAcitivityRecharge::default_instance_;
  delete GameAcitivityRecharge_reflection_;
  delete GameAcitivityStatusReq::default_instance_;
  delete GameAcitivityStatusReq_reflection_;
  delete GameAcitivityStatusResp::default_instance_;
  delete GameAcitivityStatusResp_reflection_;
  delete FundPurchaseReq::default_instance_;
  delete FundPurchaseReq_reflection_;
  delete FundPurchaseResp::default_instance_;
  delete FundPurchaseResp_reflection_;
  delete RewardFundGiftReq::default_instance_;
  delete RewardFundGiftReq_reflection_;
  delete RewardFundGiftResp::default_instance_;
  delete RewardFundGiftResp_reflection_;
  delete PushAutoRewardFundMsg::default_instance_;
  delete PushAutoRewardFundMsg_reflection_;
  delete Reward4399RechargeGiftReq::default_instance_;
  delete Reward4399RechargeGiftReq_reflection_;
  delete Reward4399RechargeGiftResp::default_instance_;
  delete Reward4399RechargeGiftResp_reflection_;
  delete GameAcitivity4399Recharge::default_instance_;
  delete GameAcitivity4399Recharge_reflection_;
  delete Reward4399DailyGiftReq::default_instance_;
  delete Reward4399DailyGiftReq_reflection_;
  delete Reward4399DailyGiftResp::default_instance_;
  delete Reward4399DailyGiftResp_reflection_;
  delete GameAcitivity4399Daily::default_instance_;
  delete GameAcitivity4399Daily_reflection_;
  delete UseCardReq::default_instance_;
  delete UseCardReq_reflection_;
  delete UseCardResp::default_instance_;
  delete UseCardResp_reflection_;
  delete ShareFriendCPP::default_instance_;
  delete ShareFriendCPP_reflection_;
  delete NewShareCPP::default_instance_;
  delete NewShareCPP_reflection_;
  delete GetNewShareInfoReq::default_instance_;
  delete GetNewShareInfoReq_reflection_;
  delete GetNewShareInfoResp::default_instance_;
  delete GetNewShareInfoResp_reflection_;
  delete NewShareReq::default_instance_;
  delete NewShareReq_reflection_;
  delete NewShareResp::default_instance_;
  delete NewShareResp_reflection_;
  delete RewardNewShareReq::default_instance_;
  delete RewardNewShareReq_reflection_;
  delete RewardNewShareResp::default_instance_;
  delete RewardNewShareResp_reflection_;
}

void protobuf_AddDesc_ProtoActivity_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::DataCommon::protobuf_AddDesc_DataCommon_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\023ProtoActivity.proto\022\rProtoActivity\032\020Da"
    "taCommon.proto\"@\n\020GameAcitivityCPP\022\n\n\002id"
    "\030\001 \002(\r\022\017\n\007version\030\002 \002(\r\022\017\n\007actdata\030\003 \003(\r"
    "\"J\n\023GameAcitivityAllCPP\0223\n\nactivities\030\001 "
    "\003(\0132\037.ProtoActivity.GameAcitivityCPP\"F\n\025"
    "GameAcitivityRecharge\022-\n\004data\030\001 \002(\0132\037.Pr"
    "otoActivity.GameAcitivityCPP\"$\n\026GameAcit"
    "ivityStatusReq\022\n\n\002id\030\001 \002(\r\")\n\027GameAcitiv"
    "ityStatusResp\022\016\n\006status\030\001 \002(\r\"\021\n\017FundPur"
    "chaseReq\"v\n\020FundPurchaseResp\0225\n\014fundActi"
    "vity\030\001 \002(\0132\037.ProtoActivity.GameAcitivity"
    "CPP\022+\n\007commons\030\002 \002(\0132\032.DataCommon.Common"
    "ItemsCPP\"\"\n\021RewardFundGiftReq\022\r\n\005index\030\001"
    " \002(\r\"x\n\022RewardFundGiftResp\0225\n\014fundActivi"
    "ty\030\001 \002(\0132\037.ProtoActivity.GameAcitivityCP"
    "P\022+\n\007commons\030\002 \002(\0132\032.DataCommon.CommonIt"
    "emsCPP\"D\n\025PushAutoRewardFundMsg\022+\n\007commo"
    "ns\030\001 \003(\0132\032.DataCommon.CommonItemsCPP\"*\n\031"
    "Reward4399RechargeGiftReq\022\r\n\005index\030\001 \002(\r"
    "\"\204\001\n\032Reward4399RechargeGiftResp\0229\n\020recha"
    "rgeActivity\030\001 \002(\0132\037.ProtoActivity.GameAc"
    "itivityCPP\022+\n\007commons\030\002 \002(\0132\032.DataCommon"
    ".CommonItemsCPP\"J\n\031GameAcitivity4399Rech"
    "arge\022-\n\004data\030\001 \002(\0132\037.ProtoActivity.GameA"
    "citivityCPP\"\'\n\026Reward4399DailyGiftReq\022\r\n"
    "\005index\030\001 \002(\r\"\201\001\n\027Reward4399DailyGiftResp"
    "\0229\n\020rechargeActivity\030\001 \002(\0132\037.ProtoActivi"
    "ty.GameAcitivityCPP\022+\n\007commons\030\002 \002(\0132\032.D"
    "ataCommon.CommonItemsCPP\"G\n\026GameAcitivit"
    "y4399Daily\022-\n\004data\030\001 \002(\0132\037.ProtoActivity"
    ".GameAcitivityCPP\"\032\n\nUseCardReq\022\014\n\004type\030"
    "\001 \002(\r\":\n\013UseCardResp\022+\n\007commons\030\001 \002(\0132\032."
    "DataCommon.CommonItemsCPP\"5\n\016ShareFriend"
    "CPP\022\021\n\tfriendUid\030\001 \002(\r\022\020\n\010inviteTs\030\002 \002(\r"
    "\":\n\013NewShareCPP\022\023\n\013nextShareTs\030\001 \002(\r\022\026\n\016"
    "remainShareCnt\030\002 \002(\r\"\024\n\022GetNewShareInfoR"
    "eq\"\206\001\n\023GetNewShareInfoResp\022-\n\006friend\030\001 \003"
    "(\0132\035.ProtoActivity.ShareFriendCPP\022,\n\010new"
    "Share\030\002 \002(\0132\032.ProtoActivity.NewShareCPP\022"
    "\022\n\nrewardFlag\030\003 \003(\r\"\r\n\013NewShareReq\"h\n\014Ne"
    "wShareResp\022*\n\006common\030\001 \002(\0132\032.DataCommon."
    "CommonItemsCPP\022,\n\010newShare\030\002 \002(\0132\032.Proto"
    "Activity.NewShareCPP\"\"\n\021RewardNewShareRe"
    "q\022\r\n\005index\030\001 \002(\r\"T\n\022RewardNewShareResp\022\022"
    "\n\nrewardFlag\030\001 \003(\r\022*\n\006common\030\002 \002(\0132\032.Dat"
    "aCommon.CommonItemsCPP", 1822);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "ProtoActivity.proto", &protobuf_RegisterTypes);
  GameAcitivityCPP::default_instance_ = new GameAcitivityCPP();
  GameAcitivityAllCPP::default_instance_ = new GameAcitivityAllCPP();
  GameAcitivityRecharge::default_instance_ = new GameAcitivityRecharge();
  GameAcitivityStatusReq::default_instance_ = new GameAcitivityStatusReq();
  GameAcitivityStatusResp::default_instance_ = new GameAcitivityStatusResp();
  FundPurchaseReq::default_instance_ = new FundPurchaseReq();
  FundPurchaseResp::default_instance_ = new FundPurchaseResp();
  RewardFundGiftReq::default_instance_ = new RewardFundGiftReq();
  RewardFundGiftResp::default_instance_ = new RewardFundGiftResp();
  PushAutoRewardFundMsg::default_instance_ = new PushAutoRewardFundMsg();
  Reward4399RechargeGiftReq::default_instance_ = new Reward4399RechargeGiftReq();
  Reward4399RechargeGiftResp::default_instance_ = new Reward4399RechargeGiftResp();
  GameAcitivity4399Recharge::default_instance_ = new GameAcitivity4399Recharge();
  Reward4399DailyGiftReq::default_instance_ = new Reward4399DailyGiftReq();
  Reward4399DailyGiftResp::default_instance_ = new Reward4399DailyGiftResp();
  GameAcitivity4399Daily::default_instance_ = new GameAcitivity4399Daily();
  UseCardReq::default_instance_ = new UseCardReq();
  UseCardResp::default_instance_ = new UseCardResp();
  ShareFriendCPP::default_instance_ = new ShareFriendCPP();
  NewShareCPP::default_instance_ = new NewShareCPP();
  GetNewShareInfoReq::default_instance_ = new GetNewShareInfoReq();
  GetNewShareInfoResp::default_instance_ = new GetNewShareInfoResp();
  NewShareReq::default_instance_ = new NewShareReq();
  NewShareResp::default_instance_ = new NewShareResp();
  RewardNewShareReq::default_instance_ = new RewardNewShareReq();
  RewardNewShareResp::default_instance_ = new RewardNewShareResp();
  GameAcitivityCPP::default_instance_->InitAsDefaultInstance();
  GameAcitivityAllCPP::default_instance_->InitAsDefaultInstance();
  GameAcitivityRecharge::default_instance_->InitAsDefaultInstance();
  GameAcitivityStatusReq::default_instance_->InitAsDefaultInstance();
  GameAcitivityStatusResp::default_instance_->InitAsDefaultInstance();
  FundPurchaseReq::default_instance_->InitAsDefaultInstance();
  FundPurchaseResp::default_instance_->InitAsDefaultInstance();
  RewardFundGiftReq::default_instance_->InitAsDefaultInstance();
  RewardFundGiftResp::default_instance_->InitAsDefaultInstance();
  PushAutoRewardFundMsg::default_instance_->InitAsDefaultInstance();
  Reward4399RechargeGiftReq::default_instance_->InitAsDefaultInstance();
  Reward4399RechargeGiftResp::default_instance_->InitAsDefaultInstance();
  GameAcitivity4399Recharge::default_instance_->InitAsDefaultInstance();
  Reward4399DailyGiftReq::default_instance_->InitAsDefaultInstance();
  Reward4399DailyGiftResp::default_instance_->InitAsDefaultInstance();
  GameAcitivity4399Daily::default_instance_->InitAsDefaultInstance();
  UseCardReq::default_instance_->InitAsDefaultInstance();
  UseCardResp::default_instance_->InitAsDefaultInstance();
  ShareFriendCPP::default_instance_->InitAsDefaultInstance();
  NewShareCPP::default_instance_->InitAsDefaultInstance();
  GetNewShareInfoReq::default_instance_->InitAsDefaultInstance();
  GetNewShareInfoResp::default_instance_->InitAsDefaultInstance();
  NewShareReq::default_instance_->InitAsDefaultInstance();
  NewShareResp::default_instance_->InitAsDefaultInstance();
  RewardNewShareReq::default_instance_->InitAsDefaultInstance();
  RewardNewShareResp::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_ProtoActivity_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_ProtoActivity_2eproto {
  StaticDescriptorInitializer_ProtoActivity_2eproto() {
    protobuf_AddDesc_ProtoActivity_2eproto();
  }
} static_descriptor_initializer_ProtoActivity_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int GameAcitivityCPP::kIdFieldNumber;
const int GameAcitivityCPP::kVersionFieldNumber;
const int GameAcitivityCPP::kActdataFieldNumber;
#endif  // !_MSC_VER

GameAcitivityCPP::GameAcitivityCPP()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoActivity.GameAcitivityCPP)
}

void GameAcitivityCPP::InitAsDefaultInstance() {
}

GameAcitivityCPP::GameAcitivityCPP(const GameAcitivityCPP& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ProtoActivity.GameAcitivityCPP)
}

void GameAcitivityCPP::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0u;
  version_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GameAcitivityCPP::~GameAcitivityCPP() {
  // @@protoc_insertion_point(destructor:ProtoActivity.GameAcitivityCPP)
  SharedDtor();
}

void GameAcitivityCPP::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GameAcitivityCPP::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GameAcitivityCPP::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GameAcitivityCPP_descriptor_;
}

const GameAcitivityCPP& GameAcitivityCPP::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoActivity_2eproto();
  return *default_instance_;
}

GameAcitivityCPP* GameAcitivityCPP::default_instance_ = NULL;

GameAcitivityCPP* GameAcitivityCPP::New() const {
  return new GameAcitivityCPP;
}

void GameAcitivityCPP::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<GameAcitivityCPP*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(id_, version_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  actdata_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GameAcitivityCPP::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoActivity.GameAcitivityCPP)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_version;
        break;
      }

      // required uint32 version = 2;
      case 2: {
        if (tag == 16) {
         parse_version:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &version_)));
          set_has_version();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_actdata;
        break;
      }

      // repeated uint32 actdata = 3;
      case 3: {
        if (tag == 24) {
         parse_actdata:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 24, input, this->mutable_actdata())));
        } else if (tag == 26) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_actdata())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_actdata;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoActivity.GameAcitivityCPP)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoActivity.GameAcitivityCPP)
  return false;
#undef DO_
}

void GameAcitivityCPP::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoActivity.GameAcitivityCPP)
  // required uint32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  // required uint32 version = 2;
  if (has_version()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->version(), output);
  }

  // repeated uint32 actdata = 3;
  for (int i = 0; i < this->actdata_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      3, this->actdata(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoActivity.GameAcitivityCPP)
}

::google::protobuf::uint8* GameAcitivityCPP::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoActivity.GameAcitivityCPP)
  // required uint32 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  // required uint32 version = 2;
  if (has_version()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->version(), target);
  }

  // repeated uint32 actdata = 3;
  for (int i = 0; i < this->actdata_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(3, this->actdata(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoActivity.GameAcitivityCPP)
  return target;
}

int GameAcitivityCPP::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->id());
    }

    // required uint32 version = 2;
    if (has_version()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->version());
    }

  }
  // repeated uint32 actdata = 3;
  {
    int data_size = 0;
    for (int i = 0; i < this->actdata_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->actdata(i));
    }
    total_size += 1 * this->actdata_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GameAcitivityCPP::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GameAcitivityCPP* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GameAcitivityCPP*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GameAcitivityCPP::MergeFrom(const GameAcitivityCPP& from) {
  GOOGLE_CHECK_NE(&from, this);
  actdata_.MergeFrom(from.actdata_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_version()) {
      set_version(from.version());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GameAcitivityCPP::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GameAcitivityCPP::CopyFrom(const GameAcitivityCPP& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GameAcitivityCPP::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void GameAcitivityCPP::Swap(GameAcitivityCPP* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(version_, other->version_);
    actdata_.Swap(&other->actdata_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GameAcitivityCPP::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GameAcitivityCPP_descriptor_;
  metadata.reflection = GameAcitivityCPP_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GameAcitivityAllCPP::kActivitiesFieldNumber;
#endif  // !_MSC_VER

GameAcitivityAllCPP::GameAcitivityAllCPP()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoActivity.GameAcitivityAllCPP)
}

void GameAcitivityAllCPP::InitAsDefaultInstance() {
}

GameAcitivityAllCPP::GameAcitivityAllCPP(const GameAcitivityAllCPP& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ProtoActivity.GameAcitivityAllCPP)
}

void GameAcitivityAllCPP::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GameAcitivityAllCPP::~GameAcitivityAllCPP() {
  // @@protoc_insertion_point(destructor:ProtoActivity.GameAcitivityAllCPP)
  SharedDtor();
}

void GameAcitivityAllCPP::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GameAcitivityAllCPP::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GameAcitivityAllCPP::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GameAcitivityAllCPP_descriptor_;
}

const GameAcitivityAllCPP& GameAcitivityAllCPP::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoActivity_2eproto();
  return *default_instance_;
}

GameAcitivityAllCPP* GameAcitivityAllCPP::default_instance_ = NULL;

GameAcitivityAllCPP* GameAcitivityAllCPP::New() const {
  return new GameAcitivityAllCPP;
}

void GameAcitivityAllCPP::Clear() {
  activities_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GameAcitivityAllCPP::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoActivity.GameAcitivityAllCPP)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ProtoActivity.GameAcitivityCPP activities = 1;
      case 1: {
        if (tag == 10) {
         parse_activities:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_activities()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_activities;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoActivity.GameAcitivityAllCPP)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoActivity.GameAcitivityAllCPP)
  return false;
#undef DO_
}

void GameAcitivityAllCPP::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoActivity.GameAcitivityAllCPP)
  // repeated .ProtoActivity.GameAcitivityCPP activities = 1;
  for (int i = 0; i < this->activities_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->activities(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoActivity.GameAcitivityAllCPP)
}

::google::protobuf::uint8* GameAcitivityAllCPP::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoActivity.GameAcitivityAllCPP)
  // repeated .ProtoActivity.GameAcitivityCPP activities = 1;
  for (int i = 0; i < this->activities_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->activities(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoActivity.GameAcitivityAllCPP)
  return target;
}

int GameAcitivityAllCPP::ByteSize() const {
  int total_size = 0;

  // repeated .ProtoActivity.GameAcitivityCPP activities = 1;
  total_size += 1 * this->activities_size();
  for (int i = 0; i < this->activities_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->activities(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GameAcitivityAllCPP::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GameAcitivityAllCPP* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GameAcitivityAllCPP*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GameAcitivityAllCPP::MergeFrom(const GameAcitivityAllCPP& from) {
  GOOGLE_CHECK_NE(&from, this);
  activities_.MergeFrom(from.activities_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GameAcitivityAllCPP::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GameAcitivityAllCPP::CopyFrom(const GameAcitivityAllCPP& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GameAcitivityAllCPP::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->activities())) return false;
  return true;
}

void GameAcitivityAllCPP::Swap(GameAcitivityAllCPP* other) {
  if (other != this) {
    activities_.Swap(&other->activities_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GameAcitivityAllCPP::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GameAcitivityAllCPP_descriptor_;
  metadata.reflection = GameAcitivityAllCPP_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GameAcitivityRecharge::kDataFieldNumber;
#endif  // !_MSC_VER

GameAcitivityRecharge::GameAcitivityRecharge()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoActivity.GameAcitivityRecharge)
}

void GameAcitivityRecharge::InitAsDefaultInstance() {
  data_ = const_cast< ::ProtoActivity::GameAcitivityCPP*>(&::ProtoActivity::GameAcitivityCPP::default_instance());
}

GameAcitivityRecharge::GameAcitivityRecharge(const GameAcitivityRecharge& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ProtoActivity.GameAcitivityRecharge)
}

void GameAcitivityRecharge::SharedCtor() {
  _cached_size_ = 0;
  data_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GameAcitivityRecharge::~GameAcitivityRecharge() {
  // @@protoc_insertion_point(destructor:ProtoActivity.GameAcitivityRecharge)
  SharedDtor();
}

void GameAcitivityRecharge::SharedDtor() {
  if (this != default_instance_) {
    delete data_;
  }
}

void GameAcitivityRecharge::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GameAcitivityRecharge::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GameAcitivityRecharge_descriptor_;
}

const GameAcitivityRecharge& GameAcitivityRecharge::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoActivity_2eproto();
  return *default_instance_;
}

GameAcitivityRecharge* GameAcitivityRecharge::default_instance_ = NULL;

GameAcitivityRecharge* GameAcitivityRecharge::New() const {
  return new GameAcitivityRecharge;
}

void GameAcitivityRecharge::Clear() {
  if (has_data()) {
    if (data_ != NULL) data_->::ProtoActivity::GameAcitivityCPP::Clear();
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GameAcitivityRecharge::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoActivity.GameAcitivityRecharge)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .ProtoActivity.GameAcitivityCPP data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_data()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoActivity.GameAcitivityRecharge)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoActivity.GameAcitivityRecharge)
  return false;
#undef DO_
}

void GameAcitivityRecharge::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoActivity.GameAcitivityRecharge)
  // required .ProtoActivity.GameAcitivityCPP data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->data(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoActivity.GameAcitivityRecharge)
}

::google::protobuf::uint8* GameAcitivityRecharge::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoActivity.GameAcitivityRecharge)
  // required .ProtoActivity.GameAcitivityCPP data = 1;
  if (has_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->data(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoActivity.GameAcitivityRecharge)
  return target;
}

int GameAcitivityRecharge::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .ProtoActivity.GameAcitivityCPP data = 1;
    if (has_data()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->data());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GameAcitivityRecharge::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GameAcitivityRecharge* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GameAcitivityRecharge*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GameAcitivityRecharge::MergeFrom(const GameAcitivityRecharge& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      mutable_data()->::ProtoActivity::GameAcitivityCPP::MergeFrom(from.data());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GameAcitivityRecharge::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GameAcitivityRecharge::CopyFrom(const GameAcitivityRecharge& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GameAcitivityRecharge::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (has_data()) {
    if (!this->data().IsInitialized()) return false;
  }
  return true;
}

void GameAcitivityRecharge::Swap(GameAcitivityRecharge* other) {
  if (other != this) {
    std::swap(data_, other->data_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GameAcitivityRecharge::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GameAcitivityRecharge_descriptor_;
  metadata.reflection = GameAcitivityRecharge_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GameAcitivityStatusReq::kIdFieldNumber;
#endif  // !_MSC_VER

GameAcitivityStatusReq::GameAcitivityStatusReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoActivity.GameAcitivityStatusReq)
}

void GameAcitivityStatusReq::InitAsDefaultInstance() {
}

GameAcitivityStatusReq::GameAcitivityStatusReq(const GameAcitivityStatusReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ProtoActivity.GameAcitivityStatusReq)
}

void GameAcitivityStatusReq::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GameAcitivityStatusReq::~GameAcitivityStatusReq() {
  // @@protoc_insertion_point(destructor:ProtoActivity.GameAcitivityStatusReq)
  SharedDtor();
}

void GameAcitivityStatusReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GameAcitivityStatusReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GameAcitivityStatusReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GameAcitivityStatusReq_descriptor_;
}

const GameAcitivityStatusReq& GameAcitivityStatusReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoActivity_2eproto();
  return *default_instance_;
}

GameAcitivityStatusReq* GameAcitivityStatusReq::default_instance_ = NULL;

GameAcitivityStatusReq* GameAcitivityStatusReq::New() const {
  return new GameAcitivityStatusReq;
}

void GameAcitivityStatusReq::Clear() {
  id_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GameAcitivityStatusReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoActivity.GameAcitivityStatusReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoActivity.GameAcitivityStatusReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoActivity.GameAcitivityStatusReq)
  return false;
#undef DO_
}

void GameAcitivityStatusReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoActivity.GameAcitivityStatusReq)
  // required uint32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoActivity.GameAcitivityStatusReq)
}

::google::protobuf::uint8* GameAcitivityStatusReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoActivity.GameAcitivityStatusReq)
  // required uint32 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoActivity.GameAcitivityStatusReq)
  return target;
}

int GameAcitivityStatusReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->id());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GameAcitivityStatusReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GameAcitivityStatusReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GameAcitivityStatusReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GameAcitivityStatusReq::MergeFrom(const GameAcitivityStatusReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GameAcitivityStatusReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GameAcitivityStatusReq::CopyFrom(const GameAcitivityStatusReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GameAcitivityStatusReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void GameAcitivityStatusReq::Swap(GameAcitivityStatusReq* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GameAcitivityStatusReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GameAcitivityStatusReq_descriptor_;
  metadata.reflection = GameAcitivityStatusReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GameAcitivityStatusResp::kStatusFieldNumber;
#endif  // !_MSC_VER

GameAcitivityStatusResp::GameAcitivityStatusResp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoActivity.GameAcitivityStatusResp)
}

void GameAcitivityStatusResp::InitAsDefaultInstance() {
}

GameAcitivityStatusResp::GameAcitivityStatusResp(const GameAcitivityStatusResp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ProtoActivity.GameAcitivityStatusResp)
}

void GameAcitivityStatusResp::SharedCtor() {
  _cached_size_ = 0;
  status_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GameAcitivityStatusResp::~GameAcitivityStatusResp() {
  // @@protoc_insertion_point(destructor:ProtoActivity.GameAcitivityStatusResp)
  SharedDtor();
}

void GameAcitivityStatusResp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GameAcitivityStatusResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GameAcitivityStatusResp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GameAcitivityStatusResp_descriptor_;
}

const GameAcitivityStatusResp& GameAcitivityStatusResp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoActivity_2eproto();
  return *default_instance_;
}

GameAcitivityStatusResp* GameAcitivityStatusResp::default_instance_ = NULL;

GameAcitivityStatusResp* GameAcitivityStatusResp::New() const {
  return new GameAcitivityStatusResp;
}

void GameAcitivityStatusResp::Clear() {
  status_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GameAcitivityStatusResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoActivity.GameAcitivityStatusResp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 status = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &status_)));
          set_has_status();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoActivity.GameAcitivityStatusResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoActivity.GameAcitivityStatusResp)
  return false;
#undef DO_
}

void GameAcitivityStatusResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoActivity.GameAcitivityStatusResp)
  // required uint32 status = 1;
  if (has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->status(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoActivity.GameAcitivityStatusResp)
}

::google::protobuf::uint8* GameAcitivityStatusResp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoActivity.GameAcitivityStatusResp)
  // required uint32 status = 1;
  if (has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->status(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoActivity.GameAcitivityStatusResp)
  return target;
}

int GameAcitivityStatusResp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 status = 1;
    if (has_status()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->status());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GameAcitivityStatusResp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GameAcitivityStatusResp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GameAcitivityStatusResp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GameAcitivityStatusResp::MergeFrom(const GameAcitivityStatusResp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_status()) {
      set_status(from.status());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GameAcitivityStatusResp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GameAcitivityStatusResp::CopyFrom(const GameAcitivityStatusResp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GameAcitivityStatusResp::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void GameAcitivityStatusResp::Swap(GameAcitivityStatusResp* other) {
  if (other != this) {
    std::swap(status_, other->status_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GameAcitivityStatusResp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GameAcitivityStatusResp_descriptor_;
  metadata.reflection = GameAcitivityStatusResp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

FundPurchaseReq::FundPurchaseReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoActivity.FundPurchaseReq)
}

void FundPurchaseReq::InitAsDefaultInstance() {
}

FundPurchaseReq::FundPurchaseReq(const FundPurchaseReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ProtoActivity.FundPurchaseReq)
}

void FundPurchaseReq::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

FundPurchaseReq::~FundPurchaseReq() {
  // @@protoc_insertion_point(destructor:ProtoActivity.FundPurchaseReq)
  SharedDtor();
}

void FundPurchaseReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void FundPurchaseReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FundPurchaseReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return FundPurchaseReq_descriptor_;
}

const FundPurchaseReq& FundPurchaseReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoActivity_2eproto();
  return *default_instance_;
}

FundPurchaseReq* FundPurchaseReq::default_instance_ = NULL;

FundPurchaseReq* FundPurchaseReq::New() const {
  return new FundPurchaseReq;
}

void FundPurchaseReq::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool FundPurchaseReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoActivity.FundPurchaseReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoActivity.FundPurchaseReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoActivity.FundPurchaseReq)
  return false;
#undef DO_
}

void FundPurchaseReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoActivity.FundPurchaseReq)
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoActivity.FundPurchaseReq)
}

::google::protobuf::uint8* FundPurchaseReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoActivity.FundPurchaseReq)
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoActivity.FundPurchaseReq)
  return target;
}

int FundPurchaseReq::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FundPurchaseReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const FundPurchaseReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const FundPurchaseReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void FundPurchaseReq::MergeFrom(const FundPurchaseReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void FundPurchaseReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FundPurchaseReq::CopyFrom(const FundPurchaseReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FundPurchaseReq::IsInitialized() const {

  return true;
}

void FundPurchaseReq::Swap(FundPurchaseReq* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata FundPurchaseReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = FundPurchaseReq_descriptor_;
  metadata.reflection = FundPurchaseReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int FundPurchaseResp::kFundActivityFieldNumber;
const int FundPurchaseResp::kCommonsFieldNumber;
#endif  // !_MSC_VER

FundPurchaseResp::FundPurchaseResp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoActivity.FundPurchaseResp)
}

void FundPurchaseResp::InitAsDefaultInstance() {
  fundactivity_ = const_cast< ::ProtoActivity::GameAcitivityCPP*>(&::ProtoActivity::GameAcitivityCPP::default_instance());
  commons_ = const_cast< ::DataCommon::CommonItemsCPP*>(&::DataCommon::CommonItemsCPP::default_instance());
}

FundPurchaseResp::FundPurchaseResp(const FundPurchaseResp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ProtoActivity.FundPurchaseResp)
}

void FundPurchaseResp::SharedCtor() {
  _cached_size_ = 0;
  fundactivity_ = NULL;
  commons_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

FundPurchaseResp::~FundPurchaseResp() {
  // @@protoc_insertion_point(destructor:ProtoActivity.FundPurchaseResp)
  SharedDtor();
}

void FundPurchaseResp::SharedDtor() {
  if (this != default_instance_) {
    delete fundactivity_;
    delete commons_;
  }
}

void FundPurchaseResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FundPurchaseResp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return FundPurchaseResp_descriptor_;
}

const FundPurchaseResp& FundPurchaseResp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoActivity_2eproto();
  return *default_instance_;
}

FundPurchaseResp* FundPurchaseResp::default_instance_ = NULL;

FundPurchaseResp* FundPurchaseResp::New() const {
  return new FundPurchaseResp;
}

void FundPurchaseResp::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    if (has_fundactivity()) {
      if (fundactivity_ != NULL) fundactivity_->::ProtoActivity::GameAcitivityCPP::Clear();
    }
    if (has_commons()) {
      if (commons_ != NULL) commons_->::DataCommon::CommonItemsCPP::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool FundPurchaseResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoActivity.FundPurchaseResp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .ProtoActivity.GameAcitivityCPP fundActivity = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_fundactivity()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_commons;
        break;
      }

      // required .DataCommon.CommonItemsCPP commons = 2;
      case 2: {
        if (tag == 18) {
         parse_commons:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_commons()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoActivity.FundPurchaseResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoActivity.FundPurchaseResp)
  return false;
#undef DO_
}

void FundPurchaseResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoActivity.FundPurchaseResp)
  // required .ProtoActivity.GameAcitivityCPP fundActivity = 1;
  if (has_fundactivity()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->fundactivity(), output);
  }

  // required .DataCommon.CommonItemsCPP commons = 2;
  if (has_commons()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->commons(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoActivity.FundPurchaseResp)
}

::google::protobuf::uint8* FundPurchaseResp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoActivity.FundPurchaseResp)
  // required .ProtoActivity.GameAcitivityCPP fundActivity = 1;
  if (has_fundactivity()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->fundactivity(), target);
  }

  // required .DataCommon.CommonItemsCPP commons = 2;
  if (has_commons()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->commons(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoActivity.FundPurchaseResp)
  return target;
}

int FundPurchaseResp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .ProtoActivity.GameAcitivityCPP fundActivity = 1;
    if (has_fundactivity()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->fundactivity());
    }

    // required .DataCommon.CommonItemsCPP commons = 2;
    if (has_commons()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->commons());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FundPurchaseResp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const FundPurchaseResp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const FundPurchaseResp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void FundPurchaseResp::MergeFrom(const FundPurchaseResp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_fundactivity()) {
      mutable_fundactivity()->::ProtoActivity::GameAcitivityCPP::MergeFrom(from.fundactivity());
    }
    if (from.has_commons()) {
      mutable_commons()->::DataCommon::CommonItemsCPP::MergeFrom(from.commons());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void FundPurchaseResp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FundPurchaseResp::CopyFrom(const FundPurchaseResp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FundPurchaseResp::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  if (has_fundactivity()) {
    if (!this->fundactivity().IsInitialized()) return false;
  }
  if (has_commons()) {
    if (!this->commons().IsInitialized()) return false;
  }
  return true;
}

void FundPurchaseResp::Swap(FundPurchaseResp* other) {
  if (other != this) {
    std::swap(fundactivity_, other->fundactivity_);
    std::swap(commons_, other->commons_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata FundPurchaseResp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = FundPurchaseResp_descriptor_;
  metadata.reflection = FundPurchaseResp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int RewardFundGiftReq::kIndexFieldNumber;
#endif  // !_MSC_VER

RewardFundGiftReq::RewardFundGiftReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoActivity.RewardFundGiftReq)
}

void RewardFundGiftReq::InitAsDefaultInstance() {
}

RewardFundGiftReq::RewardFundGiftReq(const RewardFundGiftReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ProtoActivity.RewardFundGiftReq)
}

void RewardFundGiftReq::SharedCtor() {
  _cached_size_ = 0;
  index_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RewardFundGiftReq::~RewardFundGiftReq() {
  // @@protoc_insertion_point(destructor:ProtoActivity.RewardFundGiftReq)
  SharedDtor();
}

void RewardFundGiftReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void RewardFundGiftReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RewardFundGiftReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RewardFundGiftReq_descriptor_;
}

const RewardFundGiftReq& RewardFundGiftReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoActivity_2eproto();
  return *default_instance_;
}

RewardFundGiftReq* RewardFundGiftReq::default_instance_ = NULL;

RewardFundGiftReq* RewardFundGiftReq::New() const {
  return new RewardFundGiftReq;
}

void RewardFundGiftReq::Clear() {
  index_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool RewardFundGiftReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoActivity.RewardFundGiftReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 index = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &index_)));
          set_has_index();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoActivity.RewardFundGiftReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoActivity.RewardFundGiftReq)
  return false;
#undef DO_
}

void RewardFundGiftReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoActivity.RewardFundGiftReq)
  // required uint32 index = 1;
  if (has_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->index(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoActivity.RewardFundGiftReq)
}

::google::protobuf::uint8* RewardFundGiftReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoActivity.RewardFundGiftReq)
  // required uint32 index = 1;
  if (has_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->index(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoActivity.RewardFundGiftReq)
  return target;
}

int RewardFundGiftReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 index = 1;
    if (has_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->index());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RewardFundGiftReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const RewardFundGiftReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const RewardFundGiftReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void RewardFundGiftReq::MergeFrom(const RewardFundGiftReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_index()) {
      set_index(from.index());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void RewardFundGiftReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RewardFundGiftReq::CopyFrom(const RewardFundGiftReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RewardFundGiftReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void RewardFundGiftReq::Swap(RewardFundGiftReq* other) {
  if (other != this) {
    std::swap(index_, other->index_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata RewardFundGiftReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RewardFundGiftReq_descriptor_;
  metadata.reflection = RewardFundGiftReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int RewardFundGiftResp::kFundActivityFieldNumber;
const int RewardFundGiftResp::kCommonsFieldNumber;
#endif  // !_MSC_VER

RewardFundGiftResp::RewardFundGiftResp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoActivity.RewardFundGiftResp)
}

void RewardFundGiftResp::InitAsDefaultInstance() {
  fundactivity_ = const_cast< ::ProtoActivity::GameAcitivityCPP*>(&::ProtoActivity::GameAcitivityCPP::default_instance());
  commons_ = const_cast< ::DataCommon::CommonItemsCPP*>(&::DataCommon::CommonItemsCPP::default_instance());
}

RewardFundGiftResp::RewardFundGiftResp(const RewardFundGiftResp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ProtoActivity.RewardFundGiftResp)
}

void RewardFundGiftResp::SharedCtor() {
  _cached_size_ = 0;
  fundactivity_ = NULL;
  commons_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RewardFundGiftResp::~RewardFundGiftResp() {
  // @@protoc_insertion_point(destructor:ProtoActivity.RewardFundGiftResp)
  SharedDtor();
}

void RewardFundGiftResp::SharedDtor() {
  if (this != default_instance_) {
    delete fundactivity_;
    delete commons_;
  }
}

void RewardFundGiftResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RewardFundGiftResp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RewardFundGiftResp_descriptor_;
}

const RewardFundGiftResp& RewardFundGiftResp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoActivity_2eproto();
  return *default_instance_;
}

RewardFundGiftResp* RewardFundGiftResp::default_instance_ = NULL;

RewardFundGiftResp* RewardFundGiftResp::New() const {
  return new RewardFundGiftResp;
}

void RewardFundGiftResp::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    if (has_fundactivity()) {
      if (fundactivity_ != NULL) fundactivity_->::ProtoActivity::GameAcitivityCPP::Clear();
    }
    if (has_commons()) {
      if (commons_ != NULL) commons_->::DataCommon::CommonItemsCPP::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool RewardFundGiftResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoActivity.RewardFundGiftResp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .ProtoActivity.GameAcitivityCPP fundActivity = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_fundactivity()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_commons;
        break;
      }

      // required .DataCommon.CommonItemsCPP commons = 2;
      case 2: {
        if (tag == 18) {
         parse_commons:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_commons()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoActivity.RewardFundGiftResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoActivity.RewardFundGiftResp)
  return false;
#undef DO_
}

void RewardFundGiftResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoActivity.RewardFundGiftResp)
  // required .ProtoActivity.GameAcitivityCPP fundActivity = 1;
  if (has_fundactivity()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->fundactivity(), output);
  }

  // required .DataCommon.CommonItemsCPP commons = 2;
  if (has_commons()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->commons(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoActivity.RewardFundGiftResp)
}

::google::protobuf::uint8* RewardFundGiftResp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoActivity.RewardFundGiftResp)
  // required .ProtoActivity.GameAcitivityCPP fundActivity = 1;
  if (has_fundactivity()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->fundactivity(), target);
  }

  // required .DataCommon.CommonItemsCPP commons = 2;
  if (has_commons()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->commons(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoActivity.RewardFundGiftResp)
  return target;
}

int RewardFundGiftResp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .ProtoActivity.GameAcitivityCPP fundActivity = 1;
    if (has_fundactivity()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->fundactivity());
    }

    // required .DataCommon.CommonItemsCPP commons = 2;
    if (has_commons()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->commons());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RewardFundGiftResp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const RewardFundGiftResp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const RewardFundGiftResp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void RewardFundGiftResp::MergeFrom(const RewardFundGiftResp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_fundactivity()) {
      mutable_fundactivity()->::ProtoActivity::GameAcitivityCPP::MergeFrom(from.fundactivity());
    }
    if (from.has_commons()) {
      mutable_commons()->::DataCommon::CommonItemsCPP::MergeFrom(from.commons());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void RewardFundGiftResp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RewardFundGiftResp::CopyFrom(const RewardFundGiftResp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RewardFundGiftResp::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  if (has_fundactivity()) {
    if (!this->fundactivity().IsInitialized()) return false;
  }
  if (has_commons()) {
    if (!this->commons().IsInitialized()) return false;
  }
  return true;
}

void RewardFundGiftResp::Swap(RewardFundGiftResp* other) {
  if (other != this) {
    std::swap(fundactivity_, other->fundactivity_);
    std::swap(commons_, other->commons_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata RewardFundGiftResp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RewardFundGiftResp_descriptor_;
  metadata.reflection = RewardFundGiftResp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PushAutoRewardFundMsg::kCommonsFieldNumber;
#endif  // !_MSC_VER

PushAutoRewardFundMsg::PushAutoRewardFundMsg()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoActivity.PushAutoRewardFundMsg)
}

void PushAutoRewardFundMsg::InitAsDefaultInstance() {
}

PushAutoRewardFundMsg::PushAutoRewardFundMsg(const PushAutoRewardFundMsg& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ProtoActivity.PushAutoRewardFundMsg)
}

void PushAutoRewardFundMsg::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PushAutoRewardFundMsg::~PushAutoRewardFundMsg() {
  // @@protoc_insertion_point(destructor:ProtoActivity.PushAutoRewardFundMsg)
  SharedDtor();
}

void PushAutoRewardFundMsg::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PushAutoRewardFundMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PushAutoRewardFundMsg::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PushAutoRewardFundMsg_descriptor_;
}

const PushAutoRewardFundMsg& PushAutoRewardFundMsg::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoActivity_2eproto();
  return *default_instance_;
}

PushAutoRewardFundMsg* PushAutoRewardFundMsg::default_instance_ = NULL;

PushAutoRewardFundMsg* PushAutoRewardFundMsg::New() const {
  return new PushAutoRewardFundMsg;
}

void PushAutoRewardFundMsg::Clear() {
  commons_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PushAutoRewardFundMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoActivity.PushAutoRewardFundMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .DataCommon.CommonItemsCPP commons = 1;
      case 1: {
        if (tag == 10) {
         parse_commons:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_commons()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_commons;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoActivity.PushAutoRewardFundMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoActivity.PushAutoRewardFundMsg)
  return false;
#undef DO_
}

void PushAutoRewardFundMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoActivity.PushAutoRewardFundMsg)
  // repeated .DataCommon.CommonItemsCPP commons = 1;
  for (int i = 0; i < this->commons_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->commons(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoActivity.PushAutoRewardFundMsg)
}

::google::protobuf::uint8* PushAutoRewardFundMsg::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoActivity.PushAutoRewardFundMsg)
  // repeated .DataCommon.CommonItemsCPP commons = 1;
  for (int i = 0; i < this->commons_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->commons(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoActivity.PushAutoRewardFundMsg)
  return target;
}

int PushAutoRewardFundMsg::ByteSize() const {
  int total_size = 0;

  // repeated .DataCommon.CommonItemsCPP commons = 1;
  total_size += 1 * this->commons_size();
  for (int i = 0; i < this->commons_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->commons(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PushAutoRewardFundMsg::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PushAutoRewardFundMsg* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PushAutoRewardFundMsg*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PushAutoRewardFundMsg::MergeFrom(const PushAutoRewardFundMsg& from) {
  GOOGLE_CHECK_NE(&from, this);
  commons_.MergeFrom(from.commons_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PushAutoRewardFundMsg::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PushAutoRewardFundMsg::CopyFrom(const PushAutoRewardFundMsg& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PushAutoRewardFundMsg::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->commons())) return false;
  return true;
}

void PushAutoRewardFundMsg::Swap(PushAutoRewardFundMsg* other) {
  if (other != this) {
    commons_.Swap(&other->commons_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PushAutoRewardFundMsg::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PushAutoRewardFundMsg_descriptor_;
  metadata.reflection = PushAutoRewardFundMsg_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Reward4399RechargeGiftReq::kIndexFieldNumber;
#endif  // !_MSC_VER

Reward4399RechargeGiftReq::Reward4399RechargeGiftReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoActivity.Reward4399RechargeGiftReq)
}

void Reward4399RechargeGiftReq::InitAsDefaultInstance() {
}

Reward4399RechargeGiftReq::Reward4399RechargeGiftReq(const Reward4399RechargeGiftReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ProtoActivity.Reward4399RechargeGiftReq)
}

void Reward4399RechargeGiftReq::SharedCtor() {
  _cached_size_ = 0;
  index_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Reward4399RechargeGiftReq::~Reward4399RechargeGiftReq() {
  // @@protoc_insertion_point(destructor:ProtoActivity.Reward4399RechargeGiftReq)
  SharedDtor();
}

void Reward4399RechargeGiftReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Reward4399RechargeGiftReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Reward4399RechargeGiftReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Reward4399RechargeGiftReq_descriptor_;
}

const Reward4399RechargeGiftReq& Reward4399RechargeGiftReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoActivity_2eproto();
  return *default_instance_;
}

Reward4399RechargeGiftReq* Reward4399RechargeGiftReq::default_instance_ = NULL;

Reward4399RechargeGiftReq* Reward4399RechargeGiftReq::New() const {
  return new Reward4399RechargeGiftReq;
}

void Reward4399RechargeGiftReq::Clear() {
  index_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Reward4399RechargeGiftReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoActivity.Reward4399RechargeGiftReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 index = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &index_)));
          set_has_index();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoActivity.Reward4399RechargeGiftReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoActivity.Reward4399RechargeGiftReq)
  return false;
#undef DO_
}

void Reward4399RechargeGiftReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoActivity.Reward4399RechargeGiftReq)
  // required uint32 index = 1;
  if (has_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->index(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoActivity.Reward4399RechargeGiftReq)
}

::google::protobuf::uint8* Reward4399RechargeGiftReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoActivity.Reward4399RechargeGiftReq)
  // required uint32 index = 1;
  if (has_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->index(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoActivity.Reward4399RechargeGiftReq)
  return target;
}

int Reward4399RechargeGiftReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 index = 1;
    if (has_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->index());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Reward4399RechargeGiftReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Reward4399RechargeGiftReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Reward4399RechargeGiftReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Reward4399RechargeGiftReq::MergeFrom(const Reward4399RechargeGiftReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_index()) {
      set_index(from.index());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Reward4399RechargeGiftReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Reward4399RechargeGiftReq::CopyFrom(const Reward4399RechargeGiftReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Reward4399RechargeGiftReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void Reward4399RechargeGiftReq::Swap(Reward4399RechargeGiftReq* other) {
  if (other != this) {
    std::swap(index_, other->index_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Reward4399RechargeGiftReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Reward4399RechargeGiftReq_descriptor_;
  metadata.reflection = Reward4399RechargeGiftReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Reward4399RechargeGiftResp::kRechargeActivityFieldNumber;
const int Reward4399RechargeGiftResp::kCommonsFieldNumber;
#endif  // !_MSC_VER

Reward4399RechargeGiftResp::Reward4399RechargeGiftResp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoActivity.Reward4399RechargeGiftResp)
}

void Reward4399RechargeGiftResp::InitAsDefaultInstance() {
  rechargeactivity_ = const_cast< ::ProtoActivity::GameAcitivityCPP*>(&::ProtoActivity::GameAcitivityCPP::default_instance());
  commons_ = const_cast< ::DataCommon::CommonItemsCPP*>(&::DataCommon::CommonItemsCPP::default_instance());
}

Reward4399RechargeGiftResp::Reward4399RechargeGiftResp(const Reward4399RechargeGiftResp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ProtoActivity.Reward4399RechargeGiftResp)
}

void Reward4399RechargeGiftResp::SharedCtor() {
  _cached_size_ = 0;
  rechargeactivity_ = NULL;
  commons_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Reward4399RechargeGiftResp::~Reward4399RechargeGiftResp() {
  // @@protoc_insertion_point(destructor:ProtoActivity.Reward4399RechargeGiftResp)
  SharedDtor();
}

void Reward4399RechargeGiftResp::SharedDtor() {
  if (this != default_instance_) {
    delete rechargeactivity_;
    delete commons_;
  }
}

void Reward4399RechargeGiftResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Reward4399RechargeGiftResp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Reward4399RechargeGiftResp_descriptor_;
}

const Reward4399RechargeGiftResp& Reward4399RechargeGiftResp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoActivity_2eproto();
  return *default_instance_;
}

Reward4399RechargeGiftResp* Reward4399RechargeGiftResp::default_instance_ = NULL;

Reward4399RechargeGiftResp* Reward4399RechargeGiftResp::New() const {
  return new Reward4399RechargeGiftResp;
}

void Reward4399RechargeGiftResp::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    if (has_rechargeactivity()) {
      if (rechargeactivity_ != NULL) rechargeactivity_->::ProtoActivity::GameAcitivityCPP::Clear();
    }
    if (has_commons()) {
      if (commons_ != NULL) commons_->::DataCommon::CommonItemsCPP::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Reward4399RechargeGiftResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoActivity.Reward4399RechargeGiftResp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .ProtoActivity.GameAcitivityCPP rechargeActivity = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_rechargeactivity()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_commons;
        break;
      }

      // required .DataCommon.CommonItemsCPP commons = 2;
      case 2: {
        if (tag == 18) {
         parse_commons:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_commons()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoActivity.Reward4399RechargeGiftResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoActivity.Reward4399RechargeGiftResp)
  return false;
#undef DO_
}

void Reward4399RechargeGiftResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoActivity.Reward4399RechargeGiftResp)
  // required .ProtoActivity.GameAcitivityCPP rechargeActivity = 1;
  if (has_rechargeactivity()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->rechargeactivity(), output);
  }

  // required .DataCommon.CommonItemsCPP commons = 2;
  if (has_commons()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->commons(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoActivity.Reward4399RechargeGiftResp)
}

::google::protobuf::uint8* Reward4399RechargeGiftResp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoActivity.Reward4399RechargeGiftResp)
  // required .ProtoActivity.GameAcitivityCPP rechargeActivity = 1;
  if (has_rechargeactivity()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->rechargeactivity(), target);
  }

  // required .DataCommon.CommonItemsCPP commons = 2;
  if (has_commons()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->commons(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoActivity.Reward4399RechargeGiftResp)
  return target;
}

int Reward4399RechargeGiftResp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .ProtoActivity.GameAcitivityCPP rechargeActivity = 1;
    if (has_rechargeactivity()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->rechargeactivity());
    }

    // required .DataCommon.CommonItemsCPP commons = 2;
    if (has_commons()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->commons());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Reward4399RechargeGiftResp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Reward4399RechargeGiftResp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Reward4399RechargeGiftResp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Reward4399RechargeGiftResp::MergeFrom(const Reward4399RechargeGiftResp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_rechargeactivity()) {
      mutable_rechargeactivity()->::ProtoActivity::GameAcitivityCPP::MergeFrom(from.rechargeactivity());
    }
    if (from.has_commons()) {
      mutable_commons()->::DataCommon::CommonItemsCPP::MergeFrom(from.commons());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Reward4399RechargeGiftResp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Reward4399RechargeGiftResp::CopyFrom(const Reward4399RechargeGiftResp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Reward4399RechargeGiftResp::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  if (has_rechargeactivity()) {
    if (!this->rechargeactivity().IsInitialized()) return false;
  }
  if (has_commons()) {
    if (!this->commons().IsInitialized()) return false;
  }
  return true;
}

void Reward4399RechargeGiftResp::Swap(Reward4399RechargeGiftResp* other) {
  if (other != this) {
    std::swap(rechargeactivity_, other->rechargeactivity_);
    std::swap(commons_, other->commons_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Reward4399RechargeGiftResp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Reward4399RechargeGiftResp_descriptor_;
  metadata.reflection = Reward4399RechargeGiftResp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GameAcitivity4399Recharge::kDataFieldNumber;
#endif  // !_MSC_VER

GameAcitivity4399Recharge::GameAcitivity4399Recharge()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoActivity.GameAcitivity4399Recharge)
}

void GameAcitivity4399Recharge::InitAsDefaultInstance() {
  data_ = const_cast< ::ProtoActivity::GameAcitivityCPP*>(&::ProtoActivity::GameAcitivityCPP::default_instance());
}

GameAcitivity4399Recharge::GameAcitivity4399Recharge(const GameAcitivity4399Recharge& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ProtoActivity.GameAcitivity4399Recharge)
}

void GameAcitivity4399Recharge::SharedCtor() {
  _cached_size_ = 0;
  data_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GameAcitivity4399Recharge::~GameAcitivity4399Recharge() {
  // @@protoc_insertion_point(destructor:ProtoActivity.GameAcitivity4399Recharge)
  SharedDtor();
}

void GameAcitivity4399Recharge::SharedDtor() {
  if (this != default_instance_) {
    delete data_;
  }
}

void GameAcitivity4399Recharge::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GameAcitivity4399Recharge::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GameAcitivity4399Recharge_descriptor_;
}

const GameAcitivity4399Recharge& GameAcitivity4399Recharge::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoActivity_2eproto();
  return *default_instance_;
}

GameAcitivity4399Recharge* GameAcitivity4399Recharge::default_instance_ = NULL;

GameAcitivity4399Recharge* GameAcitivity4399Recharge::New() const {
  return new GameAcitivity4399Recharge;
}

void GameAcitivity4399Recharge::Clear() {
  if (has_data()) {
    if (data_ != NULL) data_->::ProtoActivity::GameAcitivityCPP::Clear();
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GameAcitivity4399Recharge::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoActivity.GameAcitivity4399Recharge)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .ProtoActivity.GameAcitivityCPP data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_data()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoActivity.GameAcitivity4399Recharge)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoActivity.GameAcitivity4399Recharge)
  return false;
#undef DO_
}

void GameAcitivity4399Recharge::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoActivity.GameAcitivity4399Recharge)
  // required .ProtoActivity.GameAcitivityCPP data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->data(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoActivity.GameAcitivity4399Recharge)
}

::google::protobuf::uint8* GameAcitivity4399Recharge::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoActivity.GameAcitivity4399Recharge)
  // required .ProtoActivity.GameAcitivityCPP data = 1;
  if (has_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->data(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoActivity.GameAcitivity4399Recharge)
  return target;
}

int GameAcitivity4399Recharge::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .ProtoActivity.GameAcitivityCPP data = 1;
    if (has_data()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->data());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GameAcitivity4399Recharge::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GameAcitivity4399Recharge* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GameAcitivity4399Recharge*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GameAcitivity4399Recharge::MergeFrom(const GameAcitivity4399Recharge& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      mutable_data()->::ProtoActivity::GameAcitivityCPP::MergeFrom(from.data());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GameAcitivity4399Recharge::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GameAcitivity4399Recharge::CopyFrom(const GameAcitivity4399Recharge& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GameAcitivity4399Recharge::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (has_data()) {
    if (!this->data().IsInitialized()) return false;
  }
  return true;
}

void GameAcitivity4399Recharge::Swap(GameAcitivity4399Recharge* other) {
  if (other != this) {
    std::swap(data_, other->data_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GameAcitivity4399Recharge::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GameAcitivity4399Recharge_descriptor_;
  metadata.reflection = GameAcitivity4399Recharge_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Reward4399DailyGiftReq::kIndexFieldNumber;
#endif  // !_MSC_VER

Reward4399DailyGiftReq::Reward4399DailyGiftReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoActivity.Reward4399DailyGiftReq)
}

void Reward4399DailyGiftReq::InitAsDefaultInstance() {
}

Reward4399DailyGiftReq::Reward4399DailyGiftReq(const Reward4399DailyGiftReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ProtoActivity.Reward4399DailyGiftReq)
}

void Reward4399DailyGiftReq::SharedCtor() {
  _cached_size_ = 0;
  index_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Reward4399DailyGiftReq::~Reward4399DailyGiftReq() {
  // @@protoc_insertion_point(destructor:ProtoActivity.Reward4399DailyGiftReq)
  SharedDtor();
}

void Reward4399DailyGiftReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Reward4399DailyGiftReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Reward4399DailyGiftReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Reward4399DailyGiftReq_descriptor_;
}

const Reward4399DailyGiftReq& Reward4399DailyGiftReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoActivity_2eproto();
  return *default_instance_;
}

Reward4399DailyGiftReq* Reward4399DailyGiftReq::default_instance_ = NULL;

Reward4399DailyGiftReq* Reward4399DailyGiftReq::New() const {
  return new Reward4399DailyGiftReq;
}

void Reward4399DailyGiftReq::Clear() {
  index_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Reward4399DailyGiftReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoActivity.Reward4399DailyGiftReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 index = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &index_)));
          set_has_index();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoActivity.Reward4399DailyGiftReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoActivity.Reward4399DailyGiftReq)
  return false;
#undef DO_
}

void Reward4399DailyGiftReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoActivity.Reward4399DailyGiftReq)
  // required uint32 index = 1;
  if (has_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->index(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoActivity.Reward4399DailyGiftReq)
}

::google::protobuf::uint8* Reward4399DailyGiftReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoActivity.Reward4399DailyGiftReq)
  // required uint32 index = 1;
  if (has_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->index(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoActivity.Reward4399DailyGiftReq)
  return target;
}

int Reward4399DailyGiftReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 index = 1;
    if (has_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->index());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Reward4399DailyGiftReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Reward4399DailyGiftReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Reward4399DailyGiftReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Reward4399DailyGiftReq::MergeFrom(const Reward4399DailyGiftReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_index()) {
      set_index(from.index());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Reward4399DailyGiftReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Reward4399DailyGiftReq::CopyFrom(const Reward4399DailyGiftReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Reward4399DailyGiftReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void Reward4399DailyGiftReq::Swap(Reward4399DailyGiftReq* other) {
  if (other != this) {
    std::swap(index_, other->index_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Reward4399DailyGiftReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Reward4399DailyGiftReq_descriptor_;
  metadata.reflection = Reward4399DailyGiftReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Reward4399DailyGiftResp::kRechargeActivityFieldNumber;
const int Reward4399DailyGiftResp::kCommonsFieldNumber;
#endif  // !_MSC_VER

Reward4399DailyGiftResp::Reward4399DailyGiftResp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoActivity.Reward4399DailyGiftResp)
}

void Reward4399DailyGiftResp::InitAsDefaultInstance() {
  rechargeactivity_ = const_cast< ::ProtoActivity::GameAcitivityCPP*>(&::ProtoActivity::GameAcitivityCPP::default_instance());
  commons_ = const_cast< ::DataCommon::CommonItemsCPP*>(&::DataCommon::CommonItemsCPP::default_instance());
}

Reward4399DailyGiftResp::Reward4399DailyGiftResp(const Reward4399DailyGiftResp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ProtoActivity.Reward4399DailyGiftResp)
}

void Reward4399DailyGiftResp::SharedCtor() {
  _cached_size_ = 0;
  rechargeactivity_ = NULL;
  commons_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Reward4399DailyGiftResp::~Reward4399DailyGiftResp() {
  // @@protoc_insertion_point(destructor:ProtoActivity.Reward4399DailyGiftResp)
  SharedDtor();
}

void Reward4399DailyGiftResp::SharedDtor() {
  if (this != default_instance_) {
    delete rechargeactivity_;
    delete commons_;
  }
}

void Reward4399DailyGiftResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Reward4399DailyGiftResp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Reward4399DailyGiftResp_descriptor_;
}

const Reward4399DailyGiftResp& Reward4399DailyGiftResp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoActivity_2eproto();
  return *default_instance_;
}

Reward4399DailyGiftResp* Reward4399DailyGiftResp::default_instance_ = NULL;

Reward4399DailyGiftResp* Reward4399DailyGiftResp::New() const {
  return new Reward4399DailyGiftResp;
}

void Reward4399DailyGiftResp::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    if (has_rechargeactivity()) {
      if (rechargeactivity_ != NULL) rechargeactivity_->::ProtoActivity::GameAcitivityCPP::Clear();
    }
    if (has_commons()) {
      if (commons_ != NULL) commons_->::DataCommon::CommonItemsCPP::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Reward4399DailyGiftResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoActivity.Reward4399DailyGiftResp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .ProtoActivity.GameAcitivityCPP rechargeActivity = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_rechargeactivity()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_commons;
        break;
      }

      // required .DataCommon.CommonItemsCPP commons = 2;
      case 2: {
        if (tag == 18) {
         parse_commons:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_commons()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoActivity.Reward4399DailyGiftResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoActivity.Reward4399DailyGiftResp)
  return false;
#undef DO_
}

void Reward4399DailyGiftResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoActivity.Reward4399DailyGiftResp)
  // required .ProtoActivity.GameAcitivityCPP rechargeActivity = 1;
  if (has_rechargeactivity()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->rechargeactivity(), output);
  }

  // required .DataCommon.CommonItemsCPP commons = 2;
  if (has_commons()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->commons(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoActivity.Reward4399DailyGiftResp)
}

::google::protobuf::uint8* Reward4399DailyGiftResp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoActivity.Reward4399DailyGiftResp)
  // required .ProtoActivity.GameAcitivityCPP rechargeActivity = 1;
  if (has_rechargeactivity()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->rechargeactivity(), target);
  }

  // required .DataCommon.CommonItemsCPP commons = 2;
  if (has_commons()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->commons(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoActivity.Reward4399DailyGiftResp)
  return target;
}

int Reward4399DailyGiftResp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .ProtoActivity.GameAcitivityCPP rechargeActivity = 1;
    if (has_rechargeactivity()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->rechargeactivity());
    }

    // required .DataCommon.CommonItemsCPP commons = 2;
    if (has_commons()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->commons());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Reward4399DailyGiftResp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Reward4399DailyGiftResp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Reward4399DailyGiftResp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Reward4399DailyGiftResp::MergeFrom(const Reward4399DailyGiftResp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_rechargeactivity()) {
      mutable_rechargeactivity()->::ProtoActivity::GameAcitivityCPP::MergeFrom(from.rechargeactivity());
    }
    if (from.has_commons()) {
      mutable_commons()->::DataCommon::CommonItemsCPP::MergeFrom(from.commons());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Reward4399DailyGiftResp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Reward4399DailyGiftResp::CopyFrom(const Reward4399DailyGiftResp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Reward4399DailyGiftResp::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  if (has_rechargeactivity()) {
    if (!this->rechargeactivity().IsInitialized()) return false;
  }
  if (has_commons()) {
    if (!this->commons().IsInitialized()) return false;
  }
  return true;
}

void Reward4399DailyGiftResp::Swap(Reward4399DailyGiftResp* other) {
  if (other != this) {
    std::swap(rechargeactivity_, other->rechargeactivity_);
    std::swap(commons_, other->commons_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Reward4399DailyGiftResp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Reward4399DailyGiftResp_descriptor_;
  metadata.reflection = Reward4399DailyGiftResp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GameAcitivity4399Daily::kDataFieldNumber;
#endif  // !_MSC_VER

GameAcitivity4399Daily::GameAcitivity4399Daily()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoActivity.GameAcitivity4399Daily)
}

void GameAcitivity4399Daily::InitAsDefaultInstance() {
  data_ = const_cast< ::ProtoActivity::GameAcitivityCPP*>(&::ProtoActivity::GameAcitivityCPP::default_instance());
}

GameAcitivity4399Daily::GameAcitivity4399Daily(const GameAcitivity4399Daily& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ProtoActivity.GameAcitivity4399Daily)
}

void GameAcitivity4399Daily::SharedCtor() {
  _cached_size_ = 0;
  data_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GameAcitivity4399Daily::~GameAcitivity4399Daily() {
  // @@protoc_insertion_point(destructor:ProtoActivity.GameAcitivity4399Daily)
  SharedDtor();
}

void GameAcitivity4399Daily::SharedDtor() {
  if (this != default_instance_) {
    delete data_;
  }
}

void GameAcitivity4399Daily::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GameAcitivity4399Daily::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GameAcitivity4399Daily_descriptor_;
}

const GameAcitivity4399Daily& GameAcitivity4399Daily::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoActivity_2eproto();
  return *default_instance_;
}

GameAcitivity4399Daily* GameAcitivity4399Daily::default_instance_ = NULL;

GameAcitivity4399Daily* GameAcitivity4399Daily::New() const {
  return new GameAcitivity4399Daily;
}

void GameAcitivity4399Daily::Clear() {
  if (has_data()) {
    if (data_ != NULL) data_->::ProtoActivity::GameAcitivityCPP::Clear();
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GameAcitivity4399Daily::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoActivity.GameAcitivity4399Daily)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .ProtoActivity.GameAcitivityCPP data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_data()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoActivity.GameAcitivity4399Daily)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoActivity.GameAcitivity4399Daily)
  return false;
#undef DO_
}

void GameAcitivity4399Daily::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoActivity.GameAcitivity4399Daily)
  // required .ProtoActivity.GameAcitivityCPP data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->data(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoActivity.GameAcitivity4399Daily)
}

::google::protobuf::uint8* GameAcitivity4399Daily::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoActivity.GameAcitivity4399Daily)
  // required .ProtoActivity.GameAcitivityCPP data = 1;
  if (has_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->data(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoActivity.GameAcitivity4399Daily)
  return target;
}

int GameAcitivity4399Daily::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .ProtoActivity.GameAcitivityCPP data = 1;
    if (has_data()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->data());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GameAcitivity4399Daily::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GameAcitivity4399Daily* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GameAcitivity4399Daily*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GameAcitivity4399Daily::MergeFrom(const GameAcitivity4399Daily& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      mutable_data()->::ProtoActivity::GameAcitivityCPP::MergeFrom(from.data());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GameAcitivity4399Daily::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GameAcitivity4399Daily::CopyFrom(const GameAcitivity4399Daily& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GameAcitivity4399Daily::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (has_data()) {
    if (!this->data().IsInitialized()) return false;
  }
  return true;
}

void GameAcitivity4399Daily::Swap(GameAcitivity4399Daily* other) {
  if (other != this) {
    std::swap(data_, other->data_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GameAcitivity4399Daily::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GameAcitivity4399Daily_descriptor_;
  metadata.reflection = GameAcitivity4399Daily_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int UseCardReq::kTypeFieldNumber;
#endif  // !_MSC_VER

UseCardReq::UseCardReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoActivity.UseCardReq)
}

void UseCardReq::InitAsDefaultInstance() {
}

UseCardReq::UseCardReq(const UseCardReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ProtoActivity.UseCardReq)
}

void UseCardReq::SharedCtor() {
  _cached_size_ = 0;
  type_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

UseCardReq::~UseCardReq() {
  // @@protoc_insertion_point(destructor:ProtoActivity.UseCardReq)
  SharedDtor();
}

void UseCardReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void UseCardReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UseCardReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UseCardReq_descriptor_;
}

const UseCardReq& UseCardReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoActivity_2eproto();
  return *default_instance_;
}

UseCardReq* UseCardReq::default_instance_ = NULL;

UseCardReq* UseCardReq::New() const {
  return new UseCardReq;
}

void UseCardReq::Clear() {
  type_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool UseCardReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoActivity.UseCardReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 type = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoActivity.UseCardReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoActivity.UseCardReq)
  return false;
#undef DO_
}

void UseCardReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoActivity.UseCardReq)
  // required uint32 type = 1;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->type(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoActivity.UseCardReq)
}

::google::protobuf::uint8* UseCardReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoActivity.UseCardReq)
  // required uint32 type = 1;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->type(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoActivity.UseCardReq)
  return target;
}

int UseCardReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 type = 1;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->type());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UseCardReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const UseCardReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const UseCardReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void UseCardReq::MergeFrom(const UseCardReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_type()) {
      set_type(from.type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void UseCardReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UseCardReq::CopyFrom(const UseCardReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UseCardReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void UseCardReq::Swap(UseCardReq* other) {
  if (other != this) {
    std::swap(type_, other->type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata UseCardReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UseCardReq_descriptor_;
  metadata.reflection = UseCardReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int UseCardResp::kCommonsFieldNumber;
#endif  // !_MSC_VER

UseCardResp::UseCardResp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoActivity.UseCardResp)
}

void UseCardResp::InitAsDefaultInstance() {
  commons_ = const_cast< ::DataCommon::CommonItemsCPP*>(&::DataCommon::CommonItemsCPP::default_instance());
}

UseCardResp::UseCardResp(const UseCardResp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ProtoActivity.UseCardResp)
}

void UseCardResp::SharedCtor() {
  _cached_size_ = 0;
  commons_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

UseCardResp::~UseCardResp() {
  // @@protoc_insertion_point(destructor:ProtoActivity.UseCardResp)
  SharedDtor();
}

void UseCardResp::SharedDtor() {
  if (this != default_instance_) {
    delete commons_;
  }
}

void UseCardResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UseCardResp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UseCardResp_descriptor_;
}

const UseCardResp& UseCardResp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoActivity_2eproto();
  return *default_instance_;
}

UseCardResp* UseCardResp::default_instance_ = NULL;

UseCardResp* UseCardResp::New() const {
  return new UseCardResp;
}

void UseCardResp::Clear() {
  if (has_commons()) {
    if (commons_ != NULL) commons_->::DataCommon::CommonItemsCPP::Clear();
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool UseCardResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoActivity.UseCardResp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .DataCommon.CommonItemsCPP commons = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_commons()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoActivity.UseCardResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoActivity.UseCardResp)
  return false;
#undef DO_
}

void UseCardResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoActivity.UseCardResp)
  // required .DataCommon.CommonItemsCPP commons = 1;
  if (has_commons()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->commons(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoActivity.UseCardResp)
}

::google::protobuf::uint8* UseCardResp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoActivity.UseCardResp)
  // required .DataCommon.CommonItemsCPP commons = 1;
  if (has_commons()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->commons(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoActivity.UseCardResp)
  return target;
}

int UseCardResp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .DataCommon.CommonItemsCPP commons = 1;
    if (has_commons()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->commons());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UseCardResp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const UseCardResp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const UseCardResp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void UseCardResp::MergeFrom(const UseCardResp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_commons()) {
      mutable_commons()->::DataCommon::CommonItemsCPP::MergeFrom(from.commons());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void UseCardResp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UseCardResp::CopyFrom(const UseCardResp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UseCardResp::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (has_commons()) {
    if (!this->commons().IsInitialized()) return false;
  }
  return true;
}

void UseCardResp::Swap(UseCardResp* other) {
  if (other != this) {
    std::swap(commons_, other->commons_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata UseCardResp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UseCardResp_descriptor_;
  metadata.reflection = UseCardResp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ShareFriendCPP::kFriendUidFieldNumber;
const int ShareFriendCPP::kInviteTsFieldNumber;
#endif  // !_MSC_VER

ShareFriendCPP::ShareFriendCPP()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoActivity.ShareFriendCPP)
}

void ShareFriendCPP::InitAsDefaultInstance() {
}

ShareFriendCPP::ShareFriendCPP(const ShareFriendCPP& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ProtoActivity.ShareFriendCPP)
}

void ShareFriendCPP::SharedCtor() {
  _cached_size_ = 0;
  frienduid_ = 0u;
  invitets_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ShareFriendCPP::~ShareFriendCPP() {
  // @@protoc_insertion_point(destructor:ProtoActivity.ShareFriendCPP)
  SharedDtor();
}

void ShareFriendCPP::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ShareFriendCPP::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ShareFriendCPP::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ShareFriendCPP_descriptor_;
}

const ShareFriendCPP& ShareFriendCPP::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoActivity_2eproto();
  return *default_instance_;
}

ShareFriendCPP* ShareFriendCPP::default_instance_ = NULL;

ShareFriendCPP* ShareFriendCPP::New() const {
  return new ShareFriendCPP;
}

void ShareFriendCPP::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<ShareFriendCPP*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(frienduid_, invitets_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ShareFriendCPP::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoActivity.ShareFriendCPP)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 friendUid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &frienduid_)));
          set_has_frienduid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_inviteTs;
        break;
      }

      // required uint32 inviteTs = 2;
      case 2: {
        if (tag == 16) {
         parse_inviteTs:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &invitets_)));
          set_has_invitets();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoActivity.ShareFriendCPP)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoActivity.ShareFriendCPP)
  return false;
#undef DO_
}

void ShareFriendCPP::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoActivity.ShareFriendCPP)
  // required uint32 friendUid = 1;
  if (has_frienduid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->frienduid(), output);
  }

  // required uint32 inviteTs = 2;
  if (has_invitets()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->invitets(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoActivity.ShareFriendCPP)
}

::google::protobuf::uint8* ShareFriendCPP::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoActivity.ShareFriendCPP)
  // required uint32 friendUid = 1;
  if (has_frienduid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->frienduid(), target);
  }

  // required uint32 inviteTs = 2;
  if (has_invitets()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->invitets(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoActivity.ShareFriendCPP)
  return target;
}

int ShareFriendCPP::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 friendUid = 1;
    if (has_frienduid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->frienduid());
    }

    // required uint32 inviteTs = 2;
    if (has_invitets()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->invitets());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ShareFriendCPP::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ShareFriendCPP* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ShareFriendCPP*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ShareFriendCPP::MergeFrom(const ShareFriendCPP& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_frienduid()) {
      set_frienduid(from.frienduid());
    }
    if (from.has_invitets()) {
      set_invitets(from.invitets());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ShareFriendCPP::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ShareFriendCPP::CopyFrom(const ShareFriendCPP& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ShareFriendCPP::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void ShareFriendCPP::Swap(ShareFriendCPP* other) {
  if (other != this) {
    std::swap(frienduid_, other->frienduid_);
    std::swap(invitets_, other->invitets_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ShareFriendCPP::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ShareFriendCPP_descriptor_;
  metadata.reflection = ShareFriendCPP_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int NewShareCPP::kNextShareTsFieldNumber;
const int NewShareCPP::kRemainShareCntFieldNumber;
#endif  // !_MSC_VER

NewShareCPP::NewShareCPP()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoActivity.NewShareCPP)
}

void NewShareCPP::InitAsDefaultInstance() {
}

NewShareCPP::NewShareCPP(const NewShareCPP& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ProtoActivity.NewShareCPP)
}

void NewShareCPP::SharedCtor() {
  _cached_size_ = 0;
  nextsharets_ = 0u;
  remainsharecnt_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

NewShareCPP::~NewShareCPP() {
  // @@protoc_insertion_point(destructor:ProtoActivity.NewShareCPP)
  SharedDtor();
}

void NewShareCPP::SharedDtor() {
  if (this != default_instance_) {
  }
}

void NewShareCPP::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NewShareCPP::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return NewShareCPP_descriptor_;
}

const NewShareCPP& NewShareCPP::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoActivity_2eproto();
  return *default_instance_;
}

NewShareCPP* NewShareCPP::default_instance_ = NULL;

NewShareCPP* NewShareCPP::New() const {
  return new NewShareCPP;
}

void NewShareCPP::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<NewShareCPP*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(nextsharets_, remainsharecnt_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool NewShareCPP::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoActivity.NewShareCPP)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 nextShareTs = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &nextsharets_)));
          set_has_nextsharets();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_remainShareCnt;
        break;
      }

      // required uint32 remainShareCnt = 2;
      case 2: {
        if (tag == 16) {
         parse_remainShareCnt:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &remainsharecnt_)));
          set_has_remainsharecnt();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoActivity.NewShareCPP)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoActivity.NewShareCPP)
  return false;
#undef DO_
}

void NewShareCPP::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoActivity.NewShareCPP)
  // required uint32 nextShareTs = 1;
  if (has_nextsharets()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->nextsharets(), output);
  }

  // required uint32 remainShareCnt = 2;
  if (has_remainsharecnt()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->remainsharecnt(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoActivity.NewShareCPP)
}

::google::protobuf::uint8* NewShareCPP::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoActivity.NewShareCPP)
  // required uint32 nextShareTs = 1;
  if (has_nextsharets()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->nextsharets(), target);
  }

  // required uint32 remainShareCnt = 2;
  if (has_remainsharecnt()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->remainsharecnt(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoActivity.NewShareCPP)
  return target;
}

int NewShareCPP::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 nextShareTs = 1;
    if (has_nextsharets()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->nextsharets());
    }

    // required uint32 remainShareCnt = 2;
    if (has_remainsharecnt()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->remainsharecnt());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NewShareCPP::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const NewShareCPP* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const NewShareCPP*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void NewShareCPP::MergeFrom(const NewShareCPP& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_nextsharets()) {
      set_nextsharets(from.nextsharets());
    }
    if (from.has_remainsharecnt()) {
      set_remainsharecnt(from.remainsharecnt());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void NewShareCPP::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NewShareCPP::CopyFrom(const NewShareCPP& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NewShareCPP::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void NewShareCPP::Swap(NewShareCPP* other) {
  if (other != this) {
    std::swap(nextsharets_, other->nextsharets_);
    std::swap(remainsharecnt_, other->remainsharecnt_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata NewShareCPP::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = NewShareCPP_descriptor_;
  metadata.reflection = NewShareCPP_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

GetNewShareInfoReq::GetNewShareInfoReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoActivity.GetNewShareInfoReq)
}

void GetNewShareInfoReq::InitAsDefaultInstance() {
}

GetNewShareInfoReq::GetNewShareInfoReq(const GetNewShareInfoReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ProtoActivity.GetNewShareInfoReq)
}

void GetNewShareInfoReq::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GetNewShareInfoReq::~GetNewShareInfoReq() {
  // @@protoc_insertion_point(destructor:ProtoActivity.GetNewShareInfoReq)
  SharedDtor();
}

void GetNewShareInfoReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GetNewShareInfoReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetNewShareInfoReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetNewShareInfoReq_descriptor_;
}

const GetNewShareInfoReq& GetNewShareInfoReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoActivity_2eproto();
  return *default_instance_;
}

GetNewShareInfoReq* GetNewShareInfoReq::default_instance_ = NULL;

GetNewShareInfoReq* GetNewShareInfoReq::New() const {
  return new GetNewShareInfoReq;
}

void GetNewShareInfoReq::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GetNewShareInfoReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoActivity.GetNewShareInfoReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoActivity.GetNewShareInfoReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoActivity.GetNewShareInfoReq)
  return false;
#undef DO_
}

void GetNewShareInfoReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoActivity.GetNewShareInfoReq)
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoActivity.GetNewShareInfoReq)
}

::google::protobuf::uint8* GetNewShareInfoReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoActivity.GetNewShareInfoReq)
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoActivity.GetNewShareInfoReq)
  return target;
}

int GetNewShareInfoReq::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetNewShareInfoReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GetNewShareInfoReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GetNewShareInfoReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GetNewShareInfoReq::MergeFrom(const GetNewShareInfoReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GetNewShareInfoReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetNewShareInfoReq::CopyFrom(const GetNewShareInfoReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetNewShareInfoReq::IsInitialized() const {

  return true;
}

void GetNewShareInfoReq::Swap(GetNewShareInfoReq* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GetNewShareInfoReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetNewShareInfoReq_descriptor_;
  metadata.reflection = GetNewShareInfoReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GetNewShareInfoResp::kFriendFieldNumber;
const int GetNewShareInfoResp::kNewShareFieldNumber;
const int GetNewShareInfoResp::kRewardFlagFieldNumber;
#endif  // !_MSC_VER

GetNewShareInfoResp::GetNewShareInfoResp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoActivity.GetNewShareInfoResp)
}

void GetNewShareInfoResp::InitAsDefaultInstance() {
  newshare_ = const_cast< ::ProtoActivity::NewShareCPP*>(&::ProtoActivity::NewShareCPP::default_instance());
}

GetNewShareInfoResp::GetNewShareInfoResp(const GetNewShareInfoResp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ProtoActivity.GetNewShareInfoResp)
}

void GetNewShareInfoResp::SharedCtor() {
  _cached_size_ = 0;
  newshare_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GetNewShareInfoResp::~GetNewShareInfoResp() {
  // @@protoc_insertion_point(destructor:ProtoActivity.GetNewShareInfoResp)
  SharedDtor();
}

void GetNewShareInfoResp::SharedDtor() {
  if (this != default_instance_) {
    delete newshare_;
  }
}

void GetNewShareInfoResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetNewShareInfoResp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetNewShareInfoResp_descriptor_;
}

const GetNewShareInfoResp& GetNewShareInfoResp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoActivity_2eproto();
  return *default_instance_;
}

GetNewShareInfoResp* GetNewShareInfoResp::default_instance_ = NULL;

GetNewShareInfoResp* GetNewShareInfoResp::New() const {
  return new GetNewShareInfoResp;
}

void GetNewShareInfoResp::Clear() {
  if (has_newshare()) {
    if (newshare_ != NULL) newshare_->::ProtoActivity::NewShareCPP::Clear();
  }
  friend__.Clear();
  rewardflag_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GetNewShareInfoResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoActivity.GetNewShareInfoResp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ProtoActivity.ShareFriendCPP friend = 1;
      case 1: {
        if (tag == 10) {
         parse_friend:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_friend_()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_friend;
        if (input->ExpectTag(18)) goto parse_newShare;
        break;
      }

      // required .ProtoActivity.NewShareCPP newShare = 2;
      case 2: {
        if (tag == 18) {
         parse_newShare:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_newshare()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_rewardFlag;
        break;
      }

      // repeated uint32 rewardFlag = 3;
      case 3: {
        if (tag == 24) {
         parse_rewardFlag:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 24, input, this->mutable_rewardflag())));
        } else if (tag == 26) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_rewardflag())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_rewardFlag;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoActivity.GetNewShareInfoResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoActivity.GetNewShareInfoResp)
  return false;
#undef DO_
}

void GetNewShareInfoResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoActivity.GetNewShareInfoResp)
  // repeated .ProtoActivity.ShareFriendCPP friend = 1;
  for (int i = 0; i < this->friend__size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->friend_(i), output);
  }

  // required .ProtoActivity.NewShareCPP newShare = 2;
  if (has_newshare()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->newshare(), output);
  }

  // repeated uint32 rewardFlag = 3;
  for (int i = 0; i < this->rewardflag_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      3, this->rewardflag(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoActivity.GetNewShareInfoResp)
}

::google::protobuf::uint8* GetNewShareInfoResp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoActivity.GetNewShareInfoResp)
  // repeated .ProtoActivity.ShareFriendCPP friend = 1;
  for (int i = 0; i < this->friend__size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->friend_(i), target);
  }

  // required .ProtoActivity.NewShareCPP newShare = 2;
  if (has_newshare()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->newshare(), target);
  }

  // repeated uint32 rewardFlag = 3;
  for (int i = 0; i < this->rewardflag_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(3, this->rewardflag(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoActivity.GetNewShareInfoResp)
  return target;
}

int GetNewShareInfoResp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // required .ProtoActivity.NewShareCPP newShare = 2;
    if (has_newshare()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->newshare());
    }

  }
  // repeated .ProtoActivity.ShareFriendCPP friend = 1;
  total_size += 1 * this->friend__size();
  for (int i = 0; i < this->friend__size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->friend_(i));
  }

  // repeated uint32 rewardFlag = 3;
  {
    int data_size = 0;
    for (int i = 0; i < this->rewardflag_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->rewardflag(i));
    }
    total_size += 1 * this->rewardflag_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetNewShareInfoResp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GetNewShareInfoResp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GetNewShareInfoResp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GetNewShareInfoResp::MergeFrom(const GetNewShareInfoResp& from) {
  GOOGLE_CHECK_NE(&from, this);
  friend__.MergeFrom(from.friend__);
  rewardflag_.MergeFrom(from.rewardflag_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_newshare()) {
      mutable_newshare()->::ProtoActivity::NewShareCPP::MergeFrom(from.newshare());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GetNewShareInfoResp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetNewShareInfoResp::CopyFrom(const GetNewShareInfoResp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetNewShareInfoResp::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000002) != 0x00000002) return false;

  if (!::google::protobuf::internal::AllAreInitialized(this->friend_())) return false;
  if (has_newshare()) {
    if (!this->newshare().IsInitialized()) return false;
  }
  return true;
}

void GetNewShareInfoResp::Swap(GetNewShareInfoResp* other) {
  if (other != this) {
    friend__.Swap(&other->friend__);
    std::swap(newshare_, other->newshare_);
    rewardflag_.Swap(&other->rewardflag_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GetNewShareInfoResp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetNewShareInfoResp_descriptor_;
  metadata.reflection = GetNewShareInfoResp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

NewShareReq::NewShareReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoActivity.NewShareReq)
}

void NewShareReq::InitAsDefaultInstance() {
}

NewShareReq::NewShareReq(const NewShareReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ProtoActivity.NewShareReq)
}

void NewShareReq::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

NewShareReq::~NewShareReq() {
  // @@protoc_insertion_point(destructor:ProtoActivity.NewShareReq)
  SharedDtor();
}

void NewShareReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void NewShareReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NewShareReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return NewShareReq_descriptor_;
}

const NewShareReq& NewShareReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoActivity_2eproto();
  return *default_instance_;
}

NewShareReq* NewShareReq::default_instance_ = NULL;

NewShareReq* NewShareReq::New() const {
  return new NewShareReq;
}

void NewShareReq::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool NewShareReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoActivity.NewShareReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoActivity.NewShareReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoActivity.NewShareReq)
  return false;
#undef DO_
}

void NewShareReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoActivity.NewShareReq)
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoActivity.NewShareReq)
}

::google::protobuf::uint8* NewShareReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoActivity.NewShareReq)
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoActivity.NewShareReq)
  return target;
}

int NewShareReq::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NewShareReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const NewShareReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const NewShareReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void NewShareReq::MergeFrom(const NewShareReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void NewShareReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NewShareReq::CopyFrom(const NewShareReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NewShareReq::IsInitialized() const {

  return true;
}

void NewShareReq::Swap(NewShareReq* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata NewShareReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = NewShareReq_descriptor_;
  metadata.reflection = NewShareReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int NewShareResp::kCommonFieldNumber;
const int NewShareResp::kNewShareFieldNumber;
#endif  // !_MSC_VER

NewShareResp::NewShareResp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoActivity.NewShareResp)
}

void NewShareResp::InitAsDefaultInstance() {
  common_ = const_cast< ::DataCommon::CommonItemsCPP*>(&::DataCommon::CommonItemsCPP::default_instance());
  newshare_ = const_cast< ::ProtoActivity::NewShareCPP*>(&::ProtoActivity::NewShareCPP::default_instance());
}

NewShareResp::NewShareResp(const NewShareResp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ProtoActivity.NewShareResp)
}

void NewShareResp::SharedCtor() {
  _cached_size_ = 0;
  common_ = NULL;
  newshare_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

NewShareResp::~NewShareResp() {
  // @@protoc_insertion_point(destructor:ProtoActivity.NewShareResp)
  SharedDtor();
}

void NewShareResp::SharedDtor() {
  if (this != default_instance_) {
    delete common_;
    delete newshare_;
  }
}

void NewShareResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NewShareResp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return NewShareResp_descriptor_;
}

const NewShareResp& NewShareResp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoActivity_2eproto();
  return *default_instance_;
}

NewShareResp* NewShareResp::default_instance_ = NULL;

NewShareResp* NewShareResp::New() const {
  return new NewShareResp;
}

void NewShareResp::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    if (has_common()) {
      if (common_ != NULL) common_->::DataCommon::CommonItemsCPP::Clear();
    }
    if (has_newshare()) {
      if (newshare_ != NULL) newshare_->::ProtoActivity::NewShareCPP::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool NewShareResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoActivity.NewShareResp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .DataCommon.CommonItemsCPP common = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_common()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_newShare;
        break;
      }

      // required .ProtoActivity.NewShareCPP newShare = 2;
      case 2: {
        if (tag == 18) {
         parse_newShare:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_newshare()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoActivity.NewShareResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoActivity.NewShareResp)
  return false;
#undef DO_
}

void NewShareResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoActivity.NewShareResp)
  // required .DataCommon.CommonItemsCPP common = 1;
  if (has_common()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->common(), output);
  }

  // required .ProtoActivity.NewShareCPP newShare = 2;
  if (has_newshare()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->newshare(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoActivity.NewShareResp)
}

::google::protobuf::uint8* NewShareResp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoActivity.NewShareResp)
  // required .DataCommon.CommonItemsCPP common = 1;
  if (has_common()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->common(), target);
  }

  // required .ProtoActivity.NewShareCPP newShare = 2;
  if (has_newshare()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->newshare(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoActivity.NewShareResp)
  return target;
}

int NewShareResp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .DataCommon.CommonItemsCPP common = 1;
    if (has_common()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->common());
    }

    // required .ProtoActivity.NewShareCPP newShare = 2;
    if (has_newshare()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->newshare());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NewShareResp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const NewShareResp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const NewShareResp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void NewShareResp::MergeFrom(const NewShareResp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_common()) {
      mutable_common()->::DataCommon::CommonItemsCPP::MergeFrom(from.common());
    }
    if (from.has_newshare()) {
      mutable_newshare()->::ProtoActivity::NewShareCPP::MergeFrom(from.newshare());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void NewShareResp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NewShareResp::CopyFrom(const NewShareResp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NewShareResp::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  if (has_common()) {
    if (!this->common().IsInitialized()) return false;
  }
  if (has_newshare()) {
    if (!this->newshare().IsInitialized()) return false;
  }
  return true;
}

void NewShareResp::Swap(NewShareResp* other) {
  if (other != this) {
    std::swap(common_, other->common_);
    std::swap(newshare_, other->newshare_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata NewShareResp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = NewShareResp_descriptor_;
  metadata.reflection = NewShareResp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int RewardNewShareReq::kIndexFieldNumber;
#endif  // !_MSC_VER

RewardNewShareReq::RewardNewShareReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoActivity.RewardNewShareReq)
}

void RewardNewShareReq::InitAsDefaultInstance() {
}

RewardNewShareReq::RewardNewShareReq(const RewardNewShareReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ProtoActivity.RewardNewShareReq)
}

void RewardNewShareReq::SharedCtor() {
  _cached_size_ = 0;
  index_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RewardNewShareReq::~RewardNewShareReq() {
  // @@protoc_insertion_point(destructor:ProtoActivity.RewardNewShareReq)
  SharedDtor();
}

void RewardNewShareReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void RewardNewShareReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RewardNewShareReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RewardNewShareReq_descriptor_;
}

const RewardNewShareReq& RewardNewShareReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoActivity_2eproto();
  return *default_instance_;
}

RewardNewShareReq* RewardNewShareReq::default_instance_ = NULL;

RewardNewShareReq* RewardNewShareReq::New() const {
  return new RewardNewShareReq;
}

void RewardNewShareReq::Clear() {
  index_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool RewardNewShareReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoActivity.RewardNewShareReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 index = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &index_)));
          set_has_index();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoActivity.RewardNewShareReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoActivity.RewardNewShareReq)
  return false;
#undef DO_
}

void RewardNewShareReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoActivity.RewardNewShareReq)
  // required uint32 index = 1;
  if (has_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->index(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoActivity.RewardNewShareReq)
}

::google::protobuf::uint8* RewardNewShareReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoActivity.RewardNewShareReq)
  // required uint32 index = 1;
  if (has_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->index(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoActivity.RewardNewShareReq)
  return target;
}

int RewardNewShareReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 index = 1;
    if (has_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->index());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RewardNewShareReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const RewardNewShareReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const RewardNewShareReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void RewardNewShareReq::MergeFrom(const RewardNewShareReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_index()) {
      set_index(from.index());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void RewardNewShareReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RewardNewShareReq::CopyFrom(const RewardNewShareReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RewardNewShareReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void RewardNewShareReq::Swap(RewardNewShareReq* other) {
  if (other != this) {
    std::swap(index_, other->index_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata RewardNewShareReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RewardNewShareReq_descriptor_;
  metadata.reflection = RewardNewShareReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int RewardNewShareResp::kRewardFlagFieldNumber;
const int RewardNewShareResp::kCommonFieldNumber;
#endif  // !_MSC_VER

RewardNewShareResp::RewardNewShareResp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoActivity.RewardNewShareResp)
}

void RewardNewShareResp::InitAsDefaultInstance() {
  common_ = const_cast< ::DataCommon::CommonItemsCPP*>(&::DataCommon::CommonItemsCPP::default_instance());
}

RewardNewShareResp::RewardNewShareResp(const RewardNewShareResp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ProtoActivity.RewardNewShareResp)
}

void RewardNewShareResp::SharedCtor() {
  _cached_size_ = 0;
  common_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RewardNewShareResp::~RewardNewShareResp() {
  // @@protoc_insertion_point(destructor:ProtoActivity.RewardNewShareResp)
  SharedDtor();
}

void RewardNewShareResp::SharedDtor() {
  if (this != default_instance_) {
    delete common_;
  }
}

void RewardNewShareResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RewardNewShareResp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RewardNewShareResp_descriptor_;
}

const RewardNewShareResp& RewardNewShareResp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoActivity_2eproto();
  return *default_instance_;
}

RewardNewShareResp* RewardNewShareResp::default_instance_ = NULL;

RewardNewShareResp* RewardNewShareResp::New() const {
  return new RewardNewShareResp;
}

void RewardNewShareResp::Clear() {
  if (has_common()) {
    if (common_ != NULL) common_->::DataCommon::CommonItemsCPP::Clear();
  }
  rewardflag_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool RewardNewShareResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoActivity.RewardNewShareResp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint32 rewardFlag = 1;
      case 1: {
        if (tag == 8) {
         parse_rewardFlag:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 8, input, this->mutable_rewardflag())));
        } else if (tag == 10) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_rewardflag())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(8)) goto parse_rewardFlag;
        if (input->ExpectTag(18)) goto parse_common;
        break;
      }

      // required .DataCommon.CommonItemsCPP common = 2;
      case 2: {
        if (tag == 18) {
         parse_common:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_common()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoActivity.RewardNewShareResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoActivity.RewardNewShareResp)
  return false;
#undef DO_
}

void RewardNewShareResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoActivity.RewardNewShareResp)
  // repeated uint32 rewardFlag = 1;
  for (int i = 0; i < this->rewardflag_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      1, this->rewardflag(i), output);
  }

  // required .DataCommon.CommonItemsCPP common = 2;
  if (has_common()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->common(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoActivity.RewardNewShareResp)
}

::google::protobuf::uint8* RewardNewShareResp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoActivity.RewardNewShareResp)
  // repeated uint32 rewardFlag = 1;
  for (int i = 0; i < this->rewardflag_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(1, this->rewardflag(i), target);
  }

  // required .DataCommon.CommonItemsCPP common = 2;
  if (has_common()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->common(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoActivity.RewardNewShareResp)
  return target;
}

int RewardNewShareResp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // required .DataCommon.CommonItemsCPP common = 2;
    if (has_common()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->common());
    }

  }
  // repeated uint32 rewardFlag = 1;
  {
    int data_size = 0;
    for (int i = 0; i < this->rewardflag_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->rewardflag(i));
    }
    total_size += 1 * this->rewardflag_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RewardNewShareResp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const RewardNewShareResp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const RewardNewShareResp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void RewardNewShareResp::MergeFrom(const RewardNewShareResp& from) {
  GOOGLE_CHECK_NE(&from, this);
  rewardflag_.MergeFrom(from.rewardflag_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_common()) {
      mutable_common()->::DataCommon::CommonItemsCPP::MergeFrom(from.common());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void RewardNewShareResp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RewardNewShareResp::CopyFrom(const RewardNewShareResp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RewardNewShareResp::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000002) != 0x00000002) return false;

  if (has_common()) {
    if (!this->common().IsInitialized()) return false;
  }
  return true;
}

void RewardNewShareResp::Swap(RewardNewShareResp* other) {
  if (other != this) {
    rewardflag_.Swap(&other->rewardflag_);
    std::swap(common_, other->common_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata RewardNewShareResp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RewardNewShareResp_descriptor_;
  metadata.reflection = RewardNewShareResp_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace ProtoActivity

// @@protoc_insertion_point(global_scope)
