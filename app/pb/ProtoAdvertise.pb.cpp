// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ProtoAdvertise.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "ProtoAdvertise.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace ProtoAdvertise {

namespace {

const ::google::protobuf::Descriptor* AdInfoCPP_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AdInfoCPP_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetAdInfoReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetAdInfoReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetAdInfoResp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetAdInfoResp_reflection_ = NULL;
const ::google::protobuf::Descriptor* UpdateAdCdReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UpdateAdCdReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* UpdateAdCdResp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UpdateAdCdResp_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_ProtoAdvertise_2eproto() {
  protobuf_AddDesc_ProtoAdvertise_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "ProtoAdvertise.proto");
  GOOGLE_CHECK(file != NULL);
  AdInfoCPP_descriptor_ = file->message_type(0);
  static const int AdInfoCPP_offsets_[10] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AdInfoCPP, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AdInfoCPP, uid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AdInfoCPP, headurl_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AdInfoCPP, level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AdInfoCPP, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AdInfoCPP, propsid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AdInfoCPP, propscnt_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AdInfoCPP, propsprice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AdInfoCPP, helpflag_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AdInfoCPP, ts_),
  };
  AdInfoCPP_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      AdInfoCPP_descriptor_,
      AdInfoCPP::default_instance_,
      AdInfoCPP_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AdInfoCPP, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AdInfoCPP, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(AdInfoCPP));
  GetAdInfoReq_descriptor_ = file->message_type(1);
  static const int GetAdInfoReq_offsets_[1] = {
  };
  GetAdInfoReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GetAdInfoReq_descriptor_,
      GetAdInfoReq::default_instance_,
      GetAdInfoReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetAdInfoReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetAdInfoReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GetAdInfoReq));
  GetAdInfoResp_descriptor_ = file->message_type(2);
  static const int GetAdInfoResp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetAdInfoResp, adinfo_),
  };
  GetAdInfoResp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GetAdInfoResp_descriptor_,
      GetAdInfoResp::default_instance_,
      GetAdInfoResp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetAdInfoResp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetAdInfoResp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GetAdInfoResp));
  UpdateAdCdReq_descriptor_ = file->message_type(3);
  static const int UpdateAdCdReq_offsets_[1] = {
  };
  UpdateAdCdReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      UpdateAdCdReq_descriptor_,
      UpdateAdCdReq::default_instance_,
      UpdateAdCdReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateAdCdReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateAdCdReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(UpdateAdCdReq));
  UpdateAdCdResp_descriptor_ = file->message_type(4);
  static const int UpdateAdCdResp_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateAdCdResp, ts_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateAdCdResp, commons_),
  };
  UpdateAdCdResp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      UpdateAdCdResp_descriptor_,
      UpdateAdCdResp::default_instance_,
      UpdateAdCdResp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateAdCdResp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateAdCdResp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(UpdateAdCdResp));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_ProtoAdvertise_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    AdInfoCPP_descriptor_, &AdInfoCPP::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GetAdInfoReq_descriptor_, &GetAdInfoReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GetAdInfoResp_descriptor_, &GetAdInfoResp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    UpdateAdCdReq_descriptor_, &UpdateAdCdReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    UpdateAdCdResp_descriptor_, &UpdateAdCdResp::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_ProtoAdvertise_2eproto() {
  delete AdInfoCPP::default_instance_;
  delete AdInfoCPP_reflection_;
  delete GetAdInfoReq::default_instance_;
  delete GetAdInfoReq_reflection_;
  delete GetAdInfoResp::default_instance_;
  delete GetAdInfoResp_reflection_;
  delete UpdateAdCdReq::default_instance_;
  delete UpdateAdCdReq_reflection_;
  delete UpdateAdCdResp::default_instance_;
  delete UpdateAdCdResp_reflection_;
}

void protobuf_AddDesc_ProtoAdvertise_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::DataCommon::protobuf_AddDesc_DataCommon_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\024ProtoAdvertise.proto\022\016ProtoAdvertise\032\020"
    "DataCommon.proto\"\247\001\n\tAdInfoCPP\022\n\n\002id\030\001 \002"
    "(\r\022\013\n\003uid\030\002 \002(\r\022\017\n\007headUrl\030\003 \002(\014\022\r\n\005leve"
    "l\030\004 \002(\r\022\014\n\004name\030\005 \002(\014\022\017\n\007propsId\030\006 \002(\r\022\020"
    "\n\010propsCnt\030\007 \002(\r\022\022\n\npropsPrice\030\010 \002(\r\022\020\n\010"
    "helpFlag\030\t \002(\r\022\n\n\002ts\030\n \002(\r\"\016\n\014GetAdInfoR"
    "eq\":\n\rGetAdInfoResp\022)\n\006adInfo\030\001 \003(\0132\031.Pr"
    "otoAdvertise.AdInfoCPP\"\017\n\rUpdateAdCdReq\""
    "I\n\016UpdateAdCdResp\022\n\n\002ts\030\001 \002(\r\022+\n\007commons"
    "\030\002 \002(\0132\032.DataCommon.CommonItemsCPP", 394);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "ProtoAdvertise.proto", &protobuf_RegisterTypes);
  AdInfoCPP::default_instance_ = new AdInfoCPP();
  GetAdInfoReq::default_instance_ = new GetAdInfoReq();
  GetAdInfoResp::default_instance_ = new GetAdInfoResp();
  UpdateAdCdReq::default_instance_ = new UpdateAdCdReq();
  UpdateAdCdResp::default_instance_ = new UpdateAdCdResp();
  AdInfoCPP::default_instance_->InitAsDefaultInstance();
  GetAdInfoReq::default_instance_->InitAsDefaultInstance();
  GetAdInfoResp::default_instance_->InitAsDefaultInstance();
  UpdateAdCdReq::default_instance_->InitAsDefaultInstance();
  UpdateAdCdResp::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_ProtoAdvertise_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_ProtoAdvertise_2eproto {
  StaticDescriptorInitializer_ProtoAdvertise_2eproto() {
    protobuf_AddDesc_ProtoAdvertise_2eproto();
  }
} static_descriptor_initializer_ProtoAdvertise_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int AdInfoCPP::kIdFieldNumber;
const int AdInfoCPP::kUidFieldNumber;
const int AdInfoCPP::kHeadUrlFieldNumber;
const int AdInfoCPP::kLevelFieldNumber;
const int AdInfoCPP::kNameFieldNumber;
const int AdInfoCPP::kPropsIdFieldNumber;
const int AdInfoCPP::kPropsCntFieldNumber;
const int AdInfoCPP::kPropsPriceFieldNumber;
const int AdInfoCPP::kHelpFlagFieldNumber;
const int AdInfoCPP::kTsFieldNumber;
#endif  // !_MSC_VER

AdInfoCPP::AdInfoCPP()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoAdvertise.AdInfoCPP)
}

void AdInfoCPP::InitAsDefaultInstance() {
}

AdInfoCPP::AdInfoCPP(const AdInfoCPP& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ProtoAdvertise.AdInfoCPP)
}

void AdInfoCPP::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  id_ = 0u;
  uid_ = 0u;
  headurl_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  level_ = 0u;
  name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  propsid_ = 0u;
  propscnt_ = 0u;
  propsprice_ = 0u;
  helpflag_ = 0u;
  ts_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

AdInfoCPP::~AdInfoCPP() {
  // @@protoc_insertion_point(destructor:ProtoAdvertise.AdInfoCPP)
  SharedDtor();
}

void AdInfoCPP::SharedDtor() {
  if (headurl_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete headurl_;
  }
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (this != default_instance_) {
  }
}

void AdInfoCPP::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AdInfoCPP::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AdInfoCPP_descriptor_;
}

const AdInfoCPP& AdInfoCPP::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoAdvertise_2eproto();
  return *default_instance_;
}

AdInfoCPP* AdInfoCPP::default_instance_ = NULL;

AdInfoCPP* AdInfoCPP::New() const {
  return new AdInfoCPP;
}

void AdInfoCPP::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<AdInfoCPP*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 255) {
    ZR_(id_, uid_);
    ZR_(level_, propsprice_);
    if (has_headurl()) {
      if (headurl_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        headurl_->clear();
      }
    }
    if (has_name()) {
      if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        name_->clear();
      }
    }
  }
  ZR_(helpflag_, ts_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool AdInfoCPP::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoAdvertise.AdInfoCPP)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_uid;
        break;
      }

      // required uint32 uid = 2;
      case 2: {
        if (tag == 16) {
         parse_uid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uid_)));
          set_has_uid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_headUrl;
        break;
      }

      // required bytes headUrl = 3;
      case 3: {
        if (tag == 26) {
         parse_headUrl:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_headurl()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_level;
        break;
      }

      // required uint32 level = 4;
      case 4: {
        if (tag == 32) {
         parse_level:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &level_)));
          set_has_level();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_name;
        break;
      }

      // required bytes name = 5;
      case 5: {
        if (tag == 42) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_name()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_propsId;
        break;
      }

      // required uint32 propsId = 6;
      case 6: {
        if (tag == 48) {
         parse_propsId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &propsid_)));
          set_has_propsid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_propsCnt;
        break;
      }

      // required uint32 propsCnt = 7;
      case 7: {
        if (tag == 56) {
         parse_propsCnt:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &propscnt_)));
          set_has_propscnt();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_propsPrice;
        break;
      }

      // required uint32 propsPrice = 8;
      case 8: {
        if (tag == 64) {
         parse_propsPrice:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &propsprice_)));
          set_has_propsprice();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_helpFlag;
        break;
      }

      // required uint32 helpFlag = 9;
      case 9: {
        if (tag == 72) {
         parse_helpFlag:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &helpflag_)));
          set_has_helpflag();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(80)) goto parse_ts;
        break;
      }

      // required uint32 ts = 10;
      case 10: {
        if (tag == 80) {
         parse_ts:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ts_)));
          set_has_ts();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoAdvertise.AdInfoCPP)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoAdvertise.AdInfoCPP)
  return false;
#undef DO_
}

void AdInfoCPP::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoAdvertise.AdInfoCPP)
  // required uint32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  // required uint32 uid = 2;
  if (has_uid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->uid(), output);
  }

  // required bytes headUrl = 3;
  if (has_headurl()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->headurl(), output);
  }

  // required uint32 level = 4;
  if (has_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->level(), output);
  }

  // required bytes name = 5;
  if (has_name()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      5, this->name(), output);
  }

  // required uint32 propsId = 6;
  if (has_propsid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->propsid(), output);
  }

  // required uint32 propsCnt = 7;
  if (has_propscnt()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->propscnt(), output);
  }

  // required uint32 propsPrice = 8;
  if (has_propsprice()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->propsprice(), output);
  }

  // required uint32 helpFlag = 9;
  if (has_helpflag()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->helpflag(), output);
  }

  // required uint32 ts = 10;
  if (has_ts()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(10, this->ts(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoAdvertise.AdInfoCPP)
}

::google::protobuf::uint8* AdInfoCPP::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoAdvertise.AdInfoCPP)
  // required uint32 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  // required uint32 uid = 2;
  if (has_uid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->uid(), target);
  }

  // required bytes headUrl = 3;
  if (has_headurl()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->headurl(), target);
  }

  // required uint32 level = 4;
  if (has_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->level(), target);
  }

  // required bytes name = 5;
  if (has_name()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        5, this->name(), target);
  }

  // required uint32 propsId = 6;
  if (has_propsid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->propsid(), target);
  }

  // required uint32 propsCnt = 7;
  if (has_propscnt()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->propscnt(), target);
  }

  // required uint32 propsPrice = 8;
  if (has_propsprice()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->propsprice(), target);
  }

  // required uint32 helpFlag = 9;
  if (has_helpflag()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->helpflag(), target);
  }

  // required uint32 ts = 10;
  if (has_ts()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(10, this->ts(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoAdvertise.AdInfoCPP)
  return target;
}

int AdInfoCPP::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->id());
    }

    // required uint32 uid = 2;
    if (has_uid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->uid());
    }

    // required bytes headUrl = 3;
    if (has_headurl()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->headurl());
    }

    // required uint32 level = 4;
    if (has_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->level());
    }

    // required bytes name = 5;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->name());
    }

    // required uint32 propsId = 6;
    if (has_propsid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->propsid());
    }

    // required uint32 propsCnt = 7;
    if (has_propscnt()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->propscnt());
    }

    // required uint32 propsPrice = 8;
    if (has_propsprice()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->propsprice());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // required uint32 helpFlag = 9;
    if (has_helpflag()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->helpflag());
    }

    // required uint32 ts = 10;
    if (has_ts()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->ts());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AdInfoCPP::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const AdInfoCPP* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const AdInfoCPP*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void AdInfoCPP::MergeFrom(const AdInfoCPP& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_uid()) {
      set_uid(from.uid());
    }
    if (from.has_headurl()) {
      set_headurl(from.headurl());
    }
    if (from.has_level()) {
      set_level(from.level());
    }
    if (from.has_name()) {
      set_name(from.name());
    }
    if (from.has_propsid()) {
      set_propsid(from.propsid());
    }
    if (from.has_propscnt()) {
      set_propscnt(from.propscnt());
    }
    if (from.has_propsprice()) {
      set_propsprice(from.propsprice());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_helpflag()) {
      set_helpflag(from.helpflag());
    }
    if (from.has_ts()) {
      set_ts(from.ts());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void AdInfoCPP::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AdInfoCPP::CopyFrom(const AdInfoCPP& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AdInfoCPP::IsInitialized() const {
  if ((_has_bits_[0] & 0x000003ff) != 0x000003ff) return false;

  return true;
}

void AdInfoCPP::Swap(AdInfoCPP* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(uid_, other->uid_);
    std::swap(headurl_, other->headurl_);
    std::swap(level_, other->level_);
    std::swap(name_, other->name_);
    std::swap(propsid_, other->propsid_);
    std::swap(propscnt_, other->propscnt_);
    std::swap(propsprice_, other->propsprice_);
    std::swap(helpflag_, other->helpflag_);
    std::swap(ts_, other->ts_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata AdInfoCPP::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AdInfoCPP_descriptor_;
  metadata.reflection = AdInfoCPP_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

GetAdInfoReq::GetAdInfoReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoAdvertise.GetAdInfoReq)
}

void GetAdInfoReq::InitAsDefaultInstance() {
}

GetAdInfoReq::GetAdInfoReq(const GetAdInfoReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ProtoAdvertise.GetAdInfoReq)
}

void GetAdInfoReq::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GetAdInfoReq::~GetAdInfoReq() {
  // @@protoc_insertion_point(destructor:ProtoAdvertise.GetAdInfoReq)
  SharedDtor();
}

void GetAdInfoReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GetAdInfoReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetAdInfoReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetAdInfoReq_descriptor_;
}

const GetAdInfoReq& GetAdInfoReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoAdvertise_2eproto();
  return *default_instance_;
}

GetAdInfoReq* GetAdInfoReq::default_instance_ = NULL;

GetAdInfoReq* GetAdInfoReq::New() const {
  return new GetAdInfoReq;
}

void GetAdInfoReq::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GetAdInfoReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoAdvertise.GetAdInfoReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoAdvertise.GetAdInfoReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoAdvertise.GetAdInfoReq)
  return false;
#undef DO_
}

void GetAdInfoReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoAdvertise.GetAdInfoReq)
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoAdvertise.GetAdInfoReq)
}

::google::protobuf::uint8* GetAdInfoReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoAdvertise.GetAdInfoReq)
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoAdvertise.GetAdInfoReq)
  return target;
}

int GetAdInfoReq::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetAdInfoReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GetAdInfoReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GetAdInfoReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GetAdInfoReq::MergeFrom(const GetAdInfoReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GetAdInfoReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetAdInfoReq::CopyFrom(const GetAdInfoReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetAdInfoReq::IsInitialized() const {

  return true;
}

void GetAdInfoReq::Swap(GetAdInfoReq* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GetAdInfoReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetAdInfoReq_descriptor_;
  metadata.reflection = GetAdInfoReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GetAdInfoResp::kAdInfoFieldNumber;
#endif  // !_MSC_VER

GetAdInfoResp::GetAdInfoResp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoAdvertise.GetAdInfoResp)
}

void GetAdInfoResp::InitAsDefaultInstance() {
}

GetAdInfoResp::GetAdInfoResp(const GetAdInfoResp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ProtoAdvertise.GetAdInfoResp)
}

void GetAdInfoResp::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GetAdInfoResp::~GetAdInfoResp() {
  // @@protoc_insertion_point(destructor:ProtoAdvertise.GetAdInfoResp)
  SharedDtor();
}

void GetAdInfoResp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GetAdInfoResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetAdInfoResp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetAdInfoResp_descriptor_;
}

const GetAdInfoResp& GetAdInfoResp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoAdvertise_2eproto();
  return *default_instance_;
}

GetAdInfoResp* GetAdInfoResp::default_instance_ = NULL;

GetAdInfoResp* GetAdInfoResp::New() const {
  return new GetAdInfoResp;
}

void GetAdInfoResp::Clear() {
  adinfo_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GetAdInfoResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoAdvertise.GetAdInfoResp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ProtoAdvertise.AdInfoCPP adInfo = 1;
      case 1: {
        if (tag == 10) {
         parse_adInfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_adinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_adInfo;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoAdvertise.GetAdInfoResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoAdvertise.GetAdInfoResp)
  return false;
#undef DO_
}

void GetAdInfoResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoAdvertise.GetAdInfoResp)
  // repeated .ProtoAdvertise.AdInfoCPP adInfo = 1;
  for (int i = 0; i < this->adinfo_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->adinfo(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoAdvertise.GetAdInfoResp)
}

::google::protobuf::uint8* GetAdInfoResp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoAdvertise.GetAdInfoResp)
  // repeated .ProtoAdvertise.AdInfoCPP adInfo = 1;
  for (int i = 0; i < this->adinfo_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->adinfo(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoAdvertise.GetAdInfoResp)
  return target;
}

int GetAdInfoResp::ByteSize() const {
  int total_size = 0;

  // repeated .ProtoAdvertise.AdInfoCPP adInfo = 1;
  total_size += 1 * this->adinfo_size();
  for (int i = 0; i < this->adinfo_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->adinfo(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetAdInfoResp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GetAdInfoResp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GetAdInfoResp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GetAdInfoResp::MergeFrom(const GetAdInfoResp& from) {
  GOOGLE_CHECK_NE(&from, this);
  adinfo_.MergeFrom(from.adinfo_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GetAdInfoResp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetAdInfoResp::CopyFrom(const GetAdInfoResp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetAdInfoResp::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->adinfo())) return false;
  return true;
}

void GetAdInfoResp::Swap(GetAdInfoResp* other) {
  if (other != this) {
    adinfo_.Swap(&other->adinfo_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GetAdInfoResp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetAdInfoResp_descriptor_;
  metadata.reflection = GetAdInfoResp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

UpdateAdCdReq::UpdateAdCdReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoAdvertise.UpdateAdCdReq)
}

void UpdateAdCdReq::InitAsDefaultInstance() {
}

UpdateAdCdReq::UpdateAdCdReq(const UpdateAdCdReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ProtoAdvertise.UpdateAdCdReq)
}

void UpdateAdCdReq::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

UpdateAdCdReq::~UpdateAdCdReq() {
  // @@protoc_insertion_point(destructor:ProtoAdvertise.UpdateAdCdReq)
  SharedDtor();
}

void UpdateAdCdReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void UpdateAdCdReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UpdateAdCdReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UpdateAdCdReq_descriptor_;
}

const UpdateAdCdReq& UpdateAdCdReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoAdvertise_2eproto();
  return *default_instance_;
}

UpdateAdCdReq* UpdateAdCdReq::default_instance_ = NULL;

UpdateAdCdReq* UpdateAdCdReq::New() const {
  return new UpdateAdCdReq;
}

void UpdateAdCdReq::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool UpdateAdCdReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoAdvertise.UpdateAdCdReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoAdvertise.UpdateAdCdReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoAdvertise.UpdateAdCdReq)
  return false;
#undef DO_
}

void UpdateAdCdReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoAdvertise.UpdateAdCdReq)
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoAdvertise.UpdateAdCdReq)
}

::google::protobuf::uint8* UpdateAdCdReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoAdvertise.UpdateAdCdReq)
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoAdvertise.UpdateAdCdReq)
  return target;
}

int UpdateAdCdReq::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UpdateAdCdReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const UpdateAdCdReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const UpdateAdCdReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void UpdateAdCdReq::MergeFrom(const UpdateAdCdReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void UpdateAdCdReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateAdCdReq::CopyFrom(const UpdateAdCdReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateAdCdReq::IsInitialized() const {

  return true;
}

void UpdateAdCdReq::Swap(UpdateAdCdReq* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata UpdateAdCdReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UpdateAdCdReq_descriptor_;
  metadata.reflection = UpdateAdCdReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int UpdateAdCdResp::kTsFieldNumber;
const int UpdateAdCdResp::kCommonsFieldNumber;
#endif  // !_MSC_VER

UpdateAdCdResp::UpdateAdCdResp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoAdvertise.UpdateAdCdResp)
}

void UpdateAdCdResp::InitAsDefaultInstance() {
  commons_ = const_cast< ::DataCommon::CommonItemsCPP*>(&::DataCommon::CommonItemsCPP::default_instance());
}

UpdateAdCdResp::UpdateAdCdResp(const UpdateAdCdResp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ProtoAdvertise.UpdateAdCdResp)
}

void UpdateAdCdResp::SharedCtor() {
  _cached_size_ = 0;
  ts_ = 0u;
  commons_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

UpdateAdCdResp::~UpdateAdCdResp() {
  // @@protoc_insertion_point(destructor:ProtoAdvertise.UpdateAdCdResp)
  SharedDtor();
}

void UpdateAdCdResp::SharedDtor() {
  if (this != default_instance_) {
    delete commons_;
  }
}

void UpdateAdCdResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UpdateAdCdResp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UpdateAdCdResp_descriptor_;
}

const UpdateAdCdResp& UpdateAdCdResp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoAdvertise_2eproto();
  return *default_instance_;
}

UpdateAdCdResp* UpdateAdCdResp::default_instance_ = NULL;

UpdateAdCdResp* UpdateAdCdResp::New() const {
  return new UpdateAdCdResp;
}

void UpdateAdCdResp::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    ts_ = 0u;
    if (has_commons()) {
      if (commons_ != NULL) commons_->::DataCommon::CommonItemsCPP::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool UpdateAdCdResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoAdvertise.UpdateAdCdResp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 ts = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ts_)));
          set_has_ts();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_commons;
        break;
      }

      // required .DataCommon.CommonItemsCPP commons = 2;
      case 2: {
        if (tag == 18) {
         parse_commons:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_commons()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoAdvertise.UpdateAdCdResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoAdvertise.UpdateAdCdResp)
  return false;
#undef DO_
}

void UpdateAdCdResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoAdvertise.UpdateAdCdResp)
  // required uint32 ts = 1;
  if (has_ts()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->ts(), output);
  }

  // required .DataCommon.CommonItemsCPP commons = 2;
  if (has_commons()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->commons(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoAdvertise.UpdateAdCdResp)
}

::google::protobuf::uint8* UpdateAdCdResp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoAdvertise.UpdateAdCdResp)
  // required uint32 ts = 1;
  if (has_ts()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->ts(), target);
  }

  // required .DataCommon.CommonItemsCPP commons = 2;
  if (has_commons()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->commons(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoAdvertise.UpdateAdCdResp)
  return target;
}

int UpdateAdCdResp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 ts = 1;
    if (has_ts()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->ts());
    }

    // required .DataCommon.CommonItemsCPP commons = 2;
    if (has_commons()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->commons());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UpdateAdCdResp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const UpdateAdCdResp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const UpdateAdCdResp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void UpdateAdCdResp::MergeFrom(const UpdateAdCdResp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_ts()) {
      set_ts(from.ts());
    }
    if (from.has_commons()) {
      mutable_commons()->::DataCommon::CommonItemsCPP::MergeFrom(from.commons());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void UpdateAdCdResp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateAdCdResp::CopyFrom(const UpdateAdCdResp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateAdCdResp::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  if (has_commons()) {
    if (!this->commons().IsInitialized()) return false;
  }
  return true;
}

void UpdateAdCdResp::Swap(UpdateAdCdResp* other) {
  if (other != this) {
    std::swap(ts_, other->ts_);
    std::swap(commons_, other->commons_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata UpdateAdCdResp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UpdateAdCdResp_descriptor_;
  metadata.reflection = UpdateAdCdResp_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace ProtoAdvertise

// @@protoc_insertion_point(global_scope)
