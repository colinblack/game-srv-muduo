// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ProtoAdvertise.proto

#ifndef PROTOBUF_ProtoAdvertise_2eproto__INCLUDED
#define PROTOBUF_ProtoAdvertise_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "DataCommon.pb.h"
// @@protoc_insertion_point(includes)

namespace ProtoAdvertise {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_ProtoAdvertise_2eproto();
void protobuf_AssignDesc_ProtoAdvertise_2eproto();
void protobuf_ShutdownFile_ProtoAdvertise_2eproto();

class AdInfoCPP;
class GetAdInfoReq;
class GetAdInfoResp;
class UpdateAdCdReq;
class UpdateAdCdResp;

// ===================================================================

class AdInfoCPP : public ::google::protobuf::Message {
 public:
  AdInfoCPP();
  virtual ~AdInfoCPP();

  AdInfoCPP(const AdInfoCPP& from);

  inline AdInfoCPP& operator=(const AdInfoCPP& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AdInfoCPP& default_instance();

  void Swap(AdInfoCPP* other);

  // implements Message ----------------------------------------------

  AdInfoCPP* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AdInfoCPP& from);
  void MergeFrom(const AdInfoCPP& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // required uint32 uid = 2;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 2;
  inline ::google::protobuf::uint32 uid() const;
  inline void set_uid(::google::protobuf::uint32 value);

  // required bytes headUrl = 3;
  inline bool has_headurl() const;
  inline void clear_headurl();
  static const int kHeadUrlFieldNumber = 3;
  inline const ::std::string& headurl() const;
  inline void set_headurl(const ::std::string& value);
  inline void set_headurl(const char* value);
  inline void set_headurl(const void* value, size_t size);
  inline ::std::string* mutable_headurl();
  inline ::std::string* release_headurl();
  inline void set_allocated_headurl(::std::string* headurl);

  // required uint32 level = 4;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 4;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);

  // required bytes name = 5;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 5;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const void* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // required uint32 propsId = 6;
  inline bool has_propsid() const;
  inline void clear_propsid();
  static const int kPropsIdFieldNumber = 6;
  inline ::google::protobuf::uint32 propsid() const;
  inline void set_propsid(::google::protobuf::uint32 value);

  // required uint32 propsCnt = 7;
  inline bool has_propscnt() const;
  inline void clear_propscnt();
  static const int kPropsCntFieldNumber = 7;
  inline ::google::protobuf::uint32 propscnt() const;
  inline void set_propscnt(::google::protobuf::uint32 value);

  // required uint32 propsPrice = 8;
  inline bool has_propsprice() const;
  inline void clear_propsprice();
  static const int kPropsPriceFieldNumber = 8;
  inline ::google::protobuf::uint32 propsprice() const;
  inline void set_propsprice(::google::protobuf::uint32 value);

  // required uint32 helpFlag = 9;
  inline bool has_helpflag() const;
  inline void clear_helpflag();
  static const int kHelpFlagFieldNumber = 9;
  inline ::google::protobuf::uint32 helpflag() const;
  inline void set_helpflag(::google::protobuf::uint32 value);

  // required uint32 ts = 10;
  inline bool has_ts() const;
  inline void clear_ts();
  static const int kTsFieldNumber = 10;
  inline ::google::protobuf::uint32 ts() const;
  inline void set_ts(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoAdvertise.AdInfoCPP)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_headurl();
  inline void clear_has_headurl();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_propsid();
  inline void clear_has_propsid();
  inline void set_has_propscnt();
  inline void clear_has_propscnt();
  inline void set_has_propsprice();
  inline void clear_has_propsprice();
  inline void set_has_helpflag();
  inline void clear_has_helpflag();
  inline void set_has_ts();
  inline void clear_has_ts();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 uid_;
  ::std::string* headurl_;
  ::std::string* name_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint32 propsid_;
  ::google::protobuf::uint32 propscnt_;
  ::google::protobuf::uint32 propsprice_;
  ::google::protobuf::uint32 helpflag_;
  ::google::protobuf::uint32 ts_;
  friend void  protobuf_AddDesc_ProtoAdvertise_2eproto();
  friend void protobuf_AssignDesc_ProtoAdvertise_2eproto();
  friend void protobuf_ShutdownFile_ProtoAdvertise_2eproto();

  void InitAsDefaultInstance();
  static AdInfoCPP* default_instance_;
};
// -------------------------------------------------------------------

class GetAdInfoReq : public ::google::protobuf::Message {
 public:
  GetAdInfoReq();
  virtual ~GetAdInfoReq();

  GetAdInfoReq(const GetAdInfoReq& from);

  inline GetAdInfoReq& operator=(const GetAdInfoReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetAdInfoReq& default_instance();

  void Swap(GetAdInfoReq* other);

  // implements Message ----------------------------------------------

  GetAdInfoReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetAdInfoReq& from);
  void MergeFrom(const GetAdInfoReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:ProtoAdvertise.GetAdInfoReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_ProtoAdvertise_2eproto();
  friend void protobuf_AssignDesc_ProtoAdvertise_2eproto();
  friend void protobuf_ShutdownFile_ProtoAdvertise_2eproto();

  void InitAsDefaultInstance();
  static GetAdInfoReq* default_instance_;
};
// -------------------------------------------------------------------

class GetAdInfoResp : public ::google::protobuf::Message {
 public:
  GetAdInfoResp();
  virtual ~GetAdInfoResp();

  GetAdInfoResp(const GetAdInfoResp& from);

  inline GetAdInfoResp& operator=(const GetAdInfoResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetAdInfoResp& default_instance();

  void Swap(GetAdInfoResp* other);

  // implements Message ----------------------------------------------

  GetAdInfoResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetAdInfoResp& from);
  void MergeFrom(const GetAdInfoResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .ProtoAdvertise.AdInfoCPP adInfo = 1;
  inline int adinfo_size() const;
  inline void clear_adinfo();
  static const int kAdInfoFieldNumber = 1;
  inline const ::ProtoAdvertise::AdInfoCPP& adinfo(int index) const;
  inline ::ProtoAdvertise::AdInfoCPP* mutable_adinfo(int index);
  inline ::ProtoAdvertise::AdInfoCPP* add_adinfo();
  inline const ::google::protobuf::RepeatedPtrField< ::ProtoAdvertise::AdInfoCPP >&
      adinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::ProtoAdvertise::AdInfoCPP >*
      mutable_adinfo();

  // @@protoc_insertion_point(class_scope:ProtoAdvertise.GetAdInfoResp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::ProtoAdvertise::AdInfoCPP > adinfo_;
  friend void  protobuf_AddDesc_ProtoAdvertise_2eproto();
  friend void protobuf_AssignDesc_ProtoAdvertise_2eproto();
  friend void protobuf_ShutdownFile_ProtoAdvertise_2eproto();

  void InitAsDefaultInstance();
  static GetAdInfoResp* default_instance_;
};
// -------------------------------------------------------------------

class UpdateAdCdReq : public ::google::protobuf::Message {
 public:
  UpdateAdCdReq();
  virtual ~UpdateAdCdReq();

  UpdateAdCdReq(const UpdateAdCdReq& from);

  inline UpdateAdCdReq& operator=(const UpdateAdCdReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UpdateAdCdReq& default_instance();

  void Swap(UpdateAdCdReq* other);

  // implements Message ----------------------------------------------

  UpdateAdCdReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UpdateAdCdReq& from);
  void MergeFrom(const UpdateAdCdReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:ProtoAdvertise.UpdateAdCdReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_ProtoAdvertise_2eproto();
  friend void protobuf_AssignDesc_ProtoAdvertise_2eproto();
  friend void protobuf_ShutdownFile_ProtoAdvertise_2eproto();

  void InitAsDefaultInstance();
  static UpdateAdCdReq* default_instance_;
};
// -------------------------------------------------------------------

class UpdateAdCdResp : public ::google::protobuf::Message {
 public:
  UpdateAdCdResp();
  virtual ~UpdateAdCdResp();

  UpdateAdCdResp(const UpdateAdCdResp& from);

  inline UpdateAdCdResp& operator=(const UpdateAdCdResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UpdateAdCdResp& default_instance();

  void Swap(UpdateAdCdResp* other);

  // implements Message ----------------------------------------------

  UpdateAdCdResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UpdateAdCdResp& from);
  void MergeFrom(const UpdateAdCdResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 ts = 1;
  inline bool has_ts() const;
  inline void clear_ts();
  static const int kTsFieldNumber = 1;
  inline ::google::protobuf::uint32 ts() const;
  inline void set_ts(::google::protobuf::uint32 value);

  // required .DataCommon.CommonItemsCPP commons = 2;
  inline bool has_commons() const;
  inline void clear_commons();
  static const int kCommonsFieldNumber = 2;
  inline const ::DataCommon::CommonItemsCPP& commons() const;
  inline ::DataCommon::CommonItemsCPP* mutable_commons();
  inline ::DataCommon::CommonItemsCPP* release_commons();
  inline void set_allocated_commons(::DataCommon::CommonItemsCPP* commons);

  // @@protoc_insertion_point(class_scope:ProtoAdvertise.UpdateAdCdResp)
 private:
  inline void set_has_ts();
  inline void clear_has_ts();
  inline void set_has_commons();
  inline void clear_has_commons();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::DataCommon::CommonItemsCPP* commons_;
  ::google::protobuf::uint32 ts_;
  friend void  protobuf_AddDesc_ProtoAdvertise_2eproto();
  friend void protobuf_AssignDesc_ProtoAdvertise_2eproto();
  friend void protobuf_ShutdownFile_ProtoAdvertise_2eproto();

  void InitAsDefaultInstance();
  static UpdateAdCdResp* default_instance_;
};
// ===================================================================


// ===================================================================

// AdInfoCPP

// required uint32 id = 1;
inline bool AdInfoCPP::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AdInfoCPP::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AdInfoCPP::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AdInfoCPP::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 AdInfoCPP::id() const {
  // @@protoc_insertion_point(field_get:ProtoAdvertise.AdInfoCPP.id)
  return id_;
}
inline void AdInfoCPP::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:ProtoAdvertise.AdInfoCPP.id)
}

// required uint32 uid = 2;
inline bool AdInfoCPP::has_uid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AdInfoCPP::set_has_uid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AdInfoCPP::clear_has_uid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AdInfoCPP::clear_uid() {
  uid_ = 0u;
  clear_has_uid();
}
inline ::google::protobuf::uint32 AdInfoCPP::uid() const {
  // @@protoc_insertion_point(field_get:ProtoAdvertise.AdInfoCPP.uid)
  return uid_;
}
inline void AdInfoCPP::set_uid(::google::protobuf::uint32 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:ProtoAdvertise.AdInfoCPP.uid)
}

// required bytes headUrl = 3;
inline bool AdInfoCPP::has_headurl() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AdInfoCPP::set_has_headurl() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AdInfoCPP::clear_has_headurl() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AdInfoCPP::clear_headurl() {
  if (headurl_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    headurl_->clear();
  }
  clear_has_headurl();
}
inline const ::std::string& AdInfoCPP::headurl() const {
  // @@protoc_insertion_point(field_get:ProtoAdvertise.AdInfoCPP.headUrl)
  return *headurl_;
}
inline void AdInfoCPP::set_headurl(const ::std::string& value) {
  set_has_headurl();
  if (headurl_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    headurl_ = new ::std::string;
  }
  headurl_->assign(value);
  // @@protoc_insertion_point(field_set:ProtoAdvertise.AdInfoCPP.headUrl)
}
inline void AdInfoCPP::set_headurl(const char* value) {
  set_has_headurl();
  if (headurl_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    headurl_ = new ::std::string;
  }
  headurl_->assign(value);
  // @@protoc_insertion_point(field_set_char:ProtoAdvertise.AdInfoCPP.headUrl)
}
inline void AdInfoCPP::set_headurl(const void* value, size_t size) {
  set_has_headurl();
  if (headurl_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    headurl_ = new ::std::string;
  }
  headurl_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ProtoAdvertise.AdInfoCPP.headUrl)
}
inline ::std::string* AdInfoCPP::mutable_headurl() {
  set_has_headurl();
  if (headurl_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    headurl_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:ProtoAdvertise.AdInfoCPP.headUrl)
  return headurl_;
}
inline ::std::string* AdInfoCPP::release_headurl() {
  clear_has_headurl();
  if (headurl_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = headurl_;
    headurl_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void AdInfoCPP::set_allocated_headurl(::std::string* headurl) {
  if (headurl_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete headurl_;
  }
  if (headurl) {
    set_has_headurl();
    headurl_ = headurl;
  } else {
    clear_has_headurl();
    headurl_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoAdvertise.AdInfoCPP.headUrl)
}

// required uint32 level = 4;
inline bool AdInfoCPP::has_level() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void AdInfoCPP::set_has_level() {
  _has_bits_[0] |= 0x00000008u;
}
inline void AdInfoCPP::clear_has_level() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void AdInfoCPP::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 AdInfoCPP::level() const {
  // @@protoc_insertion_point(field_get:ProtoAdvertise.AdInfoCPP.level)
  return level_;
}
inline void AdInfoCPP::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:ProtoAdvertise.AdInfoCPP.level)
}

// required bytes name = 5;
inline bool AdInfoCPP::has_name() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void AdInfoCPP::set_has_name() {
  _has_bits_[0] |= 0x00000010u;
}
inline void AdInfoCPP::clear_has_name() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void AdInfoCPP::clear_name() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& AdInfoCPP::name() const {
  // @@protoc_insertion_point(field_get:ProtoAdvertise.AdInfoCPP.name)
  return *name_;
}
inline void AdInfoCPP::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set:ProtoAdvertise.AdInfoCPP.name)
}
inline void AdInfoCPP::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set_char:ProtoAdvertise.AdInfoCPP.name)
}
inline void AdInfoCPP::set_name(const void* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ProtoAdvertise.AdInfoCPP.name)
}
inline ::std::string* AdInfoCPP::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:ProtoAdvertise.AdInfoCPP.name)
  return name_;
}
inline ::std::string* AdInfoCPP::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void AdInfoCPP::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoAdvertise.AdInfoCPP.name)
}

// required uint32 propsId = 6;
inline bool AdInfoCPP::has_propsid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void AdInfoCPP::set_has_propsid() {
  _has_bits_[0] |= 0x00000020u;
}
inline void AdInfoCPP::clear_has_propsid() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void AdInfoCPP::clear_propsid() {
  propsid_ = 0u;
  clear_has_propsid();
}
inline ::google::protobuf::uint32 AdInfoCPP::propsid() const {
  // @@protoc_insertion_point(field_get:ProtoAdvertise.AdInfoCPP.propsId)
  return propsid_;
}
inline void AdInfoCPP::set_propsid(::google::protobuf::uint32 value) {
  set_has_propsid();
  propsid_ = value;
  // @@protoc_insertion_point(field_set:ProtoAdvertise.AdInfoCPP.propsId)
}

// required uint32 propsCnt = 7;
inline bool AdInfoCPP::has_propscnt() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void AdInfoCPP::set_has_propscnt() {
  _has_bits_[0] |= 0x00000040u;
}
inline void AdInfoCPP::clear_has_propscnt() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void AdInfoCPP::clear_propscnt() {
  propscnt_ = 0u;
  clear_has_propscnt();
}
inline ::google::protobuf::uint32 AdInfoCPP::propscnt() const {
  // @@protoc_insertion_point(field_get:ProtoAdvertise.AdInfoCPP.propsCnt)
  return propscnt_;
}
inline void AdInfoCPP::set_propscnt(::google::protobuf::uint32 value) {
  set_has_propscnt();
  propscnt_ = value;
  // @@protoc_insertion_point(field_set:ProtoAdvertise.AdInfoCPP.propsCnt)
}

// required uint32 propsPrice = 8;
inline bool AdInfoCPP::has_propsprice() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void AdInfoCPP::set_has_propsprice() {
  _has_bits_[0] |= 0x00000080u;
}
inline void AdInfoCPP::clear_has_propsprice() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void AdInfoCPP::clear_propsprice() {
  propsprice_ = 0u;
  clear_has_propsprice();
}
inline ::google::protobuf::uint32 AdInfoCPP::propsprice() const {
  // @@protoc_insertion_point(field_get:ProtoAdvertise.AdInfoCPP.propsPrice)
  return propsprice_;
}
inline void AdInfoCPP::set_propsprice(::google::protobuf::uint32 value) {
  set_has_propsprice();
  propsprice_ = value;
  // @@protoc_insertion_point(field_set:ProtoAdvertise.AdInfoCPP.propsPrice)
}

// required uint32 helpFlag = 9;
inline bool AdInfoCPP::has_helpflag() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void AdInfoCPP::set_has_helpflag() {
  _has_bits_[0] |= 0x00000100u;
}
inline void AdInfoCPP::clear_has_helpflag() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void AdInfoCPP::clear_helpflag() {
  helpflag_ = 0u;
  clear_has_helpflag();
}
inline ::google::protobuf::uint32 AdInfoCPP::helpflag() const {
  // @@protoc_insertion_point(field_get:ProtoAdvertise.AdInfoCPP.helpFlag)
  return helpflag_;
}
inline void AdInfoCPP::set_helpflag(::google::protobuf::uint32 value) {
  set_has_helpflag();
  helpflag_ = value;
  // @@protoc_insertion_point(field_set:ProtoAdvertise.AdInfoCPP.helpFlag)
}

// required uint32 ts = 10;
inline bool AdInfoCPP::has_ts() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void AdInfoCPP::set_has_ts() {
  _has_bits_[0] |= 0x00000200u;
}
inline void AdInfoCPP::clear_has_ts() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void AdInfoCPP::clear_ts() {
  ts_ = 0u;
  clear_has_ts();
}
inline ::google::protobuf::uint32 AdInfoCPP::ts() const {
  // @@protoc_insertion_point(field_get:ProtoAdvertise.AdInfoCPP.ts)
  return ts_;
}
inline void AdInfoCPP::set_ts(::google::protobuf::uint32 value) {
  set_has_ts();
  ts_ = value;
  // @@protoc_insertion_point(field_set:ProtoAdvertise.AdInfoCPP.ts)
}

// -------------------------------------------------------------------

// GetAdInfoReq

// -------------------------------------------------------------------

// GetAdInfoResp

// repeated .ProtoAdvertise.AdInfoCPP adInfo = 1;
inline int GetAdInfoResp::adinfo_size() const {
  return adinfo_.size();
}
inline void GetAdInfoResp::clear_adinfo() {
  adinfo_.Clear();
}
inline const ::ProtoAdvertise::AdInfoCPP& GetAdInfoResp::adinfo(int index) const {
  // @@protoc_insertion_point(field_get:ProtoAdvertise.GetAdInfoResp.adInfo)
  return adinfo_.Get(index);
}
inline ::ProtoAdvertise::AdInfoCPP* GetAdInfoResp::mutable_adinfo(int index) {
  // @@protoc_insertion_point(field_mutable:ProtoAdvertise.GetAdInfoResp.adInfo)
  return adinfo_.Mutable(index);
}
inline ::ProtoAdvertise::AdInfoCPP* GetAdInfoResp::add_adinfo() {
  // @@protoc_insertion_point(field_add:ProtoAdvertise.GetAdInfoResp.adInfo)
  return adinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ProtoAdvertise::AdInfoCPP >&
GetAdInfoResp::adinfo() const {
  // @@protoc_insertion_point(field_list:ProtoAdvertise.GetAdInfoResp.adInfo)
  return adinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::ProtoAdvertise::AdInfoCPP >*
GetAdInfoResp::mutable_adinfo() {
  // @@protoc_insertion_point(field_mutable_list:ProtoAdvertise.GetAdInfoResp.adInfo)
  return &adinfo_;
}

// -------------------------------------------------------------------

// UpdateAdCdReq

// -------------------------------------------------------------------

// UpdateAdCdResp

// required uint32 ts = 1;
inline bool UpdateAdCdResp::has_ts() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UpdateAdCdResp::set_has_ts() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UpdateAdCdResp::clear_has_ts() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UpdateAdCdResp::clear_ts() {
  ts_ = 0u;
  clear_has_ts();
}
inline ::google::protobuf::uint32 UpdateAdCdResp::ts() const {
  // @@protoc_insertion_point(field_get:ProtoAdvertise.UpdateAdCdResp.ts)
  return ts_;
}
inline void UpdateAdCdResp::set_ts(::google::protobuf::uint32 value) {
  set_has_ts();
  ts_ = value;
  // @@protoc_insertion_point(field_set:ProtoAdvertise.UpdateAdCdResp.ts)
}

// required .DataCommon.CommonItemsCPP commons = 2;
inline bool UpdateAdCdResp::has_commons() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UpdateAdCdResp::set_has_commons() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UpdateAdCdResp::clear_has_commons() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UpdateAdCdResp::clear_commons() {
  if (commons_ != NULL) commons_->::DataCommon::CommonItemsCPP::Clear();
  clear_has_commons();
}
inline const ::DataCommon::CommonItemsCPP& UpdateAdCdResp::commons() const {
  // @@protoc_insertion_point(field_get:ProtoAdvertise.UpdateAdCdResp.commons)
  return commons_ != NULL ? *commons_ : *default_instance_->commons_;
}
inline ::DataCommon::CommonItemsCPP* UpdateAdCdResp::mutable_commons() {
  set_has_commons();
  if (commons_ == NULL) commons_ = new ::DataCommon::CommonItemsCPP;
  // @@protoc_insertion_point(field_mutable:ProtoAdvertise.UpdateAdCdResp.commons)
  return commons_;
}
inline ::DataCommon::CommonItemsCPP* UpdateAdCdResp::release_commons() {
  clear_has_commons();
  ::DataCommon::CommonItemsCPP* temp = commons_;
  commons_ = NULL;
  return temp;
}
inline void UpdateAdCdResp::set_allocated_commons(::DataCommon::CommonItemsCPP* commons) {
  delete commons_;
  commons_ = commons;
  if (commons) {
    set_has_commons();
  } else {
    clear_has_commons();
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoAdvertise.UpdateAdCdResp.commons)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace ProtoAdvertise

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_ProtoAdvertise_2eproto__INCLUDED
