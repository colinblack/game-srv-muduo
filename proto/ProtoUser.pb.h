// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ProtoUser.proto

#ifndef PROTOBUF_ProtoUser_2eproto__INCLUDED
#define PROTOBUF_ProtoUser_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace ProtoUser {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_ProtoUser_2eproto();
void protobuf_AssignDesc_ProtoUser_2eproto();
void protobuf_ShutdownFile_ProtoUser_2eproto();

class Base;
class ChargeItem;
class BuildingsCPP;
class PropsItemCPP;
class EquipmentStarCPP;
class CropLandCPP;
class ProduceEquipCPP;
class FruitCPP;
class AnimalCPP;
class OrderCPP;
class TruckCPP;
class ShippingCPP;
class ShippingBoxCPP;
class ShopCPP;
class TaskCPP;
class MissionCPP;
class ActivityCPP;
class MaidDogCPP;
class FriendlyTreeBasicCPP;
class ShopSellCoinCPP;
class FriendWorkerCPP;
class UnlockPetCPP;

// ===================================================================

class Base : public ::google::protobuf::Message {
 public:
  Base();
  virtual ~Base();

  Base(const Base& from);

  inline Base& operator=(const Base& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Base& default_instance();

  void Swap(Base* other);

  // implements Message ----------------------------------------------

  Base* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Base& from);
  void MergeFrom(const Base& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 uid = 1;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 1;
  inline ::google::protobuf::uint32 uid() const;
  inline void set_uid(::google::protobuf::uint32 value);

  // required uint64 exp = 2;
  inline bool has_exp() const;
  inline void clear_exp();
  static const int kExpFieldNumber = 2;
  inline ::google::protobuf::uint64 exp() const;
  inline void set_exp(::google::protobuf::uint64 value);

  // required uint32 level = 3;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 3;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);

  // required uint32 acccharge = 4;
  inline bool has_acccharge() const;
  inline void clear_acccharge();
  static const int kAccchargeFieldNumber = 4;
  inline ::google::protobuf::uint32 acccharge() const;
  inline void set_acccharge(::google::protobuf::uint32 value);

  // required uint32 viplevel = 5;
  inline bool has_viplevel() const;
  inline void clear_viplevel();
  static const int kViplevelFieldNumber = 5;
  inline ::google::protobuf::uint32 viplevel() const;
  inline void set_viplevel(::google::protobuf::uint32 value);

  // required uint32 cash = 6;
  inline bool has_cash() const;
  inline void clear_cash();
  static const int kCashFieldNumber = 6;
  inline ::google::protobuf::uint32 cash() const;
  inline void set_cash(::google::protobuf::uint32 value);

  // required uint32 coin = 7;
  inline bool has_coin() const;
  inline void clear_coin();
  static const int kCoinFieldNumber = 7;
  inline ::google::protobuf::uint32 coin() const;
  inline void set_coin(::google::protobuf::uint32 value);

  // required uint32 firstRecharge = 8;
  inline bool has_firstrecharge() const;
  inline void clear_firstrecharge();
  static const int kFirstRechargeFieldNumber = 8;
  inline ::google::protobuf::uint32 firstrecharge() const;
  inline void set_firstrecharge(::google::protobuf::uint32 value);

  // required uint32 allianceId = 9;
  inline bool has_allianceid() const;
  inline void clear_allianceid();
  static const int kAllianceIdFieldNumber = 9;
  inline ::google::protobuf::uint32 allianceid() const;
  inline void set_allianceid(::google::protobuf::uint32 value);

  // repeated uint32 barrier = 10;
  inline int barrier_size() const;
  inline void clear_barrier();
  static const int kBarrierFieldNumber = 10;
  inline ::google::protobuf::uint32 barrier(int index) const;
  inline void set_barrier(int index, ::google::protobuf::uint32 value);
  inline void add_barrier(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      barrier() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_barrier();

  // required uint32 lastcreateadts = 11;
  inline bool has_lastcreateadts() const;
  inline void clear_lastcreateadts();
  static const int kLastcreateadtsFieldNumber = 11;
  inline ::google::protobuf::uint32 lastcreateadts() const;
  inline void set_lastcreateadts(::google::protobuf::uint32 value);

  // required uint32 flag = 12;
  inline bool has_flag() const;
  inline void clear_flag();
  static const int kFlagFieldNumber = 12;
  inline ::google::protobuf::uint32 flag() const;
  inline void set_flag(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoUser.Base)
 private:
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_exp();
  inline void clear_has_exp();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_acccharge();
  inline void clear_has_acccharge();
  inline void set_has_viplevel();
  inline void clear_has_viplevel();
  inline void set_has_cash();
  inline void clear_has_cash();
  inline void set_has_coin();
  inline void clear_has_coin();
  inline void set_has_firstrecharge();
  inline void clear_has_firstrecharge();
  inline void set_has_allianceid();
  inline void clear_has_allianceid();
  inline void set_has_lastcreateadts();
  inline void clear_has_lastcreateadts();
  inline void set_has_flag();
  inline void clear_has_flag();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 exp_;
  ::google::protobuf::uint32 uid_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint32 acccharge_;
  ::google::protobuf::uint32 viplevel_;
  ::google::protobuf::uint32 cash_;
  ::google::protobuf::uint32 coin_;
  ::google::protobuf::uint32 firstrecharge_;
  ::google::protobuf::uint32 allianceid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > barrier_;
  ::google::protobuf::uint32 lastcreateadts_;
  ::google::protobuf::uint32 flag_;
  friend void  protobuf_AddDesc_ProtoUser_2eproto();
  friend void protobuf_AssignDesc_ProtoUser_2eproto();
  friend void protobuf_ShutdownFile_ProtoUser_2eproto();

  void InitAsDefaultInstance();
  static Base* default_instance_;
};
// -------------------------------------------------------------------

class ChargeItem : public ::google::protobuf::Message {
 public:
  ChargeItem();
  virtual ~ChargeItem();

  ChargeItem(const ChargeItem& from);

  inline ChargeItem& operator=(const ChargeItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ChargeItem& default_instance();

  void Swap(ChargeItem* other);

  // implements Message ----------------------------------------------

  ChargeItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ChargeItem& from);
  void MergeFrom(const ChargeItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 cash = 1;
  inline bool has_cash() const;
  inline void clear_cash();
  static const int kCashFieldNumber = 1;
  inline ::google::protobuf::uint32 cash() const;
  inline void set_cash(::google::protobuf::uint32 value);

  // required uint32 ts = 2;
  inline bool has_ts() const;
  inline void clear_ts();
  static const int kTsFieldNumber = 2;
  inline ::google::protobuf::uint32 ts() const;
  inline void set_ts(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoUser.ChargeItem)
 private:
  inline void set_has_cash();
  inline void clear_has_cash();
  inline void set_has_ts();
  inline void clear_has_ts();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 cash_;
  ::google::protobuf::uint32 ts_;
  friend void  protobuf_AddDesc_ProtoUser_2eproto();
  friend void protobuf_AssignDesc_ProtoUser_2eproto();
  friend void protobuf_ShutdownFile_ProtoUser_2eproto();

  void InitAsDefaultInstance();
  static ChargeItem* default_instance_;
};
// -------------------------------------------------------------------

class BuildingsCPP : public ::google::protobuf::Message {
 public:
  BuildingsCPP();
  virtual ~BuildingsCPP();

  BuildingsCPP(const BuildingsCPP& from);

  inline BuildingsCPP& operator=(const BuildingsCPP& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BuildingsCPP& default_instance();

  void Swap(BuildingsCPP* other);

  // implements Message ----------------------------------------------

  BuildingsCPP* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BuildingsCPP& from);
  void MergeFrom(const BuildingsCPP& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 ud = 1;
  inline bool has_ud() const;
  inline void clear_ud();
  static const int kUdFieldNumber = 1;
  inline ::google::protobuf::uint32 ud() const;
  inline void set_ud(::google::protobuf::uint32 value);

  // required uint32 buildId = 2;
  inline bool has_buildid() const;
  inline void clear_buildid();
  static const int kBuildIdFieldNumber = 2;
  inline ::google::protobuf::uint32 buildid() const;
  inline void set_buildid(::google::protobuf::uint32 value);

  // repeated uint32 position = 3;
  inline int position_size() const;
  inline void clear_position();
  static const int kPositionFieldNumber = 3;
  inline ::google::protobuf::uint32 position(int index) const;
  inline void set_position(int index, ::google::protobuf::uint32 value);
  inline void add_position(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      position() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_position();

  // required uint32 direct = 4;
  inline bool has_direct() const;
  inline void clear_direct();
  static const int kDirectFieldNumber = 4;
  inline ::google::protobuf::uint32 direct() const;
  inline void set_direct(::google::protobuf::uint32 value);

  // required uint32 doneTime = 5;
  inline bool has_donetime() const;
  inline void clear_donetime();
  static const int kDoneTimeFieldNumber = 5;
  inline ::google::protobuf::uint32 donetime() const;
  inline void set_donetime(::google::protobuf::uint32 value);

  // required uint32 level = 6;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 6;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoUser.BuildingsCPP)
 private:
  inline void set_has_ud();
  inline void clear_has_ud();
  inline void set_has_buildid();
  inline void clear_has_buildid();
  inline void set_has_direct();
  inline void clear_has_direct();
  inline void set_has_donetime();
  inline void clear_has_donetime();
  inline void set_has_level();
  inline void clear_has_level();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 ud_;
  ::google::protobuf::uint32 buildid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > position_;
  ::google::protobuf::uint32 direct_;
  ::google::protobuf::uint32 donetime_;
  ::google::protobuf::uint32 level_;
  friend void  protobuf_AddDesc_ProtoUser_2eproto();
  friend void protobuf_AssignDesc_ProtoUser_2eproto();
  friend void protobuf_ShutdownFile_ProtoUser_2eproto();

  void InitAsDefaultInstance();
  static BuildingsCPP* default_instance_;
};
// -------------------------------------------------------------------

class PropsItemCPP : public ::google::protobuf::Message {
 public:
  PropsItemCPP();
  virtual ~PropsItemCPP();

  PropsItemCPP(const PropsItemCPP& from);

  inline PropsItemCPP& operator=(const PropsItemCPP& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PropsItemCPP& default_instance();

  void Swap(PropsItemCPP* other);

  // implements Message ----------------------------------------------

  PropsItemCPP* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PropsItemCPP& from);
  void MergeFrom(const PropsItemCPP& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 ud = 1;
  inline bool has_ud() const;
  inline void clear_ud();
  static const int kUdFieldNumber = 1;
  inline ::google::protobuf::uint32 ud() const;
  inline void set_ud(::google::protobuf::uint32 value);

  // required uint32 propsId = 2;
  inline bool has_propsid() const;
  inline void clear_propsid();
  static const int kPropsIdFieldNumber = 2;
  inline ::google::protobuf::uint32 propsid() const;
  inline void set_propsid(::google::protobuf::uint32 value);

  // required uint32 itemCnt = 3;
  inline bool has_itemcnt() const;
  inline void clear_itemcnt();
  static const int kItemCntFieldNumber = 3;
  inline ::google::protobuf::uint32 itemcnt() const;
  inline void set_itemcnt(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoUser.PropsItemCPP)
 private:
  inline void set_has_ud();
  inline void clear_has_ud();
  inline void set_has_propsid();
  inline void clear_has_propsid();
  inline void set_has_itemcnt();
  inline void clear_has_itemcnt();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 ud_;
  ::google::protobuf::uint32 propsid_;
  ::google::protobuf::uint32 itemcnt_;
  friend void  protobuf_AddDesc_ProtoUser_2eproto();
  friend void protobuf_AssignDesc_ProtoUser_2eproto();
  friend void protobuf_ShutdownFile_ProtoUser_2eproto();

  void InitAsDefaultInstance();
  static PropsItemCPP* default_instance_;
};
// -------------------------------------------------------------------

class EquipmentStarCPP : public ::google::protobuf::Message {
 public:
  EquipmentStarCPP();
  virtual ~EquipmentStarCPP();

  EquipmentStarCPP(const EquipmentStarCPP& from);

  inline EquipmentStarCPP& operator=(const EquipmentStarCPP& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EquipmentStarCPP& default_instance();

  void Swap(EquipmentStarCPP* other);

  // implements Message ----------------------------------------------

  EquipmentStarCPP* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const EquipmentStarCPP& from);
  void MergeFrom(const EquipmentStarCPP& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // required uint32 star = 2;
  inline bool has_star() const;
  inline void clear_star();
  static const int kStarFieldNumber = 2;
  inline ::google::protobuf::uint32 star() const;
  inline void set_star(::google::protobuf::uint32 value);

  // required uint32 usedtime = 3;
  inline bool has_usedtime() const;
  inline void clear_usedtime();
  static const int kUsedtimeFieldNumber = 3;
  inline ::google::protobuf::uint32 usedtime() const;
  inline void set_usedtime(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoUser.EquipmentStarCPP)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_star();
  inline void clear_has_star();
  inline void set_has_usedtime();
  inline void clear_has_usedtime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 star_;
  ::google::protobuf::uint32 usedtime_;
  friend void  protobuf_AddDesc_ProtoUser_2eproto();
  friend void protobuf_AssignDesc_ProtoUser_2eproto();
  friend void protobuf_ShutdownFile_ProtoUser_2eproto();

  void InitAsDefaultInstance();
  static EquipmentStarCPP* default_instance_;
};
// -------------------------------------------------------------------

class CropLandCPP : public ::google::protobuf::Message {
 public:
  CropLandCPP();
  virtual ~CropLandCPP();

  CropLandCPP(const CropLandCPP& from);

  inline CropLandCPP& operator=(const CropLandCPP& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CropLandCPP& default_instance();

  void Swap(CropLandCPP* other);

  // implements Message ----------------------------------------------

  CropLandCPP* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CropLandCPP& from);
  void MergeFrom(const CropLandCPP& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 ud = 1;
  inline bool has_ud() const;
  inline void clear_ud();
  static const int kUdFieldNumber = 1;
  inline ::google::protobuf::uint32 ud() const;
  inline void set_ud(::google::protobuf::uint32 value);

  // required uint32 plant = 2;
  inline bool has_plant() const;
  inline void clear_plant();
  static const int kPlantFieldNumber = 2;
  inline ::google::protobuf::uint32 plant() const;
  inline void set_plant(::google::protobuf::uint32 value);

  // required uint32 status = 3;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 3;
  inline ::google::protobuf::uint32 status() const;
  inline void set_status(::google::protobuf::uint32 value);

  // required uint32 harvestTime = 4;
  inline bool has_harvesttime() const;
  inline void clear_harvesttime();
  static const int kHarvestTimeFieldNumber = 4;
  inline ::google::protobuf::uint32 harvesttime() const;
  inline void set_harvesttime(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoUser.CropLandCPP)
 private:
  inline void set_has_ud();
  inline void clear_has_ud();
  inline void set_has_plant();
  inline void clear_has_plant();
  inline void set_has_status();
  inline void clear_has_status();
  inline void set_has_harvesttime();
  inline void clear_has_harvesttime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 ud_;
  ::google::protobuf::uint32 plant_;
  ::google::protobuf::uint32 status_;
  ::google::protobuf::uint32 harvesttime_;
  friend void  protobuf_AddDesc_ProtoUser_2eproto();
  friend void protobuf_AssignDesc_ProtoUser_2eproto();
  friend void protobuf_ShutdownFile_ProtoUser_2eproto();

  void InitAsDefaultInstance();
  static CropLandCPP* default_instance_;
};
// -------------------------------------------------------------------

class ProduceEquipCPP : public ::google::protobuf::Message {
 public:
  ProduceEquipCPP();
  virtual ~ProduceEquipCPP();

  ProduceEquipCPP(const ProduceEquipCPP& from);

  inline ProduceEquipCPP& operator=(const ProduceEquipCPP& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProduceEquipCPP& default_instance();

  void Swap(ProduceEquipCPP* other);

  // implements Message ----------------------------------------------

  ProduceEquipCPP* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProduceEquipCPP& from);
  void MergeFrom(const ProduceEquipCPP& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 ud = 1;
  inline bool has_ud() const;
  inline void clear_ud();
  static const int kUdFieldNumber = 1;
  inline ::google::protobuf::uint32 ud() const;
  inline void set_ud(::google::protobuf::uint32 value);

  // required uint32 status = 2;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 2;
  inline ::google::protobuf::uint32 status() const;
  inline void set_status(::google::protobuf::uint32 value);

  // required uint32 queuenum = 3;
  inline bool has_queuenum() const;
  inline void clear_queuenum();
  static const int kQueuenumFieldNumber = 3;
  inline ::google::protobuf::uint32 queuenum() const;
  inline void set_queuenum(::google::protobuf::uint32 value);

  // repeated uint32 queuedata = 4;
  inline int queuedata_size() const;
  inline void clear_queuedata();
  static const int kQueuedataFieldNumber = 4;
  inline ::google::protobuf::uint32 queuedata(int index) const;
  inline void set_queuedata(int index, ::google::protobuf::uint32 value);
  inline void add_queuedata(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      queuedata() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_queuedata();

  // repeated uint32 shelfdata = 5;
  inline int shelfdata_size() const;
  inline void clear_shelfdata();
  static const int kShelfdataFieldNumber = 5;
  inline ::google::protobuf::uint32 shelfdata(int index) const;
  inline void set_shelfdata(int index, ::google::protobuf::uint32 value);
  inline void add_shelfdata(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      shelfdata() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_shelfdata();

  // required uint32 finishtime = 6;
  inline bool has_finishtime() const;
  inline void clear_finishtime();
  static const int kFinishtimeFieldNumber = 6;
  inline ::google::protobuf::uint32 finishtime() const;
  inline void set_finishtime(::google::protobuf::uint32 value);

  // repeated uint32 shelfsource = 7;
  inline int shelfsource_size() const;
  inline void clear_shelfsource();
  static const int kShelfsourceFieldNumber = 7;
  inline ::google::protobuf::uint32 shelfsource(int index) const;
  inline void set_shelfsource(int index, ::google::protobuf::uint32 value);
  inline void add_shelfsource(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      shelfsource() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_shelfsource();

  // optional uint32 keeper = 8;
  inline bool has_keeper() const;
  inline void clear_keeper();
  static const int kKeeperFieldNumber = 8;
  inline ::google::protobuf::uint32 keeper() const;
  inline void set_keeper(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoUser.ProduceEquipCPP)
 private:
  inline void set_has_ud();
  inline void clear_has_ud();
  inline void set_has_status();
  inline void clear_has_status();
  inline void set_has_queuenum();
  inline void clear_has_queuenum();
  inline void set_has_finishtime();
  inline void clear_has_finishtime();
  inline void set_has_keeper();
  inline void clear_has_keeper();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 ud_;
  ::google::protobuf::uint32 status_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > queuedata_;
  ::google::protobuf::uint32 queuenum_;
  ::google::protobuf::uint32 finishtime_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > shelfdata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > shelfsource_;
  ::google::protobuf::uint32 keeper_;
  friend void  protobuf_AddDesc_ProtoUser_2eproto();
  friend void protobuf_AssignDesc_ProtoUser_2eproto();
  friend void protobuf_ShutdownFile_ProtoUser_2eproto();

  void InitAsDefaultInstance();
  static ProduceEquipCPP* default_instance_;
};
// -------------------------------------------------------------------

class FruitCPP : public ::google::protobuf::Message {
 public:
  FruitCPP();
  virtual ~FruitCPP();

  FruitCPP(const FruitCPP& from);

  inline FruitCPP& operator=(const FruitCPP& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FruitCPP& default_instance();

  void Swap(FruitCPP* other);

  // implements Message ----------------------------------------------

  FruitCPP* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FruitCPP& from);
  void MergeFrom(const FruitCPP& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 ud = 1;
  inline bool has_ud() const;
  inline void clear_ud();
  static const int kUdFieldNumber = 1;
  inline ::google::protobuf::uint32 ud() const;
  inline void set_ud(::google::protobuf::uint32 value);

  // required uint32 treeid = 2;
  inline bool has_treeid() const;
  inline void clear_treeid();
  static const int kTreeidFieldNumber = 2;
  inline ::google::protobuf::uint32 treeid() const;
  inline void set_treeid(::google::protobuf::uint32 value);

  // required uint32 status = 3;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 3;
  inline ::google::protobuf::uint32 status() const;
  inline void set_status(::google::protobuf::uint32 value);

  // required uint32 stage = 4;
  inline bool has_stage() const;
  inline void clear_stage();
  static const int kStageFieldNumber = 4;
  inline ::google::protobuf::uint32 stage() const;
  inline void set_stage(::google::protobuf::uint32 value);

  // required uint32 fruitLeftNum = 5;
  inline bool has_fruitleftnum() const;
  inline void clear_fruitleftnum();
  static const int kFruitLeftNumFieldNumber = 5;
  inline ::google::protobuf::uint32 fruitleftnum() const;
  inline void set_fruitleftnum(::google::protobuf::uint32 value);

  // required uint32 harvestTime = 6;
  inline bool has_harvesttime() const;
  inline void clear_harvesttime();
  static const int kHarvestTimeFieldNumber = 6;
  inline ::google::protobuf::uint32 harvesttime() const;
  inline void set_harvesttime(::google::protobuf::uint32 value);

  // optional bytes name = 7;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 7;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const void* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // optional bytes fig = 8;
  inline bool has_fig() const;
  inline void clear_fig();
  static const int kFigFieldNumber = 8;
  inline const ::std::string& fig() const;
  inline void set_fig(const ::std::string& value);
  inline void set_fig(const char* value);
  inline void set_fig(const void* value, size_t size);
  inline ::std::string* mutable_fig();
  inline ::std::string* release_fig();
  inline void set_allocated_fig(::std::string* fig);

  // @@protoc_insertion_point(class_scope:ProtoUser.FruitCPP)
 private:
  inline void set_has_ud();
  inline void clear_has_ud();
  inline void set_has_treeid();
  inline void clear_has_treeid();
  inline void set_has_status();
  inline void clear_has_status();
  inline void set_has_stage();
  inline void clear_has_stage();
  inline void set_has_fruitleftnum();
  inline void clear_has_fruitleftnum();
  inline void set_has_harvesttime();
  inline void clear_has_harvesttime();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_fig();
  inline void clear_has_fig();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 ud_;
  ::google::protobuf::uint32 treeid_;
  ::google::protobuf::uint32 status_;
  ::google::protobuf::uint32 stage_;
  ::google::protobuf::uint32 fruitleftnum_;
  ::google::protobuf::uint32 harvesttime_;
  ::std::string* name_;
  ::std::string* fig_;
  friend void  protobuf_AddDesc_ProtoUser_2eproto();
  friend void protobuf_AssignDesc_ProtoUser_2eproto();
  friend void protobuf_ShutdownFile_ProtoUser_2eproto();

  void InitAsDefaultInstance();
  static FruitCPP* default_instance_;
};
// -------------------------------------------------------------------

class AnimalCPP : public ::google::protobuf::Message {
 public:
  AnimalCPP();
  virtual ~AnimalCPP();

  AnimalCPP(const AnimalCPP& from);

  inline AnimalCPP& operator=(const AnimalCPP& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AnimalCPP& default_instance();

  void Swap(AnimalCPP* other);

  // implements Message ----------------------------------------------

  AnimalCPP* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AnimalCPP& from);
  void MergeFrom(const AnimalCPP& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 ud = 1;
  inline bool has_ud() const;
  inline void clear_ud();
  static const int kUdFieldNumber = 1;
  inline ::google::protobuf::uint32 ud() const;
  inline void set_ud(::google::protobuf::uint32 value);

  // required uint32 residenceUd = 2;
  inline bool has_residenceud() const;
  inline void clear_residenceud();
  static const int kResidenceUdFieldNumber = 2;
  inline ::google::protobuf::uint32 residenceud() const;
  inline void set_residenceud(::google::protobuf::uint32 value);

  // required uint32 animalId = 3;
  inline bool has_animalid() const;
  inline void clear_animalid();
  static const int kAnimalIdFieldNumber = 3;
  inline ::google::protobuf::uint32 animalid() const;
  inline void set_animalid(::google::protobuf::uint32 value);

  // required uint32 status = 4;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 4;
  inline ::google::protobuf::uint32 status() const;
  inline void set_status(::google::protobuf::uint32 value);

  // required uint32 fullTime = 5;
  inline bool has_fulltime() const;
  inline void clear_fulltime();
  static const int kFullTimeFieldNumber = 5;
  inline ::google::protobuf::uint32 fulltime() const;
  inline void set_fulltime(::google::protobuf::uint32 value);

  // optional uint32 keeper = 6;
  inline bool has_keeper() const;
  inline void clear_keeper();
  static const int kKeeperFieldNumber = 6;
  inline ::google::protobuf::uint32 keeper() const;
  inline void set_keeper(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoUser.AnimalCPP)
 private:
  inline void set_has_ud();
  inline void clear_has_ud();
  inline void set_has_residenceud();
  inline void clear_has_residenceud();
  inline void set_has_animalid();
  inline void clear_has_animalid();
  inline void set_has_status();
  inline void clear_has_status();
  inline void set_has_fulltime();
  inline void clear_has_fulltime();
  inline void set_has_keeper();
  inline void clear_has_keeper();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 ud_;
  ::google::protobuf::uint32 residenceud_;
  ::google::protobuf::uint32 animalid_;
  ::google::protobuf::uint32 status_;
  ::google::protobuf::uint32 fulltime_;
  ::google::protobuf::uint32 keeper_;
  friend void  protobuf_AddDesc_ProtoUser_2eproto();
  friend void protobuf_AssignDesc_ProtoUser_2eproto();
  friend void protobuf_ShutdownFile_ProtoUser_2eproto();

  void InitAsDefaultInstance();
  static AnimalCPP* default_instance_;
};
// -------------------------------------------------------------------

class OrderCPP : public ::google::protobuf::Message {
 public:
  OrderCPP();
  virtual ~OrderCPP();

  OrderCPP(const OrderCPP& from);

  inline OrderCPP& operator=(const OrderCPP& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OrderCPP& default_instance();

  void Swap(OrderCPP* other);

  // implements Message ----------------------------------------------

  OrderCPP* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const OrderCPP& from);
  void MergeFrom(const OrderCPP& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 slot = 1;
  inline bool has_slot() const;
  inline void clear_slot();
  static const int kSlotFieldNumber = 1;
  inline ::google::protobuf::uint32 slot() const;
  inline void set_slot(::google::protobuf::uint32 value);

  // required uint32 storageid = 2;
  inline bool has_storageid() const;
  inline void clear_storageid();
  static const int kStorageidFieldNumber = 2;
  inline ::google::protobuf::uint32 storageid() const;
  inline void set_storageid(::google::protobuf::uint32 value);

  // required uint32 levelid = 3;
  inline bool has_levelid() const;
  inline void clear_levelid();
  static const int kLevelidFieldNumber = 3;
  inline ::google::protobuf::uint32 levelid() const;
  inline void set_levelid(::google::protobuf::uint32 value);

  // required bytes orderid = 4;
  inline bool has_orderid() const;
  inline void clear_orderid();
  static const int kOrderidFieldNumber = 4;
  inline const ::std::string& orderid() const;
  inline void set_orderid(const ::std::string& value);
  inline void set_orderid(const char* value);
  inline void set_orderid(const void* value, size_t size);
  inline ::std::string* mutable_orderid();
  inline ::std::string* release_orderid();
  inline void set_allocated_orderid(::std::string* orderid);

  // required uint32 coin = 5;
  inline bool has_coin() const;
  inline void clear_coin();
  static const int kCoinFieldNumber = 5;
  inline ::google::protobuf::uint32 coin() const;
  inline void set_coin(::google::protobuf::uint32 value);

  // required uint32 exp = 6;
  inline bool has_exp() const;
  inline void clear_exp();
  static const int kExpFieldNumber = 6;
  inline ::google::protobuf::uint32 exp() const;
  inline void set_exp(::google::protobuf::uint32 value);

  // required uint32 end_ts = 7;
  inline bool has_end_ts() const;
  inline void clear_end_ts();
  static const int kEndTsFieldNumber = 7;
  inline ::google::protobuf::uint32 end_ts() const;
  inline void set_end_ts(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoUser.OrderCPP)
 private:
  inline void set_has_slot();
  inline void clear_has_slot();
  inline void set_has_storageid();
  inline void clear_has_storageid();
  inline void set_has_levelid();
  inline void clear_has_levelid();
  inline void set_has_orderid();
  inline void clear_has_orderid();
  inline void set_has_coin();
  inline void clear_has_coin();
  inline void set_has_exp();
  inline void clear_has_exp();
  inline void set_has_end_ts();
  inline void clear_has_end_ts();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 slot_;
  ::google::protobuf::uint32 storageid_;
  ::std::string* orderid_;
  ::google::protobuf::uint32 levelid_;
  ::google::protobuf::uint32 coin_;
  ::google::protobuf::uint32 exp_;
  ::google::protobuf::uint32 end_ts_;
  friend void  protobuf_AddDesc_ProtoUser_2eproto();
  friend void protobuf_AssignDesc_ProtoUser_2eproto();
  friend void protobuf_ShutdownFile_ProtoUser_2eproto();

  void InitAsDefaultInstance();
  static OrderCPP* default_instance_;
};
// -------------------------------------------------------------------

class TruckCPP : public ::google::protobuf::Message {
 public:
  TruckCPP();
  virtual ~TruckCPP();

  TruckCPP(const TruckCPP& from);

  inline TruckCPP& operator=(const TruckCPP& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TruckCPP& default_instance();

  void Swap(TruckCPP* other);

  // implements Message ----------------------------------------------

  TruckCPP* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TruckCPP& from);
  void MergeFrom(const TruckCPP& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 state = 1;
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 1;
  inline ::google::protobuf::uint32 state() const;
  inline void set_state(::google::protobuf::uint32 value);

  // required uint32 end_ts = 2;
  inline bool has_end_ts() const;
  inline void clear_end_ts();
  static const int kEndTsFieldNumber = 2;
  inline ::google::protobuf::uint32 end_ts() const;
  inline void set_end_ts(::google::protobuf::uint32 value);

  // required uint32 coin = 3;
  inline bool has_coin() const;
  inline void clear_coin();
  static const int kCoinFieldNumber = 3;
  inline ::google::protobuf::uint32 coin() const;
  inline void set_coin(::google::protobuf::uint32 value);

  // required uint32 exp = 4;
  inline bool has_exp() const;
  inline void clear_exp();
  static const int kExpFieldNumber = 4;
  inline ::google::protobuf::uint32 exp() const;
  inline void set_exp(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoUser.TruckCPP)
 private:
  inline void set_has_state();
  inline void clear_has_state();
  inline void set_has_end_ts();
  inline void clear_has_end_ts();
  inline void set_has_coin();
  inline void clear_has_coin();
  inline void set_has_exp();
  inline void clear_has_exp();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 state_;
  ::google::protobuf::uint32 end_ts_;
  ::google::protobuf::uint32 coin_;
  ::google::protobuf::uint32 exp_;
  friend void  protobuf_AddDesc_ProtoUser_2eproto();
  friend void protobuf_AssignDesc_ProtoUser_2eproto();
  friend void protobuf_ShutdownFile_ProtoUser_2eproto();

  void InitAsDefaultInstance();
  static TruckCPP* default_instance_;
};
// -------------------------------------------------------------------

class ShippingCPP : public ::google::protobuf::Message {
 public:
  ShippingCPP();
  virtual ~ShippingCPP();

  ShippingCPP(const ShippingCPP& from);

  inline ShippingCPP& operator=(const ShippingCPP& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ShippingCPP& default_instance();

  void Swap(ShippingCPP* other);

  // implements Message ----------------------------------------------

  ShippingCPP* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ShippingCPP& from);
  void MergeFrom(const ShippingCPP& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 badge = 1;
  inline bool has_badge() const;
  inline void clear_badge();
  static const int kBadgeFieldNumber = 1;
  inline ::google::protobuf::uint32 badge() const;
  inline void set_badge(::google::protobuf::uint32 value);

  // required uint32 unlockEndts = 2;
  inline bool has_unlockendts() const;
  inline void clear_unlockendts();
  static const int kUnlockEndtsFieldNumber = 2;
  inline ::google::protobuf::uint32 unlockendts() const;
  inline void set_unlockendts(::google::protobuf::uint32 value);

  // required uint32 arriveTs = 3;
  inline bool has_arrivets() const;
  inline void clear_arrivets();
  static const int kArriveTsFieldNumber = 3;
  inline ::google::protobuf::uint32 arrivets() const;
  inline void set_arrivets(::google::protobuf::uint32 value);

  // required uint32 publicAidTimes = 4;
  inline bool has_publicaidtimes() const;
  inline void clear_publicaidtimes();
  static const int kPublicAidTimesFieldNumber = 4;
  inline ::google::protobuf::uint32 publicaidtimes() const;
  inline void set_publicaidtimes(::google::protobuf::uint32 value);

  // required uint32 commercialAidTimes = 5;
  inline bool has_commercialaidtimes() const;
  inline void clear_commercialaidtimes();
  static const int kCommercialAidTimesFieldNumber = 5;
  inline ::google::protobuf::uint32 commercialaidtimes() const;
  inline void set_commercialaidtimes(::google::protobuf::uint32 value);

  // required uint32 status = 6;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 6;
  inline ::google::protobuf::uint32 status() const;
  inline void set_status(::google::protobuf::uint32 value);

  // required uint32 playStatus = 7;
  inline bool has_playstatus() const;
  inline void clear_playstatus();
  static const int kPlayStatusFieldNumber = 7;
  inline ::google::protobuf::uint32 playstatus() const;
  inline void set_playstatus(::google::protobuf::uint32 value);

  // required uint32 viewAdPackCnt = 8;
  inline bool has_viewadpackcnt() const;
  inline void clear_viewadpackcnt();
  static const int kViewAdPackCntFieldNumber = 8;
  inline ::google::protobuf::uint32 viewadpackcnt() const;
  inline void set_viewadpackcnt(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoUser.ShippingCPP)
 private:
  inline void set_has_badge();
  inline void clear_has_badge();
  inline void set_has_unlockendts();
  inline void clear_has_unlockendts();
  inline void set_has_arrivets();
  inline void clear_has_arrivets();
  inline void set_has_publicaidtimes();
  inline void clear_has_publicaidtimes();
  inline void set_has_commercialaidtimes();
  inline void clear_has_commercialaidtimes();
  inline void set_has_status();
  inline void clear_has_status();
  inline void set_has_playstatus();
  inline void clear_has_playstatus();
  inline void set_has_viewadpackcnt();
  inline void clear_has_viewadpackcnt();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 badge_;
  ::google::protobuf::uint32 unlockendts_;
  ::google::protobuf::uint32 arrivets_;
  ::google::protobuf::uint32 publicaidtimes_;
  ::google::protobuf::uint32 commercialaidtimes_;
  ::google::protobuf::uint32 status_;
  ::google::protobuf::uint32 playstatus_;
  ::google::protobuf::uint32 viewadpackcnt_;
  friend void  protobuf_AddDesc_ProtoUser_2eproto();
  friend void protobuf_AssignDesc_ProtoUser_2eproto();
  friend void protobuf_ShutdownFile_ProtoUser_2eproto();

  void InitAsDefaultInstance();
  static ShippingCPP* default_instance_;
};
// -------------------------------------------------------------------

class ShippingBoxCPP : public ::google::protobuf::Message {
 public:
  ShippingBoxCPP();
  virtual ~ShippingBoxCPP();

  ShippingBoxCPP(const ShippingBoxCPP& from);

  inline ShippingBoxCPP& operator=(const ShippingBoxCPP& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ShippingBoxCPP& default_instance();

  void Swap(ShippingBoxCPP* other);

  // implements Message ----------------------------------------------

  ShippingBoxCPP* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ShippingBoxCPP& from);
  void MergeFrom(const ShippingBoxCPP& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 boxid = 1;
  inline bool has_boxid() const;
  inline void clear_boxid();
  static const int kBoxidFieldNumber = 1;
  inline ::google::protobuf::uint32 boxid() const;
  inline void set_boxid(::google::protobuf::uint32 value);

  // required uint32 propsid = 2;
  inline bool has_propsid() const;
  inline void clear_propsid();
  static const int kPropsidFieldNumber = 2;
  inline ::google::protobuf::uint32 propsid() const;
  inline void set_propsid(::google::protobuf::uint32 value);

  // required uint32 count = 3;
  inline bool has_count() const;
  inline void clear_count();
  static const int kCountFieldNumber = 3;
  inline ::google::protobuf::uint32 count() const;
  inline void set_count(::google::protobuf::uint32 value);

  // required uint32 aidStatus = 4;
  inline bool has_aidstatus() const;
  inline void clear_aidstatus();
  static const int kAidStatusFieldNumber = 4;
  inline ::google::protobuf::uint32 aidstatus() const;
  inline void set_aidstatus(::google::protobuf::uint32 value);

  // required uint32 status = 5;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 5;
  inline ::google::protobuf::uint32 status() const;
  inline void set_status(::google::protobuf::uint32 value);

  // required uint32 coin = 6;
  inline bool has_coin() const;
  inline void clear_coin();
  static const int kCoinFieldNumber = 6;
  inline ::google::protobuf::uint32 coin() const;
  inline void set_coin(::google::protobuf::uint32 value);

  // required uint32 exp = 7;
  inline bool has_exp() const;
  inline void clear_exp();
  static const int kExpFieldNumber = 7;
  inline ::google::protobuf::uint32 exp() const;
  inline void set_exp(::google::protobuf::uint32 value);

  // optional bytes fig = 8;
  inline bool has_fig() const;
  inline void clear_fig();
  static const int kFigFieldNumber = 8;
  inline const ::std::string& fig() const;
  inline void set_fig(const ::std::string& value);
  inline void set_fig(const char* value);
  inline void set_fig(const void* value, size_t size);
  inline ::std::string* mutable_fig();
  inline ::std::string* release_fig();
  inline void set_allocated_fig(::std::string* fig);

  // optional bytes name = 9;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 9;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const void* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:ProtoUser.ShippingBoxCPP)
 private:
  inline void set_has_boxid();
  inline void clear_has_boxid();
  inline void set_has_propsid();
  inline void clear_has_propsid();
  inline void set_has_count();
  inline void clear_has_count();
  inline void set_has_aidstatus();
  inline void clear_has_aidstatus();
  inline void set_has_status();
  inline void clear_has_status();
  inline void set_has_coin();
  inline void clear_has_coin();
  inline void set_has_exp();
  inline void clear_has_exp();
  inline void set_has_fig();
  inline void clear_has_fig();
  inline void set_has_name();
  inline void clear_has_name();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 boxid_;
  ::google::protobuf::uint32 propsid_;
  ::google::protobuf::uint32 count_;
  ::google::protobuf::uint32 aidstatus_;
  ::google::protobuf::uint32 status_;
  ::google::protobuf::uint32 coin_;
  ::std::string* fig_;
  ::std::string* name_;
  ::google::protobuf::uint32 exp_;
  friend void  protobuf_AddDesc_ProtoUser_2eproto();
  friend void protobuf_AssignDesc_ProtoUser_2eproto();
  friend void protobuf_ShutdownFile_ProtoUser_2eproto();

  void InitAsDefaultInstance();
  static ShippingBoxCPP* default_instance_;
};
// -------------------------------------------------------------------

class ShopCPP : public ::google::protobuf::Message {
 public:
  ShopCPP();
  virtual ~ShopCPP();

  ShopCPP(const ShopCPP& from);

  inline ShopCPP& operator=(const ShopCPP& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ShopCPP& default_instance();

  void Swap(ShopCPP* other);

  // implements Message ----------------------------------------------

  ShopCPP* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ShopCPP& from);
  void MergeFrom(const ShopCPP& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 ud = 1;
  inline bool has_ud() const;
  inline void clear_ud();
  static const int kUdFieldNumber = 1;
  inline ::google::protobuf::uint32 ud() const;
  inline void set_ud(::google::protobuf::uint32 value);

  // required uint32 propsid = 2;
  inline bool has_propsid() const;
  inline void clear_propsid();
  static const int kPropsidFieldNumber = 2;
  inline ::google::protobuf::uint32 propsid() const;
  inline void set_propsid(::google::protobuf::uint32 value);

  // required uint32 propscnt = 3;
  inline bool has_propscnt() const;
  inline void clear_propscnt();
  static const int kPropscntFieldNumber = 3;
  inline ::google::protobuf::uint32 propscnt() const;
  inline void set_propscnt(::google::protobuf::uint32 value);

  // required uint32 propsprice = 4;
  inline bool has_propsprice() const;
  inline void clear_propsprice();
  static const int kPropspriceFieldNumber = 4;
  inline ::google::protobuf::uint32 propsprice() const;
  inline void set_propsprice(::google::protobuf::uint32 value);

  // required uint32 adflag = 5;
  inline bool has_adflag() const;
  inline void clear_adflag();
  static const int kAdflagFieldNumber = 5;
  inline ::google::protobuf::uint32 adflag() const;
  inline void set_adflag(::google::protobuf::uint32 value);

  // required uint32 sellflag = 6;
  inline bool has_sellflag() const;
  inline void clear_sellflag();
  static const int kSellflagFieldNumber = 6;
  inline ::google::protobuf::uint32 sellflag() const;
  inline void set_sellflag(::google::protobuf::uint32 value);

  // optional bytes buyerfig = 7;
  inline bool has_buyerfig() const;
  inline void clear_buyerfig();
  static const int kBuyerfigFieldNumber = 7;
  inline const ::std::string& buyerfig() const;
  inline void set_buyerfig(const ::std::string& value);
  inline void set_buyerfig(const char* value);
  inline void set_buyerfig(const void* value, size_t size);
  inline ::std::string* mutable_buyerfig();
  inline ::std::string* release_buyerfig();
  inline void set_allocated_buyerfig(::std::string* buyerfig);

  // optional bytes buyername = 8;
  inline bool has_buyername() const;
  inline void clear_buyername();
  static const int kBuyernameFieldNumber = 8;
  inline const ::std::string& buyername() const;
  inline void set_buyername(const ::std::string& value);
  inline void set_buyername(const char* value);
  inline void set_buyername(const void* value, size_t size);
  inline ::std::string* mutable_buyername();
  inline ::std::string* release_buyername();
  inline void set_allocated_buyername(::std::string* buyername);

  // required uint32 vipshelfflag = 9;
  inline bool has_vipshelfflag() const;
  inline void clear_vipshelfflag();
  static const int kVipshelfflagFieldNumber = 9;
  inline ::google::protobuf::uint32 vipshelfflag() const;
  inline void set_vipshelfflag(::google::protobuf::uint32 value);

  // optional uint32 buyeruid = 10;
  inline bool has_buyeruid() const;
  inline void clear_buyeruid();
  static const int kBuyeruidFieldNumber = 10;
  inline ::google::protobuf::uint32 buyeruid() const;
  inline void set_buyeruid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoUser.ShopCPP)
 private:
  inline void set_has_ud();
  inline void clear_has_ud();
  inline void set_has_propsid();
  inline void clear_has_propsid();
  inline void set_has_propscnt();
  inline void clear_has_propscnt();
  inline void set_has_propsprice();
  inline void clear_has_propsprice();
  inline void set_has_adflag();
  inline void clear_has_adflag();
  inline void set_has_sellflag();
  inline void clear_has_sellflag();
  inline void set_has_buyerfig();
  inline void clear_has_buyerfig();
  inline void set_has_buyername();
  inline void clear_has_buyername();
  inline void set_has_vipshelfflag();
  inline void clear_has_vipshelfflag();
  inline void set_has_buyeruid();
  inline void clear_has_buyeruid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 ud_;
  ::google::protobuf::uint32 propsid_;
  ::google::protobuf::uint32 propscnt_;
  ::google::protobuf::uint32 propsprice_;
  ::google::protobuf::uint32 adflag_;
  ::google::protobuf::uint32 sellflag_;
  ::std::string* buyerfig_;
  ::std::string* buyername_;
  ::google::protobuf::uint32 vipshelfflag_;
  ::google::protobuf::uint32 buyeruid_;
  friend void  protobuf_AddDesc_ProtoUser_2eproto();
  friend void protobuf_AssignDesc_ProtoUser_2eproto();
  friend void protobuf_ShutdownFile_ProtoUser_2eproto();

  void InitAsDefaultInstance();
  static ShopCPP* default_instance_;
};
// -------------------------------------------------------------------

class TaskCPP : public ::google::protobuf::Message {
 public:
  TaskCPP();
  virtual ~TaskCPP();

  TaskCPP(const TaskCPP& from);

  inline TaskCPP& operator=(const TaskCPP& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TaskCPP& default_instance();

  void Swap(TaskCPP* other);

  // implements Message ----------------------------------------------

  TaskCPP* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TaskCPP& from);
  void MergeFrom(const TaskCPP& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // required uint32 curtaskvalue = 2;
  inline bool has_curtaskvalue() const;
  inline void clear_curtaskvalue();
  static const int kCurtaskvalueFieldNumber = 2;
  inline ::google::protobuf::uint32 curtaskvalue() const;
  inline void set_curtaskvalue(::google::protobuf::uint32 value);

  // required uint32 curtaskstar = 3;
  inline bool has_curtaskstar() const;
  inline void clear_curtaskstar();
  static const int kCurtaskstarFieldNumber = 3;
  inline ::google::protobuf::uint32 curtaskstar() const;
  inline void set_curtaskstar(::google::protobuf::uint32 value);

  // required uint32 rewardstatus = 4;
  inline bool has_rewardstatus() const;
  inline void clear_rewardstatus();
  static const int kRewardstatusFieldNumber = 4;
  inline ::google::protobuf::uint32 rewardstatus() const;
  inline void set_rewardstatus(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoUser.TaskCPP)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_curtaskvalue();
  inline void clear_has_curtaskvalue();
  inline void set_has_curtaskstar();
  inline void clear_has_curtaskstar();
  inline void set_has_rewardstatus();
  inline void clear_has_rewardstatus();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 curtaskvalue_;
  ::google::protobuf::uint32 curtaskstar_;
  ::google::protobuf::uint32 rewardstatus_;
  friend void  protobuf_AddDesc_ProtoUser_2eproto();
  friend void protobuf_AssignDesc_ProtoUser_2eproto();
  friend void protobuf_ShutdownFile_ProtoUser_2eproto();

  void InitAsDefaultInstance();
  static TaskCPP* default_instance_;
};
// -------------------------------------------------------------------

class MissionCPP : public ::google::protobuf::Message {
 public:
  MissionCPP();
  virtual ~MissionCPP();

  MissionCPP(const MissionCPP& from);

  inline MissionCPP& operator=(const MissionCPP& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MissionCPP& default_instance();

  void Swap(MissionCPP* other);

  // implements Message ----------------------------------------------

  MissionCPP* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MissionCPP& from);
  void MergeFrom(const MissionCPP& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // required uint32 value = 2;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 2;
  inline ::google::protobuf::uint32 value() const;
  inline void set_value(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoUser.MissionCPP)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_value();
  inline void clear_has_value();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 value_;
  friend void  protobuf_AddDesc_ProtoUser_2eproto();
  friend void protobuf_AssignDesc_ProtoUser_2eproto();
  friend void protobuf_ShutdownFile_ProtoUser_2eproto();

  void InitAsDefaultInstance();
  static MissionCPP* default_instance_;
};
// -------------------------------------------------------------------

class ActivityCPP : public ::google::protobuf::Message {
 public:
  ActivityCPP();
  virtual ~ActivityCPP();

  ActivityCPP(const ActivityCPP& from);

  inline ActivityCPP& operator=(const ActivityCPP& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ActivityCPP& default_instance();

  void Swap(ActivityCPP* other);

  // implements Message ----------------------------------------------

  ActivityCPP* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ActivityCPP& from);
  void MergeFrom(const ActivityCPP& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // required uint32 version = 2;
  inline bool has_version() const;
  inline void clear_version();
  static const int kVersionFieldNumber = 2;
  inline ::google::protobuf::uint32 version() const;
  inline void set_version(::google::protobuf::uint32 value);

  // repeated uint32 data = 3;
  inline int data_size() const;
  inline void clear_data();
  static const int kDataFieldNumber = 3;
  inline ::google::protobuf::uint32 data(int index) const;
  inline void set_data(int index, ::google::protobuf::uint32 value);
  inline void add_data(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      data() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_data();

  // @@protoc_insertion_point(class_scope:ProtoUser.ActivityCPP)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_version();
  inline void clear_has_version();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 version_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > data_;
  friend void  protobuf_AddDesc_ProtoUser_2eproto();
  friend void protobuf_AssignDesc_ProtoUser_2eproto();
  friend void protobuf_ShutdownFile_ProtoUser_2eproto();

  void InitAsDefaultInstance();
  static ActivityCPP* default_instance_;
};
// -------------------------------------------------------------------

class MaidDogCPP : public ::google::protobuf::Message {
 public:
  MaidDogCPP();
  virtual ~MaidDogCPP();

  MaidDogCPP(const MaidDogCPP& from);

  inline MaidDogCPP& operator=(const MaidDogCPP& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MaidDogCPP& default_instance();

  void Swap(MaidDogCPP* other);

  // implements Message ----------------------------------------------

  MaidDogCPP* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MaidDogCPP& from);
  void MergeFrom(const MaidDogCPP& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // required uint32 value = 2;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 2;
  inline ::google::protobuf::uint32 value() const;
  inline void set_value(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoUser.MaidDogCPP)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_value();
  inline void clear_has_value();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 value_;
  friend void  protobuf_AddDesc_ProtoUser_2eproto();
  friend void protobuf_AssignDesc_ProtoUser_2eproto();
  friend void protobuf_ShutdownFile_ProtoUser_2eproto();

  void InitAsDefaultInstance();
  static MaidDogCPP* default_instance_;
};
// -------------------------------------------------------------------

class FriendlyTreeBasicCPP : public ::google::protobuf::Message {
 public:
  FriendlyTreeBasicCPP();
  virtual ~FriendlyTreeBasicCPP();

  FriendlyTreeBasicCPP(const FriendlyTreeBasicCPP& from);

  inline FriendlyTreeBasicCPP& operator=(const FriendlyTreeBasicCPP& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FriendlyTreeBasicCPP& default_instance();

  void Swap(FriendlyTreeBasicCPP* other);

  // implements Message ----------------------------------------------

  FriendlyTreeBasicCPP* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FriendlyTreeBasicCPP& from);
  void MergeFrom(const FriendlyTreeBasicCPP& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // required uint32 othuid = 2;
  inline bool has_othuid() const;
  inline void clear_othuid();
  static const int kOthuidFieldNumber = 2;
  inline ::google::protobuf::uint32 othuid() const;
  inline void set_othuid(::google::protobuf::uint32 value);

  // required bytes name = 3;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 3;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const void* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // required bytes head = 4;
  inline bool has_head() const;
  inline void clear_head();
  static const int kHeadFieldNumber = 4;
  inline const ::std::string& head() const;
  inline void set_head(const ::std::string& value);
  inline void set_head(const char* value);
  inline void set_head(const void* value, size_t size);
  inline ::std::string* mutable_head();
  inline ::std::string* release_head();
  inline void set_allocated_head(::std::string* head);

  // required uint32 ts = 5;
  inline bool has_ts() const;
  inline void clear_ts();
  static const int kTsFieldNumber = 5;
  inline ::google::protobuf::uint32 ts() const;
  inline void set_ts(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoUser.FriendlyTreeBasicCPP)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_othuid();
  inline void clear_has_othuid();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_head();
  inline void clear_has_head();
  inline void set_has_ts();
  inline void clear_has_ts();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 othuid_;
  ::std::string* name_;
  ::std::string* head_;
  ::google::protobuf::uint32 ts_;
  friend void  protobuf_AddDesc_ProtoUser_2eproto();
  friend void protobuf_AssignDesc_ProtoUser_2eproto();
  friend void protobuf_ShutdownFile_ProtoUser_2eproto();

  void InitAsDefaultInstance();
  static FriendlyTreeBasicCPP* default_instance_;
};
// -------------------------------------------------------------------

class ShopSellCoinCPP : public ::google::protobuf::Message {
 public:
  ShopSellCoinCPP();
  virtual ~ShopSellCoinCPP();

  ShopSellCoinCPP(const ShopSellCoinCPP& from);

  inline ShopSellCoinCPP& operator=(const ShopSellCoinCPP& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ShopSellCoinCPP& default_instance();

  void Swap(ShopSellCoinCPP* other);

  // implements Message ----------------------------------------------

  ShopSellCoinCPP* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ShopSellCoinCPP& from);
  void MergeFrom(const ShopSellCoinCPP& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // required uint32 value = 2;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 2;
  inline ::google::protobuf::uint32 value() const;
  inline void set_value(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoUser.ShopSellCoinCPP)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_value();
  inline void clear_has_value();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 value_;
  friend void  protobuf_AddDesc_ProtoUser_2eproto();
  friend void protobuf_AssignDesc_ProtoUser_2eproto();
  friend void protobuf_ShutdownFile_ProtoUser_2eproto();

  void InitAsDefaultInstance();
  static ShopSellCoinCPP* default_instance_;
};
// -------------------------------------------------------------------

class FriendWorkerCPP : public ::google::protobuf::Message {
 public:
  FriendWorkerCPP();
  virtual ~FriendWorkerCPP();

  FriendWorkerCPP(const FriendWorkerCPP& from);

  inline FriendWorkerCPP& operator=(const FriendWorkerCPP& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FriendWorkerCPP& default_instance();

  void Swap(FriendWorkerCPP* other);

  // implements Message ----------------------------------------------

  FriendWorkerCPP* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FriendWorkerCPP& from);
  void MergeFrom(const FriendWorkerCPP& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 workerUid = 1;
  inline bool has_workeruid() const;
  inline void clear_workeruid();
  static const int kWorkerUidFieldNumber = 1;
  inline ::google::protobuf::uint32 workeruid() const;
  inline void set_workeruid(::google::protobuf::uint32 value);

  // required uint32 workerEndTs = 2;
  inline bool has_workerendts() const;
  inline void clear_workerendts();
  static const int kWorkerEndTsFieldNumber = 2;
  inline ::google::protobuf::uint32 workerendts() const;
  inline void set_workerendts(::google::protobuf::uint32 value);

  // required uint32 workerSlotPos = 3;
  inline bool has_workerslotpos() const;
  inline void clear_workerslotpos();
  static const int kWorkerSlotPosFieldNumber = 3;
  inline ::google::protobuf::uint32 workerslotpos() const;
  inline void set_workerslotpos(::google::protobuf::uint32 value);

  // optional uint32 workerInvitedTs = 4;
  inline bool has_workerinvitedts() const;
  inline void clear_workerinvitedts();
  static const int kWorkerInvitedTsFieldNumber = 4;
  inline ::google::protobuf::uint32 workerinvitedts() const;
  inline void set_workerinvitedts(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoUser.FriendWorkerCPP)
 private:
  inline void set_has_workeruid();
  inline void clear_has_workeruid();
  inline void set_has_workerendts();
  inline void clear_has_workerendts();
  inline void set_has_workerslotpos();
  inline void clear_has_workerslotpos();
  inline void set_has_workerinvitedts();
  inline void clear_has_workerinvitedts();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 workeruid_;
  ::google::protobuf::uint32 workerendts_;
  ::google::protobuf::uint32 workerslotpos_;
  ::google::protobuf::uint32 workerinvitedts_;
  friend void  protobuf_AddDesc_ProtoUser_2eproto();
  friend void protobuf_AssignDesc_ProtoUser_2eproto();
  friend void protobuf_ShutdownFile_ProtoUser_2eproto();

  void InitAsDefaultInstance();
  static FriendWorkerCPP* default_instance_;
};
// -------------------------------------------------------------------

class UnlockPetCPP : public ::google::protobuf::Message {
 public:
  UnlockPetCPP();
  virtual ~UnlockPetCPP();

  UnlockPetCPP(const UnlockPetCPP& from);

  inline UnlockPetCPP& operator=(const UnlockPetCPP& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UnlockPetCPP& default_instance();

  void Swap(UnlockPetCPP* other);

  // implements Message ----------------------------------------------

  UnlockPetCPP* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UnlockPetCPP& from);
  void MergeFrom(const UnlockPetCPP& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 petid = 1;
  inline bool has_petid() const;
  inline void clear_petid();
  static const int kPetidFieldNumber = 1;
  inline ::google::protobuf::uint32 petid() const;
  inline void set_petid(::google::protobuf::uint32 value);

  // required uint32 teaseEndts = 2;
  inline bool has_teaseendts() const;
  inline void clear_teaseendts();
  static const int kTeaseEndtsFieldNumber = 2;
  inline ::google::protobuf::uint32 teaseendts() const;
  inline void set_teaseendts(::google::protobuf::uint32 value);

  // required uint32 normalEndts = 3;
  inline bool has_normalendts() const;
  inline void clear_normalendts();
  static const int kNormalEndtsFieldNumber = 3;
  inline ::google::protobuf::uint32 normalendts() const;
  inline void set_normalendts(::google::protobuf::uint32 value);

  // optional uint32 teaseFlag = 4;
  inline bool has_teaseflag() const;
  inline void clear_teaseflag();
  static const int kTeaseFlagFieldNumber = 4;
  inline ::google::protobuf::uint32 teaseflag() const;
  inline void set_teaseflag(::google::protobuf::uint32 value);

  // optional bytes name = 5;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 5;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const void* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:ProtoUser.UnlockPetCPP)
 private:
  inline void set_has_petid();
  inline void clear_has_petid();
  inline void set_has_teaseendts();
  inline void clear_has_teaseendts();
  inline void set_has_normalendts();
  inline void clear_has_normalendts();
  inline void set_has_teaseflag();
  inline void clear_has_teaseflag();
  inline void set_has_name();
  inline void clear_has_name();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 petid_;
  ::google::protobuf::uint32 teaseendts_;
  ::google::protobuf::uint32 normalendts_;
  ::google::protobuf::uint32 teaseflag_;
  ::std::string* name_;
  friend void  protobuf_AddDesc_ProtoUser_2eproto();
  friend void protobuf_AssignDesc_ProtoUser_2eproto();
  friend void protobuf_ShutdownFile_ProtoUser_2eproto();

  void InitAsDefaultInstance();
  static UnlockPetCPP* default_instance_;
};
// ===================================================================


// ===================================================================

// Base

// required uint32 uid = 1;
inline bool Base::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Base::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Base::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Base::clear_uid() {
  uid_ = 0u;
  clear_has_uid();
}
inline ::google::protobuf::uint32 Base::uid() const {
  // @@protoc_insertion_point(field_get:ProtoUser.Base.uid)
  return uid_;
}
inline void Base::set_uid(::google::protobuf::uint32 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:ProtoUser.Base.uid)
}

// required uint64 exp = 2;
inline bool Base::has_exp() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Base::set_has_exp() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Base::clear_has_exp() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Base::clear_exp() {
  exp_ = GOOGLE_ULONGLONG(0);
  clear_has_exp();
}
inline ::google::protobuf::uint64 Base::exp() const {
  // @@protoc_insertion_point(field_get:ProtoUser.Base.exp)
  return exp_;
}
inline void Base::set_exp(::google::protobuf::uint64 value) {
  set_has_exp();
  exp_ = value;
  // @@protoc_insertion_point(field_set:ProtoUser.Base.exp)
}

// required uint32 level = 3;
inline bool Base::has_level() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Base::set_has_level() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Base::clear_has_level() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Base::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 Base::level() const {
  // @@protoc_insertion_point(field_get:ProtoUser.Base.level)
  return level_;
}
inline void Base::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:ProtoUser.Base.level)
}

// required uint32 acccharge = 4;
inline bool Base::has_acccharge() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Base::set_has_acccharge() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Base::clear_has_acccharge() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Base::clear_acccharge() {
  acccharge_ = 0u;
  clear_has_acccharge();
}
inline ::google::protobuf::uint32 Base::acccharge() const {
  // @@protoc_insertion_point(field_get:ProtoUser.Base.acccharge)
  return acccharge_;
}
inline void Base::set_acccharge(::google::protobuf::uint32 value) {
  set_has_acccharge();
  acccharge_ = value;
  // @@protoc_insertion_point(field_set:ProtoUser.Base.acccharge)
}

// required uint32 viplevel = 5;
inline bool Base::has_viplevel() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Base::set_has_viplevel() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Base::clear_has_viplevel() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Base::clear_viplevel() {
  viplevel_ = 0u;
  clear_has_viplevel();
}
inline ::google::protobuf::uint32 Base::viplevel() const {
  // @@protoc_insertion_point(field_get:ProtoUser.Base.viplevel)
  return viplevel_;
}
inline void Base::set_viplevel(::google::protobuf::uint32 value) {
  set_has_viplevel();
  viplevel_ = value;
  // @@protoc_insertion_point(field_set:ProtoUser.Base.viplevel)
}

// required uint32 cash = 6;
inline bool Base::has_cash() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Base::set_has_cash() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Base::clear_has_cash() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Base::clear_cash() {
  cash_ = 0u;
  clear_has_cash();
}
inline ::google::protobuf::uint32 Base::cash() const {
  // @@protoc_insertion_point(field_get:ProtoUser.Base.cash)
  return cash_;
}
inline void Base::set_cash(::google::protobuf::uint32 value) {
  set_has_cash();
  cash_ = value;
  // @@protoc_insertion_point(field_set:ProtoUser.Base.cash)
}

// required uint32 coin = 7;
inline bool Base::has_coin() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void Base::set_has_coin() {
  _has_bits_[0] |= 0x00000040u;
}
inline void Base::clear_has_coin() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void Base::clear_coin() {
  coin_ = 0u;
  clear_has_coin();
}
inline ::google::protobuf::uint32 Base::coin() const {
  // @@protoc_insertion_point(field_get:ProtoUser.Base.coin)
  return coin_;
}
inline void Base::set_coin(::google::protobuf::uint32 value) {
  set_has_coin();
  coin_ = value;
  // @@protoc_insertion_point(field_set:ProtoUser.Base.coin)
}

// required uint32 firstRecharge = 8;
inline bool Base::has_firstrecharge() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void Base::set_has_firstrecharge() {
  _has_bits_[0] |= 0x00000080u;
}
inline void Base::clear_has_firstrecharge() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void Base::clear_firstrecharge() {
  firstrecharge_ = 0u;
  clear_has_firstrecharge();
}
inline ::google::protobuf::uint32 Base::firstrecharge() const {
  // @@protoc_insertion_point(field_get:ProtoUser.Base.firstRecharge)
  return firstrecharge_;
}
inline void Base::set_firstrecharge(::google::protobuf::uint32 value) {
  set_has_firstrecharge();
  firstrecharge_ = value;
  // @@protoc_insertion_point(field_set:ProtoUser.Base.firstRecharge)
}

// required uint32 allianceId = 9;
inline bool Base::has_allianceid() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void Base::set_has_allianceid() {
  _has_bits_[0] |= 0x00000100u;
}
inline void Base::clear_has_allianceid() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void Base::clear_allianceid() {
  allianceid_ = 0u;
  clear_has_allianceid();
}
inline ::google::protobuf::uint32 Base::allianceid() const {
  // @@protoc_insertion_point(field_get:ProtoUser.Base.allianceId)
  return allianceid_;
}
inline void Base::set_allianceid(::google::protobuf::uint32 value) {
  set_has_allianceid();
  allianceid_ = value;
  // @@protoc_insertion_point(field_set:ProtoUser.Base.allianceId)
}

// repeated uint32 barrier = 10;
inline int Base::barrier_size() const {
  return barrier_.size();
}
inline void Base::clear_barrier() {
  barrier_.Clear();
}
inline ::google::protobuf::uint32 Base::barrier(int index) const {
  // @@protoc_insertion_point(field_get:ProtoUser.Base.barrier)
  return barrier_.Get(index);
}
inline void Base::set_barrier(int index, ::google::protobuf::uint32 value) {
  barrier_.Set(index, value);
  // @@protoc_insertion_point(field_set:ProtoUser.Base.barrier)
}
inline void Base::add_barrier(::google::protobuf::uint32 value) {
  barrier_.Add(value);
  // @@protoc_insertion_point(field_add:ProtoUser.Base.barrier)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
Base::barrier() const {
  // @@protoc_insertion_point(field_list:ProtoUser.Base.barrier)
  return barrier_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
Base::mutable_barrier() {
  // @@protoc_insertion_point(field_mutable_list:ProtoUser.Base.barrier)
  return &barrier_;
}

// required uint32 lastcreateadts = 11;
inline bool Base::has_lastcreateadts() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void Base::set_has_lastcreateadts() {
  _has_bits_[0] |= 0x00000400u;
}
inline void Base::clear_has_lastcreateadts() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void Base::clear_lastcreateadts() {
  lastcreateadts_ = 0u;
  clear_has_lastcreateadts();
}
inline ::google::protobuf::uint32 Base::lastcreateadts() const {
  // @@protoc_insertion_point(field_get:ProtoUser.Base.lastcreateadts)
  return lastcreateadts_;
}
inline void Base::set_lastcreateadts(::google::protobuf::uint32 value) {
  set_has_lastcreateadts();
  lastcreateadts_ = value;
  // @@protoc_insertion_point(field_set:ProtoUser.Base.lastcreateadts)
}

// required uint32 flag = 12;
inline bool Base::has_flag() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void Base::set_has_flag() {
  _has_bits_[0] |= 0x00000800u;
}
inline void Base::clear_has_flag() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void Base::clear_flag() {
  flag_ = 0u;
  clear_has_flag();
}
inline ::google::protobuf::uint32 Base::flag() const {
  // @@protoc_insertion_point(field_get:ProtoUser.Base.flag)
  return flag_;
}
inline void Base::set_flag(::google::protobuf::uint32 value) {
  set_has_flag();
  flag_ = value;
  // @@protoc_insertion_point(field_set:ProtoUser.Base.flag)
}

// -------------------------------------------------------------------

// ChargeItem

// required uint32 cash = 1;
inline bool ChargeItem::has_cash() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ChargeItem::set_has_cash() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ChargeItem::clear_has_cash() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ChargeItem::clear_cash() {
  cash_ = 0u;
  clear_has_cash();
}
inline ::google::protobuf::uint32 ChargeItem::cash() const {
  // @@protoc_insertion_point(field_get:ProtoUser.ChargeItem.cash)
  return cash_;
}
inline void ChargeItem::set_cash(::google::protobuf::uint32 value) {
  set_has_cash();
  cash_ = value;
  // @@protoc_insertion_point(field_set:ProtoUser.ChargeItem.cash)
}

// required uint32 ts = 2;
inline bool ChargeItem::has_ts() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ChargeItem::set_has_ts() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ChargeItem::clear_has_ts() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ChargeItem::clear_ts() {
  ts_ = 0u;
  clear_has_ts();
}
inline ::google::protobuf::uint32 ChargeItem::ts() const {
  // @@protoc_insertion_point(field_get:ProtoUser.ChargeItem.ts)
  return ts_;
}
inline void ChargeItem::set_ts(::google::protobuf::uint32 value) {
  set_has_ts();
  ts_ = value;
  // @@protoc_insertion_point(field_set:ProtoUser.ChargeItem.ts)
}

// -------------------------------------------------------------------

// BuildingsCPP

// required uint32 ud = 1;
inline bool BuildingsCPP::has_ud() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BuildingsCPP::set_has_ud() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BuildingsCPP::clear_has_ud() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BuildingsCPP::clear_ud() {
  ud_ = 0u;
  clear_has_ud();
}
inline ::google::protobuf::uint32 BuildingsCPP::ud() const {
  // @@protoc_insertion_point(field_get:ProtoUser.BuildingsCPP.ud)
  return ud_;
}
inline void BuildingsCPP::set_ud(::google::protobuf::uint32 value) {
  set_has_ud();
  ud_ = value;
  // @@protoc_insertion_point(field_set:ProtoUser.BuildingsCPP.ud)
}

// required uint32 buildId = 2;
inline bool BuildingsCPP::has_buildid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BuildingsCPP::set_has_buildid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BuildingsCPP::clear_has_buildid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BuildingsCPP::clear_buildid() {
  buildid_ = 0u;
  clear_has_buildid();
}
inline ::google::protobuf::uint32 BuildingsCPP::buildid() const {
  // @@protoc_insertion_point(field_get:ProtoUser.BuildingsCPP.buildId)
  return buildid_;
}
inline void BuildingsCPP::set_buildid(::google::protobuf::uint32 value) {
  set_has_buildid();
  buildid_ = value;
  // @@protoc_insertion_point(field_set:ProtoUser.BuildingsCPP.buildId)
}

// repeated uint32 position = 3;
inline int BuildingsCPP::position_size() const {
  return position_.size();
}
inline void BuildingsCPP::clear_position() {
  position_.Clear();
}
inline ::google::protobuf::uint32 BuildingsCPP::position(int index) const {
  // @@protoc_insertion_point(field_get:ProtoUser.BuildingsCPP.position)
  return position_.Get(index);
}
inline void BuildingsCPP::set_position(int index, ::google::protobuf::uint32 value) {
  position_.Set(index, value);
  // @@protoc_insertion_point(field_set:ProtoUser.BuildingsCPP.position)
}
inline void BuildingsCPP::add_position(::google::protobuf::uint32 value) {
  position_.Add(value);
  // @@protoc_insertion_point(field_add:ProtoUser.BuildingsCPP.position)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
BuildingsCPP::position() const {
  // @@protoc_insertion_point(field_list:ProtoUser.BuildingsCPP.position)
  return position_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
BuildingsCPP::mutable_position() {
  // @@protoc_insertion_point(field_mutable_list:ProtoUser.BuildingsCPP.position)
  return &position_;
}

// required uint32 direct = 4;
inline bool BuildingsCPP::has_direct() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void BuildingsCPP::set_has_direct() {
  _has_bits_[0] |= 0x00000008u;
}
inline void BuildingsCPP::clear_has_direct() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void BuildingsCPP::clear_direct() {
  direct_ = 0u;
  clear_has_direct();
}
inline ::google::protobuf::uint32 BuildingsCPP::direct() const {
  // @@protoc_insertion_point(field_get:ProtoUser.BuildingsCPP.direct)
  return direct_;
}
inline void BuildingsCPP::set_direct(::google::protobuf::uint32 value) {
  set_has_direct();
  direct_ = value;
  // @@protoc_insertion_point(field_set:ProtoUser.BuildingsCPP.direct)
}

// required uint32 doneTime = 5;
inline bool BuildingsCPP::has_donetime() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void BuildingsCPP::set_has_donetime() {
  _has_bits_[0] |= 0x00000010u;
}
inline void BuildingsCPP::clear_has_donetime() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void BuildingsCPP::clear_donetime() {
  donetime_ = 0u;
  clear_has_donetime();
}
inline ::google::protobuf::uint32 BuildingsCPP::donetime() const {
  // @@protoc_insertion_point(field_get:ProtoUser.BuildingsCPP.doneTime)
  return donetime_;
}
inline void BuildingsCPP::set_donetime(::google::protobuf::uint32 value) {
  set_has_donetime();
  donetime_ = value;
  // @@protoc_insertion_point(field_set:ProtoUser.BuildingsCPP.doneTime)
}

// required uint32 level = 6;
inline bool BuildingsCPP::has_level() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void BuildingsCPP::set_has_level() {
  _has_bits_[0] |= 0x00000020u;
}
inline void BuildingsCPP::clear_has_level() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void BuildingsCPP::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 BuildingsCPP::level() const {
  // @@protoc_insertion_point(field_get:ProtoUser.BuildingsCPP.level)
  return level_;
}
inline void BuildingsCPP::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:ProtoUser.BuildingsCPP.level)
}

// -------------------------------------------------------------------

// PropsItemCPP

// required uint32 ud = 1;
inline bool PropsItemCPP::has_ud() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PropsItemCPP::set_has_ud() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PropsItemCPP::clear_has_ud() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PropsItemCPP::clear_ud() {
  ud_ = 0u;
  clear_has_ud();
}
inline ::google::protobuf::uint32 PropsItemCPP::ud() const {
  // @@protoc_insertion_point(field_get:ProtoUser.PropsItemCPP.ud)
  return ud_;
}
inline void PropsItemCPP::set_ud(::google::protobuf::uint32 value) {
  set_has_ud();
  ud_ = value;
  // @@protoc_insertion_point(field_set:ProtoUser.PropsItemCPP.ud)
}

// required uint32 propsId = 2;
inline bool PropsItemCPP::has_propsid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PropsItemCPP::set_has_propsid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PropsItemCPP::clear_has_propsid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PropsItemCPP::clear_propsid() {
  propsid_ = 0u;
  clear_has_propsid();
}
inline ::google::protobuf::uint32 PropsItemCPP::propsid() const {
  // @@protoc_insertion_point(field_get:ProtoUser.PropsItemCPP.propsId)
  return propsid_;
}
inline void PropsItemCPP::set_propsid(::google::protobuf::uint32 value) {
  set_has_propsid();
  propsid_ = value;
  // @@protoc_insertion_point(field_set:ProtoUser.PropsItemCPP.propsId)
}

// required uint32 itemCnt = 3;
inline bool PropsItemCPP::has_itemcnt() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PropsItemCPP::set_has_itemcnt() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PropsItemCPP::clear_has_itemcnt() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PropsItemCPP::clear_itemcnt() {
  itemcnt_ = 0u;
  clear_has_itemcnt();
}
inline ::google::protobuf::uint32 PropsItemCPP::itemcnt() const {
  // @@protoc_insertion_point(field_get:ProtoUser.PropsItemCPP.itemCnt)
  return itemcnt_;
}
inline void PropsItemCPP::set_itemcnt(::google::protobuf::uint32 value) {
  set_has_itemcnt();
  itemcnt_ = value;
  // @@protoc_insertion_point(field_set:ProtoUser.PropsItemCPP.itemCnt)
}

// -------------------------------------------------------------------

// EquipmentStarCPP

// required uint32 id = 1;
inline bool EquipmentStarCPP::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EquipmentStarCPP::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EquipmentStarCPP::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EquipmentStarCPP::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 EquipmentStarCPP::id() const {
  // @@protoc_insertion_point(field_get:ProtoUser.EquipmentStarCPP.id)
  return id_;
}
inline void EquipmentStarCPP::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:ProtoUser.EquipmentStarCPP.id)
}

// required uint32 star = 2;
inline bool EquipmentStarCPP::has_star() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void EquipmentStarCPP::set_has_star() {
  _has_bits_[0] |= 0x00000002u;
}
inline void EquipmentStarCPP::clear_has_star() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void EquipmentStarCPP::clear_star() {
  star_ = 0u;
  clear_has_star();
}
inline ::google::protobuf::uint32 EquipmentStarCPP::star() const {
  // @@protoc_insertion_point(field_get:ProtoUser.EquipmentStarCPP.star)
  return star_;
}
inline void EquipmentStarCPP::set_star(::google::protobuf::uint32 value) {
  set_has_star();
  star_ = value;
  // @@protoc_insertion_point(field_set:ProtoUser.EquipmentStarCPP.star)
}

// required uint32 usedtime = 3;
inline bool EquipmentStarCPP::has_usedtime() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void EquipmentStarCPP::set_has_usedtime() {
  _has_bits_[0] |= 0x00000004u;
}
inline void EquipmentStarCPP::clear_has_usedtime() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void EquipmentStarCPP::clear_usedtime() {
  usedtime_ = 0u;
  clear_has_usedtime();
}
inline ::google::protobuf::uint32 EquipmentStarCPP::usedtime() const {
  // @@protoc_insertion_point(field_get:ProtoUser.EquipmentStarCPP.usedtime)
  return usedtime_;
}
inline void EquipmentStarCPP::set_usedtime(::google::protobuf::uint32 value) {
  set_has_usedtime();
  usedtime_ = value;
  // @@protoc_insertion_point(field_set:ProtoUser.EquipmentStarCPP.usedtime)
}

// -------------------------------------------------------------------

// CropLandCPP

// required uint32 ud = 1;
inline bool CropLandCPP::has_ud() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CropLandCPP::set_has_ud() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CropLandCPP::clear_has_ud() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CropLandCPP::clear_ud() {
  ud_ = 0u;
  clear_has_ud();
}
inline ::google::protobuf::uint32 CropLandCPP::ud() const {
  // @@protoc_insertion_point(field_get:ProtoUser.CropLandCPP.ud)
  return ud_;
}
inline void CropLandCPP::set_ud(::google::protobuf::uint32 value) {
  set_has_ud();
  ud_ = value;
  // @@protoc_insertion_point(field_set:ProtoUser.CropLandCPP.ud)
}

// required uint32 plant = 2;
inline bool CropLandCPP::has_plant() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CropLandCPP::set_has_plant() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CropLandCPP::clear_has_plant() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CropLandCPP::clear_plant() {
  plant_ = 0u;
  clear_has_plant();
}
inline ::google::protobuf::uint32 CropLandCPP::plant() const {
  // @@protoc_insertion_point(field_get:ProtoUser.CropLandCPP.plant)
  return plant_;
}
inline void CropLandCPP::set_plant(::google::protobuf::uint32 value) {
  set_has_plant();
  plant_ = value;
  // @@protoc_insertion_point(field_set:ProtoUser.CropLandCPP.plant)
}

// required uint32 status = 3;
inline bool CropLandCPP::has_status() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CropLandCPP::set_has_status() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CropLandCPP::clear_has_status() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CropLandCPP::clear_status() {
  status_ = 0u;
  clear_has_status();
}
inline ::google::protobuf::uint32 CropLandCPP::status() const {
  // @@protoc_insertion_point(field_get:ProtoUser.CropLandCPP.status)
  return status_;
}
inline void CropLandCPP::set_status(::google::protobuf::uint32 value) {
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:ProtoUser.CropLandCPP.status)
}

// required uint32 harvestTime = 4;
inline bool CropLandCPP::has_harvesttime() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CropLandCPP::set_has_harvesttime() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CropLandCPP::clear_has_harvesttime() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CropLandCPP::clear_harvesttime() {
  harvesttime_ = 0u;
  clear_has_harvesttime();
}
inline ::google::protobuf::uint32 CropLandCPP::harvesttime() const {
  // @@protoc_insertion_point(field_get:ProtoUser.CropLandCPP.harvestTime)
  return harvesttime_;
}
inline void CropLandCPP::set_harvesttime(::google::protobuf::uint32 value) {
  set_has_harvesttime();
  harvesttime_ = value;
  // @@protoc_insertion_point(field_set:ProtoUser.CropLandCPP.harvestTime)
}

// -------------------------------------------------------------------

// ProduceEquipCPP

// required uint32 ud = 1;
inline bool ProduceEquipCPP::has_ud() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProduceEquipCPP::set_has_ud() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProduceEquipCPP::clear_has_ud() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProduceEquipCPP::clear_ud() {
  ud_ = 0u;
  clear_has_ud();
}
inline ::google::protobuf::uint32 ProduceEquipCPP::ud() const {
  // @@protoc_insertion_point(field_get:ProtoUser.ProduceEquipCPP.ud)
  return ud_;
}
inline void ProduceEquipCPP::set_ud(::google::protobuf::uint32 value) {
  set_has_ud();
  ud_ = value;
  // @@protoc_insertion_point(field_set:ProtoUser.ProduceEquipCPP.ud)
}

// required uint32 status = 2;
inline bool ProduceEquipCPP::has_status() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProduceEquipCPP::set_has_status() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProduceEquipCPP::clear_has_status() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProduceEquipCPP::clear_status() {
  status_ = 0u;
  clear_has_status();
}
inline ::google::protobuf::uint32 ProduceEquipCPP::status() const {
  // @@protoc_insertion_point(field_get:ProtoUser.ProduceEquipCPP.status)
  return status_;
}
inline void ProduceEquipCPP::set_status(::google::protobuf::uint32 value) {
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:ProtoUser.ProduceEquipCPP.status)
}

// required uint32 queuenum = 3;
inline bool ProduceEquipCPP::has_queuenum() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ProduceEquipCPP::set_has_queuenum() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ProduceEquipCPP::clear_has_queuenum() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ProduceEquipCPP::clear_queuenum() {
  queuenum_ = 0u;
  clear_has_queuenum();
}
inline ::google::protobuf::uint32 ProduceEquipCPP::queuenum() const {
  // @@protoc_insertion_point(field_get:ProtoUser.ProduceEquipCPP.queuenum)
  return queuenum_;
}
inline void ProduceEquipCPP::set_queuenum(::google::protobuf::uint32 value) {
  set_has_queuenum();
  queuenum_ = value;
  // @@protoc_insertion_point(field_set:ProtoUser.ProduceEquipCPP.queuenum)
}

// repeated uint32 queuedata = 4;
inline int ProduceEquipCPP::queuedata_size() const {
  return queuedata_.size();
}
inline void ProduceEquipCPP::clear_queuedata() {
  queuedata_.Clear();
}
inline ::google::protobuf::uint32 ProduceEquipCPP::queuedata(int index) const {
  // @@protoc_insertion_point(field_get:ProtoUser.ProduceEquipCPP.queuedata)
  return queuedata_.Get(index);
}
inline void ProduceEquipCPP::set_queuedata(int index, ::google::protobuf::uint32 value) {
  queuedata_.Set(index, value);
  // @@protoc_insertion_point(field_set:ProtoUser.ProduceEquipCPP.queuedata)
}
inline void ProduceEquipCPP::add_queuedata(::google::protobuf::uint32 value) {
  queuedata_.Add(value);
  // @@protoc_insertion_point(field_add:ProtoUser.ProduceEquipCPP.queuedata)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
ProduceEquipCPP::queuedata() const {
  // @@protoc_insertion_point(field_list:ProtoUser.ProduceEquipCPP.queuedata)
  return queuedata_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
ProduceEquipCPP::mutable_queuedata() {
  // @@protoc_insertion_point(field_mutable_list:ProtoUser.ProduceEquipCPP.queuedata)
  return &queuedata_;
}

// repeated uint32 shelfdata = 5;
inline int ProduceEquipCPP::shelfdata_size() const {
  return shelfdata_.size();
}
inline void ProduceEquipCPP::clear_shelfdata() {
  shelfdata_.Clear();
}
inline ::google::protobuf::uint32 ProduceEquipCPP::shelfdata(int index) const {
  // @@protoc_insertion_point(field_get:ProtoUser.ProduceEquipCPP.shelfdata)
  return shelfdata_.Get(index);
}
inline void ProduceEquipCPP::set_shelfdata(int index, ::google::protobuf::uint32 value) {
  shelfdata_.Set(index, value);
  // @@protoc_insertion_point(field_set:ProtoUser.ProduceEquipCPP.shelfdata)
}
inline void ProduceEquipCPP::add_shelfdata(::google::protobuf::uint32 value) {
  shelfdata_.Add(value);
  // @@protoc_insertion_point(field_add:ProtoUser.ProduceEquipCPP.shelfdata)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
ProduceEquipCPP::shelfdata() const {
  // @@protoc_insertion_point(field_list:ProtoUser.ProduceEquipCPP.shelfdata)
  return shelfdata_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
ProduceEquipCPP::mutable_shelfdata() {
  // @@protoc_insertion_point(field_mutable_list:ProtoUser.ProduceEquipCPP.shelfdata)
  return &shelfdata_;
}

// required uint32 finishtime = 6;
inline bool ProduceEquipCPP::has_finishtime() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ProduceEquipCPP::set_has_finishtime() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ProduceEquipCPP::clear_has_finishtime() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ProduceEquipCPP::clear_finishtime() {
  finishtime_ = 0u;
  clear_has_finishtime();
}
inline ::google::protobuf::uint32 ProduceEquipCPP::finishtime() const {
  // @@protoc_insertion_point(field_get:ProtoUser.ProduceEquipCPP.finishtime)
  return finishtime_;
}
inline void ProduceEquipCPP::set_finishtime(::google::protobuf::uint32 value) {
  set_has_finishtime();
  finishtime_ = value;
  // @@protoc_insertion_point(field_set:ProtoUser.ProduceEquipCPP.finishtime)
}

// repeated uint32 shelfsource = 7;
inline int ProduceEquipCPP::shelfsource_size() const {
  return shelfsource_.size();
}
inline void ProduceEquipCPP::clear_shelfsource() {
  shelfsource_.Clear();
}
inline ::google::protobuf::uint32 ProduceEquipCPP::shelfsource(int index) const {
  // @@protoc_insertion_point(field_get:ProtoUser.ProduceEquipCPP.shelfsource)
  return shelfsource_.Get(index);
}
inline void ProduceEquipCPP::set_shelfsource(int index, ::google::protobuf::uint32 value) {
  shelfsource_.Set(index, value);
  // @@protoc_insertion_point(field_set:ProtoUser.ProduceEquipCPP.shelfsource)
}
inline void ProduceEquipCPP::add_shelfsource(::google::protobuf::uint32 value) {
  shelfsource_.Add(value);
  // @@protoc_insertion_point(field_add:ProtoUser.ProduceEquipCPP.shelfsource)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
ProduceEquipCPP::shelfsource() const {
  // @@protoc_insertion_point(field_list:ProtoUser.ProduceEquipCPP.shelfsource)
  return shelfsource_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
ProduceEquipCPP::mutable_shelfsource() {
  // @@protoc_insertion_point(field_mutable_list:ProtoUser.ProduceEquipCPP.shelfsource)
  return &shelfsource_;
}

// optional uint32 keeper = 8;
inline bool ProduceEquipCPP::has_keeper() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void ProduceEquipCPP::set_has_keeper() {
  _has_bits_[0] |= 0x00000080u;
}
inline void ProduceEquipCPP::clear_has_keeper() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void ProduceEquipCPP::clear_keeper() {
  keeper_ = 0u;
  clear_has_keeper();
}
inline ::google::protobuf::uint32 ProduceEquipCPP::keeper() const {
  // @@protoc_insertion_point(field_get:ProtoUser.ProduceEquipCPP.keeper)
  return keeper_;
}
inline void ProduceEquipCPP::set_keeper(::google::protobuf::uint32 value) {
  set_has_keeper();
  keeper_ = value;
  // @@protoc_insertion_point(field_set:ProtoUser.ProduceEquipCPP.keeper)
}

// -------------------------------------------------------------------

// FruitCPP

// required uint32 ud = 1;
inline bool FruitCPP::has_ud() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FruitCPP::set_has_ud() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FruitCPP::clear_has_ud() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FruitCPP::clear_ud() {
  ud_ = 0u;
  clear_has_ud();
}
inline ::google::protobuf::uint32 FruitCPP::ud() const {
  // @@protoc_insertion_point(field_get:ProtoUser.FruitCPP.ud)
  return ud_;
}
inline void FruitCPP::set_ud(::google::protobuf::uint32 value) {
  set_has_ud();
  ud_ = value;
  // @@protoc_insertion_point(field_set:ProtoUser.FruitCPP.ud)
}

// required uint32 treeid = 2;
inline bool FruitCPP::has_treeid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FruitCPP::set_has_treeid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FruitCPP::clear_has_treeid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FruitCPP::clear_treeid() {
  treeid_ = 0u;
  clear_has_treeid();
}
inline ::google::protobuf::uint32 FruitCPP::treeid() const {
  // @@protoc_insertion_point(field_get:ProtoUser.FruitCPP.treeid)
  return treeid_;
}
inline void FruitCPP::set_treeid(::google::protobuf::uint32 value) {
  set_has_treeid();
  treeid_ = value;
  // @@protoc_insertion_point(field_set:ProtoUser.FruitCPP.treeid)
}

// required uint32 status = 3;
inline bool FruitCPP::has_status() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void FruitCPP::set_has_status() {
  _has_bits_[0] |= 0x00000004u;
}
inline void FruitCPP::clear_has_status() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void FruitCPP::clear_status() {
  status_ = 0u;
  clear_has_status();
}
inline ::google::protobuf::uint32 FruitCPP::status() const {
  // @@protoc_insertion_point(field_get:ProtoUser.FruitCPP.status)
  return status_;
}
inline void FruitCPP::set_status(::google::protobuf::uint32 value) {
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:ProtoUser.FruitCPP.status)
}

// required uint32 stage = 4;
inline bool FruitCPP::has_stage() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void FruitCPP::set_has_stage() {
  _has_bits_[0] |= 0x00000008u;
}
inline void FruitCPP::clear_has_stage() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void FruitCPP::clear_stage() {
  stage_ = 0u;
  clear_has_stage();
}
inline ::google::protobuf::uint32 FruitCPP::stage() const {
  // @@protoc_insertion_point(field_get:ProtoUser.FruitCPP.stage)
  return stage_;
}
inline void FruitCPP::set_stage(::google::protobuf::uint32 value) {
  set_has_stage();
  stage_ = value;
  // @@protoc_insertion_point(field_set:ProtoUser.FruitCPP.stage)
}

// required uint32 fruitLeftNum = 5;
inline bool FruitCPP::has_fruitleftnum() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void FruitCPP::set_has_fruitleftnum() {
  _has_bits_[0] |= 0x00000010u;
}
inline void FruitCPP::clear_has_fruitleftnum() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void FruitCPP::clear_fruitleftnum() {
  fruitleftnum_ = 0u;
  clear_has_fruitleftnum();
}
inline ::google::protobuf::uint32 FruitCPP::fruitleftnum() const {
  // @@protoc_insertion_point(field_get:ProtoUser.FruitCPP.fruitLeftNum)
  return fruitleftnum_;
}
inline void FruitCPP::set_fruitleftnum(::google::protobuf::uint32 value) {
  set_has_fruitleftnum();
  fruitleftnum_ = value;
  // @@protoc_insertion_point(field_set:ProtoUser.FruitCPP.fruitLeftNum)
}

// required uint32 harvestTime = 6;
inline bool FruitCPP::has_harvesttime() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void FruitCPP::set_has_harvesttime() {
  _has_bits_[0] |= 0x00000020u;
}
inline void FruitCPP::clear_has_harvesttime() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void FruitCPP::clear_harvesttime() {
  harvesttime_ = 0u;
  clear_has_harvesttime();
}
inline ::google::protobuf::uint32 FruitCPP::harvesttime() const {
  // @@protoc_insertion_point(field_get:ProtoUser.FruitCPP.harvestTime)
  return harvesttime_;
}
inline void FruitCPP::set_harvesttime(::google::protobuf::uint32 value) {
  set_has_harvesttime();
  harvesttime_ = value;
  // @@protoc_insertion_point(field_set:ProtoUser.FruitCPP.harvestTime)
}

// optional bytes name = 7;
inline bool FruitCPP::has_name() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void FruitCPP::set_has_name() {
  _has_bits_[0] |= 0x00000040u;
}
inline void FruitCPP::clear_has_name() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void FruitCPP::clear_name() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& FruitCPP::name() const {
  // @@protoc_insertion_point(field_get:ProtoUser.FruitCPP.name)
  return *name_;
}
inline void FruitCPP::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set:ProtoUser.FruitCPP.name)
}
inline void FruitCPP::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set_char:ProtoUser.FruitCPP.name)
}
inline void FruitCPP::set_name(const void* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ProtoUser.FruitCPP.name)
}
inline ::std::string* FruitCPP::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:ProtoUser.FruitCPP.name)
  return name_;
}
inline ::std::string* FruitCPP::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void FruitCPP::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoUser.FruitCPP.name)
}

// optional bytes fig = 8;
inline bool FruitCPP::has_fig() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void FruitCPP::set_has_fig() {
  _has_bits_[0] |= 0x00000080u;
}
inline void FruitCPP::clear_has_fig() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void FruitCPP::clear_fig() {
  if (fig_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    fig_->clear();
  }
  clear_has_fig();
}
inline const ::std::string& FruitCPP::fig() const {
  // @@protoc_insertion_point(field_get:ProtoUser.FruitCPP.fig)
  return *fig_;
}
inline void FruitCPP::set_fig(const ::std::string& value) {
  set_has_fig();
  if (fig_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    fig_ = new ::std::string;
  }
  fig_->assign(value);
  // @@protoc_insertion_point(field_set:ProtoUser.FruitCPP.fig)
}
inline void FruitCPP::set_fig(const char* value) {
  set_has_fig();
  if (fig_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    fig_ = new ::std::string;
  }
  fig_->assign(value);
  // @@protoc_insertion_point(field_set_char:ProtoUser.FruitCPP.fig)
}
inline void FruitCPP::set_fig(const void* value, size_t size) {
  set_has_fig();
  if (fig_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    fig_ = new ::std::string;
  }
  fig_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ProtoUser.FruitCPP.fig)
}
inline ::std::string* FruitCPP::mutable_fig() {
  set_has_fig();
  if (fig_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    fig_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:ProtoUser.FruitCPP.fig)
  return fig_;
}
inline ::std::string* FruitCPP::release_fig() {
  clear_has_fig();
  if (fig_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = fig_;
    fig_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void FruitCPP::set_allocated_fig(::std::string* fig) {
  if (fig_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete fig_;
  }
  if (fig) {
    set_has_fig();
    fig_ = fig;
  } else {
    clear_has_fig();
    fig_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoUser.FruitCPP.fig)
}

// -------------------------------------------------------------------

// AnimalCPP

// required uint32 ud = 1;
inline bool AnimalCPP::has_ud() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AnimalCPP::set_has_ud() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AnimalCPP::clear_has_ud() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AnimalCPP::clear_ud() {
  ud_ = 0u;
  clear_has_ud();
}
inline ::google::protobuf::uint32 AnimalCPP::ud() const {
  // @@protoc_insertion_point(field_get:ProtoUser.AnimalCPP.ud)
  return ud_;
}
inline void AnimalCPP::set_ud(::google::protobuf::uint32 value) {
  set_has_ud();
  ud_ = value;
  // @@protoc_insertion_point(field_set:ProtoUser.AnimalCPP.ud)
}

// required uint32 residenceUd = 2;
inline bool AnimalCPP::has_residenceud() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AnimalCPP::set_has_residenceud() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AnimalCPP::clear_has_residenceud() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AnimalCPP::clear_residenceud() {
  residenceud_ = 0u;
  clear_has_residenceud();
}
inline ::google::protobuf::uint32 AnimalCPP::residenceud() const {
  // @@protoc_insertion_point(field_get:ProtoUser.AnimalCPP.residenceUd)
  return residenceud_;
}
inline void AnimalCPP::set_residenceud(::google::protobuf::uint32 value) {
  set_has_residenceud();
  residenceud_ = value;
  // @@protoc_insertion_point(field_set:ProtoUser.AnimalCPP.residenceUd)
}

// required uint32 animalId = 3;
inline bool AnimalCPP::has_animalid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AnimalCPP::set_has_animalid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AnimalCPP::clear_has_animalid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AnimalCPP::clear_animalid() {
  animalid_ = 0u;
  clear_has_animalid();
}
inline ::google::protobuf::uint32 AnimalCPP::animalid() const {
  // @@protoc_insertion_point(field_get:ProtoUser.AnimalCPP.animalId)
  return animalid_;
}
inline void AnimalCPP::set_animalid(::google::protobuf::uint32 value) {
  set_has_animalid();
  animalid_ = value;
  // @@protoc_insertion_point(field_set:ProtoUser.AnimalCPP.animalId)
}

// required uint32 status = 4;
inline bool AnimalCPP::has_status() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void AnimalCPP::set_has_status() {
  _has_bits_[0] |= 0x00000008u;
}
inline void AnimalCPP::clear_has_status() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void AnimalCPP::clear_status() {
  status_ = 0u;
  clear_has_status();
}
inline ::google::protobuf::uint32 AnimalCPP::status() const {
  // @@protoc_insertion_point(field_get:ProtoUser.AnimalCPP.status)
  return status_;
}
inline void AnimalCPP::set_status(::google::protobuf::uint32 value) {
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:ProtoUser.AnimalCPP.status)
}

// required uint32 fullTime = 5;
inline bool AnimalCPP::has_fulltime() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void AnimalCPP::set_has_fulltime() {
  _has_bits_[0] |= 0x00000010u;
}
inline void AnimalCPP::clear_has_fulltime() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void AnimalCPP::clear_fulltime() {
  fulltime_ = 0u;
  clear_has_fulltime();
}
inline ::google::protobuf::uint32 AnimalCPP::fulltime() const {
  // @@protoc_insertion_point(field_get:ProtoUser.AnimalCPP.fullTime)
  return fulltime_;
}
inline void AnimalCPP::set_fulltime(::google::protobuf::uint32 value) {
  set_has_fulltime();
  fulltime_ = value;
  // @@protoc_insertion_point(field_set:ProtoUser.AnimalCPP.fullTime)
}

// optional uint32 keeper = 6;
inline bool AnimalCPP::has_keeper() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void AnimalCPP::set_has_keeper() {
  _has_bits_[0] |= 0x00000020u;
}
inline void AnimalCPP::clear_has_keeper() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void AnimalCPP::clear_keeper() {
  keeper_ = 0u;
  clear_has_keeper();
}
inline ::google::protobuf::uint32 AnimalCPP::keeper() const {
  // @@protoc_insertion_point(field_get:ProtoUser.AnimalCPP.keeper)
  return keeper_;
}
inline void AnimalCPP::set_keeper(::google::protobuf::uint32 value) {
  set_has_keeper();
  keeper_ = value;
  // @@protoc_insertion_point(field_set:ProtoUser.AnimalCPP.keeper)
}

// -------------------------------------------------------------------

// OrderCPP

// required uint32 slot = 1;
inline bool OrderCPP::has_slot() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OrderCPP::set_has_slot() {
  _has_bits_[0] |= 0x00000001u;
}
inline void OrderCPP::clear_has_slot() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void OrderCPP::clear_slot() {
  slot_ = 0u;
  clear_has_slot();
}
inline ::google::protobuf::uint32 OrderCPP::slot() const {
  // @@protoc_insertion_point(field_get:ProtoUser.OrderCPP.slot)
  return slot_;
}
inline void OrderCPP::set_slot(::google::protobuf::uint32 value) {
  set_has_slot();
  slot_ = value;
  // @@protoc_insertion_point(field_set:ProtoUser.OrderCPP.slot)
}

// required uint32 storageid = 2;
inline bool OrderCPP::has_storageid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void OrderCPP::set_has_storageid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void OrderCPP::clear_has_storageid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void OrderCPP::clear_storageid() {
  storageid_ = 0u;
  clear_has_storageid();
}
inline ::google::protobuf::uint32 OrderCPP::storageid() const {
  // @@protoc_insertion_point(field_get:ProtoUser.OrderCPP.storageid)
  return storageid_;
}
inline void OrderCPP::set_storageid(::google::protobuf::uint32 value) {
  set_has_storageid();
  storageid_ = value;
  // @@protoc_insertion_point(field_set:ProtoUser.OrderCPP.storageid)
}

// required uint32 levelid = 3;
inline bool OrderCPP::has_levelid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void OrderCPP::set_has_levelid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void OrderCPP::clear_has_levelid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void OrderCPP::clear_levelid() {
  levelid_ = 0u;
  clear_has_levelid();
}
inline ::google::protobuf::uint32 OrderCPP::levelid() const {
  // @@protoc_insertion_point(field_get:ProtoUser.OrderCPP.levelid)
  return levelid_;
}
inline void OrderCPP::set_levelid(::google::protobuf::uint32 value) {
  set_has_levelid();
  levelid_ = value;
  // @@protoc_insertion_point(field_set:ProtoUser.OrderCPP.levelid)
}

// required bytes orderid = 4;
inline bool OrderCPP::has_orderid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void OrderCPP::set_has_orderid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void OrderCPP::clear_has_orderid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void OrderCPP::clear_orderid() {
  if (orderid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    orderid_->clear();
  }
  clear_has_orderid();
}
inline const ::std::string& OrderCPP::orderid() const {
  // @@protoc_insertion_point(field_get:ProtoUser.OrderCPP.orderid)
  return *orderid_;
}
inline void OrderCPP::set_orderid(const ::std::string& value) {
  set_has_orderid();
  if (orderid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    orderid_ = new ::std::string;
  }
  orderid_->assign(value);
  // @@protoc_insertion_point(field_set:ProtoUser.OrderCPP.orderid)
}
inline void OrderCPP::set_orderid(const char* value) {
  set_has_orderid();
  if (orderid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    orderid_ = new ::std::string;
  }
  orderid_->assign(value);
  // @@protoc_insertion_point(field_set_char:ProtoUser.OrderCPP.orderid)
}
inline void OrderCPP::set_orderid(const void* value, size_t size) {
  set_has_orderid();
  if (orderid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    orderid_ = new ::std::string;
  }
  orderid_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ProtoUser.OrderCPP.orderid)
}
inline ::std::string* OrderCPP::mutable_orderid() {
  set_has_orderid();
  if (orderid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    orderid_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:ProtoUser.OrderCPP.orderid)
  return orderid_;
}
inline ::std::string* OrderCPP::release_orderid() {
  clear_has_orderid();
  if (orderid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = orderid_;
    orderid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void OrderCPP::set_allocated_orderid(::std::string* orderid) {
  if (orderid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete orderid_;
  }
  if (orderid) {
    set_has_orderid();
    orderid_ = orderid;
  } else {
    clear_has_orderid();
    orderid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoUser.OrderCPP.orderid)
}

// required uint32 coin = 5;
inline bool OrderCPP::has_coin() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void OrderCPP::set_has_coin() {
  _has_bits_[0] |= 0x00000010u;
}
inline void OrderCPP::clear_has_coin() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void OrderCPP::clear_coin() {
  coin_ = 0u;
  clear_has_coin();
}
inline ::google::protobuf::uint32 OrderCPP::coin() const {
  // @@protoc_insertion_point(field_get:ProtoUser.OrderCPP.coin)
  return coin_;
}
inline void OrderCPP::set_coin(::google::protobuf::uint32 value) {
  set_has_coin();
  coin_ = value;
  // @@protoc_insertion_point(field_set:ProtoUser.OrderCPP.coin)
}

// required uint32 exp = 6;
inline bool OrderCPP::has_exp() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void OrderCPP::set_has_exp() {
  _has_bits_[0] |= 0x00000020u;
}
inline void OrderCPP::clear_has_exp() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void OrderCPP::clear_exp() {
  exp_ = 0u;
  clear_has_exp();
}
inline ::google::protobuf::uint32 OrderCPP::exp() const {
  // @@protoc_insertion_point(field_get:ProtoUser.OrderCPP.exp)
  return exp_;
}
inline void OrderCPP::set_exp(::google::protobuf::uint32 value) {
  set_has_exp();
  exp_ = value;
  // @@protoc_insertion_point(field_set:ProtoUser.OrderCPP.exp)
}

// required uint32 end_ts = 7;
inline bool OrderCPP::has_end_ts() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void OrderCPP::set_has_end_ts() {
  _has_bits_[0] |= 0x00000040u;
}
inline void OrderCPP::clear_has_end_ts() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void OrderCPP::clear_end_ts() {
  end_ts_ = 0u;
  clear_has_end_ts();
}
inline ::google::protobuf::uint32 OrderCPP::end_ts() const {
  // @@protoc_insertion_point(field_get:ProtoUser.OrderCPP.end_ts)
  return end_ts_;
}
inline void OrderCPP::set_end_ts(::google::protobuf::uint32 value) {
  set_has_end_ts();
  end_ts_ = value;
  // @@protoc_insertion_point(field_set:ProtoUser.OrderCPP.end_ts)
}

// -------------------------------------------------------------------

// TruckCPP

// required uint32 state = 1;
inline bool TruckCPP::has_state() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TruckCPP::set_has_state() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TruckCPP::clear_has_state() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TruckCPP::clear_state() {
  state_ = 0u;
  clear_has_state();
}
inline ::google::protobuf::uint32 TruckCPP::state() const {
  // @@protoc_insertion_point(field_get:ProtoUser.TruckCPP.state)
  return state_;
}
inline void TruckCPP::set_state(::google::protobuf::uint32 value) {
  set_has_state();
  state_ = value;
  // @@protoc_insertion_point(field_set:ProtoUser.TruckCPP.state)
}

// required uint32 end_ts = 2;
inline bool TruckCPP::has_end_ts() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TruckCPP::set_has_end_ts() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TruckCPP::clear_has_end_ts() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TruckCPP::clear_end_ts() {
  end_ts_ = 0u;
  clear_has_end_ts();
}
inline ::google::protobuf::uint32 TruckCPP::end_ts() const {
  // @@protoc_insertion_point(field_get:ProtoUser.TruckCPP.end_ts)
  return end_ts_;
}
inline void TruckCPP::set_end_ts(::google::protobuf::uint32 value) {
  set_has_end_ts();
  end_ts_ = value;
  // @@protoc_insertion_point(field_set:ProtoUser.TruckCPP.end_ts)
}

// required uint32 coin = 3;
inline bool TruckCPP::has_coin() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TruckCPP::set_has_coin() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TruckCPP::clear_has_coin() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TruckCPP::clear_coin() {
  coin_ = 0u;
  clear_has_coin();
}
inline ::google::protobuf::uint32 TruckCPP::coin() const {
  // @@protoc_insertion_point(field_get:ProtoUser.TruckCPP.coin)
  return coin_;
}
inline void TruckCPP::set_coin(::google::protobuf::uint32 value) {
  set_has_coin();
  coin_ = value;
  // @@protoc_insertion_point(field_set:ProtoUser.TruckCPP.coin)
}

// required uint32 exp = 4;
inline bool TruckCPP::has_exp() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void TruckCPP::set_has_exp() {
  _has_bits_[0] |= 0x00000008u;
}
inline void TruckCPP::clear_has_exp() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void TruckCPP::clear_exp() {
  exp_ = 0u;
  clear_has_exp();
}
inline ::google::protobuf::uint32 TruckCPP::exp() const {
  // @@protoc_insertion_point(field_get:ProtoUser.TruckCPP.exp)
  return exp_;
}
inline void TruckCPP::set_exp(::google::protobuf::uint32 value) {
  set_has_exp();
  exp_ = value;
  // @@protoc_insertion_point(field_set:ProtoUser.TruckCPP.exp)
}

// -------------------------------------------------------------------

// ShippingCPP

// required uint32 badge = 1;
inline bool ShippingCPP::has_badge() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ShippingCPP::set_has_badge() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ShippingCPP::clear_has_badge() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ShippingCPP::clear_badge() {
  badge_ = 0u;
  clear_has_badge();
}
inline ::google::protobuf::uint32 ShippingCPP::badge() const {
  // @@protoc_insertion_point(field_get:ProtoUser.ShippingCPP.badge)
  return badge_;
}
inline void ShippingCPP::set_badge(::google::protobuf::uint32 value) {
  set_has_badge();
  badge_ = value;
  // @@protoc_insertion_point(field_set:ProtoUser.ShippingCPP.badge)
}

// required uint32 unlockEndts = 2;
inline bool ShippingCPP::has_unlockendts() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ShippingCPP::set_has_unlockendts() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ShippingCPP::clear_has_unlockendts() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ShippingCPP::clear_unlockendts() {
  unlockendts_ = 0u;
  clear_has_unlockendts();
}
inline ::google::protobuf::uint32 ShippingCPP::unlockendts() const {
  // @@protoc_insertion_point(field_get:ProtoUser.ShippingCPP.unlockEndts)
  return unlockendts_;
}
inline void ShippingCPP::set_unlockendts(::google::protobuf::uint32 value) {
  set_has_unlockendts();
  unlockendts_ = value;
  // @@protoc_insertion_point(field_set:ProtoUser.ShippingCPP.unlockEndts)
}

// required uint32 arriveTs = 3;
inline bool ShippingCPP::has_arrivets() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ShippingCPP::set_has_arrivets() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ShippingCPP::clear_has_arrivets() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ShippingCPP::clear_arrivets() {
  arrivets_ = 0u;
  clear_has_arrivets();
}
inline ::google::protobuf::uint32 ShippingCPP::arrivets() const {
  // @@protoc_insertion_point(field_get:ProtoUser.ShippingCPP.arriveTs)
  return arrivets_;
}
inline void ShippingCPP::set_arrivets(::google::protobuf::uint32 value) {
  set_has_arrivets();
  arrivets_ = value;
  // @@protoc_insertion_point(field_set:ProtoUser.ShippingCPP.arriveTs)
}

// required uint32 publicAidTimes = 4;
inline bool ShippingCPP::has_publicaidtimes() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ShippingCPP::set_has_publicaidtimes() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ShippingCPP::clear_has_publicaidtimes() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ShippingCPP::clear_publicaidtimes() {
  publicaidtimes_ = 0u;
  clear_has_publicaidtimes();
}
inline ::google::protobuf::uint32 ShippingCPP::publicaidtimes() const {
  // @@protoc_insertion_point(field_get:ProtoUser.ShippingCPP.publicAidTimes)
  return publicaidtimes_;
}
inline void ShippingCPP::set_publicaidtimes(::google::protobuf::uint32 value) {
  set_has_publicaidtimes();
  publicaidtimes_ = value;
  // @@protoc_insertion_point(field_set:ProtoUser.ShippingCPP.publicAidTimes)
}

// required uint32 commercialAidTimes = 5;
inline bool ShippingCPP::has_commercialaidtimes() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ShippingCPP::set_has_commercialaidtimes() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ShippingCPP::clear_has_commercialaidtimes() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ShippingCPP::clear_commercialaidtimes() {
  commercialaidtimes_ = 0u;
  clear_has_commercialaidtimes();
}
inline ::google::protobuf::uint32 ShippingCPP::commercialaidtimes() const {
  // @@protoc_insertion_point(field_get:ProtoUser.ShippingCPP.commercialAidTimes)
  return commercialaidtimes_;
}
inline void ShippingCPP::set_commercialaidtimes(::google::protobuf::uint32 value) {
  set_has_commercialaidtimes();
  commercialaidtimes_ = value;
  // @@protoc_insertion_point(field_set:ProtoUser.ShippingCPP.commercialAidTimes)
}

// required uint32 status = 6;
inline bool ShippingCPP::has_status() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ShippingCPP::set_has_status() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ShippingCPP::clear_has_status() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ShippingCPP::clear_status() {
  status_ = 0u;
  clear_has_status();
}
inline ::google::protobuf::uint32 ShippingCPP::status() const {
  // @@protoc_insertion_point(field_get:ProtoUser.ShippingCPP.status)
  return status_;
}
inline void ShippingCPP::set_status(::google::protobuf::uint32 value) {
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:ProtoUser.ShippingCPP.status)
}

// required uint32 playStatus = 7;
inline bool ShippingCPP::has_playstatus() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void ShippingCPP::set_has_playstatus() {
  _has_bits_[0] |= 0x00000040u;
}
inline void ShippingCPP::clear_has_playstatus() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void ShippingCPP::clear_playstatus() {
  playstatus_ = 0u;
  clear_has_playstatus();
}
inline ::google::protobuf::uint32 ShippingCPP::playstatus() const {
  // @@protoc_insertion_point(field_get:ProtoUser.ShippingCPP.playStatus)
  return playstatus_;
}
inline void ShippingCPP::set_playstatus(::google::protobuf::uint32 value) {
  set_has_playstatus();
  playstatus_ = value;
  // @@protoc_insertion_point(field_set:ProtoUser.ShippingCPP.playStatus)
}

// required uint32 viewAdPackCnt = 8;
inline bool ShippingCPP::has_viewadpackcnt() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void ShippingCPP::set_has_viewadpackcnt() {
  _has_bits_[0] |= 0x00000080u;
}
inline void ShippingCPP::clear_has_viewadpackcnt() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void ShippingCPP::clear_viewadpackcnt() {
  viewadpackcnt_ = 0u;
  clear_has_viewadpackcnt();
}
inline ::google::protobuf::uint32 ShippingCPP::viewadpackcnt() const {
  // @@protoc_insertion_point(field_get:ProtoUser.ShippingCPP.viewAdPackCnt)
  return viewadpackcnt_;
}
inline void ShippingCPP::set_viewadpackcnt(::google::protobuf::uint32 value) {
  set_has_viewadpackcnt();
  viewadpackcnt_ = value;
  // @@protoc_insertion_point(field_set:ProtoUser.ShippingCPP.viewAdPackCnt)
}

// -------------------------------------------------------------------

// ShippingBoxCPP

// required uint32 boxid = 1;
inline bool ShippingBoxCPP::has_boxid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ShippingBoxCPP::set_has_boxid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ShippingBoxCPP::clear_has_boxid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ShippingBoxCPP::clear_boxid() {
  boxid_ = 0u;
  clear_has_boxid();
}
inline ::google::protobuf::uint32 ShippingBoxCPP::boxid() const {
  // @@protoc_insertion_point(field_get:ProtoUser.ShippingBoxCPP.boxid)
  return boxid_;
}
inline void ShippingBoxCPP::set_boxid(::google::protobuf::uint32 value) {
  set_has_boxid();
  boxid_ = value;
  // @@protoc_insertion_point(field_set:ProtoUser.ShippingBoxCPP.boxid)
}

// required uint32 propsid = 2;
inline bool ShippingBoxCPP::has_propsid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ShippingBoxCPP::set_has_propsid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ShippingBoxCPP::clear_has_propsid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ShippingBoxCPP::clear_propsid() {
  propsid_ = 0u;
  clear_has_propsid();
}
inline ::google::protobuf::uint32 ShippingBoxCPP::propsid() const {
  // @@protoc_insertion_point(field_get:ProtoUser.ShippingBoxCPP.propsid)
  return propsid_;
}
inline void ShippingBoxCPP::set_propsid(::google::protobuf::uint32 value) {
  set_has_propsid();
  propsid_ = value;
  // @@protoc_insertion_point(field_set:ProtoUser.ShippingBoxCPP.propsid)
}

// required uint32 count = 3;
inline bool ShippingBoxCPP::has_count() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ShippingBoxCPP::set_has_count() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ShippingBoxCPP::clear_has_count() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ShippingBoxCPP::clear_count() {
  count_ = 0u;
  clear_has_count();
}
inline ::google::protobuf::uint32 ShippingBoxCPP::count() const {
  // @@protoc_insertion_point(field_get:ProtoUser.ShippingBoxCPP.count)
  return count_;
}
inline void ShippingBoxCPP::set_count(::google::protobuf::uint32 value) {
  set_has_count();
  count_ = value;
  // @@protoc_insertion_point(field_set:ProtoUser.ShippingBoxCPP.count)
}

// required uint32 aidStatus = 4;
inline bool ShippingBoxCPP::has_aidstatus() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ShippingBoxCPP::set_has_aidstatus() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ShippingBoxCPP::clear_has_aidstatus() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ShippingBoxCPP::clear_aidstatus() {
  aidstatus_ = 0u;
  clear_has_aidstatus();
}
inline ::google::protobuf::uint32 ShippingBoxCPP::aidstatus() const {
  // @@protoc_insertion_point(field_get:ProtoUser.ShippingBoxCPP.aidStatus)
  return aidstatus_;
}
inline void ShippingBoxCPP::set_aidstatus(::google::protobuf::uint32 value) {
  set_has_aidstatus();
  aidstatus_ = value;
  // @@protoc_insertion_point(field_set:ProtoUser.ShippingBoxCPP.aidStatus)
}

// required uint32 status = 5;
inline bool ShippingBoxCPP::has_status() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ShippingBoxCPP::set_has_status() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ShippingBoxCPP::clear_has_status() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ShippingBoxCPP::clear_status() {
  status_ = 0u;
  clear_has_status();
}
inline ::google::protobuf::uint32 ShippingBoxCPP::status() const {
  // @@protoc_insertion_point(field_get:ProtoUser.ShippingBoxCPP.status)
  return status_;
}
inline void ShippingBoxCPP::set_status(::google::protobuf::uint32 value) {
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:ProtoUser.ShippingBoxCPP.status)
}

// required uint32 coin = 6;
inline bool ShippingBoxCPP::has_coin() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ShippingBoxCPP::set_has_coin() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ShippingBoxCPP::clear_has_coin() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ShippingBoxCPP::clear_coin() {
  coin_ = 0u;
  clear_has_coin();
}
inline ::google::protobuf::uint32 ShippingBoxCPP::coin() const {
  // @@protoc_insertion_point(field_get:ProtoUser.ShippingBoxCPP.coin)
  return coin_;
}
inline void ShippingBoxCPP::set_coin(::google::protobuf::uint32 value) {
  set_has_coin();
  coin_ = value;
  // @@protoc_insertion_point(field_set:ProtoUser.ShippingBoxCPP.coin)
}

// required uint32 exp = 7;
inline bool ShippingBoxCPP::has_exp() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void ShippingBoxCPP::set_has_exp() {
  _has_bits_[0] |= 0x00000040u;
}
inline void ShippingBoxCPP::clear_has_exp() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void ShippingBoxCPP::clear_exp() {
  exp_ = 0u;
  clear_has_exp();
}
inline ::google::protobuf::uint32 ShippingBoxCPP::exp() const {
  // @@protoc_insertion_point(field_get:ProtoUser.ShippingBoxCPP.exp)
  return exp_;
}
inline void ShippingBoxCPP::set_exp(::google::protobuf::uint32 value) {
  set_has_exp();
  exp_ = value;
  // @@protoc_insertion_point(field_set:ProtoUser.ShippingBoxCPP.exp)
}

// optional bytes fig = 8;
inline bool ShippingBoxCPP::has_fig() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void ShippingBoxCPP::set_has_fig() {
  _has_bits_[0] |= 0x00000080u;
}
inline void ShippingBoxCPP::clear_has_fig() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void ShippingBoxCPP::clear_fig() {
  if (fig_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    fig_->clear();
  }
  clear_has_fig();
}
inline const ::std::string& ShippingBoxCPP::fig() const {
  // @@protoc_insertion_point(field_get:ProtoUser.ShippingBoxCPP.fig)
  return *fig_;
}
inline void ShippingBoxCPP::set_fig(const ::std::string& value) {
  set_has_fig();
  if (fig_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    fig_ = new ::std::string;
  }
  fig_->assign(value);
  // @@protoc_insertion_point(field_set:ProtoUser.ShippingBoxCPP.fig)
}
inline void ShippingBoxCPP::set_fig(const char* value) {
  set_has_fig();
  if (fig_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    fig_ = new ::std::string;
  }
  fig_->assign(value);
  // @@protoc_insertion_point(field_set_char:ProtoUser.ShippingBoxCPP.fig)
}
inline void ShippingBoxCPP::set_fig(const void* value, size_t size) {
  set_has_fig();
  if (fig_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    fig_ = new ::std::string;
  }
  fig_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ProtoUser.ShippingBoxCPP.fig)
}
inline ::std::string* ShippingBoxCPP::mutable_fig() {
  set_has_fig();
  if (fig_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    fig_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:ProtoUser.ShippingBoxCPP.fig)
  return fig_;
}
inline ::std::string* ShippingBoxCPP::release_fig() {
  clear_has_fig();
  if (fig_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = fig_;
    fig_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void ShippingBoxCPP::set_allocated_fig(::std::string* fig) {
  if (fig_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete fig_;
  }
  if (fig) {
    set_has_fig();
    fig_ = fig;
  } else {
    clear_has_fig();
    fig_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoUser.ShippingBoxCPP.fig)
}

// optional bytes name = 9;
inline bool ShippingBoxCPP::has_name() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void ShippingBoxCPP::set_has_name() {
  _has_bits_[0] |= 0x00000100u;
}
inline void ShippingBoxCPP::clear_has_name() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void ShippingBoxCPP::clear_name() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& ShippingBoxCPP::name() const {
  // @@protoc_insertion_point(field_get:ProtoUser.ShippingBoxCPP.name)
  return *name_;
}
inline void ShippingBoxCPP::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set:ProtoUser.ShippingBoxCPP.name)
}
inline void ShippingBoxCPP::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set_char:ProtoUser.ShippingBoxCPP.name)
}
inline void ShippingBoxCPP::set_name(const void* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ProtoUser.ShippingBoxCPP.name)
}
inline ::std::string* ShippingBoxCPP::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:ProtoUser.ShippingBoxCPP.name)
  return name_;
}
inline ::std::string* ShippingBoxCPP::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void ShippingBoxCPP::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoUser.ShippingBoxCPP.name)
}

// -------------------------------------------------------------------

// ShopCPP

// required uint32 ud = 1;
inline bool ShopCPP::has_ud() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ShopCPP::set_has_ud() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ShopCPP::clear_has_ud() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ShopCPP::clear_ud() {
  ud_ = 0u;
  clear_has_ud();
}
inline ::google::protobuf::uint32 ShopCPP::ud() const {
  // @@protoc_insertion_point(field_get:ProtoUser.ShopCPP.ud)
  return ud_;
}
inline void ShopCPP::set_ud(::google::protobuf::uint32 value) {
  set_has_ud();
  ud_ = value;
  // @@protoc_insertion_point(field_set:ProtoUser.ShopCPP.ud)
}

// required uint32 propsid = 2;
inline bool ShopCPP::has_propsid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ShopCPP::set_has_propsid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ShopCPP::clear_has_propsid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ShopCPP::clear_propsid() {
  propsid_ = 0u;
  clear_has_propsid();
}
inline ::google::protobuf::uint32 ShopCPP::propsid() const {
  // @@protoc_insertion_point(field_get:ProtoUser.ShopCPP.propsid)
  return propsid_;
}
inline void ShopCPP::set_propsid(::google::protobuf::uint32 value) {
  set_has_propsid();
  propsid_ = value;
  // @@protoc_insertion_point(field_set:ProtoUser.ShopCPP.propsid)
}

// required uint32 propscnt = 3;
inline bool ShopCPP::has_propscnt() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ShopCPP::set_has_propscnt() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ShopCPP::clear_has_propscnt() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ShopCPP::clear_propscnt() {
  propscnt_ = 0u;
  clear_has_propscnt();
}
inline ::google::protobuf::uint32 ShopCPP::propscnt() const {
  // @@protoc_insertion_point(field_get:ProtoUser.ShopCPP.propscnt)
  return propscnt_;
}
inline void ShopCPP::set_propscnt(::google::protobuf::uint32 value) {
  set_has_propscnt();
  propscnt_ = value;
  // @@protoc_insertion_point(field_set:ProtoUser.ShopCPP.propscnt)
}

// required uint32 propsprice = 4;
inline bool ShopCPP::has_propsprice() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ShopCPP::set_has_propsprice() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ShopCPP::clear_has_propsprice() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ShopCPP::clear_propsprice() {
  propsprice_ = 0u;
  clear_has_propsprice();
}
inline ::google::protobuf::uint32 ShopCPP::propsprice() const {
  // @@protoc_insertion_point(field_get:ProtoUser.ShopCPP.propsprice)
  return propsprice_;
}
inline void ShopCPP::set_propsprice(::google::protobuf::uint32 value) {
  set_has_propsprice();
  propsprice_ = value;
  // @@protoc_insertion_point(field_set:ProtoUser.ShopCPP.propsprice)
}

// required uint32 adflag = 5;
inline bool ShopCPP::has_adflag() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ShopCPP::set_has_adflag() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ShopCPP::clear_has_adflag() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ShopCPP::clear_adflag() {
  adflag_ = 0u;
  clear_has_adflag();
}
inline ::google::protobuf::uint32 ShopCPP::adflag() const {
  // @@protoc_insertion_point(field_get:ProtoUser.ShopCPP.adflag)
  return adflag_;
}
inline void ShopCPP::set_adflag(::google::protobuf::uint32 value) {
  set_has_adflag();
  adflag_ = value;
  // @@protoc_insertion_point(field_set:ProtoUser.ShopCPP.adflag)
}

// required uint32 sellflag = 6;
inline bool ShopCPP::has_sellflag() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ShopCPP::set_has_sellflag() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ShopCPP::clear_has_sellflag() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ShopCPP::clear_sellflag() {
  sellflag_ = 0u;
  clear_has_sellflag();
}
inline ::google::protobuf::uint32 ShopCPP::sellflag() const {
  // @@protoc_insertion_point(field_get:ProtoUser.ShopCPP.sellflag)
  return sellflag_;
}
inline void ShopCPP::set_sellflag(::google::protobuf::uint32 value) {
  set_has_sellflag();
  sellflag_ = value;
  // @@protoc_insertion_point(field_set:ProtoUser.ShopCPP.sellflag)
}

// optional bytes buyerfig = 7;
inline bool ShopCPP::has_buyerfig() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void ShopCPP::set_has_buyerfig() {
  _has_bits_[0] |= 0x00000040u;
}
inline void ShopCPP::clear_has_buyerfig() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void ShopCPP::clear_buyerfig() {
  if (buyerfig_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    buyerfig_->clear();
  }
  clear_has_buyerfig();
}
inline const ::std::string& ShopCPP::buyerfig() const {
  // @@protoc_insertion_point(field_get:ProtoUser.ShopCPP.buyerfig)
  return *buyerfig_;
}
inline void ShopCPP::set_buyerfig(const ::std::string& value) {
  set_has_buyerfig();
  if (buyerfig_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    buyerfig_ = new ::std::string;
  }
  buyerfig_->assign(value);
  // @@protoc_insertion_point(field_set:ProtoUser.ShopCPP.buyerfig)
}
inline void ShopCPP::set_buyerfig(const char* value) {
  set_has_buyerfig();
  if (buyerfig_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    buyerfig_ = new ::std::string;
  }
  buyerfig_->assign(value);
  // @@protoc_insertion_point(field_set_char:ProtoUser.ShopCPP.buyerfig)
}
inline void ShopCPP::set_buyerfig(const void* value, size_t size) {
  set_has_buyerfig();
  if (buyerfig_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    buyerfig_ = new ::std::string;
  }
  buyerfig_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ProtoUser.ShopCPP.buyerfig)
}
inline ::std::string* ShopCPP::mutable_buyerfig() {
  set_has_buyerfig();
  if (buyerfig_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    buyerfig_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:ProtoUser.ShopCPP.buyerfig)
  return buyerfig_;
}
inline ::std::string* ShopCPP::release_buyerfig() {
  clear_has_buyerfig();
  if (buyerfig_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = buyerfig_;
    buyerfig_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void ShopCPP::set_allocated_buyerfig(::std::string* buyerfig) {
  if (buyerfig_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete buyerfig_;
  }
  if (buyerfig) {
    set_has_buyerfig();
    buyerfig_ = buyerfig;
  } else {
    clear_has_buyerfig();
    buyerfig_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoUser.ShopCPP.buyerfig)
}

// optional bytes buyername = 8;
inline bool ShopCPP::has_buyername() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void ShopCPP::set_has_buyername() {
  _has_bits_[0] |= 0x00000080u;
}
inline void ShopCPP::clear_has_buyername() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void ShopCPP::clear_buyername() {
  if (buyername_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    buyername_->clear();
  }
  clear_has_buyername();
}
inline const ::std::string& ShopCPP::buyername() const {
  // @@protoc_insertion_point(field_get:ProtoUser.ShopCPP.buyername)
  return *buyername_;
}
inline void ShopCPP::set_buyername(const ::std::string& value) {
  set_has_buyername();
  if (buyername_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    buyername_ = new ::std::string;
  }
  buyername_->assign(value);
  // @@protoc_insertion_point(field_set:ProtoUser.ShopCPP.buyername)
}
inline void ShopCPP::set_buyername(const char* value) {
  set_has_buyername();
  if (buyername_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    buyername_ = new ::std::string;
  }
  buyername_->assign(value);
  // @@protoc_insertion_point(field_set_char:ProtoUser.ShopCPP.buyername)
}
inline void ShopCPP::set_buyername(const void* value, size_t size) {
  set_has_buyername();
  if (buyername_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    buyername_ = new ::std::string;
  }
  buyername_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ProtoUser.ShopCPP.buyername)
}
inline ::std::string* ShopCPP::mutable_buyername() {
  set_has_buyername();
  if (buyername_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    buyername_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:ProtoUser.ShopCPP.buyername)
  return buyername_;
}
inline ::std::string* ShopCPP::release_buyername() {
  clear_has_buyername();
  if (buyername_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = buyername_;
    buyername_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void ShopCPP::set_allocated_buyername(::std::string* buyername) {
  if (buyername_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete buyername_;
  }
  if (buyername) {
    set_has_buyername();
    buyername_ = buyername;
  } else {
    clear_has_buyername();
    buyername_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoUser.ShopCPP.buyername)
}

// required uint32 vipshelfflag = 9;
inline bool ShopCPP::has_vipshelfflag() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void ShopCPP::set_has_vipshelfflag() {
  _has_bits_[0] |= 0x00000100u;
}
inline void ShopCPP::clear_has_vipshelfflag() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void ShopCPP::clear_vipshelfflag() {
  vipshelfflag_ = 0u;
  clear_has_vipshelfflag();
}
inline ::google::protobuf::uint32 ShopCPP::vipshelfflag() const {
  // @@protoc_insertion_point(field_get:ProtoUser.ShopCPP.vipshelfflag)
  return vipshelfflag_;
}
inline void ShopCPP::set_vipshelfflag(::google::protobuf::uint32 value) {
  set_has_vipshelfflag();
  vipshelfflag_ = value;
  // @@protoc_insertion_point(field_set:ProtoUser.ShopCPP.vipshelfflag)
}

// optional uint32 buyeruid = 10;
inline bool ShopCPP::has_buyeruid() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void ShopCPP::set_has_buyeruid() {
  _has_bits_[0] |= 0x00000200u;
}
inline void ShopCPP::clear_has_buyeruid() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void ShopCPP::clear_buyeruid() {
  buyeruid_ = 0u;
  clear_has_buyeruid();
}
inline ::google::protobuf::uint32 ShopCPP::buyeruid() const {
  // @@protoc_insertion_point(field_get:ProtoUser.ShopCPP.buyeruid)
  return buyeruid_;
}
inline void ShopCPP::set_buyeruid(::google::protobuf::uint32 value) {
  set_has_buyeruid();
  buyeruid_ = value;
  // @@protoc_insertion_point(field_set:ProtoUser.ShopCPP.buyeruid)
}

// -------------------------------------------------------------------

// TaskCPP

// required uint32 id = 1;
inline bool TaskCPP::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TaskCPP::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TaskCPP::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TaskCPP::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 TaskCPP::id() const {
  // @@protoc_insertion_point(field_get:ProtoUser.TaskCPP.id)
  return id_;
}
inline void TaskCPP::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:ProtoUser.TaskCPP.id)
}

// required uint32 curtaskvalue = 2;
inline bool TaskCPP::has_curtaskvalue() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TaskCPP::set_has_curtaskvalue() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TaskCPP::clear_has_curtaskvalue() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TaskCPP::clear_curtaskvalue() {
  curtaskvalue_ = 0u;
  clear_has_curtaskvalue();
}
inline ::google::protobuf::uint32 TaskCPP::curtaskvalue() const {
  // @@protoc_insertion_point(field_get:ProtoUser.TaskCPP.curtaskvalue)
  return curtaskvalue_;
}
inline void TaskCPP::set_curtaskvalue(::google::protobuf::uint32 value) {
  set_has_curtaskvalue();
  curtaskvalue_ = value;
  // @@protoc_insertion_point(field_set:ProtoUser.TaskCPP.curtaskvalue)
}

// required uint32 curtaskstar = 3;
inline bool TaskCPP::has_curtaskstar() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TaskCPP::set_has_curtaskstar() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TaskCPP::clear_has_curtaskstar() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TaskCPP::clear_curtaskstar() {
  curtaskstar_ = 0u;
  clear_has_curtaskstar();
}
inline ::google::protobuf::uint32 TaskCPP::curtaskstar() const {
  // @@protoc_insertion_point(field_get:ProtoUser.TaskCPP.curtaskstar)
  return curtaskstar_;
}
inline void TaskCPP::set_curtaskstar(::google::protobuf::uint32 value) {
  set_has_curtaskstar();
  curtaskstar_ = value;
  // @@protoc_insertion_point(field_set:ProtoUser.TaskCPP.curtaskstar)
}

// required uint32 rewardstatus = 4;
inline bool TaskCPP::has_rewardstatus() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void TaskCPP::set_has_rewardstatus() {
  _has_bits_[0] |= 0x00000008u;
}
inline void TaskCPP::clear_has_rewardstatus() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void TaskCPP::clear_rewardstatus() {
  rewardstatus_ = 0u;
  clear_has_rewardstatus();
}
inline ::google::protobuf::uint32 TaskCPP::rewardstatus() const {
  // @@protoc_insertion_point(field_get:ProtoUser.TaskCPP.rewardstatus)
  return rewardstatus_;
}
inline void TaskCPP::set_rewardstatus(::google::protobuf::uint32 value) {
  set_has_rewardstatus();
  rewardstatus_ = value;
  // @@protoc_insertion_point(field_set:ProtoUser.TaskCPP.rewardstatus)
}

// -------------------------------------------------------------------

// MissionCPP

// required uint32 id = 1;
inline bool MissionCPP::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MissionCPP::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MissionCPP::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MissionCPP::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 MissionCPP::id() const {
  // @@protoc_insertion_point(field_get:ProtoUser.MissionCPP.id)
  return id_;
}
inline void MissionCPP::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:ProtoUser.MissionCPP.id)
}

// required uint32 value = 2;
inline bool MissionCPP::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MissionCPP::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MissionCPP::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MissionCPP::clear_value() {
  value_ = 0u;
  clear_has_value();
}
inline ::google::protobuf::uint32 MissionCPP::value() const {
  // @@protoc_insertion_point(field_get:ProtoUser.MissionCPP.value)
  return value_;
}
inline void MissionCPP::set_value(::google::protobuf::uint32 value) {
  set_has_value();
  value_ = value;
  // @@protoc_insertion_point(field_set:ProtoUser.MissionCPP.value)
}

// -------------------------------------------------------------------

// ActivityCPP

// required uint32 id = 1;
inline bool ActivityCPP::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ActivityCPP::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ActivityCPP::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ActivityCPP::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 ActivityCPP::id() const {
  // @@protoc_insertion_point(field_get:ProtoUser.ActivityCPP.id)
  return id_;
}
inline void ActivityCPP::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:ProtoUser.ActivityCPP.id)
}

// required uint32 version = 2;
inline bool ActivityCPP::has_version() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ActivityCPP::set_has_version() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ActivityCPP::clear_has_version() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ActivityCPP::clear_version() {
  version_ = 0u;
  clear_has_version();
}
inline ::google::protobuf::uint32 ActivityCPP::version() const {
  // @@protoc_insertion_point(field_get:ProtoUser.ActivityCPP.version)
  return version_;
}
inline void ActivityCPP::set_version(::google::protobuf::uint32 value) {
  set_has_version();
  version_ = value;
  // @@protoc_insertion_point(field_set:ProtoUser.ActivityCPP.version)
}

// repeated uint32 data = 3;
inline int ActivityCPP::data_size() const {
  return data_.size();
}
inline void ActivityCPP::clear_data() {
  data_.Clear();
}
inline ::google::protobuf::uint32 ActivityCPP::data(int index) const {
  // @@protoc_insertion_point(field_get:ProtoUser.ActivityCPP.data)
  return data_.Get(index);
}
inline void ActivityCPP::set_data(int index, ::google::protobuf::uint32 value) {
  data_.Set(index, value);
  // @@protoc_insertion_point(field_set:ProtoUser.ActivityCPP.data)
}
inline void ActivityCPP::add_data(::google::protobuf::uint32 value) {
  data_.Add(value);
  // @@protoc_insertion_point(field_add:ProtoUser.ActivityCPP.data)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
ActivityCPP::data() const {
  // @@protoc_insertion_point(field_list:ProtoUser.ActivityCPP.data)
  return data_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
ActivityCPP::mutable_data() {
  // @@protoc_insertion_point(field_mutable_list:ProtoUser.ActivityCPP.data)
  return &data_;
}

// -------------------------------------------------------------------

// MaidDogCPP

// required uint32 id = 1;
inline bool MaidDogCPP::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MaidDogCPP::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MaidDogCPP::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MaidDogCPP::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 MaidDogCPP::id() const {
  // @@protoc_insertion_point(field_get:ProtoUser.MaidDogCPP.id)
  return id_;
}
inline void MaidDogCPP::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:ProtoUser.MaidDogCPP.id)
}

// required uint32 value = 2;
inline bool MaidDogCPP::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MaidDogCPP::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MaidDogCPP::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MaidDogCPP::clear_value() {
  value_ = 0u;
  clear_has_value();
}
inline ::google::protobuf::uint32 MaidDogCPP::value() const {
  // @@protoc_insertion_point(field_get:ProtoUser.MaidDogCPP.value)
  return value_;
}
inline void MaidDogCPP::set_value(::google::protobuf::uint32 value) {
  set_has_value();
  value_ = value;
  // @@protoc_insertion_point(field_set:ProtoUser.MaidDogCPP.value)
}

// -------------------------------------------------------------------

// FriendlyTreeBasicCPP

// required uint32 id = 1;
inline bool FriendlyTreeBasicCPP::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FriendlyTreeBasicCPP::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FriendlyTreeBasicCPP::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FriendlyTreeBasicCPP::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 FriendlyTreeBasicCPP::id() const {
  // @@protoc_insertion_point(field_get:ProtoUser.FriendlyTreeBasicCPP.id)
  return id_;
}
inline void FriendlyTreeBasicCPP::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:ProtoUser.FriendlyTreeBasicCPP.id)
}

// required uint32 othuid = 2;
inline bool FriendlyTreeBasicCPP::has_othuid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FriendlyTreeBasicCPP::set_has_othuid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FriendlyTreeBasicCPP::clear_has_othuid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FriendlyTreeBasicCPP::clear_othuid() {
  othuid_ = 0u;
  clear_has_othuid();
}
inline ::google::protobuf::uint32 FriendlyTreeBasicCPP::othuid() const {
  // @@protoc_insertion_point(field_get:ProtoUser.FriendlyTreeBasicCPP.othuid)
  return othuid_;
}
inline void FriendlyTreeBasicCPP::set_othuid(::google::protobuf::uint32 value) {
  set_has_othuid();
  othuid_ = value;
  // @@protoc_insertion_point(field_set:ProtoUser.FriendlyTreeBasicCPP.othuid)
}

// required bytes name = 3;
inline bool FriendlyTreeBasicCPP::has_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void FriendlyTreeBasicCPP::set_has_name() {
  _has_bits_[0] |= 0x00000004u;
}
inline void FriendlyTreeBasicCPP::clear_has_name() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void FriendlyTreeBasicCPP::clear_name() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& FriendlyTreeBasicCPP::name() const {
  // @@protoc_insertion_point(field_get:ProtoUser.FriendlyTreeBasicCPP.name)
  return *name_;
}
inline void FriendlyTreeBasicCPP::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set:ProtoUser.FriendlyTreeBasicCPP.name)
}
inline void FriendlyTreeBasicCPP::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set_char:ProtoUser.FriendlyTreeBasicCPP.name)
}
inline void FriendlyTreeBasicCPP::set_name(const void* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ProtoUser.FriendlyTreeBasicCPP.name)
}
inline ::std::string* FriendlyTreeBasicCPP::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:ProtoUser.FriendlyTreeBasicCPP.name)
  return name_;
}
inline ::std::string* FriendlyTreeBasicCPP::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void FriendlyTreeBasicCPP::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoUser.FriendlyTreeBasicCPP.name)
}

// required bytes head = 4;
inline bool FriendlyTreeBasicCPP::has_head() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void FriendlyTreeBasicCPP::set_has_head() {
  _has_bits_[0] |= 0x00000008u;
}
inline void FriendlyTreeBasicCPP::clear_has_head() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void FriendlyTreeBasicCPP::clear_head() {
  if (head_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    head_->clear();
  }
  clear_has_head();
}
inline const ::std::string& FriendlyTreeBasicCPP::head() const {
  // @@protoc_insertion_point(field_get:ProtoUser.FriendlyTreeBasicCPP.head)
  return *head_;
}
inline void FriendlyTreeBasicCPP::set_head(const ::std::string& value) {
  set_has_head();
  if (head_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    head_ = new ::std::string;
  }
  head_->assign(value);
  // @@protoc_insertion_point(field_set:ProtoUser.FriendlyTreeBasicCPP.head)
}
inline void FriendlyTreeBasicCPP::set_head(const char* value) {
  set_has_head();
  if (head_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    head_ = new ::std::string;
  }
  head_->assign(value);
  // @@protoc_insertion_point(field_set_char:ProtoUser.FriendlyTreeBasicCPP.head)
}
inline void FriendlyTreeBasicCPP::set_head(const void* value, size_t size) {
  set_has_head();
  if (head_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    head_ = new ::std::string;
  }
  head_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ProtoUser.FriendlyTreeBasicCPP.head)
}
inline ::std::string* FriendlyTreeBasicCPP::mutable_head() {
  set_has_head();
  if (head_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    head_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:ProtoUser.FriendlyTreeBasicCPP.head)
  return head_;
}
inline ::std::string* FriendlyTreeBasicCPP::release_head() {
  clear_has_head();
  if (head_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = head_;
    head_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void FriendlyTreeBasicCPP::set_allocated_head(::std::string* head) {
  if (head_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete head_;
  }
  if (head) {
    set_has_head();
    head_ = head;
  } else {
    clear_has_head();
    head_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoUser.FriendlyTreeBasicCPP.head)
}

// required uint32 ts = 5;
inline bool FriendlyTreeBasicCPP::has_ts() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void FriendlyTreeBasicCPP::set_has_ts() {
  _has_bits_[0] |= 0x00000010u;
}
inline void FriendlyTreeBasicCPP::clear_has_ts() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void FriendlyTreeBasicCPP::clear_ts() {
  ts_ = 0u;
  clear_has_ts();
}
inline ::google::protobuf::uint32 FriendlyTreeBasicCPP::ts() const {
  // @@protoc_insertion_point(field_get:ProtoUser.FriendlyTreeBasicCPP.ts)
  return ts_;
}
inline void FriendlyTreeBasicCPP::set_ts(::google::protobuf::uint32 value) {
  set_has_ts();
  ts_ = value;
  // @@protoc_insertion_point(field_set:ProtoUser.FriendlyTreeBasicCPP.ts)
}

// -------------------------------------------------------------------

// ShopSellCoinCPP

// required uint32 id = 1;
inline bool ShopSellCoinCPP::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ShopSellCoinCPP::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ShopSellCoinCPP::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ShopSellCoinCPP::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 ShopSellCoinCPP::id() const {
  // @@protoc_insertion_point(field_get:ProtoUser.ShopSellCoinCPP.id)
  return id_;
}
inline void ShopSellCoinCPP::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:ProtoUser.ShopSellCoinCPP.id)
}

// required uint32 value = 2;
inline bool ShopSellCoinCPP::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ShopSellCoinCPP::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ShopSellCoinCPP::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ShopSellCoinCPP::clear_value() {
  value_ = 0u;
  clear_has_value();
}
inline ::google::protobuf::uint32 ShopSellCoinCPP::value() const {
  // @@protoc_insertion_point(field_get:ProtoUser.ShopSellCoinCPP.value)
  return value_;
}
inline void ShopSellCoinCPP::set_value(::google::protobuf::uint32 value) {
  set_has_value();
  value_ = value;
  // @@protoc_insertion_point(field_set:ProtoUser.ShopSellCoinCPP.value)
}

// -------------------------------------------------------------------

// FriendWorkerCPP

// required uint32 workerUid = 1;
inline bool FriendWorkerCPP::has_workeruid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FriendWorkerCPP::set_has_workeruid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FriendWorkerCPP::clear_has_workeruid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FriendWorkerCPP::clear_workeruid() {
  workeruid_ = 0u;
  clear_has_workeruid();
}
inline ::google::protobuf::uint32 FriendWorkerCPP::workeruid() const {
  // @@protoc_insertion_point(field_get:ProtoUser.FriendWorkerCPP.workerUid)
  return workeruid_;
}
inline void FriendWorkerCPP::set_workeruid(::google::protobuf::uint32 value) {
  set_has_workeruid();
  workeruid_ = value;
  // @@protoc_insertion_point(field_set:ProtoUser.FriendWorkerCPP.workerUid)
}

// required uint32 workerEndTs = 2;
inline bool FriendWorkerCPP::has_workerendts() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FriendWorkerCPP::set_has_workerendts() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FriendWorkerCPP::clear_has_workerendts() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FriendWorkerCPP::clear_workerendts() {
  workerendts_ = 0u;
  clear_has_workerendts();
}
inline ::google::protobuf::uint32 FriendWorkerCPP::workerendts() const {
  // @@protoc_insertion_point(field_get:ProtoUser.FriendWorkerCPP.workerEndTs)
  return workerendts_;
}
inline void FriendWorkerCPP::set_workerendts(::google::protobuf::uint32 value) {
  set_has_workerendts();
  workerendts_ = value;
  // @@protoc_insertion_point(field_set:ProtoUser.FriendWorkerCPP.workerEndTs)
}

// required uint32 workerSlotPos = 3;
inline bool FriendWorkerCPP::has_workerslotpos() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void FriendWorkerCPP::set_has_workerslotpos() {
  _has_bits_[0] |= 0x00000004u;
}
inline void FriendWorkerCPP::clear_has_workerslotpos() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void FriendWorkerCPP::clear_workerslotpos() {
  workerslotpos_ = 0u;
  clear_has_workerslotpos();
}
inline ::google::protobuf::uint32 FriendWorkerCPP::workerslotpos() const {
  // @@protoc_insertion_point(field_get:ProtoUser.FriendWorkerCPP.workerSlotPos)
  return workerslotpos_;
}
inline void FriendWorkerCPP::set_workerslotpos(::google::protobuf::uint32 value) {
  set_has_workerslotpos();
  workerslotpos_ = value;
  // @@protoc_insertion_point(field_set:ProtoUser.FriendWorkerCPP.workerSlotPos)
}

// optional uint32 workerInvitedTs = 4;
inline bool FriendWorkerCPP::has_workerinvitedts() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void FriendWorkerCPP::set_has_workerinvitedts() {
  _has_bits_[0] |= 0x00000008u;
}
inline void FriendWorkerCPP::clear_has_workerinvitedts() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void FriendWorkerCPP::clear_workerinvitedts() {
  workerinvitedts_ = 0u;
  clear_has_workerinvitedts();
}
inline ::google::protobuf::uint32 FriendWorkerCPP::workerinvitedts() const {
  // @@protoc_insertion_point(field_get:ProtoUser.FriendWorkerCPP.workerInvitedTs)
  return workerinvitedts_;
}
inline void FriendWorkerCPP::set_workerinvitedts(::google::protobuf::uint32 value) {
  set_has_workerinvitedts();
  workerinvitedts_ = value;
  // @@protoc_insertion_point(field_set:ProtoUser.FriendWorkerCPP.workerInvitedTs)
}

// -------------------------------------------------------------------

// UnlockPetCPP

// required uint32 petid = 1;
inline bool UnlockPetCPP::has_petid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UnlockPetCPP::set_has_petid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UnlockPetCPP::clear_has_petid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UnlockPetCPP::clear_petid() {
  petid_ = 0u;
  clear_has_petid();
}
inline ::google::protobuf::uint32 UnlockPetCPP::petid() const {
  // @@protoc_insertion_point(field_get:ProtoUser.UnlockPetCPP.petid)
  return petid_;
}
inline void UnlockPetCPP::set_petid(::google::protobuf::uint32 value) {
  set_has_petid();
  petid_ = value;
  // @@protoc_insertion_point(field_set:ProtoUser.UnlockPetCPP.petid)
}

// required uint32 teaseEndts = 2;
inline bool UnlockPetCPP::has_teaseendts() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UnlockPetCPP::set_has_teaseendts() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UnlockPetCPP::clear_has_teaseendts() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UnlockPetCPP::clear_teaseendts() {
  teaseendts_ = 0u;
  clear_has_teaseendts();
}
inline ::google::protobuf::uint32 UnlockPetCPP::teaseendts() const {
  // @@protoc_insertion_point(field_get:ProtoUser.UnlockPetCPP.teaseEndts)
  return teaseendts_;
}
inline void UnlockPetCPP::set_teaseendts(::google::protobuf::uint32 value) {
  set_has_teaseendts();
  teaseendts_ = value;
  // @@protoc_insertion_point(field_set:ProtoUser.UnlockPetCPP.teaseEndts)
}

// required uint32 normalEndts = 3;
inline bool UnlockPetCPP::has_normalendts() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void UnlockPetCPP::set_has_normalendts() {
  _has_bits_[0] |= 0x00000004u;
}
inline void UnlockPetCPP::clear_has_normalendts() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void UnlockPetCPP::clear_normalendts() {
  normalendts_ = 0u;
  clear_has_normalendts();
}
inline ::google::protobuf::uint32 UnlockPetCPP::normalendts() const {
  // @@protoc_insertion_point(field_get:ProtoUser.UnlockPetCPP.normalEndts)
  return normalendts_;
}
inline void UnlockPetCPP::set_normalendts(::google::protobuf::uint32 value) {
  set_has_normalendts();
  normalendts_ = value;
  // @@protoc_insertion_point(field_set:ProtoUser.UnlockPetCPP.normalEndts)
}

// optional uint32 teaseFlag = 4;
inline bool UnlockPetCPP::has_teaseflag() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void UnlockPetCPP::set_has_teaseflag() {
  _has_bits_[0] |= 0x00000008u;
}
inline void UnlockPetCPP::clear_has_teaseflag() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void UnlockPetCPP::clear_teaseflag() {
  teaseflag_ = 0u;
  clear_has_teaseflag();
}
inline ::google::protobuf::uint32 UnlockPetCPP::teaseflag() const {
  // @@protoc_insertion_point(field_get:ProtoUser.UnlockPetCPP.teaseFlag)
  return teaseflag_;
}
inline void UnlockPetCPP::set_teaseflag(::google::protobuf::uint32 value) {
  set_has_teaseflag();
  teaseflag_ = value;
  // @@protoc_insertion_point(field_set:ProtoUser.UnlockPetCPP.teaseFlag)
}

// optional bytes name = 5;
inline bool UnlockPetCPP::has_name() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void UnlockPetCPP::set_has_name() {
  _has_bits_[0] |= 0x00000010u;
}
inline void UnlockPetCPP::clear_has_name() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void UnlockPetCPP::clear_name() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& UnlockPetCPP::name() const {
  // @@protoc_insertion_point(field_get:ProtoUser.UnlockPetCPP.name)
  return *name_;
}
inline void UnlockPetCPP::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set:ProtoUser.UnlockPetCPP.name)
}
inline void UnlockPetCPP::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set_char:ProtoUser.UnlockPetCPP.name)
}
inline void UnlockPetCPP::set_name(const void* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ProtoUser.UnlockPetCPP.name)
}
inline ::std::string* UnlockPetCPP::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:ProtoUser.UnlockPetCPP.name)
  return name_;
}
inline ::std::string* UnlockPetCPP::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void UnlockPetCPP::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoUser.UnlockPetCPP.name)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace ProtoUser

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_ProtoUser_2eproto__INCLUDED
