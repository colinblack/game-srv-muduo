// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ProtoArchive.proto

#ifndef PROTOBUF_ProtoArchive_2eproto__INCLUDED
#define PROTOBUF_ProtoArchive_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "ProtoUser.pb.h"
// @@protoc_insertion_point(includes)

namespace ProtoArchive {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_ProtoArchive_2eproto();
void protobuf_AssignDesc_ProtoArchive_2eproto();
void protobuf_ShutdownFile_ProtoArchive_2eproto();

class UserData;
class ImportReq;
class ImportResp;
class ExportReq;
class ExportResp;

// ===================================================================

class UserData : public ::google::protobuf::Message {
 public:
  UserData();
  virtual ~UserData();

  UserData(const UserData& from);

  inline UserData& operator=(const UserData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UserData& default_instance();

  void Swap(UserData* other);

  // implements Message ----------------------------------------------

  UserData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UserData& from);
  void MergeFrom(const UserData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .ProtoUser.Base base = 1;
  inline bool has_base() const;
  inline void clear_base();
  static const int kBaseFieldNumber = 1;
  inline const ::ProtoUser::Base& base() const;
  inline ::ProtoUser::Base* mutable_base();
  inline ::ProtoUser::Base* release_base();
  inline void set_allocated_base(::ProtoUser::Base* base);

  // repeated .ProtoUser.ChargeItem charges = 2;
  inline int charges_size() const;
  inline void clear_charges();
  static const int kChargesFieldNumber = 2;
  inline const ::ProtoUser::ChargeItem& charges(int index) const;
  inline ::ProtoUser::ChargeItem* mutable_charges(int index);
  inline ::ProtoUser::ChargeItem* add_charges();
  inline const ::google::protobuf::RepeatedPtrField< ::ProtoUser::ChargeItem >&
      charges() const;
  inline ::google::protobuf::RepeatedPtrField< ::ProtoUser::ChargeItem >*
      mutable_charges();

  // repeated .ProtoUser.BuildingsCPP builds = 3;
  inline int builds_size() const;
  inline void clear_builds();
  static const int kBuildsFieldNumber = 3;
  inline const ::ProtoUser::BuildingsCPP& builds(int index) const;
  inline ::ProtoUser::BuildingsCPP* mutable_builds(int index);
  inline ::ProtoUser::BuildingsCPP* add_builds();
  inline const ::google::protobuf::RepeatedPtrField< ::ProtoUser::BuildingsCPP >&
      builds() const;
  inline ::google::protobuf::RepeatedPtrField< ::ProtoUser::BuildingsCPP >*
      mutable_builds();

  // repeated .ProtoUser.EquipmentStarCPP equipstar = 4;
  inline int equipstar_size() const;
  inline void clear_equipstar();
  static const int kEquipstarFieldNumber = 4;
  inline const ::ProtoUser::EquipmentStarCPP& equipstar(int index) const;
  inline ::ProtoUser::EquipmentStarCPP* mutable_equipstar(int index);
  inline ::ProtoUser::EquipmentStarCPP* add_equipstar();
  inline const ::google::protobuf::RepeatedPtrField< ::ProtoUser::EquipmentStarCPP >&
      equipstar() const;
  inline ::google::protobuf::RepeatedPtrField< ::ProtoUser::EquipmentStarCPP >*
      mutable_equipstar();

  // repeated .ProtoUser.CropLandCPP cropland = 5;
  inline int cropland_size() const;
  inline void clear_cropland();
  static const int kCroplandFieldNumber = 5;
  inline const ::ProtoUser::CropLandCPP& cropland(int index) const;
  inline ::ProtoUser::CropLandCPP* mutable_cropland(int index);
  inline ::ProtoUser::CropLandCPP* add_cropland();
  inline const ::google::protobuf::RepeatedPtrField< ::ProtoUser::CropLandCPP >&
      cropland() const;
  inline ::google::protobuf::RepeatedPtrField< ::ProtoUser::CropLandCPP >*
      mutable_cropland();

  // repeated .ProtoUser.ProduceEquipCPP equipments = 6;
  inline int equipments_size() const;
  inline void clear_equipments();
  static const int kEquipmentsFieldNumber = 6;
  inline const ::ProtoUser::ProduceEquipCPP& equipments(int index) const;
  inline ::ProtoUser::ProduceEquipCPP* mutable_equipments(int index);
  inline ::ProtoUser::ProduceEquipCPP* add_equipments();
  inline const ::google::protobuf::RepeatedPtrField< ::ProtoUser::ProduceEquipCPP >&
      equipments() const;
  inline ::google::protobuf::RepeatedPtrField< ::ProtoUser::ProduceEquipCPP >*
      mutable_equipments();

  // repeated .ProtoUser.FruitCPP fruits = 7;
  inline int fruits_size() const;
  inline void clear_fruits();
  static const int kFruitsFieldNumber = 7;
  inline const ::ProtoUser::FruitCPP& fruits(int index) const;
  inline ::ProtoUser::FruitCPP* mutable_fruits(int index);
  inline ::ProtoUser::FruitCPP* add_fruits();
  inline const ::google::protobuf::RepeatedPtrField< ::ProtoUser::FruitCPP >&
      fruits() const;
  inline ::google::protobuf::RepeatedPtrField< ::ProtoUser::FruitCPP >*
      mutable_fruits();

  // repeated .ProtoUser.PropsItemCPP item = 8;
  inline int item_size() const;
  inline void clear_item();
  static const int kItemFieldNumber = 8;
  inline const ::ProtoUser::PropsItemCPP& item(int index) const;
  inline ::ProtoUser::PropsItemCPP* mutable_item(int index);
  inline ::ProtoUser::PropsItemCPP* add_item();
  inline const ::google::protobuf::RepeatedPtrField< ::ProtoUser::PropsItemCPP >&
      item() const;
  inline ::google::protobuf::RepeatedPtrField< ::ProtoUser::PropsItemCPP >*
      mutable_item();

  // repeated .ProtoUser.AnimalCPP animals = 9;
  inline int animals_size() const;
  inline void clear_animals();
  static const int kAnimalsFieldNumber = 9;
  inline const ::ProtoUser::AnimalCPP& animals(int index) const;
  inline ::ProtoUser::AnimalCPP* mutable_animals(int index);
  inline ::ProtoUser::AnimalCPP* add_animals();
  inline const ::google::protobuf::RepeatedPtrField< ::ProtoUser::AnimalCPP >&
      animals() const;
  inline ::google::protobuf::RepeatedPtrField< ::ProtoUser::AnimalCPP >*
      mutable_animals();

  // repeated .ProtoUser.OrderCPP orders = 10;
  inline int orders_size() const;
  inline void clear_orders();
  static const int kOrdersFieldNumber = 10;
  inline const ::ProtoUser::OrderCPP& orders(int index) const;
  inline ::ProtoUser::OrderCPP* mutable_orders(int index);
  inline ::ProtoUser::OrderCPP* add_orders();
  inline const ::google::protobuf::RepeatedPtrField< ::ProtoUser::OrderCPP >&
      orders() const;
  inline ::google::protobuf::RepeatedPtrField< ::ProtoUser::OrderCPP >*
      mutable_orders();

  // optional .ProtoUser.TruckCPP truck = 11;
  inline bool has_truck() const;
  inline void clear_truck();
  static const int kTruckFieldNumber = 11;
  inline const ::ProtoUser::TruckCPP& truck() const;
  inline ::ProtoUser::TruckCPP* mutable_truck();
  inline ::ProtoUser::TruckCPP* release_truck();
  inline void set_allocated_truck(::ProtoUser::TruckCPP* truck);

  // optional .ProtoUser.ShippingCPP shipping = 12;
  inline bool has_shipping() const;
  inline void clear_shipping();
  static const int kShippingFieldNumber = 12;
  inline const ::ProtoUser::ShippingCPP& shipping() const;
  inline ::ProtoUser::ShippingCPP* mutable_shipping();
  inline ::ProtoUser::ShippingCPP* release_shipping();
  inline void set_allocated_shipping(::ProtoUser::ShippingCPP* shipping);

  // repeated .ProtoUser.ShippingBoxCPP shipboxes = 13;
  inline int shipboxes_size() const;
  inline void clear_shipboxes();
  static const int kShipboxesFieldNumber = 13;
  inline const ::ProtoUser::ShippingBoxCPP& shipboxes(int index) const;
  inline ::ProtoUser::ShippingBoxCPP* mutable_shipboxes(int index);
  inline ::ProtoUser::ShippingBoxCPP* add_shipboxes();
  inline const ::google::protobuf::RepeatedPtrField< ::ProtoUser::ShippingBoxCPP >&
      shipboxes() const;
  inline ::google::protobuf::RepeatedPtrField< ::ProtoUser::ShippingBoxCPP >*
      mutable_shipboxes();

  // repeated .ProtoUser.ShopCPP shop = 14;
  inline int shop_size() const;
  inline void clear_shop();
  static const int kShopFieldNumber = 14;
  inline const ::ProtoUser::ShopCPP& shop(int index) const;
  inline ::ProtoUser::ShopCPP* mutable_shop(int index);
  inline ::ProtoUser::ShopCPP* add_shop();
  inline const ::google::protobuf::RepeatedPtrField< ::ProtoUser::ShopCPP >&
      shop() const;
  inline ::google::protobuf::RepeatedPtrField< ::ProtoUser::ShopCPP >*
      mutable_shop();

  // repeated .ProtoUser.TaskCPP task = 15;
  inline int task_size() const;
  inline void clear_task();
  static const int kTaskFieldNumber = 15;
  inline const ::ProtoUser::TaskCPP& task(int index) const;
  inline ::ProtoUser::TaskCPP* mutable_task(int index);
  inline ::ProtoUser::TaskCPP* add_task();
  inline const ::google::protobuf::RepeatedPtrField< ::ProtoUser::TaskCPP >&
      task() const;
  inline ::google::protobuf::RepeatedPtrField< ::ProtoUser::TaskCPP >*
      mutable_task();

  // repeated .ProtoUser.MissionCPP mission = 16;
  inline int mission_size() const;
  inline void clear_mission();
  static const int kMissionFieldNumber = 16;
  inline const ::ProtoUser::MissionCPP& mission(int index) const;
  inline ::ProtoUser::MissionCPP* mutable_mission(int index);
  inline ::ProtoUser::MissionCPP* add_mission();
  inline const ::google::protobuf::RepeatedPtrField< ::ProtoUser::MissionCPP >&
      mission() const;
  inline ::google::protobuf::RepeatedPtrField< ::ProtoUser::MissionCPP >*
      mutable_mission();

  // repeated .ProtoUser.ActivityCPP activity = 17;
  inline int activity_size() const;
  inline void clear_activity();
  static const int kActivityFieldNumber = 17;
  inline const ::ProtoUser::ActivityCPP& activity(int index) const;
  inline ::ProtoUser::ActivityCPP* mutable_activity(int index);
  inline ::ProtoUser::ActivityCPP* add_activity();
  inline const ::google::protobuf::RepeatedPtrField< ::ProtoUser::ActivityCPP >&
      activity() const;
  inline ::google::protobuf::RepeatedPtrField< ::ProtoUser::ActivityCPP >*
      mutable_activity();

  // repeated .ProtoUser.MaidDogCPP maildog = 18;
  inline int maildog_size() const;
  inline void clear_maildog();
  static const int kMaildogFieldNumber = 18;
  inline const ::ProtoUser::MaidDogCPP& maildog(int index) const;
  inline ::ProtoUser::MaidDogCPP* mutable_maildog(int index);
  inline ::ProtoUser::MaidDogCPP* add_maildog();
  inline const ::google::protobuf::RepeatedPtrField< ::ProtoUser::MaidDogCPP >&
      maildog() const;
  inline ::google::protobuf::RepeatedPtrField< ::ProtoUser::MaidDogCPP >*
      mutable_maildog();

  // repeated .ProtoUser.FriendlyTreeBasicCPP friendlytree = 19;
  inline int friendlytree_size() const;
  inline void clear_friendlytree();
  static const int kFriendlytreeFieldNumber = 19;
  inline const ::ProtoUser::FriendlyTreeBasicCPP& friendlytree(int index) const;
  inline ::ProtoUser::FriendlyTreeBasicCPP* mutable_friendlytree(int index);
  inline ::ProtoUser::FriendlyTreeBasicCPP* add_friendlytree();
  inline const ::google::protobuf::RepeatedPtrField< ::ProtoUser::FriendlyTreeBasicCPP >&
      friendlytree() const;
  inline ::google::protobuf::RepeatedPtrField< ::ProtoUser::FriendlyTreeBasicCPP >*
      mutable_friendlytree();

  // repeated .ProtoUser.ShopSellCoinCPP shopsellcoin = 20;
  inline int shopsellcoin_size() const;
  inline void clear_shopsellcoin();
  static const int kShopsellcoinFieldNumber = 20;
  inline const ::ProtoUser::ShopSellCoinCPP& shopsellcoin(int index) const;
  inline ::ProtoUser::ShopSellCoinCPP* mutable_shopsellcoin(int index);
  inline ::ProtoUser::ShopSellCoinCPP* add_shopsellcoin();
  inline const ::google::protobuf::RepeatedPtrField< ::ProtoUser::ShopSellCoinCPP >&
      shopsellcoin() const;
  inline ::google::protobuf::RepeatedPtrField< ::ProtoUser::ShopSellCoinCPP >*
      mutable_shopsellcoin();

  // repeated .ProtoUser.FriendWorkerCPP friendworker = 21;
  inline int friendworker_size() const;
  inline void clear_friendworker();
  static const int kFriendworkerFieldNumber = 21;
  inline const ::ProtoUser::FriendWorkerCPP& friendworker(int index) const;
  inline ::ProtoUser::FriendWorkerCPP* mutable_friendworker(int index);
  inline ::ProtoUser::FriendWorkerCPP* add_friendworker();
  inline const ::google::protobuf::RepeatedPtrField< ::ProtoUser::FriendWorkerCPP >&
      friendworker() const;
  inline ::google::protobuf::RepeatedPtrField< ::ProtoUser::FriendWorkerCPP >*
      mutable_friendworker();

  // repeated .ProtoUser.UnlockPetCPP pet = 22;
  inline int pet_size() const;
  inline void clear_pet();
  static const int kPetFieldNumber = 22;
  inline const ::ProtoUser::UnlockPetCPP& pet(int index) const;
  inline ::ProtoUser::UnlockPetCPP* mutable_pet(int index);
  inline ::ProtoUser::UnlockPetCPP* add_pet();
  inline const ::google::protobuf::RepeatedPtrField< ::ProtoUser::UnlockPetCPP >&
      pet() const;
  inline ::google::protobuf::RepeatedPtrField< ::ProtoUser::UnlockPetCPP >*
      mutable_pet();

  // @@protoc_insertion_point(class_scope:ProtoArchive.UserData)
 private:
  inline void set_has_base();
  inline void clear_has_base();
  inline void set_has_truck();
  inline void clear_has_truck();
  inline void set_has_shipping();
  inline void clear_has_shipping();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::ProtoUser::Base* base_;
  ::google::protobuf::RepeatedPtrField< ::ProtoUser::ChargeItem > charges_;
  ::google::protobuf::RepeatedPtrField< ::ProtoUser::BuildingsCPP > builds_;
  ::google::protobuf::RepeatedPtrField< ::ProtoUser::EquipmentStarCPP > equipstar_;
  ::google::protobuf::RepeatedPtrField< ::ProtoUser::CropLandCPP > cropland_;
  ::google::protobuf::RepeatedPtrField< ::ProtoUser::ProduceEquipCPP > equipments_;
  ::google::protobuf::RepeatedPtrField< ::ProtoUser::FruitCPP > fruits_;
  ::google::protobuf::RepeatedPtrField< ::ProtoUser::PropsItemCPP > item_;
  ::google::protobuf::RepeatedPtrField< ::ProtoUser::AnimalCPP > animals_;
  ::google::protobuf::RepeatedPtrField< ::ProtoUser::OrderCPP > orders_;
  ::ProtoUser::TruckCPP* truck_;
  ::ProtoUser::ShippingCPP* shipping_;
  ::google::protobuf::RepeatedPtrField< ::ProtoUser::ShippingBoxCPP > shipboxes_;
  ::google::protobuf::RepeatedPtrField< ::ProtoUser::ShopCPP > shop_;
  ::google::protobuf::RepeatedPtrField< ::ProtoUser::TaskCPP > task_;
  ::google::protobuf::RepeatedPtrField< ::ProtoUser::MissionCPP > mission_;
  ::google::protobuf::RepeatedPtrField< ::ProtoUser::ActivityCPP > activity_;
  ::google::protobuf::RepeatedPtrField< ::ProtoUser::MaidDogCPP > maildog_;
  ::google::protobuf::RepeatedPtrField< ::ProtoUser::FriendlyTreeBasicCPP > friendlytree_;
  ::google::protobuf::RepeatedPtrField< ::ProtoUser::ShopSellCoinCPP > shopsellcoin_;
  ::google::protobuf::RepeatedPtrField< ::ProtoUser::FriendWorkerCPP > friendworker_;
  ::google::protobuf::RepeatedPtrField< ::ProtoUser::UnlockPetCPP > pet_;
  friend void  protobuf_AddDesc_ProtoArchive_2eproto();
  friend void protobuf_AssignDesc_ProtoArchive_2eproto();
  friend void protobuf_ShutdownFile_ProtoArchive_2eproto();

  void InitAsDefaultInstance();
  static UserData* default_instance_;
};
// -------------------------------------------------------------------

class ImportReq : public ::google::protobuf::Message {
 public:
  ImportReq();
  virtual ~ImportReq();

  ImportReq(const ImportReq& from);

  inline ImportReq& operator=(const ImportReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ImportReq& default_instance();

  void Swap(ImportReq* other);

  // implements Message ----------------------------------------------

  ImportReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ImportReq& from);
  void MergeFrom(const ImportReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 uid = 1;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 1;
  inline ::google::protobuf::uint32 uid() const;
  inline void set_uid(::google::protobuf::uint32 value);

  // required .ProtoArchive.UserData data = 2;
  inline bool has_data() const;
  inline void clear_data();
  static const int kDataFieldNumber = 2;
  inline const ::ProtoArchive::UserData& data() const;
  inline ::ProtoArchive::UserData* mutable_data();
  inline ::ProtoArchive::UserData* release_data();
  inline void set_allocated_data(::ProtoArchive::UserData* data);

  // @@protoc_insertion_point(class_scope:ProtoArchive.ImportReq)
 private:
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_data();
  inline void clear_has_data();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::ProtoArchive::UserData* data_;
  ::google::protobuf::uint32 uid_;
  friend void  protobuf_AddDesc_ProtoArchive_2eproto();
  friend void protobuf_AssignDesc_ProtoArchive_2eproto();
  friend void protobuf_ShutdownFile_ProtoArchive_2eproto();

  void InitAsDefaultInstance();
  static ImportReq* default_instance_;
};
// -------------------------------------------------------------------

class ImportResp : public ::google::protobuf::Message {
 public:
  ImportResp();
  virtual ~ImportResp();

  ImportResp(const ImportResp& from);

  inline ImportResp& operator=(const ImportResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ImportResp& default_instance();

  void Swap(ImportResp* other);

  // implements Message ----------------------------------------------

  ImportResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ImportResp& from);
  void MergeFrom(const ImportResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes err_msg = 1;
  inline bool has_err_msg() const;
  inline void clear_err_msg();
  static const int kErrMsgFieldNumber = 1;
  inline const ::std::string& err_msg() const;
  inline void set_err_msg(const ::std::string& value);
  inline void set_err_msg(const char* value);
  inline void set_err_msg(const void* value, size_t size);
  inline ::std::string* mutable_err_msg();
  inline ::std::string* release_err_msg();
  inline void set_allocated_err_msg(::std::string* err_msg);

  // @@protoc_insertion_point(class_scope:ProtoArchive.ImportResp)
 private:
  inline void set_has_err_msg();
  inline void clear_has_err_msg();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* err_msg_;
  friend void  protobuf_AddDesc_ProtoArchive_2eproto();
  friend void protobuf_AssignDesc_ProtoArchive_2eproto();
  friend void protobuf_ShutdownFile_ProtoArchive_2eproto();

  void InitAsDefaultInstance();
  static ImportResp* default_instance_;
};
// -------------------------------------------------------------------

class ExportReq : public ::google::protobuf::Message {
 public:
  ExportReq();
  virtual ~ExportReq();

  ExportReq(const ExportReq& from);

  inline ExportReq& operator=(const ExportReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ExportReq& default_instance();

  void Swap(ExportReq* other);

  // implements Message ----------------------------------------------

  ExportReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ExportReq& from);
  void MergeFrom(const ExportReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 uid = 1;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 1;
  inline ::google::protobuf::uint32 uid() const;
  inline void set_uid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoArchive.ExportReq)
 private:
  inline void set_has_uid();
  inline void clear_has_uid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 uid_;
  friend void  protobuf_AddDesc_ProtoArchive_2eproto();
  friend void protobuf_AssignDesc_ProtoArchive_2eproto();
  friend void protobuf_ShutdownFile_ProtoArchive_2eproto();

  void InitAsDefaultInstance();
  static ExportReq* default_instance_;
};
// -------------------------------------------------------------------

class ExportResp : public ::google::protobuf::Message {
 public:
  ExportResp();
  virtual ~ExportResp();

  ExportResp(const ExportResp& from);

  inline ExportResp& operator=(const ExportResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ExportResp& default_instance();

  void Swap(ExportResp* other);

  // implements Message ----------------------------------------------

  ExportResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ExportResp& from);
  void MergeFrom(const ExportResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .ProtoArchive.UserData data = 1;
  inline bool has_data() const;
  inline void clear_data();
  static const int kDataFieldNumber = 1;
  inline const ::ProtoArchive::UserData& data() const;
  inline ::ProtoArchive::UserData* mutable_data();
  inline ::ProtoArchive::UserData* release_data();
  inline void set_allocated_data(::ProtoArchive::UserData* data);

  // optional string err_msg = 2;
  inline bool has_err_msg() const;
  inline void clear_err_msg();
  static const int kErrMsgFieldNumber = 2;
  inline const ::std::string& err_msg() const;
  inline void set_err_msg(const ::std::string& value);
  inline void set_err_msg(const char* value);
  inline void set_err_msg(const char* value, size_t size);
  inline ::std::string* mutable_err_msg();
  inline ::std::string* release_err_msg();
  inline void set_allocated_err_msg(::std::string* err_msg);

  // @@protoc_insertion_point(class_scope:ProtoArchive.ExportResp)
 private:
  inline void set_has_data();
  inline void clear_has_data();
  inline void set_has_err_msg();
  inline void clear_has_err_msg();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::ProtoArchive::UserData* data_;
  ::std::string* err_msg_;
  friend void  protobuf_AddDesc_ProtoArchive_2eproto();
  friend void protobuf_AssignDesc_ProtoArchive_2eproto();
  friend void protobuf_ShutdownFile_ProtoArchive_2eproto();

  void InitAsDefaultInstance();
  static ExportResp* default_instance_;
};
// ===================================================================


// ===================================================================

// UserData

// optional .ProtoUser.Base base = 1;
inline bool UserData::has_base() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UserData::set_has_base() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UserData::clear_has_base() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UserData::clear_base() {
  if (base_ != NULL) base_->::ProtoUser::Base::Clear();
  clear_has_base();
}
inline const ::ProtoUser::Base& UserData::base() const {
  // @@protoc_insertion_point(field_get:ProtoArchive.UserData.base)
  return base_ != NULL ? *base_ : *default_instance_->base_;
}
inline ::ProtoUser::Base* UserData::mutable_base() {
  set_has_base();
  if (base_ == NULL) base_ = new ::ProtoUser::Base;
  // @@protoc_insertion_point(field_mutable:ProtoArchive.UserData.base)
  return base_;
}
inline ::ProtoUser::Base* UserData::release_base() {
  clear_has_base();
  ::ProtoUser::Base* temp = base_;
  base_ = NULL;
  return temp;
}
inline void UserData::set_allocated_base(::ProtoUser::Base* base) {
  delete base_;
  base_ = base;
  if (base) {
    set_has_base();
  } else {
    clear_has_base();
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoArchive.UserData.base)
}

// repeated .ProtoUser.ChargeItem charges = 2;
inline int UserData::charges_size() const {
  return charges_.size();
}
inline void UserData::clear_charges() {
  charges_.Clear();
}
inline const ::ProtoUser::ChargeItem& UserData::charges(int index) const {
  // @@protoc_insertion_point(field_get:ProtoArchive.UserData.charges)
  return charges_.Get(index);
}
inline ::ProtoUser::ChargeItem* UserData::mutable_charges(int index) {
  // @@protoc_insertion_point(field_mutable:ProtoArchive.UserData.charges)
  return charges_.Mutable(index);
}
inline ::ProtoUser::ChargeItem* UserData::add_charges() {
  // @@protoc_insertion_point(field_add:ProtoArchive.UserData.charges)
  return charges_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ProtoUser::ChargeItem >&
UserData::charges() const {
  // @@protoc_insertion_point(field_list:ProtoArchive.UserData.charges)
  return charges_;
}
inline ::google::protobuf::RepeatedPtrField< ::ProtoUser::ChargeItem >*
UserData::mutable_charges() {
  // @@protoc_insertion_point(field_mutable_list:ProtoArchive.UserData.charges)
  return &charges_;
}

// repeated .ProtoUser.BuildingsCPP builds = 3;
inline int UserData::builds_size() const {
  return builds_.size();
}
inline void UserData::clear_builds() {
  builds_.Clear();
}
inline const ::ProtoUser::BuildingsCPP& UserData::builds(int index) const {
  // @@protoc_insertion_point(field_get:ProtoArchive.UserData.builds)
  return builds_.Get(index);
}
inline ::ProtoUser::BuildingsCPP* UserData::mutable_builds(int index) {
  // @@protoc_insertion_point(field_mutable:ProtoArchive.UserData.builds)
  return builds_.Mutable(index);
}
inline ::ProtoUser::BuildingsCPP* UserData::add_builds() {
  // @@protoc_insertion_point(field_add:ProtoArchive.UserData.builds)
  return builds_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ProtoUser::BuildingsCPP >&
UserData::builds() const {
  // @@protoc_insertion_point(field_list:ProtoArchive.UserData.builds)
  return builds_;
}
inline ::google::protobuf::RepeatedPtrField< ::ProtoUser::BuildingsCPP >*
UserData::mutable_builds() {
  // @@protoc_insertion_point(field_mutable_list:ProtoArchive.UserData.builds)
  return &builds_;
}

// repeated .ProtoUser.EquipmentStarCPP equipstar = 4;
inline int UserData::equipstar_size() const {
  return equipstar_.size();
}
inline void UserData::clear_equipstar() {
  equipstar_.Clear();
}
inline const ::ProtoUser::EquipmentStarCPP& UserData::equipstar(int index) const {
  // @@protoc_insertion_point(field_get:ProtoArchive.UserData.equipstar)
  return equipstar_.Get(index);
}
inline ::ProtoUser::EquipmentStarCPP* UserData::mutable_equipstar(int index) {
  // @@protoc_insertion_point(field_mutable:ProtoArchive.UserData.equipstar)
  return equipstar_.Mutable(index);
}
inline ::ProtoUser::EquipmentStarCPP* UserData::add_equipstar() {
  // @@protoc_insertion_point(field_add:ProtoArchive.UserData.equipstar)
  return equipstar_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ProtoUser::EquipmentStarCPP >&
UserData::equipstar() const {
  // @@protoc_insertion_point(field_list:ProtoArchive.UserData.equipstar)
  return equipstar_;
}
inline ::google::protobuf::RepeatedPtrField< ::ProtoUser::EquipmentStarCPP >*
UserData::mutable_equipstar() {
  // @@protoc_insertion_point(field_mutable_list:ProtoArchive.UserData.equipstar)
  return &equipstar_;
}

// repeated .ProtoUser.CropLandCPP cropland = 5;
inline int UserData::cropland_size() const {
  return cropland_.size();
}
inline void UserData::clear_cropland() {
  cropland_.Clear();
}
inline const ::ProtoUser::CropLandCPP& UserData::cropland(int index) const {
  // @@protoc_insertion_point(field_get:ProtoArchive.UserData.cropland)
  return cropland_.Get(index);
}
inline ::ProtoUser::CropLandCPP* UserData::mutable_cropland(int index) {
  // @@protoc_insertion_point(field_mutable:ProtoArchive.UserData.cropland)
  return cropland_.Mutable(index);
}
inline ::ProtoUser::CropLandCPP* UserData::add_cropland() {
  // @@protoc_insertion_point(field_add:ProtoArchive.UserData.cropland)
  return cropland_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ProtoUser::CropLandCPP >&
UserData::cropland() const {
  // @@protoc_insertion_point(field_list:ProtoArchive.UserData.cropland)
  return cropland_;
}
inline ::google::protobuf::RepeatedPtrField< ::ProtoUser::CropLandCPP >*
UserData::mutable_cropland() {
  // @@protoc_insertion_point(field_mutable_list:ProtoArchive.UserData.cropland)
  return &cropland_;
}

// repeated .ProtoUser.ProduceEquipCPP equipments = 6;
inline int UserData::equipments_size() const {
  return equipments_.size();
}
inline void UserData::clear_equipments() {
  equipments_.Clear();
}
inline const ::ProtoUser::ProduceEquipCPP& UserData::equipments(int index) const {
  // @@protoc_insertion_point(field_get:ProtoArchive.UserData.equipments)
  return equipments_.Get(index);
}
inline ::ProtoUser::ProduceEquipCPP* UserData::mutable_equipments(int index) {
  // @@protoc_insertion_point(field_mutable:ProtoArchive.UserData.equipments)
  return equipments_.Mutable(index);
}
inline ::ProtoUser::ProduceEquipCPP* UserData::add_equipments() {
  // @@protoc_insertion_point(field_add:ProtoArchive.UserData.equipments)
  return equipments_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ProtoUser::ProduceEquipCPP >&
UserData::equipments() const {
  // @@protoc_insertion_point(field_list:ProtoArchive.UserData.equipments)
  return equipments_;
}
inline ::google::protobuf::RepeatedPtrField< ::ProtoUser::ProduceEquipCPP >*
UserData::mutable_equipments() {
  // @@protoc_insertion_point(field_mutable_list:ProtoArchive.UserData.equipments)
  return &equipments_;
}

// repeated .ProtoUser.FruitCPP fruits = 7;
inline int UserData::fruits_size() const {
  return fruits_.size();
}
inline void UserData::clear_fruits() {
  fruits_.Clear();
}
inline const ::ProtoUser::FruitCPP& UserData::fruits(int index) const {
  // @@protoc_insertion_point(field_get:ProtoArchive.UserData.fruits)
  return fruits_.Get(index);
}
inline ::ProtoUser::FruitCPP* UserData::mutable_fruits(int index) {
  // @@protoc_insertion_point(field_mutable:ProtoArchive.UserData.fruits)
  return fruits_.Mutable(index);
}
inline ::ProtoUser::FruitCPP* UserData::add_fruits() {
  // @@protoc_insertion_point(field_add:ProtoArchive.UserData.fruits)
  return fruits_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ProtoUser::FruitCPP >&
UserData::fruits() const {
  // @@protoc_insertion_point(field_list:ProtoArchive.UserData.fruits)
  return fruits_;
}
inline ::google::protobuf::RepeatedPtrField< ::ProtoUser::FruitCPP >*
UserData::mutable_fruits() {
  // @@protoc_insertion_point(field_mutable_list:ProtoArchive.UserData.fruits)
  return &fruits_;
}

// repeated .ProtoUser.PropsItemCPP item = 8;
inline int UserData::item_size() const {
  return item_.size();
}
inline void UserData::clear_item() {
  item_.Clear();
}
inline const ::ProtoUser::PropsItemCPP& UserData::item(int index) const {
  // @@protoc_insertion_point(field_get:ProtoArchive.UserData.item)
  return item_.Get(index);
}
inline ::ProtoUser::PropsItemCPP* UserData::mutable_item(int index) {
  // @@protoc_insertion_point(field_mutable:ProtoArchive.UserData.item)
  return item_.Mutable(index);
}
inline ::ProtoUser::PropsItemCPP* UserData::add_item() {
  // @@protoc_insertion_point(field_add:ProtoArchive.UserData.item)
  return item_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ProtoUser::PropsItemCPP >&
UserData::item() const {
  // @@protoc_insertion_point(field_list:ProtoArchive.UserData.item)
  return item_;
}
inline ::google::protobuf::RepeatedPtrField< ::ProtoUser::PropsItemCPP >*
UserData::mutable_item() {
  // @@protoc_insertion_point(field_mutable_list:ProtoArchive.UserData.item)
  return &item_;
}

// repeated .ProtoUser.AnimalCPP animals = 9;
inline int UserData::animals_size() const {
  return animals_.size();
}
inline void UserData::clear_animals() {
  animals_.Clear();
}
inline const ::ProtoUser::AnimalCPP& UserData::animals(int index) const {
  // @@protoc_insertion_point(field_get:ProtoArchive.UserData.animals)
  return animals_.Get(index);
}
inline ::ProtoUser::AnimalCPP* UserData::mutable_animals(int index) {
  // @@protoc_insertion_point(field_mutable:ProtoArchive.UserData.animals)
  return animals_.Mutable(index);
}
inline ::ProtoUser::AnimalCPP* UserData::add_animals() {
  // @@protoc_insertion_point(field_add:ProtoArchive.UserData.animals)
  return animals_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ProtoUser::AnimalCPP >&
UserData::animals() const {
  // @@protoc_insertion_point(field_list:ProtoArchive.UserData.animals)
  return animals_;
}
inline ::google::protobuf::RepeatedPtrField< ::ProtoUser::AnimalCPP >*
UserData::mutable_animals() {
  // @@protoc_insertion_point(field_mutable_list:ProtoArchive.UserData.animals)
  return &animals_;
}

// repeated .ProtoUser.OrderCPP orders = 10;
inline int UserData::orders_size() const {
  return orders_.size();
}
inline void UserData::clear_orders() {
  orders_.Clear();
}
inline const ::ProtoUser::OrderCPP& UserData::orders(int index) const {
  // @@protoc_insertion_point(field_get:ProtoArchive.UserData.orders)
  return orders_.Get(index);
}
inline ::ProtoUser::OrderCPP* UserData::mutable_orders(int index) {
  // @@protoc_insertion_point(field_mutable:ProtoArchive.UserData.orders)
  return orders_.Mutable(index);
}
inline ::ProtoUser::OrderCPP* UserData::add_orders() {
  // @@protoc_insertion_point(field_add:ProtoArchive.UserData.orders)
  return orders_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ProtoUser::OrderCPP >&
UserData::orders() const {
  // @@protoc_insertion_point(field_list:ProtoArchive.UserData.orders)
  return orders_;
}
inline ::google::protobuf::RepeatedPtrField< ::ProtoUser::OrderCPP >*
UserData::mutable_orders() {
  // @@protoc_insertion_point(field_mutable_list:ProtoArchive.UserData.orders)
  return &orders_;
}

// optional .ProtoUser.TruckCPP truck = 11;
inline bool UserData::has_truck() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void UserData::set_has_truck() {
  _has_bits_[0] |= 0x00000400u;
}
inline void UserData::clear_has_truck() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void UserData::clear_truck() {
  if (truck_ != NULL) truck_->::ProtoUser::TruckCPP::Clear();
  clear_has_truck();
}
inline const ::ProtoUser::TruckCPP& UserData::truck() const {
  // @@protoc_insertion_point(field_get:ProtoArchive.UserData.truck)
  return truck_ != NULL ? *truck_ : *default_instance_->truck_;
}
inline ::ProtoUser::TruckCPP* UserData::mutable_truck() {
  set_has_truck();
  if (truck_ == NULL) truck_ = new ::ProtoUser::TruckCPP;
  // @@protoc_insertion_point(field_mutable:ProtoArchive.UserData.truck)
  return truck_;
}
inline ::ProtoUser::TruckCPP* UserData::release_truck() {
  clear_has_truck();
  ::ProtoUser::TruckCPP* temp = truck_;
  truck_ = NULL;
  return temp;
}
inline void UserData::set_allocated_truck(::ProtoUser::TruckCPP* truck) {
  delete truck_;
  truck_ = truck;
  if (truck) {
    set_has_truck();
  } else {
    clear_has_truck();
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoArchive.UserData.truck)
}

// optional .ProtoUser.ShippingCPP shipping = 12;
inline bool UserData::has_shipping() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void UserData::set_has_shipping() {
  _has_bits_[0] |= 0x00000800u;
}
inline void UserData::clear_has_shipping() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void UserData::clear_shipping() {
  if (shipping_ != NULL) shipping_->::ProtoUser::ShippingCPP::Clear();
  clear_has_shipping();
}
inline const ::ProtoUser::ShippingCPP& UserData::shipping() const {
  // @@protoc_insertion_point(field_get:ProtoArchive.UserData.shipping)
  return shipping_ != NULL ? *shipping_ : *default_instance_->shipping_;
}
inline ::ProtoUser::ShippingCPP* UserData::mutable_shipping() {
  set_has_shipping();
  if (shipping_ == NULL) shipping_ = new ::ProtoUser::ShippingCPP;
  // @@protoc_insertion_point(field_mutable:ProtoArchive.UserData.shipping)
  return shipping_;
}
inline ::ProtoUser::ShippingCPP* UserData::release_shipping() {
  clear_has_shipping();
  ::ProtoUser::ShippingCPP* temp = shipping_;
  shipping_ = NULL;
  return temp;
}
inline void UserData::set_allocated_shipping(::ProtoUser::ShippingCPP* shipping) {
  delete shipping_;
  shipping_ = shipping;
  if (shipping) {
    set_has_shipping();
  } else {
    clear_has_shipping();
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoArchive.UserData.shipping)
}

// repeated .ProtoUser.ShippingBoxCPP shipboxes = 13;
inline int UserData::shipboxes_size() const {
  return shipboxes_.size();
}
inline void UserData::clear_shipboxes() {
  shipboxes_.Clear();
}
inline const ::ProtoUser::ShippingBoxCPP& UserData::shipboxes(int index) const {
  // @@protoc_insertion_point(field_get:ProtoArchive.UserData.shipboxes)
  return shipboxes_.Get(index);
}
inline ::ProtoUser::ShippingBoxCPP* UserData::mutable_shipboxes(int index) {
  // @@protoc_insertion_point(field_mutable:ProtoArchive.UserData.shipboxes)
  return shipboxes_.Mutable(index);
}
inline ::ProtoUser::ShippingBoxCPP* UserData::add_shipboxes() {
  // @@protoc_insertion_point(field_add:ProtoArchive.UserData.shipboxes)
  return shipboxes_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ProtoUser::ShippingBoxCPP >&
UserData::shipboxes() const {
  // @@protoc_insertion_point(field_list:ProtoArchive.UserData.shipboxes)
  return shipboxes_;
}
inline ::google::protobuf::RepeatedPtrField< ::ProtoUser::ShippingBoxCPP >*
UserData::mutable_shipboxes() {
  // @@protoc_insertion_point(field_mutable_list:ProtoArchive.UserData.shipboxes)
  return &shipboxes_;
}

// repeated .ProtoUser.ShopCPP shop = 14;
inline int UserData::shop_size() const {
  return shop_.size();
}
inline void UserData::clear_shop() {
  shop_.Clear();
}
inline const ::ProtoUser::ShopCPP& UserData::shop(int index) const {
  // @@protoc_insertion_point(field_get:ProtoArchive.UserData.shop)
  return shop_.Get(index);
}
inline ::ProtoUser::ShopCPP* UserData::mutable_shop(int index) {
  // @@protoc_insertion_point(field_mutable:ProtoArchive.UserData.shop)
  return shop_.Mutable(index);
}
inline ::ProtoUser::ShopCPP* UserData::add_shop() {
  // @@protoc_insertion_point(field_add:ProtoArchive.UserData.shop)
  return shop_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ProtoUser::ShopCPP >&
UserData::shop() const {
  // @@protoc_insertion_point(field_list:ProtoArchive.UserData.shop)
  return shop_;
}
inline ::google::protobuf::RepeatedPtrField< ::ProtoUser::ShopCPP >*
UserData::mutable_shop() {
  // @@protoc_insertion_point(field_mutable_list:ProtoArchive.UserData.shop)
  return &shop_;
}

// repeated .ProtoUser.TaskCPP task = 15;
inline int UserData::task_size() const {
  return task_.size();
}
inline void UserData::clear_task() {
  task_.Clear();
}
inline const ::ProtoUser::TaskCPP& UserData::task(int index) const {
  // @@protoc_insertion_point(field_get:ProtoArchive.UserData.task)
  return task_.Get(index);
}
inline ::ProtoUser::TaskCPP* UserData::mutable_task(int index) {
  // @@protoc_insertion_point(field_mutable:ProtoArchive.UserData.task)
  return task_.Mutable(index);
}
inline ::ProtoUser::TaskCPP* UserData::add_task() {
  // @@protoc_insertion_point(field_add:ProtoArchive.UserData.task)
  return task_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ProtoUser::TaskCPP >&
UserData::task() const {
  // @@protoc_insertion_point(field_list:ProtoArchive.UserData.task)
  return task_;
}
inline ::google::protobuf::RepeatedPtrField< ::ProtoUser::TaskCPP >*
UserData::mutable_task() {
  // @@protoc_insertion_point(field_mutable_list:ProtoArchive.UserData.task)
  return &task_;
}

// repeated .ProtoUser.MissionCPP mission = 16;
inline int UserData::mission_size() const {
  return mission_.size();
}
inline void UserData::clear_mission() {
  mission_.Clear();
}
inline const ::ProtoUser::MissionCPP& UserData::mission(int index) const {
  // @@protoc_insertion_point(field_get:ProtoArchive.UserData.mission)
  return mission_.Get(index);
}
inline ::ProtoUser::MissionCPP* UserData::mutable_mission(int index) {
  // @@protoc_insertion_point(field_mutable:ProtoArchive.UserData.mission)
  return mission_.Mutable(index);
}
inline ::ProtoUser::MissionCPP* UserData::add_mission() {
  // @@protoc_insertion_point(field_add:ProtoArchive.UserData.mission)
  return mission_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ProtoUser::MissionCPP >&
UserData::mission() const {
  // @@protoc_insertion_point(field_list:ProtoArchive.UserData.mission)
  return mission_;
}
inline ::google::protobuf::RepeatedPtrField< ::ProtoUser::MissionCPP >*
UserData::mutable_mission() {
  // @@protoc_insertion_point(field_mutable_list:ProtoArchive.UserData.mission)
  return &mission_;
}

// repeated .ProtoUser.ActivityCPP activity = 17;
inline int UserData::activity_size() const {
  return activity_.size();
}
inline void UserData::clear_activity() {
  activity_.Clear();
}
inline const ::ProtoUser::ActivityCPP& UserData::activity(int index) const {
  // @@protoc_insertion_point(field_get:ProtoArchive.UserData.activity)
  return activity_.Get(index);
}
inline ::ProtoUser::ActivityCPP* UserData::mutable_activity(int index) {
  // @@protoc_insertion_point(field_mutable:ProtoArchive.UserData.activity)
  return activity_.Mutable(index);
}
inline ::ProtoUser::ActivityCPP* UserData::add_activity() {
  // @@protoc_insertion_point(field_add:ProtoArchive.UserData.activity)
  return activity_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ProtoUser::ActivityCPP >&
UserData::activity() const {
  // @@protoc_insertion_point(field_list:ProtoArchive.UserData.activity)
  return activity_;
}
inline ::google::protobuf::RepeatedPtrField< ::ProtoUser::ActivityCPP >*
UserData::mutable_activity() {
  // @@protoc_insertion_point(field_mutable_list:ProtoArchive.UserData.activity)
  return &activity_;
}

// repeated .ProtoUser.MaidDogCPP maildog = 18;
inline int UserData::maildog_size() const {
  return maildog_.size();
}
inline void UserData::clear_maildog() {
  maildog_.Clear();
}
inline const ::ProtoUser::MaidDogCPP& UserData::maildog(int index) const {
  // @@protoc_insertion_point(field_get:ProtoArchive.UserData.maildog)
  return maildog_.Get(index);
}
inline ::ProtoUser::MaidDogCPP* UserData::mutable_maildog(int index) {
  // @@protoc_insertion_point(field_mutable:ProtoArchive.UserData.maildog)
  return maildog_.Mutable(index);
}
inline ::ProtoUser::MaidDogCPP* UserData::add_maildog() {
  // @@protoc_insertion_point(field_add:ProtoArchive.UserData.maildog)
  return maildog_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ProtoUser::MaidDogCPP >&
UserData::maildog() const {
  // @@protoc_insertion_point(field_list:ProtoArchive.UserData.maildog)
  return maildog_;
}
inline ::google::protobuf::RepeatedPtrField< ::ProtoUser::MaidDogCPP >*
UserData::mutable_maildog() {
  // @@protoc_insertion_point(field_mutable_list:ProtoArchive.UserData.maildog)
  return &maildog_;
}

// repeated .ProtoUser.FriendlyTreeBasicCPP friendlytree = 19;
inline int UserData::friendlytree_size() const {
  return friendlytree_.size();
}
inline void UserData::clear_friendlytree() {
  friendlytree_.Clear();
}
inline const ::ProtoUser::FriendlyTreeBasicCPP& UserData::friendlytree(int index) const {
  // @@protoc_insertion_point(field_get:ProtoArchive.UserData.friendlytree)
  return friendlytree_.Get(index);
}
inline ::ProtoUser::FriendlyTreeBasicCPP* UserData::mutable_friendlytree(int index) {
  // @@protoc_insertion_point(field_mutable:ProtoArchive.UserData.friendlytree)
  return friendlytree_.Mutable(index);
}
inline ::ProtoUser::FriendlyTreeBasicCPP* UserData::add_friendlytree() {
  // @@protoc_insertion_point(field_add:ProtoArchive.UserData.friendlytree)
  return friendlytree_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ProtoUser::FriendlyTreeBasicCPP >&
UserData::friendlytree() const {
  // @@protoc_insertion_point(field_list:ProtoArchive.UserData.friendlytree)
  return friendlytree_;
}
inline ::google::protobuf::RepeatedPtrField< ::ProtoUser::FriendlyTreeBasicCPP >*
UserData::mutable_friendlytree() {
  // @@protoc_insertion_point(field_mutable_list:ProtoArchive.UserData.friendlytree)
  return &friendlytree_;
}

// repeated .ProtoUser.ShopSellCoinCPP shopsellcoin = 20;
inline int UserData::shopsellcoin_size() const {
  return shopsellcoin_.size();
}
inline void UserData::clear_shopsellcoin() {
  shopsellcoin_.Clear();
}
inline const ::ProtoUser::ShopSellCoinCPP& UserData::shopsellcoin(int index) const {
  // @@protoc_insertion_point(field_get:ProtoArchive.UserData.shopsellcoin)
  return shopsellcoin_.Get(index);
}
inline ::ProtoUser::ShopSellCoinCPP* UserData::mutable_shopsellcoin(int index) {
  // @@protoc_insertion_point(field_mutable:ProtoArchive.UserData.shopsellcoin)
  return shopsellcoin_.Mutable(index);
}
inline ::ProtoUser::ShopSellCoinCPP* UserData::add_shopsellcoin() {
  // @@protoc_insertion_point(field_add:ProtoArchive.UserData.shopsellcoin)
  return shopsellcoin_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ProtoUser::ShopSellCoinCPP >&
UserData::shopsellcoin() const {
  // @@protoc_insertion_point(field_list:ProtoArchive.UserData.shopsellcoin)
  return shopsellcoin_;
}
inline ::google::protobuf::RepeatedPtrField< ::ProtoUser::ShopSellCoinCPP >*
UserData::mutable_shopsellcoin() {
  // @@protoc_insertion_point(field_mutable_list:ProtoArchive.UserData.shopsellcoin)
  return &shopsellcoin_;
}

// repeated .ProtoUser.FriendWorkerCPP friendworker = 21;
inline int UserData::friendworker_size() const {
  return friendworker_.size();
}
inline void UserData::clear_friendworker() {
  friendworker_.Clear();
}
inline const ::ProtoUser::FriendWorkerCPP& UserData::friendworker(int index) const {
  // @@protoc_insertion_point(field_get:ProtoArchive.UserData.friendworker)
  return friendworker_.Get(index);
}
inline ::ProtoUser::FriendWorkerCPP* UserData::mutable_friendworker(int index) {
  // @@protoc_insertion_point(field_mutable:ProtoArchive.UserData.friendworker)
  return friendworker_.Mutable(index);
}
inline ::ProtoUser::FriendWorkerCPP* UserData::add_friendworker() {
  // @@protoc_insertion_point(field_add:ProtoArchive.UserData.friendworker)
  return friendworker_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ProtoUser::FriendWorkerCPP >&
UserData::friendworker() const {
  // @@protoc_insertion_point(field_list:ProtoArchive.UserData.friendworker)
  return friendworker_;
}
inline ::google::protobuf::RepeatedPtrField< ::ProtoUser::FriendWorkerCPP >*
UserData::mutable_friendworker() {
  // @@protoc_insertion_point(field_mutable_list:ProtoArchive.UserData.friendworker)
  return &friendworker_;
}

// repeated .ProtoUser.UnlockPetCPP pet = 22;
inline int UserData::pet_size() const {
  return pet_.size();
}
inline void UserData::clear_pet() {
  pet_.Clear();
}
inline const ::ProtoUser::UnlockPetCPP& UserData::pet(int index) const {
  // @@protoc_insertion_point(field_get:ProtoArchive.UserData.pet)
  return pet_.Get(index);
}
inline ::ProtoUser::UnlockPetCPP* UserData::mutable_pet(int index) {
  // @@protoc_insertion_point(field_mutable:ProtoArchive.UserData.pet)
  return pet_.Mutable(index);
}
inline ::ProtoUser::UnlockPetCPP* UserData::add_pet() {
  // @@protoc_insertion_point(field_add:ProtoArchive.UserData.pet)
  return pet_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ProtoUser::UnlockPetCPP >&
UserData::pet() const {
  // @@protoc_insertion_point(field_list:ProtoArchive.UserData.pet)
  return pet_;
}
inline ::google::protobuf::RepeatedPtrField< ::ProtoUser::UnlockPetCPP >*
UserData::mutable_pet() {
  // @@protoc_insertion_point(field_mutable_list:ProtoArchive.UserData.pet)
  return &pet_;
}

// -------------------------------------------------------------------

// ImportReq

// required uint32 uid = 1;
inline bool ImportReq::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ImportReq::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ImportReq::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ImportReq::clear_uid() {
  uid_ = 0u;
  clear_has_uid();
}
inline ::google::protobuf::uint32 ImportReq::uid() const {
  // @@protoc_insertion_point(field_get:ProtoArchive.ImportReq.uid)
  return uid_;
}
inline void ImportReq::set_uid(::google::protobuf::uint32 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:ProtoArchive.ImportReq.uid)
}

// required .ProtoArchive.UserData data = 2;
inline bool ImportReq::has_data() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ImportReq::set_has_data() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ImportReq::clear_has_data() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ImportReq::clear_data() {
  if (data_ != NULL) data_->::ProtoArchive::UserData::Clear();
  clear_has_data();
}
inline const ::ProtoArchive::UserData& ImportReq::data() const {
  // @@protoc_insertion_point(field_get:ProtoArchive.ImportReq.data)
  return data_ != NULL ? *data_ : *default_instance_->data_;
}
inline ::ProtoArchive::UserData* ImportReq::mutable_data() {
  set_has_data();
  if (data_ == NULL) data_ = new ::ProtoArchive::UserData;
  // @@protoc_insertion_point(field_mutable:ProtoArchive.ImportReq.data)
  return data_;
}
inline ::ProtoArchive::UserData* ImportReq::release_data() {
  clear_has_data();
  ::ProtoArchive::UserData* temp = data_;
  data_ = NULL;
  return temp;
}
inline void ImportReq::set_allocated_data(::ProtoArchive::UserData* data) {
  delete data_;
  data_ = data;
  if (data) {
    set_has_data();
  } else {
    clear_has_data();
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoArchive.ImportReq.data)
}

// -------------------------------------------------------------------

// ImportResp

// optional bytes err_msg = 1;
inline bool ImportResp::has_err_msg() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ImportResp::set_has_err_msg() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ImportResp::clear_has_err_msg() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ImportResp::clear_err_msg() {
  if (err_msg_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    err_msg_->clear();
  }
  clear_has_err_msg();
}
inline const ::std::string& ImportResp::err_msg() const {
  // @@protoc_insertion_point(field_get:ProtoArchive.ImportResp.err_msg)
  return *err_msg_;
}
inline void ImportResp::set_err_msg(const ::std::string& value) {
  set_has_err_msg();
  if (err_msg_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    err_msg_ = new ::std::string;
  }
  err_msg_->assign(value);
  // @@protoc_insertion_point(field_set:ProtoArchive.ImportResp.err_msg)
}
inline void ImportResp::set_err_msg(const char* value) {
  set_has_err_msg();
  if (err_msg_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    err_msg_ = new ::std::string;
  }
  err_msg_->assign(value);
  // @@protoc_insertion_point(field_set_char:ProtoArchive.ImportResp.err_msg)
}
inline void ImportResp::set_err_msg(const void* value, size_t size) {
  set_has_err_msg();
  if (err_msg_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    err_msg_ = new ::std::string;
  }
  err_msg_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ProtoArchive.ImportResp.err_msg)
}
inline ::std::string* ImportResp::mutable_err_msg() {
  set_has_err_msg();
  if (err_msg_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    err_msg_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:ProtoArchive.ImportResp.err_msg)
  return err_msg_;
}
inline ::std::string* ImportResp::release_err_msg() {
  clear_has_err_msg();
  if (err_msg_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = err_msg_;
    err_msg_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void ImportResp::set_allocated_err_msg(::std::string* err_msg) {
  if (err_msg_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete err_msg_;
  }
  if (err_msg) {
    set_has_err_msg();
    err_msg_ = err_msg;
  } else {
    clear_has_err_msg();
    err_msg_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoArchive.ImportResp.err_msg)
}

// -------------------------------------------------------------------

// ExportReq

// required uint32 uid = 1;
inline bool ExportReq::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ExportReq::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ExportReq::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ExportReq::clear_uid() {
  uid_ = 0u;
  clear_has_uid();
}
inline ::google::protobuf::uint32 ExportReq::uid() const {
  // @@protoc_insertion_point(field_get:ProtoArchive.ExportReq.uid)
  return uid_;
}
inline void ExportReq::set_uid(::google::protobuf::uint32 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:ProtoArchive.ExportReq.uid)
}

// -------------------------------------------------------------------

// ExportResp

// optional .ProtoArchive.UserData data = 1;
inline bool ExportResp::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ExportResp::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ExportResp::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ExportResp::clear_data() {
  if (data_ != NULL) data_->::ProtoArchive::UserData::Clear();
  clear_has_data();
}
inline const ::ProtoArchive::UserData& ExportResp::data() const {
  // @@protoc_insertion_point(field_get:ProtoArchive.ExportResp.data)
  return data_ != NULL ? *data_ : *default_instance_->data_;
}
inline ::ProtoArchive::UserData* ExportResp::mutable_data() {
  set_has_data();
  if (data_ == NULL) data_ = new ::ProtoArchive::UserData;
  // @@protoc_insertion_point(field_mutable:ProtoArchive.ExportResp.data)
  return data_;
}
inline ::ProtoArchive::UserData* ExportResp::release_data() {
  clear_has_data();
  ::ProtoArchive::UserData* temp = data_;
  data_ = NULL;
  return temp;
}
inline void ExportResp::set_allocated_data(::ProtoArchive::UserData* data) {
  delete data_;
  data_ = data;
  if (data) {
    set_has_data();
  } else {
    clear_has_data();
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoArchive.ExportResp.data)
}

// optional string err_msg = 2;
inline bool ExportResp::has_err_msg() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ExportResp::set_has_err_msg() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ExportResp::clear_has_err_msg() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ExportResp::clear_err_msg() {
  if (err_msg_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    err_msg_->clear();
  }
  clear_has_err_msg();
}
inline const ::std::string& ExportResp::err_msg() const {
  // @@protoc_insertion_point(field_get:ProtoArchive.ExportResp.err_msg)
  return *err_msg_;
}
inline void ExportResp::set_err_msg(const ::std::string& value) {
  set_has_err_msg();
  if (err_msg_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    err_msg_ = new ::std::string;
  }
  err_msg_->assign(value);
  // @@protoc_insertion_point(field_set:ProtoArchive.ExportResp.err_msg)
}
inline void ExportResp::set_err_msg(const char* value) {
  set_has_err_msg();
  if (err_msg_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    err_msg_ = new ::std::string;
  }
  err_msg_->assign(value);
  // @@protoc_insertion_point(field_set_char:ProtoArchive.ExportResp.err_msg)
}
inline void ExportResp::set_err_msg(const char* value, size_t size) {
  set_has_err_msg();
  if (err_msg_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    err_msg_ = new ::std::string;
  }
  err_msg_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ProtoArchive.ExportResp.err_msg)
}
inline ::std::string* ExportResp::mutable_err_msg() {
  set_has_err_msg();
  if (err_msg_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    err_msg_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:ProtoArchive.ExportResp.err_msg)
  return err_msg_;
}
inline ::std::string* ExportResp::release_err_msg() {
  clear_has_err_msg();
  if (err_msg_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = err_msg_;
    err_msg_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void ExportResp::set_allocated_err_msg(::std::string* err_msg) {
  if (err_msg_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete err_msg_;
  }
  if (err_msg) {
    set_has_err_msg();
    err_msg_ = err_msg;
  } else {
    clear_has_err_msg();
    err_msg_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoArchive.ExportResp.err_msg)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace ProtoArchive

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_ProtoArchive_2eproto__INCLUDED
