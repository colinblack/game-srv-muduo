// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ProtoArchive.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "ProtoArchive.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace ProtoArchive {

namespace {

const ::google::protobuf::Descriptor* UserData_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UserData_reflection_ = NULL;
const ::google::protobuf::Descriptor* ImportReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ImportReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* ImportResp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ImportResp_reflection_ = NULL;
const ::google::protobuf::Descriptor* ExportReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ExportReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* ExportResp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ExportResp_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_ProtoArchive_2eproto() {
  protobuf_AddDesc_ProtoArchive_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "ProtoArchive.proto");
  GOOGLE_CHECK(file != NULL);
  UserData_descriptor_ = file->message_type(0);
  static const int UserData_offsets_[22] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserData, base_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserData, charges_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserData, builds_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserData, equipstar_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserData, cropland_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserData, equipments_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserData, fruits_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserData, item_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserData, animals_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserData, orders_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserData, truck_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserData, shipping_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserData, shipboxes_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserData, shop_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserData, task_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserData, mission_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserData, activity_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserData, maildog_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserData, friendlytree_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserData, shopsellcoin_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserData, friendworker_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserData, pet_),
  };
  UserData_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      UserData_descriptor_,
      UserData::default_instance_,
      UserData_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserData, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserData, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(UserData));
  ImportReq_descriptor_ = file->message_type(1);
  static const int ImportReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ImportReq, uid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ImportReq, data_),
  };
  ImportReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ImportReq_descriptor_,
      ImportReq::default_instance_,
      ImportReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ImportReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ImportReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ImportReq));
  ImportResp_descriptor_ = file->message_type(2);
  static const int ImportResp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ImportResp, err_msg_),
  };
  ImportResp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ImportResp_descriptor_,
      ImportResp::default_instance_,
      ImportResp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ImportResp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ImportResp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ImportResp));
  ExportReq_descriptor_ = file->message_type(3);
  static const int ExportReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExportReq, uid_),
  };
  ExportReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ExportReq_descriptor_,
      ExportReq::default_instance_,
      ExportReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExportReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExportReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ExportReq));
  ExportResp_descriptor_ = file->message_type(4);
  static const int ExportResp_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExportResp, data_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExportResp, err_msg_),
  };
  ExportResp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ExportResp_descriptor_,
      ExportResp::default_instance_,
      ExportResp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExportResp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExportResp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ExportResp));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_ProtoArchive_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    UserData_descriptor_, &UserData::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ImportReq_descriptor_, &ImportReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ImportResp_descriptor_, &ImportResp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ExportReq_descriptor_, &ExportReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ExportResp_descriptor_, &ExportResp::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_ProtoArchive_2eproto() {
  delete UserData::default_instance_;
  delete UserData_reflection_;
  delete ImportReq::default_instance_;
  delete ImportReq_reflection_;
  delete ImportResp::default_instance_;
  delete ImportResp_reflection_;
  delete ExportReq::default_instance_;
  delete ExportReq_reflection_;
  delete ExportResp::default_instance_;
  delete ExportResp_reflection_;
}

void protobuf_AddDesc_ProtoArchive_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::ProtoUser::protobuf_AddDesc_ProtoUser_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\022ProtoArchive.proto\022\014ProtoArchive\032\017Prot"
    "oUser.proto\"\227\007\n\010UserData\022\035\n\004base\030\001 \001(\0132\017"
    ".ProtoUser.Base\022&\n\007charges\030\002 \003(\0132\025.Proto"
    "User.ChargeItem\022\'\n\006builds\030\003 \003(\0132\027.ProtoU"
    "ser.BuildingsCPP\022.\n\tequipstar\030\004 \003(\0132\033.Pr"
    "otoUser.EquipmentStarCPP\022(\n\010cropland\030\005 \003"
    "(\0132\026.ProtoUser.CropLandCPP\022.\n\nequipments"
    "\030\006 \003(\0132\032.ProtoUser.ProduceEquipCPP\022#\n\006fr"
    "uits\030\007 \003(\0132\023.ProtoUser.FruitCPP\022%\n\004item\030"
    "\010 \003(\0132\027.ProtoUser.PropsItemCPP\022%\n\007animal"
    "s\030\t \003(\0132\024.ProtoUser.AnimalCPP\022#\n\006orders\030"
    "\n \003(\0132\023.ProtoUser.OrderCPP\022\"\n\005truck\030\013 \001("
    "\0132\023.ProtoUser.TruckCPP\022(\n\010shipping\030\014 \001(\013"
    "2\026.ProtoUser.ShippingCPP\022,\n\tshipboxes\030\r "
    "\003(\0132\031.ProtoUser.ShippingBoxCPP\022 \n\004shop\030\016"
    " \003(\0132\022.ProtoUser.ShopCPP\022 \n\004task\030\017 \003(\0132\022"
    ".ProtoUser.TaskCPP\022&\n\007mission\030\020 \003(\0132\025.Pr"
    "otoUser.MissionCPP\022(\n\010activity\030\021 \003(\0132\026.P"
    "rotoUser.ActivityCPP\022&\n\007maildog\030\022 \003(\0132\025."
    "ProtoUser.MaidDogCPP\0225\n\014friendlytree\030\023 \003"
    "(\0132\037.ProtoUser.FriendlyTreeBasicCPP\0220\n\014s"
    "hopsellcoin\030\024 \003(\0132\032.ProtoUser.ShopSellCo"
    "inCPP\0220\n\014friendworker\030\025 \003(\0132\032.ProtoUser."
    "FriendWorkerCPP\022$\n\003pet\030\026 \003(\0132\027.ProtoUser"
    ".UnlockPetCPP\">\n\tImportReq\022\013\n\003uid\030\001 \002(\r\022"
    "$\n\004data\030\002 \002(\0132\026.ProtoArchive.UserData\"\035\n"
    "\nImportResp\022\017\n\007err_msg\030\001 \001(\014\"\030\n\tExportRe"
    "q\022\013\n\003uid\030\001 \002(\r\"C\n\nExportResp\022$\n\004data\030\001 \001"
    "(\0132\026.ProtoArchive.UserData\022\017\n\007err_msg\030\002 "
    "\001(\t", 1163);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "ProtoArchive.proto", &protobuf_RegisterTypes);
  UserData::default_instance_ = new UserData();
  ImportReq::default_instance_ = new ImportReq();
  ImportResp::default_instance_ = new ImportResp();
  ExportReq::default_instance_ = new ExportReq();
  ExportResp::default_instance_ = new ExportResp();
  UserData::default_instance_->InitAsDefaultInstance();
  ImportReq::default_instance_->InitAsDefaultInstance();
  ImportResp::default_instance_->InitAsDefaultInstance();
  ExportReq::default_instance_->InitAsDefaultInstance();
  ExportResp::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_ProtoArchive_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_ProtoArchive_2eproto {
  StaticDescriptorInitializer_ProtoArchive_2eproto() {
    protobuf_AddDesc_ProtoArchive_2eproto();
  }
} static_descriptor_initializer_ProtoArchive_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int UserData::kBaseFieldNumber;
const int UserData::kChargesFieldNumber;
const int UserData::kBuildsFieldNumber;
const int UserData::kEquipstarFieldNumber;
const int UserData::kCroplandFieldNumber;
const int UserData::kEquipmentsFieldNumber;
const int UserData::kFruitsFieldNumber;
const int UserData::kItemFieldNumber;
const int UserData::kAnimalsFieldNumber;
const int UserData::kOrdersFieldNumber;
const int UserData::kTruckFieldNumber;
const int UserData::kShippingFieldNumber;
const int UserData::kShipboxesFieldNumber;
const int UserData::kShopFieldNumber;
const int UserData::kTaskFieldNumber;
const int UserData::kMissionFieldNumber;
const int UserData::kActivityFieldNumber;
const int UserData::kMaildogFieldNumber;
const int UserData::kFriendlytreeFieldNumber;
const int UserData::kShopsellcoinFieldNumber;
const int UserData::kFriendworkerFieldNumber;
const int UserData::kPetFieldNumber;
#endif  // !_MSC_VER

UserData::UserData()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoArchive.UserData)
}

void UserData::InitAsDefaultInstance() {
  base_ = const_cast< ::ProtoUser::Base*>(&::ProtoUser::Base::default_instance());
  truck_ = const_cast< ::ProtoUser::TruckCPP*>(&::ProtoUser::TruckCPP::default_instance());
  shipping_ = const_cast< ::ProtoUser::ShippingCPP*>(&::ProtoUser::ShippingCPP::default_instance());
}

UserData::UserData(const UserData& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ProtoArchive.UserData)
}

void UserData::SharedCtor() {
  _cached_size_ = 0;
  base_ = NULL;
  truck_ = NULL;
  shipping_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

UserData::~UserData() {
  // @@protoc_insertion_point(destructor:ProtoArchive.UserData)
  SharedDtor();
}

void UserData::SharedDtor() {
  if (this != default_instance_) {
    delete base_;
    delete truck_;
    delete shipping_;
  }
}

void UserData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UserData::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UserData_descriptor_;
}

const UserData& UserData::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoArchive_2eproto();
  return *default_instance_;
}

UserData* UserData::default_instance_ = NULL;

UserData* UserData::New() const {
  return new UserData;
}

void UserData::Clear() {
  if (has_base()) {
    if (base_ != NULL) base_->::ProtoUser::Base::Clear();
  }
  if (_has_bits_[8 / 32] & 3072) {
    if (has_truck()) {
      if (truck_ != NULL) truck_->::ProtoUser::TruckCPP::Clear();
    }
    if (has_shipping()) {
      if (shipping_ != NULL) shipping_->::ProtoUser::ShippingCPP::Clear();
    }
  }
  charges_.Clear();
  builds_.Clear();
  equipstar_.Clear();
  cropland_.Clear();
  equipments_.Clear();
  fruits_.Clear();
  item_.Clear();
  animals_.Clear();
  orders_.Clear();
  shipboxes_.Clear();
  shop_.Clear();
  task_.Clear();
  mission_.Clear();
  activity_.Clear();
  maildog_.Clear();
  friendlytree_.Clear();
  shopsellcoin_.Clear();
  friendworker_.Clear();
  pet_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool UserData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoArchive.UserData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .ProtoUser.Base base = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_base()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_charges;
        break;
      }

      // repeated .ProtoUser.ChargeItem charges = 2;
      case 2: {
        if (tag == 18) {
         parse_charges:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_charges()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_charges;
        if (input->ExpectTag(26)) goto parse_builds;
        break;
      }

      // repeated .ProtoUser.BuildingsCPP builds = 3;
      case 3: {
        if (tag == 26) {
         parse_builds:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_builds()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_builds;
        if (input->ExpectTag(34)) goto parse_equipstar;
        break;
      }

      // repeated .ProtoUser.EquipmentStarCPP equipstar = 4;
      case 4: {
        if (tag == 34) {
         parse_equipstar:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_equipstar()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_equipstar;
        if (input->ExpectTag(42)) goto parse_cropland;
        break;
      }

      // repeated .ProtoUser.CropLandCPP cropland = 5;
      case 5: {
        if (tag == 42) {
         parse_cropland:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_cropland()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_cropland;
        if (input->ExpectTag(50)) goto parse_equipments;
        break;
      }

      // repeated .ProtoUser.ProduceEquipCPP equipments = 6;
      case 6: {
        if (tag == 50) {
         parse_equipments:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_equipments()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_equipments;
        if (input->ExpectTag(58)) goto parse_fruits;
        break;
      }

      // repeated .ProtoUser.FruitCPP fruits = 7;
      case 7: {
        if (tag == 58) {
         parse_fruits:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_fruits()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_fruits;
        if (input->ExpectTag(66)) goto parse_item;
        break;
      }

      // repeated .ProtoUser.PropsItemCPP item = 8;
      case 8: {
        if (tag == 66) {
         parse_item:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_item()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_item;
        if (input->ExpectTag(74)) goto parse_animals;
        break;
      }

      // repeated .ProtoUser.AnimalCPP animals = 9;
      case 9: {
        if (tag == 74) {
         parse_animals:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_animals()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_animals;
        if (input->ExpectTag(82)) goto parse_orders;
        break;
      }

      // repeated .ProtoUser.OrderCPP orders = 10;
      case 10: {
        if (tag == 82) {
         parse_orders:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_orders()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_orders;
        if (input->ExpectTag(90)) goto parse_truck;
        break;
      }

      // optional .ProtoUser.TruckCPP truck = 11;
      case 11: {
        if (tag == 90) {
         parse_truck:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_truck()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(98)) goto parse_shipping;
        break;
      }

      // optional .ProtoUser.ShippingCPP shipping = 12;
      case 12: {
        if (tag == 98) {
         parse_shipping:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_shipping()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(106)) goto parse_shipboxes;
        break;
      }

      // repeated .ProtoUser.ShippingBoxCPP shipboxes = 13;
      case 13: {
        if (tag == 106) {
         parse_shipboxes:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_shipboxes()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(106)) goto parse_shipboxes;
        if (input->ExpectTag(114)) goto parse_shop;
        break;
      }

      // repeated .ProtoUser.ShopCPP shop = 14;
      case 14: {
        if (tag == 114) {
         parse_shop:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_shop()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(114)) goto parse_shop;
        if (input->ExpectTag(122)) goto parse_task;
        break;
      }

      // repeated .ProtoUser.TaskCPP task = 15;
      case 15: {
        if (tag == 122) {
         parse_task:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_task()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(122)) goto parse_task;
        if (input->ExpectTag(130)) goto parse_mission;
        break;
      }

      // repeated .ProtoUser.MissionCPP mission = 16;
      case 16: {
        if (tag == 130) {
         parse_mission:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_mission()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(130)) goto parse_mission;
        if (input->ExpectTag(138)) goto parse_activity;
        break;
      }

      // repeated .ProtoUser.ActivityCPP activity = 17;
      case 17: {
        if (tag == 138) {
         parse_activity:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_activity()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(138)) goto parse_activity;
        if (input->ExpectTag(146)) goto parse_maildog;
        break;
      }

      // repeated .ProtoUser.MaidDogCPP maildog = 18;
      case 18: {
        if (tag == 146) {
         parse_maildog:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_maildog()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(146)) goto parse_maildog;
        if (input->ExpectTag(154)) goto parse_friendlytree;
        break;
      }

      // repeated .ProtoUser.FriendlyTreeBasicCPP friendlytree = 19;
      case 19: {
        if (tag == 154) {
         parse_friendlytree:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_friendlytree()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(154)) goto parse_friendlytree;
        if (input->ExpectTag(162)) goto parse_shopsellcoin;
        break;
      }

      // repeated .ProtoUser.ShopSellCoinCPP shopsellcoin = 20;
      case 20: {
        if (tag == 162) {
         parse_shopsellcoin:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_shopsellcoin()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(162)) goto parse_shopsellcoin;
        if (input->ExpectTag(170)) goto parse_friendworker;
        break;
      }

      // repeated .ProtoUser.FriendWorkerCPP friendworker = 21;
      case 21: {
        if (tag == 170) {
         parse_friendworker:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_friendworker()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(170)) goto parse_friendworker;
        if (input->ExpectTag(178)) goto parse_pet;
        break;
      }

      // repeated .ProtoUser.UnlockPetCPP pet = 22;
      case 22: {
        if (tag == 178) {
         parse_pet:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_pet()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(178)) goto parse_pet;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoArchive.UserData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoArchive.UserData)
  return false;
#undef DO_
}

void UserData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoArchive.UserData)
  // optional .ProtoUser.Base base = 1;
  if (has_base()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->base(), output);
  }

  // repeated .ProtoUser.ChargeItem charges = 2;
  for (int i = 0; i < this->charges_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->charges(i), output);
  }

  // repeated .ProtoUser.BuildingsCPP builds = 3;
  for (int i = 0; i < this->builds_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->builds(i), output);
  }

  // repeated .ProtoUser.EquipmentStarCPP equipstar = 4;
  for (int i = 0; i < this->equipstar_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->equipstar(i), output);
  }

  // repeated .ProtoUser.CropLandCPP cropland = 5;
  for (int i = 0; i < this->cropland_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->cropland(i), output);
  }

  // repeated .ProtoUser.ProduceEquipCPP equipments = 6;
  for (int i = 0; i < this->equipments_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->equipments(i), output);
  }

  // repeated .ProtoUser.FruitCPP fruits = 7;
  for (int i = 0; i < this->fruits_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->fruits(i), output);
  }

  // repeated .ProtoUser.PropsItemCPP item = 8;
  for (int i = 0; i < this->item_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->item(i), output);
  }

  // repeated .ProtoUser.AnimalCPP animals = 9;
  for (int i = 0; i < this->animals_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->animals(i), output);
  }

  // repeated .ProtoUser.OrderCPP orders = 10;
  for (int i = 0; i < this->orders_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->orders(i), output);
  }

  // optional .ProtoUser.TruckCPP truck = 11;
  if (has_truck()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, this->truck(), output);
  }

  // optional .ProtoUser.ShippingCPP shipping = 12;
  if (has_shipping()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, this->shipping(), output);
  }

  // repeated .ProtoUser.ShippingBoxCPP shipboxes = 13;
  for (int i = 0; i < this->shipboxes_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      13, this->shipboxes(i), output);
  }

  // repeated .ProtoUser.ShopCPP shop = 14;
  for (int i = 0; i < this->shop_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      14, this->shop(i), output);
  }

  // repeated .ProtoUser.TaskCPP task = 15;
  for (int i = 0; i < this->task_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      15, this->task(i), output);
  }

  // repeated .ProtoUser.MissionCPP mission = 16;
  for (int i = 0; i < this->mission_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      16, this->mission(i), output);
  }

  // repeated .ProtoUser.ActivityCPP activity = 17;
  for (int i = 0; i < this->activity_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      17, this->activity(i), output);
  }

  // repeated .ProtoUser.MaidDogCPP maildog = 18;
  for (int i = 0; i < this->maildog_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      18, this->maildog(i), output);
  }

  // repeated .ProtoUser.FriendlyTreeBasicCPP friendlytree = 19;
  for (int i = 0; i < this->friendlytree_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      19, this->friendlytree(i), output);
  }

  // repeated .ProtoUser.ShopSellCoinCPP shopsellcoin = 20;
  for (int i = 0; i < this->shopsellcoin_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      20, this->shopsellcoin(i), output);
  }

  // repeated .ProtoUser.FriendWorkerCPP friendworker = 21;
  for (int i = 0; i < this->friendworker_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      21, this->friendworker(i), output);
  }

  // repeated .ProtoUser.UnlockPetCPP pet = 22;
  for (int i = 0; i < this->pet_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      22, this->pet(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoArchive.UserData)
}

::google::protobuf::uint8* UserData::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoArchive.UserData)
  // optional .ProtoUser.Base base = 1;
  if (has_base()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->base(), target);
  }

  // repeated .ProtoUser.ChargeItem charges = 2;
  for (int i = 0; i < this->charges_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->charges(i), target);
  }

  // repeated .ProtoUser.BuildingsCPP builds = 3;
  for (int i = 0; i < this->builds_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->builds(i), target);
  }

  // repeated .ProtoUser.EquipmentStarCPP equipstar = 4;
  for (int i = 0; i < this->equipstar_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->equipstar(i), target);
  }

  // repeated .ProtoUser.CropLandCPP cropland = 5;
  for (int i = 0; i < this->cropland_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->cropland(i), target);
  }

  // repeated .ProtoUser.ProduceEquipCPP equipments = 6;
  for (int i = 0; i < this->equipments_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        6, this->equipments(i), target);
  }

  // repeated .ProtoUser.FruitCPP fruits = 7;
  for (int i = 0; i < this->fruits_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        7, this->fruits(i), target);
  }

  // repeated .ProtoUser.PropsItemCPP item = 8;
  for (int i = 0; i < this->item_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        8, this->item(i), target);
  }

  // repeated .ProtoUser.AnimalCPP animals = 9;
  for (int i = 0; i < this->animals_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        9, this->animals(i), target);
  }

  // repeated .ProtoUser.OrderCPP orders = 10;
  for (int i = 0; i < this->orders_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        10, this->orders(i), target);
  }

  // optional .ProtoUser.TruckCPP truck = 11;
  if (has_truck()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        11, this->truck(), target);
  }

  // optional .ProtoUser.ShippingCPP shipping = 12;
  if (has_shipping()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        12, this->shipping(), target);
  }

  // repeated .ProtoUser.ShippingBoxCPP shipboxes = 13;
  for (int i = 0; i < this->shipboxes_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        13, this->shipboxes(i), target);
  }

  // repeated .ProtoUser.ShopCPP shop = 14;
  for (int i = 0; i < this->shop_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        14, this->shop(i), target);
  }

  // repeated .ProtoUser.TaskCPP task = 15;
  for (int i = 0; i < this->task_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        15, this->task(i), target);
  }

  // repeated .ProtoUser.MissionCPP mission = 16;
  for (int i = 0; i < this->mission_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        16, this->mission(i), target);
  }

  // repeated .ProtoUser.ActivityCPP activity = 17;
  for (int i = 0; i < this->activity_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        17, this->activity(i), target);
  }

  // repeated .ProtoUser.MaidDogCPP maildog = 18;
  for (int i = 0; i < this->maildog_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        18, this->maildog(i), target);
  }

  // repeated .ProtoUser.FriendlyTreeBasicCPP friendlytree = 19;
  for (int i = 0; i < this->friendlytree_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        19, this->friendlytree(i), target);
  }

  // repeated .ProtoUser.ShopSellCoinCPP shopsellcoin = 20;
  for (int i = 0; i < this->shopsellcoin_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        20, this->shopsellcoin(i), target);
  }

  // repeated .ProtoUser.FriendWorkerCPP friendworker = 21;
  for (int i = 0; i < this->friendworker_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        21, this->friendworker(i), target);
  }

  // repeated .ProtoUser.UnlockPetCPP pet = 22;
  for (int i = 0; i < this->pet_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        22, this->pet(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoArchive.UserData)
  return target;
}

int UserData::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .ProtoUser.Base base = 1;
    if (has_base()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->base());
    }

  }
  if (_has_bits_[10 / 32] & (0xffu << (10 % 32))) {
    // optional .ProtoUser.TruckCPP truck = 11;
    if (has_truck()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->truck());
    }

    // optional .ProtoUser.ShippingCPP shipping = 12;
    if (has_shipping()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->shipping());
    }

  }
  // repeated .ProtoUser.ChargeItem charges = 2;
  total_size += 1 * this->charges_size();
  for (int i = 0; i < this->charges_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->charges(i));
  }

  // repeated .ProtoUser.BuildingsCPP builds = 3;
  total_size += 1 * this->builds_size();
  for (int i = 0; i < this->builds_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->builds(i));
  }

  // repeated .ProtoUser.EquipmentStarCPP equipstar = 4;
  total_size += 1 * this->equipstar_size();
  for (int i = 0; i < this->equipstar_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->equipstar(i));
  }

  // repeated .ProtoUser.CropLandCPP cropland = 5;
  total_size += 1 * this->cropland_size();
  for (int i = 0; i < this->cropland_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->cropland(i));
  }

  // repeated .ProtoUser.ProduceEquipCPP equipments = 6;
  total_size += 1 * this->equipments_size();
  for (int i = 0; i < this->equipments_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->equipments(i));
  }

  // repeated .ProtoUser.FruitCPP fruits = 7;
  total_size += 1 * this->fruits_size();
  for (int i = 0; i < this->fruits_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->fruits(i));
  }

  // repeated .ProtoUser.PropsItemCPP item = 8;
  total_size += 1 * this->item_size();
  for (int i = 0; i < this->item_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->item(i));
  }

  // repeated .ProtoUser.AnimalCPP animals = 9;
  total_size += 1 * this->animals_size();
  for (int i = 0; i < this->animals_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->animals(i));
  }

  // repeated .ProtoUser.OrderCPP orders = 10;
  total_size += 1 * this->orders_size();
  for (int i = 0; i < this->orders_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->orders(i));
  }

  // repeated .ProtoUser.ShippingBoxCPP shipboxes = 13;
  total_size += 1 * this->shipboxes_size();
  for (int i = 0; i < this->shipboxes_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->shipboxes(i));
  }

  // repeated .ProtoUser.ShopCPP shop = 14;
  total_size += 1 * this->shop_size();
  for (int i = 0; i < this->shop_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->shop(i));
  }

  // repeated .ProtoUser.TaskCPP task = 15;
  total_size += 1 * this->task_size();
  for (int i = 0; i < this->task_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->task(i));
  }

  // repeated .ProtoUser.MissionCPP mission = 16;
  total_size += 2 * this->mission_size();
  for (int i = 0; i < this->mission_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->mission(i));
  }

  // repeated .ProtoUser.ActivityCPP activity = 17;
  total_size += 2 * this->activity_size();
  for (int i = 0; i < this->activity_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->activity(i));
  }

  // repeated .ProtoUser.MaidDogCPP maildog = 18;
  total_size += 2 * this->maildog_size();
  for (int i = 0; i < this->maildog_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->maildog(i));
  }

  // repeated .ProtoUser.FriendlyTreeBasicCPP friendlytree = 19;
  total_size += 2 * this->friendlytree_size();
  for (int i = 0; i < this->friendlytree_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->friendlytree(i));
  }

  // repeated .ProtoUser.ShopSellCoinCPP shopsellcoin = 20;
  total_size += 2 * this->shopsellcoin_size();
  for (int i = 0; i < this->shopsellcoin_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->shopsellcoin(i));
  }

  // repeated .ProtoUser.FriendWorkerCPP friendworker = 21;
  total_size += 2 * this->friendworker_size();
  for (int i = 0; i < this->friendworker_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->friendworker(i));
  }

  // repeated .ProtoUser.UnlockPetCPP pet = 22;
  total_size += 2 * this->pet_size();
  for (int i = 0; i < this->pet_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->pet(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UserData::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const UserData* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const UserData*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void UserData::MergeFrom(const UserData& from) {
  GOOGLE_CHECK_NE(&from, this);
  charges_.MergeFrom(from.charges_);
  builds_.MergeFrom(from.builds_);
  equipstar_.MergeFrom(from.equipstar_);
  cropland_.MergeFrom(from.cropland_);
  equipments_.MergeFrom(from.equipments_);
  fruits_.MergeFrom(from.fruits_);
  item_.MergeFrom(from.item_);
  animals_.MergeFrom(from.animals_);
  orders_.MergeFrom(from.orders_);
  shipboxes_.MergeFrom(from.shipboxes_);
  shop_.MergeFrom(from.shop_);
  task_.MergeFrom(from.task_);
  mission_.MergeFrom(from.mission_);
  activity_.MergeFrom(from.activity_);
  maildog_.MergeFrom(from.maildog_);
  friendlytree_.MergeFrom(from.friendlytree_);
  shopsellcoin_.MergeFrom(from.shopsellcoin_);
  friendworker_.MergeFrom(from.friendworker_);
  pet_.MergeFrom(from.pet_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_base()) {
      mutable_base()->::ProtoUser::Base::MergeFrom(from.base());
    }
  }
  if (from._has_bits_[10 / 32] & (0xffu << (10 % 32))) {
    if (from.has_truck()) {
      mutable_truck()->::ProtoUser::TruckCPP::MergeFrom(from.truck());
    }
    if (from.has_shipping()) {
      mutable_shipping()->::ProtoUser::ShippingCPP::MergeFrom(from.shipping());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void UserData::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UserData::CopyFrom(const UserData& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserData::IsInitialized() const {

  if (has_base()) {
    if (!this->base().IsInitialized()) return false;
  }
  if (!::google::protobuf::internal::AllAreInitialized(this->charges())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->builds())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->equipstar())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->cropland())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->equipments())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->fruits())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->item())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->animals())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->orders())) return false;
  if (has_truck()) {
    if (!this->truck().IsInitialized()) return false;
  }
  if (has_shipping()) {
    if (!this->shipping().IsInitialized()) return false;
  }
  if (!::google::protobuf::internal::AllAreInitialized(this->shipboxes())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->shop())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->task())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->mission())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->activity())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->maildog())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->friendlytree())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->shopsellcoin())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->friendworker())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->pet())) return false;
  return true;
}

void UserData::Swap(UserData* other) {
  if (other != this) {
    std::swap(base_, other->base_);
    charges_.Swap(&other->charges_);
    builds_.Swap(&other->builds_);
    equipstar_.Swap(&other->equipstar_);
    cropland_.Swap(&other->cropland_);
    equipments_.Swap(&other->equipments_);
    fruits_.Swap(&other->fruits_);
    item_.Swap(&other->item_);
    animals_.Swap(&other->animals_);
    orders_.Swap(&other->orders_);
    std::swap(truck_, other->truck_);
    std::swap(shipping_, other->shipping_);
    shipboxes_.Swap(&other->shipboxes_);
    shop_.Swap(&other->shop_);
    task_.Swap(&other->task_);
    mission_.Swap(&other->mission_);
    activity_.Swap(&other->activity_);
    maildog_.Swap(&other->maildog_);
    friendlytree_.Swap(&other->friendlytree_);
    shopsellcoin_.Swap(&other->shopsellcoin_);
    friendworker_.Swap(&other->friendworker_);
    pet_.Swap(&other->pet_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata UserData::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UserData_descriptor_;
  metadata.reflection = UserData_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ImportReq::kUidFieldNumber;
const int ImportReq::kDataFieldNumber;
#endif  // !_MSC_VER

ImportReq::ImportReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoArchive.ImportReq)
}

void ImportReq::InitAsDefaultInstance() {
  data_ = const_cast< ::ProtoArchive::UserData*>(&::ProtoArchive::UserData::default_instance());
}

ImportReq::ImportReq(const ImportReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ProtoArchive.ImportReq)
}

void ImportReq::SharedCtor() {
  _cached_size_ = 0;
  uid_ = 0u;
  data_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ImportReq::~ImportReq() {
  // @@protoc_insertion_point(destructor:ProtoArchive.ImportReq)
  SharedDtor();
}

void ImportReq::SharedDtor() {
  if (this != default_instance_) {
    delete data_;
  }
}

void ImportReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ImportReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ImportReq_descriptor_;
}

const ImportReq& ImportReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoArchive_2eproto();
  return *default_instance_;
}

ImportReq* ImportReq::default_instance_ = NULL;

ImportReq* ImportReq::New() const {
  return new ImportReq;
}

void ImportReq::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    uid_ = 0u;
    if (has_data()) {
      if (data_ != NULL) data_->::ProtoArchive::UserData::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ImportReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoArchive.ImportReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 uid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uid_)));
          set_has_uid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_data;
        break;
      }

      // required .ProtoArchive.UserData data = 2;
      case 2: {
        if (tag == 18) {
         parse_data:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_data()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoArchive.ImportReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoArchive.ImportReq)
  return false;
#undef DO_
}

void ImportReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoArchive.ImportReq)
  // required uint32 uid = 1;
  if (has_uid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->uid(), output);
  }

  // required .ProtoArchive.UserData data = 2;
  if (has_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->data(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoArchive.ImportReq)
}

::google::protobuf::uint8* ImportReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoArchive.ImportReq)
  // required uint32 uid = 1;
  if (has_uid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->uid(), target);
  }

  // required .ProtoArchive.UserData data = 2;
  if (has_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->data(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoArchive.ImportReq)
  return target;
}

int ImportReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 uid = 1;
    if (has_uid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->uid());
    }

    // required .ProtoArchive.UserData data = 2;
    if (has_data()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->data());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ImportReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ImportReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ImportReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ImportReq::MergeFrom(const ImportReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_uid()) {
      set_uid(from.uid());
    }
    if (from.has_data()) {
      mutable_data()->::ProtoArchive::UserData::MergeFrom(from.data());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ImportReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ImportReq::CopyFrom(const ImportReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ImportReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  if (has_data()) {
    if (!this->data().IsInitialized()) return false;
  }
  return true;
}

void ImportReq::Swap(ImportReq* other) {
  if (other != this) {
    std::swap(uid_, other->uid_);
    std::swap(data_, other->data_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ImportReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ImportReq_descriptor_;
  metadata.reflection = ImportReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ImportResp::kErrMsgFieldNumber;
#endif  // !_MSC_VER

ImportResp::ImportResp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoArchive.ImportResp)
}

void ImportResp::InitAsDefaultInstance() {
}

ImportResp::ImportResp(const ImportResp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ProtoArchive.ImportResp)
}

void ImportResp::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  err_msg_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ImportResp::~ImportResp() {
  // @@protoc_insertion_point(destructor:ProtoArchive.ImportResp)
  SharedDtor();
}

void ImportResp::SharedDtor() {
  if (err_msg_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete err_msg_;
  }
  if (this != default_instance_) {
  }
}

void ImportResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ImportResp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ImportResp_descriptor_;
}

const ImportResp& ImportResp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoArchive_2eproto();
  return *default_instance_;
}

ImportResp* ImportResp::default_instance_ = NULL;

ImportResp* ImportResp::New() const {
  return new ImportResp;
}

void ImportResp::Clear() {
  if (has_err_msg()) {
    if (err_msg_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
      err_msg_->clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ImportResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoArchive.ImportResp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes err_msg = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_err_msg()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoArchive.ImportResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoArchive.ImportResp)
  return false;
#undef DO_
}

void ImportResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoArchive.ImportResp)
  // optional bytes err_msg = 1;
  if (has_err_msg()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->err_msg(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoArchive.ImportResp)
}

::google::protobuf::uint8* ImportResp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoArchive.ImportResp)
  // optional bytes err_msg = 1;
  if (has_err_msg()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->err_msg(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoArchive.ImportResp)
  return target;
}

int ImportResp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional bytes err_msg = 1;
    if (has_err_msg()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->err_msg());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ImportResp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ImportResp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ImportResp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ImportResp::MergeFrom(const ImportResp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_err_msg()) {
      set_err_msg(from.err_msg());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ImportResp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ImportResp::CopyFrom(const ImportResp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ImportResp::IsInitialized() const {

  return true;
}

void ImportResp::Swap(ImportResp* other) {
  if (other != this) {
    std::swap(err_msg_, other->err_msg_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ImportResp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ImportResp_descriptor_;
  metadata.reflection = ImportResp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ExportReq::kUidFieldNumber;
#endif  // !_MSC_VER

ExportReq::ExportReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoArchive.ExportReq)
}

void ExportReq::InitAsDefaultInstance() {
}

ExportReq::ExportReq(const ExportReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ProtoArchive.ExportReq)
}

void ExportReq::SharedCtor() {
  _cached_size_ = 0;
  uid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ExportReq::~ExportReq() {
  // @@protoc_insertion_point(destructor:ProtoArchive.ExportReq)
  SharedDtor();
}

void ExportReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ExportReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ExportReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ExportReq_descriptor_;
}

const ExportReq& ExportReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoArchive_2eproto();
  return *default_instance_;
}

ExportReq* ExportReq::default_instance_ = NULL;

ExportReq* ExportReq::New() const {
  return new ExportReq;
}

void ExportReq::Clear() {
  uid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ExportReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoArchive.ExportReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 uid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uid_)));
          set_has_uid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoArchive.ExportReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoArchive.ExportReq)
  return false;
#undef DO_
}

void ExportReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoArchive.ExportReq)
  // required uint32 uid = 1;
  if (has_uid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->uid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoArchive.ExportReq)
}

::google::protobuf::uint8* ExportReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoArchive.ExportReq)
  // required uint32 uid = 1;
  if (has_uid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->uid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoArchive.ExportReq)
  return target;
}

int ExportReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 uid = 1;
    if (has_uid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->uid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ExportReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ExportReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ExportReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ExportReq::MergeFrom(const ExportReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_uid()) {
      set_uid(from.uid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ExportReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ExportReq::CopyFrom(const ExportReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ExportReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void ExportReq::Swap(ExportReq* other) {
  if (other != this) {
    std::swap(uid_, other->uid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ExportReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ExportReq_descriptor_;
  metadata.reflection = ExportReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ExportResp::kDataFieldNumber;
const int ExportResp::kErrMsgFieldNumber;
#endif  // !_MSC_VER

ExportResp::ExportResp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoArchive.ExportResp)
}

void ExportResp::InitAsDefaultInstance() {
  data_ = const_cast< ::ProtoArchive::UserData*>(&::ProtoArchive::UserData::default_instance());
}

ExportResp::ExportResp(const ExportResp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ProtoArchive.ExportResp)
}

void ExportResp::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_ = NULL;
  err_msg_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ExportResp::~ExportResp() {
  // @@protoc_insertion_point(destructor:ProtoArchive.ExportResp)
  SharedDtor();
}

void ExportResp::SharedDtor() {
  if (err_msg_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete err_msg_;
  }
  if (this != default_instance_) {
    delete data_;
  }
}

void ExportResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ExportResp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ExportResp_descriptor_;
}

const ExportResp& ExportResp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoArchive_2eproto();
  return *default_instance_;
}

ExportResp* ExportResp::default_instance_ = NULL;

ExportResp* ExportResp::New() const {
  return new ExportResp;
}

void ExportResp::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    if (has_data()) {
      if (data_ != NULL) data_->::ProtoArchive::UserData::Clear();
    }
    if (has_err_msg()) {
      if (err_msg_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        err_msg_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ExportResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoArchive.ExportResp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .ProtoArchive.UserData data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_data()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_err_msg;
        break;
      }

      // optional string err_msg = 2;
      case 2: {
        if (tag == 18) {
         parse_err_msg:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_err_msg()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->err_msg().data(), this->err_msg().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "err_msg");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoArchive.ExportResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoArchive.ExportResp)
  return false;
#undef DO_
}

void ExportResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoArchive.ExportResp)
  // optional .ProtoArchive.UserData data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->data(), output);
  }

  // optional string err_msg = 2;
  if (has_err_msg()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->err_msg().data(), this->err_msg().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "err_msg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->err_msg(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoArchive.ExportResp)
}

::google::protobuf::uint8* ExportResp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoArchive.ExportResp)
  // optional .ProtoArchive.UserData data = 1;
  if (has_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->data(), target);
  }

  // optional string err_msg = 2;
  if (has_err_msg()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->err_msg().data(), this->err_msg().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "err_msg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->err_msg(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoArchive.ExportResp)
  return target;
}

int ExportResp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .ProtoArchive.UserData data = 1;
    if (has_data()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->data());
    }

    // optional string err_msg = 2;
    if (has_err_msg()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->err_msg());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ExportResp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ExportResp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ExportResp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ExportResp::MergeFrom(const ExportResp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      mutable_data()->::ProtoArchive::UserData::MergeFrom(from.data());
    }
    if (from.has_err_msg()) {
      set_err_msg(from.err_msg());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ExportResp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ExportResp::CopyFrom(const ExportResp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ExportResp::IsInitialized() const {

  if (has_data()) {
    if (!this->data().IsInitialized()) return false;
  }
  return true;
}

void ExportResp::Swap(ExportResp* other) {
  if (other != this) {
    std::swap(data_, other->data_);
    std::swap(err_msg_, other->err_msg_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ExportResp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ExportResp_descriptor_;
  metadata.reflection = ExportResp_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace ProtoArchive

// @@protoc_insertion_point(global_scope)
